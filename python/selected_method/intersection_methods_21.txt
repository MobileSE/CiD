<android.webkit.WebViewProvider.ViewDelegate: void onWindowFocusChanged(boolean)>
<com.android.internal.telecom.IVideoProvider: void setDisplaySurface(android.view.Surface)>
<android.os.Debug.InstructionCount: boolean collect()>
<android.os.PersistableBundle: void <init>(android.os.PersistableBundle)>
<android.hardware.display.DisplayManagerGlobal: android.hardware.display.VirtualDisplay createVirtualDisplay(android.content.Context,android.media.projection.MediaProjection,java.lang.String,int,int,int,android.view.Surface,int,android.hardware.display.VirtualDisplay.Callback,android.os.Handler)>
<android.graphics.Movie: void finalize()>
<android.renderscript.Byte3: byte get(int)>
<android.widget.RadialTimePickerView: void setOnValueSelectedListener(android.widget.RadialTimePickerView.OnValueSelectedListener)>
<android.view.View: java.util.ArrayList getFocusables(int)>
<android.location.Country: java.lang.String toString()>
<android.util.Spline.MonotoneCubicSpline: java.lang.String toString()>
<android.webkit.WebSettings: void setUseWideViewPort(boolean)>
<android.os.storage.StorageManager: java.lang.String getVolumeState(java.lang.String)>
<android.widget.AbsSpinner: int pointToPosition(int,int)>
<android.filterpacks.videosink.MediaEncoderFilter: void <init>(java.lang.String)>
<android.app.IApplicationThread: void scheduleWindowVisibility(android.os.IBinder,boolean)>
<android.app.FragmentManager.BackStackEntry: int getId()>
<android.view.LayoutInflater.Factory2: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>
<com.android.internal.widget.LockPatternUtils: void setEnabledTrustAgents(java.util.Collection,int)>
<android.view.ViewGroup: boolean onInterceptHoverEvent(android.view.MotionEvent)>
<android.telephony.TelephonyManager: java.lang.String getVoiceMailAlphaTag()>
<android.media.MediaExtractor: android.media.MediaFormat getTrackFormat(int)>
<android.telephony.CellSignalStrengthLte: int describeContents()>
<android.view.View: int getScrollBarSize()>
<android.filterfw.io.TextGraphReader: android.filterfw.core.KeyValueMap readKeyValueAssignments(java.lang.String)>
<android.opengl.GLES30: void glDeleteSamplers(int,int[],int)>
<android.media.MediaPlayer: void release()>
<android.media.tv.TvContract: boolean isChannelUri(android.net.Uri)>
<android.app.job.JobInfo.Builder: void <init>(int,android.content.ComponentName)>
<android.telecom.VideoProfile: void <init>(int,int)>
<android.graphics.drawable.RotateDrawable: void setTintList(android.content.res.ColorStateList)>
<android.database.BulkCursorToCursorAdaptor: void deactivate()>
<android.view.View: void hackTurnOffWindowResizeAnim(boolean)>
<android.content.pm.PackageManager: boolean isSafeMode()>
<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getDeviceSvn()>
<android.app.Activity: void onActivityReenter(int,android.content.Intent)>
<android.app.MediaRouteActionProvider: void <init>(android.content.Context)>
<android.filterfw.core.SimpleFrameManager: android.filterfw.core.Frame newFrame(android.filterfw.core.FrameFormat)>
<android.widget.ActionMenuView: android.widget.ActionMenuView.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>
<com.android.internal.app.ToolbarActionBar: boolean invalidateOptionsMenu()>
<android.nfc.NfcAdapter: android.nfc.INfcCardEmulation getCardEmulationService()>
<android.animation.FloatEvaluator: java.lang.Float evaluate(float,java.lang.Number,java.lang.Number)>
<android.app.IActivityManager: int getPackageScreenCompatMode(java.lang.String)>
<com.android.internal.widget.ActionBarContextView: void closeMode()>
<android.mtp.MtpDevice: int getDeviceId()>
<android.graphics.drawable.RippleDrawable: void setHotspotBounds(int,int,int,int)>
<android.speech.tts.TextToSpeech: int setSpeechRate(float)>
<android.telecom.PhoneAccountHandle: void <init>(android.content.ComponentName,java.lang.String)>
<android.animation.TimeAnimator: void setTimeListener(android.animation.TimeAnimator.TimeListener)>
<android.view.WindowManagerPolicy: void notifyCameraLensCoverSwitchChanged(long,boolean)>
<android.os.Registrant: void notifyRegistrant(android.os.AsyncResult)>
<android.app.PendingIntent: android.app.PendingIntent getActivityAsUser(android.content.Context,int,android.content.Intent,int,android.os.Bundle,android.os.UserHandle)>
<android.view.Window: boolean performPanelShortcut(int,int,android.view.KeyEvent,int)>
<android.opengl.GLES11: void glDeleteBuffers(int,java.nio.IntBuffer)>
<com.android.internal.app.ResolverActivity: android.content.Intent getReplacementIntent(java.lang.String,android.content.Intent)>
<android.net.http.DelegatingSSLSession: void putValue(java.lang.String,java.lang.Object)>
<android.app.LoaderManager.LoaderCallbacks: void onLoaderReset(android.content.Loader)>
<android.widget.CalendarView.CalendarViewDelegate: int getWeekSeparatorLineColor()>
<android.os.SELinux: boolean setFileContext(java.lang.String,java.lang.String)>
<android.view.ViewParent: void requestChildFocus(android.view.View,android.view.View)>
<android.service.notification.NotificationListenerService: void onNotificationRankingUpdate(android.service.notification.NotificationListenerService.RankingMap)>
<android.net.http.DelegatingSSLSession: long getCreationTime()>
<android.media.MediaRouter.UserRouteInfo: void setVolumeHandling(int)>
<android.app.ActionBar.Tab: android.app.ActionBar.Tab setText(int)>
<android.print.IPrintManager: java.util.List getInstalledPrintServices(int)>
<android.net.wifi.WifiManager: java.util.List getScanResults()>
<android.net.NetworkTemplate: boolean matches(android.net.NetworkIdentity)>
<android.nfc.cardemulation.ApduServiceInfo: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setNegativeButton(int,android.content.DialogInterface.OnClickListener)>
<android.net.RouteInfo: void <init>(android.net.LinkAddress)>
<android.view.DisplayInfo: void getAppMetrics(android.util.DisplayMetrics,android.content.res.CompatibilityInfo,android.os.IBinder)>
<android.media.MediaPlayer: void setSubtitleAnchor(android.media.SubtitleController,android.media.SubtitleController.Anchor)>
<android.widget.AbsListView: void setChoiceMode(int)>
<com.android.internal.app.IBatteryStats: void noteFullWifiLockAcquiredFromSource(android.os.WorkSource)>
<android.view.accessibility.AccessibilityWindowInfo: void setId(int)>
<com.android.internal.os.BatteryStatsImpl: void noteLowPowerMode(boolean)>
<android.view.IWindowId: void unregisterFocusObserver(android.view.IWindowFocusObserver)>
<android.media.audiofx.NoiseSuppressor: android.media.audiofx.NoiseSuppressor create(int)>
<com.android.internal.telecom.ITelecomService: void setUserSelectedOutgoingPhoneAccount(android.telecom.PhoneAccountHandle)>
<android.content.CursorLoader: java.lang.String[] getProjection()>
<android.media.tv.TvInputService.Session: boolean onTune(android.net.Uri)>
<android.speech.tts.ITextToSpeechService: void setCallback(android.os.IBinder,android.speech.tts.ITextToSpeechCallback)>
<com.android.internal.os.BatteryStatsImpl.Uid: void noteWifiMulticastEnabledLocked(long)>
<android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivityAsUser(android.content.Intent,int,int)>
<android.widget.TextView: void onFinishTemporaryDetach()>
<android.database.DatabaseUtils: void readExceptionWithFileNotFoundExceptionFromParcel(android.os.Parcel)>
<android.inputmethodservice.KeyboardView: boolean isShifted()>
<android.drm.DrmRights: byte[] getData()>
<android.app.IActivityManager: int[] getRunningUserIds()>
<android.hardware.hdmi.HdmiDeviceInfo: int describeContents()>
<android.webkit.CacheManager: boolean startCacheTransaction()>
<android.widget.CheckedTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.opengl.GLES20: void glDeleteRenderbuffers(int,java.nio.IntBuffer)>
<android.widget.TextView: float getLineSpacingExtra()>
<android.database.AbstractWindowedCursor: boolean isLong(int)>
<com.google.android.util.AbstractMessageParser.FlickrPhoto: java.lang.String getUserTagsURL(java.lang.String,java.lang.String)>
<android.graphics.drawable.RotateDrawable: void setTintMode(android.graphics.PorterDuff.Mode)>
<android.text.method.BaseMovementMethod: boolean scrollUp(android.widget.TextView,android.text.Spannable,int)>
<android.os.ParcelFileDescriptor: void finalize()>
<com.android.internal.http.multipart.Part: void sendParts(java.io.OutputStream,com.android.internal.http.multipart.Part[])>
<com.android.internal.widget.DecorToolbar: int getDropdownItemCount()>
<android.content.ServiceConnection: void onServiceDisconnected(android.content.ComponentName)>
<android.preference.PreferenceActivity: void addPreferencesFromIntent(android.content.Intent)>
<android.bluetooth.IBluetooth: java.lang.String getRemoteAlias(android.bluetooth.BluetoothDevice)>
<android.widget.RemoteViews: void setScrollPosition(int,int)>
<com.google.android.gles_jni.GLImpl: void glGetMaterialfv(int,int,java.nio.FloatBuffer)>
<com.android.internal.net.VpnConfig: void writeToParcel(android.os.Parcel,int)>
<android.view.WindowManagerPolicy: int getNonDecorDisplayWidth(int,int,int)>
<android.telecom.PhoneAccount.Builder: android.telecom.PhoneAccount.Builder setSupportedUriSchemes(java.util.List)>
<android.os.CommonClock.OnTimelineChangedListener: void onTimelineChanged(long)>
<com.android.internal.widget.ActionBarOverlayLayout: void onDetachedFromWindow()>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofMultiFloat(java.lang.String,float[][])>
<android.provider.MediaStore.Images.Media: java.lang.String insertImage(android.content.ContentResolver,android.graphics.Bitmap,java.lang.String,java.lang.String)>
<com.android.internal.app.LocalePicker: android.widget.ArrayAdapter constructAdapter(android.content.Context)>
<android.app.PendingIntent: void writePendingIntentOrNullToParcel(android.app.PendingIntent,android.os.Parcel)>
<android.app.backup.RestoreObserver: void onUpdate(int,java.lang.String)>
<android.bluetooth.IBluetoothHeadset: boolean setPriority(android.bluetooth.BluetoothDevice,int)>
<android.accounts.IAccountManager: void setPassword(android.accounts.Account,java.lang.String)>
<android.preference.TwoStatePreference: void setSummaryOff(java.lang.CharSequence)>
<android.app.Notification.InboxStyle: void populateBigContentView(android.app.Notification)>
<com.google.android.gles_jni.GLImpl: void glDeleteBuffers(int,java.nio.IntBuffer)>
<android.view.inputmethod.InputMethodSubtype: java.lang.String getMode()>
<android.telecom.Connection: int getCallerDisplayNamePresentation()>
<android.preference.Preference: void setEnabled(boolean)>
<android.view.ViewPropertyAnimator: void start()>
<android.media.AudioManager: void unregisterMediaButtonIntent(android.app.PendingIntent)>
<android.media.MediaCodecInfo.AudioCapabilities: void setDefaultFormat(android.media.MediaFormat)>
<android.graphics.drawable.ShapeDrawable: boolean getPadding(android.graphics.Rect)>
<com.android.internal.telecom.IConnectionService: void conference(java.lang.String,java.lang.String)>
<android.os.PatternMatcher: java.lang.String getPath()>
<android.media.MediaRecorder: void setVideoFrameRate(int)>
<android.opengl.GLES10: void glLineWidth(float)>
<android.telephony.ServiceState: int getCdmaRoamingIndicator()>
<android.text.Spanned: int getSpanEnd(java.lang.Object)>
<android.app.Activity: void startManagingCursor(android.database.Cursor)>
<android.view.accessibility.AccessibilityRecord: boolean isChecked()>
<android.widget.Gallery: void onLayout(boolean,int,int,int,int)>
<android.webkit.WebSettings: void setLightTouchEnabled(boolean)>
<android.filterfw.format.PrimitiveFormat: android.filterfw.core.MutableFrameFormat createFloatFormat(int)>
<android.webkit.CookieManager: void flush()>
<android.media.MediaRouter.RouteInfo: java.lang.CharSequence getStatus()>
<android.gesture.GestureOverlayView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.service.notification.NotificationListenerService: android.service.notification.StatusBarNotification[] getActiveNotifications(java.lang.String[],int)>
<android.content.ContentProviderOperation.Builder: android.content.ContentProviderOperation.Builder withExpectedCount(int)>
<android.renderscript.ProgramStore: boolean isDepthMaskEnabled()>
<android.content.UndoManager: int getUpdateNestingLevel()>
<com.android.internal.statusbar.IStatusBar: void animateExpandSettingsPanel()>
<android.hardware.camera2.CaptureRequest: java.lang.Object get(android.hardware.camera2.CaptureRequest.Key)>
<android.app.IActivityManager: int startVoiceActivity(java.lang.String,int,int,android.content.Intent,java.lang.String,android.service.voice.IVoiceInteractionSession,com.android.internal.app.IVoiceInteractor,int,android.app.ProfilerInfo,android.os.Bundle,int)>
<android.renderscript.Int4: android.renderscript.Int4 mod(android.renderscript.Int4,android.renderscript.Int4)>
<com.android.internal.view.menu.MenuBuilder: boolean performItemAction(android.view.MenuItem,com.android.internal.view.menu.MenuPresenter,int)>
<android.widget.ArrayAdapter: void setDropDownViewResource(int)>
<com.android.internal.os.BatteryStatsImpl.Uid.Proc: void addExcessiveWake(long,long)>
<android.widget.ListView: void onSizeChanged(int,int,int,int)>
<android.hardware.hdmi.HdmiDeviceInfo: int idForCecDevice(int)>
<android.media.tv.TvTrackInfo.Builder: android.media.tv.TvTrackInfo.Builder setAudioSampleRate(int)>
<com.android.internal.util.StateMachine: void log(java.lang.String)>
<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputBinding getCurrentInputBinding()>
<android.content.pm.PackageParser: android.content.pm.PackageParser.PackageLite parsePackageLite(java.io.File,int)>
<android.os.BinderProxy: boolean pingBinder()>
<android.view.SurfaceHolder.BadSurfaceTypeException: void <init>(java.lang.String)>
<android.content.BroadcastReceiver.PendingResult: int getResultCode()>
<com.android.internal.util.TypedProperties: long getLong(java.lang.String)>
<com.android.internal.widget.LockPatternUtils: void setWidgetsEnabled(boolean)>
<android.graphics.Canvas: void setDensity(int)>
<android.widget.DatePicker: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.view.View: void setStateListAnimator(android.animation.StateListAnimator)>
<com.google.android.gles_jni.GLImpl: void glGetRenderbufferParameterivOES(int,int,int[],int)>
<android.opengl.EGL14: boolean eglQuerySurface(android.opengl.EGLDisplay,android.opengl.EGLSurface,int,int[],int)>
<android.media.MediaFocusControl: boolean checkUpdateRemoteStateIfActive(int)>
<android.widget.ProgressBar: void setProgressBackgroundTintMode(android.graphics.PorterDuff.Mode)>
<android.app.ApplicationErrorReport.RunningServiceInfo: void <init>(android.os.Parcel)>
<android.hardware.camera2.utils.TaskDrainer: void <init>(android.os.Handler,android.hardware.camera2.utils.TaskDrainer.DrainListener,java.lang.String)>
<android.app.admin.IDevicePolicyManager: void setTrustAgentFeaturesEnabled(android.content.ComponentName,android.content.ComponentName,java.util.List,int)>
<android.filterpacks.imageproc.Invert: android.filterfw.core.Program getShaderProgram(android.filterfw.core.FilterContext)>
<android.bluetooth.IBluetoothHeadset: boolean rejectIncomingConnect(android.bluetooth.BluetoothDevice)>
<android.location.LocationProvider: boolean supportsBearing()>
<android.util.LogWriter: void write(char[],int,int)>
<android.os.BatteryStats: void prepareForDumpLocked()>
<android.media.AudioManager.OnAudioPortUpdateListener: void onAudioPortListUpdate(android.media.AudioPort[])>
<android.graphics.drawable.ClipDrawable: boolean isStateful()>
<android.opengl.GLES30: void glGenVertexArrays(int,int[],int)>
<android.widget.DatePicker.DatePickerDelegate: int getDayOfMonth()>
<com.android.internal.widget.SwipeDismissLayout.OnDismissedListener: void onDismissed(com.android.internal.widget.SwipeDismissLayout)>
<com.android.internal.inputmethod.InputMethodUtils.InputMethodSettings: java.lang.String getDisabledSystemInputMethods()>
<android.view.MotionEvent: int getPointerIdBits()>
<android.view.View: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>
<android.telephony.PhoneNumberUtils: void formatNumber(android.text.Editable,int)>
<android.app.AlertDialog: void setIconAttribute(int)>
<com.android.internal.os.BatteryStatsImpl: int getHistoryStringPoolSize()>
<android.opengl.GLES31: void glBindProgramPipeline(int)>
<android.animation.ValueAnimator: void setDurationScale(float)>
<com.android.internal.os.BatteryStatsImpl: void noteWifiRssiChangedLocked(int)>
<android.filterfw.core.NativeFrame: void setBitmap(android.graphics.Bitmap)>
<android.net.http.DelegatingSSLSession: java.lang.String[] getValueNames()>
<android.media.IAudioService: int getVibrateSetting(int)>
<android.text.style.DrawableMarginSpan: void chooseHeight(java.lang.CharSequence,int,int,int,int,android.graphics.Paint.FontMetricsInt)>
<com.android.internal.view.StandaloneActionMode: android.view.Menu getMenu()>
<android.widget.AutoCompleteTextView: int getThreshold()>
<android.bluetooth.IBluetooth: void getActivityEnergyInfoFromController()>
<android.app.ActivityOptions: int getAnimationType()>
<com.android.internal.content.SelectionBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[],java.lang.String)>
<android.hardware.camera2.legacy.ParameterUtils: java.util.List getAvailableZoomCropRectangles(android.hardware.Camera.Parameters,android.graphics.Rect)>
<android.widget.ImageView: boolean isOpaque()>
<android.filterpacks.imageproc.AutoFixFilter: void process(android.filterfw.core.FilterContext)>
<android.inputmethodservice.InputMethodService.InputMethodSessionImpl: void updateCursorAnchorInfo(android.view.inputmethod.CursorAnchorInfo)>
<android.graphics.drawable.GradientDrawable: android.graphics.ColorFilter getColorFilter()>
<android.view.accessibility.AccessibilityNodeInfo: void setCheckable(boolean)>
<android.content.IntentSender: android.content.IntentSender readIntentSenderOrNullFromParcel(android.os.Parcel)>
<android.view.KeyEvent: java.lang.String toString()>
<android.view.LayoutInflater: void setFactory2(android.view.LayoutInflater.Factory2)>
<android.inputmethodservice.InputMethodService: boolean onEvaluateFullscreenMode()>
<android.view.ViewTreeObserver: void removeOnGlobalFocusChangeListener(android.view.ViewTreeObserver.OnGlobalFocusChangeListener)>
<android.widget.HorizontalScrollView: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>
<android.os.FileUtils: long checksumCrc32(java.io.File)>
<android.speech.tts.ITextToSpeechCallback: void onSuccess(java.lang.String)>
<com.android.internal.view.BaseSurfaceHolder: void setSurfaceFrameSize(int,int)>
<android.util.ArrayMap: void putAll(java.util.Map)>
<com.android.internal.widget.ToolbarWidgetWrapper: boolean hasEmbeddedTabs()>
<android.renderscript.FieldPacker: float subF32()>
<android.hardware.location.GeofenceHardwareRequest: void setMonitorTransitions(int)>
<android.animation.LayoutTransition: void setDuration(int,long)>
<android.view.InputEventConsistencyVerifier: void onTrackballEvent(android.view.MotionEvent,int)>
<android.renderscript.Byte2: void div(android.renderscript.Byte2)>
<android.widget.SearchView: void <init>(android.content.Context)>
<com.android.internal.widget.WaveView: void onSizeChanged(int,int,int,int)>
<android.hardware.hdmi.IHdmiControlService: void addHotplugEventListener(android.hardware.hdmi.IHdmiHotplugEventListener)>
<android.view.accessibility.AccessibilityNodeInfo: void setFocused(boolean)>
<android.widget.AutoCompleteTextView: void onFilterComplete(int)>
<android.view.ViewRootImpl: void dispatchCloseSystemDialogs(java.lang.String)>
<android.net.http.X509TrustManagerExtensions: boolean isUserAddedCertificate(java.security.cert.X509Certificate)>
<android.renderscript.Short2: void mul(android.renderscript.Short2)>
<android.content.Context: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>
<com.android.internal.widget.ActionBarContextView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.view.ViewGroup: boolean onRequestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>
<android.opengl.GLES20: void glDeleteBuffers(int,int[],int)>
<android.renderscript.Element: android.renderscript.Element PROGRAM_RASTER(android.renderscript.RenderScript)>
<android.preference.PreferenceGroup: boolean isOrderingAsAdded()>
<android.media.SoundPool.SoundPoolDelegate: int load(java.lang.String,int)>
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: void setTransactionId(int)>
<android.inputmethodservice.InputMethodService: void setCandidatesView(android.view.View)>
<android.telecom.RemoteConnection.Callback: void onDestroyed(android.telecom.RemoteConnection)>
<android.widget.Spinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)>
<android.view.WindowId: void unregisterFocusObserver(android.view.WindowId.FocusObserver)>
<android.renderscript.Element: android.renderscript.Element MATRIX_4X4(android.renderscript.RenderScript)>
<android.content.IntentFilter: boolean matchAction(java.lang.String)>
<android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer: void <init>(int)>
<android.app.ApplicationThreadProxy: void scheduleSendResult(android.os.IBinder,java.util.List)>
<android.renderscript.Type.Builder: android.renderscript.Type.Builder setY(int)>
<android.media.AudioDevicePortConfig: android.media.AudioDevicePort port()>
<android.transition.Visibility: void forceVisibility(int,boolean)>
<android.filterpacks.videoproc.BackDropperFilter: void prepare(android.filterfw.core.FilterContext)>
<android.os.WorkSource: android.os.WorkSource addReturningNewbs(int)>
<android.filterfw.core.Filter: void initWithAssignmentList(java.lang.Object[])>
<android.net.SSLCertificateSocketFactory: byte[] getNpnSelectedProtocol(java.net.Socket)>
<android.view.WindowManagerPolicy: int rotationForOrientationLw(int,int)>
<android.telecom.ConnectionRequest: java.lang.String toString()>
<android.media.MediaFocusControl: int registerRemoteControlClient(android.app.PendingIntent,android.media.IRemoteControlClient,java.lang.String)>
<android.graphics.Insets: java.lang.String toString()>
<com.android.internal.app.IBatteryStats: void noteWifiScanStarted(int)>
<android.content.ContentResolver: void setMasterSyncAutomaticallyAsUser(boolean,int)>
<com.android.internal.telephony.SmsRawData: int describeContents()>
<android.widget.RemoteViews: void setViewPadding(int,int,int,int,int)>
<android.net.NetworkMisc: void <init>(android.net.NetworkMisc)>
<com.google.android.util.AbstractMessageParser.Video: boolean isHtml()>
<android.webkit.WebView.HitTestResult: int getType()>
<android.database.BulkCursorToCursorAdaptor: android.database.IContentObserver getObserver()>
<android.database.DatabaseUtils: void cursorDoubleToCursorValues(android.database.Cursor,java.lang.String,android.content.ContentValues)>
<android.webkit.WebView: android.webkit.WebViewProvider getWebViewProvider()>
<android.app.UiModeManager: int getCurrentModeType()>
<android.view.View: void removeOnAttachStateChangeListener(android.view.View.OnAttachStateChangeListener)>
<android.content.pm.PackageInstaller.SessionInfo: int describeContents()>
<android.util.LongSparseLongArray: void <init>(int)>
<com.android.internal.widget.DecorToolbar: void setIcon(int)>
<android.provider.ContactsContract.ProfileSyncState: android.util.Pair getWithUri(android.content.ContentProviderClient,android.accounts.Account)>
<android.bluetooth.BluetoothManager: void <init>(android.content.Context)>
<android.telephony.TelephonyManager: int getDataState()>
<android.text.DynamicLayout: boolean getLineContainsTab(int)>
<android.widget.ResourceCursorAdapter: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)>
<android.content.UriPermission: void <init>(android.os.Parcel)>
<android.location.GpsClock: boolean hasDriftInNsPerSec()>
<android.security.IKeyChainService: android.content.pm.ParceledListSlice getUserCaAliases()>
<android.view.View: void setOnFocusChangeListener(android.view.View.OnFocusChangeListener)>
<android.media.MediaDrm: void restoreKeys(byte[],byte[])>
<com.android.internal.content.PackageMonitor: int isPackageAppearing(java.lang.String)>
<android.telecom.TelecomManager: void acceptRingingCall()>
<android.widget.RadioGroup.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.internal.os.BatteryStatsImpl: int getLowPowerModeEnabledCount(int)>
<android.media.MediaExtractor: void setDataSource(java.io.FileDescriptor,long,long)>
<android.media.session.MediaController: boolean dispatchMediaButtonEvent(android.view.KeyEvent)>
<android.media.MediaPlayer: void addTimedTextSource(java.io.FileDescriptor,long,long,java.lang.String)>
<android.accounts.AuthenticatorException: void <init>(java.lang.Throwable)>
<android.media.audiofx.BassBoost: void <init>(int,int)>
<android.util.MonthDisplayHelper: void <init>(int,int,int)>
<android.text.method.TextKeyListener: void onSpanChanged(android.text.Spannable,java.lang.Object,int,int,int,int)>
<android.database.sqlite.SQLiteDatabase: boolean isReadOnly()>
<android.opengl.GLES10: void glScissor(int,int,int,int)>
<android.content.BroadcastReceiver: boolean getAbortBroadcast()>
<android.net.NetworkInfo: void setType(int)>
<android.media.SubtitleController: boolean hasRendererFor(android.media.MediaFormat)>
<android.content.BroadcastReceiver.PendingResult: void clearAbortBroadcast()>
<com.android.ims.internal.IImsUtListener: void utConfigurationQueryFailed(com.android.ims.internal.IImsUt,int,com.android.ims.ImsReasonInfo)>
<android.telephony.ServiceState: void setCdmaDefaultRoamingIndicator(int)>
<android.app.ActivityManager.TaskDescription: void restoreFromXml(java.lang.String,java.lang.String)>
<android.renderscript.Mesh.AllocationBuilder: int getCurrentIndexSetIndex()>
<android.app.admin.DevicePolicyManager: void clearCrossProfileIntentFilters(android.content.ComponentName)>
<android.view.animation.Animation.AnimationListener: void onAnimationRepeat(android.view.animation.Animation)>
<android.app.Dialog: int getVolumeControlStream()>
<android.util.SparseBooleanArray: void clear()>
<android.renderscript.Long4: long dotProduct(android.renderscript.Long4,android.renderscript.Long4)>
<com.android.internal.os.BatteryStatsImpl: void updateTimeBasesLocked(boolean,boolean,long,long)>
<android.gesture.GestureStore: void removeEntry(java.lang.String)>
<android.media.TextTrackCue: java.lang.String toString()>
<android.media.MediaFocusControl: int getRemoteStreamVolume()>
<android.net.Uri: android.net.Uri parse(java.lang.String)>
<android.telephony.TelephonyManager: boolean enableDataConnectivity()>
<android.renderscript.ScriptIntrinsicBlend: void forEachAdd(android.renderscript.Allocation,android.renderscript.Allocation)>
<android.app.admin.DevicePolicyManager: void setSecureSetting(android.content.ComponentName,java.lang.String,java.lang.String)>
<android.view.ViewRootImpl: void <init>(android.content.Context,android.view.Display)>
<android.view.MotionEvent: float getOrientation(int)>
<android.graphics.Bitmap: boolean hasMipMap()>
<android.opengl.EGL14: boolean eglWaitClient()>
<android.os.BatteryStats.Uid: boolean hasUserActivity()>
<android.database.AbstractCursor: int getColumnIndex(java.lang.String)>
<android.app.ActionBar.Tab: android.app.ActionBar.Tab setTabListener(android.app.ActionBar.TabListener)>
<android.animation.ValueAnimator: void setObjectValues(java.lang.Object[])>
<android.opengl.GLES10: int glGetError()>
<android.media.projection.IMediaProjectionManager: boolean hasProjectionPermission(int,java.lang.String)>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getValueSanitizer(java.lang.String)>
<android.view.accessibility.AccessibilityNodeInfo: java.util.List findAccessibilityNodeInfosByViewId(java.lang.String)>
<android.hardware.Camera.Parameters: int getMaxNumDetectedFaces()>
<android.os.Bundle: float getFloat(java.lang.String,float)>
<android.view.SurfaceControl: boolean getContentFrameStats(android.view.WindowContentFrameStats)>
<android.telephony.TelephonyManager: java.lang.String getNetworkTypeName(int)>
<android.media.AudioManager: int getRingerMode()>
<android.content.IntentFilter: boolean hasDataType(java.lang.String)>
<com.android.internal.view.menu.SubMenuBuilder: void setQwertyMode(boolean)>
<android.nfc.NfcAdapter: void setP2pModes(int,int)>
<android.text.style.TtsSpan.ElectronicBuilder: android.text.style.TtsSpan.ElectronicBuilder setFragmentId(java.lang.String)>
<android.util.LruCache: void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object)>
<android.database.StaleDataException: void <init>(java.lang.String)>
<android.view.View: void onOverScrolled(int,int,boolean,boolean)>
<android.preference.VolumePreference: void onSampleStarting(android.preference.SeekBarVolumizer)>
<android.telephony.PhoneStateListener: void <init>(long)>
<android.view.View: int getMeasuredHeight()>
<android.widget.AdapterView: android.widget.AdapterView.OnItemSelectedListener getOnItemSelectedListener()>
<android.os.CommonTimeConfig: void finalize()>
<android.net.wifi.IWifiManager: int getFrequencyBand()>
<android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>
<android.opengl.GLES30: void glGetSynciv(long,int,int,int[],int,int[],int)>
<android.webkit.WebViewProvider: void requestImageRef(android.os.Message)>
<android.app.FragmentManagerImpl: void addOnBackStackChangedListener(android.app.FragmentManager.OnBackStackChangedListener)>
<android.hardware.camera2.utils.UncheckedThrow: void throwAnyException(java.lang.Throwable)>
<android.media.AudioSystem: int setPhoneState(int)>
<android.hardware.Camera: void startSmoothZoom(int)>
<android.content.IContentProvider: int delete(java.lang.String,android.net.Uri,java.lang.String,java.lang.String[])>
<android.database.sqlite.SqliteWrapper: int update(android.content.Context,android.content.ContentResolver,android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<android.media.AsyncPlayer: void play(android.content.Context,android.net.Uri,boolean,int)>
<android.renderscript.Short2: void mod(android.renderscript.Short2)>
<android.view.inputmethod.InputConnection: boolean beginBatchEdit()>
<com.android.internal.os.BatteryStatsImpl: int getWifiSupplStateCount(int,int)>
<android.view.View: void setNestedScrollingEnabled(boolean)>
<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>
<android.content.ContentValues: int hashCode()>
<android.graphics.Paint: void setLetterSpacing(float)>
<android.telecom.Connection: void setCallerDisplayName(java.lang.String,int)>
<android.widget.OverScroller: int getDuration()>
<android.view.inputmethod.InputConnectionWrapper: boolean beginBatchEdit()>
<android.net.wifi.WifiScanner: void startBackgroundScan(android.net.wifi.WifiScanner.ScanSettings,android.net.wifi.WifiScanner.ScanListener)>
<android.view.Surface: void release()>
<android.content.RestrictionEntry: void setChoiceValues(android.content.Context,int)>
<android.renderscript.ScriptIntrinsicResize: android.renderscript.Script.FieldID getFieldID_Input()>
<android.net.Uri: java.lang.String toSafeString()>
<android.content.pm.PackageParser: boolean isApkFile(java.io.File)>
<android.location.Criteria: boolean isBearingRequired()>
<android.nfc.INfcTag: boolean canMakeReadOnly(int)>
<android.text.method.BaseMovementMethod: boolean scrollLineStart(android.widget.TextView,android.text.Spannable)>
<android.graphics.drawable.VectorDrawable: float getPixelSize()>
<android.widget.TextView: void append(java.lang.CharSequence)>
<android.hardware.camera2.CameraCaptureSession: android.hardware.camera2.CameraDevice getDevice()>
<android.app.FragmentManagerImpl: void putFragment(android.os.Bundle,java.lang.String,android.app.Fragment)>
<android.os.PerformanceCollector.PerformanceResultsWriter: void writeMeasurement(java.lang.String,java.lang.String)>
<android.app.backup.BackupTransport: long getCurrentRestoreSet()>
<android.telephony.PhoneNumberUtils: boolean isStartsPostDial(char)>
<android.graphics.drawable.RippleDrawable: void getHotspotBounds(android.graphics.Rect)>
<android.util.MonthDisplayHelper: boolean isWithinCurrentMonth(int,int)>
<android.database.CursorWindow: void <init>(boolean)>
<android.widget.TabWidget: void removeAllViews()>
<android.os.AsyncTask: void onProgressUpdate(java.lang.Object[])>
<android.telecom.RemoteConnection: void registerCallback(android.telecom.RemoteConnection.Callback)>
<android.gesture.Gesture: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.widget.multiwaveview.TargetDrawable: int getResourceId()>
<android.view.MotionEvent.PointerCoords: void clear()>
<android.app.ActivityManager.AppTask: android.app.ActivityManager.RecentTaskInfo getTaskInfo()>
<android.graphics.RectF: boolean intersect(float,float,float,float)>
<android.media.tv.TvInputManager.Session: java.util.List getTracks(int)>
<android.text.method.LinkMovementMethod: boolean down(android.widget.TextView,android.text.Spannable)>
<android.widget.AutoCompleteTextView: void onFocusChanged(boolean,int,android.graphics.Rect)>
<android.media.tv.TvView: void tune(java.lang.String,android.net.Uri,android.os.Bundle)>
<android.telephony.CellSignalStrengthGsm: void initialize(int,int)>
<android.graphics.RectF: void inset(float,float)>
<android.nfc.NfcAdapter: void setNdefPushMessageCallback(android.nfc.NfcAdapter.CreateNdefMessageCallback,android.app.Activity,int)>
<android.app.ActivityManagerProxy: void stopLockTaskMode()>
<android.net.wifi.WifiScanner.ParcelableScanResults: void <init>(android.net.wifi.ScanResult[])>
<android.service.textservice.SpellCheckerService.Session: void onClose()>
<android.media.SubtitleTrack: boolean addCue(android.media.SubtitleTrack.Cue)>
<android.view.ViewConfiguration: long getGlobalActionKeyTimeout()>
<android.app.NativeActivity: void surfaceDestroyed(android.view.SurfaceHolder)>
<android.media.audiofx.AcousticEchoCanceler: android.media.audiofx.AcousticEchoCanceler create(int)>
<android.app.IAlarmManager: void remove(android.app.PendingIntent)>
<android.renderscript.Int3: void div(android.renderscript.Int3)>
<android.provider.Settings.System: float getFloatForUser(android.content.ContentResolver,java.lang.String,int)>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setDuration(long)>
<android.widget.RemoteViews: void setByte(int,java.lang.String,byte)>
<android.appwidget.AppWidgetHost: android.appwidget.AppWidgetHostView onCreateView(android.content.Context,int,android.appwidget.AppWidgetProviderInfo)>
<android.opengl.GLES31Ext: java.lang.String glGetObjectPtrLabelKHR(long)>
<android.view.ViewRootImpl: android.view.ViewParent getParent()>
<android.filterfw.format.ObjectFormat: android.filterfw.core.MutableFrameFormat fromObject(java.lang.Object,int)>
<android.renderscript.Sampler: float getAnisotropy()>
<android.view.animation.CycleInterpolator: long createNativeInterpolator()>
<android.database.Cursor: void registerContentObserver(android.database.ContentObserver)>
<android.media.tv.TvInputInfo.TvInputSettings: void putCustomLabels(android.content.Context,java.util.Map,int)>
<android.view.View: void drawableHotspotChanged(float,float)>
<com.android.internal.backup.LocalTransport: void finishRestore()>
<android.widget.TwoLineListItem: void <init>(android.content.Context,android.util.AttributeSet)>
<android.filterpacks.imageproc.ContrastFilter: android.filterfw.core.Program getShaderProgram(android.filterfw.core.FilterContext)>
<android.database.BulkCursorProxy: android.database.CursorWindow getWindow(int)>
<android.net.wifi.p2p.WifiP2pDevice: void <init>(java.lang.String)>
<android.provider.Settings.Global: java.lang.String zenModeToString(int)>
<android.app.backup.IBackupManager: android.content.Intent getDataManagementIntent(java.lang.String)>
<android.ddm.DdmHandleViewDebug: void connected()>
<android.animation.AnimatorSet: void playSequentially(java.util.List)>
<android.widget.AdapterView: void addView(android.view.View)>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor fromData(byte[],java.lang.String)>
<android.provider.DocumentsContract: android.net.Uri buildDocumentUriUsingTree(android.net.Uri,java.lang.String)>
<android.opengl.GLES30: void glGetTransformFeedbackVarying(int,int,int,int[],int,int[],int,int[],int,byte[],int)>
<android.media.MediaRouter.RouteInfo: boolean isDefault()>
<android.os.Debug: void dumpHprofData(java.lang.String,java.io.FileDescriptor)>
<android.media.JetPlayer: boolean queueJetSegmentMuteArray(int,int,int,int,boolean[],byte)>
<android.service.dreams.DreamService: void addContentView(android.view.View,android.view.ViewGroup.LayoutParams)>
<android.app.FragmentManager: android.app.Fragment findFragmentByTag(java.lang.String)>
<android.hardware.location.GeofenceHardwareRequestParcelable: int getId()>
<android.widget.ActivityChooserModel.HistoricalRecord: void <init>(java.lang.String,long,float)>
<android.webkit.WebSettings: android.webkit.WebSettings.TextSize getTextSize()>
<android.net.wifi.IWifiManager: android.net.wifi.WifiConfiguration getWifiApConfiguration()>
<android.location.GpsMeasurement: long getReceivedGpsTowUncertaintyInNs()>
<com.google.android.collect.Sets: android.util.ArraySet newArraySet(java.lang.Object[])>
<android.content.Context: int getWallpaperDesiredMinimumHeight()>
<android.app.admin.DevicePolicyManager: int getPasswordQuality(android.content.ComponentName,int)>
<android.os.PatternMatcher: int getType()>
<android.view.View: boolean isHovered()>
<android.widget.AdapterView: void setFocusableInTouchMode(boolean)>
<android.opengl.GLES11: void glGetLightfv(int,int,java.nio.FloatBuffer)>
<android.net.Uri.Builder: android.net.Uri.Builder encodedFragment(java.lang.String)>
<android.graphics.Picture: void draw(android.graphics.Canvas)>
<android.media.IMediaHTTPConnection: long getSize()>
<android.app.FragmentTransaction: android.app.FragmentTransaction add(int,android.app.Fragment)>
<android.view.Choreographer: long getFrameDelay()>
<android.filterfw.core.VertexFrame: java.nio.ByteBuffer getData()>
<android.app.usage.IUsageStatsManager: android.content.pm.ParceledListSlice queryUsageStats(int,long,long,java.lang.String)>
<android.media.IMediaScannerService: void requestScanFile(java.lang.String,java.lang.String,android.media.IMediaScannerListener)>
<android.net.LinkProperties: boolean isProvisioned()>
<android.telecom.Conference: void removeConnection(android.telecom.Connection)>
<android.graphics.drawable.NinePatchDrawable: void <init>(android.content.res.Resources,android.graphics.NinePatch)>
<android.net.http.SslError: void <init>(int,java.security.cert.X509Certificate)>
<android.nfc.cardemulation.ApduServiceInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>
<android.widget.ListPopupWindow: void setForceIgnoreOutsideTouch(boolean)>
<com.android.internal.view.IInputMethodManager: boolean showSoftInput(com.android.internal.view.IInputMethodClient,int,android.os.ResultReceiver)>
<android.app.admin.IDevicePolicyManager: int getPasswordMinimumLength(android.content.ComponentName,int)>
<android.widget.Toolbar: void setPopupTheme(int)>
<com.android.server.NetworkManagementSocketTagger: int getThreadSocketStatsTag()>
<android.widget.AbsSpinner: void onRestoreInstanceState(android.os.Parcelable)>
<android.media.tv.ITvInputManager: void addBlockedRating(java.lang.String,int)>
<android.app.TaskStackBuilder: android.app.TaskStackBuilder addParentStack(java.lang.Class)>
<android.media.tv.ITvInputSessionCallback: void onChannelRetuned(android.net.Uri)>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setStartScrollBottom(boolean)>
<com.android.internal.policy.IKeyguardService: void onBootCompleted()>
<android.media.MediaRouter.RouteGroup: void removeRoute(int)>
<android.widget.RemoteViews: boolean onLoadClass(java.lang.Class)>
<android.preference.PreferenceActivity: void onRestoreInstanceState(android.os.Bundle)>
<android.widget.GridLayout: void setPrinter(android.util.Printer)>
<android.view.animation.LayoutAnimationController: int getOrder()>
<android.nfc.cardemulation.CardEmulation: boolean supportsAidPrefixRegistration()>
<android.os.UserManager: android.os.Bundle getApplicationRestrictions(java.lang.String)>
<android.text.Layout: int getHeight()>
<android.media.AudioManager.OnAudioPortUpdateListener: void onServiceDied()>
<android.util.SparseLongArray: void clear()>
<android.widget.AbsListView: int getRightPaddingOffset()>
<android.telecom.InCallAdapter: void holdCall(java.lang.String)>
<android.view.ViewGroup: boolean resolveRtlPropertiesIfNeeded()>
<android.os.Looper: void removeSyncBarrier(int)>
<com.android.internal.widget.ExploreByTouchHelper: void onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent)>
<android.app.AlarmManager: void set(int,long,long,long,android.app.PendingIntent,android.os.WorkSource)>
<android.location.Location: boolean hasAltitude()>
<android.text.Selection: boolean extendUp(android.text.Spannable,android.text.Layout)>
<android.content.pm.ResolveInfo: int getIconResource()>
<android.content.ContextWrapper: void startActivities(android.content.Intent[])>
<android.text.style.StyleSpan: int getStyle()>
<android.filterfw.core.KeyValueMap: void setKeyValues(java.lang.Object[])>
<com.android.internal.widget.PasswordEntryKeyboard: void <init>(android.content.Context,int,int)>
<android.inputmethodservice.InputMethodService.InputMethodSessionImpl: void updateCursor(android.graphics.Rect)>
<android.content.SyncRequest.Builder: android.content.SyncRequest.Builder setSyncAdapter(android.accounts.Account,java.lang.String)>
<android.graphics.Point: int hashCode()>
<android.text.format.Time: int getWeeksSinceEpochFromJulianDay(int,int)>
<android.preference.Preference: boolean isPersistent()>
<android.nfc.cardemulation.AidGroup: void writeToParcel(android.os.Parcel,int)>
<android.media.tv.TvInputHardwareInfo: void readFromParcel(android.os.Parcel)>
<android.telephony.TelephonyManager: void call(java.lang.String,java.lang.String)>
<com.android.internal.os.BatteryStatsImpl: void noteProcessStartLocked(java.lang.String,int)>
<android.graphics.pdf.PdfRenderer.Page: int getHeight()>
<android.widget.ActivityChooserView: void setOnDismissListener(android.widget.PopupWindow.OnDismissListener)>
<android.content.ContextWrapper: int checkCallingOrSelfUriPermission(android.net.Uri,int)>
<android.view.accessibility.AccessibilityNodeInfo: void setClickable(boolean)>
<com.android.internal.os.BatteryStatsImpl: long computeBatteryScreenOffUptime(long,int)>
<com.android.internal.database.SortCursor: boolean isNull(int)>
<android.opengl.GLES30: void glTexStorage2D(int,int,int,int,int)>
<com.android.internal.util.AsyncChannel: android.os.Message sendMessageSynchronously(int)>
<android.provider.DocumentsProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
<android.content.pm.ILauncherApps: boolean isActivityEnabled(android.content.ComponentName,android.os.UserHandle)>
<android.media.tv.TvView: boolean onUnhandledInputEvent(android.view.InputEvent)>
<android.renderscript.Element: android.renderscript.Element getSubElement(int)>
<com.android.internal.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)>
<android.app.ActivityView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.AdapterViewFlipper: void startFlipping()>
<android.app.admin.DevicePolicyManager: void setApplicationRestrictions(android.content.ComponentName,java.lang.String,android.os.Bundle)>
<android.content.AsyncTaskLoader: void <init>(android.content.Context,java.util.concurrent.Executor)>
<com.google.android.collect.Maps: android.util.ArrayMap newArrayMap()>
<android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,android.view.MotionEvent.PointerProperties[],android.view.MotionEvent.PointerCoords[],int,int,float,float,int,int,int,int)>
<android.widget.ZoomControls: void setOnZoomOutClickListener(android.view.View.OnClickListener)>
<android.view.animation.Transformation: void set(android.view.animation.Transformation)>
<android.telephony.NeighboringCellInfo: int getRssi()>
<android.opengl.GLES11Ext: void glDrawTexsvOES(short[],int)>
<com.android.internal.os.BatteryStatsImpl.Uid: void noteFullWifiLockReleasedLocked(long)>
<android.bluetooth.BluetoothDevice: int getServiceChannel(android.os.ParcelUuid)>
<android.os.PatternMatcher: void <init>(java.lang.String,int)>
<android.widget.NumberPicker: void setDisplayedValues(java.lang.String[])>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getUserBadgeForDensity(android.os.UserHandle,int)>
<android.os.Binder: int getCallingUid()>
<android.content.ContextWrapper: void startActivities(android.content.Intent[],android.os.Bundle)>
<android.app.job.JobInfo: int getNetworkType()>
<android.renderscript.Element: android.renderscript.Element I8(android.renderscript.RenderScript)>
<android.app.LoaderManagerImpl: android.content.Loader restartLoader(int,android.os.Bundle,android.app.LoaderManager.LoaderCallbacks)>
<android.graphics.drawable.ScaleDrawable: boolean onStateChange(int[])>
<android.alsa.AlsaDevicesParser: boolean hasMIDIDevices()>
<android.widget.AbsListView: int getCheckedItemPosition()>
<android.accessibilityservice.AccessibilityService.IAccessibilityServiceClientWrapper: void <init>(android.content.Context,android.os.Looper,android.accessibilityservice.AccessibilityService.Callbacks)>
<android.content.SyncInfo: void writeToParcel(android.os.Parcel,int)>
<android.media.tv.TvInputInfo.TvInputSettings: void putHiddenTvInputs(android.content.Context,java.util.Set,int)>
<android.widget.SlidingDrawer: void setOnDrawerOpenListener(android.widget.SlidingDrawer.OnDrawerOpenListener)>
<android.text.LoginFilter: void onStart()>
<com.android.internal.widget.LockPatternUtils: void deleteTempGallery()>
<com.android.internal.view.menu.ContextMenuBuilder: android.view.ContextMenu setHeaderTitle(int)>
<android.opengl.GLES20: void glDrawArrays(int,int,int)>
<android.nfc.INfcTag: boolean ndefIsWritable(int)>
<android.widget.AbsListView: int getListPaddingBottom()>
<android.renderscript.Allocation: void copy2DRangeFrom(int,int,int,int,int[])>
<com.android.internal.widget.AutoScrollHelper: com.android.internal.widget.AutoScrollHelper setRelativeEdges(float,float)>
<android.graphics.Bitmap: int getRowBytes()>
<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorEventListener,android.hardware.Sensor)>
<android.util.SparseLongArray: void append(int,long)>
<android.service.dreams.DreamService: void onDetachedFromWindow()>
<android.hardware.usb.UsbDeviceConnection: byte[] getRawDescriptors()>
<android.widget.CursorTreeAdapter: void changeCursor(android.database.Cursor)>
<android.accounts.AccountsException: void <init>(java.lang.Throwable)>
<android.renderscript.Int2: int elementSum()>
<android.renderscript.Float4: float elementSum()>
<android.widget.RemoteViews: void setUri(int,java.lang.String,android.net.Uri)>
<android.text.Editable: void setFilters(android.text.InputFilter[])>
<com.android.internal.widget.LockPatternUtils: boolean removeAppWidget(int)>
<android.net.wifi.IWifiManager: boolean pingSupplicant()>
<android.graphics.Bitmap: boolean isPremultiplied()>
<android.sax.Element: void setTextElementListener(android.sax.TextElementListener)>
<android.net.wifi.p2p.WifiP2pManager: void requestPersistentGroupInfo(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.PersistentGroupInfoListener)>
<android.widget.ListPopupWindow: void setWidth(int)>
<android.view.SurfaceHolder: android.graphics.Canvas lockCanvas(android.graphics.Rect)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthTokenLabel(java.lang.String,java.lang.String,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.bluetooth.IBluetoothA2dpSink: android.bluetooth.BluetoothAudioConfig getAudioConfig(android.bluetooth.BluetoothDevice)>
<android.media.MediaRouter.UserRouteInfo: void setPlaybackStream(int)>
<android.widget.ListView: void onFinishInflate()>
<com.android.internal.inputmethod.InputMethodUtils.InputMethodSettings: java.util.List getEnabledInputMethodSubtypeListLocked(android.view.inputmethod.InputMethodInfo)>
<com.android.internal.widget.WaveView: int getSuggestedMinimumHeight()>
<android.widget.TabHost.TabContentFactory: android.view.View createTabContent(java.lang.String)>
<com.android.internal.app.ToolbarActionBar: void setDisplayShowCustomEnabled(boolean)>
<android.service.fingerprint.FingerprintUtils: void addFingerprintIdForUser(int,android.content.ContentResolver,int)>
<android.content.ContentResolver: void cancelSync(android.accounts.Account,java.lang.String)>
<android.os.Trace: void endSection()>
<android.net.Uri.Builder: android.net.Uri.Builder appendEncodedPath(java.lang.String)>
<android.hardware.camera2.utils.CloseableLock: android.hardware.camera2.utils.CloseableLock.ScopedLock acquireExclusiveLock()>
<android.app.ActivityManagerProxy: void unbindBackupAgent(android.content.pm.ApplicationInfo)>
<android.net.wifi.IRttManager: android.os.Messenger getMessenger()>
<android.telephony.CellInfoGsm: void setCellSignalStrength(android.telephony.CellSignalStrengthGsm)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,double[])>
<android.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)>
<android.security.IKeystoreService: int del_key(java.lang.String,int)>
<android.hardware.camera2.legacy.GLThreadManager: void quit()>
<android.net.wifi.IWifiManager: void initializeMulticastFiltering()>
<android.bluetooth.BluetoothHealth: boolean unregisterAppConfiguration(android.bluetooth.BluetoothHealthAppConfiguration)>
<android.app.Dialog: void closeOptionsMenu()>
<android.content.SyncStatusInfo: void <init>(int)>
<android.widget.ProgressBar: android.graphics.PorterDuff.Mode getSecondaryProgressTintMode()>
<android.renderscript.Short3: void set(android.renderscript.Short3)>
<android.telephony.PhoneNumberUtils: java.lang.String formatNumber(java.lang.String,int)>
<com.android.internal.content.PackageHelper: java.lang.String mountSdDir(java.lang.String,java.lang.String,int,boolean)>
<com.android.internal.app.IBatteryStats: void noteWifiBatchedScanStartedFromSource(android.os.WorkSource,int)>
<android.database.CursorWrapper: boolean isAfterLast()>
<android.net.wifi.WifiInfo: int getLinkSpeed()>
<android.printservice.IPrintServiceClient: java.util.List getPrintJobInfos()>
<android.util.DayOfMonthCursor: boolean down()>
<android.os.storage.StorageVolume: android.os.storage.StorageVolume fromTemplate(android.os.storage.StorageVolume,java.io.File,android.os.UserHandle)>
<android.renderscript.Int2: void sub(int)>
<android.view.View: boolean isLongClickable()>
<android.graphics.RectF: java.lang.String toShortString(java.lang.StringBuilder)>
<android.widget.HeaderViewListAdapter: int getViewTypeCount()>
<android.graphics.Canvas: void drawPicture(android.graphics.Picture,android.graphics.RectF)>
<android.graphics.pdf.PdfRenderer: int getPageCount()>
<android.net.Uri: int getPort()>
<android.widget.GridLayout: void onDebugDrawMargins(android.graphics.Canvas,android.graphics.Paint)>
<android.telecom.Conference: java.util.List getConnections()>
<android.graphics.Paint: void setTextSkewX(float)>
<android.opengl.GLES10: void glVertexPointer(int,int,int,java.nio.Buffer)>
<android.view.InputDevice.MotionRange: int getSource()>
<com.android.internal.app.ToolbarActionBar: void removeTab(android.app.ActionBar.Tab)>
<android.net.wifi.p2p.nsd.WifiP2pServiceInfo: int hashCode()>
<android.filterfw.core.FinalPort: java.lang.String toString()>
<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet,int,int,java.util.Map,boolean)>
<android.view.accessibility.AccessibilityNodeInfo: void setViewIdResourceName(java.lang.String)>
<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageIO(int,int,java.lang.Object)>
<android.security.KeyPairGeneratorSpec: java.security.spec.AlgorithmParameterSpec getAlgorithmParameterSpec()>
<com.android.internal.telephony.EncodeException: void <init>(java.lang.String)>
<android.app.AlertDialog.Builder: android.app.AlertDialog show()>
<com.android.internal.backup.IBackupTransport: long getCurrentRestoreSet()>
<android.graphics.drawable.Drawable: void jumpToCurrentState()>
<android.widget.Chronometer: void setFormat(java.lang.String)>
<android.app.IAlarmManager: boolean setTime(long)>
<android.view.View: boolean getFilterTouchesWhenObscured()>
<android.database.DatabaseUtils: java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[])>
<android.app.Dialog: boolean onContextItemSelected(android.view.MenuItem)>
<android.net.MobileLinkQualityInfo: android.net.MobileLinkQualityInfo createFromParcelBody(android.os.Parcel)>
<android.os.BaseBundle: void putDouble(java.lang.String,double)>
<android.content.BroadcastReceiver.PendingResult: void setResultCode(int)>
<android.filterpacks.imageproc.SimpleImageFilter: void <init>(java.lang.String,java.lang.String)>
<android.animation.Keyframe: android.animation.Keyframe ofFloat(float)>
<android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)>
<android.text.method.DateTimeKeyListener: int getInputType()>
<com.android.internal.view.menu.MenuPopupHelper: void onViewDetachedFromWindow(android.view.View)>
<com.android.internal.os.BatteryStatsImpl.Uid.Proc: void onTimeStarted(long,long,long)>
<android.view.animation.CycleInterpolator: void <init>(android.content.res.Resources,android.content.res.Resources.Theme,android.util.AttributeSet)>
<android.hardware.display.DisplayManagerGlobal: android.view.Display getRealDisplay(int)>
<android.hardware.camera2.utils.ArrayUtils: int[] toIntArray(java.util.List)>
<android.net.NetworkConfig: void <init>(java.lang.String)>
<android.media.SubtitleController: void selectDefaultTrack()>
<android.os.ServiceManagerProxy: void <init>(android.os.IBinder)>
<android.opengl.GLES10: void glStencilMask(int)>
<android.app.Activity: void setFeatureDrawable(int,android.graphics.drawable.Drawable)>
<android.os.Binder: void flushPendingCommands()>
<android.telephony.PhoneNumberUtils: boolean isLocalEmergencyNumber(android.content.Context,java.lang.String)>
<android.preference.PreferenceGroup: android.preference.Preference getPreference(int)>
<android.hardware.camera2.impl.CaptureResultExtras: int getRequestId()>
<android.util.ArraySet: int indexOf(java.lang.Object)>
<android.widget.ToggleButton: void <init>(android.content.Context,android.util.AttributeSet)>
<android.filterfw.GraphEnvironment: int loadGraph(android.content.Context,int)>
<android.graphics.drawable.Drawable.Callback: void invalidateDrawable(android.graphics.drawable.Drawable)>
<android.speech.tts.SynthesisRequest: void <init>(java.lang.String,android.os.Bundle)>
<android.widget.AbsSpinner: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.provider.Settings.Global: java.lang.String getBluetoothA2dpSinkPriorityKey(java.lang.String)>
<android.filterfw.core.FilterPort: boolean isReady()>
<android.renderscript.Short4: void negate()>
<com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>
<android.net.wifi.p2p.WifiP2pGroup: int describeContents()>
<android.widget.TextView: boolean isCursorVisible()>
<android.database.DatabaseUtils: void cursorShortToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>
<android.content.ContentProviderProxy: android.os.Bundle call(java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)>
<android.widget.ScrollView: void requestLayout()>
<android.hardware.Camera.Parameters: int getMinExposureCompensation()>
<com.google.android.util.AbstractMessageParser.Html: void trimTrailingWhitespace()>
<android.opengl.GLES30: void glUniform1ui(int,int)>
<android.security.IKeystoreService: int sync_uid(int,int)>
<android.media.audiofx.Visualizer: void <init>(int)>
<android.os.Parcel: boolean pushAllowFds(boolean)>
<android.widget.RelativeLayout: void setVerticalGravity(int)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofInt(java.lang.String,int[])>
<android.view.accessibility.AccessibilityEvent: java.lang.String eventTypeToString(int)>
<android.filterfw.core.Filter: void initProgramInputs(android.filterfw.core.Program,android.filterfw.core.FilterContext)>
<android.location.GpsNavigationMessageEvent: int describeContents()>
<android.media.tv.TvInputInfo: android.content.ComponentName getComponent()>
<com.android.server.net.NetlinkTracker: void interfaceDnsServerInfo(java.lang.String,long,java.lang.String[])>
<android.bluetooth.BluetoothDevice: int getBondState()>
<android.widget.ListView: boolean getItemsCanFocus()>
<android.accounts.AccountAuthenticatorActivity: void setAccountAuthenticatorResult(android.os.Bundle)>
<android.media.effect.FilterEffect: void endGLEffect()>
<android.provider.Settings.Secure: boolean putLong(android.content.ContentResolver,java.lang.String,long)>
<android.view.DragEvent: float getY()>
<android.app.ActionBar.Tab: android.app.ActionBar.Tab setContentDescription(int)>
<android.os.Process: int myPpid()>
<android.speech.tts.Voice: int getQuality()>
<android.text.style.SuggestionSpan: int getFlags()>
<android.hardware.camera2.dispatch.HandlerDispatcher: void <init>(android.hardware.camera2.dispatch.Dispatchable,android.os.Handler)>
<android.app.AlarmManager.AlarmClockInfo: android.app.PendingIntent getShowIntent()>
<android.text.style.AlignmentSpan.Standard: int getSpanTypeId()>
<android.view.ViewParent: void focusableViewAvailable(android.view.View)>
<android.text.BoringLayout: int getTopPadding()>
<android.graphics.SurfaceTexture: void <init>(boolean)>
<android.filterfw.core.Filter: void setWaitsOnInputPort(java.lang.String,boolean)>
<android.app.backup.FullBackup: int backupToTar(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.backup.BackupDataOutput)>
<android.media.AudioTrack: float getMaxVolume()>
<android.renderscript.Float3: android.renderscript.Float3 mul(android.renderscript.Float3,android.renderscript.Float3)>
<com.android.internal.util.AsyncChannel: void disconnect()>
<android.app.ActionBar: int getDisplayOptions()>
<android.hardware.camera2.CaptureRequest.Builder: boolean isEmpty()>
<android.preference.PreferenceFragment: void onStart()>
<android.text.SpanWatcher: void onSpanChanged(android.text.Spannable,java.lang.Object,int,int,int,int)>
<android.location.IFusedGeofenceHardware: void removeGeofences(int[])>
<android.webkit.CookieManager: void setAcceptFileSchemeCookies(boolean)>
<android.app.ActivityManager: void restartPackage(java.lang.String)>
<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])>
<android.view.View: boolean onGenericMotionEvent(android.view.MotionEvent)>
<android.media.AudioService.VolumeController: void postVolumeChanged(int,int)>
<android.renderscript.Short2: void copyTo(short[],int)>
<android.location.GpsStatus: java.lang.Iterable getSatellites()>
<android.media.ImageReader: android.media.Image acquireNextImage()>
<android.webkit.WebView: void debugDump()>
<android.widget.TableLayout: void onLayout(boolean,int,int,int,int)>
<android.view.inputmethod.InputMethodManager: void notifySuggestionPicked(android.text.style.SuggestionSpan,java.lang.String,int)>
<android.view.View: boolean isActionableForAccessibility()>
<android.renderscript.ScriptIntrinsicYuvToRGB: void setInput(android.renderscript.Allocation)>
<android.app.UiAutomation: android.os.ParcelFileDescriptor executeShellCommand(java.lang.String)>
<android.telecom.InCallService.VideoCall: void requestCallDataUsage()>
<android.app.admin.DevicePolicyManager: void setPasswordMinimumSymbols(android.content.ComponentName,int)>
<android.view.View: android.animation.StateListAnimator getStateListAnimator()>
<android.widget.RadialTimePickerView: boolean onTouch(android.view.View,android.view.MotionEvent)>
<android.transition.TransitionSet: void setPathMotion(android.transition.PathMotion)>
<android.opengl.GLES10: void glRotatef(float,float,float,float)>
<android.animation.Keyframes: java.lang.Class getType()>
<android.view.FrameStats: long getFramePresentedTimeNano(int)>
<android.app.LoadedApk: java.io.File getDataDirFile()>
<com.android.internal.telecom.IConnectionServiceAdapter: void setCallCapabilities(java.lang.String,int)>
<android.graphics.pdf.PdfEditor: int getPageCount()>
<android.location.LocationManager: boolean sendNiResponse(int,int)>
<android.os.IPowerManager: void reboot(boolean,java.lang.String,boolean)>
<android.opengl.GLES31Ext: void glEnableiEXT(int,int)>
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.app.PendingIntent)>
<android.widget.CursorAdapter: java.lang.CharSequence convertToString(android.database.Cursor)>
<android.util.DebugUtils: boolean isObjectSelected(java.lang.Object)>
<android.widget.PopupWindow: void setClippingEnabled(boolean)>
<android.database.sqlite.SQLiteSession: boolean hasTransaction()>
<android.media.TtmlParser: void <init>(android.media.TtmlNodeListener)>
<android.net.RouteInfo: android.net.LinkAddress getDestinationLinkAddress()>
<android.opengl.GLES10: void glAlphaFuncx(int,int)>
<android.net.wifi.p2p.nsd.WifiP2pServiceInfo: void <init>(java.util.List)>
<android.content.pm.PackageManager: boolean addPermissionAsync(android.content.pm.PermissionInfo)>
<android.util.Rational: int hashCode()>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName)>
<android.app.FragmentManagerImpl: boolean dispatchPrepareOptionsMenu(android.view.Menu)>
<com.android.internal.telecom.ITelecomService: void addNewIncomingCall(android.telecom.PhoneAccountHandle,android.os.Bundle)>
<android.nfc.NdefRecord: void <init>(short,byte[],byte[],byte[])>
<android.media.tv.TvInputManager.Session: java.lang.String getSelectedTrack(int)>
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setActionView(int)>
<android.widget.AutoCompleteTextView: void setDropDownAnimationStyle(int)>
<android.net.wifi.p2p.WifiP2pGroup: java.util.Collection getClientList()>
<android.text.Annotation: void <init>(android.os.Parcel)>
<android.net.wifi.WifiScanner.WifiChangeListener: void onChanging(android.net.wifi.ScanResult[])>
<android.gesture.Gesture: int describeContents()>
<com.android.internal.view.menu.ActionMenu: void <init>(android.content.Context)>
<android.widget.ListPopupWindow: int getHeight()>
<android.media.AudioService: void setWiredDeviceConnectionState(int,int,java.lang.String)>
<android.widget.AbsoluteLayout: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>
<com.android.internal.util.Preconditions: float checkArgumentInRange(float,float,float,java.lang.String)>
<android.view.WindowManagerPolicy: void goingToSleep(int)>
<android.preference.Preference: boolean getPersistedBoolean(boolean)>
<android.view.inputmethod.EditorInfo: void makeCompatible(int)>
<android.media.tv.ITvInputSession: void setMain(boolean)>
<android.content.pm.PackageItemInfo: android.graphics.drawable.Drawable loadDefaultLogo(android.content.pm.PackageManager)>
<android.print.PrintAttributes: android.print.PrintAttributes.Resolution getResolution()>
<android.telephony.CellSignalStrengthCdma: int hashCode()>
<android.os.Registrant: void notifyException(java.lang.Throwable)>
<android.bluetooth.BluetoothGatt: boolean refresh()>
<android.content.Intent: byte[] getByteArrayExtra(java.lang.String)>
<android.view.TouchDelegate: boolean onTouchEvent(android.view.MotionEvent)>
<android.graphics.Paint: void setFontFeatureSettings(java.lang.String)>
<android.preference.SeekBarVolumizer: void stopSample()>
<android.view.InputDevice.MotionRange: boolean isFromSource(int)>
<com.android.internal.widget.AbsActionBarView: void animateToVisibility(int)>
<android.content.ContentProviderProxy: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)>
<android.widget.NumberPicker: boolean performLongClick()>
<android.view.TextureView: void unlockCanvasAndPost(android.graphics.Canvas)>
<android.nfc.INfcAdapter: void addNfcUnlockHandler(android.nfc.INfcUnlockHandler,int[])>
<android.view.View: boolean onKeyMultiple(int,int,android.view.KeyEvent)>
<android.text.HtmlToSpannedConverter: void endDocument()>
<android.telecom.InCallService.VideoCall.Listener: void onCameraCapabilitiesChanged(android.telecom.CameraCapabilities)>
<android.view.ViewParent: boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point)>
<android.media.MediaMetadata: void writeToParcel(android.os.Parcel,int)>
<android.view.TextureView: android.graphics.Canvas lockCanvas(android.graphics.Rect)>
<android.os.Debug: void waitForDebugger()>
<android.os.RecoverySystem: void verifyPackage(java.io.File,android.os.RecoverySystem.ProgressListener,java.io.File)>
<android.util.AttributeSet: java.lang.String getAttributeValue(int)>
<android.app.usage.UsageEvents.Event: java.lang.String getPackageName()>
<android.media.MediaCodec.CryptoException: void <init>(int,java.lang.String)>
<android.nfc.cardemulation.ApduServiceInfo: boolean isOnHost()>
<android.app.LoaderManager.LoaderCallbacks: android.content.Loader onCreateLoader(int,android.os.Bundle)>
<android.graphics.Region: boolean setPath(android.graphics.Path,android.graphics.Region)>
<android.app.Activity: boolean onTrackballEvent(android.view.MotionEvent)>
<android.app.MediaRouteButton: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<android.app.UiAutomation: android.graphics.Bitmap takeScreenshot()>
<com.android.net.IProxyService: java.lang.String resolvePacFile(java.lang.String,java.lang.String)>
<android.view.MotionEvent: float getYPrecision()>
<android.service.persistentdata.IPersistentDataBlockService: void wipe()>
<android.renderscript.Byte4: byte dotProduct(android.renderscript.Byte4)>
<android.view.ViewRootImpl: void dispatchInvalidateRectDelayed(android.view.View.AttachInfo.InvalidateInfo,long)>
<android.app.ListActivity: void setSelection(int)>
<android.util.LongSparseLongArray: void clear()>
<android.view.View.OnGenericMotionListener: boolean onGenericMotion(android.view.View,android.view.MotionEvent)>
<android.provider.DocumentsContract: android.net.Uri buildChildDocumentsUriUsingTree(android.net.Uri,java.lang.String)>
<android.filterfw.core.FrameManager: android.filterfw.core.Frame retainFrame(android.filterfw.core.Frame)>
<android.view.animation.Animation: boolean getTransformation(long,android.view.animation.Transformation)>
<android.renderscript.FieldPacker: void skip(int)>
<android.content.SyncAdapterType: int hashCode()>
<android.media.SoundPool: void pause(int)>
<android.view.View: int getMinimumWidth()>
<android.os.Looper: void dump(android.util.Printer,java.lang.String)>
<android.filterfw.io.GraphReader: android.filterfw.core.FilterGraph readGraphString(java.lang.String)>
<android.net.wifi.WifiScanner.ParcelableScanResults: void writeToParcel(android.os.Parcel,int)>
<android.media.AudioManager: int setBluetoothA2dpDeviceConnectionState(android.bluetooth.BluetoothDevice,int,int)>
<android.security.AndroidKeyStore: boolean engineIsCertificateEntry(java.lang.String)>
<android.media.AudioAttributes: int getAllFlags()>
<android.widget.RemoteViews: void <init>(android.content.pm.ApplicationInfo,int)>
<android.widget.ActionMenuPresenter: void setExpandedActionViewsExclusive(boolean)>
<com.android.internal.os.BatteryStatsHelper: void <init>(android.content.Context,boolean,boolean)>
<android.telecom.Connection: void setVideoProvider(android.telecom.Connection.VideoProvider)>
<android.net.wifi.p2p.WifiP2pWfdInfo: void <init>(android.net.wifi.p2p.WifiP2pWfdInfo)>
<android.webkit.WebViewProvider.ViewDelegate: void onOverScrolled(int,int,boolean,boolean)>
<android.filterpacks.imageproc.SharpenFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<android.widget.RemoteViews: android.widget.RemoteViews clone()>
<android.view.inputmethod.CorrectionInfo: java.lang.CharSequence getOldText()>
<com.google.android.util.AbstractMessageParser.Smiley: boolean isHtml()>
<android.os.BaseBundle: void putDoubleArray(java.lang.String,double[])>
<android.app.ApplicationThreadProxy: void scheduleNewIntent(java.util.List,android.os.IBinder)>
<android.view.inputmethod.InputMethodManager: void focusIn(android.view.View)>
<com.android.internal.widget.ActionBarOverlayLayout: boolean isInOverlayMode()>
<android.renderscript.FieldPacker: void addI64(long)>
<android.view.KeyEvent: boolean isDown()>
<android.app.IActivityManager: android.app.IActivityContainer createActivityContainer(android.os.IBinder,android.app.IActivityContainerCallback)>
<android.widget.TextView: boolean moveCursorToVisibleOffset()>
<android.net.IConnectivityManager: void setGlobalProxy(android.net.ProxyInfo)>
<com.android.internal.app.IVoiceInteractionManagerService: int startRecognition(android.service.voice.IVoiceInteractionService,int,java.lang.String,android.hardware.soundtrigger.IRecognitionStatusCallback,android.hardware.soundtrigger.SoundTrigger.RecognitionConfig)>
<android.os.IUserManager: int checkRestrictionsChallenge(java.lang.String)>
<android.media.tv.ITvInputSessionCallback: void onContentBlocked(java.lang.String)>
<android.view.animation.Animation: void setStartTime(long)>
<android.content.CursorLoader: void deliverResult(android.database.Cursor)>
<android.view.ViewTreeObserver.OnDrawListener: void onDraw()>
<com.android.internal.util.FastXmlSerializer: void comment(java.lang.String)>
<android.os.IVibratorService: void vibratePattern(int,java.lang.String,long[],int,int,android.os.IBinder)>
<android.view.inputmethod.InputConnectionWrapper: void <init>(android.view.inputmethod.InputConnection,boolean)>
<android.filterpacks.imageproc.BitmapOverlayFilter: void setupPorts()>
<android.view.View: float getTopFadingEdgeStrength()>
<android.graphics.FontListParser.Family: void <init>(java.lang.String,java.util.List,java.lang.String,java.lang.String)>
<com.android.internal.widget.IRemoteViewsAdapterConnection: void onServiceDisconnected()>
<android.telecom.Connection: void setActive()>
<android.os.BaseBundle: void putStringArray(java.lang.String,java.lang.String[])>
<android.media.session.MediaSession.Callback: void onFastForward()>
<android.widget.ActivityChooserModel: void setHistoryMaxSize(int)>
<android.text.style.TtsSpan.DigitsBuilder: void <init>(java.lang.String)>
<android.widget.ExpandableListView: long getPackedPositionForChild(int,int)>
<android.content.pm.PackageManager: void installPackage(android.net.Uri,android.app.PackageInstallObserver,int,java.lang.String)>
<android.hardware.hdmi.HdmiRecordSources.AribData: int toByteArray(byte[],int)>
<android.view.ViewGroupOverlay: void remove(android.view.View)>
<com.android.internal.os.BatteryStatsImpl: long getPhoneDataConnectionTime(int,long,int)>
<com.android.internal.app.AlertActivity: boolean onKeyUp(int,android.view.KeyEvent)>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDSrcOut()>
<android.graphics.Paint: void getTextPath(char[],int,int,float,float,android.graphics.Path)>
<android.app.ISearchManager: android.app.SearchableInfo getSearchableInfo(android.content.ComponentName)>
<android.net.NetworkStats: android.net.NetworkStats combineValues(java.lang.String,int,int,long,long,long,long,long)>
<android.app.usage.UsageEvents: void <init>(android.os.Parcel)>
<com.android.internal.os.BatteryStatsImpl: void noteJobFinishLocked(java.lang.String,int)>
<android.hardware.camera2.marshal.MarshalHelpers: java.lang.Class checkPrimitiveClass(java.lang.Class)>
<android.transition.VisibilityPropagation: int getViewY(android.transition.TransitionValues)>
<android.renderscript.FieldPacker: byte[] getData()>
<android.content.IntentFilter: java.util.Iterator schemesIterator()>
<android.filterfw.core.OutputPort: android.filterfw.core.InputPort getBasePort()>
<android.net.wifi.RttManager: android.net.wifi.RttManager.Capabilities getCapabilities()>
<android.view.Window: void setDefaultWindowFormat(int)>
<android.text.util.Rfc822Token: java.lang.String quoteNameIfNecessary(java.lang.String)>
<android.opengl.GLES11Ext: void glLoadMatrixxOES(int[],int)>
<android.view.Menu: void removeGroup(int)>
<android.util.SparseArray: void setValueAt(int,java.lang.Object)>
<android.webkit.WebViewFragment: void onDestroy()>
<android.opengl.GLES30: void glGetBufferParameteri64v(int,int,long[],int)>
<android.text.style.ReplacementSpan: int getSize(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Paint.FontMetricsInt)>
<android.animation.ObjectAnimator: void setTarget(java.lang.Object)>
<android.view.View: void setDrawingCacheEnabled(boolean)>
<android.net.http.CertificateChainValidator: android.net.http.SslError verifyServerCertificates(byte[][],java.lang.String,java.lang.String)>
<com.android.internal.inputmethod.InputMethodUtils: void setNonSelectedSystemImesDisabledUntilUsed(android.content.pm.PackageManager,java.util.List)>
<android.widget.CursorAdapter: long getItemId(int)>
<android.telephony.NeighboringCellInfo: java.lang.String toString()>
<android.telephony.CellSignalStrengthCdma: android.telephony.CellSignalStrengthCdma copy()>
<android.renderscript.Allocation: void setOnBufferAvailableListener(android.renderscript.Allocation.OnBufferAvailableListener)>
<android.app.IActivityManager.WaitResult: int describeContents()>
<android.app.ActionBar: android.app.ActionBar.Tab getSelectedTab()>
<android.widget.TimePicker.TimePickerDelegate: boolean is24HourView()>
<android.graphics.drawable.GradientDrawable: void setStroke(int,android.content.res.ColorStateList,float,float)>
<android.telephony.TelephonyManager: boolean setPreferredNetworkType(int)>
<android.view.WindowManager.LayoutParams: int describeContents()>
<android.renderscript.ScriptIntrinsicHistogram: android.renderscript.Script.KernelID getKernelID_Separate()>
<android.graphics.SurfaceTexture: void finalize()>
<android.net.NetworkStateTracker: void setUserDataEnable(boolean)>
<android.webkit.WebViewFactoryProvider: android.webkit.WebViewDatabase getWebViewDatabase(android.content.Context)>
<android.hardware.location.GeofenceHardwareRequest: int getMonitorTransitions()>
<android.media.MediaDescription: android.net.Uri getIconUri()>
<android.widget.DatePickerController: int getFirstDayOfWeek()>
<android.accounts.Account: boolean equals(java.lang.Object)>
<android.widget.RemoteViewsService.RemoteViewsFactory: boolean hasStableIds()>
<android.provider.Browser: void truncateHistory(android.content.ContentResolver)>
<com.android.internal.util.UserIcons: android.graphics.Bitmap convertToBitmap(android.graphics.drawable.Drawable)>
<com.google.android.gles_jni.GLImpl: void glGenerateMipmapOES(int)>
<android.view.InputEventSender: void onInputEventFinished(int,boolean)>
<android.opengl.GLES20: void glClearColor(float,float,float,float)>
<android.os.BatteryStats.HistoryTag: void setTo(android.os.BatteryStats.HistoryTag)>
<com.android.internal.app.AlertController: void setInverseBackgroundForced(boolean)>
<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,android.net.Uri,android.view.SurfaceHolder)>
<com.android.internal.app.ResolverActivity: void setSafeForwardingMode(boolean)>
<android.hardware.Camera: void setPreviewDisplay(android.view.SurfaceHolder)>
<android.os.Parcel: java.util.ArrayList readArrayList(java.lang.ClassLoader)>
<com.android.internal.http.multipart.Part: java.lang.String toString()>
<android.app.FragmentManagerImpl: void dispatchPause()>
<android.graphics.drawable.InsetDrawable: int getAlpha()>
<android.renderscript.Double3: void set(android.renderscript.Double3)>
<android.net.NetworkInfo: void setRoaming(boolean)>
<android.inputmethodservice.InputMethodService.InputMethodImpl: void startInput(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo)>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl: void dispatchGenericMotionEvent(int,android.view.MotionEvent,android.view.inputmethod.InputMethodSession.EventCallback)>
<android.graphics.SurfaceTexture: void setDefaultBufferSize(int,int)>
<android.widget.Scroller: float getCurrVelocity()>
<android.view.View: boolean isVerticalScrollBarHidden()>
<android.os.WorkSource: android.os.WorkSource addReturningNewbs(android.os.WorkSource)>
<android.service.notification.NotificationListenerService.Ranking: int getVisibilityOverride()>
<android.view.ViewGroup: void onSetLayoutParams(android.view.View,android.view.ViewGroup.LayoutParams)>
<android.graphics.drawable.PictureDrawable: void setDither(boolean)>
<android.renderscript.Long4: void add(long)>
<android.renderscript.Int3: android.renderscript.Int3 mod(android.renderscript.Int3,int)>
<android.app.Instrumentation: void addMonitor(android.app.Instrumentation.ActivityMonitor)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte[])>
<android.graphics.drawable.NinePatchDrawable: void <init>(android.graphics.Bitmap,byte[],android.graphics.Rect,java.lang.String)>
<android.media.tv.ITvInputManager: void registerCallback(android.media.tv.ITvInputManagerCallback,int)>
<android.preference.Preference: void setIcon(int)>
<android.webkit.Plugin: java.lang.String getFileName()>
<android.ddm.DdmHandleHeap: void disconnected()>
<android.media.UnstyledTextExtractor: android.media.TextTrackCueSpan[][] getText()>
<android.media.AudioSystem: int getAudioHwSyncForSession(int)>
<android.content.SyncAdapterType: boolean supportsUploading()>
<android.content.Intent: android.os.Bundle getExtras()>
<android.media.MediaInserter: void <init>(android.content.IContentProvider,java.lang.String,int)>
<android.os.Process: int setUid(int)>
<android.widget.TimePicker: void <init>(android.content.Context)>
<android.hardware.soundtrigger.SoundTrigger.StatusListener: void onSoundModelUpdate(android.hardware.soundtrigger.SoundTrigger.SoundModelEvent)>
<android.app.ActivityManagerProxy: java.util.List getAppTasks(java.lang.String)>
<android.content.pm.PackageManager: void installPackageWithVerificationAndEncryption(android.net.Uri,android.app.PackageInstallObserver,int,java.lang.String,android.content.pm.VerificationParams,android.content.pm.ContainerEncryptionParams)>
<android.location.Location: long getElapsedRealtimeNanos()>
<android.telephony.SubInfoRecord: void writeToParcel(android.os.Parcel,int)>
<android.net.MobileLinkQualityInfo: void setEvdoEcio(int)>
<android.view.KeyEvent: int getSource()>
<android.media.MediaRouter.RouteCategory: boolean isGroupable()>
<android.media.session.MediaController.TransportControls: void pause()>
<android.content.pm.PackageManager: void movePackage(java.lang.String,android.content.pm.IPackageMoveObserver,int)>
<android.provider.CalendarContract.Reminders: android.database.Cursor query(android.content.ContentResolver,long,java.lang.String[])>
<com.android.internal.view.menu.MenuItemImpl: boolean isChecked()>
<android.webkit.CacheManager: boolean cacheDisabled()>
<com.android.internal.telecom.IVideoCallback: void changePeerDimensions(int,int)>
<android.filterfw.core.NativeFrame: void setInts(int[])>
<android.speech.tts.TextToSpeech.OnInitListener: void onInit(int)>
<android.view.SurfaceHolder: android.view.Surface getSurface()>
<android.view.SurfaceSession: void finalize()>
<android.service.wallpaper.WallpaperService: android.os.IBinder onBind(android.content.Intent)>
<android.location.GpsMeasurement: boolean hasCodePhaseInChips()>
<android.media.session.MediaSession.Callback: void onSkipToQueueItem(long)>
<android.net.NetworkKey: java.lang.String toString()>
<android.media.session.MediaSession: void setCallback(android.media.session.MediaSession.Callback)>
<android.os.BatteryStats.Uid.Pkg.Serv: int getStarts(int)>
<android.bluetooth.BluetoothPbap: void finalize()>
<android.media.tv.TvView.TvInputCallback: void onTrackSelected(java.lang.String,int,java.lang.String)>
<android.widget.SearchView.SearchAutoComplete: void replaceText(java.lang.CharSequence)>
<android.os.MemoryFile: int getSize(java.io.FileDescriptor)>
<android.renderscript.Font: android.renderscript.Font createFromAsset(android.renderscript.RenderScript,android.content.res.Resources,java.lang.String,float)>
<android.media.session.MediaSessionManager: android.media.session.ISession createSession(android.media.session.MediaSession.CallbackStub,java.lang.String,int)>
<android.app.FragmentManager: android.app.FragmentManager.BackStackEntry getBackStackEntryAt(int)>
<android.graphics.Canvas: javax.microedition.khronos.opengles.GL getGL()>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo.CollectionInfo getCollectionInfo()>
<android.opengl.ETC1: int getEncodedDataSize(int,int)>
<android.graphics.drawable.ShapeDrawable: boolean isStateful()>
<android.content.Context: android.graphics.drawable.Drawable getWallpaper()>
<android.media.WebVttRenderingWidget: void <init>(android.content.Context)>
<android.hardware.hdmi.HdmiRecordSources: boolean checkRecordSource(byte[])>
<android.view.InputEventReceiver: boolean consumeBatchedInputEvents(long)>
<android.net.http.Headers: void setContentDisposition(java.lang.String)>
<android.view.View: void buildDrawingCache(boolean)>
<android.accounts.AccountsException: void <init>(java.lang.String)>
<android.net.wifi.WifiEnterpriseConfig: void setFieldValue(java.lang.String,java.lang.String)>
<com.android.internal.os.BatteryStatsImpl.Uid.Pkg.Serv: int getStarts(int)>
<android.widget.TimePicker: int getBaseline()>
<android.database.CursorWrapper: boolean moveToNext()>
<android.provider.Browser: void addSearchUrl(android.content.ContentResolver,java.lang.String)>
<android.view.LayoutInflater: android.view.View onCreateView(java.lang.String,android.util.AttributeSet)>
<android.net.wifi.WifiEnterpriseConfig: void setCaCertificateAlias(java.lang.String)>
<android.renderscript.Short3: void <init>(android.renderscript.Short3)>
<android.graphics.Paint: android.graphics.Xfermode setXfermode(android.graphics.Xfermode)>
<com.android.internal.widget.ActionBarView: void setMenuPrepared()>
<android.location.GpsNavigationMessage: int describeContents()>
<android.widget.RemoteViewsAdapter: void notifyDataSetChanged()>
<android.os.INetworkManagementService: void setInterfaceIpv6PrivacyExtensions(java.lang.String,boolean)>
<android.graphics.drawable.AnimatedRotateDrawable: boolean setVisible(boolean,boolean)>
<android.renderscript.FileA3D: android.renderscript.FileA3D createFromFile(android.renderscript.RenderScript,java.lang.String)>
<android.text.style.QuoteSpan: int getLeadingMargin(boolean)>
<android.location.Address: void setUrl(java.lang.String)>
<android.text.format.DateUtils: boolean isToday(long)>
<com.android.internal.app.ToolbarActionBar: void setCustomView(android.view.View)>
<android.app.Fragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.widget.TextView: void getFocusedRect(android.graphics.Rect)>
<com.google.android.gles_jni.GLImpl: void glTexEnvi(int,int,int)>
<android.view.MotionEvent: float getTouchMinor()>
<android.opengl.GLUtils: void texImage2D(int,int,int,android.graphics.Bitmap,int,int)>
<android.net.INetworkManagementEventObserver: void interfaceStatusChanged(java.lang.String,boolean)>
<android.bluetooth.BluetoothUuid: boolean isHeadset(android.os.ParcelUuid)>
<android.inputmethodservice.InputMethodService: void onExtractedTextClicked()>
<android.webkit.WebView.PrivateAccess: boolean super_performLongClick()>
<android.opengl.GLES10: void glGetIntegerv(int,int[],int)>
<android.app.Notification.BigPictureStyle: android.app.Notification.BigPictureStyle bigPicture(android.graphics.Bitmap)>
<android.widget.RemoteViewsAdapter: long getItemId(int)>
<android.media.NotProvisionedException: void <init>(java.lang.String)>
<android.media.tv.ITvInputSessionWrapper: void release()>
<com.android.internal.widget.ILockSettingsObserver: void onLockSettingChanged(java.lang.String,int)>
<android.hardware.camera2.legacy.RequestHolder.Builder: void <init>(int,int,android.hardware.camera2.CaptureRequest,boolean,java.util.Collection)>
<android.os.StatFs: long getTotalBytes()>
<android.widget.SlidingDrawer: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.preference.Preference: android.content.Intent getIntent()>
<android.graphics.Paint: boolean isStrikeThruText()>
<android.text.style.TtsSpan.FractionBuilder: android.text.style.TtsSpan.FractionBuilder setNumerator(long)>
<android.transition.Transition: android.transition.Transition removeTarget(android.view.View)>
<android.app.MediaRouteButton: void <init>(android.content.Context)>
<android.telephony.TelephonyManager: java.lang.String nvReadItem(int)>
<android.provider.SearchIndexablesProvider: android.database.Cursor queryRawData(java.lang.String[])>
<android.telecom.Connection: void setAudioModeIsVoip(boolean)>
<com.android.internal.view.menu.ContextMenuBuilder: com.android.internal.view.menu.MenuDialogHelper show(android.view.View,android.os.IBinder)>
<com.android.internal.net.NetworkStatsFactory: android.net.NetworkStats readNetworkStatsDetail()>
<android.app.MediaRouteActionProvider: void setExtendedSettingsClickListener(android.view.View.OnClickListener)>
<android.os.Debug: int getBinderSentTransactions()>
<android.widget.ExpandableListView: long getExpandableListPosition(int)>
<android.preference.EditTextPreference: void onDialogClosed(boolean)>
<com.android.internal.view.menu.IconMenuItemView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.bluetooth.BluetoothInputDevice: boolean setReport(android.bluetooth.BluetoothDevice,byte,java.lang.String)>
<android.renderscript.FieldPacker: long subI64()>
<com.android.internal.widget.ActionBarView: void setLogo(android.graphics.drawable.Drawable)>
<android.view.MenuItem: android.view.MenuItem setVisible(boolean)>
<android.telephony.CellInfoLte: int hashCode()>
<android.app.Notification.Builder: android.app.Notification.Builder setGroup(java.lang.String)>
<android.content.ContentProviderOperation.Builder: android.content.ContentProviderOperation.Builder withValueBackReference(java.lang.String,int)>
<com.android.internal.widget.LockPatternUtils: boolean hasWidgetsEnabledInKeyguard(int)>
<android.database.MatrixCursor: void addRow(java.lang.Iterable)>
<android.nfc.NfcAdapter: boolean invokeBeam(android.nfc.BeamShareData)>
<com.android.internal.http.multipart.PartBase: java.lang.String getName()>
<android.os.MemoryFile: java.io.OutputStream getOutputStream()>
<android.hardware.display.DisplayManagerGlobal: int[] getDisplayIds()>
<android.app.trust.TrustManager: void <init>(android.os.IBinder)>
<android.net.UrlQuerySanitizer: boolean isHexDigit(char)>
<android.view.View: int getTextAlignment()>
<android.transition.Transition: android.transition.Transition addListener(android.transition.Transition.TransitionListener)>
<android.app.ActivityManagerProxy: boolean startInstrumentation(android.content.ComponentName,java.lang.String,int,android.os.Bundle,android.app.IInstrumentationWatcher,android.app.IUiAutomationConnection,int,java.lang.String)>
<android.hardware.Camera: void autoFocus(android.hardware.Camera.AutoFocusCallback)>
<android.media.MediaCodecInfo.CodecCapabilities: java.lang.String getMimeType()>
<android.content.ContextWrapper: void sendBroadcast(android.content.Intent)>
<android.app.Notification.Builder: android.app.Notification.Builder setExtras(android.os.Bundle)>
<android.net.wifi.WifiLinkLayerStats: java.lang.String toString()>
<android.view.Window: void setGravity(int)>
<android.app.usage.IUsageStatsManager: android.content.pm.ParceledListSlice queryConfigurationStats(int,long,long,java.lang.String)>
<android.location.GpsMeasurement: double getDopplerShiftInHz()>
<com.android.internal.app.IVoiceInteractor: com.android.internal.app.IVoiceInteractorRequest startCommand(java.lang.String,com.android.internal.app.IVoiceInteractorCallback,java.lang.String,android.os.Bundle)>
<android.content.Context: android.content.pm.PackageManager getPackageManager()>
<android.content.pm.PackageManager: java.util.List getInstalledPackages(int,int)>
<android.content.SyncStatusInfo: long getPeriodicSyncTime(int)>
<android.webkit.WebView: int computeVerticalScrollRange()>
<android.view.inputmethod.BaseInputConnection: int getComposingSpanEnd(android.text.Spannable)>
<android.media.effect.Effect: java.lang.String getName()>
<android.view.Window: void setContainer(android.view.Window)>
<android.text.method.MovementMethod: void onTakeFocus(android.widget.TextView,android.text.Spannable,int)>
<android.hardware.usb.UsbEndpoint: int getDirection()>
<android.media.tv.TvInputManager.SessionCallback: void onVideoAvailable(android.media.tv.TvInputManager.Session)>
<com.android.internal.app.WindowDecorActionBar: void setHideOnContentScrollEnabled(boolean)>
<android.telecom.Log: java.lang.String pii(java.lang.Object)>
<android.inputmethodservice.KeyboardView: void onDetachedFromWindow()>
<android.renderscript.Mesh.TriangleMeshBuilder: android.renderscript.Mesh.TriangleMeshBuilder addTriangle(int,int,int)>
<android.media.MediaExtractor: void finalize()>
<android.accounts.IAccountAuthenticator: void addAccountFromCredentials(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,android.os.Bundle)>
<android.os.CountDownTimer: android.os.CountDownTimer start()>
<android.database.sqlite.SQLiteClosable: void onAllReferencesReleased()>
<android.app.Dialog: void invalidateOptionsMenu()>
<android.widget.ScrollView: void onStopNestedScroll(android.view.View)>
<android.view.KeyEvent: boolean isSystemKey(int)>
<android.widget.Toolbar: int getContentInsetEnd()>
<android.telecom.Connection.VideoProvider: void onSetZoom(float)>
<com.android.internal.widget.DecorToolbar: void setDropdownSelectedPosition(int)>
<android.app.ActionBar: boolean invalidateOptionsMenu()>
<android.widget.TextView: int getLineHeight()>
<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfoByAccessibilityId(int,int,long,boolean,int)>
<android.transition.TransitionInflater: android.transition.TransitionManager inflateTransitionManager(int,android.view.ViewGroup)>
<android.hardware.camera2.params.MeteringRectangle: void <init>(android.graphics.Rect,int)>
<android.view.MenuItem: android.view.MenuItem setShortcut(char,char)>
<android.accessibilityservice.AccessibilityService.Callbacks: void onSetConnectionId(int)>
<android.view.IAssetAtlas: long[] getMap()>
<android.app.AppOpsManager: int noteOp(java.lang.String,int,java.lang.String)>
<android.content.ComponentName: java.lang.String toShortString()>
<android.telecom.RemoteConnection: void answer(int)>
<android.opengl.GLES11Ext: void glDrawTexsvOES(java.nio.ShortBuffer)>
<android.content.res.CompatibilityInfo.Translator: void translateWindowLayout(android.view.WindowManager.LayoutParams)>
<android.webkit.WebViewClient: boolean shouldOverrideKeyEvent(android.webkit.WebView,android.view.KeyEvent)>
<com.android.internal.util.XmlUtils: java.util.HashMap readMapXml(java.io.InputStream)>
<android.view.ViewGroup: boolean getClipToPadding()>
<android.app.IActivityManager: void resizeStack(int,android.graphics.Rect)>
<com.android.internal.util.ArrayUtils: long[] newUnpaddedLongArray(int)>
<android.media.RingtoneManager: void setStopPreviousRingtone(boolean)>
<android.preference.SwitchPreference: void setSwitchTextOn(java.lang.CharSequence)>
<android.view.View: boolean performLongClick()>
<android.media.MediaTimeProvider.OnMediaTimeListener: void onTimedEvent(long)>
<android.provider.BrowserContract.SyncState: android.content.ContentProviderOperation newSetOperation(android.accounts.Account,byte[])>
<android.widget.CompoundButton: void setButtonDrawable(int)>
<android.opengl.GLES20: void glVertexAttrib2f(int,float,float)>
<android.widget.TextView: java.lang.CharSequence getIterableTextForAccessibility()>
<android.media.MediaRouter: void removeRouteInt(android.media.MediaRouter.RouteInfo)>
<android.opengl.GLES30: void glClearBufferiv(int,int,int[],int)>
<android.service.dreams.IDreamManager: void awaken()>
<android.filterfw.core.FilterSurfaceView: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>
<android.telephony.CellSignalStrength: android.telephony.CellSignalStrength copy()>
<android.opengl.GLES10: void glColor4x(int,int,int,int)>
<android.gesture.GestureOverlayView: void cancelClearAnimation()>
<android.app.WallpaperManager: void suggestDesiredDimensions(int,int)>
<com.android.internal.util.FastXmlSerializer: org.xmlpull.v1.XmlSerializer text(char[],int,int)>
<android.net.NetworkAgent: void sendNetworkCapabilities(android.net.NetworkCapabilities)>
<com.android.internal.app.WindowDecorActionBar: void setIcon(android.graphics.drawable.Drawable)>
<android.view.TextureView: android.graphics.Canvas lockCanvas()>
<com.android.ims.ImsCallProfile: void setCallExtra(java.lang.String,java.lang.String)>
<android.service.media.IMediaBrowserServiceCallbacks: void onConnect(java.lang.String,android.media.session.MediaSession.Token,android.os.Bundle)>
<android.widget.CursorAdapter: android.database.Cursor swapCursor(android.database.Cursor)>
<android.view.animation.Transformation: void compose(android.view.animation.Transformation)>
<android.opengl.GLES31: void glProgramUniformMatrix3fv(int,int,int,boolean,java.nio.FloatBuffer)>
<com.google.android.gles_jni.GLImpl: void glLoadMatrixx(int[],int)>
<android.view.View: void setAccessibilityLiveRegion(int)>
<android.graphics.Canvas: boolean clipRect(android.graphics.RectF)>
<android.view.inputmethod.BaseInputConnection: void reportFinish()>
<android.security.KeyStore: boolean password(java.lang.String)>
<com.android.internal.widget.multiwaveview.GlowPadView: void reset(boolean)>
<android.view.animation.AnimationSet: long getStartTime()>
<android.opengl.GLES10: void glFrustumf(float,float,float,float,float,float)>
<android.widget.SearchView: boolean isQueryRefinementEnabled()>
<android.view.Window: void setAttributes(android.view.WindowManager.LayoutParams)>
<android.view.MotionEvent: int getActionMasked()>
<android.service.voice.VoiceInteractionSession: void startVoiceActivity(android.content.Intent)>
<android.content.Intent: char getCharExtra(java.lang.String,char)>
<android.os.UserHandle: boolean isIsolated(int)>
<android.widget.TableRow: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.media.AudioGain: int mode()>
<android.webkit.WebChromeClient: void onConsoleMessage(java.lang.String,int,java.lang.String)>
<android.opengl.GLES11Ext: void glDrawTexsOES(short,short,short,short,short)>
<android.view.animation.Animation: void setInterpolator(android.content.Context,int)>
<android.os.Environment.UserEnvironment: java.io.File getExternalStorageDirectory()>
<android.opengl.GLES30: void glResumeTransformFeedback()>
<android.graphics.drawable.GradientDrawable: void setCornerRadii(float[])>
<android.app.StatusBarManager: void collapsePanels()>
<android.widget.ListPopupWindow: android.view.View.OnTouchListener createDragToOpenListener(android.view.View)>
<com.android.internal.view.menu.MenuItemImpl: void setShowAsAction(int)>
<android.view.View: void invalidateParentIfNeeded()>
<android.os.SELinux: boolean setSELinuxEnforce(boolean)>
<android.webkit.URLUtil: java.lang.String composeSearchUrl(java.lang.String,java.lang.String,java.lang.String)>
<android.content.pm.PackageInstaller.Session: void commit(android.content.IntentSender)>
<android.renderscript.Short2: short dotProduct(android.renderscript.Short2)>
<android.media.projection.IMediaProjection: void unregisterCallback(android.media.projection.IMediaProjectionCallback)>
<android.media.SubtitleTrack: void scheduleTimedEvents()>
<android.net.ConnectivityManager: java.lang.String[] getTetherableIfaces()>
<android.telecom.Call.Details: int getCallProperties()>
<android.telephony.Rlog: int i(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.google.android.util.AbstractMessageParser.FlickrPhoto: java.lang.String getPhoto()>
<android.telephony.PhoneNumberUtils: java.lang.String calledPartyBCDFragmentToString(byte[],int,int)>
<android.graphics.Point: java.lang.String toString()>
<android.view.ViewGroup: void setMotionEventSplittingEnabled(boolean)>
<android.text.TextUtils: int lastIndexOf(java.lang.CharSequence,char,int,int)>
<android.app.ActivityManagerProxy: void publishContentProviders(android.app.IApplicationThread,java.util.List)>
<android.graphics.drawable.Drawable: void setTintMode(android.graphics.PorterDuff.Mode)>
<android.renderscript.Float4: void negate()>
<com.android.internal.content.PackageHelper: java.lang.String mountSdDir(java.lang.String,java.lang.String,int)>
<android.preference.MultiCheckPreference: java.lang.String[] getEntryValues()>
<android.net.ProxyInfo: void <init>(java.lang.String,int,java.lang.String)>
<com.android.internal.view.menu.SubMenuBuilder: boolean collapseItemActionView(com.android.internal.view.menu.MenuItemImpl)>
<android.telephony.CellInfoLte: android.telephony.CellSignalStrengthLte getCellSignalStrength()>
<com.android.internal.inputmethod.InputMethodSubtypeSwitchingController: com.android.internal.inputmethod.InputMethodSubtypeSwitchingController.ImeSubtypeListItem getNextInputMethodLocked(boolean,android.view.inputmethod.InputMethodInfo,android.view.inputmethod.InputMethodSubtype)>
<android.hardware.location.GeofenceHardwareImpl: void setGpsHardwareGeofence(android.location.IGpsGeofenceHardware)>
<android.content.SyncAdapterType: java.lang.String toString()>
<android.net.wifi.p2p.WifiP2pManager.ConnectionInfoListener: void onConnectionInfoAvailable(android.net.wifi.p2p.WifiP2pInfo)>
<android.media.session.ISessionManager: void removeSessionsListener(android.media.session.IActiveSessionsListener)>
<android.media.MediaPlayer: void selectTrack(int)>
<com.android.internal.app.RestrictionsPinActivity: void initUi()>
<android.view.Window: android.view.WindowManager.LayoutParams getAttributes()>
<com.android.internal.util.State: void exit()>
<android.content.res.Resources: void startPreloading()>
<android.media.MediaScanner: void finalize()>
<android.widget.AutoCompleteTextView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.media.tv.TvInputInfo: android.media.tv.TvInputInfo createTvInputInfo(android.content.Context,android.content.pm.ResolveInfo,android.media.tv.TvInputHardwareInfo,java.lang.String,android.net.Uri)>
<android.bluetooth.BluetoothAdapter.BluetoothStateChangeCallback: void onBluetoothStateChange(boolean)>
<android.app.IActivityManager: boolean bindBackupAgent(android.content.pm.ApplicationInfo,int)>
<android.view.View: void setOnClickListener(android.view.View.OnClickListener)>
<android.text.format.Formatter: java.lang.String formatShortElapsedTime(android.content.Context,long)>
<android.app.PendingIntent.CanceledException: void <init>(java.lang.String)>
<android.filterpacks.imageproc.SharpenFilter: void process(android.filterfw.core.FilterContext)>
<android.widget.OverScroller: boolean isFinished()>
<android.widget.AutoCompleteTextView: void setText(java.lang.CharSequence,boolean)>
<android.renderscript.Byte2: void setAt(int,byte)>
<android.emoji.EmojiFactory: java.lang.String getAndroidPuaFromVendorSpecificPua(java.lang.String)>
<android.security.Credentials: void install(android.content.Context,java.lang.String,byte[])>
<com.android.internal.widget.DecorContentParent: boolean showOverflowMenu()>
<android.location.SettingInjectorService: void onStart(android.content.Intent,int)>
<com.android.internal.widget.LockPatternUtils: boolean isEmergencyCallEnabledWhileSimLocked()>
<android.filterfw.core.SyncRunner: boolean isRunning()>
<android.net.IConnectivityManager: android.net.ProxyInfo getProxy()>
<android.media.AudioSystem: int listAudioPorts(java.util.ArrayList,int[])>
<android.graphics.drawable.ShapeDrawable: void setDither(boolean)>
<com.android.internal.os.ProcessCpuTracker: void onLoadChanged(float,float,float)>
<android.app.Activity: void runOnUiThread(java.lang.Runnable)>
<android.app.Application: void onCreate()>
<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl.SamplingTimer getKernelWakelockTimerLocked(java.lang.String)>
<android.database.AbstractWindowedCursor: boolean isString(int)>
<android.widget.ActionMenuPresenter: boolean isOverflowReserved()>
<android.filterpacks.imageproc.StraightenFilter: void process(android.filterfw.core.FilterContext)>
<com.android.internal.logging.AndroidHandler: void publish(java.util.logging.LogRecord)>
<android.view.ViewGroup: void setPersistentDrawingCache(int)>
<android.telephony.CellIdentityCdma: boolean equals(java.lang.Object)>
<com.android.internal.os.RuntimeInit: void wtf(java.lang.String,java.lang.Throwable,boolean)>
<com.android.internal.os.BatteryStatsImpl.Uid: void readSyncSummaryFromParcelLocked(java.lang.String,android.os.Parcel)>
<android.opengl.GLES11Ext: void glEGLImageTargetTexture2DOES(int,java.nio.Buffer)>
<android.util.LongSparseLongArray: int indexOfValue(long)>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: void setEnterFadeDuration(int)>
<android.filterfw.core.OutputPort: boolean hasFrame()>
<android.telecom.Call: android.telecom.InCallService.VideoCall getVideoCall()>
<android.view.WindowManagerPolicy: boolean isKeyguardSecure()>
<android.opengl.GLES11Ext: void glMultMatrixxOES(int[],int)>
<android.widget.RelativeLayout.LayoutParams: void resolveLayoutDirection(int)>
<android.provider.Settings.Secure: long getLong(android.content.ContentResolver,java.lang.String,long)>
<android.os.Bundle: void putParcelableList(java.lang.String,java.util.List)>
<android.service.dreams.DreamManagerInternal: boolean isDreaming()>
<android.telecom.TelecomManager: java.util.List getSimCallManagers()>
<com.android.internal.app.WindowDecorActionBar: android.app.ActionBar.Tab getSelectedTab()>
<com.android.internal.widget.LockScreenWidgetCallback: void requestShow(android.view.View)>
<android.widget.ScrollView: boolean performAccessibilityAction(int,android.os.Bundle)>
<android.nfc.TechListParcel: int describeContents()>
<android.bluetooth.BluetoothUuid: boolean isAudioSink(android.os.ParcelUuid)>
<android.media.AudioManager: void setBluetoothScoOn(boolean)>
<android.renderscript.Allocation: void copy2DRangeFrom(int,int,android.graphics.Bitmap)>
<android.graphics.drawable.Drawable: boolean onLevelChange(int)>
<android.hardware.usb.UsbDevice: int getDeviceSubclass()>
<android.hardware.location.GeofenceHardwareService: android.os.IBinder onBind(android.content.Intent)>
<android.app.Notification.BigPictureStyle: void addExtras(android.os.Bundle)>
<android.widget.TextView: int getLineBounds(int,android.graphics.Rect)>
<android.graphics.drawable.BitmapDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>
<android.app.ActivityManagerProxy: void clearPendingBackup()>
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setIntent(android.content.Intent)>
<android.webkit.WebViewProvider: boolean zoomBy(float)>
<android.bluetooth.BluetoothAdapter: java.lang.String getAddress()>
<android.hardware.GeomagneticField: float getFieldStrength()>
<android.widget.LinearLayout: void onDraw(android.graphics.Canvas)>
<android.opengl.GLES30: void glUniform4uiv(int,int,java.nio.IntBuffer)>
<android.widget.ListPopupWindow: int getWidth()>
<android.widget.AdapterViewFlipper: void <init>(android.content.Context)>
<android.preference.Preference: void setOrder(int)>
<android.bluetooth.BluetoothGattCallbackWrapper: void onScanResult(android.bluetooth.le.ScanResult)>
<android.telephony.TelephonyManager: int getDataActivity()>
<android.net.LinkProperties: android.net.ProxyInfo getHttpProxy()>
<android.nfc.NfcAdapter.CreateNdefMessageCallback: android.nfc.NdefMessage createNdefMessage(android.nfc.NfcEvent)>
<android.media.MediaPlayer: void setDataSource(java.lang.String,java.util.Map)>
<android.util.ArrayMap: java.lang.Object setValueAt(int,java.lang.Object)>
<android.os.BatteryStats: void dumpLocked(android.content.Context,java.io.PrintWriter,java.lang.String,int,int,boolean)>
<android.widget.AutoCompleteTextView: void performValidation()>
<android.media.Metadata: int lastSytemId()>
<android.animation.Animator: void setupStartValues()>
<android.nfc.ErrorCodes: boolean isError(int)>
<android.appwidget.AppWidgetHost: void startAppWidgetConfigureActivityForResult(android.app.Activity,int,int,int,android.os.Bundle)>
<android.hardware.location.GeofenceHardwareCallback: void onGeofencePause(int,int)>
<android.net.DhcpResults: void <init>(android.net.StaticIpConfiguration)>
<android.view.inputmethod.InputBinding: void <init>(android.view.inputmethod.InputConnection,android.view.inputmethod.InputBinding)>
<com.android.internal.widget.ToolbarWidgetWrapper: void setDefaultNavigationContentDescription(int)>
<android.bluetooth.BluetoothManager: android.bluetooth.BluetoothAdapter getAdapter()>
<android.widget.AutoCompleteTextView: android.graphics.drawable.Drawable getDropDownBackground()>
<android.os.BatteryStats: int getBluetoothPingCount()>
<android.graphics.Paint: boolean getFillPath(android.graphics.Path,android.graphics.Path)>
<android.media.AudioService.VolumeController: void setController(android.media.IVolumeController)>
<android.hardware.camera2.params.MeteringRectangle: android.graphics.Rect getRect()>
<android.speech.tts.ITextToSpeechService: int speak(android.os.IBinder,java.lang.CharSequence,int,android.os.Bundle,java.lang.String)>
<android.net.NetworkInfo: int describeContents()>
<android.view.inputmethod.InputConnection: boolean performPrivateCommand(java.lang.String,android.os.Bundle)>
<android.graphics.drawable.ColorDrawable: int getColor()>
<android.renderscript.Type: boolean hasFaces()>
<android.content.SyncStatusInfo: void <init>(android.content.SyncStatusInfo)>
<android.view.TextureView.SurfaceTextureListener: void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int)>
<com.android.internal.widget.ILockSettings: void setLong(java.lang.String,long,int)>
<android.hardware.camera2.CameraManager: void openCamera(java.lang.String,android.hardware.camera2.CameraDevice.StateCallback,android.os.Handler)>
<com.android.internal.view.menu.MenuBuilder: java.lang.CharSequence getHeaderTitle()>
<android.hardware.Camera.OnZoomChangeListener: void onZoomChange(int,boolean,android.hardware.Camera)>
<android.os.BatteryStats.Uid.Proc: int getStarts(int)>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence)>
<android.net.http.Headers: java.lang.String getContentType()>
<android.widget.DialerFilter: void onFocusChanged(boolean,int,android.graphics.Rect)>
<android.media.ToneGenerator: void stopTone()>
<android.graphics.Canvas: android.graphics.Matrix getMatrix()>
<android.telecom.ParcelableCall: java.util.List getCannedSmsResponses()>
<com.android.internal.view.menu.ActionMenu: void clear()>
<android.net.http.RequestHandle: void cancel()>
<android.telecom.TelecomManager: android.telecom.PhoneAccountHandle getDefaultOutgoingPhoneAccount(java.lang.String)>
<android.widget.TextView: void setFreezesText(boolean)>
<android.telecom.RemoteConference: void merge()>
<android.widget.AdapterViewAnimator: void deferNotifyDataSetChanged()>
<com.android.internal.app.IBatteryStats: void noteStartWakelock(int,int,java.lang.String,java.lang.String,int,boolean)>
<com.android.internal.telephony.ISms: void sendTextForSubscriber(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>
<android.animation.ObjectAnimator: java.lang.Object getTarget()>
<android.view.InputQueue.Callback: void onInputQueueCreated(android.view.InputQueue)>
<com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>
<com.android.internal.os.BatteryStatsImpl: void noteMobileRadioPowerState(int,long)>
<android.app.backup.IBackupManager: void fullTransportBackup(java.lang.String[])>
<android.view.SurfaceHolder: void setKeepScreenOn(boolean)>
<android.app.Activity: android.content.SharedPreferences getPreferences(int)>
<android.opengl.GLES10: void glNormal3f(float,float,float)>
<android.telecom.Log: void e(java.lang.Object,java.lang.Throwable,java.lang.String,java.lang.Object[])>
<android.opengl.GLES30: int glClientWaitSync(long,int,long)>
<android.filterfw.GraphEnvironment: int addGraph(android.filterfw.core.FilterGraph)>
<android.location.LocationManager: void addProximityAlert(double,double,float,long,android.app.PendingIntent)>
<android.text.StaticLayout: int getLineStart(int)>
<android.view.accessibility.AccessibilityRecord: int getCurrentItemIndex()>
<android.view.inputmethod.InputConnectionWrapper: boolean performEditorAction(int)>
<android.service.voice.VoiceInteractionServiceInfo: java.lang.String getRecognitionService()>
<android.renderscript.FieldPacker: int getPos()>
<android.service.dreams.IDreamManager: void finishSelf(android.os.IBinder,boolean)>
<android.hardware.Camera.Parameters: void setFocusAreas(java.util.List)>
<android.renderscript.Script: void setVar(int,long)>
<android.database.sqlite.SQLiteDatabase: boolean yieldIfContended()>
<android.animation.AnimatorSet: void end()>
<android.view.accessibility.AccessibilityNodeInfo: boolean isLongClickable()>
<android.widget.TabWidget: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.internal.policy.IKeyguardService: void showAssistant()>
<android.bluetooth.BluetoothHeadset: boolean stopVoiceRecognition(android.bluetooth.BluetoothDevice)>
<android.print.PrintManager.PrintJobStateChangeListener: void onPrintJobStateChanged(android.print.PrintJobId)>
<android.view.ViewGroup: void scheduleLayoutAnimation()>
<android.accessibilityservice.AccessibilityServiceInfo: void <init>(android.content.pm.ResolveInfo,android.content.Context)>
<android.view.Window: void setFeatureDrawableUri(int,android.net.Uri)>
<android.widget.RadialTimePickerView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.webkit.WebView: void requestFocusNodeHref(android.os.Message)>
<android.util.ExceptionUtils: void maybeUnwrapIOException(java.lang.RuntimeException)>
<android.renderscript.Matrix4f: void load(android.renderscript.Matrix4f)>
<android.widget.AbsSeekBar: int getKeyProgressIncrement()>
<android.view.inputmethod.InputMethodManager: int getInputMethodWindowVisibleHeight()>
<android.os.INetworkManagementService: void clearDefaultNetId()>
<android.media.MediaRouter: android.media.MediaRouter.RouteCategory getCategoryAt(int)>
<com.android.internal.backup.IBackupTransport: int performBackup(android.content.pm.PackageInfo,android.os.ParcelFileDescriptor)>
<android.hardware.camera2.params.Face: void <init>(android.graphics.Rect,int,int,android.graphics.Point,android.graphics.Point,android.graphics.Point)>
<android.telecom.TelecomManager: android.content.ComponentName getDefaultPhoneApp()>
<android.renderscript.Short4: void setAt(int,short)>
<android.hardware.soundtrigger.SoundTrigger.RecognitionEvent: void <init>(int,int,boolean,int,int,int,boolean,android.media.AudioFormat,byte[])>
<android.widget.Button: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.text.TextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>
<android.hardware.input.TouchCalibration: void <init>(float,float,float,float,float,float)>
<com.android.internal.os.BatteryStatsImpl: void setBatteryState(int,int,int,int,int,int)>
<android.graphics.Paint: boolean isFilterBitmap()>
<android.app.ActivityManager: java.util.List getRecentTasks(int,int)>
<android.view.accessibility.AccessibilityWindowInfo: int describeContents()>
<android.app.Instrumentation: android.os.Bundle getAllocCounts()>
<android.telecom.AudioState: java.lang.String toString()>
<android.util.Log: java.lang.String getStackTraceString(java.lang.Throwable)>
<com.google.android.gles_jni.GLImpl: void glTexCoordPointer(int,int,int,int)>
<android.app.RemoteInput: void addResultsToIntent(android.app.RemoteInput[],android.content.Intent,android.os.Bundle)>
<android.opengl.GLSurfaceView: void surfaceCreated(android.view.SurfaceHolder)>
<android.database.AbstractCursor: void checkPosition()>
<android.widget.ListView: void setHeaderDividersEnabled(boolean)>
<android.text.format.DateUtils: java.util.Formatter formatDateRange(android.content.Context,java.util.Formatter,long,long,int)>
<android.media.audiofx.LoudnessEnhancer.Settings: void <init>(java.lang.String)>
<android.widget.PopupMenu: void onCloseMenu(com.android.internal.view.menu.MenuBuilder,boolean)>
<android.graphics.Path: void addOval(android.graphics.RectF,android.graphics.Path.Direction)>
<android.webkit.ClientCertRequest: java.lang.String getHost()>
<android.os.DropBoxManager.Entry: java.lang.String getTag()>
<com.android.server.net.NetlinkTracker: void addressUpdated(java.lang.String,android.net.LinkAddress)>
<android.app.IActivityManager: int startActivity(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle)>
<android.content.pm.ActivityInfo: int activityInfoConfigToNative(int)>
<android.drm.DrmInfoStatus: void <init>(int,int,android.drm.ProcessedData,java.lang.String)>
<android.net.wifi.p2p.nsd.WifiP2pServiceInfo: int describeContents()>
<android.speech.SpeechRecognizer: android.speech.SpeechRecognizer createSpeechRecognizer(android.content.Context)>
<android.app.ActivityManagerProxy: boolean isUserRunning(int,boolean)>
<android.widget.GridLayout: android.widget.GridLayout.Spec spec(int)>
<com.android.ims.ImsSsInfo: java.lang.String toString()>
<android.net.IConnectivityManager: android.net.LinkQualityInfo getLinkQualityInfo(int)>
<android.graphics.drawable.BitmapDrawable: void setGravity(int)>
<android.view.OrientationListener: void <init>(android.content.Context)>
<android.view.ViewDebug: void stopHierarchyTracing()>
<android.app.admin.IDevicePolicyManager: java.lang.String[] getAccountTypesWithManagementDisabled()>
<android.view.WindowInsets: int getSystemWindowInsetRight()>
<android.media.TtmlRenderer: boolean supports(android.media.MediaFormat)>
<com.android.internal.net.VpnConfig: void addLegacyRoutes(java.lang.String)>
<com.android.internal.os.BatteryStatsImpl: int getPhoneSignalStrengthCount(int,int)>
<android.hardware.Camera.AutoFocusMoveCallback: void onAutoFocusMoving(boolean,android.hardware.Camera)>
<android.opengl.GLES20: void glCompileShader(int)>
<android.accounts.ChooseTypeAndAccountActivity: void run(android.accounts.AccountManagerFuture)>
<android.renderscript.Int2: android.renderscript.Int2 sub(android.renderscript.Int2,int)>
<android.content.Context: java.lang.CharSequence getText(int)>
<android.location.Address: void setAddressLine(int,java.lang.String)>
<android.accounts.IAccountManagerResponse: void onResult(android.os.Bundle)>
<android.renderscript.Short2: android.renderscript.Short2 div(android.renderscript.Short2,android.renderscript.Short2)>
<android.view.accessibility.AccessibilityWindowInfo: void setFocused(boolean)>
<android.bluetooth.le.BluetoothLeScanner: void <init>(android.bluetooth.IBluetoothManager)>
<android.app.Fragment: int hashCode()>
<android.telecom.PhoneCapabilities: java.lang.String toString(int)>
<android.telecom.Log: void w(java.lang.String,java.lang.String,java.lang.Object[])>
<android.os.BatteryProperty: int describeContents()>
<android.media.tv.TvInputInfo: java.lang.String toString()>
<android.app.ProgressDialog: int getSecondaryProgress()>
<android.renderscript.Long3: android.renderscript.Long3 mod(android.renderscript.Long3,android.renderscript.Long3)>
<android.webkit.URLUtil: boolean isAssetUrl(java.lang.String)>
<android.hardware.camera2.CameraCharacteristics: java.lang.Object get(android.hardware.camera2.CameraCharacteristics.Key)>
<com.google.android.gles_jni.GLImpl: void glColor4ub(byte,byte,byte,byte)>
<android.view.WindowManagerInternal.MagnificationCallbacks: void onMagnifedBoundsChanged(android.graphics.Region)>
<android.media.ExifInterface: void saveAttributes()>
<android.view.inputmethod.InputMethodManager: void displayCompletions(android.view.View,android.view.inputmethod.CompletionInfo[])>
<android.media.session.ISessionCallback: void onSeekTo(long)>
<android.os.UEventObserver: void onUEvent(android.os.UEventObserver.UEvent)>
<android.printservice.PrintDocument: android.print.PrintDocumentInfo getInfo()>
<com.android.internal.view.menu.ActionMenuItem: android.view.SubMenu getSubMenu()>
<android.app.ActivityThread: void handleOnBackgroundVisibleBehindChanged(android.os.IBinder,boolean)>
<android.telephony.PhoneStateListener: void onMessageWaitingIndicatorChanged(boolean)>
<android.media.AudioManager: void playSoundEffect(int,float)>
<com.android.internal.os.BatteryStatsImpl: void noteFlashlightOffLocked()>
<android.net.NetworkFactory: void releaseNetworkFor(android.net.NetworkRequest)>
<android.widget.TabHost: void setup()>
<android.provider.MediaStore.Audio: java.lang.String keyFor(java.lang.String)>
<android.os.Parcel: void readDoubleArray(double[])>
<android.hardware.display.WifiDisplaySessionInfo: void writeToParcel(android.os.Parcel,int)>
<android.content.ContentResolver: void <init>(android.content.Context)>
<android.content.pm.PackageInstaller.SessionInfo: java.lang.String getInstallerPackageName()>
<com.android.internal.os.BaseCommand: void showError(java.lang.String)>
<android.filterfw.core.OneShotScheduler: android.filterfw.core.Filter scheduleNextNode()>
<android.media.session.MediaSession.QueueItem: long getQueueId()>
<com.google.android.collect.Sets: android.util.ArraySet newArraySet()>
<android.renderscript.Double4: android.renderscript.Double4 mul(android.renderscript.Double4,double)>
<android.nfc.NdefMessage: void <init>(android.nfc.NdefRecord,android.nfc.NdefRecord[])>
<android.service.media.MediaBrowserService: android.service.media.MediaBrowserService.BrowserRoot onGetRoot(java.lang.String,int,android.os.Bundle)>
<android.view.WindowManagerInternal.MagnificationCallbacks: void onUserContextChanged()>
<android.content.BroadcastReceiver: void setResultExtras(android.os.Bundle)>
<android.graphics.FontListParser: android.graphics.FontListParser.Config parse(java.io.InputStream)>
<android.provider.UserDictionary.Words: void addWord(android.content.Context,java.lang.String,int,int)>
<android.view.View: void setBottom(int)>
<android.provider.MediaStore.Audio.Albums: android.net.Uri getContentUri(java.lang.String)>
<android.app.StatusBarManager: void removeIcon(java.lang.String)>
<android.print.PrintManager: java.util.List getInstalledPrintServices()>
<android.os.StrictMode.Span: void finish()>
<com.android.internal.telephony.ISub: long getDefaultVoiceSubId()>
<android.telecom.ConnectionService: android.telecom.Connection onCreateOutgoingConnection(android.telecom.PhoneAccountHandle,android.telecom.ConnectionRequest)>
<android.net.http.SslCertificate: android.os.Bundle saveState(android.net.http.SslCertificate)>
<android.hardware.Camera: android.hardware.Camera open(int)>
<android.app.ActivityManagerProxy: void killUid(int,java.lang.String)>
<android.provider.MediaStore.Video.Thumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,long,int,android.graphics.BitmapFactory.Options)>
<android.view.View: void postOnAnimation(java.lang.Runnable)>
<android.animation.AnimatorListenerAdapter: void onAnimationRepeat(android.animation.Animator)>
<android.telephony.TelephonyManager: java.util.List getAllCellInfo()>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDSrcAtop()>
<android.net.NetworkInfo: java.lang.String toString()>
<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceResponse: java.lang.String toString()>
<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setTitleCondensed(java.lang.CharSequence)>
<android.net.RouteInfo: android.net.RouteInfo selectBestRoute(java.util.Collection,java.net.InetAddress)>
<android.print.ILayoutResultCallback: void onLayoutCanceled(int)>
<android.renderscript.Byte3: void addMultiple(android.renderscript.Byte3,byte)>
<android.service.dreams.DreamService: boolean onCreatePanelMenu(int,android.view.Menu)>
<android.os.PowerManagerInternal: void setScreenBrightnessOverrideFromWindowManager(int)>
<android.app.IActivityManager: int checkGrantUriPermission(int,java.lang.String,android.net.Uri,int,int)>
<com.android.internal.view.menu.ActionMenuItemView: boolean dispatchHoverEvent(android.view.MotionEvent)>
<android.inputmethodservice.InputMethodService: boolean onKeyUp(int,android.view.KeyEvent)>
<android.print.PageRange: int getStart()>
<android.mtp.MtpServer: void sendDevicePropertyChanged(int)>
<android.graphics.drawable.DrawableContainer: void getOutline(android.graphics.Outline)>
<android.hardware.camera2.utils.ArrayUtils: java.util.List convertStringListToIntList(java.util.List,java.lang.String[],int[])>
<android.app.RemoteInput.Builder: android.os.Bundle getExtras()>
<android.accessibilityservice.AccessibilityService: android.view.accessibility.AccessibilityNodeInfo findFocus(int)>
<android.graphics.Path: void set(android.graphics.Path)>
<android.view.textservice.SpellCheckerSubtype: java.lang.String getExtraValue()>
<android.nfc.NdefRecord: short getTnf()>
<android.content.pm.PackageManager: android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String,int)>
<android.hardware.camera2.CameraDevice: void createCaptureSession(java.util.List,android.hardware.camera2.CameraCaptureSession.StateCallback,android.os.Handler)>
<android.view.SurfaceHolder.Callback: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>
<android.telephony.NeighboringCellInfo: int getNetworkType()>
<com.android.internal.util.XmlUtils: void writeUriAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,android.net.Uri)>
<android.content.pm.PackageStats: void <init>(android.os.Parcel)>
<android.text.HtmlToSpannedConverter: void ignorableWhitespace(char[],int,int)>
<android.filterfw.core.StopWatchMap: void start(java.lang.String)>
<android.nfc.Tag: void setConnectedTechnology(int)>
<android.graphics.drawable.PictureDrawable: int getIntrinsicWidth()>
<android.graphics.NinePatch: android.graphics.Bitmap getBitmap()>
<android.graphics.drawable.VectorDrawable: void setAutoMirrored(boolean)>
<android.content.Context: int checkCallingOrSelfPermission(java.lang.String)>
<android.mtp.MtpDevice: android.mtp.MtpStorageInfo getStorageInfo(int)>
<android.print.IPrintSpooler: void removeObsoletePrintJobs()>
<android.telephony.CellSignalStrengthCdma: int getEvdoDbm()>
<com.android.internal.os.BatteryStatsImpl.Uid.Pkg.Serv: void stopLaunchedLocked()>
<android.text.style.TtsSpan.TextBuilder: android.text.style.TtsSpan.TextBuilder setText(java.lang.String)>
<android.renderscript.Int2: void mod(int)>
<android.telephony.ServiceState: int getRadioTechnology()>
<android.opengl.ETC1Util: void loadTexture(int,int,int,int,int,android.opengl.ETC1Util.ETC1Texture)>
<android.transition.TransitionSet: void runAnimators()>
<android.view.View: void destroyDrawingCache()>
<android.text.util.Rfc822Token: java.lang.String getAddress()>
<com.android.internal.app.WindowDecorActionBar: void setSplitBackgroundDrawable(android.graphics.drawable.Drawable)>
<android.media.IAudioService: void remoteControlDisplayWantsPlaybackPositionSync(android.media.IRemoteControlDisplay,boolean)>
<android.bluetooth.BluetoothActivityEnergyInfo: int describeContents()>
<android.widget.AlphabetIndexer: void setCursor(android.database.Cursor)>
<android.media.AudioService: void adjustSuggestedStreamVolume(int,int,int,java.lang.String)>
<android.telephony.CellSignalStrengthWcdma: void initialize(int,int)>
<android.net.Uri: java.lang.String decode(java.lang.String)>
<com.android.internal.widget.LockPatternView.OnPatternListener: void onPatternStart()>
<android.net.LinkProperties: void setMtu(int)>
<android.bluetooth.IBluetooth: boolean createBond(android.bluetooth.BluetoothDevice,int)>
<android.view.accessibility.AccessibilityEvent: void setEventTime(long)>
<android.opengl.GLES20: void glUniformMatrix2fv(int,int,boolean,java.nio.FloatBuffer)>
<android.os.INetworkManagementService: void startClatd(java.lang.String)>
<android.content.AsyncQueryHandler: void onUpdateComplete(int,java.lang.Object,int)>
<android.media.MediaRouter.SimpleCallback: void onRouteGrouped(android.media.MediaRouter,android.media.MediaRouter.RouteInfo,android.media.MediaRouter.RouteGroup,int)>
<android.opengl.GLES20: void glGetVertexAttribiv(int,int,int[],int)>
<android.view.SurfaceControl: void setDisplaySize(android.os.IBinder,int,int)>
<android.content.CursorLoader: java.lang.String getSelection()>
<android.util.JsonWriter: void setIndent(java.lang.String)>
<android.content.ContentProviderProxy: android.os.ParcelFileDescriptor openFile(java.lang.String,android.net.Uri,java.lang.String,android.os.ICancellationSignal)>
<android.telephony.PhoneStateListener: void onCallStateChanged(int,java.lang.String)>
<android.widget.TabWidget: android.view.View getChildTabViewAt(int)>
<android.os.Debug: void enableEmulatorTraceOutput()>
<android.location.IFusedGeofenceHardware: boolean isSupported()>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle addAccount(android.accounts.AccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)>
<com.android.internal.view.BaseSurfaceHolder: android.graphics.Rect getSurfaceFrame()>
<android.bluetooth.BluetoothHeadset: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.print.PrintJobInfo: int getState()>
<android.media.projection.MediaProjectionInfo: java.lang.String getPackageName()>
<com.google.android.gles_jni.GLImpl: void glNormalPointer(int,int,int)>
<android.os.Looper: android.os.Looper myLooper()>
<android.filterpacks.imageproc.ToRGBFilter: void process(android.filterfw.core.FilterContext)>
<android.telephony.CellSignalStrengthGsm: boolean equals(java.lang.Object)>
<android.inputmethodservice.KeyboardView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.content.pm.PackageParser.Component: android.content.ComponentName getComponentName()>
<android.app.ApplicationThreadProxy: void processInBackground()>
<com.android.server.NetworkManagementSocketTagger: void resetKernelUidStats(int)>
<android.print.PrinterId: android.content.ComponentName getServiceName()>
<android.view.View: boolean requestFocus()>
<com.android.internal.view.IInputConnectionWrapper: void performContextMenuAction(int)>
<com.android.internal.inputmethod.InputMethodUtils.InputMethodSettings: void putSelectedInputMethod(java.lang.String)>
<android.text.style.SpellCheckSpan: void setSpellCheckInProgress(boolean)>
<android.view.ViewTreeObserver: void removeOnPreDrawListener(android.view.ViewTreeObserver.OnPreDrawListener)>
<android.hardware.location.ActivityRecognitionHardware: boolean isActivitySupported(java.lang.String)>
<android.widget.SearchView.OnQueryTextListener: boolean onQueryTextSubmit(java.lang.String)>
<android.view.MenuItem: android.view.MenuItem setTitle(java.lang.CharSequence)>
<android.media.tv.TvInputManager: boolean isParentalControlsEnabled()>
<com.android.internal.view.menu.ActionMenu: void setGroupCheckable(int,boolean,boolean)>
<android.opengl.GLES30: void glRenderbufferStorageMultisample(int,int,int,int,int)>
<android.app.admin.IDevicePolicyManager: int getPasswordMinimumSymbols(android.content.ComponentName,int)>
<com.android.internal.view.InputConnectionWrapper: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder delete(int,int)>
<android.media.RemoteDisplayState.RemoteDisplayInfo: void <init>(java.lang.String)>
<android.view.textservice.SpellCheckerSubtype: java.util.List sort(android.content.Context,int,android.view.textservice.SpellCheckerInfo,java.util.List)>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setCustomContentHeight(int)>
<android.app.Fragment: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu.ContextMenuInfo)>
<android.graphics.Paint: void finalize()>
<android.view.accessibility.AccessibilityEvent: void appendRecord(android.view.accessibility.AccessibilityRecord)>
<android.media.audiofx.AudioEffect: void setEnableStatusListener(android.media.audiofx.AudioEffect.OnEnableStatusChangeListener)>
<android.telecom.ParcelableConference: java.util.List getConnectionIds()>
<android.transition.Crossfade: int getResizeBehavior()>
<android.webkit.WebSettings: void setDefaultFontSize(int)>
<android.inputmethodservice.InputMethodService: android.view.inputmethod.EditorInfo getCurrentInputEditorInfo()>
<com.android.internal.telephony.SmsRawData: byte[] getBytes()>
<android.location.GpsMeasurement: void setElevationInDeg(double)>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDSrcOver()>
<android.content.Intent: void setContentUserHint(int)>
<android.media.TtmlTrack: void onRootNodeParsed(android.media.TtmlNode)>
<android.os.Debug.InstructionCount: int globalMethodInvocations()>
<android.opengl.GLES11Ext: void glGenFramebuffersOES(int,java.nio.IntBuffer)>
<android.bluetooth.BluetoothAdapter: boolean setScanMode(int,int)>
<com.android.internal.telephony.ISms: boolean disableCellBroadcast(int)>
<android.media.MediaPlayer: android.media.MediaPlayer.TrackInfo[] getTrackInfo()>
<android.app.ExpandableListActivity: long getSelectedPosition()>
<com.android.internal.widget.multiwaveview.TargetDrawable: void setState(int[])>
<android.content.Intent: int describeContents()>
<android.net.SSLCertificateSocketFactory: javax.net.SocketFactory getDefault(int)>
<com.android.internal.view.IInputMethodClient: void onBindMethod(com.android.internal.view.InputBindResult)>
<android.widget.Gallery.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<android.app.Instrumentation: android.app.Instrumentation.ActivityResult execStartActivity(android.content.Context,android.os.IBinder,android.os.IBinder,android.app.Activity,android.content.Intent,int,android.os.Bundle)>
<com.android.internal.view.menu.ListMenuItemView: boolean prefersCondensedTitle()>
<android.widget.Gallery: int computeHorizontalScrollExtent()>
<android.graphics.drawable.PictureDrawable: void setPicture(android.graphics.Picture)>
<android.filterpacks.imageproc.BlackWhiteFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>
<android.telephony.TelephonyManager: boolean supplyPin(java.lang.String)>
<android.webkit.CookieSyncManager: void resetSync()>
<android.location.GpsMeasurement: void resetDopplerShiftUncertaintyInHz()>
<android.accounts.AccountManager: void invalidateAuthToken(java.lang.String,java.lang.String)>
<android.provider.ContactsContract.Contacts.AggregationSuggestions.Builder: android.provider.ContactsContract.Contacts.AggregationSuggestions.Builder addParameter(java.lang.String,java.lang.String)>
<com.android.ims.internal.IImsCallSessionListener: void callSessionResumeReceived(com.android.ims.internal.IImsCallSession,com.android.ims.ImsCallProfile)>
<android.hardware.camera2.impl.CaptureResultExtras: int getSubsequenceId()>
<android.net.wifi.WifiInfo: int getRssi()>
<android.database.sqlite.SQLiteDatabase: boolean inTransaction()>
<com.google.android.gles_jni.GLImpl: void glFogxv(int,int[],int)>
<android.renderscript.Sampler: android.renderscript.Sampler MIRRORED_REPEAT_LINEAR_MIP_LINEAR(android.renderscript.RenderScript)>
<android.widget.ListPopupWindow: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.net.wifi.WifiScanner.ParcelableScanResults: int describeContents()>
<android.view.View: int combineMeasuredStates(int,int)>
<android.speech.tts.TextToSpeech: void <init>(android.content.Context,android.speech.tts.TextToSpeech.OnInitListener)>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildUnionSubQuery(java.lang.String,java.lang.String[],java.util.Set,int,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.String)>
<android.preference.SwitchPreference: void setSwitchTextOn(int)>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor[] createReliablePipe()>
<android.view.WindowId: int describeContents()>
<android.widget.TextView: int getHorizontalOffsetForDrawables()>
<android.location.Address: void clearLongitude()>
<android.hardware.soundtrigger.SoundTriggerModule: int unloadSoundModel(int)>
<android.media.audiofx.Equalizer: java.lang.String getPresetName(short)>
<android.app.ProgressDialog: void <init>(android.content.Context,int)>
<android.widget.Editor: void beginBatchEdit()>
<android.media.MediaRouter.RouteInfo: boolean matchesTypes(int)>
<android.bluetooth.BluetoothDevice: boolean createBond()>
<android.print.PrinterDiscoverySession.OnPrintersChangeListener: void onPrintersChanged()>
<android.graphics.drawable.RotateDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>
<android.bluetooth.IBluetoothHeadsetClient: boolean redial(android.bluetooth.BluetoothDevice)>
<android.media.effect.effects.IdentityEffect: void release()>
<android.mtp.MtpDatabase: void addStorage(android.mtp.MtpStorage)>
<android.renderscript.AllocationAdapter: void subElementData(int,int,android.renderscript.FieldPacker)>
<android.text.method.BaseMovementMethod: boolean onKeyDown(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>
<android.widget.AbsSeekBar: android.graphics.PorterDuff.Mode getThumbTintMode()>
<android.view.AbsSavedState: void <init>(android.os.Parcelable)>
<android.widget.NumberPicker: int getSolidColor()>
<android.os.Parcel: double[] createDoubleArray()>
<android.media.ResampleInputStream: void <init>(java.io.InputStream,int,int)>
<com.android.internal.util.FileRotator: void combineActive(com.android.internal.util.FileRotator.Reader,com.android.internal.util.FileRotator.Writer,long)>
<android.nfc.NfcManager: void <init>(android.content.Context)>
<android.media.FaceDetector.Face: float pose(int)>
<android.view.ViewGroup: boolean isChildrenDrawingOrderEnabled()>
<android.database.sqlite.SQLiteGlobal: java.lang.String getDefaultSyncMode()>
<android.content.ContextWrapper: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>
<android.os.Binder: boolean isProxy(android.os.IInterface)>
<android.telecom.InCallService.VideoCall: void setPauseImage(java.lang.String)>
<android.database.DatabaseUtils.InsertHelper: void bind(int,java.lang.String)>
<com.android.internal.widget.DecorToolbar: void setWindowTitle(java.lang.CharSequence)>
<android.hardware.camera2.utils.TypeReference: java.lang.reflect.Type getType()>
<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setComputeClickPointInScreenActionResult(android.graphics.Point,int)>
<android.filterfw.core.FilterPort: java.lang.String getName()>
<android.widget.TableLayout: void setOnHierarchyChangeListener(android.view.ViewGroup.OnHierarchyChangeListener)>
<android.preference.PreferenceManager: android.preference.PreferenceScreen createPreferenceScreen(android.content.Context)>
<android.renderscript.Double2: void setAt(int,double)>
<android.print.ILayoutResultCallback: void onLayoutFailed(java.lang.CharSequence,int)>
<android.hardware.camera2.impl.CameraMetadataNative: int getTag(java.lang.String)>
<android.hardware.SerialPort: void open(android.os.ParcelFileDescriptor,int)>
<android.graphics.RectF: boolean intersect(android.graphics.RectF)>
<android.app.ProgressDialog: int getMax()>
<android.nfc.Tag: byte[] getId()>
<android.widget.Switch: void onLayout(boolean,int,int,int,int)>
<android.text.LoginFilter.UsernameFilterGeneric: void <init>(boolean)>
<android.os.INetworkManagementService: void clearInterfaceAddresses(java.lang.String)>
<android.gesture.GestureLibrary: java.util.ArrayList getGestures(java.lang.String)>
<android.app.Activity: boolean releaseInstance()>
<android.location.LocationListener: void onStatusChanged(java.lang.String,int,android.os.Bundle)>
<android.provider.Downloads.Impl: boolean isStatusSuccess(int)>
<android.app.ActivityThread: void handleTranslucentConversionComplete(android.os.IBinder,boolean)>
<android.telephony.cdma.CdmaCellLocation: void setCellLocationData(int,int,int,int,int)>
<android.app.ActivityManagerProxy: void overridePendingTransition(android.os.IBinder,java.lang.String,int,int)>
<android.media.MediaMetadata.Builder: android.media.MediaMetadata.Builder putText(java.lang.String,java.lang.CharSequence)>
<android.opengl.GLES30: void glEndTransformFeedback()>
<android.accessibilityservice.AccessibilityService.Callbacks: boolean onKeyEvent(android.view.KeyEvent)>
<android.view.View: void setScrollBarDefaultDelayBeforeFade(int)>
<android.content.pm.PackageInstaller.SessionInfo: android.content.Intent getDetailsIntent()>
<android.content.OperationApplicationException: int getNumSuccessfulYieldPoints()>
<android.view.textservice.SpellCheckerSubtype: int describeContents()>
<android.view.WindowCallbackWrapper: boolean onMenuItemSelected(int,android.view.MenuItem)>
<android.graphics.pdf.PdfRenderer: boolean shouldScaleForPrinting()>
<android.bluetooth.BluetoothGattServer: boolean connect(android.bluetooth.BluetoothDevice,boolean)>
<android.bluetooth.BluetoothGattCallbackWrapper: void onGetService(java.lang.String,int,int,android.os.ParcelUuid)>
<android.renderscript.Float4: android.renderscript.Float4 sub(android.renderscript.Float4,float)>
<android.content.Intent.FilterComparison: void <init>(android.content.Intent)>
<android.provider.MediaStore.Video.Thumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,int,android.graphics.BitmapFactory.Options)>
<android.telephony.cdma.CdmaCellLocation: boolean isEmpty()>
<android.view.inputmethod.InputMethod: void showSoftInput(int,android.os.ResultReceiver)>
<android.widget.HorizontalScrollView: void scrollTo(int,int)>
<android.content.pm.PackageParser.Package: boolean hasComponentClassName(java.lang.String)>
<android.content.ContextWrapper: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<com.android.internal.view.menu.IconMenuPresenter: void saveHierarchyState(android.os.Bundle)>
<android.widget.DatePicker.OnDateChangedListener: void onDateChanged(android.widget.DatePicker,int,int,int)>
<android.widget.TextView: void setHintTextColor(int)>
<com.android.internal.os.BatteryStatsImpl.Uid: void noteStartJobLocked(java.lang.String,long)>
<com.android.internal.widget.ActionBarOverlayLayout: boolean showOverflowMenu()>
<android.content.res.AssetManager: java.lang.String[] getLocales()>
<android.widget.ToggleButton: void setTextOn(java.lang.CharSequence)>
<android.telecom.RemoteConnection: void postDialContinue(boolean)>
<android.app.ActivityManagerProxy: java.util.List getAllStackInfos()>
<android.bluetooth.BluetoothPbap: android.bluetooth.BluetoothDevice getClient()>
<android.content.ContentProviderClient: java.lang.String getType(android.net.Uri)>
<android.renderscript.ScriptIntrinsicColorMatrix: android.renderscript.Script.KernelID getKernelID()>
<com.android.internal.widget.LockPatternView.OnPatternListener: void onPatternCellAdded(java.util.List)>
<android.view.ViewGroup: void cleanupLayoutState(android.view.View)>
<android.content.ContextWrapper: android.view.DisplayAdjustments getDisplayAdjustments(int)>
<android.content.Intent: boolean hasCategory(java.lang.String)>
<android.content.Context: android.content.Context createPackageContextAsUser(java.lang.String,int,android.os.UserHandle)>
<android.print.IPrintDocumentAdapter: void finish()>
<android.telephony.SubscriptionManager: void setDefaultSmsSubId(long)>
<android.graphics.AvoidXfermode: void <init>(int,int,android.graphics.AvoidXfermode.Mode)>
<android.renderscript.ScriptGroup.Builder: void <init>(android.renderscript.RenderScript)>
<android.alsa.AlsaDevicesParser: boolean hasMIDIDevices(int)>
<android.widget.TextView: void append(java.lang.CharSequence,int,int)>
<android.media.MediaHTTPConnection: java.lang.String getUri()>
<com.android.internal.os.BaseCommand: java.lang.String nextOption()>
<android.os.INetworkManagementService: boolean isBandwidthControlEnabled()>
<android.app.ActivityGroup: android.app.Activity getCurrentActivity()>
<android.text.Selection: int getSelectionEnd(java.lang.CharSequence)>
<android.bluetooth.BluetoothGattCharacteristic: java.util.UUID getUuid()>
<android.graphics.drawable.ClipDrawable: int getIntrinsicHeight()>
<android.webkit.WebResourceResponse: java.lang.String getMimeType()>
<android.widget.ListView: android.graphics.drawable.Drawable getOverscrollFooter()>
<android.app.WallpaperManager: android.graphics.Bitmap getBitmap()>
<android.renderscript.Short3: android.renderscript.Short3 div(android.renderscript.Short3,short)>
<android.filterpacks.imageproc.DrawOverlayFilter: void prepare(android.filterfw.core.FilterContext)>
<android.filterfw.core.FilterPort: void clear()>
<android.hardware.hdmi.HdmiRecordSources.AtscData: void <init>(int,int)>
<android.content.UriPermission: long getPersistedTime()>
<android.filterpacks.videosink.MediaEncoderFilter: void open(android.filterfw.core.FilterContext)>
<android.net.Uri: java.lang.String getEncodedFragment()>
<android.widget.SimpleCursorTreeAdapter.ViewBinder: boolean setViewValue(android.view.View,android.database.Cursor,int)>
<android.content.ContentProvider: void onConfigurationChanged(android.content.res.Configuration)>
<android.graphics.Region: void <init>(android.graphics.Rect)>
<android.hardware.camera2.params.ReprocessFormatsMap: int hashCode()>
<android.net.IpPrefix: java.net.InetAddress getAddress()>
<com.android.internal.widget.PasswordEntryKeyboardHelper: void setEnableHaptics(boolean)>
<android.view.View: int getHorizontalScrollbarHeight()>
<android.provider.BrowserContract.Settings: boolean isSyncEnabled(android.content.Context)>
<android.widget.RemoteViews: void setTextViewText(int,java.lang.CharSequence)>
<android.view.Window: void dispatchOnWindowDismissed()>
<android.webkit.WebView: boolean pageUp(boolean)>
<android.app.Application.ActivityLifecycleCallbacks: void onActivityDestroyed(android.app.Activity)>
<android.telephony.TelephonyManager: int getDefaultSim()>
<com.android.internal.widget.PasswordEntryKeyboardHelper: void setVibratePattern(int)>
<android.text.Editable: android.text.Editable replace(int,int,java.lang.CharSequence,int,int)>
<android.app.ActivityView: void onAttachedToWindow()>
<android.bluetooth.IBluetooth: java.lang.String getRemoteName(android.bluetooth.BluetoothDevice)>
<android.media.MediaPlayer: void seekTo(int)>
<android.content.pm.ManifestDigest: int describeContents()>
<android.text.Editable: android.text.InputFilter[] getFilters()>
<android.view.textservice.SpellCheckerInfo: void <init>(android.content.Context,android.content.pm.ResolveInfo)>
<com.android.internal.widget.ILockSettings: void setLockPassword(java.lang.String,int)>
<android.hardware.input.InputManager.InputDeviceListener: void onInputDeviceRemoved(int)>
<android.os.INetworkManagementService: void setFirewallEnabled(boolean)>
<android.telephony.SignalStrength: void validateInput()>
<android.content.pm.PackageParser.PermissionGroup: void <init>(android.content.pm.PackageParser.Package)>
<android.webkit.WebView: void saveWebArchive(java.lang.String,boolean,android.webkit.ValueCallback)>
<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>
<com.android.internal.os.storage.ExternalStorageFormatter: void onDestroy()>
<android.widget.AdapterView.OnItemClickListener: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<android.database.CursorWrapper: boolean moveToPosition(int)>
<android.filterfw.core.StreamPort: java.lang.String toString()>
<android.util.ArrayMap: boolean containsKey(java.lang.Object)>
<android.telephony.NeighboringCellInfo: int getPsc()>
<android.net.NetworkTemplate: int hashCode()>
<android.app.ApplicationThreadProxy: void unstableProviderDied(android.os.IBinder)>
<android.widget.OverScroller: void notifyVerticalEdgeReached(int,int,int)>
<com.android.internal.os.BatteryStatsImpl: void noteAudioOffLocked(int)>
<android.view.RenderNode: boolean setPivotX(float)>
<com.android.internal.os.BatteryStatsImpl: long getFlashlightOnCount(int)>
<android.view.Window.OnWindowDismissedCallback: void onWindowDismissed()>
<android.hardware.location.GeofenceHardwareImpl: boolean removeGeofence(int,int)>
<com.android.internal.inputmethod.InputMethodUtils: android.view.inputmethod.InputMethodSubtype findLastResortApplicableSubtypeLocked(android.content.res.Resources,java.util.List,java.lang.String,java.lang.String,boolean)>
<android.view.MotionEvent: void setEdgeFlags(int)>
<android.hardware.hdmi.HdmiDeviceInfo: boolean isCecDevice()>
<android.net.http.DelegatingSSLSession.CertificateWrap: java.security.cert.Certificate[] getPeerCertificates()>
<android.database.sqlite.SQLiteDatabase: void setVersion(int)>
<android.app.ActionBar: void setHomeActionContentDescription(java.lang.CharSequence)>
<android.location.GpsMeasurementsEvent: java.util.Collection getMeasurements()>
<android.content.SearchRecentSuggestionsProvider: void setupSuggestions(java.lang.String,int)>
<android.view.View.DragShadowBuilder: android.view.View getView()>
<android.media.MediaCodec: void configure(android.media.MediaFormat,android.view.Surface,android.media.MediaCrypto,int)>
<android.widget.ProgressBar: void setIndeterminateTintMode(android.graphics.PorterDuff.Mode)>
<android.text.style.TextAppearanceSpan: void updateDrawState(android.text.TextPaint)>
<android.widget.SearchView: void setInputType(int)>
<android.os.MessageQueue: void removeIdleHandler(android.os.MessageQueue.IdleHandler)>
<android.widget.EdgeEffect: int getColor()>
<android.widget.TabHost: void addTab(android.widget.TabHost.TabSpec)>
<android.animation.ValueAnimator: void setStartDelay(long)>
<android.telephony.TelephonyManager: android.telephony.IccOpenLogicalChannelResponse iccOpenLogicalChannel(java.lang.String)>
<android.location.GpsMeasurement: void setPseudorangeRateUncertaintyInMetersPerSec(double)>
<android.webkit.WebViewProvider: int findAll(java.lang.String)>
<android.hardware.camera2.params.LensShadingMap: android.hardware.camera2.params.RggbChannelVector getGainFactorVector(int,int)>
<android.view.InputChannel: android.view.InputChannel dup()>
<android.app.FragmentManagerImpl: void dispatchLowMemory()>
<android.app.ActivityManager.MemoryInfo: void readFromParcel(android.os.Parcel)>
<android.view.accessibility.AccessibilityNodeInfo: boolean isFocused()>
<com.android.ims.internal.IImsUt: int queryCLIR()>
<android.security.SystemKeyStore: void deleteKey(java.lang.String)>
<com.android.internal.os.BatteryStatsImpl: void removeUidStatsLocked(int)>
<android.opengl.GLES30: void glGetSamplerParameterfv(int,int,float[],int)>
<android.view.accessibility.AccessibilityNodeInfo: void setSelected(boolean)>
<android.view.inputmethod.SparseRectFArray: void writeToParcel(android.os.Parcel,int)>
<android.net.WebAddress: void setAuthInfo(java.lang.String)>
<android.util.SparseArray: int keyAt(int)>
<android.widget.ActionMenuView: android.widget.ActionMenuView.LayoutParams generateOverflowButtonLayoutParams()>
<android.app.admin.DevicePolicyManager: long getMaximumTimeToLock(android.content.ComponentName,int)>
<android.graphics.drawable.StateListDrawable: android.graphics.drawable.Drawable mutate()>
<com.android.internal.app.WindowDecorActionBar: void setStackedBackgroundDrawable(android.graphics.drawable.Drawable)>
<android.content.SharedPreferences.Editor: android.content.SharedPreferences.Editor putString(java.lang.String,java.lang.String)>
<android.net.NetworkScoreManager: void disableScoring()>
<android.media.session.PlaybackState: java.lang.CharSequence getErrorMessage()>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setDestinationToSystemCache()>
<com.android.internal.view.IInputContext: void performContextMenuAction(int)>
<com.android.internal.app.MediaRouteDialogPresenter: android.app.DialogFragment showDialogFragment(android.app.Activity,int,android.view.View.OnClickListener)>
<android.speech.RecognitionService.Callback: void results(android.os.Bundle)>
<android.webkit.CookieSyncManager: void startSync()>
<android.widget.ActionMenuView: boolean showOverflowMenu()>
<android.content.pm.IPackageInstallerSession: void addClientProgress(float)>
<com.android.internal.app.IBatteryStats: void noteBluetoothOff()>
<android.database.BulkCursorDescriptor: void writeToParcel(android.os.Parcel,int)>
<android.graphics.Canvas: void release()>
<android.media.effect.SizeChangeEffect: void <init>(android.media.effect.EffectContext,java.lang.String,java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>
<android.filterpacks.imageproc.GrainFilter: void setupPorts()>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture addAccount(java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.text.Annotation: void <init>(java.lang.String,java.lang.String)>
<android.view.animation.OvershootInterpolator: long createNativeInterpolator()>
<android.content.pm.PermissionInfo: void writeToParcel(android.os.Parcel,int)>
<android.app.FragmentTransaction: android.app.FragmentTransaction addToBackStack(java.lang.String)>
<android.net.NetworkStats: int findIndexHinted(java.lang.String,int,int,int,int)>
<android.preference.MultiCheckPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.NumberPicker: java.lang.String[] getDisplayedValues()>
<com.android.internal.util.AsyncChannel: android.os.Message sendMessageSynchronously(android.os.Message)>
<android.net.PskKeyManager: java.lang.String chooseServerKeyIdentityHint(javax.net.ssl.SSLEngine)>
<android.animation.PropertyValuesHolder: void setObjectValues(java.lang.Object[])>
<android.view.View: void refreshDrawableState()>
<android.view.KeyEvent: boolean dispatch(android.view.KeyEvent.Callback)>
<android.media.MediaDrm.CryptoSession: byte[] decrypt(byte[],byte[],byte[])>
<android.text.style.StrikethroughSpan: void writeToParcel(android.os.Parcel,int)>
<android.location.GpsMeasurement: void resetCarrierFrequencyInHz()>
<android.graphics.PathMeasure: boolean getSegment(float,float,android.graphics.Path,boolean)>
<android.telephony.TelephonyManager: java.lang.String iccTransmitApduBasicChannel(int,int,int,int,int,java.lang.String)>
<android.view.WindowInsets: int getStableInsetLeft()>
<android.text.style.TtsSpan.MoneyBuilder: android.text.style.TtsSpan.MoneyBuilder setIntegerPart(java.lang.String)>
<com.android.internal.widget.multiwaveview.PointCloud: void setCenter(float,float)>
<android.nfc.tech.NfcA: short getSak()>
<android.os.Bundle: boolean setAllowFds(boolean)>
<android.media.MediaRouter.RouteCategory: java.util.List getRoutes(java.util.List)>
<android.media.session.ISessionManager: void dispatchAdjustVolume(int,int,int)>
<android.graphics.Picture: void finalize()>
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources.Theme)>
<android.graphics.ImageFormat: boolean isPublicFormat(int)>
<android.app.ApplicationThreadProxy: void scheduleDestroyBackupAgent(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo)>
<android.net.MailTo: java.lang.String getSubject()>
<android.content.SyncResult: boolean madeSomeProgress()>
<android.os.BatteryStats.HistoryItem: void readFromParcel(android.os.Parcel)>
<android.net.nsd.NsdServiceInfo: void setHost(java.net.InetAddress)>
<com.google.android.gles_jni.GLImpl: void glPointParameterfv(int,java.nio.FloatBuffer)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofInt(java.lang.Object,android.util.Property,android.util.Property,android.graphics.Path)>
<android.text.style.MaskFilterSpan: void <init>(android.graphics.MaskFilter)>
<com.android.internal.util.StateMachine: void <init>(java.lang.String)>
<android.database.ContentObserver: void <init>(android.os.Handler)>
<android.view.ViewDebug: void setLayoutParameter(android.view.View,java.lang.String,int)>
<android.app.IApplicationThread: void scheduleInstallProvider(android.content.pm.ProviderInfo)>
<android.view.WindowManagerInternal: void showGlobalActions()>
<android.net.ConnectivityManager: void <init>(android.net.IConnectivityManager)>
<android.widget.FrameLayout: void drawableHotspotChanged(float,float)>
<android.os.Handler: boolean hasMessages(int)>
<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
<android.widget.AutoCompleteTextView: android.widget.AdapterView.OnItemSelectedListener getOnItemSelectedListener()>
<com.android.internal.os.BaseCommand: void onRun()>
<android.media.session.ISessionController: void rewind()>
<android.renderscript.RSTextureView: void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int)>
<android.widget.DatePickerController: void setMinDate(long)>
<android.hardware.hdmi.IHdmiControlService: java.util.List getPortInfo()>
<android.text.style.DrawableMarginSpan: void drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout)>
<android.database.DatabaseUtils: int getSqlStatementType(java.lang.String)>
<android.media.Ringtone: void play()>
<android.renderscript.FieldPacker: void addObj(android.renderscript.BaseObj)>
<android.app.WallpaperManager: android.graphics.drawable.Drawable getBuiltInDrawable(int,int,boolean,float,float)>
<android.text.style.TtsSpan.OrdinalBuilder: void <init>(long)>
<android.net.SSLSessionCache: void <init>(android.content.Context)>
<android.content.pm.PackageParser.ProviderIntentInfo: java.lang.String toString()>
<android.text.Selection: boolean moveToFollowing(android.text.Spannable,android.text.Selection.PositionIterator,boolean)>
<android.view.View.AccessibilityDelegate: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)>
<android.gesture.GestureStore: java.util.Set getGestureEntries()>
<android.view.ViewRootImpl: void invalidateChild(android.view.View,android.graphics.Rect)>
<android.content.res.Resources.Theme: java.lang.String[] getTheme()>
<android.location.Location: java.lang.String getProvider()>
<android.net.DhcpInfo: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.os.BatteryStatsImpl.Uid.Pkg: void incWakeupsLocked()>
<android.widget.DatePicker.DatePickerDelegate: boolean getSpinnersShown()>
<com.android.internal.telecom.ITelecomService: java.util.List getCallCapablePhoneAccounts()>
<com.google.android.gles_jni.GLImpl: void glMatrixMode(int)>
<android.media.ClosedCaptionWidget: void onLayout(boolean,int,int,int,int)>
<com.android.internal.telephony.ISub: java.util.List getSubInfoUsingIccId(java.lang.String)>
<android.widget.TextView: int getOffsetForPosition(float,float)>
<android.provider.Settings.Secure: int getIntForUser(android.content.ContentResolver,java.lang.String,int)>
<android.view.inputmethod.CursorAnchorInfo.Builder: android.view.inputmethod.CursorAnchorInfo.Builder setSelectionRange(int,int)>
<android.view.KeyEvent: void <init>(long,java.lang.String,int,int)>
<android.nfc.NfcAdapter: boolean disable()>
<android.opengl.GLES11Ext: void glGetClipPlanefOES(int,java.nio.FloatBuffer)>
<android.nfc.cardemulation.ApduServiceInfo: java.util.ArrayList getAids()>
<android.content.ComponentName: int describeContents()>
<android.net.INetworkPolicyManager: android.net.NetworkQuotaInfo getNetworkQuotaInfo(android.net.NetworkState)>
<android.content.pm.PackageManager: int checkSignatures(int,int)>
<android.view.ViewConfiguration: int getScrollDefaultDelay()>
<android.content.ISyncServiceAdapter: void startSync(android.content.ISyncContext,android.os.Bundle)>
<android.util.TrustedTime: boolean forceRefresh()>
<android.net.http.DelegatingSSLSession: void removeValue(java.lang.String)>
<android.telecom.RemoteConnection.VideoProvider: void sendSessionModifyResponse(android.telecom.VideoProfile)>
<android.os.BatteryStats.HistoryItem: boolean isDeltaData()>
<android.util.MathUtils: float log(float)>
<android.media.AudioManager: int getMasterMaxVolume()>
<com.android.internal.widget.LockPatternView: android.os.Parcelable onSaveInstanceState()>
<android.util.DisplayMetrics: int hashCode()>
<android.net.ConnectivityManager: boolean getMobileDataEnabled()>
<android.service.dreams.IDreamManager: android.content.ComponentName[] getDreamComponents()>
<android.filterfw.core.GLFrame: void releaseNativeAllocation()>
<android.util.AtomicFile: java.io.FileOutputStream openAppend()>
<android.util.SparseLongArray: int indexOfKey(int)>
<android.accounts.AbstractAccountAuthenticator: java.lang.String getAuthTokenLabel(java.lang.String)>
<com.android.internal.view.IInputConnectionWrapper: void setComposingRegion(int,int)>
<android.renderscript.ScriptGroup.Builder: android.renderscript.ScriptGroup create()>
<android.inputmethodservice.KeyboardView: boolean isProximityCorrectionEnabled()>
<android.widget.TimePicker.TimePickerDelegate: boolean isEnabled()>
<android.net.EthernetManager: void <init>(android.content.Context,android.net.IEthernetManager)>
<android.media.MediaPlayer: void prepareAsync()>
<android.net.MobileLinkQualityInfo: int getLteRsrp()>
<android.widget.MultiAutoCompleteTextView.CommaTokenizer: int findTokenStart(java.lang.CharSequence,int)>
<android.view.ActionProvider: boolean overridesItemVisibility()>
<android.renderscript.Byte3: android.renderscript.Byte3 div(android.renderscript.Byte3,android.renderscript.Byte3)>
<android.hardware.input.KeyboardLayout: java.lang.String getLabel()>
<com.android.internal.util.BitwiseInputStream: void skip(int)>
<android.content.pm.PackageParser.Provider: void <init>(android.content.pm.PackageParser.ParseComponentArgs,android.content.pm.ProviderInfo)>
<android.hardware.hdmi.HdmiTvClient: void clearTimerRecording(int,int,android.hardware.hdmi.HdmiTimerRecordSources.TimerRecordSource)>
<android.content.Intent: android.content.Intent replaceExtras(android.os.Bundle)>
<android.net.wifi.p2p.WifiP2pGroup: java.lang.String getPassphrase()>
<android.service.voice.VoiceInteractionServiceInfo: java.lang.String getSessionService()>
<com.android.internal.view.menu.MenuBuilder: android.graphics.drawable.Drawable getHeaderIcon()>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface.OnClickListener)>
<android.content.res.AssetManager.AssetInputStream: int read(byte[],int,int)>
<android.widget.Switch: void setSwitchPadding(int)>
<android.webkit.WebView: void goBack()>
<android.graphics.Paint: void setStyle(android.graphics.Paint.Style)>
<android.renderscript.FieldPacker: void addU32(android.renderscript.Long4)>
<android.app.AppGlobals: android.app.Application getInitialApplication()>
<android.hardware.usb.UsbDevice: int describeContents()>
<android.widget.RemoteViews: int getLayoutId()>
<android.view.Window: boolean hasFeature(int)>
<android.widget.Switch: void setTrackDrawable(android.graphics.drawable.Drawable)>
<android.view.View: boolean getGlobalVisibleRect(android.graphics.Rect)>
<android.graphics.drawable.NinePatchDrawable: void applyTheme(android.content.res.Resources.Theme)>
<android.bluetooth.BluetoothGattServer: boolean notifyCharacteristicChanged(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothGattCharacteristic,boolean)>
<android.telephony.CellSignalStrengthCdma: int getEvdoSnr()>
<android.view.DisplayEventReceiver: void onVsync(long,int,int)>
<android.app.Notification.Style: void checkBuilder()>
<com.android.internal.app.ToolbarActionBar: void setListNavigationCallbacks(android.widget.SpinnerAdapter,android.app.ActionBar.OnNavigationListener)>
<android.webkit.WebSettings: java.lang.String getFixedFontFamily()>
<android.bluetooth.le.ScanRecord: java.util.List getServiceUuids()>
<android.filterfw.core.FilterSurfaceView: void surfaceDestroyed(android.view.SurfaceHolder)>
<android.service.notification.ZenModeConfig: android.net.Uri toCountdownConditionId(long)>
<android.widget.Toast: void setText(java.lang.CharSequence)>
<android.widget.OverScroller: int getStartX()>
<android.hardware.display.WifiDisplay: boolean equals(java.lang.Object)>
<android.provider.Settings.System: android.net.Uri getUriFor(java.lang.String)>
<android.widget.RemoteViews: int getSequenceNumber()>
<com.android.ims.internal.IImsCallSessionListener: void callSessionHandoverFailed(com.android.ims.internal.IImsCallSession,int,int,com.android.ims.ImsReasonInfo)>
<android.util.ArrayMap: boolean removeAll(java.util.Collection)>
<android.os.FileBridge.FileBridgeOutputStream: void <init>(java.io.FileDescriptor)>
<android.os.StrictMode.VmPolicy: java.lang.String toString()>
<android.media.MediaCodecInfo.CodecCapabilities: boolean isFormatSupported(android.media.MediaFormat)>
<android.app.IApplicationThread: void scheduleConfigurationChanged(android.content.res.Configuration)>
<com.android.internal.widget.DecorContentParent: java.lang.CharSequence getTitle()>
<android.animation.ValueAnimator: void cancel()>
<android.preference.PreferenceActivity.Header: java.lang.CharSequence getTitle(android.content.res.Resources)>
<android.filterfw.core.Frame: void setObjectValue(java.lang.Object)>
<android.speech.tts.TtsEngines: java.lang.String getDefaultEngine()>
<com.android.internal.view.menu.ContextMenuBuilder: android.view.ContextMenu setHeaderTitle(java.lang.CharSequence)>
<android.text.style.TypefaceSpan: int getSpanTypeId()>
<android.widget.SimpleCursorAdapter.ViewBinder: boolean setViewValue(android.view.View,android.database.Cursor,int)>
<android.app.LocalActivityManager: android.view.Window startActivity(java.lang.String,android.content.Intent)>
<android.content.ContentProviderClient: android.content.res.AssetFileDescriptor openTypedAssetFileDescriptor(android.net.Uri,java.lang.String,android.os.Bundle)>
<android.view.View: android.os.IBinder getWindowToken()>
<android.text.Layout: int getOffsetToLeftOf(int)>
<android.graphics.ColorMatrix: void preConcat(android.graphics.ColorMatrix)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,short)>
<android.telephony.Rlog: int e(java.lang.String,java.lang.String)>
<com.android.internal.os.BatteryStatsImpl.BatteryCallback: void batteryNeedsCpuUpdate()>
<android.widget.Gallery: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.app.ActivityManagerNative: void noteWakeupAlarm(android.app.PendingIntent,int,java.lang.String)>
<android.media.TtmlTrack: android.media.TtmlRenderingWidget getRenderingWidget()>
<android.widget.ScrollBarDrawable: int getSize(boolean)>
<android.hardware.usb.UsbDeviceConnection: int controlTransfer(int,int,int,int,byte[],int,int,int)>
<android.net.NetworkPolicyManager: int[] getPowerSaveAppIdWhitelist()>
<com.android.internal.widget.ResolverDrawerLayout: void setSmallCollapsed(boolean)>
<android.media.MediaDrm: void closeSession(byte[])>
<android.net.wifi.IWifiManager: void acquireMulticastLock(android.os.IBinder,java.lang.String)>
<android.media.MediaMetadata.Builder: android.media.MediaMetadata build()>
<android.util.Rational: void <init>(int,int)>
<android.os.BatteryStats: int getMobileRadioActiveCount(int)>
<android.net.LinkProperties: void <init>(android.net.LinkProperties)>
<android.media.MediaPlayer.TrackInfo: android.media.MediaFormat getFormat()>
<android.webkit.GeolocationPermissions: void clearAll()>
<android.media.session.MediaController: void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)>
<android.renderscript.Matrix3f: void load(android.renderscript.Matrix3f)>
<android.graphics.Camera: void rotate(float,float,float)>
<android.opengl.GLES10: void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.net.InterfaceConfiguration: boolean isActive()>
<com.android.internal.os.BatteryStatsImpl: void notePhoneDataConnectionStateLocked(int,boolean)>
<android.telecom.Conference.Listener: void onConferenceableConnectionsChanged(android.telecom.Conference,java.util.List)>
<android.service.persistentdata.PersistentDataBlockManager: void <init>(android.service.persistentdata.IPersistentDataBlockService)>
<android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>
<android.net.LocalSocket: android.net.Credentials getPeerCredentials()>
<android.renderscript.Mesh.TriangleMeshBuilder: android.renderscript.Mesh.TriangleMeshBuilder addVertex(float,float,float)>
<android.view.ViewGroup.LayoutParams: void resolveLayoutDirection(int)>
<android.webkit.WebViewClient: void onLoadResource(android.webkit.WebView,java.lang.String)>
<android.media.tv.ITvInputManager: void removeBlockedRating(java.lang.String,int)>
<android.util.AttributeSet: float getAttributeFloatValue(java.lang.String,java.lang.String,float)>
<android.app.NativeActivity: void onConfigurationChanged(android.content.res.Configuration)>
<android.net.LinkProperties: android.net.LinkProperties.CompareResult compareAllRoutes(android.net.LinkProperties)>
<android.widget.CheckBox: void <init>(android.content.Context,android.util.AttributeSet)>
<android.app.Activity: void finish()>
<android.media.session.PlaybackState: long getActions()>
<android.preference.DialogPreference: java.lang.CharSequence getPositiveButtonText()>
<android.content.Intent: void prepareToEnterProcess()>
<android.view.View: boolean isScrollbarFadingEnabled()>
<android.net.nsd.DnsSdTxtRecord: void set(java.lang.String,java.lang.String)>
<android.provider.Settings.Secure: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>
<android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,int[],android.view.MotionEvent.PointerCoords[],int,float,float,int,int,int,int)>
<android.database.CursorWrapper: byte[] getBlob(int)>
<com.android.internal.os.BatteryStatsImpl: java.util.Map getWakeupReasonStats()>
<android.view.KeyEvent.DispatcherState: void performedLongPress(android.view.KeyEvent)>
<android.widget.ZoomControls: void setZoomSpeed(long)>
<android.net.NetworkRequest.Builder: android.net.NetworkRequest build()>
<android.hardware.display.WifiDisplaySessionInfo: java.lang.String getIP()>
<android.app.ActivityThread: void unregisterOnActivityPausedListener(android.app.Activity,android.app.OnActivityPausedListener)>
<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.ShapeDrawable.ShaderFactory getShaderFactory()>
<android.app.FragmentTransaction: android.app.FragmentTransaction show(android.app.Fragment)>
<android.animation.StateListAnimator: java.util.ArrayList getTuples()>
<android.media.IMediaScannerListener: void scanCompleted(java.lang.String,android.net.Uri)>
<android.renderscript.ScriptGroup.Builder: android.renderscript.ScriptGroup.Builder addKernel(android.renderscript.Script.KernelID)>
<com.android.internal.view.IInputMethod: void unbindInput()>
<com.android.internal.policy.IKeyguardService: void keyguardDone(boolean,boolean)>
<android.graphics.Paint: void set(android.graphics.Paint)>
<android.net.wifi.p2p.WifiP2pWfdInfo: boolean isCoupledSinkSupportedAtSource()>
<android.app.DownloadManager.Request: void allowScanningByMediaScanner()>
<android.app.Activity: void setContentView(android.view.View)>
<android.app.Notification.Style: void populateHeadsUpContentView(android.app.Notification)>
<android.widget.TextView: int getCompoundPaddingBottom()>
<android.media.session.MediaSessionManager: java.util.List getActiveSessionsForUser(android.content.ComponentName,int)>
<android.renderscript.Short4: void div(android.renderscript.Short4)>
<android.location.GpsSatellite: boolean hasEphemeris()>
<android.net.wifi.p2p.WifiP2pInfo: java.lang.String toString()>
<android.content.pm.ResolveInfo: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.widget.ActionBarContextView: void initForMode(android.view.ActionMode)>
<android.renderscript.FieldPacker: void addU16(int)>
<android.filterpacks.videosink.MediaEncoderFilter: void setupPorts()>
<android.bluetooth.IBluetooth: android.bluetooth.BluetoothDevice[] getBondedDevices()>
<android.os.TokenWatcher: void dump(java.io.PrintWriter)>
<com.android.internal.view.menu.ExpandedMenuView: int getWindowAnimations()>
<android.graphics.Path: void addCircle(float,float,float,android.graphics.Path.Direction)>
<android.database.CursorWrapper: android.net.Uri getNotificationUri()>
<android.view.textservice.SpellCheckerSession: void finalize()>
<android.app.ApplicationErrorReport: void writeToParcel(android.os.Parcel,int)>
<android.webkit.WebView: void onFocusChanged(boolean,int,android.graphics.Rect)>
<android.bluetooth.BluetoothHeadsetClient: boolean startVoiceRecognition(android.bluetooth.BluetoothDevice)>
<android.media.ExifInterface: void setAttribute(java.lang.String,java.lang.String)>
<android.text.style.DynamicDrawableSpan: int getSize(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Paint.FontMetricsInt)>
<android.hardware.camera2.utils.TaskDrainer: void <init>(android.os.Handler,android.hardware.camera2.utils.TaskDrainer.DrainListener)>
<android.view.View.OnSystemUiVisibilityChangeListener: void onSystemUiVisibilityChange(int)>
<android.app.FragmentManagerImpl: void noteStateNotSaved()>
<android.widget.AbsListView: void dispatchSetPressed(boolean)>
<android.preference.Preference: android.preference.Preference findPreferenceInHierarchy(java.lang.String)>
<android.media.browse.MediaBrowser: void disconnect()>
<android.view.MenuItem: boolean isActionViewExpanded()>
<android.widget.PopupWindow: boolean isFocusable()>
<android.content.Loader: void deliverCancellation()>
<com.android.ims.ImsCallProfile: java.lang.String toString()>
<android.app.ActivityManagerProxy: boolean releaseActivityInstance(android.os.IBinder)>
<android.inputmethodservice.KeyboardView: void onMeasure(int,int)>
<android.content.res.CompatibilityInfo: boolean alwaysSupportsScreen()>
<android.app.backup.RestoreSet: int describeContents()>
<android.renderscript.ProgramVertex.Builder: android.renderscript.ProgramVertex create()>
<com.android.internal.telephony.ITelephonyRegistry: void notifyDisconnectCause(int,int)>
<android.view.WindowInfo: void writeToParcel(android.os.Parcel,int)>
<android.app.ActionBar: void setHomeAsUpIndicator(int)>
<android.print.IWriteResultCallback: void onWriteFinished(android.print.PageRange[],int)>
<android.widget.CursorFilter.CursorFilterClient: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)>
<android.widget.QuickContactBadge: void assignContactFromEmail(java.lang.String,boolean,android.os.Bundle)>
<android.content.MutableContextWrapper: void setBaseContext(android.content.Context)>
<android.content.Intent: double[] getDoubleArrayExtra(java.lang.String)>
<android.opengl.GLES11Ext: void glDrawTexfvOES(java.nio.FloatBuffer)>
<android.webkit.WebViewProvider: android.webkit.WebBackForwardList copyBackForwardList()>
<com.google.android.util.AbstractMessageParser.Token: boolean controlCaps()>
<android.widget.TimePicker.TimePickerDelegate: void setValidationCallback(android.widget.TimePicker.ValidationCallback)>
<android.telephony.TelephonyManager: boolean disableDataConnectivity()>
<android.animation.StateListAnimator: void jumpToCurrentState()>
<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>
<android.media.MediaCodec.Callback: void onOutputFormatChanged(android.media.MediaCodec,android.media.MediaFormat)>
<android.hardware.camera2.CameraCaptureSession.StateCallback: void onReady(android.hardware.camera2.CameraCaptureSession)>
<android.net.wifi.IWifiManager: android.net.wifi.WifiConnectionStatistics getConnectionStatistics()>
<android.media.SoundPool: int load(java.io.FileDescriptor,long,long,int)>
<android.widget.SearchView: android.widget.CursorAdapter getSuggestionsAdapter()>
<android.view.SurfaceControl.PhysicalDisplayInfo: java.lang.String toString()>
<android.provider.DocumentsProvider: java.lang.String createDocument(java.lang.String,java.lang.String,java.lang.String)>
<android.opengl.GLSurfaceView: void setEGLContextClientVersion(int)>
<android.media.MediaCodec: java.lang.String getName()>
<android.database.ContentObservable: void registerObserver(android.database.ContentObserver)>
<android.filterpacks.imageproc.FisheyeFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<android.filterfw.io.PatternScanner: void updateLineCount(int,int)>
<com.android.internal.telephony.ITelephonyRegistry: void notifyDataConnectionFailed(java.lang.String,java.lang.String)>
<android.widget.SimpleAdapter: void setViewImage(android.widget.ImageView,java.lang.String)>
<android.view.PointerIcon: android.view.PointerIcon load(android.content.Context)>
<android.view.accessibility.IAccessibilityManager: java.util.List getInstalledAccessibilityServiceList(int)>
<android.view.ContextMenu: android.view.ContextMenu setHeaderTitle(int)>
<android.app.Activity: void onRestart()>
<android.webkit.HttpAuthHandler: void cancel()>
<com.google.android.gles_jni.EGLSurfaceImpl: void <init>(long)>
<android.view.View: float getCameraDistance()>
<android.app.admin.DevicePolicyManager: boolean setApplicationHidden(android.content.ComponentName,java.lang.String,boolean)>
<android.widget.MediaController: void setPrevNextListeners(android.view.View.OnClickListener,android.view.View.OnClickListener)>
<android.location.LocationManager: java.util.List getAllProviders()>
<com.google.android.gles_jni.GLImpl: void glColorPointer(int,int,int,int)>
<android.graphics.drawable.shapes.RoundRectShape: void draw(android.graphics.Canvas,android.graphics.Paint)>
<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.Drawable getDrawable()>
<android.net.http.Headers: java.lang.String getContentDisposition()>
<android.opengl.GLES11: void glTexParameterfv(int,int,float[],int)>
<android.app.Instrumentation: android.content.ComponentName getComponentName()>
<android.provider.Contacts.Phones: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence,java.lang.CharSequence[])>
<android.widget.RelativeLayout: void requestLayout()>
<android.graphics.Paint: void setTextSize(float)>
<android.app.FragmentManagerImpl: void dispatchDestroyView()>
<com.android.ims.ImsCallProfile: void updateCallType(com.android.ims.ImsCallProfile)>
<com.android.internal.util.ArrayUtils: long[] removeLong(long[],long)>
<android.media.MediaPlayer: android.media.Metadata getMetadata(boolean,boolean)>
<android.content.Loader: void onStartLoading()>
<com.android.internal.widget.SizeAdaptiveLayout: void onAttachedToWindow()>
<android.app.backup.FullBackupDataOutput: android.app.backup.BackupDataOutput getData()>
<com.android.internal.app.IAppOpsCallback: void opChanged(int,java.lang.String)>
<android.content.pm.PackageInstaller.SessionParams: void setAppIcon(android.graphics.Bitmap)>
<android.app.IActivityContainer: int getDisplayId()>
<android.hardware.display.DisplayManagerInternal.DisplayPowerCallbacks: void acquireSuspendBlocker()>
<com.android.internal.view.IInputConnectionWrapper: void commitText(java.lang.CharSequence,int)>
<android.print.PrinterDiscoverySession: boolean isPrinterDiscoveryStarted()>
<android.telephony.TelephonyManager: void silenceRinger()>
<android.database.ContentObservable: void notifyChange(boolean)>
<android.provider.DocumentsProvider: android.database.Cursor queryRoots(java.lang.String[])>
<android.widget.SimpleCursorTreeAdapter: void setViewBinder(android.widget.SimpleCursorTreeAdapter.ViewBinder)>
<android.graphics.drawable.LayerDrawable: int getNumberOfLayers()>
<android.content.SyncRequest: int describeContents()>
<android.content.SyncInfo: void <init>(int,android.accounts.Account,java.lang.String,long)>
<android.nfc.tech.MifareUltralight: int getType()>
<com.android.internal.os.InstallerConnection: java.lang.String transact(java.lang.String)>
<android.database.DatabaseUtils: long queryNumEntries(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String)>
<android.hardware.camera2.impl.CameraDeviceImpl.CaptureCallback: void onCaptureProgressed(android.hardware.camera2.CameraDevice,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureResult)>
<android.view.TextureView: void onVisibilityChanged(android.view.View,int)>
<android.hardware.Camera.Parameters: java.util.List getSupportedColorEffects()>
<android.view.ViewTreeObserver.OnScrollChangedListener: void onScrollChanged()>
<android.app.ActivityManager: boolean clearApplicationUserData()>
<android.telephony.SubscriptionManager: int getDefaultDataPhoneId()>
<com.google.android.gles_jni.GLImpl: void glStencilFunc(int,int,int)>
<android.opengl.EGLObjectHandle: void <init>(long)>
<android.database.sqlite.SQLiteSession: void execute(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal)>
<android.database.CursorWindow: void copyStringToBuffer(int,int,android.database.CharArrayBuffer)>
<android.media.session.PlaybackState.CustomAction: android.os.Bundle getExtras()>
<android.graphics.Paint: float getTextSkewX()>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int)>
<android.renderscript.FieldPacker: void addU32(android.renderscript.Long2)>
<android.location.LocationRequest: int getQuality()>
<android.widget.ImageView: void animateTransform(android.graphics.Matrix)>
<android.widget.RelativeLayout.LayoutParams: java.lang.String debug(java.lang.String)>
<android.telephony.TelephonyManager: int[] supplyPukReportResult(java.lang.String,java.lang.String)>
<android.telecom.ParcelableCall: long getConnectTimeMillis()>
<android.view.animation.LayoutAnimationController: android.view.animation.Interpolator getInterpolator()>
<android.app.Activity: boolean onKeyMultiple(int,int,android.view.KeyEvent)>
<android.content.ContentProvider: void <init>(android.content.Context,java.lang.String,java.lang.String,android.content.pm.PathPermission[])>
<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.media.ClosedCaptionWidget: void setOnChangedListener(android.media.SubtitleTrack.RenderingWidget.OnChangedListener)>
<android.app.Dialog: boolean onKeyUp(int,android.view.KeyEvent)>
<android.media.TimedText.Justification: void <init>(int,int)>
<android.os.Parcel: void writeFileDescriptor(java.io.FileDescriptor)>
<android.content.ContextWrapper: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)>
<android.content.Intent: android.content.Intent makeMainActivity(android.content.ComponentName)>
<android.content.BroadcastReceiver: android.content.BroadcastReceiver.PendingResult goAsync()>
<android.telephony.CellSignalStrengthCdma: int describeContents()>
<android.media.MediaDrmException: void <init>(java.lang.String)>
<android.app.IApplicationThread: void scheduleServiceArgs(android.os.IBinder,boolean,int,int,android.content.Intent)>
<android.widget.CheckedTextView: void toggle()>
<android.app.Fragment: void setInitialSavedState(android.app.Fragment.SavedState)>
<com.android.internal.textservice.ISpellCheckerSession: void onGetSuggestionsMultiple(android.view.textservice.TextInfo[],int,boolean)>
<com.android.internal.widget.PasswordEntryKeyboardHelper: boolean isAlpha()>
<android.renderscript.Short3: void addAt(int,short)>
<android.net.NetworkStats.Entry: boolean isNegative()>
<android.location.Criteria: int getVerticalAccuracy()>
<android.accounts.AccountManagerResponse: void onError(int,java.lang.String)>
<com.android.internal.widget.DecorToolbar: void setDefaultNavigationIcon(android.graphics.drawable.Drawable)>
<android.hardware.display.IVirtualDisplayCallback: void onPaused()>
<android.renderscript.ScriptIntrinsicBlur: void setInput(android.renderscript.Allocation)>
<android.app.SearchDialog: android.os.Bundle onSaveInstanceState()>
<android.opengl.GLES11Ext: void glClearColorxOES(int,int,int,int)>
<android.text.style.TtsSpan.DecimalBuilder: android.text.style.TtsSpan.DecimalBuilder setIntegerPart(long)>
<android.database.sqlite.SQLiteSession: void <init>(android.database.sqlite.SQLiteConnectionPool)>
<android.media.audiofx.AudioEffect: short byteArrayToShort(byte[])>
<android.widget.Gallery: void setUnselectedAlpha(float)>
<android.graphics.pdf.PdfDocument.PageInfo.Builder: android.graphics.pdf.PdfDocument.PageInfo.Builder setContentRect(android.graphics.Rect)>
<android.webkit.Plugin: void setPath(java.lang.String)>
<android.opengl.GLES10: java.lang.String glGetString(int)>
<android.filterfw.core.NativeProgram: void finalize()>
<android.transition.ChangeText: java.lang.String[] getTransitionProperties()>
<android.media.audiofx.AudioEffect: byte[] intToByteArray(int)>
<android.hardware.Camera.Parameters: void setRecordingHint(boolean)>
<android.content.pm.PackageParser.Service: void <init>(android.content.pm.PackageParser.ParseComponentArgs,android.content.pm.ServiceInfo)>
<android.printservice.PrintServiceInfo: android.printservice.PrintServiceInfo create(android.content.pm.ResolveInfo,android.content.Context)>
<com.android.internal.backup.LocalTransport: java.lang.String currentDestinationString()>
<android.view.ViewGroup: int getNestedScrollAxes()>
<android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceData(android.os.ParcelUuid,byte[])>
<android.widget.SearchView: int getInputType()>
<android.view.VelocityTracker.Estimator: float estimateY(float)>
<android.app.PendingIntent: android.app.PendingIntent getBroadcastAsUser(android.content.Context,int,android.content.Intent,int,android.os.UserHandle)>
<android.nfc.NfcAdapter: boolean disable(boolean)>
<android.view.inputmethod.BaseInputConnection: boolean finishComposingText()>
<android.location.GpsClock: void resetFullBiasInNs()>
<android.bluetooth.IBluetoothHeadsetClient: int getPriority(android.bluetooth.BluetoothDevice)>
<android.net.wifi.WifiManager.TxPacketCountListener: void onSuccess(int)>
<android.opengl.GLES11: void glColorPointer(int,int,int,int)>
<android.view.WindowInsets: int getStableInsetBottom()>
<android.net.Uri: java.lang.String getHost()>
<android.telephony.CellInfo: java.lang.String toString()>
<com.android.internal.content.NativeLibraryHelper: int copyNativeBinaries(com.android.internal.content.NativeLibraryHelper.Handle,java.io.File,java.lang.String)>
<android.telecom.Phone: void removeListener(android.telecom.Phone.Listener)>
<android.util.Rational: int getDenominator()>
<android.transition.Scene: void exit()>
<com.android.internal.view.menu.ActionMenuItemView: boolean hasText()>
<android.widget.Gallery: void dispatchSetSelected(boolean)>
<com.android.internal.view.IInputContext: void sendKeyEvent(android.view.KeyEvent)>
<com.android.internal.widget.DecorContentParent: boolean isOverflowMenuShowing()>
<android.media.MiniThumbFile: void <init>(android.net.Uri)>
<android.hardware.camera2.legacy.GLThreadManager: void waitUntilIdle()>
<android.widget.AbsListView: boolean isScrollingCacheEnabled()>
<com.android.internal.view.menu.MenuBuilder: java.lang.String getActionViewStatesKey()>
<android.view.ViewConfiguration: int getScaledDoubleTapTouchSlop()>
<android.os.Parcel: void readFloatArray(float[])>
<android.graphics.Matrix: boolean preSkew(float,float,float,float)>
<android.os.Bundle: void putShort(java.lang.String,short)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.CharSequence[])>
<android.content.res.Configuration: void writeToParcel(android.os.Parcel,int)>
<android.filterfw.core.GLFrame: java.lang.Object getObjectValue()>
<android.app.ActivityManager.TaskDescription: java.lang.String getIconFilename()>
<com.android.internal.widget.LockPatternUtils: boolean isEmergencyCallCapable()>
<android.net.dhcp.DhcpStateMachine: void onOfferReceived(boolean,int,byte[],java.net.InetAddress,java.net.InetAddress)>
<android.filterfw.core.NativeBuffer: void assertWritable()>
<android.view.ViewParent: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode.Callback)>
<android.view.animation.Animation.AnimationListener: void onAnimationEnd(android.view.animation.Animation)>
<android.renderscript.RSSurfaceView: void destroyRenderScriptGL()>
<android.accounts.ChooseAccountActivity: void finish()>
<android.service.persistentdata.PersistentDataBlockManager: boolean getOemUnlockEnabled()>
<android.telecom.ConnectionService: java.util.Collection getAllConnections()>
<android.bluetooth.BluetoothGattCallbackWrapper: void onDescriptorWrite(java.lang.String,int,int,int,android.os.ParcelUuid,int,android.os.ParcelUuid,int,android.os.ParcelUuid)>
<android.view.ActionProvider.SubUiVisibilityListener: void onSubUiVisibilityChanged(boolean)>
<android.content.res.TypedArray: int getResourceId(int,int)>
<android.webkit.WebView: java.lang.String getTouchIconUrl()>
<android.content.ContextWrapper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<android.media.MediaRouter.UserRouteInfo: android.media.RemoteControlClient getRemoteControlClient()>
<android.os.RemoteCallbackList: void finishBroadcast()>
<android.gesture.GestureLibrary: void addGesture(java.lang.String,android.gesture.Gesture)>
<android.view.WindowManagerInternal: android.os.IBinder getFocusedWindowToken()>
<android.view.MenuItem: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)>
<com.android.internal.util.FastPrintWriter: void <init>(java.io.OutputStream,boolean,int)>
<android.transition.TransitionSet: int getTransitionCount()>
<android.media.IAudioService: int getMode()>
<com.android.ims.internal.IImsConfig: int getMasterValue(int)>
<android.view.RenderNode: float getPivotY()>
<android.media.MediaDrm: android.media.MediaDrm.ProvisionRequest getProvisionRequest()>
<android.view.Window.Callback: void onContentChanged()>
<android.provider.Settings.Secure: boolean putIntForUser(android.content.ContentResolver,java.lang.String,int,int)>
<android.hardware.camera2.CameraManager: android.hardware.camera2.CameraCharacteristics getCameraCharacteristics(java.lang.String)>
<android.content.pm.ParceledListSlice: java.util.List getList()>
<android.media.AudioFormat.Builder: android.media.AudioFormat.Builder setEncoding(int)>
<android.view.WindowManagerPolicy.WindowState: boolean isAnimatingLw()>
<android.app.usage.ConfigurationStats: long getTotalTimeActive()>
<android.net.NetworkStateTracker: android.net.LinkProperties getLinkProperties()>
<android.widget.AutoCompleteTextView: void setDropDownBackgroundResource(int)>
<android.media.audiofx.PresetReverb: void setPreset(short)>
<android.app.admin.DevicePolicyManager: android.content.ComponentName getProfileOwner()>
<android.hardware.camera2.params.RggbChannelVector: java.lang.String toString()>
<android.widget.ExpandableListView: int getFlatListPosition(long)>
<android.renderscript.Script: int getVarI(int)>
<android.opengl.GLES11: void glGetTexParameteriv(int,int,java.nio.IntBuffer)>
<android.content.IntentSender: java.lang.String getTargetPackage()>
<android.app.ApplicationErrorReport: int describeContents()>
<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>
<android.media.tv.ITvInputService: void notifyHardwareAdded(android.media.tv.TvInputHardwareInfo)>
<android.widget.AbsListView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.hardware.soundtrigger.SoundTrigger.RecognitionEvent: int describeContents()>
<android.widget.AdapterViewAnimator: android.view.View getSelectedView()>
<android.os.Handler: boolean sendMessage(android.os.Message)>
<android.location.Address: java.lang.String getSubAdminArea()>
<android.widget.ProgressBar: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.renderscript.Double2: void mul(android.renderscript.Double2)>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor fromSocket(java.net.Socket)>
<android.view.WindowManagerPolicy.WindowManagerFuncs: void shutdown(boolean)>
<android.location.FusedBatchOptions: void setPeriodInNS(long)>
<android.content.ContentValues: void put(java.lang.String,java.lang.String)>
<android.database.DatabaseUtils: int findRowIdColumnIndex(java.lang.String[])>
<com.android.internal.telephony.IMms: boolean deleteStoredConversation(java.lang.String,long)>
<android.view.animation.Animation: float resolveSize(int,float,int,int)>
<android.animation.PointFEvaluator: android.graphics.PointF evaluate(float,android.graphics.PointF,android.graphics.PointF)>
<android.text.Layout: float getPrimaryHorizontal(int,boolean)>
<android.app.admin.IDevicePolicyManager: boolean getScreenCaptureDisabled(android.content.ComponentName,int)>
<android.view.GraphicBuffer: int describeContents()>
<android.os.SystemService: void start(java.lang.String)>
<android.view.ViewGroup: android.view.View findFocus()>
<android.content.Context: java.lang.String getPackageCodePath()>
<android.app.backup.BackupDataOutput: void finalize()>
<android.media.AsyncPlayer: void setUsesWakeLock(android.content.Context)>
<android.content.IRestrictionsManager: void requestPermission(java.lang.String,java.lang.String,java.lang.String,android.os.PersistableBundle)>
<android.content.pm.PackageManager: java.lang.String[] currentToCanonicalPackageNames(java.lang.String[])>
<android.print.PrintDocumentInfo.Builder: void <init>(java.lang.String)>
<android.telephony.CellSignalStrengthCdma: void initialize(int,int,int,int,int)>
<android.util.AttributeSet: boolean getAttributeBooleanValue(int,boolean)>
<android.content.ContextWrapper: android.content.Context createApplicationContext(android.content.pm.ApplicationInfo,int)>
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String feedbackTypeToString(int)>
<android.util.JsonReader: void beginObject()>
<android.util.DisplayMetrics: boolean equals(java.lang.Object)>
<android.speech.tts.TtsEngines: boolean isLocaleSetToDefaultForEngine(java.lang.String)>
<android.telecom.RemoteConnection.VideoProvider: void setDeviceOrientation(int)>
<android.database.Cursor: boolean isClosed()>
<android.view.View: int getNextFocusUpId()>
<android.graphics.drawable.InsetDrawable: void setHotspotBounds(int,int,int,int)>
<com.android.internal.view.menu.MenuBuilder: boolean performItemAction(android.view.MenuItem,int)>
<android.content.pm.PackageParser: android.content.pm.PackageParser.Package parsePackage(java.io.File,int)>
<android.print.PrintJobInfo: void setAppId(int)>
<android.location.LocationRequest: int getNumUpdates()>
<android.app.FragmentManagerImpl: void dispatchOptionsMenuClosed(android.view.Menu)>
<android.renderscript.Long4: android.renderscript.Long4 mul(android.renderscript.Long4,long)>
<android.widget.DialerFilter: boolean onKeyUp(int,android.view.KeyEvent)>
<android.app.Dialog: void create()>
<android.database.Cursor: int getColumnIndex(java.lang.String)>
<android.view.ViewRootImpl: void clearChildFocus(android.view.View)>
<android.media.MediaScannerClient: void handleStringTag(java.lang.String,java.lang.String)>
<com.google.android.util.AbstractMessageParser.Resources: com.google.android.util.AbstractMessageParser.TrieNode getDomainSuffixes()>
<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>
<android.bluetooth.IBluetoothAvrcpController: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.IBluetoothA2dp: boolean setPriority(android.bluetooth.BluetoothDevice,int)>
<android.telecom.StatusHints: android.os.Bundle getExtras()>
<android.text.LoginFilter: boolean isAllowed(char)>
<android.media.MediaRecorder: void start()>
<android.filterpacks.imageproc.BitmapOverlayFilter: void tearDown(android.filterfw.core.FilterContext)>
<android.net.LinkQualityInfo: int getNetworkType()>
<android.app.Instrumentation: void callActivityOnDestroy(android.app.Activity)>
<android.net.NetworkStateTracker: boolean isTeardownRequested()>
<android.os.BatteryStats.Uid: void noteWifiScanStoppedLocked(long)>
<android.view.animation.Transformation: java.lang.String toString()>
<com.android.ims.internal.IImsVideoCallProvider: void setDeviceOrientation(int)>
<android.gesture.GestureStore: java.util.ArrayList getGestures(java.lang.String)>
<android.provider.Contacts.ContactMethods: java.lang.Object decodeImProtocol(java.lang.String)>
<android.inputmethodservice.ExtractEditText: void setSpan_internal(java.lang.Object,int,int,int)>
<com.android.internal.util.Preconditions: void checkFlagsArgument(int,int)>
<android.telephony.CellSignalStrengthCdma: void <init>(android.telephony.CellSignalStrengthCdma)>
<android.view.accessibility.AccessibilityInteractionClient: boolean performAccessibilityAction(int,int,long,int,android.os.Bundle)>
<android.view.WindowCallbackWrapper: boolean onSearchRequested()>
<android.hardware.camera2.legacy.LegacyExceptionUtils.BufferQueueAbandonedException: void <init>(java.lang.String,java.lang.Throwable)>
<android.speech.tts.TextToSpeech: java.util.Set getVoices()>
<android.preference.VolumePreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.view.View: boolean requestRectangleOnScreen(android.graphics.Rect)>
<android.net.wifi.RttManager.RttListener: void onFailure(int,java.lang.String)>
<android.filterfw.core.InputPort: java.lang.Object getTarget()>
<android.hardware.camera2.impl.CameraDeviceImpl.CaptureCallback: void onCaptureSequenceAborted(android.hardware.camera2.CameraDevice,int)>
<android.util.LogPrinter: void <init>(int,java.lang.String)>
<android.view.Window: boolean performContextMenuIdentifierAction(int,int)>
<android.widget.ImageView: void drawableHotspotChanged(float,float)>
<android.os.StrictMode.ViolationInfo: void <init>(android.os.Parcel,boolean)>
<android.content.DefaultDataHandler: void insert(android.content.ContentResolver,java.io.InputStream)>
<android.app.backup.BackupAgentHelper: void onBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>
<android.widget.ListView: void setSelectionAfterHeaderView()>
<android.location.Location: float getSpeed()>
<android.media.TtmlNodeListener: void onTtmlNodeParsed(android.media.TtmlNode)>
<android.view.KeyEvent.Callback: boolean onKeyLongPress(int,android.view.KeyEvent)>
<android.filterfw.GraphEnvironment: void addReferences(java.lang.Object[])>
<android.app.SearchableInfo.ActionKeyInfo: int describeContents()>
<android.opengl.GLES20: void glStencilOp(int,int,int)>
<android.accounts.ChooseAccountTypeActivity: void onCreate(android.os.Bundle)>
<android.hardware.input.InputManager: android.view.InputDevice getInputDevice(int)>
<android.app.FragmentManagerImpl: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>
<com.android.internal.util.VirtualRefBasePtr: long get()>
<com.android.internal.view.ActionBarPolicy: com.android.internal.view.ActionBarPolicy get(android.content.Context)>
<android.app.AppOpsManager: int startOp(int,int,java.lang.String)>
<android.net.INetworkPolicyManager: void unregisterListener(android.net.INetworkPolicyListener)>
<android.telephony.CellIdentityCdma: int hashCode()>
<com.android.internal.util.Preconditions: java.util.Collection checkCollectionNotEmpty(java.util.Collection,java.lang.String)>
<android.media.session.ISessionController: int getRatingType()>
<android.widget.TextView: android.os.Parcelable onSaveInstanceState()>
<android.view.FocusFinder: android.view.FocusFinder getInstance()>
<android.os.Debug: void resetGlobalExternalFreedCount()>
<android.net.MobileDataStateTracker: java.lang.String getTcpBufferSizesPropName()>
<android.app.Dialog: android.os.Bundle onSaveInstanceState()>
<android.bluetooth.BluetoothMap: boolean isConnected(android.bluetooth.BluetoothDevice)>
<android.app.Dialog: void onContentChanged()>
<android.media.RemoteController.OnClientUpdateListener: void onClientTransportControlUpdate(int)>
<android.security.KeyStore: boolean isHardwareBacked(java.lang.String)>
<android.app.WallpaperManager: android.content.Intent getCropAndSetWallpaperIntent(android.net.Uri)>
<android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>
<android.app.ActivityManagerProxy: boolean isTopActivityImmersive()>
<android.net.wifi.WifiNetworkConnectionStatistics: java.lang.String toString()>
<android.media.session.MediaSession.CallbackStub: void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)>
<android.widget.AbsListView: boolean canScrollList(int)>
<android.media.tv.ITvInputManager: void createOverlayView(android.os.IBinder,android.os.IBinder,android.graphics.Rect,int)>
<android.view.WindowManagerPolicy: int interceptKeyBeforeQueueing(android.view.KeyEvent,int)>
<android.widget.RatingBar: void setStepSize(float)>
<android.hardware.display.DisplayManagerInternal: android.view.DisplayInfo getDisplayInfo(int)>
<android.telecom.Call.Listener: void onCallDestroyed(android.telecom.Call)>
<android.renderscript.RenderScript: android.content.Context getApplicationContext()>
<android.os.Process: long getTotalMemory()>
<android.net.RouteInfo: void <init>(android.net.LinkAddress,java.net.InetAddress,java.lang.String)>
<android.os.BatteryStats.HistoryItem: void writeToParcel(android.os.Parcel,int)>
<android.net.MailTo: java.lang.String getBody()>
<android.net.wifi.p2p.WifiP2pDevice: boolean wpsKeypadSupported()>
<android.content.OperationApplicationException: void <init>(int)>
<android.content.res.AssetFileDescriptor: java.io.FileInputStream createInputStream()>
<android.webkit.WebViewProvider.ViewDelegate: boolean performAccessibilityAction(int,android.os.Bundle)>
<android.hardware.camera2.CaptureResult: java.util.List getKeys()>
<android.service.dreams.IDreamService: void detach()>
<com.android.internal.app.MediaRouteControllerDialog: boolean isVolumeControlEnabled()>
<android.os.Bundle: void putSizeF(java.lang.String,android.util.SizeF)>
<android.speech.srec.UlawEncoderInputStream: int read(byte[])>
<android.app.Activity: boolean onMenuOpened(int,android.view.Menu)>
<android.view.Window: boolean performPanelIdentifierAction(int,int,int)>
<android.os.Process: android.os.UserHandle myUserHandle()>
<android.app.MediaRouteButton: void onAttachedToWindow()>
<android.widget.TextView: boolean onKeyUp(int,android.view.KeyEvent)>
<android.media.session.ISessionController: android.media.session.PlaybackState getPlaybackState()>
<android.app.PendingIntent.OnFinished: void onSendFinished(android.app.PendingIntent,android.content.Intent,int,java.lang.String,android.os.Bundle)>
<android.widget.GridView: int getColumnWidth()>
<android.hardware.camera2.utils.ArrayUtils: boolean contains(java.lang.Object[],java.lang.Object)>
<android.hardware.display.WifiDisplayStatus: int getScanState()>
<android.bluetooth.BluetoothInputDevice: int getPriority(android.bluetooth.BluetoothDevice)>
<com.android.internal.content.PackageMonitor: void onPackageUpdateFinished(java.lang.String,int)>
<android.app.IActivityManager: int startActivityAsUser(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,int)>
<android.renderscript.FieldPacker: android.renderscript.Float4 subFloat4()>
<android.text.Layout: float getDesiredWidth(java.lang.CharSequence,android.text.TextPaint)>
<android.content.Intent: android.content.Intent cloneFilter()>
<android.print.IPrintSpooler: void getPrintJobInfo(android.print.PrintJobId,android.print.IPrintSpoolerCallbacks,int,int)>
<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>
<android.service.persistentdata.IPersistentDataBlockService: long getMaximumDataBlockSize()>
<android.text.SpannableStringBuilder: void drawTextRun(android.graphics.Canvas,int,int,int,int,float,float,boolean,android.graphics.Paint)>
<android.media.MediaCodecInfo.AudioCapabilities: android.media.MediaCodecInfo.AudioCapabilities create(android.media.MediaFormat,android.media.MediaCodecInfo.CodecCapabilities)>
<android.app.AppOpsManager: java.util.List getPackagesForOps(int[])>
<android.graphics.drawable.GradientDrawable: void setStroke(int,int,float,float)>
<com.android.internal.inputmethod.InputMethodUtils: java.util.ArrayList getOverridingImplicitlyEnabledSubtypes(android.view.inputmethod.InputMethodInfo,java.lang.String)>
<android.widget.RelativeLayout.LayoutParams: void <init>(int,int)>
<android.telephony.CellIdentityLte: java.lang.String toString()>
<android.inputmethodservice.InputMethodService: android.view.inputmethod.InputConnection getCurrentInputConnection()>
<android.opengl.GLES20: void glVertexAttrib1fv(int,java.nio.FloatBuffer)>
<android.net.NetworkStats: long getElapsedRealtime()>
<android.app.ActivityOptions: void abort()>
<android.app.ActivityManager.TaskDescription: void setPrimaryColor(int)>
<android.content.pm.PackageItemInfo: void writeToParcel(android.os.Parcel,int)>
<android.widget.SlidingDrawer: void unlock()>
<android.view.IWindow: void dispatchWallpaperOffsets(float,float,float,float,boolean)>
<android.renderscript.RSInvalidStateException: void <init>(java.lang.String)>
<android.net.LinkQualityInfo: long getPacketCount()>
<com.android.ims.internal.IImsUt: int updateCallWaiting(boolean)>
<android.telecom.PhoneAccountHandle: int describeContents()>
<android.app.FragmentTransaction: android.app.FragmentTransaction disallowAddToBackStack()>
<android.filterfw.core.FrameFormat: int getDepth()>
<android.view.WindowInsets: android.view.WindowInsets consumeSystemWindowInsets()>
<android.app.AlertDialog: void setButton3(java.lang.CharSequence,android.os.Message)>
<android.view.KeyEvent: long getDownTime()>
<android.filterpacks.imageproc.GrainFilter: void <init>(java.lang.String)>
<android.os.IVibratorService: void cancelVibrate(android.os.IBinder)>
<com.android.internal.view.menu.IconMenuItemView: boolean showsIcon()>
<android.app.backup.RestoreObserver: void restoreStarting(int)>
<android.speech.tts.TextToSpeech: int addEarcon(java.lang.String,java.lang.String,int)>
<android.hardware.camera2.legacy.CaptureCollector: boolean waitForPreviewsEmpty(long,java.util.concurrent.TimeUnit)>
<android.opengl.GLES30: void glGetInteger64v(int,java.nio.LongBuffer)>
<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getLine1NumberForSubscriber(long)>
<android.accessibilityservice.AccessibilityService.IAccessibilityServiceClientWrapper: void executeMessage(android.os.Message)>
<android.view.MotionEvent: int getButtonState()>
<com.android.internal.widget.multiwaveview.GlowPadView: void setTargetDescriptionsResourceId(int)>
<android.app.usage.UsageStatsManager: void <init>(android.content.Context,android.app.usage.IUsageStatsManager)>
<android.graphics.drawable.Drawable: void getHotspotBounds(android.graphics.Rect)>
<android.nfc.NfcAdapter: android.nfc.NfcAdapter getNfcAdapter(android.content.Context)>
<android.opengl.GLES31: int glGetProgramResourceIndex(int,int,java.lang.String)>
<android.view.ViewRootImpl: void setDragFocus(android.view.View)>
<android.hardware.location.ActivityRecognitionHardware: boolean registerSink(android.hardware.location.IActivityRecognitionHardwareSink)>
<android.app.admin.DevicePolicyManager: boolean isDeviceOwnerApp(java.lang.String)>
<android.graphics.drawable.NinePatchDrawable: void setDither(boolean)>
<android.inputmethodservice.Keyboard: int getHeight()>
<android.net.NetworkStatsHistory: void generateRandom(long,long,long)>
<android.view.ViewGroup: void notifySubtreeAccessibilityStateChanged(android.view.View,android.view.View,int)>
<android.widget.TabHost: void setOnTabChangedListener(android.widget.TabHost.OnTabChangeListener)>
<android.widget.TextView: int getGravity()>
<android.widget.ListPopupWindow: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.hardware.usb.UsbDevice: int getDeviceId()>
<android.bluetooth.IBluetoothGatt: void removeService(int,int,int,android.os.ParcelUuid)>
<android.widget.ListPopupWindow: void setInputMethodMode(int)>
<android.graphics.drawable.GradientDrawable: void setStroke(int,int)>
<android.widget.TextView: void setShowSoftInputOnFocus(boolean)>
<com.android.internal.statusbar.IStatusBar: void disable(int)>
<android.widget.SimpleExpandableListAdapter: long getChildId(int,int)>
<android.telecom.RemoteConnection.Callback: void onVideoProviderChanged(android.telecom.RemoteConnection,android.telecom.RemoteConnection.VideoProvider)>
<android.util.Spline: android.util.Spline createMonotoneCubicSpline(float[],float[])>
<android.media.RemoteDisplayState.RemoteDisplayInfo: void writeToParcel(android.os.Parcel,int)>
<android.app.PendingIntent: java.lang.String getTag(java.lang.String)>
<android.renderscript.Element: android.renderscript.Element U8_2(android.renderscript.RenderScript)>
<android.preference.PreferenceManager.OnPreferenceTreeClickListener: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>
<android.hardware.display.WifiDisplayStatus: int getActiveDisplayState()>
<android.app.KeyguardManager: boolean isKeyguardSecure()>
<com.android.internal.view.animation.NativeInterpolatorFactoryHelper: long createAccelerateInterpolator(float)>
<android.util.Size: java.lang.String toString()>
<android.util.TimeUtils: java.util.ArrayList getTimeZones(java.lang.String)>
<android.view.inputmethod.ExtractedTextRequest: void writeToParcel(android.os.Parcel,int)>
<android.os.CommonTimeConfig: void release()>
<android.net.INetworkScoreService: boolean updateScores(android.net.ScoredNetwork[])>
<android.media.session.ISessionController: android.media.MediaMetadata getMetadata()>
<android.inputmethodservice.Keyboard.Row: void <init>(android.content.res.Resources,android.inputmethodservice.Keyboard,android.content.res.XmlResourceParser)>
<android.view.accessibility.AccessibilityRecord: boolean isImportantForAccessibility()>
<android.print.PrinterCapabilitiesInfo.Builder: void <init>(android.print.PrinterId)>
<com.android.internal.util.DumpUtils: void dumpAsync(android.os.Handler,com.android.internal.util.DumpUtils.Dump,java.io.PrintWriter,long)>
<com.android.internal.view.IInputConnectionWrapper: void requestUpdateCursorAnchorInfo(int,int,com.android.internal.view.IInputContextCallback)>
<android.widget.TextView: void onResolveDrawables(int)>
<android.widget.QuickContactBadge: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.view.View: int computeVerticalScrollOffset()>
<android.media.tv.ITvInputSessionWrapper: void setCaptionEnabled(boolean)>
<com.android.internal.view.menu.MenuItemImpl: boolean expandActionView()>
<android.bluetooth.le.ScanResult: android.bluetooth.BluetoothDevice getDevice()>
<android.net.wifi.IWifiManager: java.util.List getPrivilegedConfiguredNetworks()>
<android.os.MemoryFile: int readBytes(byte[],int,int,int)>
<android.content.Loader: void abandon()>
<android.renderscript.Mesh.Builder: android.renderscript.Mesh.Builder addIndexSetType(android.renderscript.Element,int,android.renderscript.Mesh.Primitive)>
<com.android.internal.view.IInputContext: void getTextBeforeCursor(int,int,int,com.android.internal.view.IInputContextCallback)>
<com.android.internal.content.PackageMonitor: void onPackageRemoved(java.lang.String,int)>
<android.graphics.Path: void rMoveTo(float,float)>
<android.app.ActivityManagerProxy: boolean requestVisibleBehind(android.os.IBinder,boolean)>
<android.widget.AbsSeekBar: void setThumbTintList(android.content.res.ColorStateList)>
<android.opengl.GLES30: void glGetProgramBinary(int,int,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.Buffer)>
<android.net.MobileLinkQualityInfo: void setLteRsrq(int)>
<android.net.http.SslCertificate: java.util.Date getValidNotAfterDate()>
<android.hardware.camera2.impl.SetCommand: void setValue(android.hardware.camera2.impl.CameraMetadataNative,java.lang.Object)>
<android.graphics.Paint: void setFilterBitmap(boolean)>
<android.text.style.SpellCheckSpan: void writeToParcel(android.os.Parcel,int)>
<android.os.BatteryStats.Uid: void noteWifiBatchedScanStoppedLocked(long)>
<android.renderscript.Mesh.AllocationBuilder: android.renderscript.Mesh.AllocationBuilder addIndexSetType(android.renderscript.Mesh.Primitive)>
<com.android.internal.app.WindowDecorActionBar: void <init>(android.app.Dialog)>
<android.filterfw.core.SimpleFrame: void setFloats(float[])>
<android.app.Fragment: void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle)>
<android.graphics.Path: void addArc(android.graphics.RectF,float,float)>
<android.media.tv.TvInputService.Session: void notifyContentAllowed()>
<android.telecom.Conference: void onStopDtmfTone()>
<android.net.NetworkStatsHistory: void generateRandom(long,long,long,long,long,long,long,java.util.Random)>
<android.app.ActivityThread: android.app.LoadedApk getPackageInfo(java.lang.String,android.content.res.CompatibilityInfo,int,int)>
<android.view.View: boolean isActivated()>
<android.nfc.INfcCardEmulation: boolean removeAidGroupForService(int,android.content.ComponentName,java.lang.String)>
<android.alsa.AlsaDevicesParser: boolean hasCaptureDevices(int)>
<android.animation.AnimatorSet: void playSequentially(android.animation.Animator[])>
<android.media.MediaFocusControl: void dump(java.io.PrintWriter)>
<android.text.format.Time: int getJulianMondayFromWeeksSinceEpoch(int)>
<android.preference.RingtonePreference: void <init>(android.content.Context)>
<android.renderscript.Program: android.renderscript.Type getConstant(int)>
<android.view.Window: void invalidatePanelMenu(int)>
<android.util.ArraySet: int hashCode()>
<android.media.tv.ITvInputManager: java.util.List getTvInputList(int)>
<android.net.MobileDataStateTracker: boolean isProvisioningNetwork()>
<android.os.UEventObserver.UEvent: java.lang.String get(java.lang.String)>
<android.content.SyncStatusInfo: void writeToParcel(android.os.Parcel,int)>
<android.service.wallpaper.WallpaperService.Engine: void onSurfaceChanged(android.view.SurfaceHolder,int,int,int)>
<android.os.Binder: boolean isBinderAlive()>
<com.android.internal.widget.ResolverDrawerLayout.LayoutParams: void <init>(int,int)>
<android.app.ActivityManagerNative: boolean isSystemReady()>
<android.service.dreams.DreamService: boolean isWindowless()>
<android.os.BatteryStats: long getStartClockTime()>
<android.location.Address: java.lang.String toString()>
<android.opengl.GLES31: void glProgramUniform1f(int,int,float)>
<android.view.ViewGroup: boolean damageChildDeferred(android.view.View)>
<android.view.textservice.TextServicesManager: android.view.textservice.SpellCheckerSession newSpellCheckerSession(android.os.Bundle,java.util.Locale,android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener,boolean)>
<android.media.tv.TvInputManager: java.util.List getAvailableTvStreamConfigList(java.lang.String)>
<android.opengl.GLES20: void glGenRenderbuffers(int,int[],int)>
<android.speech.IRecognitionListener: void onResults(android.os.Bundle)>
<android.opengl.GLES20: void glGenRenderbuffers(int,java.nio.IntBuffer)>
<android.widget.ActionMenuView.ActionMenuChildView: boolean needsDividerAfter()>
<android.widget.HorizontalScrollView: int getMaxScrollAmount()>
<android.location.LocationRequest: void writeToParcel(android.os.Parcel,int)>
<android.drm.DrmSupportInfo: void setDescription(java.lang.String)>
<android.widget.TextView: void setWidth(int)>
<android.nfc.INfcAdapterExtras: android.os.Bundle close(java.lang.String,android.os.IBinder)>
<android.widget.TableLayout: void addView(android.view.View,android.view.ViewGroup.LayoutParams)>
<android.text.style.SuperscriptSpan: void <init>(android.os.Parcel)>
<android.app.usage.UsageEvents: void writeToParcel(android.os.Parcel,int)>
<android.print.PrintJobInfo: boolean hasAdvancedOption(java.lang.String)>
<android.widget.RemoteViews: void <init>(android.widget.RemoteViews,android.widget.RemoteViews)>
<android.os.ServiceManagerNative: android.os.IServiceManager asInterface(android.os.IBinder)>
<android.renderscript.Double3: void div(android.renderscript.Double3)>
<android.media.effect.effects.RedEyeEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>
<android.util.SparseArray: void removeAt(int)>
<android.nfc.NfcAdapter: android.content.Context getContext()>
<android.opengl.GLES20: void glGetAttachedShaders(int,int,int[],int,int[],int)>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo.RangeInfo getRangeInfo()>
<android.renderscript.Short2: short get(int)>
<android.filterfw.geometry.Rectangle: android.filterfw.geometry.Rectangle scaled(float)>
<android.database.sqlite.SQLiteDatabase: boolean needUpgrade(int)>
<android.util.Property: java.lang.Class getType()>
<android.media.FaceDetector.Face: float confidence()>
<android.widget.CompoundButton: void drawableStateChanged()>
<android.view.View: void setPivotX(float)>
<android.database.CursorJoiner: void <init>(android.database.Cursor,java.lang.String[],android.database.Cursor,java.lang.String[])>
<android.os.BatteryStats: long getPhoneDataConnectionTime(int,long,int)>
<com.android.internal.widget.ActionBarView: void collapseActionView()>
<android.telecom.Log: void wtf(java.lang.String,java.lang.String,java.lang.Object[])>
<android.hardware.display.WifiDisplay: int describeContents()>
<android.webkit.MimeTypeMap: java.lang.String getExtensionFromMimeType(java.lang.String)>
<android.media.MediaRouter.RouteInfo: java.lang.Object getTag()>
<android.opengl.GLES20: void glReleaseShaderCompiler()>
<android.filterfw.core.Filter: void prepare(android.filterfw.core.FilterContext)>
<com.google.android.gles_jni.GLImpl: void glLightModelf(int,float)>
<android.webkit.WebView: void setFindListener(android.webkit.WebView.FindListener)>
<android.location.FusedBatchOptions: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.app.IBatteryStats: void noteNetworkInterfaceType(java.lang.String,int)>
<android.ddm.DdmHandleHeap: org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)>
<android.graphics.drawable.RotateDrawable: void setPivotX(float)>
<android.hardware.display.DisplayManager: void startWifiDisplayScan()>
<android.preference.PreferenceActivity: void invalidateHeaders()>
<android.net.Network: void <init>(int)>
<android.renderscript.ScriptIntrinsicBlur: void setRadius(float)>
<com.google.android.util.AbstractMessageParser.Video: java.lang.String getURL(java.lang.String)>
<android.util.SparseIntArray: void delete(int)>
<android.bluetooth.BluetoothHeadset: void phoneStateChanged(int,int,int,java.lang.String,int)>
<android.widget.DatePickerController: int getMinMonth()>
<android.media.RingtoneManager: boolean isDefault(android.net.Uri)>
<android.text.style.TtsSpan.DateBuilder: android.text.style.TtsSpan.DateBuilder setWeekday(int)>
<com.android.internal.widget.ToolbarWidgetWrapper: void saveHierarchyState(android.util.SparseArray)>
<android.widget.ActivityChooserModel: android.content.Intent getIntent()>
<android.media.session.ISessionCallback: void onPlayFromSearch(java.lang.String,android.os.Bundle)>
<android.webkit.WebSettings: boolean getAllowFileAccessFromFileURLs()>
<android.content.res.AssetFileDescriptor.AutoCloseInputStream: int read(byte[])>
<android.net.wifi.WifiEnterpriseConfig: void setCaCertificate(java.security.cert.X509Certificate)>
<android.widget.ActionMenuPresenter: void <init>(android.content.Context)>
<android.animation.Keyframe: boolean hasValue()>
<android.hardware.camera2.params.TonemapCurve: void copyColorCurve(int,float[],int)>
<android.net.wifi.WifiInfo: void <init>(android.net.wifi.WifiInfo)>
<android.app.Activity: android.view.View onCreatePanelView(int)>
<android.widget.OverScroller: void fling(int,int,int,int,int,int,int,int,int,int)>
<android.widget.HeaderViewListAdapter: boolean removeFooter(android.view.View)>
<android.os.ServiceManagerProxy: android.os.IBinder asBinder()>
<com.android.internal.telecom.IConnectionService: void stopDtmfTone(java.lang.String)>
<android.telecom.InCallService: android.os.IBinder onBind(android.content.Intent)>
<com.android.ims.internal.IImsVideoCallCallback: void receiveSessionModifyResponse(int,android.telecom.VideoProfile,android.telecom.VideoProfile)>
<android.app.ActionBar: void setDisplayHomeAsUpEnabled(boolean)>
<android.view.WindowCallbackWrapper: void onWindowFocusChanged(boolean)>
<android.app.Dialog: void setFeatureDrawableUri(int,android.net.Uri)>
<android.app.admin.DevicePolicyManager: void setProfileEnabled(android.content.ComponentName)>
<android.app.DatePickerDialog: void onRestoreInstanceState(android.os.Bundle)>
<android.accounts.AccountManager: android.accounts.Account[] getAccountsByType(java.lang.String)>
<com.android.internal.os.BatteryStatsImpl: void noteNetworkStatsEnabledLocked()>
<com.android.internal.view.menu.IconMenuView: com.android.internal.view.menu.IconMenuView.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.media.IRemoteControlClient: void updateMetadata(int,int,android.media.Rating)>
<android.widget.TextView: void setShadowLayer(float,float,float,int)>
<android.net.NetworkIdentity: void <init>(int,int,java.lang.String,java.lang.String,boolean)>
<android.net.MobileLinkQualityInfo: void setLteSignalStrength(int)>
<com.android.internal.widget.LinearLayoutWithDefaultTouchRecepient: void setDefaultTouchRecepient(android.view.View)>
<android.net.Uri: android.net.Uri fromParts(java.lang.String,java.lang.String,java.lang.String)>
<android.net.wifi.p2p.WifiP2pDeviceList: void writeToParcel(android.os.Parcel,int)>
<android.webkit.WebViewFactoryProvider.Statics: java.lang.String getDefaultUserAgent(android.content.Context)>
<com.android.internal.widget.ILockSettings: boolean havePassword(int)>
<android.graphics.Rect: void set(android.graphics.Rect)>
<android.content.UndoManager: void addOperation(android.content.UndoOperation,int)>
<android.database.DatabaseUtils: java.lang.String dumpCurrentRowToString(android.database.Cursor)>
<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getVoiceMailAlphaTagForSubscriber(long)>
<android.telecom.Connection: void onSeparate()>
<android.speech.tts.TextToSpeech: java.util.Locale getDefaultLanguage()>
<android.bluetooth.BluetoothAdapter: void setDiscoverableTimeout(int)>
<android.os.Handler: void removeCallbacks(java.lang.Runnable)>
<android.webkit.WebViewProvider: void findNext(boolean)>
<android.media.MediaMetadata.Builder: android.media.MediaMetadata.Builder putString(java.lang.String,java.lang.String)>
<android.net.LinkQualityInfo: int getNormalizedSignalStrength()>
<android.view.animation.AnimationSet: void <init>(android.content.Context,android.util.AttributeSet)>
<android.gesture.GestureOverlayView: void setGestureStrokeType(int)>
<android.net.http.AndroidHttpClientConnection: void close()>
<com.google.android.gles_jni.GLImpl: void glMaterialxv(int,int,java.nio.IntBuffer)>
<android.view.accessibility.CaptioningManager: void addCaptioningChangeListener(android.view.accessibility.CaptioningManager.CaptioningChangeListener)>
<com.android.internal.os.BatteryStatsImpl.Uid: void noteStopGps(long)>
<android.transition.Visibility: android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)>
<android.filterpacks.base.GLTextureSource: void <init>(java.lang.String)>
<android.net.NetworkStats.Entry: void <init>(java.lang.String,int,int,int,long,long,long,long,long)>
<android.filterpacks.base.CallbackFilter: void <init>(java.lang.String)>
<android.view.InputChannel: void writeToParcel(android.os.Parcel,int)>
<android.widget.LinearLayout: void setDividerDrawable(android.graphics.drawable.Drawable)>
<android.webkit.FindActionModeCallback: void afterTextChanged(android.text.Editable)>
<android.net.NetworkTemplate: android.net.NetworkTemplate buildTemplateMobile3gLower(java.lang.String)>
<com.android.internal.app.MediaRouteControllerDialog: void onAttachedToWindow()>
<android.app.IActivityContainerCallback: void setVisible(android.os.IBinder,boolean)>
<android.media.session.PlaybackState: java.util.List getCustomActions()>
<android.app.AppOpsManager.OpEntry: int getMode()>
<com.android.internal.widget.ToolbarWidgetWrapper: java.lang.CharSequence getSubtitle()>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getConstantWidth()>
<android.widget.TextView: android.content.res.ColorStateList getTextColors()>
<android.filterpacks.imageproc.GrainFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<android.view.View: void dispatchConfigurationChanged(android.content.res.Configuration)>
<android.net.RssiCurve: void <init>(int,int,byte[])>
<android.nfc.tech.IsoDep: void setTimeout(int)>
<android.graphics.drawable.ScaleDrawable: void onBoundsChange(android.graphics.Rect)>
<android.webkit.WebView: android.webkit.WebSettings getSettings()>
<android.provider.Settings.System: java.lang.String getString(android.content.ContentResolver,java.lang.String)>
<android.view.inputmethod.InputMethodManager.FinishedInputEventCallback: void onFinishedInputEvent(java.lang.Object,boolean)>
<android.provider.Settings.System: boolean putFloatForUser(android.content.ContentResolver,java.lang.String,float,int)>
<android.app.FragmentTransaction: android.app.FragmentTransaction remove(android.app.Fragment)>
<com.android.internal.util.ArrayUtils: java.lang.Object[] appendElement(java.lang.Class,java.lang.Object[],java.lang.Object)>
<android.app.ActivityManager: java.util.List getProcessesInErrorState()>
<android.net.wifi.p2p.WifiP2pDeviceList: android.net.wifi.p2p.WifiP2pDevice remove(java.lang.String)>
<android.widget.AutoCompleteTextView: android.widget.AdapterView.OnItemClickListener getItemClickListener()>
<android.net.wifi.WifiNetworkConnectionStatistics: void <init>(android.net.wifi.WifiNetworkConnectionStatistics)>
<android.media.RemoteDisplay: void finalize()>
<com.android.internal.view.menu.ActionMenuItemView: void <init>(android.content.Context)>
<android.filterfw.geometry.Quad: android.filterfw.geometry.Quad scaled(float,float)>
<android.widget.Switch: void setSwitchTextAppearance(android.content.Context,int)>
<android.renderscript.Float4: void setValues(float,float,float,float)>
<android.widget.ExpandableListAdapter: boolean areAllItemsEnabled()>
<android.text.method.TextKeyListener: int getInputType()>
<android.content.res.AssetFileDescriptor: long getDeclaredLength()>
<android.media.AudioRecord: int getMinBufferSize(int,int,int)>
<android.animation.ObjectAnimator: void setIntValues(int[])>
<com.android.internal.widget.ActionBarContextView: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>
<com.android.internal.telecom.IConnectionService: void answer(java.lang.String)>
<android.inputmethodservice.InputMethodService: void onWindowShown()>
<android.location.Geofence: boolean equals(java.lang.Object)>
<android.filterfw.core.Filter: void open(android.filterfw.core.FilterContext)>
<android.content.ContentProviderOperation.Builder: android.content.ContentProviderOperation build()>
<android.net.http.SslCertificate: java.lang.String toString()>
<android.app.Activity: void setFinishOnTouchOutside(boolean)>
<android.hardware.display.WifiDisplay: boolean equals(android.hardware.display.WifiDisplay)>
<android.renderscript.Float4: void div(android.renderscript.Float4)>
<android.filterfw.core.FilterGraph: boolean containsFilter(android.filterfw.core.Filter)>
<android.renderscript.Float4: void sub(android.renderscript.Float4)>
<android.hardware.camera2.legacy.ParameterUtils: android.util.Size convertSize(android.hardware.Camera.Size)>
<android.gesture.GestureLibrary: java.util.ArrayList recognize(android.gesture.Gesture)>
<android.speech.IRecognitionService: void startListening(android.content.Intent,android.speech.IRecognitionListener)>
<android.content.Intent: android.content.Intent makeRestartActivityTask(android.content.ComponentName)>
<android.database.DatabaseUtils: void cursorIntToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues)>
<android.accounts.IAccountManager: java.lang.String getUserData(android.accounts.Account,java.lang.String)>
<android.database.AbstractCursor: void close()>
<android.widget.AbsListView: boolean performItemClick(android.view.View,int,long)>
<com.android.internal.os.BatteryStatsHelper: void clearStats()>
<android.hardware.Camera: void setOneShotPreviewCallback(android.hardware.Camera.PreviewCallback)>
<android.widget.GridLayout: void onLayout(boolean,int,int,int,int)>
<android.preference.PreferenceActivity: void startWithFragment(java.lang.String,android.os.Bundle,android.app.Fragment,int)>
<android.app.Notification.MediaStyle: android.app.Notification.MediaStyle setShowActionsInCompactView(int[])>
<android.renderscript.Double4: double get(int)>
<android.view.textservice.TextInfo: int getSequence()>
<android.opengl.GLES31: void glProgramUniform1uiv(int,int,int,int[],int)>
<android.net.NetworkRequest.Builder: android.net.NetworkRequest.Builder addCapability(int)>
<android.speech.srec.WaveHeader: int write(java.io.OutputStream)>
<android.view.ViewGroup: void attachLayoutAnimationParameters(android.view.View,android.view.ViewGroup.LayoutParams,int,int)>
<android.printservice.IPrintService: void createPrinterDiscoverySession()>
<com.google.android.gles_jni.GLImpl: void glClearColor(float,float,float,float)>
<android.app.ActivityOptions: android.app.ActivityOptions makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int,android.app.ActivityOptions.OnAnimationStartedListener)>
<android.speech.RecognitionListener: void onBeginningOfSpeech()>
<android.hardware.Camera.Size: int hashCode()>
<com.android.internal.app.IVoiceInteractionManagerService: boolean deliverNewSession(android.os.IBinder,android.service.voice.IVoiceInteractionSession,com.android.internal.app.IVoiceInteractor)>
<com.android.internal.widget.LockPatternUtils: boolean usingBiometricWeak()>
<android.filterfw.core.FrameFormat: int getNumberOfDimensions()>
<android.media.ClosedCaptionWidget: void onDetachedFromWindow()>
<com.google.android.util.AbstractMessageParser.FlickrPhoto: java.util.List getInfo()>
<android.graphics.Bitmap: void getOpticalInsets(android.graphics.Rect)>
<android.text.LoginFilter.PasswordFilterGMail: void <init>(boolean)>
<android.view.WindowManagerGlobal: android.view.View getRootView(java.lang.String)>
<android.net.http.ErrorStrings: java.lang.String getString(int,android.content.Context)>
<android.graphics.Canvas: int getHeight()>
<android.view.View: int getWindowVisibility()>
<android.view.SurfaceView: void setVisibility(int)>
<android.net.wifi.p2p.WifiP2pManager.GroupInfoListener: void onGroupInfoAvailable(android.net.wifi.p2p.WifiP2pGroup)>
<android.animation.TimeInterpolator: float getInterpolation(float)>
<android.view.GraphicBuffer: boolean isDestroyed()>
<android.hardware.usb.UsbRequest: android.hardware.usb.UsbEndpoint getEndpoint()>
<android.telecom.ParcelableConnection: boolean getIsVoipAudioMode()>
<android.opengl.GLES10: void glLightf(int,int,float)>
<android.widget.Gallery: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.internal.util.XmlUtils: java.util.HashMap readThisMapXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[])>
<android.filterfw.core.FrameManager: android.filterfw.core.Frame newBoundFrame(android.filterfw.core.FrameFormat,int,long)>
<android.widget.SearchView.SearchAutoComplete: void performCompletion()>
<android.view.View: void setTranslationY(float)>
<android.widget.QuickContactBadge: void onClick(android.view.View)>
<android.opengl.GLES11Ext: void glLoadPaletteFromModelViewMatrixOES()>
<android.renderscript.Short3: void mod(android.renderscript.Short3)>
<android.net.wifi.WifiInfo: android.net.NetworkInfo.DetailedState getDetailedStateOf(android.net.wifi.SupplicantState)>
<android.content.ClipData: void writeToParcel(android.os.Parcel,int)>
<android.view.OrientationEventListener: boolean canDetectOrientation()>
<android.telephony.NeighboringCellInfo: void <init>(int,int)>
<android.text.TextUtils: java.lang.String substring(java.lang.CharSequence,int,int)>
<android.opengl.GLES10: void glEnable(int)>
<android.bluetooth.BluetoothMap: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.hardware.camera2.CaptureRequest: int hashCode()>
<android.os.TokenWatcher: void acquire(android.os.IBinder,java.lang.String)>
<android.telecom.ConnectionRequest: android.telecom.PhoneAccountHandle getAccountHandle()>
<android.preference.PreferenceActivity: void onBuildHeaders(java.util.List)>
<android.view.RenderNode: android.view.RenderNode create(java.lang.String,android.view.View)>
<android.view.View: boolean isScrollContainer()>
<android.media.MediaInserter: void flushAll()>
<com.android.internal.location.ProviderProperties: void writeToParcel(android.os.Parcel,int)>
<android.content.Context: java.io.File[] getObbDirs()>
<android.database.MergeCursor: java.lang.String[] getColumnNames()>
<android.app.ActivityManagerProxy: void setFrontActivityScreenCompatMode(int)>
<com.android.internal.os.BatteryStatsImpl: void noteAudioOnLocked(int)>
<android.media.MediaRecorder: void setCaptureRate(double)>
<android.widget.GridView: boolean onKeyMultiple(int,int,android.view.KeyEvent)>
<android.widget.ProgressBar: void setIndeterminateTintList(android.content.res.ColorStateList)>
<android.telephony.CellLocation: void fillInNotifierBundle(android.os.Bundle)>
<android.app.ActivityManagerProxy: boolean willActivityBeVisible(android.os.IBinder)>
<android.media.AudioService: int getRingerMode()>
<android.text.DynamicLayout: void setIndexFirstChangedBlock(int)>
<android.os.RemoteMailException: void <init>(java.lang.String)>
<android.print.PrinterCapabilitiesInfo: android.print.PrintAttributes.Margins getMinMargins()>
<android.content.ContentResolver: android.content.SyncAdapterType[] getSyncAdapterTypes()>
<com.google.android.gles_jni.GLImpl: void glPixelStorei(int,int)>
<com.google.android.gles_jni.GLImpl: void glTexGenxv(int,int,java.nio.IntBuffer)>
<android.view.ActionMode.Callback: boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu)>
<android.service.notification.ConditionProviderService: void onUnsubscribe(android.net.Uri)>
<android.widget.TextClock: void onDetachedFromWindow()>
<android.location.ILocationListener: void onProviderDisabled(java.lang.String)>
<android.content.ContentResolver: android.content.SyncInfo getCurrentSync()>
<android.os.Parcel: byte[] readBlob()>
<android.opengl.GLES11: void glGetLightfv(int,int,float[],int)>
<android.media.session.MediaSession.Token: void <init>(android.media.session.ISessionController)>
<android.app.Activity: void startActivityFromChild(android.app.Activity,android.content.Intent,int,android.os.Bundle)>
<com.android.internal.app.ToolbarActionBar: void setHomeAsUpIndicator(int)>
<android.app.FragmentManagerImpl: android.app.FragmentManager.BackStackEntry getBackStackEntryAt(int)>
<android.hardware.camera2.utils.ArrayUtils: int getArrayIndex(int[],int)>
<android.provider.ContactsContract.ProfileSyncState: void set(android.content.ContentProviderClient,android.accounts.Account,byte[])>
<com.android.internal.view.menu.ListMenuItemView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.drm.DrmUtils.ExtendedMetadataParser: java.util.Iterator keyIterator()>
<android.hardware.camera2.CameraCharacteristics.Key: java.lang.String getName()>
<android.webkit.WebView: android.view.View findHierarchyView(java.lang.String,int)>
<android.webkit.WebView: void onConfigurationChanged(android.content.res.Configuration)>
<android.media.ClosedCaptionTrack: void updateView(java.util.Vector)>
<android.net.Network: int describeContents()>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofMultiInt(java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,java.lang.Object[])>
<android.view.View.MeasureSpec: java.lang.String toString(int)>
<android.animation.Keyframe: android.animation.Keyframe ofObject(float)>
<com.android.internal.app.RestrictionsPinActivity: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>
<android.renderscript.Byte4: void addAt(int,byte)>
<android.widget.ProgressBar: void setMax(int)>
<android.location.GpsMeasurement: byte getLossOfLock()>
<com.android.internal.os.BatteryStatsImpl.Uid.Pkg: int getWakeups(int)>
<android.service.notification.StatusBarNotification: java.lang.String getOpPkg()>
<com.android.internal.os.BatteryStatsImpl.SamplingTimer: void setStale()>
<android.inputmethodservice.ExtractEditText: boolean isInputMethodTarget()>
<com.android.internal.widget.ActionBarContextView: void onAnimationEnd(android.animation.Animator)>
<android.graphics.ColorMatrixColorFilter: void setColorMatrix(float[])>
<android.webkit.WebHistoryItem: java.lang.String getOriginalUrl()>
<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageIOO(int,int,java.lang.Object,java.lang.Object)>
<android.view.ViewRootImpl: void notifySubtreeAccessibilityStateChanged(android.view.View,android.view.View,int)>
<android.view.ViewConfiguration: boolean isFadingMarqueeEnabled()>
<android.view.inputmethod.InputMethodSubtype: void writeToParcel(android.os.Parcel,int)>
<android.bluetooth.IBluetoothHealth: android.os.ParcelFileDescriptor getMainChannelFd(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration)>
<android.widget.ViewAnimator: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.android.internal.widget.ActionBarContainer: void onFinishInflate()>
<android.os.IUserManager: android.content.pm.UserInfo getUserInfo(int)>
<android.view.ViewGroup: void internalSetPadding(int,int,int,int)>
<android.filterfw.core.GLFrame: boolean hasNativeAllocation()>
<android.bluetooth.le.ScanResult: void writeToParcel(android.os.Parcel,int)>
<android.inputmethodservice.Keyboard: android.inputmethodservice.Keyboard.Row createRowFromXml(android.content.res.Resources,android.content.res.XmlResourceParser)>
<android.renderscript.Byte2: void add(byte)>
<android.webkit.WebSettings: void setAppCachePath(java.lang.String)>
<android.view.View: java.lang.CharSequence getIterableTextForAccessibility()>
<android.hardware.camera2.legacy.ParameterUtils: java.util.List getAvailablePreviewZoomCropRectangles(android.hardware.Camera.Parameters,android.graphics.Rect,android.util.Size)>
<android.widget.TimePicker: void onConfigurationChanged(android.content.res.Configuration)>
<android.widget.ViewFlipper: void onAttachedToWindow()>
<android.hardware.Camera.Parameters: boolean same(android.hardware.Camera.Parameters)>
<android.os.UserManager: android.graphics.Bitmap getUserIcon(int)>
<android.app.DownloadManager.Query: android.app.DownloadManager.Query setFilterByStatus(int)>
<android.filterpacks.videosink.MediaRecorderStopException: void <init>(java.lang.Throwable)>
<com.android.internal.policy.IKeyguardService: void doKeyguardTimeout(android.os.Bundle)>
<android.app.admin.DevicePolicyManager: void setRecommendedGlobalProxy(android.content.ComponentName,android.net.ProxyInfo)>
<android.app.AppOpsManager.OpEntry: long getRejectTime()>
<com.android.internal.widget.ToolbarWidgetWrapper: void setWindowCallback(android.view.Window.Callback)>
<android.print.pdf.PrintedPdfDocument: android.graphics.pdf.PdfDocument.Page startPage(int)>
<android.view.Window: void setReturnTransition(android.transition.Transition)>
<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceResponse: int getVersion()>
<android.opengl.GLES20: boolean glIsBuffer(int)>
<android.view.Display: int getDisplayId()>
<android.hardware.camera2.utils.BinderHolder: int describeContents()>
<android.net.wifi.WifiEnterpriseConfig: java.security.PrivateKey getClientPrivateKey()>
<android.util.Slog: int e(java.lang.String,java.lang.String)>
<android.app.ActivityOptions: int getExitCoordinatorKey()>
<android.content.Context: java.io.FileInputStream openFileInput(java.lang.String)>
<android.text.GraphicsOperations: void drawText(android.graphics.Canvas,int,int,float,float,android.graphics.Paint)>
<android.opengl.GLES31: int glCreateShaderProgramv(int,java.lang.String[])>
<android.view.accessibility.AccessibilityNodeInfo: boolean isSealed()>
<android.net.ConnectivityManager: int stopUsingNetworkFeature(int,java.lang.String)>
<android.telephony.SubscriptionManager: void putPhoneIdAndSubIdExtra(android.content.Intent,int)>
<android.appwidget.AppWidgetManager: void notifyAppWidgetViewDataChanged(int,int)>
<android.filterpacks.numeric.SinWaveFilter: void process(android.filterfw.core.FilterContext)>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap)>
<android.filterfw.core.NativeFrame: int getCapacity()>
<android.telephony.CellSignalStrengthCdma: void setEvdoDbm(int)>
<android.app.Activity: void startActivity(android.content.Intent)>
<android.net.wifi.WifiManager: boolean isPortableHotspotSupported()>
<android.app.admin.DevicePolicyManager: void setKeyguardDisabledFeatures(android.content.ComponentName,int)>
<android.net.LinkProperties: java.util.List getAllRoutes()>
<android.accessibilityservice.AccessibilityService.IAccessibilityServiceClientWrapper: void onKeyEvent(android.view.KeyEvent,int)>
<android.net.wifi.WpsResult: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.net.VpnConfig: void updateAllowedFamilies(java.net.InetAddress)>
<android.content.res.AssetManager: android.content.res.XmlResourceParser openXmlResourceParser(java.lang.String)>
<android.net.NetworkInfo: int getType()>
<android.media.session.MediaSession: void setMetadata(android.media.MediaMetadata)>
<android.view.ViewDebug.ViewOperation: void run(java.lang.Object[])>
<android.content.ContextWrapper: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<android.app.backup.RestoreSession: int getAvailableRestoreSets(android.app.backup.RestoreObserver)>
<android.net.wifi.WifiInfo: void setRssi(int)>
<android.filterpacks.imageproc.TintFilter: void <init>(java.lang.String)>
<android.content.IntentFilter: void setPriority(int)>
<android.view.inputmethod.InputConnectionWrapper: boolean endBatchEdit()>
<android.location.GpsMeasurement: void setBitNumber(int)>
<android.animation.Keyframe: void setInterpolator(android.animation.TimeInterpolator)>
<android.opengl.GLES31: void glProgramUniform4i(int,int,int,int,int,int)>
<android.net.UidRange: void writeToParcel(android.os.Parcel,int)>
<android.hardware.camera2.params.RggbChannelVector: float getGreenEven()>
<com.android.internal.app.ProcessStats.ServiceState: boolean isRestarting()>
<android.graphics.Canvas: void drawARGB(int,int,int,int)>
<android.widget.RemoteViewsService: android.os.IBinder onBind(android.content.Intent)>
<android.telecom.Conference: void setDisconnected(android.telecom.DisconnectCause)>
<android.graphics.Paint: void setUnderlineText(boolean)>
<android.media.tv.TvInputService.Session: boolean onSelectTrack(int,java.lang.String)>
<android.view.WindowManagerPolicy.WindowState: boolean isVisibleOrBehindKeyguardLw()>
<android.widget.LinearLayout: void setDividerPadding(int)>
<android.opengl.GLES31: void glProgramUniform4iv(int,int,int,int[],int)>
<android.app.SearchableInfo: java.lang.String getSuggestPackage()>
<android.view.SubMenu: android.view.SubMenu setIcon(android.graphics.drawable.Drawable)>
<android.widget.CalendarView.CalendarViewDelegate: void setWeekNumberColor(int)>
<android.media.tv.TvContract: android.net.Uri buildProgramsUriForChannel(android.net.Uri)>
<android.net.UrlQuerySanitizer: void registerParameter(java.lang.String,android.net.UrlQuerySanitizer.ValueSanitizer)>
<android.media.AudioManager: boolean isStreamAffectedByRingerMode(int)>
<android.database.CursorWrapper: int getType(int)>
<android.preference.Preference: void setPersistent(boolean)>
<android.renderscript.FieldPacker: android.renderscript.Matrix2f subMatrix2f()>
<android.renderscript.Byte3: void <init>(byte,byte,byte)>
<android.media.MediaDrm: android.media.MediaDrm.CertificateRequest getCertificateRequest(int,java.lang.String)>
<com.android.internal.view.IInputContext: void reportFullscreenMode(boolean)>
<android.media.tv.TvStreamConfig.Builder: android.media.tv.TvStreamConfig.Builder maxHeight(int)>
<android.widget.Spinner: void <init>(android.content.Context,int)>
<android.webkit.WebSettings: boolean getBlockNetworkImage()>
<android.app.DownloadManager: java.lang.Long getMaxBytesOverMobile(android.content.Context)>
<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getIsimDomain()>
<android.os.Message: boolean isAsynchronous()>
<android.gesture.GestureOverlayView: float getGestureStrokeAngleThreshold()>
<com.google.android.gles_jni.GLImpl: void glGenTextures(int,int[],int)>
<android.filterpacks.imageproc.BitmapOverlayFilter: void <init>(java.lang.String)>
<android.graphics.Region: android.graphics.Rect getBounds()>
<android.webkit.WebSettings: void setAppCacheEnabled(boolean)>
<android.content.UndoManager: java.lang.CharSequence getUndoLabel(android.content.UndoOwner[])>
<android.content.ContentResolver: android.content.res.AssetFileDescriptor openAssetFileDescriptor(android.net.Uri,java.lang.String)>
<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])>
<com.android.internal.widget.multiwaveview.TargetDrawable: boolean isActive()>
<android.view.FrameStats: int getFrameCount()>
<com.android.internal.util.XmlUtils: java.util.ArrayList readThisListXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[])>
<android.widget.RemoteViews: android.view.View apply(android.content.Context,android.view.ViewGroup)>
<android.widget.ActionMenuView: boolean hideOverflowMenu()>
<android.graphics.Rect: boolean intersect(android.graphics.Rect)>
<android.renderscript.Mesh.Builder: int getCurrentVertexTypeIndex()>
<android.hardware.camera2.legacy.BurstHolder: void <init>(int,boolean,java.util.List,java.util.Collection)>
<android.transition.Transition: void setMatchOrder(int[])>
<com.android.internal.widget.ActionBarContainer: android.view.View getTabContainer()>
<android.widget.PopupWindow: void <init>(android.content.Context,android.util.AttributeSet)>
<android.graphics.drawable.DrawableContainer: void setAlpha(int)>
<android.database.DatabaseUtils: void cursorIntToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)>
<android.app.Notification.Builder: android.app.Notification.Builder setPublicVersion(android.app.Notification)>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle confirmCredentials(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,android.os.Bundle)>
<android.preference.TwoStatePreference: void <init>(android.content.Context)>
<android.content.ContentProviderClient: android.net.Uri uncanonicalize(android.net.Uri)>
<android.view.View: void postOnAnimationDelayed(java.lang.Runnable,long)>
<android.animation.LayoutTransition: void showChild(android.view.ViewGroup,android.view.View,int)>
<android.content.pm.PermissionInfo: java.lang.String protectionToString(int)>
<com.android.internal.os.BatterySipper: void <init>(com.android.internal.os.BatterySipper.DrainType,android.os.BatteryStats.Uid,double[])>
<android.webkit.WebView: int computeHorizontalScrollRange()>
<android.app.ActivityManager.RunningTaskInfo: void readFromParcel(android.os.Parcel)>
<android.content.UriPermission: android.net.Uri getUri()>
<android.util.LocalLog: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setAllowedNetworkTypes(int)>
<android.text.method.ArrowKeyMovementMethod: boolean end(android.widget.TextView,android.text.Spannable)>
<android.webkit.FindActionModeCallback: void onFindResultReceived(int,int,boolean)>
<android.text.method.BaseMovementMethod: boolean scrollDown(android.widget.TextView,android.text.Spannable,int)>
<android.bluetooth.BluetoothGatt: java.util.List getServices()>
<android.renderscript.Byte3: void copyTo(byte[],int)>
<android.os.Process: void setProcessGroup(int,int)>
<android.util.ArrayMap: boolean isEmpty()>
<android.view.inputmethod.InputMethodSubtype: int getNameResId()>
<android.widget.NumberPicker: int getValue()>
<android.renderscript.Element: android.renderscript.Element F64_3(android.renderscript.RenderScript)>
<com.android.internal.widget.AbsActionBarView: void postShowOverflowMenu()>
<android.content.ContentProviderResult: void writeToParcel(android.os.Parcel,int)>
<android.view.textservice.TextServicesManager: android.view.textservice.SpellCheckerSubtype getCurrentSpellCheckerSubtype(boolean)>
<android.widget.SimpleCursorTreeAdapter: void setViewText(android.widget.TextView,java.lang.String)>
<android.os.BatteryStats: long getFlashlightOnTime(long,int)>
<android.widget.ListPopupWindow: int getAnimationStyle()>
<android.ddm.DdmHandleThread: void disconnected()>
<android.os.Handler: boolean postAtTime(java.lang.Runnable,java.lang.Object,long)>
<com.android.internal.http.multipart.Part: void send(java.io.OutputStream)>
<android.service.voice.VoiceInteractionServiceInfo: void <init>(android.content.pm.PackageManager,android.content.pm.ServiceInfo)>
<android.hardware.camera2.dispatch.MethodNameInvoker: java.lang.Object invoke(java.lang.String,java.lang.Object[])>
<android.net.wifi.WifiConfiguration: void setAutoJoinStatus(int)>
<android.util.Slog: int println(int,java.lang.String,java.lang.String)>
<com.android.internal.view.menu.BaseMenuPresenter: boolean shouldIncludeItem(int,com.android.internal.view.menu.MenuItemImpl)>
<android.widget.ActivityChooserView: void <init>(android.content.Context)>
<android.webkit.WebViewProvider: void clearMatches()>
<android.widget.ScrollView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<android.speech.RecognizerIntent: android.content.Intent getVoiceDetailsIntent(android.content.Context)>
<android.graphics.Picture: int getHeight()>
<android.app.Activity: boolean isResumed()>
<android.location.Address: java.lang.String getAdminArea()>
<android.view.SurfaceView: void onMeasure(int,int)>
<com.android.internal.widget.SubtitleView: void setTextSize(float)>
<android.text.style.TtsSpan.DateBuilder: android.text.style.TtsSpan.DateBuilder setYear(int)>
<android.util.Pair: int hashCode()>
<android.location.Location: android.location.Location getExtraLocation(java.lang.String)>
<android.content.IntentSender: void <init>(android.content.IIntentSender)>
<android.opengl.GLES20: void glGetUniformfv(int,int,java.nio.FloatBuffer)>
<android.text.style.TtsSpan.MeasureBuilder: android.text.style.TtsSpan.MeasureBuilder setNumber(long)>
<android.net.wifi.WifiManager: int addNetwork(android.net.wifi.WifiConfiguration)>
<android.app.ITransientNotification: void show()>
<android.os.storage.IMountService: boolean isSecureContainerMounted(java.lang.String)>
<com.android.internal.os.AtomicFile: java.io.FileOutputStream startWrite()>
<android.bluetooth.le.BluetoothLeAdvertiser: void <init>(android.bluetooth.IBluetoothManager)>
<android.widget.Space: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.telephony.SignalStrength: void <init>(int,int,int,int,int,int,int,boolean)>
<android.database.CursorToBulkCursorAdaptor: android.os.Bundle getExtras()>
<android.preference.Preference: void onClick()>
<android.bluetooth.BluetoothManager: android.bluetooth.BluetoothGattServer openGattServer(android.content.Context,android.bluetooth.BluetoothGattServerCallback)>
<android.app.MediaRouteButton: void onMeasure(int,int)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,android.animation.PropertyValuesHolder[])>
<android.media.AudioService: int setBluetoothA2dpDeviceConnectionState(android.bluetooth.BluetoothDevice,int,int)>
<android.print.PrintAttributes.Resolution: java.lang.String toString()>
<android.media.AudioService: void unregisterAudioFocusClient(java.lang.String)>
<android.telecom.RemoteConnection.Callback: void onVideoStateChanged(android.telecom.RemoteConnection,int)>
<android.graphics.drawable.AnimatedStateListDrawable: void addState(int[],android.graphics.drawable.Drawable,int)>
<android.os.Parcel: void writeByteArray(byte[])>
<android.provider.DocumentsContract: android.net.Uri createDocument(android.content.ContentResolver,android.net.Uri,java.lang.String,java.lang.String)>
<android.view.ViewManager: void updateViewLayout(android.view.View,android.view.ViewGroup.LayoutParams)>
<android.widget.CompoundButton: int getHorizontalOffsetForDrawables()>
<android.media.IAudioService: void reloadAudioSettings()>
<android.service.notification.ZenModeConfig: boolean isValidHour(int)>
<android.media.AudioFormat: int channelCountFromOutChannelMask(int)>
<android.app.usage.UsageEvents.Event: long getTimeStamp()>
<android.hardware.soundtrigger.SoundTrigger.SoundModelEvent: java.lang.String toString()>
<android.hardware.usb.UsbDevice: java.lang.String getDeviceName(int)>
<android.net.wifi.WifiConnectionStatistics: void writeToParcel(android.os.Parcel,int)>
<android.nfc.NfcAdapter: void setNdefPushMessageCallback(android.nfc.NfcAdapter.CreateNdefMessageCallback,android.app.Activity,android.app.Activity[])>
<android.app.ActivityOptions: int getResultCode()>
<android.text.Layout: int getTopPadding()>
<android.widget.Switch: boolean onTouchEvent(android.view.MotionEvent)>
<android.content.pm.PackageInfo: int describeContents()>
<android.net.ProxyInfo: int hashCode()>
<android.hardware.camera2.params.TonemapCurve: int hashCode()>
<android.graphics.drawable.AnimatedVectorDrawable: void reverse()>
<com.android.internal.widget.LockPatternUtilsCache: boolean havePassword(int)>
<android.security.IKeystoreService: int lock()>
<android.view.accessibility.IAccessibilityInteractionConnection: void findAccessibilityNodeInfoByAccessibilityId(long,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)>
<android.view.Display: java.lang.String toString()>
<android.renderscript.Long4: android.renderscript.Long4 div(android.renderscript.Long4,long)>
<android.opengl.GLES20: void glBlendColor(float,float,float,float)>
<android.hardware.camera2.params.StreamConfigurationMap: long getOutputStallDuration(int,android.util.Size)>
<com.android.internal.util.ArrayUtils: boolean equals(byte[],byte[],int)>
<android.widget.ArrayAdapter: void insert(java.lang.Object,int)>
<android.view.GraphicBuffer: void finalize()>
<android.graphics.drawable.BitmapDrawable: int getOpacity()>
<android.graphics.Point: void set(int,int)>
<android.graphics.drawable.InsetDrawable: void getHotspotBounds(android.graphics.Rect)>
<android.app.Dialog: boolean onMenuOpened(int,android.view.Menu)>
<android.app.FragmentManagerImpl: boolean dispatchContextItemSelected(android.view.MenuItem)>
<android.telecom.RemoteConnection.VideoProvider: void addListener(android.telecom.RemoteConnection.VideoProvider.Listener)>
<com.android.internal.view.menu.ActionMenu: int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])>
<android.text.style.RelativeSizeSpan: void updateMeasureState(android.text.TextPaint)>
<android.os.ParcelFileDescriptor: int getFd()>
<android.database.sqlite.SQLiteGlobal: int getJournalSizeLimit()>
<android.text.style.TypefaceSpan: void updateDrawState(android.text.TextPaint)>
<android.filterpacks.imageproc.StraightenFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder penaltyDialog()>
<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageIIOO(int,int,int,java.lang.Object,java.lang.Object)>
<android.view.Menu: boolean hasVisibleItems()>
<android.hardware.location.IGeofenceHardwareCallback: void onGeofencePause(int,int)>
<android.mtp.MtpStorage: boolean isRemovable()>
<android.app.Dialog: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode.Callback)>
<android.graphics.drawable.ShapeDrawable: void setTintList(android.content.res.ColorStateList)>
<android.app.ActivityManagerProxy: void removeContentProviderExternal(java.lang.String,android.os.IBinder)>
<android.view.ViewRootImpl: void addConfigCallback(android.content.ComponentCallbacks)>
<android.opengl.GLUtils: int getType(android.graphics.Bitmap)>
<android.widget.TextView: android.text.Editable getEditableText()>
<android.os.BatteryStats.Uid.Proc: long getSystemTime(int)>
<com.android.internal.view.InputConnectionWrapper: boolean finishComposingText()>
<android.widget.NumberPicker: int getMinValue()>
<android.view.View: boolean awakenScrollBars()>
<android.hardware.camera2.marshal.impl.MarshalQueryableSize: android.hardware.camera2.marshal.Marshaler createMarshaler(android.hardware.camera2.utils.TypeReference,int)>
<android.hardware.display.WifiDisplay: java.lang.String getDeviceAlias()>
<android.drm.ProcessedData: byte[] getData()>
<android.view.animation.LayoutAnimationController: void setInterpolator(android.content.Context,int)>
<com.android.internal.os.BatteryStatsHelper: void refreshStats(int,int)>
<android.app.ActivityOptions: android.content.Intent getResultData()>
<android.opengl.GLES31Ext: void glTexParameterIuivEXT(int,int,int[],int)>
<android.speech.tts.SynthesisRequest: int getSpeechRate()>
<android.widget.PopupWindow: float getElevation()>
<android.media.AudioRecord: void setRecordPositionUpdateListener(android.media.AudioRecord.OnRecordPositionUpdateListener,android.os.Handler)>
<com.android.internal.app.ProcessStats.ProcessState: java.lang.String toString()>
<android.telecom.InCallService.VideoCall: void sendSessionModifyResponse(android.telecom.VideoProfile)>
<android.location.GpsMeasurement: double getPseudorangeInMeters()>
<android.app.NativeActivity: void onStart()>
<com.android.ims.internal.IImsEcbm: void exitEmergencyCallbackMode()>
<android.view.InputDevice.MotionRange: float getMin()>
<android.widget.CalendarView.OnDateChangeListener: void onSelectedDayChange(android.widget.CalendarView,int,int,int)>
<android.hardware.camera2.CaptureRequest: void writeToParcel(android.os.Parcel,int)>
<android.os.BatteryStats: long computeBatteryUptime(long,int)>
<android.accessibilityservice.AccessibilityService: void onInterrupt()>
<android.content.res.Resources.Theme: void finalize()>
<com.google.android.gles_jni.GLImpl: void glGetPointerv(int,java.nio.Buffer[])>
<android.media.IMediaScannerService: void scanFile(java.lang.String,java.lang.String)>
<android.view.ViewGroup: void clearFocus()>
<android.widget.AutoCompleteTextView: void setValidator(android.widget.AutoCompleteTextView.Validator)>
<android.widget.BaseExpandableListAdapter: void onGroupCollapsed(int)>
<android.webkit.WebViewProvider: void stopLoading()>
<android.preference.EditTextPreference: void onRestoreInstanceState(android.os.Parcelable)>
<android.app.backup.SharedPreferencesBackupHelper: void restoreEntity(android.app.backup.BackupDataInputStream)>
<com.android.internal.view.menu.MenuPopupHelper: com.android.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)>
<android.text.AlteredCharSequence: void getChars(int,int,char[],int)>
<com.android.internal.view.RootViewSurfaceTaker: void setSurfaceFormat(int)>
<android.view.accessibility.AccessibilityNodeProvider: android.view.accessibility.AccessibilityNodeInfo findFocus(int)>
<android.app.Notification.WearableExtender: boolean getHintHideIcon()>
<android.net.SamplingDataTracker: void startSampling(android.net.SamplingDataTracker.SamplingSnapshot)>
<android.view.TextureView: void setTransform(android.graphics.Matrix)>
<android.view.inputmethod.InputMethodManager: boolean isActive(android.view.View)>
<android.opengl.GLES11: boolean glIsBuffer(int)>
<com.android.internal.util.AsyncChannel: android.os.Message sendMessageSynchronously(int,int,int)>
<com.android.internal.app.WindowDecorActionBar: void show()>
<android.media.AudioGain: int maxValue()>
<android.net.INetworkPolicyManager: int getUidPolicy(int)>
<android.print.PrintAttributes: android.print.PrintAttributes.Margins getMinMargins()>
<android.view.SurfaceControl: void setAlpha(float)>
<android.filterfw.core.FrameFormat: boolean mayBeCompatibleWith(android.filterfw.core.FrameFormat)>
<android.webkit.URLUtil: boolean isResourceUrl(java.lang.String)>
<android.util.FloatMath: float floor(float)>
<android.text.Layout: int getOffsetForHorizontal(int,float)>
<com.google.android.util.AbstractMessageParser.FlickrPhoto: java.lang.String getUserURL(java.lang.String)>
<android.media.audiofx.AudioEffect: int setParameter(byte[],byte[])>
<com.android.internal.statusbar.StatusBarIconList: void setIcon(int,com.android.internal.statusbar.StatusBarIcon)>
<android.net.IConnectivityManager: android.net.NetworkRequest listenForNetwork(android.net.NetworkCapabilities,android.os.Messenger,android.os.IBinder)>
<android.print.PrinterInfo: int hashCode()>
<android.app.backup.IBackupManager: java.lang.String getDataManagementLabel(java.lang.String)>
<android.hardware.camera2.impl.CallbackProxies.DeviceStateCallbackProxy: void onActive(android.hardware.camera2.CameraDevice)>
<android.view.MotionEvent: float getHistoricalX(int)>
<android.view.Display: int getMaximumSizeDimension()>
<android.text.method.PasswordTransformationMethod: void beforeTextChanged(java.lang.CharSequence,int,int,int)>
<android.animation.AnimatorListenerAdapter: void onAnimationEnd(android.animation.Animator)>
<android.filterfw.core.FrameFormat: int bytesPerSampleOf(int)>
<android.widget.RemoteViews: void setViewVisibility(int,int)>
<com.android.internal.os.BatteryStatsImpl.Uid.Pkg.Serv: void onTimeStopped(long,long,long)>
<android.app.Presentation: void onStart()>
<android.provider.SyncStateContract.Helpers: android.net.Uri insert(android.content.ContentProviderClient,android.net.Uri,android.accounts.Account,byte[])>
<android.view.animation.BounceInterpolator: long createNativeInterpolator()>
<android.opengl.GLES11Ext: void glTexGenxvOES(int,int,int[],int)>
<android.net.wifi.p2p.WifiP2pManager.ServiceResponseListener: void onServiceAvailable(int,byte[],android.net.wifi.p2p.WifiP2pDevice)>
<com.android.internal.util.FastPrintWriter: boolean checkError()>
<android.widget.ListView: void setDividerHeight(int)>
<android.net.nsd.NsdManager.RegistrationListener: void onServiceUnregistered(android.net.nsd.NsdServiceInfo)>
<android.graphics.Region: boolean quickContains(int,int,int,int)>
<android.media.audiofx.EnvironmentalReverb: android.media.audiofx.EnvironmentalReverb.Settings getProperties()>
<android.net.NetworkStatsHistory: void <init>(android.net.NetworkStatsHistory,long)>
<android.text.style.TtsSpan.VerbatimBuilder: void <init>(java.lang.String)>
<android.widget.AdapterView: void dispatchRestoreInstanceState(android.util.SparseArray)>
<android.widget.TextView: int getSelectionEnd()>
<android.widget.RadioGroup: void onFinishInflate()>
<com.android.internal.widget.AutoScrollHelper.AbsListViewAutoScroller: boolean canTargetScrollVertically(int)>
<android.media.MediaDrm.MediaDrmStateException: void <init>(int,java.lang.String)>
<android.widget.RatingBar: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.app.TabActivity: android.widget.TabHost getTabHost()>
<android.media.audiofx.Virtualizer: boolean canVirtualize(int,int)>
<android.renderscript.Element: android.renderscript.Element I8_2(android.renderscript.RenderScript)>
<android.graphics.drawable.PictureDrawable: android.graphics.Picture getPicture()>
<com.android.internal.view.BaseIWindow: void moved(int,int)>
<android.widget.ImageView: void setCropToPadding(boolean)>
<android.preference.RingtonePreference: boolean getShowDefault()>
<android.media.session.ParcelableVolumeInfo: int describeContents()>
<android.app.backup.IBackupManager: void agentDisconnected(java.lang.String)>
<android.app.Notification: java.lang.String getSortKey()>
<android.os.storage.IMountService: boolean isUsbMassStorageEnabled()>
<android.view.WindowManagerPolicy: int getSystemDecorLayerLw()>
<android.text.TextUtils: java.lang.String[] split(java.lang.String,java.lang.String)>
<android.webkit.URLUtil: boolean isValidUrl(java.lang.String)>
<android.renderscript.Int4: void sub(int)>
<com.android.internal.telephony.ISms: void setPremiumSmsPermissionForSubscriber(long,java.lang.String,int)>
<android.media.RingtoneManager: android.media.Ringtone getRingtone(int)>
<android.content.SharedPreferences: boolean contains(java.lang.String)>
<android.telecom.ParcelableCall: int describeContents()>
<android.media.tv.TvInputHardwareInfo.Builder: android.media.tv.TvInputHardwareInfo.Builder audioType(int)>
<android.service.dreams.DreamService: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>
<android.graphics.drawable.DrawableContainer: int getIntrinsicWidth()>
<android.media.MediaRouter.RouteInfo: java.lang.CharSequence getName(android.content.Context)>
<android.view.MotionEvent: int getAction()>
<android.view.View: java.lang.CharSequence getContentDescription()>
<android.telecom.Call: java.util.List getConferenceableCalls()>
<android.widget.HorizontalScrollView: boolean pageScroll(int)>
<android.media.MediaRouter.RouteGroup: android.media.MediaRouter.RouteInfo getRouteAt(int)>
<android.media.tv.TvView.TvInputCallback: void onConnectionFailed(java.lang.String)>
<android.hardware.display.IDisplayManagerCallback: void onDisplayEvent(int,int)>
<android.app.job.JobInfo.Builder: android.app.job.JobInfo build()>
<android.renderscript.Short2: short length()>
<android.telephony.PhoneStateListener: void onSignalStrengthChanged(int)>
<android.media.WebVttTrack: void onCueParsed(android.media.TextTrackCue)>
<android.widget.AbsoluteLayout.LayoutParams: java.lang.String debug(java.lang.String)>
<android.telephony.Rlog: boolean isLoggable(java.lang.String,int)>
<android.os.FactoryTest: boolean isLongPressOnPowerOffEnabled()>
<com.android.internal.os.BatteryStatsImpl: int getNumDischargeStepDurations()>
<android.view.RenderNode: boolean setTranslationY(float)>
<android.net.nsd.DnsSdTxtRecord: byte[] getRawData()>
<android.app.ActivityManagerProxy: boolean bindBackupAgent(android.content.pm.ApplicationInfo,int)>
<android.preference.PreferenceActivity: boolean onIsHidingHeaders()>
<android.service.voice.VoiceInteractionSession: android.view.LayoutInflater getLayoutInflater()>
<android.view.inputmethod.InputMethodManager: void onWindowFocus(android.view.View,android.view.View,int,boolean,int)>
<android.content.DialogInterface.OnShowListener: void onShow(android.content.DialogInterface)>
<android.app.ActivityManager.AppTask: void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)>
<com.google.android.util.AbstractMessageParser.FlickrPhoto: boolean isMedia()>
<android.net.http.Headers: void parseHeader(org.apache.http.util.CharArrayBuffer)>
<android.database.sqlite.SQLiteConnectionPool: java.lang.String toString()>
<android.graphics.drawable.RotateDrawable: boolean onLevelChange(int)>
<android.widget.AbsSeekBar: void setMax(int)>
<com.android.internal.telecom.IInCallAdapter: void playDtmfTone(java.lang.String,char)>
<android.renderscript.FieldPacker: void addU64(android.renderscript.Long3)>
<android.telephony.TelephonyManager: void disableLocationUpdates(long)>
<android.app.PendingIntent: void send(int)>
<android.content.ContentValues: java.util.Set valueSet()>
<android.net.Uri: java.lang.String getSchemeSpecificPart()>
<android.view.View: int getWindowAttachCount()>
<android.filterfw.geometry.Quad: void <init>(android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point)>
<android.view.MotionEvent: float getToolMinor()>
<android.widget.TextView: java.lang.String getFontFeatureSettings()>
<com.android.internal.view.menu.ActionMenu: void removeGroup(int)>
<android.view.animation.Animation: void reset()>
<android.gesture.Gesture: android.graphics.Path toPath(android.graphics.Path)>
<android.content.pm.PackageParser.PackageLite: void <init>(java.lang.String,android.content.pm.PackageParser.ApkLite,java.lang.String[],java.lang.String[])>
<com.android.internal.widget.ActionBarContainer: void setTransitioning(boolean)>
<android.telephony.ServiceState: java.lang.String toString()>
<android.media.session.MediaController: java.util.List getQueue()>
<android.app.ActionBar: void setLogo(int)>
<android.hardware.hdmi.HdmiRecordSources.AribData: void <init>(int,int,int)>
<android.accessibilityservice.IAccessibilityServiceConnection: android.accessibilityservice.AccessibilityServiceInfo getServiceInfo()>
<android.hardware.camera2.legacy.CameraDeviceUserShim: int waitUntilIdle()>
<android.filterfw.core.FieldPort: java.lang.Object getTarget()>
<android.security.KeyChain: java.security.cert.X509Certificate[] getCertificateChain(android.content.Context,java.lang.String)>
<android.media.RingtoneManager: android.net.Uri getValidRingtoneUri(android.content.Context)>
<android.webkit.GeolocationPermissions: void getOrigins(android.webkit.ValueCallback)>
<android.service.dreams.DreamService: android.os.IBinder onBind(android.content.Intent)>
<android.os.BatteryStats.Uid.Proc: long getTimeAtCpuSpeedStep(int,int)>
<android.graphics.pdf.PdfEditor: void <init>(android.os.ParcelFileDescriptor)>
<android.opengl.EGL14: android.opengl.EGLContext eglGetCurrentContext()>
<android.view.SurfaceControl.PhysicalDisplayInfo: void copyFrom(android.view.SurfaceControl.PhysicalDisplayInfo)>
<android.text.method.MetaKeyKeyListener: long clearMetaKeyState(long,int)>
<android.view.WindowManagerPolicy: void setUserRotationMode(int,int)>
<android.hardware.display.WifiDisplaySessionInfo: java.lang.String toString()>
<android.bluetooth.le.AdvertiseData: int hashCode()>
<android.os.BatteryStats.Uid: java.util.Map getSyncStats()>
<android.opengl.GLES31: void glProgramUniformMatrix4x3fv(int,int,int,boolean,java.nio.FloatBuffer)>
<android.opengl.GLSurfaceView: void onPause()>
<android.app.MediaRouteActionProvider: android.view.View onCreateActionView()>
<android.media.IMediaRouterService: android.media.MediaRouterClientState getState(android.media.IMediaRouterClient)>
<android.graphics.Region: android.graphics.Region obtain(android.graphics.Region)>
<android.os.Environment: java.io.File getExternalStoragePublicDirectory(java.lang.String)>
<com.android.internal.telecom.IConnectionServiceAdapter: void setConferenceableConnections(java.lang.String,java.util.List)>
<android.app.Instrumentation: void callActivityOnRestoreInstanceState(android.app.Activity,android.os.Bundle)>
<android.widget.ImageView: void setColorFilter(android.graphics.ColorFilter)>
<android.telecom.ParcelableCall: java.util.List getChildCallIds()>
<android.transition.Transition: android.transition.Transition addTarget(java.lang.Class)>
<android.media.audiofx.Virtualizer: void setStrength(short)>
<com.android.internal.policy.IKeyguardService: boolean isSecure()>
<android.speech.tts.ITextToSpeechCallback: void onStop(java.lang.String)>
<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageO(int,java.lang.Object)>
<android.widget.CursorAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
<android.media.SRTRenderer: android.media.SubtitleTrack createTrack(android.media.MediaFormat)>
<android.app.admin.DeviceAdminReceiver: void onEnabled(android.content.Context,android.content.Intent)>
<android.view.Window: void setEnterTransition(android.transition.Transition)>
<android.app.WallpaperManager: android.graphics.drawable.Drawable getFastDrawable()>
<android.filterfw.core.NativeFrame: java.lang.Object getObjectValue()>
<com.android.internal.telephony.IPhoneStateListener: void onPreciseDataConnectionStateChanged(android.telephony.PreciseDataConnectionState)>
<android.preference.TwoStatePreference: void onRestoreInstanceState(android.os.Parcelable)>
<android.app.admin.DevicePolicyManagerInternal: java.util.List getCrossProfileWidgetProviders(int)>
<android.view.View: float getElevation()>
<android.renderscript.Matrix3f: void set(int,int,float)>
<com.android.internal.app.WindowDecorActionBar.ActionModeImpl: android.view.MenuInflater getMenuInflater()>
<android.speech.tts.ITextToSpeechCallback: void onStart(java.lang.String)>
<android.view.RenderNode: boolean hasShadow()>
<android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
<android.widget.Toolbar: int getContentInsetStart()>
<android.view.WindowInsets: android.graphics.Rect getSystemWindowInsets()>
<com.android.internal.util.Preconditions: java.util.Collection checkCollectionElementsNotNull(java.util.Collection,java.lang.String)>
<android.hardware.Sensor: int getVersion()>
<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>
<android.hardware.Camera: boolean checkInitErrors(int)>
<android.app.IActivityController: int systemNotResponding(java.lang.String)>
<com.android.internal.http.multipart.Part: long length()>
<com.google.android.gles_jni.GLImpl: void glFramebufferTexture2DOES(int,int,int,int,int)>
<android.service.notification.StatusBarNotification: int getScore()>
<android.accounts.AccountManagerFuture: java.lang.Object getResult()>
<android.renderscript.Byte3: android.renderscript.Byte3 mul(android.renderscript.Byte3,byte)>
<android.media.tv.TvInputService.Session: void onSurfaceChanged(int,int,int)>
<android.view.accessibility.AccessibilityNodeInfo: boolean removeAction(android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction)>
<android.media.AudioManager: int generateAudioSessionId()>
<android.media.effect.SingleFilterEffect: void apply(int,int,int,int)>
<android.app.FragmentManagerImpl: int transitToStyleIndex(int,boolean)>
<android.app.LoadedApk: java.lang.String getLibDir()>
<android.view.View: boolean dispatchGenericFocusedEvent(android.view.MotionEvent)>
<com.android.internal.view.RootViewSurfaceTaker: void setSurfaceType(int)>
<android.view.KeyEvent: int getModifierMetaStateMask()>
<android.provider.Contacts.Presence: int getPresenceIconResourceId(int)>
<android.net.LinkQualityInfo: void setPacketErrorCount(long)>
<android.media.audiofx.Equalizer: void <init>(int,int)>
<android.content.ComponentName: void <init>(android.content.Context,java.lang.Class)>
<com.android.internal.view.menu.MenuItemImpl: java.lang.String toString()>
<android.view.KeyCharacterMap: boolean deviceHasKey(int)>
<android.widget.SearchView: void onActionViewExpanded()>
<android.widget.AbsListView: void setSmoothScrollbarEnabled(boolean)>
<android.media.AudioService: boolean isStreamAffectedByRingerMode(int)>
<android.view.View: float getScaleY()>
<android.location.IFusedGeofenceHardware: void resumeMonitoringGeofence(int,int)>
<android.provider.DocumentsContract: boolean isTreeUri(android.net.Uri)>
<android.hardware.usb.UsbDeviceConnection: int controlTransfer(int,int,int,int,byte[],int,int)>
<android.widget.FrameLayout: void setForegroundTintMode(android.graphics.PorterDuff.Mode)>
<android.bluetooth.le.ScanResult: int getRssi()>
<android.media.MediaCodecInfo.AudioCapabilities: boolean isSampleRateSupported(int)>
<android.opengl.GLES30: void glDeleteSamplers(int,java.nio.IntBuffer)>
<android.renderscript.Double4: android.renderscript.Double4 div(android.renderscript.Double4,double)>
<android.service.notification.NotificationListenerService: void onNotificationRemoved(android.service.notification.StatusBarNotification)>
<android.telecom.Conference.Listener: void onCapabilitiesChanged(android.telecom.Conference,int)>
<com.android.internal.view.ActionBarPolicy: boolean hasEmbeddedTabs()>
<android.webkit.WebViewProvider: boolean canZoomIn()>
<com.android.internal.view.menu.ActionMenuItem: android.view.View getActionView()>
<android.app.backup.IRestoreSession: int getAvailableRestoreSets(android.app.backup.IRestoreObserver)>
<com.android.internal.os.Zygote: int forkSystemServer(int,int,int[],int,int[][],long,long)>
<android.net.ConnectivityManager: boolean setProcessDefaultNetwork(android.net.Network)>
<android.telephony.DisconnectCause: java.lang.String toString(int)>
<android.gesture.GestureOverlayView: void addOnGesturingListener(android.gesture.GestureOverlayView.OnGesturingListener)>
<android.app.ActivityManagerProxy: java.util.List getServices(int,int)>
<com.android.internal.view.menu.MenuItemImpl: boolean isVisible()>
<android.view.IWindow: void resized(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,boolean,android.content.res.Configuration)>
<com.android.internal.telephony.ISub: java.util.List getAllSubInfoList()>
<android.widget.AutoCompleteTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.hardware.location.GeofenceHardwareMonitorCallback: void onMonitoringSystemChange(int,boolean,android.location.Location)>
<android.filterfw.core.SimpleFrame: boolean hasNativeAllocation()>
<com.android.internal.os.InstallerConnection: int dexopt(java.lang.String,int,boolean,java.lang.String,java.lang.String,boolean)>
<android.nfc.NfcAdapter.CreateBeamUrisCallback: android.net.Uri[] createBeamUris(android.nfc.NfcEvent)>
<android.inputmethodservice.Keyboard: int getVerticalGap()>
<android.transition.ArcMotion: void setMaximumAngle(float)>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setAllowedOverRoaming(boolean)>
<com.android.internal.view.menu.ActionMenuItemView: boolean needsDividerBefore()>
<android.telephony.DataConnectionRealTimeInfo: long getTime()>
<android.text.Layout: android.text.Layout.Directions getLineDirections(int)>
<android.app.Fragment: void setAllowReturnTransitionOverlap(boolean)>
<android.graphics.Matrix: void setScale(float,float)>
<android.app.ActivityManagerProxy: void takePersistableUriPermission(android.net.Uri,int,int)>
<android.renderscript.Float4: void addMultiple(android.renderscript.Float4,float)>
<android.telephony.CellSignalStrengthGsm: int getAsuLevel()>
<android.content.pm.PackageManager: void installPackageWithVerification(android.net.Uri,android.content.pm.IPackageInstallObserver,int,java.lang.String,android.net.Uri,android.content.pm.ManifestDigest,android.content.pm.ContainerEncryptionParams)>
<com.android.internal.os.BatteryStatsImpl.Uid.Proc: void addCpuTimeLocked(int,int)>
<android.location.GpsClock: void resetLeapSecond()>
<android.service.wallpaper.WallpaperService.Engine: int getDesiredMinimumWidth()>
<android.graphics.drawable.NinePatchDrawable: void setFilterBitmap(boolean)>
<com.android.internal.telephony.ISub: void setDefaultVoiceSubId(long)>
<android.media.AudioService.VolumeStreamState: void mute(android.os.IBinder,boolean)>
<android.opengl.GLES20: void glGetVertexAttribiv(int,int,java.nio.IntBuffer)>
<android.text.style.LeadingMarginSpan: int getLeadingMargin(boolean)>
<android.app.IActivityManager: void notifyActivityDrawn(android.os.IBinder)>
<android.app.ActivityManager.AppTask: void finishAndRemoveTask()>
<android.print.PrinterInfo: android.print.PrinterCapabilitiesInfo getCapabilities()>
<android.content.pm.PackageInstaller.SessionInfo: int getSessionId()>
<android.preference.DialogPreference: void setPositiveButtonText(int)>
<android.nfc.tech.MifareUltralight: byte[] readPages(int)>
<android.transition.Scene: void enter()>
<com.google.android.gles_jni.GLImpl: void glDeleteBuffers(int,int[],int)>
<android.content.ContentResolver: void appNotRespondingViaProvider(android.content.IContentProvider)>
<android.view.View: android.view.ViewOutlineProvider getOutlineProvider()>
<android.net.MobileDataStateTracker: boolean setRadio(boolean)>
<android.bluetooth.IBluetoothGattServerCallback: void onExecuteWrite(java.lang.String,int,boolean)>
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtTime(long)>
<android.widget.ResourceCursorAdapter: void <init>(android.content.Context,int,android.database.Cursor,boolean)>
<android.util.SparseLongArray: void removeAt(int)>
<android.app.ActivityManager: int getPackageScreenCompatMode(java.lang.String)>
<android.graphics.Camera: void save()>
<android.content.pm.ManifestDigest: boolean equals(java.lang.Object)>
<android.telephony.ServiceState: int getCssIndicator()>
<android.provider.MediaStore.Audio.Artists: android.net.Uri getContentUri(java.lang.String)>
<android.content.pm.PackageManager: boolean isSignedBy(java.lang.String,android.content.pm.KeySet)>
<android.hardware.camera2.CaptureResult.Key: android.hardware.camera2.impl.CameraMetadataNative.Key getNativeKey()>
<android.widget.ActionMenuView: void setOverflowReserved(boolean)>
<android.widget.ExpandableListView: int getPackedPositionGroup(long)>
<android.appwidget.AppWidgetManager: java.util.List getInstalledProviders()>
<android.app.usage.ConfigurationStats: long getFirstTimeStamp()>
<android.animation.LayoutTransition: boolean isTransitionTypeEnabled(int)>
<android.app.Notification.Builder: android.app.Notification.Builder setSmallIcon(int,int)>
<android.opengl.GLES11Ext: void glDeleteFramebuffersOES(int,int[],int)>
<android.text.Layout: android.text.Layout.Alignment getAlignment()>
<android.database.CursorWindow: boolean isFloat(int,int)>
<android.print.PrintJob: android.print.PrintJobInfo getInfo()>
<android.preference.Preference: boolean isSelectable()>
<android.widget.ListView: long[] getCheckItemIds()>
<android.app.ActivityOptions: android.app.ActivityOptions makeSceneTransitionAnimation(android.app.Activity,android.app.ExitTransitionCoordinator,java.util.ArrayList,int,android.content.Intent)>
<com.android.ims.internal.IImsUt: int queryCLIP()>
<android.graphics.drawable.Drawable: int getAlpha()>
<com.android.internal.view.menu.MenuDialogHelper: void <init>(com.android.internal.view.menu.MenuBuilder)>
<android.hardware.soundtrigger.SoundTrigger.Keyphrase: void <init>(int,int,java.lang.String,java.lang.String,int[])>
<android.widget.ExpandableListView: boolean expandGroup(int)>
<com.android.internal.content.PackageMonitor: int getChangingUserId()>
<android.content.IntentFilter: void addDataPath(android.os.PatternMatcher)>
<android.os.Build: void ensureFingerprintProperty()>
<android.view.InputDevice.MotionRange: int getAxis()>
<android.util.MathUtils: float degrees(float)>
<android.bluetooth.IBluetooth: java.lang.String getName()>
<android.graphics.Paint: int getTextWidths(java.lang.String,float[])>
<com.android.internal.util.ArrayUtils: boolean containsAll(java.lang.Object[],java.lang.Object[])>
<android.webkit.ConsoleMessage: int lineNumber()>
<android.database.DatabaseUtils: void cursorLongToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)>
<android.hardware.camera2.CaptureRequest.Key: void <init>(java.lang.String,android.hardware.camera2.utils.TypeReference)>
<android.os.BatteryStats.HistoryEventTracker: void removeEvents(int)>
<android.telecom.PhoneAccount: java.lang.CharSequence getShortDescription()>
<android.app.Instrumentation: void onCreate(android.os.Bundle)>
<android.location.Address: int getMaxAddressLineIndex()>
<android.bluetooth.le.ScanFilter: byte[] getManufacturerData()>
<android.widget.AbsListView: void invalidateViews()>
<android.app.ExpandableListActivity: android.widget.ExpandableListAdapter getExpandableListAdapter()>
<android.accounts.AccountManager: void setPassword(android.accounts.Account,java.lang.String)>
<android.media.MediaFocusControl.AudioFocusDeathHandler: android.os.IBinder getBinder()>
<com.android.internal.app.IVoiceInteractorCallback: void deliverCancel(com.android.internal.app.IVoiceInteractorRequest)>
<android.bluetooth.BluetoothAdapter.LeScanCallback: void onLeScan(android.bluetooth.BluetoothDevice,int,byte[])>
<android.nfc.NfcActivityManager: void setNdefPushContentUriCallback(android.app.Activity,android.nfc.NfcAdapter.CreateBeamUrisCallback)>
<android.widget.Toolbar: android.os.Parcelable onSaveInstanceState()>
<android.os.BatteryStats: int getLowDischargeAmountSinceCharge()>
<android.text.format.Time: long toMillis(boolean)>
<android.filterfw.core.ProgramVariable: android.filterfw.core.Program getProgram()>
<android.service.notification.INotificationListener: void onListenerHintsChanged(int)>
<android.telecom.Conference: int getCapabilities()>
<android.bluetooth.IBluetoothHeadsetClient: java.util.List getConnectedDevices()>
<android.database.CursorWindow: void onAllReferencesReleased()>
<com.google.android.gles_jni.GLImpl: void glGetBufferParameteriv(int,int,java.nio.IntBuffer)>
<android.database.ContentObserver: void onChange(boolean)>
<android.inputmethodservice.InputMethodService: int getMaxWidth()>
<android.bluetooth.BluetoothHeadsetClient: android.os.Bundle getCurrentAgFeatures(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothUuid: boolean isMns(android.os.ParcelUuid)>
<android.database.DatabaseUtils: void dumpCursor(android.database.Cursor,java.lang.StringBuilder)>
<android.opengl.GLES11: void glGetClipPlanex(int,java.nio.IntBuffer)>
<android.widget.Toolbar: android.widget.Toolbar.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.hardware.Camera.Parameters: float getFocalLength()>
<android.preference.Preference: void setSelectable(boolean)>
<android.widget.GridLayout: int getAlignmentMode()>
<android.app.DialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
<android.hardware.camera2.utils.TaskSingleDrainer: void <init>(android.os.Handler,android.hardware.camera2.utils.TaskDrainer.DrainListener)>
<android.view.View: void clearFocus()>
<android.widget.EditText: android.text.Editable getText()>
<android.text.BoringLayout: int getLineTop(int)>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getConstantMinimumWidth()>
<android.widget.AdapterView: int getFirstVisiblePosition()>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.CharSequence)>
<android.accounts.AccountManagerFuture: boolean cancel(boolean)>
<android.widget.RemoteViews: void setTextViewTextSize(int,int,float)>
<android.view.View: void setDuplicateParentStateEnabled(boolean)>
<android.speech.srec.MicrophoneInputStream: int read(byte[])>
<android.content.Context: boolean stopServiceAsUser(android.content.Intent,android.os.UserHandle)>
<android.nfc.INfcCardEmulation: boolean unsetPreferredService()>
<android.service.notification.NotificationListenerService.Ranking: java.lang.String getKey()>
<android.telecom.RemoteConnection.Callback: void onCallCapabilitiesChanged(android.telecom.RemoteConnection,int)>
<android.view.ViewConfiguration: int getHoverTapTimeout()>
<android.hardware.location.IGeofenceHardwareCallback: void onGeofenceAdd(int,int)>
<android.widget.ZoomButton: boolean dispatchUnhandledMove(android.view.View,int)>
<android.widget.TextView: void setMinEms(int)>
<android.app.backup.BackupTransport: android.os.IBinder getBinder()>
<com.android.ims.internal.IImsCallSessionListener: void callSessionConferenceExtendFailed(com.android.ims.internal.IImsCallSession,com.android.ims.ImsReasonInfo)>
<com.android.internal.database.SortCursor: java.lang.String[] getColumnNames()>
<android.content.ContentProvider: android.net.Uri maybeAddUserId(android.net.Uri,int)>
<android.hardware.camera2.utils.TypeReference: android.hardware.camera2.utils.TypeReference createSpecializedTypeReference(java.lang.reflect.Type)>
<com.android.internal.telecom.IInCallAdapter: void holdCall(java.lang.String)>
<android.widget.ImageView: boolean setFrame(int,int,int,int)>
<android.view.SurfaceControl: void finalize()>
<android.widget.GridView: void smoothScrollByOffset(int)>
<android.renderscript.Element: android.renderscript.Element RGBA_4444(android.renderscript.RenderScript)>
<com.android.internal.telecom.IConnectionService: void createConnection(android.telecom.PhoneAccountHandle,java.lang.String,android.telecom.ConnectionRequest,boolean,boolean)>
<com.android.internal.util.TypedProperties: java.lang.Object get(java.lang.Object)>
<android.view.ViewRootImpl: void windowFocusChanged(boolean,boolean)>
<android.view.textservice.SuggestionsInfo: void <init>(android.os.Parcel)>
<android.app.FragmentTransaction: android.app.FragmentTransaction setTransitionStyle(int)>
<android.app.WallpaperManager: int getDesiredMinimumHeight()>
<android.animation.LayoutTransition: void cancel(int)>
<android.os.BaseBundle: int getInt(java.lang.String,int)>
<android.widget.Editor: void endBatchEdit()>
<android.widget.TextView: void replaceText_internal(int,int,java.lang.CharSequence)>
<android.hardware.camera2.legacy.RequestThreadManager: void configure(java.util.Collection)>
<android.inputmethodservice.InputMethodService: void onConfigurationChanged(android.content.res.Configuration)>
<android.hardware.camera2.CameraCharacteristics.Key: boolean equals(java.lang.Object)>
<com.google.android.util.AbstractMessageParser.Photo: com.google.android.util.AbstractMessageParser.Photo matchURL(java.lang.String,java.lang.String)>
<com.android.internal.view.menu.ActionMenuItem: android.graphics.drawable.Drawable getIcon()>
<android.transition.ChangeClipBounds: void captureStartValues(android.transition.TransitionValues)>
<android.widget.ZoomControls: void <init>(android.content.Context,android.util.AttributeSet)>
<android.app.WallpaperManager: void setDisplayOffset(android.os.IBinder,int,int)>
<android.net.wifi.WifiActivityEnergyInfo: int getControllerRxTimeMillis()>
<android.content.res.AssetFileDescriptor.AutoCloseOutputStream: void write(byte[])>
<android.hardware.usb.UsbInterface: int getId()>
<android.net.wifi.p2p.WifiP2pManager.PersistentGroupInfoListener: void onPersistentGroupInfoAvailable(android.net.wifi.p2p.WifiP2pGroupList)>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo obtain(android.view.View)>
<android.telecom.Log: void d(java.lang.String,java.lang.String,java.lang.Object[])>
<android.widget.ListPopupWindow.ForwardingListener: boolean onForwardingStarted()>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,float[])>
<android.filterfw.core.NativeBuffer: boolean isReadOnly()>
<android.hardware.Camera.Parameters: android.hardware.Camera.Size getJpegThumbnailSize()>
<android.content.ContentProvider: android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle)>
<android.text.util.Rfc822Tokenizer: int findTokenEnd(java.lang.CharSequence,int)>
<android.telephony.gsm.GsmCellLocation: void setStateInvalid()>
<android.view.ViewGroup: void dispatchSaveInstanceState(android.util.SparseArray)>
<android.widget.TextView.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.content.ContextWrapper: android.content.res.Resources.Theme getTheme()>
<com.android.internal.view.menu.MenuBuilder: android.view.MenuItem add(int)>
<android.filterfw.core.GLFrame: void setData(java.nio.ByteBuffer,int,int)>
<android.view.View: void setOverScrollMode(int)>
<android.print.PrinterInfo: boolean equals(java.lang.Object)>
<android.app.admin.DevicePolicyManager: void setPasswordMinimumUpperCase(android.content.ComponentName,int)>
<android.animation.PointFEvaluator: void <init>(android.graphics.PointF)>
<android.view.inputmethod.InputMethodInfo: int getIsDefaultResourceId()>
<android.app.backup.BackupManager: int requestRestore(android.app.backup.RestoreObserver)>
<android.widget.ListView: android.view.View findViewWithTagTraversal(java.lang.Object)>
<android.media.tv.TvInputService.Session: void onSetMain(boolean)>
<android.telecom.Connection.Listener: void onAddressChanged(android.telecom.Connection,android.net.Uri,int)>
<android.hardware.display.DisplayManager: android.hardware.display.VirtualDisplay createVirtualDisplay(java.lang.String,int,int,int,android.view.Surface,int)>
<android.app.SearchDialog: void onCreate(android.os.Bundle)>
<android.print.PrintManager: java.util.List getPrintJobs()>
<android.animation.IntArrayEvaluator: int[] evaluate(float,int[],int[])>
<android.preference.SeekBarVolumizer: boolean handleMessage(android.os.Message)>
<android.opengl.GLES11Ext: void glClipPlanefOES(int,java.nio.FloatBuffer)>
<android.hardware.display.DisplayManagerGlobal: void startWifiDisplayScan()>
<android.opengl.GLES11: void glGenBuffers(int,java.nio.IntBuffer)>
<android.hardware.hdmi.HdmiDeviceInfo: void <init>(int,int,int,int,int,java.lang.String,int)>
<android.opengl.GLES30: void glGetIntegeri_v(int,int,java.nio.IntBuffer)>
<android.telecom.ParcelableConnection: void <init>(android.telecom.PhoneAccountHandle,int,int,android.net.Uri,int,java.lang.String,int,com.android.internal.telecom.IVideoProvider,int,boolean,boolean,android.telecom.StatusHints,android.telecom.DisconnectCause,java.util.List)>
<android.location.LocationManager: void clearTestProviderStatus(java.lang.String)>
<android.content.ContextWrapper: java.lang.String[] databaseList()>
<android.widget.AdapterViewFlipper: void onDetachedFromWindow()>
<android.location.Location: void <init>(java.lang.String)>
<android.media.SubtitleTrack: void setRunDiscardTimeMs(long,long)>
<android.util.JsonReader: boolean nextBoolean()>
<android.app.ActionBar.Tab: void select()>
<android.view.MotionEvent: void setLocation(float,float)>
<android.view.ScaleGestureDetector.OnScaleGestureListener: void onScaleEnd(android.view.ScaleGestureDetector)>
<android.media.TimedText.Font: void <init>(int,java.lang.String)>
<android.hardware.Camera.Parameters: void setAutoExposureLock(boolean)>
<android.media.IAudioService: int getMasterVolume()>
<android.renderscript.ScriptIntrinsicConvolve3x3: void forEach(android.renderscript.Allocation)>
<android.widget.ImageButton: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.android.internal.util.MemInfoReader: long getTotalSizeKb()>
<android.app.UiAutomationConnection: android.graphics.Bitmap takeScreenshot(int,int)>
<android.os.Message: android.os.Bundle peekData()>
<android.filterfw.core.KeyValueMap: java.lang.String getString(java.lang.String)>
<android.provider.Contacts.ContactMethods: void addPostalLocation(android.content.Context,long,double,double)>
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setVisible(boolean)>
<android.renderscript.FieldPacker: void addF64(android.renderscript.Double3)>
<android.animation.Animator: void addListener(android.animation.Animator.AnimatorListener)>
<com.android.internal.inputmethod.InputMethodUtils: java.lang.String getLanguageFromLocaleString(java.lang.String)>
<android.widget.ProgressBar: void setSecondaryProgress(int)>
<android.filterfw.core.CachedFrameManager: android.filterfw.core.Frame retainFrame(android.filterfw.core.Frame)>
<android.text.BidiFormatter: java.lang.String unicodeWrap(java.lang.String)>
<android.app.IUiAutomationConnection: android.view.WindowAnimationFrameStats getWindowAnimationFrameStats()>
<com.android.internal.util.TypedProperties: float getFloat(java.lang.String)>
<android.app.Activity: void closeContextMenu()>
<android.net.NetworkQuotaInfo: long getHardLimitBytes()>
<android.media.ClosedCaptionRenderer: void <init>(android.content.Context)>
<com.android.internal.view.IInputContext: void performEditorAction(int)>
<android.content.pm.PackageParser.Package: void setPackageName(java.lang.String)>
<android.os.BatteryStats: int getLowPowerModeEnabledCount(int)>
<android.renderscript.Int3: void setValues(int,int,int)>
<android.telephony.TelephonyManager: int checkCarrierPrivilegesForPackage(java.lang.String)>
<android.app.VoiceInteractor.AbortVoiceRequest: void onAbortResult(android.os.Bundle)>
<android.net.wifi.WifiManager: android.net.wifi.WifiConnectionStatistics getConnectionStatistics()>
<android.view.RenderNode: float getScaleX()>
<com.android.internal.widget.LockPatternUtils: int getRequestedMinimumPasswordLength()>
<android.net.http.Headers: void setProxyAuthenticate(java.lang.String)>
<com.android.internal.telecom.IConnectionServiceAdapter: void setDialing(java.lang.String)>
<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>
<android.view.ViewConfiguration: int getScaledOverflingDistance()>
<com.android.internal.telecom.ITelecomService: java.util.List getAllPhoneAccountHandles()>
<android.view.InputDevice: int[] getDeviceIds()>
<android.util.MonthDisplayHelper: int getDayAt(int,int)>
<android.content.UriMatcher: int match(android.net.Uri)>
<com.android.internal.widget.LockPatternView: void setTactileFeedbackEnabled(boolean)>
<android.hardware.input.IInputDevicesChangedListener: void onInputDevicesChanged(int[])>
<com.android.internal.util.MemInfoReader: long getSlabSizeKb()>
<android.filterpacks.base.FrameFetch: void setupPorts()>
<com.android.internal.widget.ActionBarContextView: void setCustomView(android.view.View)>
<android.view.inputmethod.InputConnection: boolean deleteSurroundingText(int,int)>
<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>
<android.speech.tts.UtteranceProgressListener: void onError(java.lang.String)>
<android.renderscript.Int2: void <init>(android.renderscript.Int2)>
<com.android.internal.widget.SwipeDismissLayout: boolean canScroll(android.view.View,boolean,float,float,float)>
<android.location.LocationRequest: android.location.LocationRequest setQuality(int)>
<com.android.internal.app.ProcessStats.ServiceState: void setStarted(boolean,int,long)>
<android.widget.ScrollBarDrawable: void onBoundsChange(android.graphics.Rect)>
<android.graphics.LargeBitmap: void recycle()>
<android.widget.CursorTreeAdapter: int getChildrenCount(int)>
<android.renderscript.AllocationAdapter: android.renderscript.AllocationAdapter create1D(android.renderscript.RenderScript,android.renderscript.Allocation)>
<android.net.http.AndroidHttpClientConnection: void bind(java.net.Socket,org.apache.http.params.HttpParams)>
<android.location.GpsMeasurement: short getState()>
<android.graphics.Outline: void setAlpha(float)>
<android.opengl.GLES10: void glMultMatrixx(java.nio.IntBuffer)>
<com.android.internal.util.AsyncChannel: void connected(android.content.Context,android.os.Handler,android.os.Messenger)>
<android.app.SearchableInfo: int getImeOptions()>
<android.content.pm.Signature: java.lang.String toCharsString()>
<android.net.LinkProperties: boolean addLinkAddress(android.net.LinkAddress)>
<com.google.android.gles_jni.GLImpl: void glGetFramebufferAttachmentParameterivOES(int,int,int,java.nio.IntBuffer)>
<android.text.StaticLayout: int getEllipsizedWidth()>
<android.animation.ObjectAnimator: void setAutoCancel(boolean)>
<android.hardware.hdmi.HdmiRecordSources.DvbData: int toByteArray(byte[],int)>
<android.graphics.Paint: float getTextRunAdvances(java.lang.CharSequence,int,int,int,int,boolean,float[],int)>
<android.net.LinkProperties: java.util.List getAllLinkAddresses()>
<android.media.browse.MediaBrowser.ConnectionCallback: void onConnectionFailed()>
<android.media.IRemoteControlClient: void informationRequestForDisplay(android.media.IRemoteControlDisplay,int,int)>
<android.webkit.WebViewProvider: void evaluateJavaScript(java.lang.String,android.webkit.ValueCallback)>
<android.app.Application: void onTerminate()>
<com.android.internal.view.menu.IconMenuItemView: void setIcon(android.graphics.drawable.Drawable)>
<android.opengl.GLES30: void glGetQueryiv(int,int,java.nio.IntBuffer)>
<android.opengl.Matrix: void rotateM(float[],int,float[],int,float,float,float,float)>
<android.media.JetPlayer.OnJetEventListener: void onJetPauseUpdate(android.media.JetPlayer,int)>
<android.location.Address: void setPhone(java.lang.String)>
<android.telephony.SubscriptionManager: long getDefaultDataSubId()>
<android.os.Bundle: void putCharArray(java.lang.String,char[])>
<android.media.MediaCodecInfo.VideoCapabilities: android.util.Range getSupportedHeightsFor(int)>
<com.android.internal.view.menu.BaseMenuPresenter: boolean collapseItemActionView(com.android.internal.view.menu.MenuBuilder,com.android.internal.view.menu.MenuItemImpl)>
<android.database.sqlite.SQLiteDatabase: void setPageSize(long)>
<android.location.Location: void setTime(long)>
<com.android.ims.ImsReasonInfo: java.lang.String toString()>
<android.graphics.Paint: float measureText(java.lang.String,int,int)>
<android.view.Window.Callback: android.view.View onCreatePanelView(int)>
<android.service.wallpaper.WallpaperService.Engine: void onDesiredSizeChanged(int,int)>
<android.bluetooth.IBluetoothGattServerCallback: void onCharacteristicReadRequest(java.lang.String,int,int,boolean,int,int,android.os.ParcelUuid,int,android.os.ParcelUuid)>
<android.app.admin.DevicePolicyManager: android.os.UserHandle createUser(android.content.ComponentName,java.lang.String)>
<android.graphics.pdf.PdfDocument: void finalize()>
<android.media.AudioTrack: void pause()>
<android.content.ContentValues: java.lang.String getAsString(java.lang.String)>
<android.os.Environment: java.io.File getUserConfigDirectory(int)>
<com.android.internal.content.PackageHelper: boolean finalizeSdDir(java.lang.String)>
<android.renderscript.Program.BaseProgramBuilder: int getCurrentTextureIndex()>
<android.view.RenderNodeAnimator: void <init>(int,float)>
<android.net.wifi.RssiPacketCountInfo: int describeContents()>
<android.webkit.WebViewDatabase: void clearHttpAuthUsernamePassword()>
<android.view.animation.AccelerateDecelerateInterpolator: float getInterpolation(float)>
<android.app.IActivityManager: void reportAssistContextExtras(android.os.IBinder,android.os.Bundle)>
<android.database.BulkCursorToCursorAdaptor: android.os.Bundle respond(android.os.Bundle)>
<android.net.SSLCertificateSocketFactory: void <init>(int)>
<android.view.inputmethod.CursorAnchorInfo: void <init>(android.os.Parcel)>
<android.renderscript.ScriptC: void <init>(long,android.renderscript.RenderScript)>
<android.graphics.Canvas: void <init>(long)>
<android.widget.Editor.UndoInputFilter: void <init>(android.widget.Editor)>
<android.filterpacks.ui.SurfaceTargetFilter: void close(android.filterfw.core.FilterContext)>
<android.nfc.NdefRecord: android.nfc.NdefRecord createApplicationRecord(java.lang.String)>
<android.widget.AutoCompleteTextView: java.lang.CharSequence getCompletionHint()>
<android.app.Activity: void setTaskDescription(android.app.ActivityManager.TaskDescription)>
<com.android.internal.location.GpsNetInitiatedHandler: void updateLocationMode()>
<android.content.CursorEntityIterator: android.content.Entity getEntityAndIncrementCursor(android.database.Cursor)>
<android.accounts.IAccountAuthenticator: void editProperties(android.accounts.IAccountAuthenticatorResponse,java.lang.String)>
<com.android.internal.util.ArrayUtils: char[] newUnpaddedCharArray(int)>
<android.view.View: void setIsRootNamespace(boolean)>
<android.location.Country: boolean equals(java.lang.Object)>
<android.app.admin.DevicePolicyManager: boolean isAdminActiveAsUser(android.content.ComponentName,int)>
<android.webkit.JsResult.ResultReceiver: void onJsResultComplete(android.webkit.JsResult)>
<android.database.MergeCursor: void deactivate()>
<android.bluetooth.BluetoothGattService: java.util.List getIncludedServices()>
<android.hardware.location.GeofenceHardwareRequest: double getRadius()>
<com.android.internal.telecom.ITelecomService: android.telecom.PhoneAccountHandle getDefaultOutgoingPhoneAccount(java.lang.String)>
<android.widget.RemoteViewsListAdapter: java.lang.Object getItem(int)>
<android.os.DropBoxManager.Entry: void <init>(java.lang.String,long,java.io.File,int)>
<android.widget.AutoCompleteTextView: void setDropDownBackgroundDrawable(android.graphics.drawable.Drawable)>
<android.provider.MediaStore.Files: android.net.Uri getMtpObjectsUri(java.lang.String)>
<com.google.android.gles_jni.GLImpl: java.lang.String _glGetString(int)>
<android.database.sqlite.SQLiteQueryBuilder: void setStrict(boolean)>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder penaltyLog()>
<android.print.PrintJobInfo: java.lang.String stateToString(int)>
<com.android.internal.telephony.ISub: int setDisplayName(java.lang.String,long)>
<android.bluetooth.BluetoothGattService: int getType()>
<android.content.ContentQueryMap: java.util.Map getRows()>
<android.preference.MultiSelectListPreference: java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int)>
<android.text.SpannableStringBuilder: java.lang.Object[] getSpans(int,int,java.lang.Class)>
<android.hardware.camera2.legacy.LegacyFaceDetectMapper: void <init>(android.hardware.Camera,android.hardware.camera2.CameraCharacteristics)>
<android.view.textservice.SpellCheckerSession: void <init>(android.view.textservice.SpellCheckerInfo,com.android.internal.textservice.ITextServicesManager,android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener,android.view.textservice.SpellCheckerSubtype)>
<android.graphics.Paint: boolean hasShadowLayer()>
<android.media.MediaRouter.Callback: void onRouteAdded(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>
<android.os.BatteryStats.Uid: void noteUserActivityLocked(int)>
<android.accessibilityservice.IAccessibilityServiceConnection: android.view.accessibility.AccessibilityWindowInfo getWindow(int)>
<android.service.wallpaper.WallpaperSettingsActivity: void onCreate(android.os.Bundle)>
<android.widget.RemoteViews: void setTextColor(int,int)>
<android.view.MotionEvent: long getDownTime()>
<android.nfc.NdefMessage: void <init>(android.nfc.NdefRecord[])>
<android.filterfw.core.FilterPort: boolean isBlocking()>
<android.media.session.PlaybackState.CustomAction: java.lang.String toString()>
<com.android.internal.os.BatteryStatsHelper: long getBatteryTimeRemaining()>
<com.android.internal.widget.ActionBarOverlayLayout: void setMenuPrepared()>
<android.os.storage.IMountService: void shutdown(android.os.storage.IMountShutdownObserver)>
<android.net.wifi.IWifiScanner: android.os.Messenger getMessenger()>
<android.widget.CompoundButton: void setButtonDrawable(android.graphics.drawable.Drawable)>
<android.drm.DrmSupportInfo: void addMimeType(java.lang.String)>
<android.view.inputmethod.CorrectionInfo: void <init>(int,java.lang.CharSequence,java.lang.CharSequence)>
<android.filterpacks.videosrc.SurfaceTextureSource: void close(android.filterfw.core.FilterContext)>
<android.webkit.WebChromeClient: android.graphics.Bitmap getDefaultVideoPoster()>
<android.bluetooth.le.ScanSettings: void writeToParcel(android.os.Parcel,int)>
<com.google.android.gles_jni.EGLImpl: int getInitCount(javax.microedition.khronos.egl.EGLDisplay)>
<android.media.MediaRouter: int getRouteCount()>
<android.net.wifi.p2p.WifiP2pWfdInfo: void setCoupledSinkSupportAtSource(boolean)>
<android.location.GpsMeasurement: void resetPseudorangeInMeters()>
<android.location.Location: void removeBearing()>
<android.util.TimingLogger: void reset()>
<android.media.AudioPort: boolean equals(java.lang.Object)>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLowerCase(android.content.ComponentName)>
<android.view.KeyEvent: int keyCodeFromString(java.lang.String)>
<android.os.PerformanceCollector.PerformanceResultsWriter: void writeMeasurement(java.lang.String,float)>
<android.hardware.camera2.CameraCaptureSession: int setRepeatingRequest(android.hardware.camera2.CaptureRequest,android.hardware.camera2.CameraCaptureSession.CaptureCallback,android.os.Handler)>
<com.android.internal.telephony.ISms: boolean enableCellBroadcastRange(int,int)>
<com.android.internal.os.BatterySipper: double[] getValues()>
<android.printservice.PrinterDiscoverySession: boolean isDestroyed()>
<android.app.MediaRouteActionProvider: void setRouteTypes(int)>
<android.view.textservice.SpellCheckerSubtype: int hashCode()>
<android.os.Message: android.os.Message obtain()>
<android.view.RenderNode: void destroyDisplayListData()>
<android.hardware.Camera.Parameters: java.util.List getSupportedPreviewSizes()>
<android.view.ViewGroup: android.view.View getChildAt(int)>
<android.webkit.WebView: java.lang.String getUrl()>
<android.media.MediaRecorder: void setOrientationHint(int)>
<android.opengl.GLES31Ext: void glTexParameterIivEXT(int,int,int[],int)>
<android.widget.AbsListView: void setScrollBarStyle(int)>
<android.app.IActivityManager: boolean killProcessesBelowForeground(java.lang.String)>
<android.os.IBinder: void dumpAsync(java.io.FileDescriptor,java.lang.String[])>
<android.graphics.PathDashPathEffect: void <init>(android.graphics.Path,float,float,android.graphics.PathDashPathEffect.Style)>
<android.media.MediaPlayer: void setOnInfoListener(android.media.MediaPlayer.OnInfoListener)>
<com.android.internal.widget.ScrollingTabContainerView: void onDetachedFromWindow()>
<android.app.ActivityThread: java.lang.String getProfileFilePath()>
<android.transition.TransitionSet: android.transition.Transition excludeTarget(int,boolean)>
<android.net.nsd.NsdServiceInfo: java.lang.String getServiceType()>
<android.content.ContentResolver: android.content.SyncAdapterType[] getSyncAdapterTypesAsUser(int)>
<android.media.RemoteControlClient: void unregisterWithSession(android.media.session.MediaSessionLegacyHelper)>
<android.hardware.camera2.params.BlackLevelPattern: int getOffsetForIndex(int,int)>
<android.media.Image: android.media.Image.Plane[] getPlanes()>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator withLayer()>
<android.preference.TwoStatePreference: void onSetInitialValue(boolean,java.lang.Object)>
<android.view.ViewAnimationUtils: android.animation.Animator createCircularReveal(android.view.View,int,int,float,float)>
<android.hardware.location.ActivityChangedEvent: java.lang.Iterable getActivityRecognitionEvents()>
<com.android.internal.util.AsyncChannel: android.os.Message sendMessageSynchronously(int,int)>
<android.widget.HorizontalScrollView: boolean onGenericMotionEvent(android.view.MotionEvent)>
<android.app.ActionBar: void setElevation(float)>
<android.renderscript.ScriptIntrinsicLUT: void setGreen(int,int)>
<android.location.GpsMeasurement: double getPseudorangeUncertaintyInMeters()>
<android.filterpacks.imageproc.ResizeFilter: void setupPorts()>
<android.filterpacks.base.CallbackFilter: void setupPorts()>
<android.filterfw.core.Program: void process(android.filterfw.core.Frame[],android.filterfw.core.Frame)>
<android.app.ActivityManager.ProcessErrorStateInfo: void writeToParcel(android.os.Parcel,int)>
<android.filterfw.core.NativeBuffer: int getElementSize()>
<android.webkit.WebView: java.lang.String getOriginalUrl()>
<android.view.KeyEvent: int getDeadChar(int,int)>
<android.hardware.location.GeofenceHardwareImpl: boolean registerForMonitorStateChangeCallback(int,android.hardware.location.IGeofenceHardwareMonitorCallback)>
<android.media.MediaPlayer: void setOnBufferingUpdateListener(android.media.MediaPlayer.OnBufferingUpdateListener)>
<android.content.pm.FeatureGroupInfo: void writeToParcel(android.os.Parcel,int)>
<android.widget.AbsListView: boolean isSmoothScrollbarEnabled()>
<android.view.accessibility.AccessibilityNodeInfo: boolean isChecked()>
<android.hardware.camera2.CaptureResult: void <init>(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.CaptureRequest,android.hardware.camera2.impl.CaptureResultExtras)>
<android.app.admin.IDevicePolicyManager: void setRestrictionsProvider(android.content.ComponentName,android.content.ComponentName)>
<com.android.internal.util.FileRotator.Reader: void read(java.io.InputStream)>
<android.widget.TwoLineListItem: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.telephony.NeighboringCellInfo: void setRssi(int)>
<android.view.InputFilter: void install(android.view.IInputFilterHost)>
<android.media.Metadata: byte[] getByteArray(int)>
<android.app.admin.DeviceAdminReceiver: void onDisabled(android.content.Context,android.content.Intent)>
<android.view.ActionMode: void setSubtitle(int)>
<android.database.Cursor: void registerDataSetObserver(android.database.DataSetObserver)>
<android.os.Process: void sendSignal(int,int)>
<android.webkit.JsPromptResult: void <init>(android.webkit.JsResult.ResultReceiver)>
<android.os.storage.StorageVolume: long getMaxFileSize()>
<android.widget.ExpandableListView: void setChildIndicator(android.graphics.drawable.Drawable)>
<android.widget.NumberPicker: void onDetachedFromWindow()>
<android.webkit.UrlInterceptHandler: android.webkit.CacheManager.CacheResult service(java.lang.String,java.util.Map)>
<android.filterpacks.text.StringSource: void setupPorts()>
<android.graphics.Color: int argb(int,int,int,int)>
<android.app.Instrumentation: android.os.Bundle getBinderCounts()>
<android.opengl.GLES20: void glRenderbufferStorage(int,int,int,int)>
<android.media.AudioSystem: int setParameters(java.lang.String)>
<android.filterfw.core.Filter: void setInputValue(java.lang.String,java.lang.Object)>
<android.app.IActivityManager: boolean isUserRunning(int,boolean)>
<android.media.MediaMetadata: int describeContents()>
<android.os.Bundle: short getShort(java.lang.String,short)>
<android.hardware.Camera: void stopPreview()>
<android.speech.RecognitionListener: void onError(int)>
<android.util.PrintStreamPrinter: void println(java.lang.String)>
<android.os.Bundle: byte[] getByteArray(java.lang.String)>
<android.view.View: void setBackground(android.graphics.drawable.Drawable)>
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String flagToString(int)>
<android.graphics.Color: int HSBtoColor(float,float,float)>
<android.net.wifi.WifiManager: boolean isDeviceToApRttSupported()>
<android.content.SyncResult: int describeContents()>
<android.util.EventLog.Event: java.lang.Object getData()>
<android.util.DisplayMetrics: boolean equals(android.util.DisplayMetrics)>
<android.view.textservice.TextInfo: java.lang.CharSequence getCharSequence()>
<com.android.internal.content.PackageMonitor: boolean onHandleForceStop(android.content.Intent,java.lang.String[],int,boolean)>
<android.location.ICountryDetector: void removeCountryListener(android.location.ICountryListener)>
<android.content.ContentResolver: java.util.List getPersistedUriPermissions()>
<android.app.Activity: void onContextMenuClosed(android.view.Menu)>
<android.view.GestureDetector.OnGestureListener: boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float)>
<android.view.textservice.SuggestionsInfo: void writeToParcel(android.os.Parcel,int)>
<android.app.FragmentTransaction: android.app.FragmentTransaction setBreadCrumbShortTitle(int)>
<android.filterpacks.base.FrameBranch: void <init>(java.lang.String)>
<android.bluetooth.le.ResultStorageDescriptor: void <init>(int,int,int)>
<android.service.persistentdata.IPersistentDataBlockService: boolean getOemUnlockEnabled()>
<android.media.TtmlRenderingWidget: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.widget.RemoteViewsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.app.Instrumentation.ActivityMonitor: android.app.Activity waitForActivity()>
<android.widget.CalendarView.CalendarViewDelegate: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.transition.TransitionSet: android.transition.TransitionSet setDuration(long)>
<android.hardware.display.DisplayManager: android.hardware.display.VirtualDisplay createVirtualDisplay(java.lang.String,int,int,int,android.view.Surface,int,android.hardware.display.VirtualDisplay.Callback,android.os.Handler)>
<android.view.View: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.android.internal.telephony.IPhoneStateListener: void onMessageWaitingIndicatorChanged(boolean)>
<android.graphics.Canvas: void drawRect(android.graphics.Rect,android.graphics.Paint)>
<android.database.AbstractCursor: android.net.Uri getNotificationUri()>
<android.hardware.hdmi.IHdmiControlService: void queryDisplayStatus(android.hardware.hdmi.IHdmiControlCallback)>
<com.android.internal.os.AtomicFile: byte[] readFully()>
<android.hardware.display.DisplayManagerInternal: void setDisplayInfoOverrideFromWindowManager(int,android.view.DisplayInfo)>
<android.telephony.SignalStrength: void <init>(int,int,int,int,int,int,int,int,int,int,int,int,boolean)>
<android.view.animation.Transformation: float getAlpha()>
<android.os.PatternMatcher: void <init>(android.os.Parcel)>
<android.app.Instrumentation: android.app.Activity waitForMonitor(android.app.Instrumentation.ActivityMonitor)>
<android.renderscript.Short3: void sub(short)>
<android.app.SearchManager: void onDismiss(android.content.DialogInterface)>
<android.os.Environment: java.io.File[] buildExternalStorageAppFilesDirs(java.lang.String)>
<android.speech.tts.UtteranceProgressListener: void onStart(java.lang.String)>
<android.net.TrafficStats: long getTotalRxBytes()>
<android.view.View: boolean resolveTextAlignment()>
<android.view.DisplayInfo: void readFromParcel(android.os.Parcel)>
<android.widget.RatingBar: void setIsIndicator(boolean)>
<android.content.ComponentName: int hashCode()>
<android.app.LoadedApk: android.app.Application makeApplication(boolean,android.app.Instrumentation)>
<android.net.NetworkStats: java.lang.String tagToString(int)>
<android.view.textservice.SpellCheckerInfo: int describeContents()>
<android.net.http.DelegatingSSLSession: java.lang.Object getValue(java.lang.String)>
<android.media.session.ISessionCallback: void onRewind()>
<android.opengl.ETC1Util: void loadTexture(int,int,int,int,int,java.io.InputStream)>
<android.widget.TimePicker: boolean isEnabled()>
<com.android.internal.widget.DecorContentParent: void initFeature(int)>
<com.android.internal.backup.IObbBackupService: void restoreObbFile(java.lang.String,android.os.ParcelFileDescriptor,long,int,java.lang.String,long,long,int,android.app.backup.IBackupManager)>
<android.service.wallpaper.IWallpaperEngine: void setDesiredSize(int,int)>
<android.media.audiofx.AudioEffect: int setParameter(int,int)>
<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.CheckBox: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.app.Dialog: boolean onKeyShortcut(int,android.view.KeyEvent)>
<android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,float,float,float,float,int,float,float,int,int)>
<android.os.BatteryStats: long computeRealtime(long,int)>
<android.nfc.Tag: int getServiceHandle()>
<android.net.IConnectivityManager: void registerNetworkFactory(android.os.Messenger,java.lang.String)>
<com.android.internal.widget.ActionBarView: void setTitle(java.lang.CharSequence)>
<android.content.pm.ManifestDigest: void writeToParcel(android.os.Parcel,int)>
<android.os.AsyncResult: void <init>(java.lang.Object,java.lang.Object,java.lang.Throwable)>
<android.hardware.hdmi.HdmiRecordSources: android.hardware.hdmi.HdmiRecordSources.DigitalServiceSource ofDigitalChannelId(int,android.hardware.hdmi.HdmiRecordSources.DigitalChannelData)>
<android.view.View: void onWindowFocusChanged(boolean)>
<com.android.internal.widget.WeightedLinearLayout: void <init>(android.content.Context)>
<android.os.storage.IMountService: int mountSecureContainer(java.lang.String,java.lang.String,int,boolean)>
<android.webkit.WebViewClient: void onScaleChanged(android.webkit.WebView,float,float)>
<android.view.ViewGroup: void offsetRectIntoDescendantCoords(android.view.View,android.graphics.Rect)>
<android.widget.StackView: void dispatchDraw(android.graphics.Canvas)>
<com.android.internal.widget.ResolverDrawerLayout: void onStopNestedScroll(android.view.View)>
<android.widget.ZoomButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.view.ViewGroup: android.animation.LayoutTransition getLayoutTransition()>
<com.android.internal.app.WindowDecorActionBar: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<android.content.Entity: android.content.ContentValues getEntityValues()>
<android.content.pm.ApplicationInfo: void dump(android.util.Printer,java.lang.String)>
<android.view.InputEvent: long getEventTimeNano()>
<com.android.internal.util.Preconditions: java.lang.Object[] checkArrayElementsNotNull(java.lang.Object[],java.lang.String)>
<android.service.dreams.DreamService: void setContentView(android.view.View)>
<android.renderscript.ProgramStore.Builder: android.renderscript.ProgramStore.Builder setDepthMaskEnabled(boolean)>
<android.net.IConnectivityManager: void setVpnPackageAuthorization(boolean)>
<android.net.MobileLinkQualityInfo: int getLteCqi()>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder penaltyLog()>
<android.view.accessibility.CaptioningManager.CaptioningChangeListener: void onUserStyleChanged(android.view.accessibility.CaptioningManager.CaptionStyle)>
<android.app.ActionBar: boolean openOptionsMenu()>
<android.app.ActivityManagerProxy: java.util.List getProcessesInErrorState()>
<android.util.LongSparseArray: java.lang.Object valueAt(int)>
<android.widget.TabWidget: void setDividerDrawable(android.graphics.drawable.Drawable)>
<android.bluetooth.BluetoothMap: boolean disconnect(android.bluetooth.BluetoothDevice)>
<android.app.Instrumentation: void execStartActivities(android.content.Context,android.os.IBinder,android.os.IBinder,android.app.Activity,android.content.Intent[],android.os.Bundle)>
<android.view.View: boolean onHoverEvent(android.view.MotionEvent)>
<android.content.pm.IPackageInstaller: void setPermissionsResult(int,boolean)>
<com.google.android.util.AbstractMessageParser.Token: java.lang.String toHtml(boolean)>
<com.android.internal.view.BaseSurfaceHolder: android.view.SurfaceHolder.Callback[] getCallbacks()>
<android.gesture.GestureOverlayView: void removeOnGesturingListener(android.gesture.GestureOverlayView.OnGesturingListener)>
<android.telephony.CellInfo: void <init>(android.telephony.CellInfo)>
<com.android.internal.app.AlertController: boolean onKeyDown(int,android.view.KeyEvent)>
<android.telecom.ParcelableCall: android.telecom.InCallService.VideoCall getVideoCall()>
<android.media.IRingtonePlayer: void stop(android.os.IBinder)>
<android.util.JsonWriter: android.util.JsonWriter value(java.lang.Number)>
<android.print.PrintJobInfo: void setPrinterName(java.lang.String)>
<android.opengl.GLES10: void glClearColorx(int,int,int,int)>
<android.renderscript.Program: android.renderscript.Program.TextureType getTextureType(int)>
<android.view.View: int getHorizontalFadingEdgeLength()>
<com.android.ims.internal.IImsVideoCallProvider: void setDisplaySurface(android.view.Surface)>
<com.android.internal.view.menu.MenuView.ItemView: void setChecked(boolean)>
<android.print.PrintJobInfo.Builder: void <init>(android.print.PrintJobInfo)>
<com.android.internal.view.menu.ListMenuItemView: void onMeasure(int,int)>
<android.preference.MultiCheckPreference: void setEntries(int)>
<android.widget.TwoLineListItem: android.widget.TextView getText1()>
<android.net.wifi.IWifiManager: boolean releaseWifiLock(android.os.IBinder)>
<android.media.audiofx.EnvironmentalReverb: void setReverbDelay(int)>
<android.app.Activity: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)>
<android.nfc.tech.TagTechnology: boolean isConnected()>
<android.widget.ImageView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.app.Activity: void onWindowFocusChanged(boolean)>
<android.renderscript.Short2: void setAt(int,short)>
<android.net.wifi.WifiEnterpriseConfig: int describeContents()>
<android.webkit.WebView: java.lang.String getTitle()>
<android.app.FragmentManager.BackStackEntry: int getBreadCrumbShortTitleRes()>
<com.android.internal.view.menu.ListMenuPresenter: void onCloseMenu(com.android.internal.view.menu.MenuBuilder,boolean)>
<android.telephony.TelephonyManager: boolean endCall()>
<android.renderscript.Element: int getBytesSize()>
<android.widget.SimpleAdapter.ViewBinder: boolean setViewValue(android.view.View,java.lang.Object,java.lang.String)>
<android.view.View: boolean isLayoutRtl()>
<android.view.ViewGroup: boolean dispatchGenericPointerEvent(android.view.MotionEvent)>
<android.widget.LinearLayout: boolean shouldDelayChildPressedState()>
<android.accounts.AccountAuthenticatorResponse: void writeToParcel(android.os.Parcel,int)>
<android.content.UndoOperation: void undo()>
<com.android.internal.os.BatteryStatsImpl: void noteWifiBatchedScanStartedFromSourceLocked(android.os.WorkSource,int)>
<com.android.internal.content.PackageHelper: boolean fixSdPermissions(java.lang.String,int,java.lang.String)>
<android.util.PathParser: android.graphics.Path createPathFromPathData(java.lang.String)>
<android.widget.HorizontalScrollView: void onRestoreInstanceState(android.os.Parcelable)>
<android.hardware.camera2.marshal.impl.MarshalQueryablePair: android.hardware.camera2.marshal.Marshaler createMarshaler(android.hardware.camera2.utils.TypeReference,int)>
<android.app.admin.DevicePolicyManager: int getPasswordMaximumLength(int)>
<com.android.ims.internal.IImsCallSessionListener: void callSessionConferenceStateUpdated(com.android.ims.internal.IImsCallSession,com.android.ims.ImsConferenceState)>
<android.telecom.Connection: void onStopDtmfTone()>
<android.widget.AbsListView: int pointToPosition(int,int)>
<android.media.AudioTrack: int reloadStaticData()>
<android.view.WindowManagerPolicy: int getNonDecorDisplayHeight(int,int,int)>
<android.view.View: float getZ()>
<com.android.internal.content.PackageMonitor: void onReceive(android.content.Context,android.content.Intent)>
<android.media.AudioAttributes: java.util.Set getTags()>
<android.telephony.SignalStrength: boolean equals(java.lang.Object)>
<android.service.notification.ZenModeConfig: void writeConditionXml(android.service.notification.Condition,org.xmlpull.v1.XmlSerializer)>
<android.provider.Settings.Secure: int getInt(android.content.ContentResolver,java.lang.String)>
<android.appwidget.AppWidgetHostView: boolean drawChild(android.graphics.Canvas,android.view.View,long)>
<com.google.android.util.AbstractMessageParser.YouTubeVideo: void <init>(java.lang.String,java.lang.String)>
<android.net.http.AndroidHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)>
<android.transition.TransitionSet: void setPropagation(android.transition.TransitionPropagation)>
<android.database.CursorToBulkCursorAdaptor: android.os.Bundle respond(android.os.Bundle)>
<android.graphics.Paint: int getTextRunCursor(java.lang.CharSequence,int,int,int,int,int)>
<android.media.MediaDrm: java.util.List getSecureStops()>
<android.opengl.GLES31: void glProgramUniform2uiv(int,int,int,int[],int)>
<android.bluetooth.BluetoothHeadsetClientCall: void setMultiParty(boolean)>
<android.filterfw.core.StreamPort: void assignFrame(android.filterfw.core.Frame,boolean)>
<android.view.ViewManager: void removeView(android.view.View)>
<com.google.android.gles_jni.GLImpl: void glLightfv(int,int,java.nio.FloatBuffer)>
<android.renderscript.ProgramFragmentFixedFunction.Builder: android.renderscript.ProgramFragmentFixedFunction.Builder setPointSpriteTexCoordinateReplacement(boolean)>
<android.net.http.Headers: java.lang.String getXPermittedCrossDomainPolicies()>
<android.hardware.camera2.impl.CameraMetadataNative.Key: int hashCode()>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.String toString()>
<android.transition.Explode: android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>
<android.graphics.Bitmap: int getScaledWidth(int)>
<android.hardware.camera2.CaptureRequest.Key: boolean equals(java.lang.Object)>
<android.widget.DatePicker.DatePickerDelegate: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.view.accessibility.AccessibilityNodeInfo: void setSealed(boolean)>
<android.widget.TableRow: void onLayout(boolean,int,int,int,int)>
<android.os.UserManager: boolean isLinkedUser()>
<android.hardware.display.DisplayManager: void renameWifiDisplay(java.lang.String,java.lang.String)>
<android.database.DatabaseUtils: void dumpCurrentRow(android.database.Cursor)>
<android.filterpacks.imageproc.StraightenFilter: void setupPorts()>
<android.inputmethodservice.InputMethodService: void onDisplayCompletions(android.view.inputmethod.CompletionInfo[])>
<android.app.Notification.WearableExtender: int getContentIconGravity()>
<android.filterpacks.imageproc.SaturateFilter: void initProgram(android.filterfw.core.FilterContext,int)>
<android.inputmethodservice.InputMethodService: void onUpdateExtractingVisibility(android.view.inputmethod.EditorInfo)>
<android.renderscript.Allocation: int getBytesSize()>
<android.app.ApplicationThreadProxy: void dumpGfxInfo(java.io.FileDescriptor,java.lang.String[])>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor dup()>
<android.service.media.MediaBrowserService: void onLoadChildren(java.lang.String,android.service.media.MediaBrowserService.Result)>
<android.util.MonthDisplayHelper: void nextMonth()>
<android.view.View: void damageInParent()>
<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageIIIIII(int,int,int,int,int,int,int)>
<android.renderscript.Allocation: android.renderscript.Allocation createTyped(android.renderscript.RenderScript,android.renderscript.Type,android.renderscript.Allocation.MipmapControl,int)>
<android.location.Geofence: double getLatitude()>
<android.graphics.Path: void setLastPoint(float,float)>
<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable getDrawable(int)>
<android.filterpacks.videosrc.CameraSource: void tearDown(android.filterfw.core.FilterContext)>
<com.android.internal.widget.DecorToolbar: boolean hasEmbeddedTabs()>
<com.android.internal.widget.DecorToolbar: boolean isSplit()>
<android.graphics.Movie: android.graphics.Movie decodeStream(java.io.InputStream)>
<android.database.DatabaseUtils: void dumpCursor(android.database.Cursor,java.io.PrintStream)>
<android.view.accessibility.AccessibilityNodeInfo.RangeInfo: float getMax()>
<android.view.View: void onMeasure(int,int)>
<android.location.GpsMeasurement: java.lang.String toString()>
<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>
<android.net.NetworkKey: int hashCode()>
<com.android.internal.view.menu.MenuBuilder: boolean performShortcut(int,android.view.KeyEvent,int)>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: java.lang.String getInstanceName()>
<android.hardware.camera2.marshal.impl.MarshalQueryableBoolean: android.hardware.camera2.marshal.Marshaler createMarshaler(android.hardware.camera2.utils.TypeReference,int)>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl: void createSession(android.view.inputmethod.InputMethod.SessionCallback)>
<android.graphics.drawable.NinePatchDrawable: void setColorFilter(android.graphics.ColorFilter)>
<com.android.internal.widget.SubtitleView: void setAlignment(android.text.Layout.Alignment)>
<com.android.internal.telephony.ITelephonyRegistry: void notifyServiceStateForPhoneId(int,long,android.telephony.ServiceState)>
<android.os.StrictMode: void noteSlowCall(java.lang.String)>
<com.google.android.gles_jni.EGLContextImpl: int hashCode()>
<android.telecom.RemoteConnection.VideoProvider.Listener: void onCallDataUsageChanged(android.telecom.RemoteConnection.VideoProvider,int)>
<com.android.internal.util.StateMachine: void sendMessageDelayed(android.os.Message,long)>
<android.transition.PatternPathMotion: android.graphics.Path getPath(float,float,float,float)>
<android.app.backup.IBackupManager: void setAutoRestore(boolean)>
<android.media.IRemoteControlClient: void onInformationRequested(int,int)>
<android.service.voice.IVoiceInteractionService: void ready()>
<com.android.internal.content.PackageMonitor: void onPackageModified(java.lang.String)>
<android.widget.HorizontalScrollView: void setSmoothScrollingEnabled(boolean)>
<android.app.Fragment: void onCreate(android.os.Bundle)>
<android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction: java.lang.String toString()>
<android.inputmethodservice.InputMethodService: boolean onEvaluateInputViewShown()>
<android.view.RenderNodeAnimator: boolean isRunning()>
<android.widget.GridView: void setHorizontalSpacing(int)>
<android.app.AlarmManager: void setTime(long)>
<com.android.internal.view.menu.MenuDialogHelper: boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent)>
<android.webkit.ValueCallback: void onReceiveValue(java.lang.Object)>
<android.net.http.HttpAuthHeader: java.lang.String getNonce()>
<android.text.method.LinkMovementMethod: boolean canSelectArbitrarily()>
<android.graphics.Rect: void scale(float)>
<com.android.internal.telecom.IVideoProvider: void setZoom(float)>
<android.app.AppOpsManager.PackageOps: java.lang.String getPackageName()>
<com.android.internal.widget.LockPatternUtils: byte[] passwordToHash(java.lang.String,int)>
<android.widget.FrameLayout: void setMeasureAllChildren(boolean)>
<android.app.IAppTask: void moveToFront()>
<android.media.AudioManager: void setMasterMute(boolean,int)>
<android.webkit.WebViewProvider.ViewDelegate: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.content.IContentService: boolean getMasterSyncAutomaticallyAsUser(int)>
<android.view.View: int getFadeHeight(boolean)>
<android.transition.Transition.TransitionListenerAdapter: void onTransitionStart(android.transition.Transition)>
<android.widget.Spinner: void onRestoreInstanceState(android.os.Parcelable)>
<android.media.tv.TvInputHardwareInfo.Builder: android.media.tv.TvInputHardwareInfo build()>
<android.net.NetworkFactory: boolean acceptRequest(android.net.NetworkRequest,int)>
<com.google.android.gles_jni.GLImpl: void glScissor(int,int,int,int)>
<android.widget.ToggleButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<android.database.MatrixCursor: int getType(int)>
<com.android.internal.widget.SizeAdaptiveLayout: void onMeasure(int,int)>
<android.bluetooth.IBluetoothA2dp: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.media.MediaCodec.MediaImage: int getHeight()>
<android.widget.ListAdapter: boolean isEnabled(int)>
<android.media.ExifInterface: long getDateTime()>
<android.speech.RecognitionService.Callback: void rmsChanged(float)>
<android.app.ActivityManagerProxy: android.os.IBinder asBinder()>
<android.opengl.GLES20: void glStencilOpSeparate(int,int,int,int)>
<android.media.session.MediaSession: boolean isActiveState(int)>
<android.util.Range: boolean contains(android.util.Range)>
<android.hardware.camera2.params.StreamConfiguration: int hashCode()>
<android.net.http.EventHandler: boolean handleSslErrorRequest(android.net.http.SslError)>
<android.net.Uri.Builder: android.net.Uri build()>
<android.net.INetworkScoreCache: void clearScores()>
<android.telecom.Call.Listener: void onConferenceableCallsChanged(android.telecom.Call,java.util.List)>
<android.graphics.drawable.shapes.Shape: float getWidth()>
<android.content.IContentService: android.content.SyncStatusInfo getSyncStatus(android.accounts.Account,java.lang.String,android.content.ComponentName)>
<android.hardware.GeomagneticField: float getX()>
<android.renderscript.RenderScript: android.renderscript.RenderScript create(android.content.Context)>
<android.media.tv.ITvInputSessionCallback: void onSessionCreated(android.media.tv.ITvInputSession,android.os.IBinder)>
<android.preference.PreferenceManager.OnActivityStopListener: void onActivityStop()>
<com.android.internal.util.LocalLog: boolean dump(java.io.PrintWriter,java.lang.String,java.lang.String)>
<android.app.Dialog: void setContentView(android.view.View)>
<android.media.tv.ITvInputManager: boolean captureFrame(java.lang.String,android.view.Surface,android.media.tv.TvStreamConfig,int)>
<android.media.session.PlaybackState: long getActionsFromRccControlFlags(int)>
<android.text.SpannableStringBuilder: void removeSpan(java.lang.Object)>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getAllButNulAndAngleBracketsLegal()>
<android.widget.VideoView: void setOnCompletionListener(android.media.MediaPlayer.OnCompletionListener)>
<android.telephony.TelephonyManager: java.lang.String[] getIsimPcscf()>
<android.renderscript.Allocation: android.renderscript.Allocation createFromString(android.renderscript.RenderScript,java.lang.String,int)>
<android.widget.ScrollView: int computeVerticalScrollOffset()>
<android.opengl.GLES20: void glDeleteProgram(int)>
<android.util.Property: java.lang.Object get(java.lang.Object)>
<com.android.internal.util.JournaledFile: void <init>(java.io.File,java.io.File)>
<com.android.internal.os.PowerProfile: double getBatteryCapacity()>
<android.app.IActivityManager: android.os.IBinder newUriPermissionOwner(java.lang.String)>
<com.android.internal.view.menu.MenuPopupHelper: void setAnchorView(android.view.View)>
<android.webkit.WebSettings: void setNavDump(boolean)>
<android.widget.ImageView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.graphics.drawable.BitmapDrawable: int getAlpha()>
<com.android.internal.app.ToolbarActionBar: float getElevation()>
<android.view.accessibility.AccessibilityNodeProvider: java.util.List findAccessibilityNodeInfosByText(java.lang.String,int)>
<android.opengl.GLES31Ext: void glFramebufferTextureEXT(int,int,int,int)>
<android.renderscript.Long2: void <init>(android.renderscript.Long2)>
<android.app.TaskStackBuilder: android.app.TaskStackBuilder addParentStack(android.content.ComponentName)>
<com.android.internal.widget.DecorToolbar: void setDefaultNavigationContentDescription(int)>
<android.renderscript.Element: android.renderscript.Element RGB_565(android.renderscript.RenderScript)>
<android.app.FragmentManagerImpl: void enqueueAction(java.lang.Runnable,boolean)>
<android.app.PendingIntent: void send(int,android.app.PendingIntent.OnFinished,android.os.Handler)>
<android.hardware.CameraInfo: void writeToParcel(android.os.Parcel,int)>
<android.telecom.RemoteConference.Callback: void onDestroyed(android.telecom.RemoteConference)>
<android.view.View.AccessibilityDelegate: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(android.view.View)>
<android.widget.TextView: int computeVerticalScrollExtent()>
<com.android.internal.view.InputConnectionWrapper: boolean commitText(java.lang.CharSequence,int)>
<android.widget.TextView: float getShadowRadius()>
<android.renderscript.ProgramStore: boolean isDitherEnabled()>
<android.renderscript.Allocation: android.view.Surface getSurface()>
<android.nfc.NdefRecord: android.nfc.NdefRecord createExternal(java.lang.String,java.lang.String,byte[])>
<android.view.Gravity: boolean isHorizontal(int)>
<android.widget.AbsListView: void setItemChecked(int,boolean)>
<android.hardware.hdmi.IHdmiControlService: void oneTouchPlay(android.hardware.hdmi.IHdmiControlCallback)>
<com.google.android.gles_jni.GLImpl: void glGetFixedv(int,java.nio.IntBuffer)>
<android.net.wifi.WifiSsid: boolean isHidden()>
<android.filterpacks.imageproc.DrawOverlayFilter: void <init>(java.lang.String)>
<android.widget.TextView: void findViewsWithText(java.util.ArrayList,java.lang.CharSequence,int)>
<android.net.wifi.p2p.WifiP2pGroupList: boolean contains(int)>
<android.telephony.TelephonyManager: java.lang.String sendEnvelopeWithStatus(java.lang.String)>
<android.widget.DatePicker.DatePickerDelegate: void onConfigurationChanged(android.content.res.Configuration)>
<android.net.NetworkPolicyManager: boolean getRestrictBackground()>
<android.text.method.TextKeyListener: boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent)>
<android.app.admin.DevicePolicyManager: android.os.Bundle getApplicationRestrictions(android.content.ComponentName,java.lang.String)>
<com.android.internal.telephony.ISms: long getPreferredSmsSubscription()>
<android.view.WindowManagerImpl: void addView(android.view.View,android.view.ViewGroup.LayoutParams)>
<android.telephony.CellInfoWcdma: void writeToParcel(android.os.Parcel,int)>
<android.widget.Scroller: boolean computeScrollOffset()>
<android.webkit.Plugin: void setClickHandler(android.webkit.Plugin.PreferencesClickHandler)>
<android.content.ContentProviderClient: int bulkInsert(android.net.Uri,android.content.ContentValues[])>
<android.content.res.Resources: java.lang.String getQuantityString(int,int)>
<android.media.MediaPlayer: int getDuration()>
<android.webkit.WebStorage: void getUsageForOrigin(java.lang.String,android.webkit.ValueCallback)>
<android.app.AppImportanceMonitor: void <init>(android.content.Context,android.os.Looper)>
<android.preference.Preference: void notifyChanged()>
<android.widget.AdapterViewFlipper: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.Toolbar: void setContentInsetsRelative(int,int)>
<android.hardware.location.ActivityRecognitionEvent: int getEventType()>
<com.android.internal.widget.DrawableHolder: void <init>(android.graphics.drawable.BitmapDrawable)>
<android.nfc.tech.TagTechnology: void close()>
<android.view.accessibility.AccessibilityNodeInfo: boolean isFocusable()>
<android.telecom.RemoteConnection.VideoProvider: void setPreviewSurface(android.view.Surface)>
<android.content.Intent: java.util.ArrayList getStringArrayListExtra(java.lang.String)>
<android.media.SubtitleController.Renderer: boolean supports(android.media.MediaFormat)>
<android.renderscript.Long4: void div(long)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture addAccountAsUser(java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle)>
<android.renderscript.ScriptIntrinsicLUT: void setAlpha(int,int)>
<com.android.internal.preference.YesNoPreference: java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int)>
<com.google.android.collect.Sets: java.util.SortedSet newSortedSet()>
<android.hardware.camera2.params.StreamConfigurationMap: long getOutputMinFrameDuration(java.lang.Class,android.util.Size)>
<android.view.View: void scrollBy(int,int)>
<android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings.Builder setScanResultType(int)>
<android.gesture.GestureOverlayView: void setGestureStrokeWidth(float)>
<com.android.internal.util.FastXmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>
<android.renderscript.AllocationAdapter: void subData1D(int,int,int[])>
<android.os.ParcelFileDescriptor.AutoCloseOutputStream: void close()>
<android.filterpacks.imageproc.ResizeFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<android.app.admin.DeviceAdminInfo: java.lang.String getTagForPolicy(int)>
<android.widget.ActivityChooserView: android.widget.ActivityChooserModel getDataModel()>
<android.graphics.drawable.AnimatedStateListDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>
<android.net.IConnectivityManager: boolean isTetheringSupported()>
<android.os.storage.IMountService: boolean isUsbMassStorageConnected()>
<android.widget.ExpandableListView: boolean setSelectedChild(int,int,boolean)>
<com.android.internal.content.PackageMonitor: boolean anyPackagesAppearing()>
<com.android.internal.util.FastXmlSerializer: void setOutput(java.io.Writer)>
<android.webkit.WebView: android.net.http.SslCertificate getCertificate()>
<android.app.ActivityManagerProxy: java.lang.String getCallingPackage(android.os.IBinder)>
<android.widget.PopupWindow.OnDismissListener: void onDismiss()>
<com.android.internal.app.WindowDecorActionBar: void setHomeActionContentDescription(java.lang.CharSequence)>
<android.appwidget.AppWidgetHostView: int getAppWidgetId()>
<android.app.IActivityManager: boolean startUserInBackground(int)>
<android.speech.tts.TextToSpeech: int synthesizeToFile(java.lang.String,java.util.HashMap,java.lang.String)>
<android.nfc.tech.MifareClassic: void <init>(android.nfc.Tag)>
<android.app.admin.DevicePolicyManager: java.util.List getActiveAdmins()>
<android.media.MutableBackgroundColorSpan: void setBackgroundColor(int)>
<android.renderscript.Double3: void sub(android.renderscript.Double3)>
<android.widget.ListPopupWindow: boolean onKeyDown(int,android.view.KeyEvent)>
<android.hardware.hdmi.HdmiRecordListener.TimerStatusData: int getMediaInfo()>
<android.database.Cursor: int getType(int)>
<android.speech.tts.Voice: java.lang.String toString()>
<android.media.tv.TvInputManager.SessionCallback: void onSessionEvent(android.media.tv.TvInputManager.Session,java.lang.String,android.os.Bundle)>
<android.renderscript.FieldPacker: void addI64(android.renderscript.Long3)>
<android.accounts.IAccountManager: void clearPassword(android.accounts.Account)>
<android.graphics.drawable.DrawableContainer: int getAlpha()>
<android.graphics.drawable.InsetDrawable: int getOpacity()>
<android.graphics.LightingColorFilter: void <init>(int,int)>
<android.media.AudioSystem: int setDeviceConnectionState(int,int,java.lang.String)>
<android.preference.TwoStatePreference: java.lang.CharSequence getSummaryOff()>
<android.provider.ContactsContract.ProfileSyncState: byte[] get(android.content.ContentProviderClient,android.accounts.Account)>
<android.os.storage.IMountService: int getEncryptionState()>
<android.widget.ActivityChooserModel.ActivityResolveInfo: boolean equals(java.lang.Object)>
<com.android.internal.widget.ResolverDrawerLayout: void onDetachedFromWindow()>
<android.graphics.Paint: float getFontSpacing()>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setCustomSizePreset(int)>
<android.os.Debug: boolean isDebuggerConnected()>
<android.filterfw.core.FilterFunction: android.filterfw.core.Filter getFilter()>
<android.telecom.RemoteConnection.Callback: void onPostDialWait(android.telecom.RemoteConnection,java.lang.String)>
<android.hardware.hdmi.HdmiPlaybackClient: int getDeviceType()>
<com.android.internal.view.StandaloneActionMode: boolean isUiFocusable()>
<android.app.ExpandableListActivity: long getSelectedId()>
<android.net.DhcpResults: void setDomains(java.lang.String)>
<android.widget.TextView: void setElegantTextHeight(boolean)>
<android.app.IActivityManager: void overridePendingTransition(android.os.IBinder,java.lang.String,int,int)>
<android.renderscript.FieldPacker: double subF64()>
<android.content.ContextWrapper: void removeStickyBroadcast(android.content.Intent)>
<android.app.FragmentTransaction: android.app.FragmentTransaction detach(android.app.Fragment)>
<android.graphics.drawable.BitmapDrawable: android.graphics.Paint getPaint()>
<android.webkit.UrlInterceptHandler: android.webkit.PluginData getPluginData(java.lang.String,java.util.Map)>
<android.text.BidiFormatter.Builder: android.text.BidiFormatter.Builder setTextDirectionHeuristic(android.text.TextDirectionHeuristic)>
<android.net.wifi.p2p.WifiP2pGroupList: java.util.Collection getGroupList()>
<android.view.View: void onWindowVisibilityChanged(int)>
<android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>
<android.app.MediaRouteButton: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.graphics.drawable.Drawable: void setAlpha(int)>
<android.app.ActionBar: android.view.View getCustomView()>
<android.print.IPrintSpoolerClient: void onAllPrintJobsForServiceHandled(android.content.ComponentName)>
<android.bluetooth.IBluetoothHeadsetClient: int getConnectionState(android.bluetooth.BluetoothDevice)>
<com.android.internal.inputmethod.InputMethodSubtypeSwitchingController: void onUserActionLocked(android.view.inputmethod.InputMethodInfo,android.view.inputmethod.InputMethodSubtype)>
<android.app.admin.DevicePolicyManager: boolean setProfileOwner(android.content.ComponentName,java.lang.String,int)>
<android.service.textservice.SpellCheckerService.Session: void onCreate()>
<android.inputmethodservice.KeyboardView: boolean isPreviewEnabled()>
<android.widget.GridLayout: android.widget.GridLayout.Spec spec(int,int,android.widget.GridLayout.Alignment,float)>
<android.view.ViewGroup: boolean getClipChildren()>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender addAction(android.app.Notification.Action)>
<android.telephony.TelephonyManager: void enableLocationUpdates()>
<android.speech.srec.MicrophoneInputStream: int read()>
<android.filterfw.core.ShaderProgram: void setHostValue(java.lang.String,java.lang.Object)>
<android.telecom.Connection: java.lang.String getCallerDisplayName()>
<com.google.android.gles_jni.GLImpl: void glPointParameterxv(int,int[],int)>
<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>
<android.content.pm.PackageManager: void removePermission(java.lang.String)>
<android.net.wifi.WifiManager: boolean reassociate()>
<android.os.SystemVibrator: void vibrate(int,java.lang.String,long[],int,android.media.AudioAttributes)>
<android.hardware.display.WifiDisplay: java.lang.String getDeviceName()>
<android.view.inputmethod.CursorAnchorInfo.Builder: android.view.inputmethod.CursorAnchorInfo.Builder setComposingText(int,java.lang.CharSequence)>
<android.webkit.WebSettings: void setUserAgentString(java.lang.String)>
<android.view.Menu: android.view.MenuItem findItem(int)>
<android.filterfw.core.AsyncRunner: void <init>(android.filterfw.core.FilterContext,java.lang.Class)>
<android.app.ActivityThread: void installSystemProviders(java.util.List)>
<android.widget.MultiAutoCompleteTextView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.util.FloatProperty: void setValue(java.lang.Object,float)>
<android.preference.MultiCheckPreference: void onPrepareDialogBuilder(android.app.AlertDialog.Builder)>
<android.app.VoiceInteractor.Request: void onDetached()>
<android.view.View: android.view.View findViewWithTag(java.lang.Object)>
<android.renderscript.Double2: java.lang.Double dotProduct(android.renderscript.Double2,android.renderscript.Double2)>
<android.widget.PopupWindow: void <init>(android.view.View,int,int,boolean)>
<android.filterpacks.videoproc.BackDropperFilter: void setupPorts()>
<android.renderscript.Long3: void mul(long)>
<com.google.android.gles_jni.GLImpl: int glQueryMatrixxOES(java.nio.IntBuffer,java.nio.IntBuffer)>
<android.hardware.camera2.impl.CallbackProxies.DeviceCaptureCallbackProxy: void onCaptureCompleted(android.hardware.camera2.CameraDevice,android.hardware.camera2.CaptureRequest,android.hardware.camera2.TotalCaptureResult)>
<com.android.internal.util.VirtualRefBasePtr: void <init>(long)>
<android.app.ActivityManager: android.app.PendingIntent getRunningServiceControlPanel(android.content.ComponentName)>
<android.media.AudioService: void setRingtonePlayer(android.media.IRingtonePlayer)>
<android.inputmethodservice.SoftInputWindow: void onBackPressed()>
<android.graphics.Typeface: void finalize()>
<android.widget.SearchView.OnQueryTextListener: boolean onQueryTextChange(java.lang.String)>
<com.android.internal.os.BatteryStatsImpl.Uid: void noteVideoTurnedOffLocked(long)>
<android.view.MenuItem: android.view.ActionProvider getActionProvider()>
<android.filterfw.core.GLEnvironment: int registerSurfaceFromMediaRecorder(android.media.MediaRecorder)>
<android.renderscript.Element: android.renderscript.Element I16(android.renderscript.RenderScript)>
<android.media.AudioService: void playSoundEffect(int)>
<android.inputmethodservice.InputMethodService: void setTheme(int)>
<android.content.res.CompatibilityInfo: boolean equals(java.lang.Object)>
<android.os.Handler: void handleMessage(android.os.Message)>
<android.filterfw.core.Frame: float[] getFloats()>
<android.emoji.EmojiFactory: android.graphics.Bitmap getBitmapFromVendorSpecificPua(int)>
<android.widget.TimePicker: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.internal.os.BatteryStatsImpl: void noteWifiOnLocked()>
<android.view.TextureView: void onSizeChanged(int,int,int,int)>
<com.android.internal.os.BaseCommand: void run(java.lang.String[])>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle hasFeatures(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,java.lang.String[])>
<android.net.IpConfiguration: void <init>(android.net.IpConfiguration.IpAssignment,android.net.IpConfiguration.ProxySettings,android.net.StaticIpConfiguration,android.net.ProxyInfo)>
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawableForDensity(int,int)>
<android.widget.CalendarView.CalendarViewDelegate: boolean isEnabled()>
<android.net.WifiKey: void <init>(java.lang.String,java.lang.String)>
<android.provider.MediaStore: java.lang.String getVersion(android.content.Context)>
<android.view.inputmethod.InputConnection: boolean commitCorrection(android.view.inputmethod.CorrectionInfo)>
<android.location.Location: boolean isComplete()>
<com.android.internal.util.ArrayUtils: java.lang.Object[] emptyArray(java.lang.Class)>
<android.inputmethodservice.InputMethodService: void onStartInput(android.view.inputmethod.EditorInfo,boolean)>
<android.graphics.RectF: boolean equals(java.lang.Object)>
<android.renderscript.Allocation: void generateMipmaps()>
<android.view.PointerIcon: android.view.PointerIcon getNullIcon()>
<android.net.NetworkFactory: void needNetworkFor(android.net.NetworkRequest,int)>
<android.net.NetworkStats: int findIndex(java.lang.String,int,int,int)>
<android.transition.ChangeScroll: android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)>
<android.widget.ActionMenuView: android.view.Menu getMenu()>
<android.widget.ScrollView: int computeVerticalScrollRange()>
<android.media.session.ISessionCallback: void onFastForward()>
<android.net.NetworkStateTracker: void setPolicyDataEnable(boolean)>
<android.graphics.Region: boolean isRect()>
<android.webkit.WebSettings: void setCacheMode(int)>
<android.media.MediaRouter.RouteInfo: android.graphics.drawable.Drawable getIconDrawable()>
<android.view.GraphicBuffer: android.view.GraphicBuffer create(int,int,int,int)>
<android.content.ClipboardManager: android.content.ClipData getPrimaryClip()>
<android.graphics.drawable.AnimatedVectorDrawable: void setHotspotBounds(int,int,int,int)>
<android.util.DayOfMonthCursor: boolean right()>
<android.telephony.PhoneNumberUtils: boolean isUriNumber(java.lang.String)>
<android.gesture.Gesture: android.graphics.Path toPath(int,int,int,int)>
<com.android.internal.os.BinderInternal: void addGcWatcher(java.lang.Runnable)>
<android.filterpacks.imageproc.DuotoneFilter: void <init>(java.lang.String)>
<android.app.job.JobInfo: long getIntervalMillis()>
<android.widget.CalendarView.CalendarViewDelegate: void setWeekDayTextAppearance(int)>
<android.media.session.PlaybackState.CustomAction: int describeContents()>
<android.media.MediaCryptoException: void <init>(java.lang.String)>
<android.print.PrintJobId: int hashCode()>
<android.nfc.BeamShareData: void writeToParcel(android.os.Parcel,int)>
<android.net.WebAddress: void setScheme(java.lang.String)>
<android.database.MergeCursor: boolean isNull(int)>
<android.database.AbstractWindowedCursor: boolean isNull(int)>
<android.app.TimePickerDialog: void updateTime(int,int)>
<android.content.IntentFilter: int countDataAuthorities()>
<android.bluetooth.IBluetoothManager: boolean isEnabled()>
<android.os.Parcel: void unmarshall(byte[],int,int)>
<android.filterfw.core.GLEnvironment: int registerSurfaceTexture(android.graphics.SurfaceTexture,int,int)>
<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setIntent(android.content.Intent)>
<android.text.style.TypefaceSpan: void <init>(android.os.Parcel)>
<android.nfc.cardemulation.CardEmulation: android.nfc.cardemulation.CardEmulation getInstance(android.nfc.NfcAdapter)>
<android.bluetooth.BluetoothAdapter: boolean enableNoAutoConnect()>
<android.media.IAudioFocusDispatcher: void dispatchAudioFocusChange(int,java.lang.String)>
<android.database.DatabaseErrorHandler: void onCorruption(android.database.sqlite.SQLiteDatabase)>
<android.text.format.Time: boolean after(android.text.format.Time)>
<android.graphics.drawable.shapes.RoundRectShape: void <init>(float[],android.graphics.RectF,float[])>
<android.media.MediaFocusControl: void setRemoteStreamVolume(int)>
<com.android.internal.util.AsyncChannel: void sendMessage(android.os.Message)>
<android.hardware.camera2.utils.Decorator.DecoratorListener: boolean onCatchException(java.lang.reflect.Method,java.lang.Object[],java.lang.Throwable)>
<android.widget.Toast: void <init>(android.content.Context)>
<android.hardware.soundtrigger.SoundTrigger.KeyphraseRecognitionEvent: void writeToParcel(android.os.Parcel,int)>
<android.view.TextureView: void <init>(android.content.Context)>
<android.hardware.location.GeofenceHardwareRequest: android.hardware.location.GeofenceHardwareRequest createCircularGeofence(double,double,double)>
<android.content.res.AssetManager: android.content.res.AssetFileDescriptor openNonAssetFd(java.lang.String)>
<android.net.INetworkPolicyManager: void registerListener(android.net.INetworkPolicyListener)>
<android.text.BoringLayout: float getLineMax(int)>
<android.content.ClipData.Item: android.net.Uri getUri()>
<android.os.BatteryStats.Uid: void noteActivityResumedLocked(long)>
<android.accounts.ChooseTypeAndAccountActivity: void onCancelButtonClicked(android.view.View)>
<android.graphics.drawable.shapes.Shape: float getHeight()>
<android.app.trust.TrustManager: void reportUnlockAttempt(boolean,int)>
<android.widget.ProgressBar: void setInterpolator(android.view.animation.Interpolator)>
<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Matrix,android.graphics.Paint)>
<com.android.internal.os.BatteryStatsImpl: long getPhoneOnTime(long,int)>
<android.net.MobileDataStateTracker: java.lang.String toString()>
<android.view.MotionEvent.PointerProperties: void <init>(android.view.MotionEvent.PointerProperties)>
<android.widget.SearchView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.content.ClipData.Item: void <init>(java.lang.CharSequence,java.lang.String)>
<android.widget.Gallery: boolean showContextMenu()>
<com.android.internal.os.HandlerCaller: void removeMessages(int,java.lang.Object)>
<android.app.Dialog: void onBackPressed()>
<android.renderscript.Int4: void copyTo(int[],int)>
<android.telecom.PhoneAccount.Builder: android.telecom.PhoneAccount.Builder addSupportedUriScheme(java.lang.String)>
<android.nfc.NfcAdapter: void disableForegroundNdefPush(android.app.Activity)>
<android.transition.Transition: java.util.List getTargetIds()>
<android.text.method.WordIterator: int following(int)>
<com.android.internal.os.BatteryStatsImpl: int getPhoneDataConnectionCount(int,int)>
<android.app.SearchDialog.SearchBar: void <init>(android.content.Context)>
<com.android.internal.widget.ActionBarView: android.view.View getCustomView()>
<android.widget.TextView: int getCompoundPaddingLeft()>
<android.text.method.LinkMovementMethod: boolean handleMovementKey(android.widget.TextView,android.text.Spannable,int,int,android.view.KeyEvent)>
<android.webkit.WebViewProvider.ViewDelegate: boolean onKeyDown(int,android.view.KeyEvent)>
<com.google.android.gles_jni.GLImpl: void glTexGenfv(int,int,float[],int)>
<com.android.internal.telecom.IConnectionServiceAdapter: void handleCreateConnectionComplete(java.lang.String,android.telecom.ConnectionRequest,android.telecom.ParcelableConnection)>
<android.hardware.hdmi.HdmiHotplugEvent: void <init>(int,boolean)>
<android.widget.HorizontalScrollView: int computeHorizontalScrollOffset()>
<com.android.internal.util.FastPrintWriter: void <init>(java.io.OutputStream,boolean)>
<android.widget.LinearLayout: void setVerticalGravity(int)>
<android.app.UiAutomation: boolean performGlobalAction(int)>
<android.graphics.Canvas: boolean clipRect(android.graphics.RectF,android.graphics.Region.Op)>
<android.opengl.GLES31Ext: void glObjectPtrLabelKHR(long,java.lang.String)>
<android.content.Intent: void writeToParcel(android.os.Parcel,int)>
<android.filterfw.core.InputPort: android.filterfw.core.FrameFormat getSourceFormat()>
<android.opengl.GLES30: void glGetQueryObjectuiv(int,int,int[],int)>
<android.widget.HorizontalScrollView: void addView(android.view.View,android.view.ViewGroup.LayoutParams)>
<android.telephony.PhoneStateListener: void onOemHookRawEvent(byte[])>
<android.graphics.TableMaskFilter: void <init>(byte[])>
<android.view.Choreographer: void postCallbackDelayed(int,java.lang.Runnable,java.lang.Object,long)>
<android.preference.ListPreference: void <init>(android.content.Context)>
<android.app.backup.RestoreDescription: java.lang.String toString()>
<android.net.INetworkStatsSession: void close()>
<android.renderscript.Float4: float dotProduct(android.renderscript.Float4,android.renderscript.Float4)>
<android.net.ConnectivityManager: android.net.ProxyInfo getProxy()>
<com.android.internal.widget.LockPatternUtils: boolean getWidgetsEnabled(int)>
<android.widget.SearchView.SearchAutoComplete: void onWindowFocusChanged(boolean)>
<com.google.android.gles_jni.GLImpl: void glLoadMatrixx(java.nio.IntBuffer)>
<com.android.ims.internal.IImsStreamMediaSession: void close()>
<android.app.ResourcesManager: android.content.res.Resources getTopLevelResources(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],int,android.content.res.Configuration,android.content.res.CompatibilityInfo,android.os.IBinder)>
<com.android.internal.app.RestrictionsPinActivity: void onCreate(android.os.Bundle)>
<android.media.tv.TvInputInfo: int describeContents()>
<android.bluetooth.BluetoothHeadset: boolean disconnect(android.bluetooth.BluetoothDevice)>
<android.content.Intent: android.os.IBinder getIBinderExtra(java.lang.String)>
<android.widget.ProgressBar: android.content.res.ColorStateList getSecondaryProgressTintList()>
<com.android.internal.os.BatteryStatsImpl: void noteStopSensorLocked(int,int)>
<android.filterfw.geometry.Point: boolean IsInUnitRange()>
<com.google.android.gles_jni.EGLImpl: javax.microedition.khronos.egl.EGLSurface eglCreateWindowSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object,int[])>
<android.view.animation.GridLayoutAnimationController: float getRowDelay()>
<android.widget.VideoView: int getCurrentPosition()>
<android.speech.tts.TextToSpeech: int getMaxSpeechInputLength()>
<android.gesture.GestureOverlayView: float getGestureStrokeLengthThreshold()>
<android.net.wifi.p2p.WifiP2pWfdInfo: void setCoupledSinkSupportAtSink(boolean)>
<android.opengl.Visibility: int visibilityTest(float[],int,float[],int,char[],int,int)>
<android.os.Bundle: java.util.ArrayList getParcelableArrayList(java.lang.String)>
<android.app.NotificationManager: void notifyAsUser(java.lang.String,int,android.app.Notification,android.os.UserHandle)>
<android.app.Notification.Action.WearableExtender: android.app.Notification.Action.WearableExtender clone()>
<android.service.trust.ITrustAgentService: void onTrustTimeout()>
<android.content.pm.PackageManager.LegacyPackageInstallObserver: void <init>(android.content.pm.IPackageInstallObserver)>
<android.app.Notification.Builder: android.app.Notification buildInto(android.app.Notification)>
<com.android.internal.telephony.ISub: long[] getActiveSubIdList()>
<android.os.BatteryStats: java.lang.String getEndPlatformVersion()>
<android.filterfw.core.GraphRunner: void deactivateGlContext()>
<android.net.NetworkTemplate: android.net.NetworkTemplate buildTemplateEthernet()>
<android.transition.Transition: java.util.List getTargets()>
<com.android.internal.telephony.ITelephonyRegistry: void listenForSubscriber(long,java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean)>
<android.opengl.GLES11: void glGetMaterialfv(int,int,java.nio.FloatBuffer)>
<android.filterfw.geometry.Point: android.filterfw.geometry.Point rotated(float)>
<android.bluetooth.BluetoothGattCallbackWrapper: void onCharacteristicRead(java.lang.String,int,int,int,android.os.ParcelUuid,int,android.os.ParcelUuid,byte[])>
<android.view.ViewTreeObserver: void addOnGlobalLayoutListener(android.view.ViewTreeObserver.OnGlobalLayoutListener)>
<android.net.LinkQualityInfo: void setNormalizedSignalStrength(int)>
<android.database.DatabaseUtils: boolean queryIsEmpty(android.database.sqlite.SQLiteDatabase,java.lang.String)>
<android.gesture.Gesture: java.util.ArrayList getStrokes()>
<android.opengl.GLES20: void glUniform1iv(int,int,java.nio.IntBuffer)>
<android.location.GpsMeasurement: boolean hasDopplerShiftInHz()>
<android.service.voice.VoiceInteractionSession: void onAbortVoice(android.service.voice.VoiceInteractionSession.Caller,android.service.voice.VoiceInteractionSession.Request,java.lang.CharSequence,android.os.Bundle)>
<android.util.SparseBooleanArray: boolean valueAt(int)>
<android.renderscript.Short4: short dotProduct(android.renderscript.Short4)>
<com.android.internal.widget.RotarySelector.OnDialTriggerListener: void onGrabbedStateChange(android.view.View,int)>
<android.content.Intent: long getLongExtra(java.lang.String,long)>
<android.text.AndroidCharacter: void getEastAsianWidths(char[],int,int,byte[])>
<android.os.Vibrator: void <init>(android.content.Context)>
<android.net.wifi.IWifiManager: android.net.DhcpInfo getDhcpInfo()>
<android.content.Context: int getThemeResId()>
<android.os.IPowerManager: void updateWakeLockWorkSource(android.os.IBinder,android.os.WorkSource,java.lang.String)>
<android.location.FusedBatchOptions: void resetSourceToUse(int)>
<com.android.internal.app.IBatteryStats: long getAwakeTimePlugged()>
<android.text.Layout: android.text.TextDirectionHeuristic getTextDirectionHeuristic()>
<android.content.pm.IPackageInstallObserver: void packageInstalled(java.lang.String,int)>
<android.net.wifi.WifiManager: boolean isScanAlwaysAvailable()>
<android.opengl.GLES20: void glUniform2iv(int,int,int[],int)>
<android.os.IPowerManager: void powerHint(int,int)>
<android.opengl.GLES30: void glDeleteTransformFeedbacks(int,int[],int)>
<android.filterpacks.text.StringLogger: void <init>(java.lang.String)>
<android.ddm.DdmHandleHello: void connected()>
<android.database.sqlite.SQLiteClosable: void close()>
<android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>
<android.app.admin.DevicePolicyManager: void setPasswordMinimumLowerCase(android.content.ComponentName,int)>
<android.view.TextureView: void onDetachedFromWindowInternal()>
<com.android.internal.app.ToolbarActionBar: void setLogo(int)>
<android.view.accessibility.CaptioningManager: android.view.accessibility.CaptioningManager.CaptionStyle getUserStyle()>
<android.graphics.Canvas: boolean clipPath(android.graphics.Path,android.graphics.Region.Op)>
<android.transition.VisibilityPropagation: int getViewVisibility(android.transition.TransitionValues)>
<android.os.UserHandle: int getUserId(int)>
<com.android.internal.os.BatteryStatsImpl: boolean isOnBattery()>
<android.view.inputmethod.CursorAnchorInfo: boolean equals(java.lang.Object)>
<android.renderscript.RenderScript: android.renderscript.RenderScript create(android.content.Context,int,android.renderscript.RenderScript.ContextType,int)>
<android.telecom.PhoneAccount: android.telecom.PhoneAccount.Builder toBuilder()>
<android.graphics.drawable.RippleDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>
<android.content.IntentFilter: void addDataSchemeSpecificPart(java.lang.String,int)>
<android.hardware.camera2.params.StreamConfigurationMap: boolean isOutputSupportedFor(java.lang.Class)>
<android.graphics.drawable.RotateDrawable: float getFromDegrees()>
<android.content.ContentResolver: void setSyncAutomaticallyAsUser(android.accounts.Account,java.lang.String,boolean,int)>
<android.widget.ActionMenuView: void dismissPopupMenus()>
<android.renderscript.FieldPacker: void addI32(android.renderscript.Int3)>
<android.preference.MultiSelectListPreference: void <init>(android.content.Context,android.util.AttributeSet)>
<android.service.notification.StatusBarNotification: android.service.notification.StatusBarNotification cloneLight()>
<android.view.animation.RotateAnimation: void <init>(android.content.Context,android.util.AttributeSet)>
<android.graphics.drawable.LayerDrawable: int getAlpha()>
<android.animation.LayoutTransition: void layoutChange(android.view.ViewGroup)>
<android.opengl.GLES20: boolean glIsShader(int)>
<android.nfc.INfcAdapterExtras: java.lang.String getDriverName(java.lang.String)>
<android.os.StrictMode.ThreadPolicy: java.lang.String toString()>
<android.net.SSLCertificateSocketFactory: void setUseSessionTickets(java.net.Socket,boolean)>
<android.content.res.AssetManager.AssetInputStream: int read(byte[])>
<android.filterfw.core.AsyncRunner: void setDoneCallback(android.filterfw.core.GraphRunner.OnRunnerDoneListener)>
<android.view.SurfaceControl.PhysicalDisplayInfo: boolean equals(java.lang.Object)>
<android.view.animation.AnticipateOvershootInterpolator: long createNativeInterpolator()>
<android.renderscript.Allocation: void copy2DRangeFrom(int,int,int,int,java.lang.Object)>
<android.service.trust.TrustAgentService: android.os.IBinder onBind(android.content.Intent)>
<android.widget.SlidingDrawer: void <init>(android.content.Context,android.util.AttributeSet)>
<android.app.Instrumentation: void callActivityOnUserLeaving(android.app.Activity)>
<android.graphics.Region: boolean equals(java.lang.Object)>
<android.widget.AbsListView: void smoothScrollToPosition(int,int)>
<android.os.RegistrantList: int size()>
<android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)>
<com.android.internal.widget.multiwaveview.GlowPadView: void setOnTriggerListener(com.android.internal.widget.multiwaveview.GlowPadView.OnTriggerListener)>
<android.bluetooth.BluetoothHealth: boolean connectChannelToSink(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration,int)>
<android.widget.ImageView: void setImageAlpha(int)>
<android.net.wifi.IWifiManager: boolean isMulticastEnabled()>
<android.content.pm.PackageParser: void collectCertificates(android.content.pm.PackageParser.Package,int)>
<android.widget.TextView: void setEnabled(boolean)>
<android.view.inputmethod.InputMethodManager: void showSoftInputFromInputMethod(android.os.IBinder,int)>
<android.content.IntentFilter.AuthorityEntry: int getPort()>
<android.net.wifi.WifiManager.WpsCallback: void onStarted(java.lang.String)>
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtTime()>
<android.widget.ProgressBar: void setVisibility(int)>
<android.telephony.CellSignalStrengthWcdma: android.telephony.CellSignalStrengthWcdma copy()>
<android.content.Intent: android.content.Intent getSelector()>
<com.android.internal.widget.DrawableHolder: void setX(float)>
<android.os.Messenger: void <init>(android.os.IBinder)>
<android.app.ActivityManager.RunningAppProcessInfo: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.widget.ActionBarView: void setIcon(android.graphics.drawable.Drawable)>
<android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings.Builder setAdvertiseMode(int)>
<com.android.internal.widget.multiwaveview.PointCloud: void draw(android.graphics.Canvas)>
<android.util.Patterns: java.lang.String digitsAndPlusOnly(java.util.regex.Matcher)>
<android.opengl.GLES11Ext: void glDrawTexivOES(java.nio.IntBuffer)>
<android.content.ContentProviderClient: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String,android.os.CancellationSignal)>
<android.graphics.PathMeasure: boolean isClosed()>
<com.android.internal.util.ProcFileReader: int nextInt()>
<android.media.ClosedCaptionWidget: void onMeasure(int,int)>
<android.content.pm.PackageParser: android.content.pm.InstrumentationInfo generateInstrumentationInfo(android.content.pm.PackageParser.Instrumentation,int)>
<android.bluetooth.BluetoothHeadsetClient: android.os.Bundle getCurrentAgEvents(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothGattService: java.util.List getCharacteristics()>
<android.widget.SearchView.SearchAutoComplete: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.widget.CalendarView: long getDate()>
<android.view.MotionEvent: float getAxisValue(int,int)>
<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter()>
<android.text.BoringLayout: int getLineStart(int)>
<android.net.http.RequestFeeder: void requeueRequest(android.net.http.Request)>
<android.os.Bundle: void <init>(java.lang.ClassLoader)>
<android.transition.Visibility: void captureStartValues(android.transition.TransitionValues)>
<android.widget.ViewSwitcher: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.google.android.gles_jni.GLImpl: void glDrawTexivOES(int[],int)>
<com.android.internal.inputmethod.InputMethodUtils.InputMethodSettings: void <init>(android.content.res.Resources,android.content.ContentResolver,java.util.HashMap,java.util.ArrayList,int)>
<android.view.ViewConfiguration: int getScaledPagingTouchSlop()>
<android.provider.MediaStore.Images.Media: android.graphics.Bitmap getBitmap(android.content.ContentResolver,android.net.Uri)>
<android.content.pm.LauncherActivityInfo: android.content.pm.ApplicationInfo getApplicationInfo()>
<android.widget.Toolbar: void setSubtitle(java.lang.CharSequence)>
<android.app.ResultInfo: java.lang.String toString()>
<android.service.notification.NotificationListenerService: android.service.notification.StatusBarNotification[] getActiveNotifications(java.lang.String[])>
<android.app.Instrumentation: void sendKeySync(android.view.KeyEvent)>
<android.view.accessibility.AccessibilityNodeInfo: void setPackageName(java.lang.CharSequence)>
<android.widget.FrameLayout.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>
<android.location.LocationRequest: android.location.LocationRequest createFromDeprecatedCriteria(android.location.Criteria,long,float,boolean)>
<android.text.style.StyleSpan: void <init>(android.os.Parcel)>
<android.filterfw.MffEnvironment: void <init>(android.filterfw.core.FrameManager)>
<android.net.LinkQualityInfo: void writeToParcel(android.os.Parcel,int)>
<android.view.WindowManagerPolicy.WindowState: java.lang.String getOwningPackage()>
<com.android.internal.util.AsyncService: android.os.IBinder onBind(android.content.Intent)>
<android.view.View.OnApplyWindowInsetsListener: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)>
<android.widget.MultiAutoCompleteTextView: void performFiltering(java.lang.CharSequence,int)>
<android.view.ViewConfiguration: int getDoubleTapMinTime()>
<com.android.internal.view.menu.MenuBuilder: void setGroupCheckable(int,boolean,boolean)>
<android.os.storage.IMountService: long lastMaintenance()>
<android.location.Location: java.lang.String convert(double,int)>
<android.telephony.CellInfoGsm: android.telephony.CellInfoGsm createFromParcelBody(android.os.Parcel)>
<android.widget.TimePicker: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.media.tv.TvTrackInfo.Builder: android.media.tv.TvTrackInfo.Builder setLanguage(java.lang.String)>
<com.android.internal.widget.ActionBarContextView: void killMode()>
<android.renderscript.ProgramFragmentFixedFunction.Builder: android.renderscript.ProgramFragmentFixedFunction create()>
<android.text.TextUtils: int indexOf(java.lang.CharSequence,char,int)>
<android.app.FragmentBreadCrumbs: void setOnBreadCrumbClickListener(android.app.FragmentBreadCrumbs.OnBreadCrumbClickListener)>
<android.app.usage.TimeSparseArray: void <init>(int)>
<android.net.InterfaceConfiguration: void setInterfaceUp()>
<android.net.http.AndroidHttpClientConnection: boolean isStale()>
<android.widget.Spinner: void setPopupBackgroundResource(int)>
<android.util.ArrayMap: java.lang.Object removeAt(int)>
<android.renderscript.Long3: long length()>
<android.os.PowerManagerInternal: void setUserActivityTimeoutOverrideFromWindowManager(long)>
<android.app.IApplicationThread: void scheduleEnterAnimationComplete(android.os.IBinder)>
<com.android.ims.internal.IImsCallSessionListener: void callSessionMergeFailed(com.android.ims.internal.IImsCallSession,com.android.ims.ImsReasonInfo)>
<android.content.ContentResolver: android.content.IContentProvider acquireUnstableProvider(android.content.Context,java.lang.String)>
<android.content.pm.ActivityInfo: void <init>(android.content.pm.ActivityInfo)>
<com.android.internal.widget.ActionBarView: boolean isTitleTruncated()>
<android.graphics.Canvas: int getWidth()>
<android.database.CursorWindow: float getFloat(int,int)>
<android.view.View: boolean dispatchNestedPreScroll(int,int,int[],int[])>
<android.content.SyncRequest: boolean isExpedited()>
<android.net.NetworkStats: java.lang.String setToString(int)>
<android.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)>
<android.bluetooth.BluetoothAdapter: boolean startLeScan(android.bluetooth.BluetoothAdapter.LeScanCallback)>
<android.util.Rational: int getNumerator()>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getChildCount()>
<com.google.android.gles_jni.GLImpl: void glTexGenxv(int,int,int[],int)>
<android.widget.TextView: void setCursorPosition_internal(int,int)>
<android.app.IBackupAgent: void doBackup(android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager)>
<android.graphics.LargeBitmap: android.graphics.Bitmap decodeRegion(android.graphics.Rect,android.graphics.BitmapFactory.Options)>
<android.preference.PreferenceGroup: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.telecom.ParcelableCall: java.lang.String getId()>
<android.view.animation.AnimationSet: void initializeInvalidateRegion(int,int,int,int)>
<com.android.internal.widget.ActionBarContextView: void onMeasure(int,int)>
<android.widget.Toolbar: void onLayout(boolean,int,int,int,int)>
<android.media.MediaRouterClientState.RouteInfo: void <init>(java.lang.String)>
<android.view.View: void setOnDragListener(android.view.View.OnDragListener)>
<android.telephony.CellInfo: int hashCode()>
<com.android.internal.widget.PointerLocationView: void onMeasure(int,int)>
<com.android.internal.widget.multiwaveview.PointCloud.WaveManager: float getAlpha()>
<android.widget.AdapterViewAnimator: void advance()>
<android.graphics.drawable.TransitionDrawable: void setCrossFadeEnabled(boolean)>
<android.media.IRemoteControlClient: void plugRemoteControlDisplay(android.media.IRemoteControlDisplay,int,int)>
<android.media.MediaFile: int getFormatCode(java.lang.String,java.lang.String)>
<com.android.internal.widget.EditableInputConnection: boolean performPrivateCommand(java.lang.String,android.os.Bundle)>
<android.view.ViewConfiguration: int getDoubleTapSlop()>
<android.os.BatteryStats.Uid: int getUid()>
<android.media.AudioGain: int rampDurationMaxMs()>
<android.widget.CompoundButton: int[] onCreateDrawableState(int)>
<android.webkit.WebViewProvider: android.net.http.SslCertificate getCertificate()>
<android.util.LongSparseLongArray: java.lang.String toString()>
<android.os.IPowerManager: void crash(java.lang.String)>
<android.graphics.drawable.LevelListDrawable: void addLevel(int,int,android.graphics.drawable.Drawable)>
<android.text.style.SuperscriptSpan: void updateMeasureState(android.text.TextPaint)>
<android.media.JetPlayer: boolean loadJetFile(java.lang.String)>
<android.media.tv.TvView: boolean dispatchTrackballEvent(android.view.MotionEvent)>
<android.os.INetworkManagementService: void removeInterfaceAlert(java.lang.String)>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getParent()>
<android.widget.AbsListView: void setSelector(int)>
<android.provider.ContactsContract.CommonDataKinds.Organization: int getTypeLabelResource(int)>
<android.content.IntentFilter: boolean hasDataPath(java.lang.String)>
<com.android.internal.os.RuntimeInit: void setApplicationObject(android.os.IBinder)>
<android.os.AsyncTask: java.lang.Object get()>
<android.view.MotionEvent: void addBatch(long,android.view.MotionEvent.PointerCoords[],int)>
<android.app.ActivityManager: void setPackageAskScreenCompat(java.lang.String,boolean)>
<android.view.accessibility.AccessibilityEventSource: void sendAccessibilityEvent(int)>
<com.android.internal.view.InputConnectionWrapper: boolean performPrivateCommand(java.lang.String,android.os.Bundle)>
<android.accounts.AccountManager: android.accounts.AccountManager get(android.content.Context)>
<android.media.MediaExtractor: int getTrackCount()>
<android.renderscript.Allocation: void copyTo(short[])>
<android.widget.OverScroller: int getCurrX()>
<android.renderscript.Long2: void div(long)>
<android.widget.OverScroller: float getCurrVelocity()>
<android.view.WindowManagerPolicy.WindowState: android.graphics.Rect getOverscanFrameLw()>
<android.media.session.ISessionController: void pause()>
<android.widget.ViewAnimator: void removeAllViews()>
<com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm8BitPacked(java.lang.String)>
<android.opengl.GLES11Ext: void glLightModelxvOES(int,java.nio.IntBuffer)>
<android.graphics.drawable.PaintDrawable: void setCornerRadii(float[])>
<android.hardware.camera2.legacy.GLThreadManager: void queueNewFrame()>
<android.media.AudioPortConfig: int format()>
<com.android.internal.view.BaseSurfaceHolder: void addCallback(android.view.SurfaceHolder.Callback)>
<android.view.View: void setHasTransientState(boolean)>
<android.net.wifi.WifiEnterpriseConfig: void writeToParcel(android.os.Parcel,int)>
<android.graphics.drawable.RotateDrawable: int getOpacity()>
<android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setRequiresDeviceIdle(boolean)>
<com.android.ims.ImsCallProfile: void <init>(int,int)>
<android.os.UserManager: android.os.Bundle getApplicationRestrictions(java.lang.String,android.os.UserHandle)>
<com.android.internal.app.IAppOpsService: void setAudioRestriction(int,int,int,int,java.lang.String[])>
<android.content.pm.LauncherActivityInfo: java.lang.CharSequence getLabel()>
<android.content.Context: void clearWallpaper()>
<android.hardware.display.DisplayManagerInternal: void setDisplayProperties(int,boolean,float,boolean)>
<android.net.WifiLinkQualityInfo: int getType()>
<com.android.internal.view.menu.MenuItemImpl: boolean hasSubMenu()>
<android.app.backup.BackupManager: void dataChanged(java.lang.String)>
<android.util.MathUtils: float max(float,float,float)>
<android.view.WindowInsets: boolean isConsumed()>
<android.opengl.GLES10: void glClearStencil(int)>
<com.google.android.gles_jni.GLImpl: void glGetFloatv(int,java.nio.FloatBuffer)>
<android.os.INetworkManagementService: android.net.NetworkStats getNetworkStatsUidDetail(int)>
<android.text.TextUtils: java.lang.String[] split(java.lang.String,java.util.regex.Pattern)>
<android.widget.EdgeEffect: boolean isFinished()>
<android.print.PrinterCapabilitiesInfo: android.print.PrintAttributes getDefaults()>
<android.telephony.TelephonyManager: boolean isRinging()>
<android.content.pm.PackageManager: android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName,int)>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,java.lang.String,android.graphics.BitmapFactory.Options)>
<android.widget.RadioGroup: void <init>(android.content.Context,android.util.AttributeSet)>
<android.appwidget.AppWidgetHost: void stopListening()>
<com.android.internal.app.LocalePicker.LocaleInfo: java.lang.String getLabel()>
<android.app.SearchableInfo: java.lang.String getSuggestIntentAction()>
<android.hardware.hdmi.HdmiTimerRecordSources: android.hardware.hdmi.HdmiTimerRecordSources.Time timeOf(int,int)>
<android.nfc.tech.MifareUltralight: void <init>(android.nfc.Tag)>
<android.filterfw.core.FrameFormat: java.lang.Object getMetaValue(java.lang.String)>
<android.print.PrintAttributes.Margins: int getLeftMils()>
<android.view.ViewGroup.MarginLayoutParams: void setLayoutDirection(int)>
<android.view.HardwareCanvas: int onPreDraw(android.graphics.Rect)>
<android.app.OnActivityPausedListener: void onPaused(android.app.Activity)>
<android.renderscript.FieldPacker: void addU8(android.renderscript.Short3)>
<android.graphics.Region: void scale(float,android.graphics.Region)>
<com.android.internal.http.multipart.Part: java.lang.String getBoundary()>
<android.widget.ExpandableListAdapter: int getGroupCount()>
<android.view.KeyEvent: boolean isPrintingKey()>
<android.provider.Downloads.Impl: boolean isNotificationToBeDisplayed(int)>
<android.print.IPrinterDiscoveryObserver: void onPrintersAdded(android.content.pm.ParceledListSlice)>
<com.android.internal.view.WindowManagerPolicyThread: void set(java.lang.Thread,android.os.Looper)>
<android.graphics.RectF: java.lang.String toShortString()>
<android.graphics.drawable.shapes.Shape: android.graphics.drawable.shapes.Shape clone()>
<android.view.ViewGroup: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>
<android.os.INetworkManagementService: void setInterfaceConfig(java.lang.String,android.net.InterfaceConfiguration)>
<android.os.Bundle: void putParcelableArrayList(java.lang.String,java.util.ArrayList)>
<android.widget.TimePicker: void setCurrentHour(java.lang.Integer)>
<android.filterpacks.videosrc.CameraSource: void prepare(android.filterfw.core.FilterContext)>
<android.net.NetworkInfo: java.lang.String getExtraInfo()>
<android.hardware.camera2.params.ReprocessFormatsMap: void <init>(int[])>
<android.renderscript.Sampler.Builder: void setMinification(android.renderscript.Sampler.Value)>
<android.app.admin.IDevicePolicyManager: void setMaximumTimeToLock(android.content.ComponentName,long,int)>
<android.opengl.GLES30: java.nio.Buffer glMapBufferRange(int,int,int,int)>
<android.widget.TextView: void setTextAppearance(android.content.Context,int)>
<android.renderscript.Mesh.AllocationBuilder: android.renderscript.Mesh.AllocationBuilder addVertexAllocation(android.renderscript.Allocation)>
<android.renderscript.Double4: double dotProduct(android.renderscript.Double4,android.renderscript.Double4)>
<android.transition.VisibilityPropagation: int getViewX(android.transition.TransitionValues)>
<android.bluetooth.IBluetoothA2dp: java.util.List getConnectedDevices()>
<android.bluetooth.BluetoothInputDevice: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.net.NetworkPolicy: int compareTo(android.net.NetworkPolicy)>
<android.animation.LayoutTransition: android.animation.Animator getAnimator(int)>
<android.widget.MediaController: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.renderscript.Short4: short get(int)>
<android.hardware.camera2.legacy.BurstHolder: int getRequestId()>
<android.database.CursorWrapper: void deactivate()>
<android.app.admin.DevicePolicyManagerInternal.OnCrossProfileWidgetProvidersChangeListener: void onCrossProfileWidgetProvidersChanged(int,java.util.List)>
<android.util.MonthDisplayHelper: int getRowOf(int)>
<android.telecom.RemoteConnection: void disconnect()>
<android.inputmethodservice.Keyboard: void setKeyHeight(int)>
<android.app.AliasActivity: void onCreate(android.os.Bundle)>
<android.view.TextureView: void setLayerType(int,android.graphics.Paint)>
<android.hardware.display.WifiDisplaySessionInfo: java.lang.String getGroupId()>
<android.renderscript.Script: void setVar(int,boolean)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofMultiFloat(java.lang.Object,java.lang.String,float[][])>
<android.webkit.WebView: boolean performAccessibilityAction(int,android.os.Bundle)>
<android.renderscript.Byte4: byte elementSum()>
<android.renderscript.RenderScript: long getMinorID()>
<android.database.Cursor: void setNotificationUri(android.content.ContentResolver,android.net.Uri)>
<android.view.ViewGroup: android.view.ViewParent damageChildInParent(int,int,android.graphics.Rect)>
<android.util.Slog: int wtfStack(java.lang.String,java.lang.String)>
<com.android.internal.net.VpnConfig: java.lang.CharSequence getVpnLabel(android.content.Context,java.lang.String)>
<android.gesture.GestureStore: void save(java.io.OutputStream,boolean)>
<android.appwidget.AppWidgetManager: android.os.Bundle getAppWidgetOptions(int)>
<android.net.Network: java.lang.String toString()>
<android.content.res.Resources.Theme: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>
<android.widget.HorizontalScrollView: void smoothScrollTo(int,int)>
<android.widget.RemoteViews.OnClickHandler: boolean onClickHandler(android.view.View,android.app.PendingIntent,android.content.Intent)>
<android.net.NetworkUtils: int inetAddressToInt(java.net.Inet4Address)>
<com.android.internal.os.BatteryStatsImpl.StopwatchTimer: void writeToParcel(android.os.Parcel,long)>
<android.printservice.PrinterDiscoverySession: void onDestroy()>
<com.android.internal.os.IParcelFileDescriptorFactory: android.os.ParcelFileDescriptor open(java.lang.String,int)>
<android.util.Base64InputStream: int read(byte[],int,int)>
<android.util.MathUtils: void randomSeed(long)>
<android.telecom.Conference: void setOnHold()>
<android.app.ActivityManagerProxy: int checkUriPermission(android.net.Uri,int,int,int,int)>
<android.media.MiniThumbFile: void deactivate()>
<android.telephony.SignalStrength: int getLteSignalStrength()>
<android.media.audiofx.LoudnessEnhancer.OnParameterChangeListener: void onParameterChange(android.media.audiofx.LoudnessEnhancer,int,int)>
<android.widget.SearchView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.service.notification.IConditionProvider: void onSubscribe(android.net.Uri)>
<android.widget.TextView: java.lang.CharSequence getTextForAccessibility()>
<android.media.Ringtone: void <init>(android.content.Context,boolean)>
<com.android.internal.http.multipart.StringPart: void <init>(java.lang.String,java.lang.String)>
<android.hardware.camera2.utils.CloseableLock.ScopedLock: void close()>
<android.telephony.PhoneNumberUtils: java.lang.String extractNetworkPortion(java.lang.String)>
<android.net.TrafficStats: int getThreadStatsTag()>
<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceInfo: android.net.wifi.p2p.nsd.WifiP2pUpnpServiceInfo newInstance(java.lang.String,java.lang.String,java.util.List)>
<android.view.accessibility.CaptioningManager.CaptionStyle: boolean hasForegroundColor()>
<android.renderscript.Short2: short elementSum()>
<android.view.ViewGroup.MarginLayoutParams: boolean isMarginRelative()>
<android.os.IPowerManager: void releaseWakeLock(android.os.IBinder,int)>
<android.util.ArraySet: void <init>(int)>
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: void writeToParcel(android.os.Parcel,int)>
<android.widget.ActionMenuPresenter: void initForMenu(android.content.Context,com.android.internal.view.menu.MenuBuilder)>
<android.hardware.camera2.CaptureResult.Key: int hashCode()>
<android.database.CharArrayBuffer: void <init>(char[])>
<android.opengl.GLES31: void glProgramUniform1ui(int,int,int)>
<android.app.Fragment: boolean isAdded()>
<android.filterfw.core.SyncRunner: android.filterfw.core.FilterGraph getGraph()>
<com.android.internal.os.BaseCommand: void showUsage()>
<android.hardware.camera2.impl.CameraMetadataNative: void set(android.hardware.camera2.CameraCharacteristics.Key,java.lang.Object)>
<android.media.session.MediaSession.QueueItem: void writeToParcel(android.os.Parcel,int)>
<android.widget.CalendarView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String loadDescription(android.content.pm.PackageManager)>
<android.widget.CalendarView: int getSelectedWeekBackgroundColor()>
<android.app.ActivityOptions: boolean isReturning()>
<android.location.LocationRequest: java.lang.String qualityToString(int)>
<android.net.wifi.WifiConnectionStatistics: java.lang.String toString()>
<android.filterfw.core.Filter: boolean isAvailable(java.lang.String)>
<android.opengl.EGL14: android.opengl.EGLDisplay eglGetDisplay(long)>
<android.opengl.EGLObjectHandle: int getHandle()>
<com.android.internal.os.BatteryStatsImpl.LongSamplingCounter: long getCountLocked(int)>
<android.telephony.PhoneNumberUtils: boolean isISODigit(char)>
<android.content.pm.PackageParser.Permission: java.lang.String toString()>
<android.preference.MultiCheckPreference: java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int)>
<android.os.BinderProxy: android.os.IInterface queryLocalInterface(java.lang.String)>
<android.view.animation.Animation: float getScaleFactor()>
<android.app.ActivityManager.RecentTaskInfo: int describeContents()>
<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>
<android.media.AudioTrack: void finalize()>
<android.view.ViewDebug: void trace(android.view.View,android.view.ViewDebug.HierarchyTraceType)>
<android.widget.TabWidget: int getChildDrawingOrder(int,int)>
<android.net.LinkProperties: int hashCode()>
<android.media.MediaRouter.RouteInfo: android.view.Display getPresentationDisplay()>
<android.renderscript.Short4: void setValues(short,short,short,short)>
<android.inputmethodservice.InputMethodService: void onStartCandidatesView(android.view.inputmethod.EditorInfo,boolean)>
<android.graphics.PathMeasure: boolean nextContour()>
<android.hardware.camera2.marshal.impl.MarshalQueryableArray: android.hardware.camera2.marshal.Marshaler createMarshaler(android.hardware.camera2.utils.TypeReference,int)>
<android.os.SystemService: void waitForAnyStopped(java.lang.String[])>
<android.app.IActivityManager: java.lang.String getLaunchedFromPackage(android.os.IBinder)>
<android.animation.PropertyValuesHolder: java.lang.String toString()>
<android.transition.Fade: void <init>(android.content.Context,android.util.AttributeSet)>
<android.content.pm.PackageStats: void writeToParcel(android.os.Parcel,int)>
<android.net.NetworkStateTracker: void defaultRouteSet(boolean)>
<android.os.IBinder: boolean unlinkToDeath(android.os.IBinder.DeathRecipient,int)>
<android.text.Layout: int getLineForOffset(int)>
<android.os.IPowerManager: void nap(long)>
<android.preference.Preference: android.preference.PreferenceManager getPreferenceManager()>
<android.media.AudioService: int abandonAudioFocus(android.media.IAudioFocusDispatcher,java.lang.String)>
<android.widget.ListPopupWindow: void setAnimationStyle(int)>
<android.drm.DrmEvent: java.lang.Object getAttribute(java.lang.String)>
<android.app.admin.IDevicePolicyManager: android.os.UserHandle createUser(android.content.ComponentName,java.lang.String)>
<com.android.internal.http.multipart.Part: java.lang.String getContentType()>
<android.view.View: void setTagInternal(int,java.lang.Object)>
<android.app.job.JobParameters: boolean isOverrideDeadlineExpired()>
<com.android.internal.os.BatteryStatsImpl.Uid.Proc: boolean isActive()>
<android.location.IGpsStatusListener: void onGpsStopped()>
<android.content.pm.ApplicationInfo: java.lang.String getBaseCodePath()>
<android.service.media.MediaBrowserService.Result: void detach()>
<com.android.internal.widget.DialogTitle: void <init>(android.content.Context,android.util.AttributeSet)>
<android.text.style.TtsSpan.FractionBuilder: android.text.style.TtsSpan.FractionBuilder setIntegerPart(java.lang.String)>
<android.net.UrlQuerySanitizer: boolean getPreferFirstRepeatedParameter()>
<android.webkit.WebSettings: void setMediaPlaybackRequiresUserGesture(boolean)>
<android.net.LinkAddress: int getFlags()>
<android.view.animation.GridLayoutAnimationController: void <init>(android.view.animation.Animation,float,float)>
<android.net.IpPrefix: void <init>(java.net.InetAddress,int)>
<android.renderscript.Long4: void addAt(int,long)>
<com.android.internal.telecom.ITelecomService: boolean isInCall()>
<android.media.ThumbnailUtils: android.graphics.Bitmap createVideoThumbnail(java.lang.String,int)>
<android.telephony.TelephonyManager: java.lang.String getMsisdn(long)>
<com.android.internal.app.ProcessStats: void <init>(android.os.Parcel)>
<android.hardware.camera2.params.TonemapCurve: android.graphics.PointF getPoint(int,int)>
<com.android.internal.inputmethod.InputMethodUtils: java.util.ArrayList getSubtypes(android.view.inputmethod.InputMethodInfo)>
<android.nfc.tech.MifareClassic: int getMaxTransceiveLength()>
<android.net.http.DelegatingSSLSession: java.security.Principal getLocalPrincipal()>
<com.android.internal.view.menu.MenuBuilder: void startDispatchingItemsChanged()>
<android.view.View: void setScrollContainer(boolean)>
<android.app.ActivityManagerProxy: void getMemoryInfo(android.app.ActivityManager.MemoryInfo)>
<android.content.res.Configuration: void makeDefault()>
<android.graphics.drawable.NinePatchDrawable: int getIntrinsicWidth()>
<android.os.Looper: void quitSafely()>
<com.android.internal.widget.WaveView: void setOnTriggerListener(com.android.internal.widget.WaveView.OnTriggerListener)>
<android.view.WindowManagerImpl: void updateViewLayout(android.view.View,android.view.ViewGroup.LayoutParams)>
<android.bluetooth.BluetoothAudioConfig: java.lang.String toString()>
<android.app.ActivityManagerProxy: android.os.ParcelFileDescriptor openContentUri(android.net.Uri)>
<android.opengl.GLES31Ext: void glBlendBarrierKHR()>
<android.print.PrintJobInfo: android.print.PrintDocumentInfo getDocumentInfo()>
<android.text.style.BackgroundColorSpan: void <init>(android.os.Parcel)>
<android.widget.ImageView: void setImageTintMode(android.graphics.PorterDuff.Mode)>
<android.renderscript.FieldPacker: android.renderscript.Int4 subInt4()>
<android.net.wifi.IWifiManager: boolean removeNetwork(int)>
<android.alsa.AlsaDevicesParser: int getNumDeviceRecords()>
<android.widget.TextView: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
<android.renderscript.Float4: void copyTo(float[],int)>
<android.util.LongArray: void clear()>
<android.widget.CursorTreeAdapter: void notifyDataSetChanged(boolean)>
<android.filterfw.core.GLEnvironment: boolean isAnyContextActive()>
<android.media.AudioTrack.OnPlaybackPositionUpdateListener: void onMarkerReached(android.media.AudioTrack)>
<com.android.internal.http.multipart.FilePart: void <init>(java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>
<android.widget.ActivityChooserView: boolean dismissPopup()>
<android.telecom.DisconnectCause: java.lang.String getReason()>
<android.app.MediaRouteButton: void <init>(android.content.Context,android.util.AttributeSet)>
<android.view.ViewRootImpl: android.view.View focusSearch(android.view.View,int)>
<android.app.job.IJobCallback: void acknowledgeStopMessage(int,boolean)>
<android.filterfw.format.PrimitiveFormat: android.filterfw.core.MutableFrameFormat createInt32Format(int,int)>
<android.app.ActionBar: android.content.Context getThemedContext()>
<android.hardware.camera2.impl.CameraMetadataNative.Key: void <init>(java.lang.String,java.lang.Class)>
<android.location.Criteria: void setBearingAccuracy(int)>
<android.webkit.WebView: void emulateShiftHeld()>
<android.app.ActivityManagerProxy: void hang(android.os.IBinder,boolean)>
<com.android.internal.widget.ActionBarOverlayLayout: void dismissPopups()>
<android.app.admin.DevicePolicyManager: boolean hasGrantedPolicy(android.content.ComponentName,int)>
<android.media.session.MediaSessionManager: java.util.List getActiveSessions(android.content.ComponentName)>
<android.net.wifi.WifiConfiguration: java.lang.String getKeyIdForCredentials(android.net.wifi.WifiConfiguration)>
<android.net.nsd.NsdManager.DiscoveryListener: void onStopDiscoveryFailed(java.lang.String,int)>
<android.widget.ListPopupWindow: void setSoftInputMode(int)>
<android.view.accessibility.AccessibilityRecord: boolean isPassword()>
<android.content.IntentFilter: void addDataPath(java.lang.String,int)>
<android.app.IApplicationThread: void bindApplication(java.lang.String,android.content.pm.ApplicationInfo,java.util.List,android.content.ComponentName,android.app.ProfilerInfo,android.os.Bundle,android.app.IInstrumentationWatcher,android.app.IUiAutomationConnection,int,boolean,boolean,boolean,android.content.res.Configuration,android.content.res.CompatibilityInfo,java.util.Map,android.os.Bundle)>
<android.provider.ContactsContract.Contacts: android.net.Uri getLookupUri(long,java.lang.String)>
<android.view.WindowCallbackWrapper: void onAttachedToWindow()>
<android.content.CursorLoader: void cancelLoadInBackground()>
<android.service.fingerprint.FingerprintManagerReceiver: void onRemoved(int)>
<android.accounts.AbstractAccountAuthenticator: android.os.IBinder getIBinder()>
<android.app.FragmentManagerState: void writeToParcel(android.os.Parcel,int)>
<android.opengl.ETC1Util: void writeTexture(android.opengl.ETC1Util.ETC1Texture,java.io.OutputStream)>
<android.opengl.GLES11Ext: boolean glIsRenderbufferOES(int)>
<android.content.pm.IPackageInstaller: void abandonSession(int)>
<com.android.internal.util.AsyncChannel: void replyToMessage(android.os.Message,int,int)>
<android.media.tv.ITvInputClient: void onChannelRetuned(android.net.Uri,int)>
<android.filterfw.geometry.Point: android.filterfw.geometry.Point rotated90(int)>
<android.view.ViewTreeObserver: void removeOnComputeInternalInsetsListener(android.view.ViewTreeObserver.OnComputeInternalInsetsListener)>
<android.widget.Toast: android.view.View getView()>
<android.renderscript.Long2: android.renderscript.Long2 sub(android.renderscript.Long2,android.renderscript.Long2)>
<android.net.LinkProperties: void setInterfaceName(java.lang.String)>
<android.hardware.camera2.impl.CameraDeviceImpl.CameraDeviceCallbacks: void onCaptureStarted(android.hardware.camera2.impl.CaptureResultExtras,long)>
<android.widget.RadialTimePickerView: void onDraw(android.graphics.Canvas)>
<android.net.RouteInfo: android.net.RouteInfo makeHostRoute(java.net.InetAddress,java.net.InetAddress,java.lang.String)>
<android.os.IBinder: java.lang.String getInterfaceDescriptor()>
<android.view.inputmethod.BaseInputConnection: boolean setComposingText(java.lang.CharSequence,int)>
<android.app.Notification.BigPictureStyle: void populateBigContentView(android.app.Notification)>
<android.graphics.Paint: boolean isLinearText()>
<android.view.View: void onScreenStateChanged(int)>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[])>
<android.os.BaseBundle: java.lang.Object get(java.lang.String)>
<android.app.Activity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.telecom.Call.Details: long getConnectTimeMillis()>
<android.content.pm.ActivityInfo: int getRealConfigChanged()>
<android.widget.ExpandableListView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.QuickContactBadge: void assignContactUri(android.net.Uri)>
<android.os.PerformanceCollector.PerformanceResultsWriter: void writeBeginSnapshot(java.lang.String)>
<android.view.View: void drawableStateChanged()>
<android.filterfw.core.NativeBuffer: int count()>
<android.bluetooth.BluetoothGattCharacteristic: boolean setValue(int,int,int,int)>
<android.renderscript.Program: void bindSampler(android.renderscript.Sampler,int)>
<android.app.backup.BackupDataInputStream: int read()>
<android.filterfw.core.Program: void reset()>
<android.widget.TextView: void setText(java.lang.CharSequence)>
<android.view.MotionEvent: android.view.MotionEvent split(int)>
<android.hardware.hdmi.IHdmiControlService: void addSystemAudioModeChangeListener(android.hardware.hdmi.IHdmiSystemAudioModeChangeListener)>
<android.widget.TimePicker: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.app.IActivityManager: android.content.ComponentName startService(android.app.IApplicationThread,android.content.Intent,java.lang.String,int)>
<android.opengl.GLES31Ext: void glDisableiEXT(int,int)>
<android.database.AbstractCursor: boolean moveToPosition(int)>
<android.database.CursorWindow: android.database.CursorWindow newFromParcel(android.os.Parcel)>
<android.database.IBulkCursor: void close()>
<android.media.ThumbnailUtils: android.graphics.Bitmap extractThumbnail(android.graphics.Bitmap,int,int)>
<android.os.Messenger: android.os.IBinder getBinder()>
<android.app.ActionBar: void setHideOnContentScrollEnabled(boolean)>
<android.content.pm.ConfigurationInfo: void writeToParcel(android.os.Parcel,int)>
<com.google.android.gles_jni.GLImpl: boolean glIsEnabled(int)>
<android.text.Selection: void setSelection(android.text.Spannable,int,int)>
<android.text.style.ImageSpan: void <init>(android.graphics.Bitmap)>
<android.net.wifi.WifiManager: int getFrequencyBand()>
<android.provider.CalendarContract.CalendarEntity: android.content.EntityIterator newEntityIterator(android.database.Cursor)>
<android.animation.AnimatorSet: void setTarget(java.lang.Object)>
<android.filterpacks.imageproc.FlipFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>
<android.renderscript.Long2: android.renderscript.Long2 sub(android.renderscript.Long2,long)>
<android.media.session.ISession: void setMetadata(android.media.MediaMetadata)>
<android.view.Window.Callback: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.content.pm.PackageManager: boolean setApplicationHiddenSettingAsUser(java.lang.String,boolean,android.os.UserHandle)>
<android.content.CursorLoader: void <init>(android.content.Context)>
<android.accessibilityservice.AccessibilityService.Callbacks: void onServiceConnected()>
<android.widget.ActionMenuView: void onDetachedFromWindow()>
<android.net.wifi.WifiManager: void <init>(android.content.Context,android.net.wifi.IWifiManager)>
<android.media.MediaCodecList: android.media.MediaCodecInfo getInfoFor(java.lang.String)>
<android.widget.TabWidget.OnTabSelectionChanged: void onTabSelectionChanged(int,boolean)>
<android.widget.ImageButton: boolean onSetAlpha(int)>
<android.os.IUserManager: android.os.Bundle getApplicationRestrictionsForUser(java.lang.String,int)>
<android.renderscript.Float4: void sub(float)>
<android.widget.TextView: void computeScroll()>
<android.view.ViewRootImpl: void requestFitSystemWindows()>
<android.app.IntentService: void onStart(android.content.Intent,int)>
<android.location.IGpsGeofenceHardware: boolean resumeHardwareGeofence(int,int)>
<android.content.SyncContext: void onFinished(android.content.SyncResult)>
<android.opengl.GLES20: void glGenTextures(int,java.nio.IntBuffer)>
<android.text.style.TtsSpan.MoneyBuilder: android.text.style.TtsSpan.MoneyBuilder setQuantity(java.lang.String)>
<com.android.internal.widget.AbsActionBarView.VisibilityAnimListener: void onAnimationStart(android.animation.Animator)>
<com.android.internal.util.TypedProperties: short getShort(java.lang.String)>
<com.android.internal.os.BatteryStatsImpl.Uid.Pkg: java.util.Map getServiceStats()>
<android.media.AudioService: int getMaxStreamVolume(int)>
<android.os.UserManager: android.os.UserManager get(android.content.Context)>
<android.transition.Transition: android.transition.PathMotion getPathMotion()>
<com.android.internal.widget.ScrollingTabContainerView: void updateTab(int)>
<android.app.MediaRouteButton: void setVisibility(int)>
<android.database.sqlite.SQLiteException: void <init>(java.lang.String)>
<android.view.View.MeasureSpec: int getSize(int)>
<android.accessibilityservice.AccessibilityServiceInfo: void updateDynamicallyConfigurableProperties(android.accessibilityservice.AccessibilityServiceInfo)>
<android.widget.RemoteViewsListAdapter: int getViewTypeCount()>
<android.animation.PropertyValuesHolder: void setEvaluator(android.animation.TypeEvaluator)>
<android.widget.CheckedTextView: void onDraw(android.graphics.Canvas)>
<android.net.DhcpResults: boolean setIpAddress(java.lang.String,int)>
<android.provider.Settings.SettingNotFoundException: void <init>(java.lang.String)>
<android.provider.Settings.Bookmarks: android.net.Uri add(android.content.ContentResolver,android.content.Intent,java.lang.String,java.lang.String,char,int)>
<android.net.wifi.WifiScanner: void startTrackingBssids(android.net.wifi.WifiScanner.BssidInfo[],int,android.net.wifi.WifiScanner.BssidListener)>
<android.accounts.NetworkErrorException: void <init>(java.lang.Throwable)>
<android.security.IKeystoreService: int ungrant(java.lang.String,int)>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder penaltyDropBox()>
<android.widget.Scroller: void <init>(android.content.Context)>
<android.widget.HorizontalScrollView: void fling(int)>
<com.android.internal.widget.ResolverDrawerLayout: void computeScroll()>
<android.renderscript.Int4: android.renderscript.Int4 add(android.renderscript.Int4,android.renderscript.Int4)>
<android.net.NetworkStats: android.net.NetworkStats withoutUids(int[])>
<android.os.Messenger: void writeToParcel(android.os.Parcel,int)>
<android.app.IBackupAgent: void doRestore(android.os.ParcelFileDescriptor,int,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager)>
<android.os.IUserManager: boolean markGuestForDeletion(int)>
<android.speech.IRecognitionService: void stopListening(android.speech.IRecognitionListener)>
<android.app.ActivityThread: java.lang.String getProcessName()>
<android.os.IVibratorService: void vibrate(int,java.lang.String,long,int,android.os.IBinder)>
<android.text.method.MetaKeyKeyListener: int getMetaState(java.lang.CharSequence,int)>
<android.content.Context: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle)>
<android.app.Service: void onCreate()>
<android.opengl.GLES20: java.lang.String glGetString(int)>
<android.net.LinkAddress: boolean isSameAddressAs(android.net.LinkAddress)>
<android.app.IActivityManager: void releaseSomeActivities(android.app.IApplicationThread)>
<android.opengl.GLES20: void glGetFramebufferAttachmentParameteriv(int,int,int,int[],int)>
<android.media.audiofx.Visualizer: int getCaptureSize()>
<android.os.UserManager: android.content.pm.UserInfo getUserInfo(int)>
<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getDeviceIdForSubscriber(long)>
<android.widget.SlidingDrawer: android.view.View getHandle()>
<android.view.WindowCallbackWrapper: void onDetachedFromWindow()>
<com.android.ims.ImsCallProfile: boolean getCallExtraBoolean(java.lang.String,boolean)>
<android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>
<android.graphics.Paint: float getStrokeMiter()>
<android.telephony.CellInfoWcdma: void <init>(android.telephony.CellInfoWcdma)>
<com.android.internal.os.WrapperInit: void execApplication(java.lang.String,java.lang.String,int,java.io.FileDescriptor,java.lang.String[])>
<android.filterfw.core.InputPort: void open()>
<android.media.tv.TvTrackInfo: java.lang.String getId()>
<android.view.ViewRootImpl: void dispatchMoved(int,int)>
<android.filterpacks.performance.Throughput: float getFramesPerSecond()>
<android.view.KeyEvent: int getModifiers()>
<android.media.session.MediaSession.CallbackStub: void onFastForward()>
<com.android.internal.policy.IKeyguardService: void onActivityDrawn()>
<android.app.AlertDialog: void setButton2(java.lang.CharSequence,android.content.DialogInterface.OnClickListener)>
<android.nfc.INfcTag: void resetTimeouts()>
<android.widget.AdapterViewAnimator: int getBaseline()>
<android.media.session.MediaSessionLegacyHelper: void addRccListener(android.app.PendingIntent,android.media.session.MediaSession.Callback)>
<android.widget.LinearLayout.LayoutParams: void <init>(int,int,float)>
<android.webkit.WebViewFactoryProvider: android.webkit.WebStorage getWebStorage()>
<com.android.internal.app.ToolbarActionBar: void setDefaultDisplayHomeAsUpEnabled(boolean)>
<com.android.ims.internal.IImsCallSession: void removeParticipants(java.lang.String[])>
<android.opengl.GLES31: void glProgramUniform4fv(int,int,int,java.nio.FloatBuffer)>
<android.view.ViewParent: android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect)>
<android.filterpacks.imageproc.RedEyeFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<android.app.SharedElementCallback: void onRejectSharedElements(java.util.List)>
<android.os.INetworkManagementService: void setInterfaceAlert(java.lang.String,long)>
<android.app.ActivityManagerProxy: java.lang.String getProviderMimeType(android.net.Uri,int)>
<android.app.AppOpsManager: int checkAudioOpNoThrow(int,int,int,java.lang.String)>
<android.database.CursorIndexOutOfBoundsException: void <init>(java.lang.String)>
<android.view.MenuItem: boolean isCheckable()>
<android.view.WindowManagerPolicy: boolean rotationHasCompatibleMetricsLw(int,int)>
<android.widget.ArrayAdapter: void clear()>
<android.widget.TextView: void setMaxHeight(int)>
<com.google.android.util.AbstractMessageParser.Part: java.lang.String getRawText()>
<android.graphics.drawable.StateListDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>
<android.net.http.AndroidHttpClient: long getMinGzipSize(android.content.ContentResolver)>
<android.widget.CursorAdapter: java.lang.Object getItem(int)>
<android.opengl.Matrix: void perspectiveM(float[],int,float,float,float,float)>
<android.app.AlertDialog: void setInverseBackgroundForced(boolean)>
<android.content.pm.RegisteredServicesCache: android.content.pm.RegisteredServicesCache.ServiceInfo getServiceInfo(java.lang.Object,int)>
<android.content.ComponentName: android.content.ComponentName clone()>
<android.media.tv.TvContract: android.net.Uri buildChannelsUriForInput(java.lang.String,java.lang.String,boolean)>
<android.graphics.drawable.shapes.PathShape: android.graphics.drawable.shapes.PathShape clone()>
<android.media.MediaPlayer.OnInfoListener: boolean onInfo(android.media.MediaPlayer,int,int)>
<android.app.ActionBar.Tab: android.app.ActionBar.Tab setCustomView(android.view.View)>
<android.widget.ViewAnimator: void setDisplayedChild(int)>
<android.view.animation.AnticipateInterpolator: void <init>(android.content.res.Resources,android.content.res.Resources.Theme,android.util.AttributeSet)>
<com.android.internal.util.FastXmlSerializer: void setProperty(java.lang.String,java.lang.Object)>
<android.service.notification.NotificationListenerService: void registerAsSystemService(android.content.Context,android.content.ComponentName,int)>
<android.hardware.camera2.CameraCharacteristics: java.util.List getAvailableCaptureRequestKeys()>
<android.app.Notification.Builder: android.app.Notification.Builder setVibrate(long[])>
<android.media.ResampleInputStream: void close()>
<android.media.tv.ITvInputHardware: void setStreamVolume(float)>
<android.widget.PopupWindow: void update()>
<android.database.sqlite.SQLiteStatement: java.lang.String simpleQueryForString()>
<android.view.WindowInsets: int getSystemWindowInsetBottom()>
<android.text.style.BulletSpan: int getLeadingMargin(boolean)>
<android.renderscript.Element: android.renderscript.Element YUV(android.renderscript.RenderScript)>
<android.view.ViewGroup.MarginLayoutParams: void resolveLayoutDirection(int)>
<android.location.Geofence: float getRadius()>
<android.net.NetworkPolicyManager: void setNetworkPolicies(android.net.NetworkPolicy[])>
<android.view.accessibility.AccessibilityRecord: void setMaxScrollY(int)>
<android.security.Credentials: android.security.Credentials getInstance()>
<android.animation.ValueAnimator: boolean isStarted()>
<android.net.DhcpStateMachine: void registerForPreDhcpNotification()>
<android.text.Spanned: int nextSpanTransition(int,int,java.lang.Class)>
<android.media.SoundPool.SoundPoolDelegate: void setOnLoadCompleteListener(android.media.SoundPool.OnLoadCompleteListener)>
<com.android.internal.telephony.ITelephonyRegistry: void notifyDataConnection(int,boolean,java.lang.String,java.lang.String,java.lang.String,android.net.LinkProperties,android.net.NetworkCapabilities,int,boolean)>
<android.view.ViewGroup: void addChildrenForAccessibility(java.util.ArrayList)>
<android.preference.TwoStatePreference: java.lang.CharSequence getSummaryOn()>
<android.content.ContentResolver: java.util.List getOutgoingPersistedUriPermissions()>
<android.widget.LinearLayout: void setShowDividers(int)>
<android.drm.DrmInfoRequest: void <init>(int,java.lang.String)>
<android.bluetooth.BluetoothGattServer: boolean addService(android.bluetooth.BluetoothGattService)>
<android.graphics.Matrix: int hashCode()>
<android.app.ActivityManager: java.util.List getRunningAppProcesses()>
<android.telephony.CellInfo: int getTimeStampType()>
<android.hardware.location.IActivityRecognitionHardware: boolean isActivitySupported(java.lang.String)>
<android.filterpacks.base.FrameBranch: void process(android.filterfw.core.FilterContext)>
<android.hardware.camera2.params.HighSpeedVideoConfiguration: android.util.Size getSize()>
<android.webkit.WebView: android.webkit.WebBackForwardList copyBackForwardList()>
<com.android.internal.os.BatteryStatsImpl.Uid.Pkg.Serv: void startRunningLocked()>
<android.webkit.WebSettings: int getMixedContentMode()>
<android.opengl.Matrix: void rotateM(float[],int,float,float,float,float)>
<com.android.internal.util.FileRotator.Rewriter: boolean shouldWrite()>
<android.media.MediaMetadataRetriever: java.lang.String extractMetadata(int)>
<android.widget.RatingBar: boolean isIndicator()>
<android.view.View: void setFocusable(boolean)>
<com.android.internal.os.ProcessCpuTracker: int getLastIrqTime()>
<com.android.internal.os.BatteryStatsImpl.StopwatchTimer: int computeCurrentCountLocked()>
<android.media.IRemoteControlDisplay: void setTransportControlInfo(int,int,int)>
<android.media.ClosedCaptionWidget: void setSize(int,int)>
<android.os.BatteryManagerInternal: int getPlugType()>
<android.media.audiofx.Visualizer: int setCaptureSize(int)>
<android.webkit.WebResourceResponse: void setData(java.io.InputStream)>
<com.android.internal.view.menu.IconMenuPresenter: void onRestoreInstanceState(android.os.Parcelable)>
<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(android.content.Context,long,boolean)>
<android.widget.ExpandableListView: void setIndicatorBoundsRelative(int,int)>
<android.os.PowerManager: boolean isPowerSaveMode()>
<android.service.notification.StatusBarNotification: int getInitialPid()>
<com.android.internal.widget.RotarySelector: void setRightHandleResource(int)>
<android.content.UndoManager: void setHistorySize(int)>
<android.emoji.EmojiFactory: int getMaximumAndroidPua()>
<android.media.IAudioService: void playSoundEffectVolume(int,float)>
<android.app.AppOpsManager.OnOpChangedInternalListener: void onOpChanged(java.lang.String,java.lang.String)>
<android.net.LinkQualityInfo: void writeToParcel(android.os.Parcel,int,int)>
<android.os.AsyncTask: android.os.AsyncTask.Status getStatus()>
<android.speech.tts.SynthesisCallback: void error(int)>
<android.app.MediaRouteButton: void onDetachedFromWindow()>
<android.widget.TableRow: android.widget.LinearLayout.LayoutParams generateDefaultLayoutParams()>
<android.media.session.ISession: void setFlags(int)>
<android.content.IntentFilter: java.lang.String getAction(int)>
<com.google.android.gles_jni.GLImpl: void glTexEnvxv(int,int,java.nio.IntBuffer)>
<android.os.BaseBundle: double[] getDoubleArray(java.lang.String)>
<android.widget.AutoCompleteTextView: void onDetachedFromWindow()>
<android.text.ClipboardManager: boolean hasText()>
<android.animation.Keyframes: java.lang.Object getValue(float)>
<android.content.pm.KeySet: android.os.IBinder getToken()>
<android.view.ViewGroup: void setTransitionGroup(boolean)>
<android.app.PackageInstallObserver: void onUserActionRequired(android.content.Intent)>
<android.accounts.GrantCredentialsPermissionActivity: void onCreate(android.os.Bundle)>
<android.os.Binder: void linkToDeath(android.os.IBinder.DeathRecipient,int)>
<android.widget.ListView: void dispatchDraw(android.graphics.Canvas)>
<android.net.NetworkState: void <init>(android.os.Parcel)>
<android.opengl.GLES20: void glDepthMask(boolean)>
<android.os.Parcel: long[] createLongArray()>
<android.graphics.drawable.LevelListDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>
<android.security.KeyChain: android.security.KeyChain.KeyChainConnection bind(android.content.Context)>
<android.text.DynamicLayout: void <init>(java.lang.CharSequence,java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,android.text.TextDirectionHeuristic,float,float,boolean,android.text.TextUtils.TruncateAt,int)>
<android.renderscript.Byte4: byte get(int)>
<android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setMinimumLatency(long)>
<android.widget.AbsListView: boolean isInFilterMode()>
<android.opengl.Matrix: void setLookAtM(float[],int,float,float,float,float,float,float,float,float,float)>
<android.util.JsonReader: boolean hasNext()>
<android.media.SoundPool.SoundPoolDelegate: int load(android.content.res.AssetFileDescriptor,int)>
<android.telecom.RemoteConnection.Callback: void onDisconnected(android.telecom.RemoteConnection,android.telecom.DisconnectCause)>
<com.android.internal.view.ActionBarPolicy: boolean enableHomeButtonByDefault()>
<android.content.res.AssetManager.AssetInputStream: boolean markSupported()>
<com.android.internal.util.GrowingArrayUtils: long[] insert(long[],int,int,long)>
<android.opengl.GLES20: void glUniform1iv(int,int,int[],int)>
<android.media.audiopolicy.AudioMix.Builder: android.media.audiopolicy.AudioMix.Builder setMixingRule(android.media.audiopolicy.AudioMixingRule)>
<android.view.View: void notifyViewAccessibilityStateChangedIfNeeded(int)>
<com.android.internal.widget.ExploreByTouchHelper: boolean onPerformActionForVirtualView(int,int,android.os.Bundle)>
<android.service.dreams.DreamService: void finish()>
<android.drm.DrmManagerClient: void installDrmEngine(java.lang.String)>
<android.view.View: int getBaseline()>
<android.os.SystemClock: boolean setCurrentTimeMillis(long)>
<android.bluetooth.IBluetooth: boolean setPhonebookAccessPermission(android.bluetooth.BluetoothDevice,int)>
<com.android.internal.app.IBatteryStats: void noteStartVideo(int)>
<android.widget.ListView: int getMaxScrollAmount()>
<android.location.GpsNavigationMessageEvent: android.location.GpsNavigationMessage getNavigationMessage()>
<android.app.RemoteInput: java.lang.CharSequence[] getChoices()>
<android.renderscript.Type: int getCount()>
<com.android.internal.app.ProcessStats.ProcessState: void addPss(long,long,boolean,android.util.ArrayMap)>
<android.nfc.NfcAdapter: void setOnNdefPushCompleteCallback(android.nfc.NfcAdapter.OnNdefPushCompleteCallback,android.app.Activity,android.app.Activity[])>
<android.util.JsonWriter: android.util.JsonWriter endArray()>
<android.hardware.soundtrigger.SoundTrigger.KeyphraseRecognitionEvent: void <init>(int,int,boolean,int,int,int,boolean,android.media.AudioFormat,byte[],android.hardware.soundtrigger.SoundTrigger.KeyphraseRecognitionExtra[])>
<android.view.View: void onDetachedFromWindow()>
<android.location.GpsMeasurement: boolean isUsedInFix()>
<android.content.pm.PackageItemInfo: android.graphics.drawable.Drawable loadLogo(android.content.pm.PackageManager)>
<android.bluetooth.IBluetoothPan: boolean disconnect(android.bluetooth.BluetoothDevice)>
<android.content.ContextWrapper: void startActivityAsUser(android.content.Intent,android.os.UserHandle)>
<android.widget.RemoteViews: void setCharSequence(int,java.lang.String,java.lang.CharSequence)>
<android.hardware.camera2.CaptureRequest: java.util.Collection getTargets()>
<android.bluetooth.BluetoothDevice: boolean equals(java.lang.Object)>
<android.view.View: android.view.RenderNode getDisplayList()>
<android.telecom.RemoteConnection: int getAddressPresentation()>
<android.database.DatabaseUtils: long longForQuery(android.database.sqlite.SQLiteStatement,java.lang.String[])>
<android.os.Debug: boolean dumpService(java.lang.String,java.io.FileDescriptor,java.lang.String[])>
<android.view.inputmethod.InputMethodInfo: void <init>(android.content.Context,android.content.pm.ResolveInfo,java.util.Map)>
<android.renderscript.Double4: double elementSum()>
<android.view.accessibility.AccessibilityNodeInfo: boolean equals(java.lang.Object)>
<android.renderscript.Sampler: android.renderscript.Sampler WRAP_LINEAR_MIP_LINEAR(android.renderscript.RenderScript)>
<android.view.ViewRootImpl: boolean showContextMenuForChild(android.view.View)>
<android.media.audiofx.AudioEffect.OnParameterChangeListener: void onParameterChange(android.media.audiofx.AudioEffect,int,byte[],byte[])>
<android.graphics.drawable.AnimatedRotateDrawable: void draw(android.graphics.Canvas)>
<android.webkit.WebView: void destroy()>
<android.app.Notification.BigPictureStyle: void restoreFromExtras(android.os.Bundle)>
<android.webkit.WebView.PrivateAccess: float getVerticalScrollFactor()>
<com.android.internal.app.MediaRouteControllerDialog: android.view.View getMediaControlView()>
<android.os.Bundle: void putByte(java.lang.String,byte)>
<android.graphics.Canvas: void rotate(float,float,float)>
<com.google.android.gles_jni.GLImpl: void glGetTexGenxv(int,int,int[],int)>
<com.android.internal.os.InstallerConnection: int dexopt(java.lang.String,int,boolean,java.lang.String)>
<android.net.ConnectivityManager: void unregisterNetworkFactory(android.os.Messenger)>
<com.android.internal.view.menu.IconMenuPresenter: void updateMenuView(boolean)>
<android.widget.MediaController.MediaPlayerControl: void pause()>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLength(android.content.ComponentName)>
<android.database.CursorWrapper: java.lang.String[] getColumnNames()>
<android.media.AudioManager: void setRingerMode(int)>
<android.net.wifi.p2p.WifiP2pManager.HandoverMessageListener: void onHandoverMessageAvailable(java.lang.String)>
<android.media.AudioService: void setVibrateSetting(int,int)>
<android.webkit.WebViewProvider: android.webkit.WebBackForwardList restoreState(android.os.Bundle)>
<android.telecom.Connection: android.telecom.AudioState getAudioState()>
<android.app.Activity: void onRestoreInstanceState(android.os.Bundle,android.os.PersistableBundle)>
<android.hardware.usb.UsbManager: void <init>(android.content.Context,android.hardware.usb.IUsbManager)>
<android.content.pm.PackageManager: android.content.pm.KeySet getKeySetByAlias(java.lang.String,java.lang.String)>
<android.telecom.Call.Listener: void onStateChanged(android.telecom.Call,int)>
<com.android.internal.widget.RotarySelector.OnDialTriggerListener: void onDialTrigger(android.view.View,int)>
<android.accounts.IAccountAuthenticator: void getAuthTokenLabel(android.accounts.IAccountAuthenticatorResponse,java.lang.String)>
<android.hardware.camera2.utils.TaskSingleDrainer: void taskStarted()>
<android.app.IActivityManager: java.util.List getServices(int,int)>
<android.app.Notification.Builder: android.app.Notification.Builder setProgress(int,int,boolean)>
<android.view.WindowManagerPolicy: void lockNow(android.os.Bundle)>
<android.opengl.GLES11Ext: int glCheckFramebufferStatusOES(int)>
<android.app.IActivityManager: void handleApplicationStrictModeViolation(android.os.IBinder,int,android.os.StrictMode.ViolationInfo)>
<android.app.ActivityManager: boolean isInLockTaskMode()>
<android.net.wifi.WifiManager: boolean isEnhancedPowerReportingSupported()>
<android.text.method.TextKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>
<android.app.Fragment: void onAttach(android.app.Activity)>
<com.android.internal.widget.DecorToolbar: android.view.View getCustomView()>
<android.location.Address: double getLatitude()>
<android.net.UrlQuerySanitizer: void parseEntry(java.lang.String,java.lang.String)>
<android.text.style.AbsoluteSizeSpan: void <init>(android.os.Parcel)>
<android.inputmethodservice.InputMethodService: void setCandidatesViewShown(boolean)>
<android.os.BatteryStats.Uid: void noteWifiScanStartedLocked(long)>
<android.filterfw.core.NativeBuffer: android.filterfw.core.NativeBuffer mutableCopy()>
<android.widget.AbsListView: boolean checkInputConnectionProxy(android.view.View)>
<android.view.ViewRootImpl: void handleDispatchDoneAnimating()>
<android.media.IMediaHTTPConnection: int readAt(long,int)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>
<com.android.internal.widget.ILockSettings: long getLong(java.lang.String,long,int)>
<android.text.style.TextAppearanceSpan: void updateMeasureState(android.text.TextPaint)>
<android.app.FragmentTransaction: android.app.FragmentTransaction setTransition(int)>
<android.location.Location: void removeAccuracy()>
<android.view.View: void resetResolvedDrawables()>
<android.os.BatteryStats.HistoryItem: boolean same(android.os.BatteryStats.HistoryItem)>
<android.content.res.Configuration: int getLayoutDirection()>
<android.media.JetPlayer: boolean queueJetSegment(int,int,int,int,int,byte)>
<com.android.internal.widget.ActionBarOverlayLayout: void restoreToolbarHierarchyState(android.util.SparseArray)>
<android.app.ApplicationThreadProxy: void scheduleTranslucentConversionComplete(android.os.IBinder,boolean)>
<android.nfc.Tag: int[] getTechCodeList()>
<android.media.AudioManager: boolean isMusicActiveRemotely()>
<android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setRequiresCharging(boolean)>
<android.location.LocationProvider: boolean requiresSatellite()>
<android.widget.CheckBox: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.bluetooth.IBluetoothPbap: boolean isConnected(android.bluetooth.BluetoothDevice)>
<android.view.View: void setElevation(float)>
<android.hardware.soundtrigger.SoundTrigger.KeyphraseRecognitionEvent: boolean equals(java.lang.Object)>
<android.media.AudioService: void startBluetoothSco(android.os.IBinder,int)>
<android.app.FragmentManager: void removeOnBackStackChangedListener(android.app.FragmentManager.OnBackStackChangedListener)>
<android.widget.TextView: float getShadowDx()>
<android.bluetooth.BluetoothUuid: boolean isBnep(android.os.ParcelUuid)>
<android.widget.ListView: void setFooterDividersEnabled(boolean)>
<android.widget.CheckedTextView: void drawableStateChanged()>
<android.drm.DrmManagerClient: android.drm.DrmConvertedStatus closeConvertSession(int)>
<android.net.IpConfiguration: void setProxySettings(android.net.IpConfiguration.ProxySettings)>
<com.android.internal.backup.IBackupTransport: int performFullBackup(android.content.pm.PackageInfo,android.os.ParcelFileDescriptor)>
<android.webkit.WebViewClient: void onTooManyRedirects(android.webkit.WebView,android.os.Message,android.os.Message)>
<android.widget.ProgressBar: android.content.res.ColorStateList getProgressTintList()>
<com.android.internal.view.menu.ListMenuPresenter: android.widget.ListAdapter getAdapter()>
<com.android.internal.os.BatteryStatsHelper: double getMinDrainedPower()>
<com.google.android.gles_jni.GLImpl: void glBlendFuncSeparate(int,int,int,int)>
<android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>
<android.widget.LinearLayout: int getOrientation()>
<android.graphics.RectF: boolean intersects(float,float,float,float)>
<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageOOOOO(int,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
<android.media.MediaMuxer: void writeSampleData(int,java.nio.ByteBuffer,android.media.MediaCodec.BufferInfo)>
<android.bluetooth.BluetoothActivityEnergyInfo: int getControllerTxTimeMillis()>
<android.widget.CompoundButton: int getCompoundPaddingRight()>
<com.android.internal.os.BatteryStatsImpl.Uid.Pkg.Serv: long getStartTime(long,int)>
<android.webkit.UrlInterceptRegistry: void setUrlInterceptDisabled(boolean)>
<android.location.GpsSatellite: float getElevation()>
<com.android.internal.telephony.ISub: int setDisplayNameUsingSrc(java.lang.String,long,long)>
<android.media.session.MediaSession.CallbackStub: void onAdjustVolume(int)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAccountsByTypeAndFeatures(java.lang.String,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)>
<android.app.Dialog: void show()>
<android.view.WindowCallbackWrapper: boolean onPreparePanel(int,android.view.View,android.view.Menu)>
<android.net.IConnectivityManager: void registerNetworkAgent(android.os.Messenger,android.net.NetworkInfo,android.net.LinkProperties,android.net.NetworkCapabilities,int,android.net.NetworkMisc)>
<android.provider.SearchIndexableResource: void <init>(int,int,java.lang.String,int)>
<android.widget.GridView: void setColumnWidth(int)>
<android.webkit.WebView: android.graphics.Picture capturePicture()>
<android.bluetooth.le.ScanFilter: android.os.ParcelUuid getServiceUuidMask()>
<android.graphics.drawable.Drawable: int getMinimumHeight()>
<android.opengl.GLES20: void glEnable(int)>
<android.net.wifi.WifiEnterpriseConfig: java.lang.String getFieldValue(java.lang.String,java.lang.String)>
<android.service.notification.StatusBarNotification: void <init>(java.lang.String,java.lang.String,int,java.lang.String,int,int,int,android.app.Notification,android.os.UserHandle)>
<android.media.tv.ITvInputManager: boolean isSingleSessionActive(int)>
<android.view.SurfaceHolder: android.graphics.Canvas lockCanvas()>
<android.webkit.WebView: int getContentWidth()>
<com.android.internal.widget.AutoScrollHelper: boolean onTouch(android.view.View,android.view.MotionEvent)>
<android.telecom.StatusHints: android.graphics.drawable.Drawable getIcon(android.content.Context)>
<android.graphics.Canvas: boolean getClipBounds(android.graphics.Rect)>
<android.media.MediaCodecInfo.VideoCapabilities: android.util.Range getSupportedFrameRates()>
<android.media.UnstyledTextExtractor: void onLineEnd()>
<android.content.Intent: android.content.Intent setClassName(java.lang.String,java.lang.String)>
<android.database.AbstractCursor: boolean isAfterLast()>
<android.webkit.WebView: void goBackOrForward(int)>
<com.android.internal.view.menu.MenuBuilder: void restoreActionViewStates(android.os.Bundle)>
<android.database.CursorWrapper: boolean isBeforeFirst()>
<android.widget.AdapterView: void onDetachedFromWindow()>
<android.app.ActivityManagerProxy: android.app.ActivityManager.TaskThumbnail getTaskThumbnail(int)>
<android.filterfw.core.Filter: int getNumberOfInputs()>
<android.filterfw.core.GLFrame: void setFloats(float[])>
<android.app.IActivityManager: void moveTaskToFront(int,int,android.os.Bundle)>
<android.filterpacks.ui.SurfaceTargetFilter: void process(android.filterfw.core.FilterContext)>
<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.database.sqlite.SQLiteDatabase: long getPageSize()>
<android.media.AudioManager: int getLastAudibleStreamVolume(int)>
<android.content.ClipData: void addItem(android.content.ClipData.Item)>
<android.app.Notification.Action.WearableExtender: boolean isAvailableOffline()>
<android.bluetooth.le.ScanCallback: void onBatchScanResults(java.util.List)>
<android.media.tv.TvInputManager: java.util.List getTvContentRatingSystemList()>
<android.view.accessibility.AccessibilityNodeInfo: int getTextSelectionStart()>
<android.app.FragmentManagerImpl: void invalidateOptionsMenu()>
<android.media.AudioDevice: int convertDeviceTypeToInternalDevice(int)>
<android.content.Context: void sendBroadcast(android.content.Intent)>
<android.graphics.Matrix: boolean postConcat(android.graphics.Matrix)>
<android.widget.AdapterView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.view.inputmethod.InputMethodSession: void dispatchGenericMotionEvent(int,android.view.MotionEvent,android.view.inputmethod.InputMethodSession.EventCallback)>
<com.android.internal.os.PowerProfile: void <init>(android.content.Context)>
<android.service.voice.VoiceInteractionSession: boolean onKeyLongPress(int,android.view.KeyEvent)>
<android.hardware.Camera.Parameters: java.util.List getSupportedPreviewFrameRates()>
<com.android.internal.widget.ActionBarContainer: void setVisibility(int)>
<android.net.wifi.WifiManager: java.util.List getBatchedScanResults()>
<android.view.WindowAnimationFrameStats: int describeContents()>
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor,long,long)>
<android.os.INetworkManagementService: void removeInterfaceQuota(java.lang.String)>
<com.android.internal.widget.multiwaveview.GlowPadView: int getDirectionDescriptionsResourceId()>
<android.app.backup.IBackupManager: void clearBackupData(java.lang.String,java.lang.String)>
<com.android.internal.view.menu.ActionMenuItem: boolean isVisible()>
<android.database.CursorJoiner: void remove()>
<android.hardware.location.GeofenceHardwareRequest: double getLatitude()>
<com.android.internal.backup.LocalTransport: long requestBackupTime()>
<com.android.internal.net.NetworkStatsFactory: void <init>(java.io.File)>
<com.android.internal.telephony.ISms: boolean isImsSmsSupportedForSubscriber(long)>
<android.telecom.CameraCapabilities: float getMaxZoom()>
<android.os.Environment: java.lang.String getExternalStorageState()>
<android.view.Window.Callback: boolean onSearchRequested()>
<android.widget.TextView: void setGravity(int)>
<android.appwidget.AppWidgetProvider: void onReceive(android.content.Context,android.content.Intent)>
<android.content.Intent: android.content.Intent putStringArrayListExtra(java.lang.String,java.util.ArrayList)>
<android.graphics.drawable.GradientDrawable: void setDither(boolean)>
<android.telephony.PhoneNumberUtils: java.lang.String cdmaCheckAndProcessPlusCodeByNumberFormat(java.lang.String,int,int)>
<com.android.internal.widget.LockPatternUtilsCache: void setString(java.lang.String,java.lang.String,int)>
<android.content.DefaultDataHandler: void ignorableWhitespace(char[],int,int)>
<android.graphics.drawable.ShapeDrawable: void onBoundsChange(android.graphics.Rect)>
<android.view.ViewRootImpl: void dispatchGetNewSurface()>
<android.app.Activity: void setExitSharedElementCallback(android.app.SharedElementCallback)>
<android.telecom.InCallAdapter: void mute(boolean)>
<android.hardware.camera2.DngCreator: void writeByteBuffer(java.io.OutputStream,android.util.Size,java.nio.ByteBuffer,long)>
<android.view.View: android.view.ViewParent getParent()>
<com.android.internal.os.BatteryStatsImpl.Uid: void noteWifiRunningLocked(long)>
<com.android.internal.util.FastXmlSerializer: void cdsect(java.lang.String)>
<com.android.ims.ImsSsInfo: int describeContents()>
<android.nfc.cardemulation.ApduServiceInfo: void <init>(android.content.pm.ResolveInfo,boolean,java.lang.String,java.util.ArrayList,java.util.ArrayList,boolean,int,int)>
<android.os.Process: boolean parseProcLine(byte[],int,int,int[],java.lang.String[],long[],float[])>
<android.renderscript.Element: android.renderscript.Element createPixel(android.renderscript.RenderScript,android.renderscript.Element.DataType,android.renderscript.Element.DataKind)>
<android.app.SearchManager: java.util.List getSearchablesInGlobalSearch()>
<android.opengl.GLES20: java.lang.String glGetShaderInfoLog(int)>
<com.android.internal.view.menu.MenuPopupHelper: void <init>(android.content.Context,com.android.internal.view.menu.MenuBuilder)>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder setOverridesImplicitlyEnabledSubtype(boolean)>
<android.app.IApplicationThread: void scheduleExit()>
<android.os.IBinder: boolean isBinderAlive()>
<com.google.android.util.AbstractMessageParser.Smiley: java.util.List getInfo()>
<com.android.internal.widget.ToolbarWidgetWrapper: void initIndeterminateProgress()>
<android.widget.Gallery.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>
<android.view.ViewGroup: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.hardware.camera2.utils.CloseableLock: void <init>(java.lang.String)>
<com.android.internal.telephony.ISub: void setDefaultSmsSubId(long)>
<android.net.INetworkPolicyManager: int[] getPowerSaveAppIdWhitelist()>
<android.widget.ListView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.provider.DocumentsContract: android.net.Uri buildRootUri(java.lang.String,java.lang.String)>
<android.text.format.Time: boolean parse3339(java.lang.String)>
<android.hardware.camera2.legacy.CameraDeviceState.CameraDeviceStateListener: void onConfiguring()>
<android.telecom.VideoCallImpl: void setCamera(java.lang.String)>
<android.view.ViewTreeObserver: void dispatchOnDraw()>
<android.renderscript.Double3: void mul(double)>
<android.service.textservice.SpellCheckerService.Session: void onCancel()>
<android.opengl.Matrix: void translateM(float[],int,float[],int,float,float,float)>
<android.content.res.Configuration: int describeContents()>
<android.widget.PopupWindow: void update(int,int,int,int,boolean)>
<android.graphics.Canvas: boolean clipRect(float,float,float,float,android.graphics.Region.Op)>
<android.renderscript.Allocation: void copyFrom(android.graphics.Bitmap)>
<android.graphics.drawable.RippleDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>
<android.net.NetworkUtils: java.lang.String getDhcpError()>
<android.widget.TextView: void setError(java.lang.CharSequence)>
<android.graphics.drawable.AnimatedVectorDrawable: void draw(android.graphics.Canvas)>
<android.app.Fragment: java.lang.CharSequence getText(int)>
<android.app.backup.IBackupManager: android.app.backup.IRestoreSession beginRestoreSession(java.lang.String,java.lang.String)>
<android.drm.DrmManagerClient: android.content.ContentValues getConstraints(java.lang.String,int)>
<android.os.StrictMode.ViolationInfo: void writeToParcel(android.os.Parcel,int)>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle getAccountCredentialsForCloning(android.accounts.AccountAuthenticatorResponse,android.accounts.Account)>
<android.text.BoringLayout: boolean getLineContainsTab(int)>
<android.telephony.PhoneNumberUtils: boolean isEmergencyNumber(long,java.lang.String)>
<com.android.internal.backup.IBackupTransport: java.lang.String transportDirName()>
<android.renderscript.Matrix2f: void loadScale(float,float)>
<android.provider.ContactsContract.CommonDataKinds.Organization: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>
<android.opengl.GLES31Ext: void glTexParameterIuivEXT(int,int,java.nio.IntBuffer)>
<android.text.format.DateFormat: java.text.DateFormat getTimeFormat(android.content.Context)>
<android.renderscript.Int4: void negate()>
<android.printservice.PrintJob: android.printservice.PrintDocument getDocument()>
<android.hardware.location.ActivityRecognitionHardware: android.hardware.location.ActivityRecognitionHardware getInstance(android.content.Context)>
<android.hardware.camera2.impl.CameraMetadataNative: void dumpToLog()>
<android.accounts.AccountAndUser: boolean equals(java.lang.Object)>
<android.app.PackageInstallObserver: android.content.pm.IPackageInstallObserver2 getBinder()>
<com.android.ims.internal.IImsCallSessionListener: void callSessionInviteParticipantsRequestDelivered(com.android.ims.internal.IImsCallSession)>
<android.telecom.ConnectionService: void conferenceRemoteConnections(android.telecom.RemoteConnection,android.telecom.RemoteConnection)>
<android.widget.VideoView: void onDetachedFromWindow()>
<android.content.Context: android.graphics.drawable.Drawable peekWallpaper()>
<com.android.internal.os.BatteryStatsImpl: long getPhoneSignalStrengthTime(int,long,int)>
<android.renderscript.Byte4: void copyTo(byte[],int)>
<android.accessibilityservice.AccessibilityService: void onServiceConnected()>
<android.filterfw.core.InputPort: void setSourcePort(android.filterfw.core.OutputPort)>
<android.widget.SearchView: boolean requestFocus(int,android.graphics.Rect)>
<android.util.SizeF: float getWidth()>
<android.content.IntentFilter: void writeToParcel(android.os.Parcel,int)>
<android.view.DisplayInfo: void getAppMetrics(android.util.DisplayMetrics,android.view.DisplayAdjustments)>
<com.android.internal.os.BatteryStatsImpl: void noteResetVideoLocked()>
<android.ddm.DdmRegister: void registerHandlers()>
<android.view.Window: boolean superDispatchKeyEvent(android.view.KeyEvent)>
<android.net.wifi.p2p.WifiP2pDeviceList: void updateStatus(java.lang.String,int)>
<android.text.TextUtils: int getLayoutDirectionFromLocale(java.util.Locale)>
<com.android.internal.os.BatteryStatsImpl: void readSummaryFromParcel(android.os.Parcel)>
<com.android.internal.app.WindowDecorActionBar: void selectTab(android.app.ActionBar.Tab)>
<android.net.wifi.WifiScanner.ScanListener: void onFullResult(android.net.wifi.ScanResult)>
<android.filterfw.core.ShaderProgram: void setTargetRect(float,float,float,float)>
<android.widget.AbsListView.MultiChoiceModeListener: void onItemCheckedStateChanged(android.view.ActionMode,int,long,boolean)>
<android.preference.SeekBarPreference: boolean onKey(android.view.View,int,android.view.KeyEvent)>
<android.filterpacks.videosink.MediaEncoderFilter.OnRecordingDoneListener: void onRecordingDone()>
<android.widget.TabHost.IndicatorStrategy: android.view.View createIndicatorView()>
<android.media.AudioRecord: int read(short[],int,int)>
<android.net.NetworkStatsHistory.ParcelUtils: long[] readLongArray(android.os.Parcel)>
<android.view.RenderNode: boolean offsetLeftAndRight(int)>
<android.net.NetworkMisc: void writeToParcel(android.os.Parcel,int)>
<android.text.SpannableStringBuilder: int getTextWidths(int,int,float[],android.graphics.Paint)>
<android.text.method.TextKeyListener: android.text.method.TextKeyListener getInstance()>
<android.animation.Keyframes.FloatKeyframes: float getFloatValue(float)>
<android.app.ActivityManagerProxy: boolean navigateUpTo(android.os.IBinder,android.content.Intent,int,android.content.Intent)>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator rotationXBy(float)>
<android.net.BaseNetworkStateTracker: void removeStackedLink(android.net.LinkProperties)>
<android.telephony.ServiceState: void setCdmaRoamingIndicator(int)>
<android.telephony.TelephonyManager: java.lang.String getDeviceSoftwareVersion()>
<android.app.IActivityManager: boolean isIntentSenderTargetedToPackage(android.content.IIntentSender)>
<android.telecom.TelecomManager: android.telecom.PhoneAccountHandle getUserSelectedOutgoingPhoneAccount()>
<android.renderscript.Byte3: android.renderscript.Byte3 sub(android.renderscript.Byte3,byte)>
<android.hardware.camera2.params.ColorSpaceTransform: int hashCode()>
<android.renderscript.FieldPacker: android.renderscript.Byte2 subByte2()>
<android.os.RemoteCallbackList: int getRegisteredCallbackCount()>
<android.app.ActivityThread: boolean isProfiling()>
<android.transition.Transition: void setNameOverrides(android.util.ArrayMap)>
<android.accessibilityservice.AccessibilityServiceInfo: boolean equals(java.lang.Object)>
<android.renderscript.RSSurfaceView: android.renderscript.RenderScriptGL getRenderScriptGL()>
<android.service.voice.VoiceInteractionSession: boolean onKeyDown(int,android.view.KeyEvent)>
<android.content.Context: android.content.res.Resources getResources()>
<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setPerformAccessibilityActionResult(boolean,int)>
<android.database.CursorWindow: void setStartPosition(int)>
<com.android.internal.os.BatteryStatsImpl.Uid: void noteWifiStoppedLocked(long)>
<android.preference.PreferenceActivity: void setListFooter(android.view.View)>
<com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>
<android.widget.TimePicker: void setValidationCallback(android.widget.TimePicker.ValidationCallback)>
<android.print.IPrintSpoolerClient: void onPrintJobQueued(android.print.PrintJobInfo)>
<android.media.MediaScanner: void release()>
<android.location.GpsMeasurement: double getAccumulatedDeltaRangeInMeters()>
<android.telecom.StatusHints: void writeToParcel(android.os.Parcel,int)>
<android.view.View: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>
<android.accounts.IAccountManager: void invalidateAuthToken(java.lang.String,java.lang.String)>
<android.os.INetworkManagementService: void addVpnUidRanges(int,android.net.UidRange[])>
<com.android.internal.view.RotationPolicy.RotationPolicyListener: void onChange()>
<android.app.ActionBar: java.lang.CharSequence getSubtitle()>
<android.bluetooth.IBluetooth: int getRemoteClass(android.bluetooth.BluetoothDevice)>
<android.location.Criteria: boolean isCostAllowed()>
<com.android.internal.os.BatteryStatsImpl.Uid.Proc: void incStartsLocked()>
<android.bluetooth.le.ScanRecord: byte[] getServiceData(android.os.ParcelUuid)>
<android.preference.TwoStatePreference: void setSummaryOn(java.lang.CharSequence)>
<android.hardware.display.WifiDisplay: void writeToParcel(android.os.Parcel,int)>
<android.media.AudioTrack: int setAuxEffectSendLevel(float)>
<android.filterfw.core.FieldPort: java.lang.String toString()>
<android.content.Intent: java.util.Set getCategories()>
<android.net.InterfaceConfiguration: int describeContents()>
<android.renderscript.Allocation: void copy1DRangeFromUnchecked(int,int,byte[])>
<com.android.internal.os.BatteryStatsImpl: void notePhoneSignalStrengthLocked(android.telephony.SignalStrength)>
<android.nfc.tech.IsoDep: int getMaxTransceiveLength()>
<android.hardware.camera2.legacy.ParameterUtils: android.hardware.camera2.legacy.ParameterUtils.MeteringData convertMeteringRectangleToLegacy(android.graphics.Rect,android.hardware.camera2.params.MeteringRectangle,android.hardware.camera2.legacy.ParameterUtils.ZoomData)>
<android.database.Cursor: float getFloat(int)>
<android.media.audiofx.Visualizer: int setDataCaptureListener(android.media.audiofx.Visualizer.OnDataCaptureListener,int,boolean,boolean)>
<android.content.UndoManager: boolean hasOperation(android.content.UndoOwner)>
<android.graphics.pdf.PdfEditor: void removePage(int)>
<android.app.usage.UsageStatsManagerInternal: void reportEvent(android.content.ComponentName,int,int)>
<android.net.WebAddress: void setPath(java.lang.String)>
<android.os.RemoteCallbackList: void onCallbackDied(android.os.IInterface,java.lang.Object)>
<android.app.ListFragment: void setListShown(boolean)>
<android.media.RingtoneManager: android.net.Uri getRingtoneUri(int)>
<android.renderscript.Type.Builder: android.renderscript.Type.Builder setMipmaps(boolean)>
<android.opengl.GLES30: void glReadBuffer(int)>
<android.content.ContentResolver: android.content.IContentProvider acquireProvider(android.content.Context,java.lang.String)>
<android.preference.MultiCheckPreference: void setEntries(java.lang.CharSequence[])>
<android.database.DatabaseUtils: void cursorFloatToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: java.util.Map getTxtRecord()>
<android.text.Layout: int getLineBaseline(int)>
<com.android.internal.widget.LockPatternUtilsCache: boolean getBoolean(java.lang.String,boolean,int)>
<android.graphics.drawable.Drawable.Callback: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>
<com.android.net.IProxyService: void stopPacSystem()>
<android.graphics.Path: void offset(float,float)>
<android.graphics.Canvas: int saveLayerAlpha(float,float,float,float,int,int)>
<android.os.Parcel: android.os.Parcel obtain()>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor dup(java.io.FileDescriptor)>
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem.OnMenuItemClickListener)>
<android.renderscript.Long4: void div(android.renderscript.Long4)>
<android.media.MediaDrm: java.util.HashMap queryKeyStatus(byte[])>
<android.telecom.ParcelableConnection: int getState()>
<android.graphics.FontFamily: boolean addFont(java.lang.String)>
<android.os.PowerManager: void goToSleep(long)>
<android.database.sqlite.SQLiteCustomFunction: void <init>(java.lang.String,int,android.database.sqlite.SQLiteDatabase.CustomFunction)>
<android.provider.Browser: void deleteFromHistory(android.content.ContentResolver,java.lang.String)>
<android.renderscript.Int2: android.renderscript.Int2 add(android.renderscript.Int2,android.renderscript.Int2)>
<android.app.IActivityManager: void killApplicationWithAppId(java.lang.String,int,java.lang.String)>
<android.media.MediaCodec: android.media.MediaCodec createEncoderByType(java.lang.String)>
<android.accounts.AuthenticatorDescription: boolean equals(java.lang.Object)>
<android.content.pm.PackageInstaller: void addSessionCallback(android.content.pm.PackageInstaller.SessionCallback)>
<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>
<android.text.method.ArrowKeyMovementMethod: boolean top(android.widget.TextView,android.text.Spannable)>
<com.android.internal.view.IInputMethodManager: void setInputMethod(android.os.IBinder,java.lang.String)>
<android.text.method.MovementMethod: void initialize(android.widget.TextView,android.text.Spannable)>
<android.app.Instrumentation: void sendKeyDownUpSync(int)>
<android.net.LinkProperties.CompareResult: java.lang.String toString()>
<android.opengl.GLES31Ext: void glGetTexParameterIivEXT(int,int,int[],int)>
<android.net.http.AndroidHttpClientConnection: void setSocketTimeout(int)>
<android.content.PeriodicSync: java.lang.String toString()>
<android.net.MobileDataStateTracker: android.net.LinkProperties getLinkProperties()>
<android.os.RegistrantList: void remove(android.os.Handler)>
<android.graphics.Picture: int getWidth()>
<android.webkit.IWebViewUpdateService: void waitForRelroCreationCompleted(boolean)>
<android.view.accessibility.AccessibilityRecord: void setCurrentItemIndex(int)>
<android.view.textservice.SpellCheckerInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>
<android.util.LruCache: java.lang.String toString()>
<android.net.http.AndroidHttpClient: void close()>
<android.gesture.GestureOverlayView.OnGesturingListener: void onGesturingEnded(android.gesture.GestureOverlayView)>
<android.text.style.TtsSpan.CardinalBuilder: void <init>(java.lang.String)>
<android.hardware.camera2.legacy.GLThreadManager: void ignoreNewFrames()>
<android.speech.SpeechRecognizer: void startListening(android.content.Intent)>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder detectDiskReads()>
<android.graphics.ColorMatrixColorFilter: android.graphics.ColorMatrix getColorMatrix()>
<android.app.backup.IRestoreSession: int restorePackage(java.lang.String,android.app.backup.IRestoreObserver)>
<android.net.wifi.p2p.WifiP2pGroup: void setNetworkId(int)>
<android.net.MobileDataStateTracker: void setPolicyDataEnable(boolean)>
<com.android.internal.view.menu.MenuPopupHelper: void setForceShowIcon(boolean)>
<android.media.AudioTrack: int setPlaybackRate(int)>
<android.appwidget.AppWidgetManager: void notifyAppWidgetViewDataChanged(int[],int)>
<android.view.RenderNode: float getPivotX()>
<com.android.internal.widget.PointerLocationView: boolean onKeyUp(int,android.view.KeyEvent)>
<android.content.UndoOperation: android.content.UndoOwner getOwner()>
<android.renderscript.Short3: android.renderscript.Short3 mul(android.renderscript.Short3,android.renderscript.Short3)>
<android.app.LoadedApk: void <init>(android.app.ActivityThread,android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,java.lang.ClassLoader,boolean,boolean,boolean)>
<android.database.AbstractCursor: boolean getWantsAllOnMoveCalls()>
<android.app.UiAutomation: android.accessibilityservice.AccessibilityServiceInfo getServiceInfo()>
<android.content.res.AssetManager: int getGlobalAssetManagerCount()>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,float[])>
<com.android.internal.util.HexDump: java.lang.String toHexString(byte)>
<android.net.http.SslCertificate: android.view.View inflateCertificateView(android.content.Context)>
<com.android.internal.util.XmlUtils: java.util.ArrayList readListXml(java.io.InputStream)>
<android.text.method.KeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>
<android.telecom.Connection.Listener: void onPostDialWait(android.telecom.Connection,java.lang.String)>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDDstOut()>
<android.graphics.Paint: void setTextScaleX(float)>
<android.media.AudioService: boolean isStreamAffectedByMute(int)>
<android.view.View: int getNextFocusLeftId()>
<android.text.format.DateUtils: java.lang.CharSequence getRelativeDateTimeString(android.content.Context,long,long,long,int)>
<android.app.ActionBar: int getHideOffset()>
<android.net.NetworkInfo: java.lang.String getReason()>
<android.nfc.cardemulation.OffHostApduService: android.os.IBinder onBind(android.content.Intent)>
<android.view.View: android.graphics.PorterDuff.Mode getBackgroundTintMode()>
<android.content.Context: boolean deleteFile(java.lang.String)>
<android.database.DatabaseUtils: long queryNumEntries(android.database.sqlite.SQLiteDatabase,java.lang.String)>
<android.graphics.drawable.ClipDrawable: void <init>(android.graphics.drawable.Drawable,int,int)>
<android.animation.ValueAnimator: void setIntValues(int[])>
<android.app.AppOpsManager: int startOp(int)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofKeyframe(java.lang.String,android.animation.Keyframe[])>
<android.bluetooth.BluetoothGattServerCallback: void onConnectionStateChange(android.bluetooth.BluetoothDevice,int,int)>
<android.os.ParcelFileDescriptor: void <init>(android.os.ParcelFileDescriptor)>
<com.android.internal.os.BatteryStatsImpl.Uid.Wakelock: com.android.internal.os.BatteryStatsImpl.StopwatchTimer getStopwatchTimer(int)>
<android.view.WindowManagerPolicy: boolean canMagnifyWindow(int)>
<android.graphics.drawable.AnimatedStateListDrawable: boolean setVisible(boolean,boolean)>
<android.bluetooth.le.BluetoothLeAdvertiser: void startAdvertising(android.bluetooth.le.AdvertiseSettings,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseCallback)>
<android.widget.AutoCompleteTextView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.internal.util.AsyncChannel: void replyToMessage(android.os.Message,int,int,int)>
<android.net.wifi.WifiManager: boolean isPreferredNetworkOffloadSupported()>
<android.view.View: void computeOpaqueFlags()>
<android.net.NetworkTemplate: android.net.NetworkTemplate buildTemplateMobileAll(java.lang.String)>
<android.text.style.SuggestionSpan: java.lang.String getNotificationTargetClassName()>
<android.content.res.Resources: android.util.LongSparseArray getPreloadedDrawables()>
<android.net.ProxyInfo: boolean isValid()>
<android.widget.ListView: boolean areFooterDividersEnabled()>
<android.telephony.TelephonyManager: boolean handlePinMmi(java.lang.String)>
<android.webkit.WebSettings: boolean getMediaPlaybackRequiresUserGesture()>
<com.android.internal.view.BaseIWindow: void dispatchGetNewSurface()>
<android.bluetooth.IBluetoothMap: boolean disconnect(android.bluetooth.BluetoothDevice)>
<android.view.LayoutInflater: android.view.View onCreateView(android.view.View,java.lang.String,android.util.AttributeSet)>
<android.util.ArraySet: void clear()>
<com.android.internal.widget.ActionBarView: void setEmbeddedTabView(com.android.internal.widget.ScrollingTabContainerView)>
<android.net.BaseNetworkStateTracker: void dispatchConfigurationChanged()>
<android.graphics.Paint: int getTextRunCursor(char[],int,int,int,int,int)>
<android.app.job.IJobScheduler: void cancelAll()>
<android.telecom.RemoteConference.Callback: void onConnectionAdded(android.telecom.RemoteConference,android.telecom.RemoteConnection)>
<android.text.method.BaseMovementMethod: boolean canSelectArbitrarily()>
<android.inputmethodservice.ExtractEditLayout: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode.Callback)>
<com.android.internal.net.NetworkStatsFactory: android.net.NetworkStats javaReadNetworkStatsDetail(java.io.File,int,java.lang.String[],int)>
<android.widget.MediaController.MediaPlayerControl: void seekTo(int)>
<android.view.WindowManagerPolicy: void setRotationLw(int)>
<android.media.tv.TvInputManager.Session: void dispatchSurfaceChanged(int,int,int)>
<android.app.IUiAutomationConnection: boolean injectInputEvent(android.view.InputEvent,boolean)>
<android.view.View: java.util.ArrayList getTouchables()>
<android.app.SearchableInfo: boolean getVoiceSearchLaunchRecognizer()>
<android.media.AudioRecord: void finalize()>
<android.view.animation.AnimationUtils: android.view.animation.Animation makeInChildBottomAnimation(android.content.Context)>
<android.net.wifi.WpsResult: void <init>(android.net.wifi.WpsResult)>
<android.view.accessibility.AccessibilityWindowInfo: boolean isActive()>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumNonLetter(android.content.ComponentName)>
<android.renderscript.Byte2: android.renderscript.Byte2 add(android.renderscript.Byte2,android.renderscript.Byte2)>
<android.util.SparseLongArray: long valueAt(int)>
<android.app.ActivityManagerProxy: void unregisterProcessObserver(android.app.IProcessObserver)>
<android.view.View: void setAnimationMatrix(android.graphics.Matrix)>
<android.view.accessibility.AccessibilityNodeInfo: void setAccessibilityFocused(boolean)>
<android.media.SoundPool: void release()>
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int hashCode()>
<android.media.AmrInputStream: int read(byte[],int,int)>
<android.telecom.TelecomManager: java.util.List getPhoneAccountsSupportingScheme(java.lang.String)>
<android.app.ApplicationThreadProxy: void scheduleInstallProvider(android.content.pm.ProviderInfo)>
<android.provider.CallLog.Calls: java.lang.String getLastOutgoingCall(android.content.Context)>
<android.content.ContentResolver: void removePeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle)>
<android.media.MediaDrm: void unprovisionDevice()>
<android.net.TrafficStats: long getTxBytes(java.lang.String)>
<android.database.CrossProcessCursor: android.database.CursorWindow getWindow()>
<android.inputmethodservice.SoftInputWindow: boolean onKeyDown(int,android.view.KeyEvent)>
<android.graphics.drawable.ShapeDrawable: int getChangingConfigurations()>
<android.widget.Gallery: int computeHorizontalScrollRange()>
<android.widget.MediaController: android.view.View makeControllerView()>
<android.renderscript.Double2: void div(double)>
<com.android.internal.widget.ActionBarView: void setCollapsible(boolean)>
<android.view.ActionMode.Callback: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setCustomTitle(android.view.View)>
<android.bluetooth.IBluetooth: int getProfileConnectionState(int)>
<android.filterfw.core.FinalPort: void setFieldFrame(android.filterfw.core.Frame,boolean)>
<android.net.NetworkStatsHistory: android.net.NetworkStatsHistory.Entry getValues(long,long,android.net.NetworkStatsHistory.Entry)>
<android.renderscript.FieldPacker: void addF64(double)>
<android.database.sqlite.SQLiteDatabase: boolean isDatabaseIntegrityOk()>
<android.graphics.drawable.ShapeDrawable: void applyTheme(android.content.res.Resources.Theme)>
<com.google.android.gles_jni.GLImpl: void glGetIntegerv(int,java.nio.IntBuffer)>
<android.app.FragmentManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.widget.AbsListView: boolean onInterceptHoverEvent(android.view.MotionEvent)>
<android.renderscript.Int2: android.renderscript.Int2 mul(android.renderscript.Int2,android.renderscript.Int2)>
<android.media.session.ISessionControllerCallback: void onPlaybackStateChanged(android.media.session.PlaybackState)>
<android.app.Activity: boolean navigateUpToFromChild(android.app.Activity,android.content.Intent)>
<android.preference.SeekBarVolumizer: void stop()>
<android.view.ViewRootImpl: int getTextDirection()>
<android.os.BatteryStats.HistoryItem: void clear()>
<android.graphics.Paint: android.graphics.Paint.Join getStrokeJoin()>
<android.app.WallpaperInfo: java.lang.String getServiceName()>
<com.android.internal.util.StateMachine: void sendMessageDelayed(int,int,int,java.lang.Object,long)>
<android.widget.AdapterViewAnimator: void <init>(android.content.Context,android.util.AttributeSet)>
<android.view.accessibility.AccessibilityWindowInfo: void addChild(int)>
<android.view.ViewTreeObserver.OnWindowAttachListener: void onWindowDetached()>
<android.app.ExpandableListActivity: void setSelectedGroup(int)>
<android.app.ActivityManager.TaskThumbnail: void readFromParcel(android.os.Parcel)>
<android.renderscript.Element: android.renderscript.Element U64_3(android.renderscript.RenderScript)>
<android.app.AppOpsManager: int checkAudioOp(int,int,int,java.lang.String)>
<android.net.wifi.IWifiManager: void setAllowScansWithTraffic(int)>
<android.os.storage.IMountService: void registerListener(android.os.storage.IMountServiceListener)>
<android.app.ActivityManagerProxy: void stopAppSwitches()>
<android.text.util.Rfc822Token: void setName(java.lang.String)>
<android.renderscript.ScriptIntrinsicColorMatrix: void setYUVtoRGB()>
<android.telephony.CellSignalStrengthLte: int getDbm()>
<android.preference.SeekBarPreference: void onRestoreInstanceState(android.os.Parcelable)>
<android.database.CursorWrapper: int getColumnIndexOrThrow(java.lang.String)>
<com.android.internal.widget.TextProgressBar: void onChronometerTick(android.widget.Chronometer)>
<android.app.admin.IDevicePolicyManager: int getKeyguardDisabledFeatures(android.content.ComponentName,int)>
<android.telephony.SubscriptionManager: int setDisplayNumber(java.lang.String,long)>
<android.app.ActivityView: void startActivity(android.app.PendingIntent)>
<android.net.DhcpInfo: void <init>(android.net.DhcpInfo)>
<android.app.IActivityManager: void setPackageAskScreenCompat(java.lang.String,boolean)>
<android.net.WifiLinkQualityInfo: void writeToParcel(android.os.Parcel,int)>
<android.renderscript.Float3: float get(int)>
<android.widget.AdapterView: boolean performItemClick(android.view.View,int,long)>
<android.bluetooth.BluetoothAdapter: int getConnectionState()>
<android.media.SubtitleController: android.media.SubtitleTrack getDefaultTrack()>
<android.util.JsonReader: void endObject()>
<android.nfc.tech.NdefFormatable: void format(android.nfc.NdefMessage)>
<com.android.internal.view.InputBindResult: java.lang.String toString()>
<android.os.BatteryStats.Uid.Sensor: int getHandle()>
<android.drm.DrmSupportInfo: java.lang.String getDescriprition()>
<android.view.accessibility.AccessibilityRecord: void setSource(android.view.View)>
<android.app.Fragment: java.lang.String getString(int,java.lang.Object[])>
<com.google.android.gles_jni.GLImpl: void glGetTexParameterfv(int,int,float[],int)>
<android.content.pm.ApplicationInfo: android.graphics.drawable.Drawable loadDefaultIcon(android.content.pm.PackageManager)>
<com.android.internal.widget.ExploreByTouchHelper: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)>
<com.android.internal.view.menu.ActionMenuItemView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int)>
<android.widget.AdapterView: void dispatchSaveInstanceState(android.util.SparseArray)>
<android.graphics.drawable.AnimatedVectorDrawable: void applyTheme(android.content.res.Resources.Theme)>
<android.app.RemoteInput.Builder: void <init>(java.lang.String)>
<android.app.QueuedWork: java.util.concurrent.ExecutorService singleThreadExecutor()>
<android.view.WindowManagerImpl: void removeViewImmediate(android.view.View)>
<android.media.SubtitleTrack: void setTimeProvider(android.media.MediaTimeProvider)>
<com.android.internal.app.WindowDecorActionBar: void setTitle(java.lang.CharSequence)>
<com.android.internal.util.StateMachine: java.util.Collection copyLogRecs()>
<com.android.ims.internal.IImsService: com.android.ims.ImsCallProfile createCallProfile(int,int,int)>
<android.hardware.display.WifiDisplayStatus: android.hardware.display.WifiDisplaySessionInfo getSessionInfo()>
<android.widget.AlphabetIndexer: void onInvalidated()>
<android.view.MotionEvent: float getHistoricalToolMinor(int)>
<android.media.MediaMetadata: java.lang.CharSequence getText(java.lang.String)>
<android.provider.Settings.NameValueTable: boolean putString(android.content.ContentResolver,android.net.Uri,java.lang.String,java.lang.String)>
<android.app.IActivityManager: boolean getPackageAskScreenCompat(java.lang.String)>
<android.widget.CalendarView: int getWeekNumberColor()>
<android.widget.PopupWindow: void setClipToScreenEnabled(boolean)>
<android.widget.Toolbar: void setNavigationContentDescription(int)>
<android.webkit.Plugin: void setFileName(java.lang.String)>
<android.content.pm.LimitedLengthInputStream: int read()>
<android.inputmethodservice.KeyboardView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.AdapterView: void setAdapter(android.widget.Adapter)>
<android.text.TextUtils: void dumpSpans(java.lang.CharSequence,android.util.Printer,java.lang.String)>
<android.hardware.input.InputManager: android.hardware.input.KeyboardLayout getKeyboardLayout(java.lang.String)>
<android.gesture.GestureUtils: float[] spatialSampling(android.gesture.Gesture,int,boolean)>
<android.graphics.drawable.AnimatedRotateDrawable: int getIntrinsicWidth()>
<android.text.style.IconMarginSpan: void drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout)>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getClassName()>
<android.media.session.ISessionManager: java.util.List getSessions(android.content.ComponentName,int)>
<android.app.usage.UsageEvents: void resetToStart()>
<android.graphics.Paint: void getTextBounds(char[],int,int,android.graphics.Rect)>
<android.view.WindowContentFrameStats: long getFrameReadyTimeNano(int)>
<android.filterfw.core.Frame: long getBindingId()>
<android.app.ActivityOptions: android.app.ActivityOptions makeThumbnailScaleDownAnimation(android.view.View,android.graphics.Bitmap,int,int,android.app.ActivityOptions.OnAnimationStartedListener)>
<android.widget.CursorTreeAdapter: void notifyDataSetInvalidated()>
<android.provider.ContactsContract.CommonDataKinds.Im: java.lang.CharSequence getProtocolLabel(android.content.res.Resources,int,java.lang.CharSequence)>
<android.widget.Spinner: void <init>(android.content.Context,android.util.AttributeSet)>
<android.telephony.ServiceState: int getRilVoiceRadioTechnology()>
<android.provider.DocumentsContract: void deleteDocument(android.content.ContentProviderClient,android.net.Uri)>
<android.widget.HeterogeneousExpandableList: int getGroupType(int)>
<android.speech.RecognitionService: android.os.IBinder onBind(android.content.Intent)>
<com.android.internal.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)>
<android.util.LruCache: int putCount()>
<android.view.View: boolean showContextMenu(float,float,int)>
<android.widget.CompoundButton: void setButtonTintMode(android.graphics.PorterDuff.Mode)>
<com.android.internal.statusbar.StatusBarIconList: void readFromParcel(android.os.Parcel)>
<android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)>
<android.media.AudioTrack: int getStreamType()>
<android.graphics.Canvas: void drawTextOnPath(java.lang.String,android.graphics.Path,float,float,android.graphics.Paint)>
<android.net.NetworkInfo: java.lang.String getTypeName()>
<android.widget.ListPopupWindow: android.widget.ListView getListView()>
<android.widget.AbsListView: int getTranscriptMode()>
<android.widget.TwoLineListItem: void onFinishInflate()>
<android.os.IUserManager: android.content.pm.UserInfo createUser(java.lang.String,int)>
<android.widget.GridLayout: void onChildVisibilityChanged(android.view.View,int,int)>
<android.filterfw.core.MutableFrameFormat: void setDimensions(int[])>
<android.speech.srec.Recognizer: int getResultCount()>
<android.widget.DatePicker.DatePickerDelegate: boolean getCalendarViewShown()>
<com.android.internal.view.menu.MenuView.ItemView: com.android.internal.view.menu.MenuItemImpl getItemData()>
<android.media.ImageReader: int getImageFormat()>
<android.widget.ProgressBar: android.os.Parcelable onSaveInstanceState()>
<android.filterpacks.imageproc.BitmapOverlayFilter: void initProgram(android.filterfw.core.FilterContext,int)>
<com.android.internal.app.WindowDecorActionBar: boolean isHideOnContentScrollEnabled()>
<android.renderscript.Allocation: void resize(int)>
<android.app.admin.DevicePolicyManager: java.util.List getTrustAgentFeaturesEnabled(android.content.ComponentName,android.content.ComponentName)>
<android.hardware.hdmi.HdmiDeviceInfo: void writeToParcel(android.os.Parcel,int)>
<android.content.ContentProviderClient: android.content.ContentProviderResult[] applyBatch(java.util.ArrayList)>
<android.view.ViewPropertyAnimator: long getStartDelay()>
<android.widget.ViewAnimator: int getBaseline()>
<android.content.res.Resources: boolean getBoolean(int)>
<android.graphics.drawable.shapes.RectShape: android.graphics.drawable.shapes.RectShape clone()>
<android.view.accessibility.AccessibilityWindowInfo: void setParentId(int)>
<android.webkit.IWebViewUpdateService: void notifyRelroCreationCompleted(boolean,boolean)>
<android.app.FragmentTransaction: android.app.FragmentTransaction replace(int,android.app.Fragment)>
<android.view.View: void setZ(float)>
<android.widget.GridView: int getGravity()>
<android.media.IAudioService: void avrcpSupportsAbsoluteVolume(java.lang.String,boolean)>
<android.media.MediaCodec: java.nio.ByteBuffer getOutputBuffer(int)>
<android.app.Fragment: void onStop()>
<com.android.internal.http.multipart.Part: long getLengthOfParts(com.android.internal.http.multipart.Part[])>
<android.filterpacks.imageproc.BitmapOverlayFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<android.filterfw.core.Filter: java.lang.String getFilterClassName()>
<android.widget.Toolbar: int getPopupTheme()>
<android.app.admin.DevicePolicyManager: boolean removeUser(android.content.ComponentName,android.os.UserHandle)>
<com.android.internal.os.BatteryStatsImpl: int startAddingCpuLocked()>
<android.widget.RemoteViews: void setBundle(int,java.lang.String,android.os.Bundle)>
<android.graphics.Matrix: void setRotate(float)>
<android.bluetooth.BluetoothHealthAppConfiguration: int getChannelType()>
<android.app.Activity: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode.Callback)>
<android.text.TextUtils: boolean regionMatches(java.lang.CharSequence,int,java.lang.CharSequence,int,int)>
<android.app.Notification.Builder: android.app.Notification.Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent)>
<android.view.View: boolean requestRectangleOnScreen(android.graphics.Rect,boolean)>
<android.app.backup.BackupTransport: int performFullBackup(android.content.pm.PackageInfo,android.os.ParcelFileDescriptor)>
<android.view.GestureDetector.SimpleOnGestureListener: boolean onDoubleTap(android.view.MotionEvent)>
<android.app.Activity: void onSaveInstanceState(android.os.Bundle,android.os.PersistableBundle)>
<android.net.LinkProperties: boolean hasIPv4DnsServer()>
<android.filterpacks.imageproc.ImageCombineFilter: void updateProgramWithTarget(int,android.filterfw.core.FilterContext)>
<android.media.MediaScannerConnection: void scanFile(android.content.Context,java.lang.String[],java.lang.String[],android.media.MediaScannerConnection.OnScanCompletedListener)>
<android.view.ViewGroup: int[] onCreateDrawableState(int)>
<android.filterpacks.imageproc.BitmapSource: void process(android.filterfw.core.FilterContext)>
<android.net.http.RequestHandle: boolean isRedirectMax()>
<android.opengl.GLES30: void glGenTransformFeedbacks(int,java.nio.IntBuffer)>
<android.widget.AppSecurityPermissions.PermissionItemView: void onClick(android.view.View)>
<android.hardware.Camera: android.hardware.Camera.Parameters getParameters()>
<android.app.Instrumentation: android.app.Activity newActivity(java.lang.Class,android.content.Context,android.os.IBinder,android.app.Application,android.content.Intent,android.content.pm.ActivityInfo,java.lang.CharSequence,android.app.Activity,java.lang.String,java.lang.Object)>
<android.app.Notification.Builder: android.app.Notification.Builder setLights(int,int,int)>
<android.content.Intent: android.content.Intent parseIntent(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>
<android.view.accessibility.AccessibilityNodeInfo: boolean isDismissable()>
<android.app.ProgressDialog: boolean isIndeterminate()>
<android.net.ConnectivityManager: java.lang.String[] getTetheredIfaces()>
<com.android.internal.util.ArrayUtils: java.util.ArrayList add(java.util.ArrayList,java.lang.Object)>
<android.hardware.camera2.legacy.GLThreadManager: void setConfigurationAndWait(java.util.Collection,android.hardware.camera2.legacy.CaptureCollector)>
<android.text.DynamicLayout: int getEllipsisCount(int)>
<android.view.View: float getTranslationZ()>
<android.nfc.tech.IsoDep: android.nfc.tech.IsoDep get(android.nfc.Tag)>
<android.renderscript.Int3: void <init>(int,int,int)>
<android.app.AppOpsManager: java.util.List getOpsForPackage(int,java.lang.String,int[])>
<android.location.LocationListener: void onProviderDisabled(java.lang.String)>
<android.os.RemoteCallback: void writeToParcel(android.os.Parcel,int)>
<android.content.pm.PackageManager: java.util.List getPackagesHoldingPermissions(java.lang.String[],int)>
<android.view.GraphicBuffer: void unlockCanvasAndPost(android.graphics.Canvas)>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLowerCase(android.content.ComponentName,int)>
<android.view.Window: boolean isDestroyed()>
<android.app.ActivityManagerProxy: void unbroadcastIntent(android.app.IApplicationThread,android.content.Intent,int)>
<android.text.style.SuggestionSpan: void <init>(android.os.Parcel)>
<android.net.InterfaceConfiguration: boolean hasFlag(java.lang.String)>
<android.app.ActivityThread: android.app.ActivityThread.ActivityClientRecord performDestroyActivity(android.os.IBinder,boolean)>
<android.media.MediaRouter.SimpleCallback: void onRouteChanged(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>
<android.app.ActionBar.Tab: android.view.View getCustomView()>
<android.bluetooth.BluetoothHeadsetClient: boolean disconnect(android.bluetooth.BluetoothDevice)>
<android.media.AudioFormat.Builder: android.media.AudioFormat.Builder setChannelMask(int)>
<android.app.IActivityManager: android.app.IActivityContainer getEnclosingActivityContainer(android.os.IBinder)>
<android.print.PrintAttributes.Resolution: void <init>(java.lang.String,java.lang.String,int,int)>
<android.telecom.ConnectionRequest: android.os.Bundle getExtras()>
<com.google.android.util.AbstractMessageParser.Link: java.util.List getInfo()>
<android.view.VelocityTracker: float getYVelocity()>
<android.net.NetworkIdentity: java.lang.String getSubscriberId()>
<android.view.View: void setPivotY(float)>
<com.android.internal.net.LegacyVpnInfo: int describeContents()>
<android.media.ResampleInputStream: int read(byte[])>
<android.util.DebugUtils: void buildShortClassTag(java.lang.Object,java.lang.StringBuilder)>
<android.animation.RectEvaluator: void <init>(android.graphics.Rect)>
<com.android.internal.content.SelectionBuilder: int delete(android.database.sqlite.SQLiteDatabase,java.lang.String)>
<android.widget.PopupWindow: void setOnDismissListener(android.widget.PopupWindow.OnDismissListener)>
<android.widget.CursorFilter.CursorFilterClient: void changeCursor(android.database.Cursor)>
<android.opengl.GLES20: void glTexParameteri(int,int,int)>
<android.webkit.WebViewProvider: boolean showFindDialog(java.lang.String,boolean)>
<com.android.internal.widget.ActionBarView: int getNavigationMode()>
<android.graphics.drawable.AnimatedVectorDrawable: int getOpacity()>
<android.widget.TextView: void drawableStateChanged()>
<android.telephony.SubscriptionManager: java.util.List getSubInfoUsingSlotId(int)>
<android.os.Debug: boolean waitingForDebugger()>
<android.content.ContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<android.net.NetworkIdentity: java.lang.String scrubSubscriberId(java.lang.String)>
<android.nfc.tech.NfcB: int getMaxTransceiveLength()>
<android.transition.Transition: void <init>(android.content.Context,android.util.AttributeSet)>
<android.view.ViewGroup: void dispatchSetSelected(boolean)>
<android.inputmethodservice.ExtractEditText: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.hardware.camera2.impl.CaptureResultExtras: void readFromParcel(android.os.Parcel)>
<android.app.DownloadManager: android.net.Uri getDownloadUri(long)>
<android.renderscript.Long3: long get(int)>
<android.filterfw.core.MutableFrameFormat: void setObjectClass(java.lang.Class)>
<android.database.sqlite.SQLiteCursorDriver: void cursorDeactivated()>
<android.media.VolumeProvider: void setCallback(android.media.VolumeProvider.Callback)>
<android.app.FragmentManager: void enableDebugLogging(boolean)>
<android.widget.CalendarView.CalendarViewDelegate: android.graphics.drawable.Drawable getSelectedDateVerticalBar()>
<android.gesture.GestureLibrary: boolean isReadOnly()>
<android.app.UiAutomation: android.view.accessibility.AccessibilityEvent executeAndWaitForEvent(java.lang.Runnable,android.app.UiAutomation.AccessibilityEventFilter,long)>
<android.animation.ValueAnimator: void resume()>
<android.widget.TextView: void setMinLines(int)>
<android.hardware.camera2.impl.CameraDeviceImpl.StateCallbackKK: void onUnconfigured(android.hardware.camera2.CameraDevice)>
<android.app.IActivityManager: void finishSubActivity(android.os.IBinder,java.lang.String,int)>
<android.webkit.CookieManager: void setCookie(java.lang.String,java.lang.String)>
<android.inputmethodservice.InputMethodService: int getInputMethodWindowRecommendedHeight()>
<android.telecom.Phone.Listener: void onBringToForeground(android.telecom.Phone,boolean)>
<android.opengl.GLES11Ext: void glBlendFuncSeparateOES(int,int,int,int)>
<android.app.KeyguardManager: android.app.KeyguardManager.KeyguardLock newKeyguardLock(java.lang.String)>
<android.widget.Adapter: int getViewTypeCount()>
<android.content.Context: android.content.ComponentName startService(android.content.Intent)>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityWindowInfo getWindow()>
<android.app.ProfilerInfo: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.os.RuntimeInit: void redirectLogStreams()>
<android.net.http.HttpAuthHeader: java.lang.String getAlgorithm()>
<com.android.internal.widget.ActionBarOverlayLayout: void setUiOptions(int)>
<com.android.internal.widget.WaveView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.google.android.gles_jni.GLImpl: void glDrawTexsOES(short,short,short,short,short)>
<android.webkit.WebView: void setInitialScale(int)>
<android.net.wifi.WifiManager: boolean startCustomizedScan(android.net.wifi.ScanSettings,android.os.WorkSource)>
<android.os.Debug: void resetGlobalExternalAllocSize()>
<android.renderscript.Float3: void copyTo(float[],int)>
<android.webkit.WebSettings: boolean getLightTouchEnabled()>
<android.preference.ListPreference: void setEntries(int)>
<com.android.internal.widget.LockPatternUtils: void setLockPatternEnabled(boolean)>
<android.service.notification.Condition: java.lang.String stateToString(int)>
<android.opengl.GLES10: void glFogfv(int,float[],int)>
<android.view.OrientationListener: void disable()>
<android.telecom.InCallService: boolean onUnbind(android.content.Intent)>
<com.android.internal.widget.ActionBarContainer: void drawableStateChanged()>
<android.appwidget.AppWidgetHost: void <init>(android.content.Context,int)>
<android.bluetooth.BluetoothGattCharacteristic: byte[] getValue()>
<android.content.ISyncContext: void sendHeartbeat()>
<android.app.IActivityManager: void backupAgentCreated(java.lang.String,android.os.IBinder)>
<android.gesture.GestureOverlayView.OnGestureListener: void onGestureCancelled(android.gesture.GestureOverlayView,android.view.MotionEvent)>
<android.filterfw.core.Frame: int getCapacity()>
<android.widget.TabHost.TabSpec: android.widget.TabHost.TabSpec setContent(int)>
<android.view.View: void measure(int,int)>
<android.app.usage.UsageStats: java.lang.String getPackageName()>
<android.renderscript.Byte4: android.renderscript.Byte4 add(android.renderscript.Byte4,android.renderscript.Byte4)>
<android.content.ContentProviderClient: void releaseQuietly(android.content.ContentProviderClient)>
<android.opengl.ETC1Util.ETC1Texture: int getHeight()>
<android.os.IPowerManager: boolean isPowerSaveMode()>
<android.bluetooth.BluetoothUuid: boolean containsAnyUuid(android.os.ParcelUuid[],android.os.ParcelUuid[])>
<android.graphics.Canvas: void freeCaches()>
<android.app.Notification.WearableExtender: boolean getStartScrollBottom()>
<android.media.session.ISessionCallback: void onAdjustVolume(int)>
<android.service.voice.VoiceInteractionServiceInfo: void <init>(android.content.pm.PackageManager,android.content.ComponentName)>
<android.view.accessibility.AccessibilityEvent: void setContentChangeTypes(int)>
<android.filterpacks.imageproc.FillLightFilter: void process(android.filterfw.core.FilterContext)>
<android.util.IntProperty: void set(java.lang.Object,java.lang.Integer)>
<android.net.NetworkStats: void <init>(android.os.Parcel)>
<android.os.Broadcaster: void cancelRequest(int,android.os.Handler,int)>
<android.content.pm.IPackageInstallerCallback: void onSessionBadgingChanged(int)>
<com.android.internal.app.WindowDecorActionBar.TabImpl: android.app.ActionBar.Tab setCustomView(int)>
<android.hardware.camera2.legacy.CameraDeviceUserShim: void disconnect()>
<android.webkit.WebSettings: android.webkit.WebSettings.LayoutAlgorithm getLayoutAlgorithm()>
<com.android.internal.app.ResolverActivity: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<android.location.GpsClock: void setTimeInNs(long)>
<android.hardware.GeomagneticField: float getInclination()>
<android.database.Observable: void unregisterObserver(java.lang.Object)>
<android.widget.ZoomButton: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.SearchView.SearchAutoComplete: boolean onKeyPreIme(int,android.view.KeyEvent)>
<android.view.Window: void setNavigationBarColor(int)>
<android.accounts.IAccountManager: void getAuthToken(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,boolean,android.os.Bundle)>
<android.util.MonthDisplayHelper: int getColumnOf(int)>
<android.util.SuperNotCalledException: void <init>(java.lang.String)>
<android.telecom.Phone: java.util.List getCalls()>
<android.app.usage.TimeSparseArray: int closestIndexOnOrBefore(long)>
<android.accessibilityservice.AccessibilityServiceInfo: android.content.pm.ResolveInfo getResolveInfo()>
<android.gesture.GestureOverlayView: android.gesture.Gesture getGesture()>
<android.graphics.drawable.DrawableContainer: void setExitFadeDuration(int)>
<android.hardware.location.GeofenceHardwareCallback: void onGeofenceTransition(int,int,android.location.Location,long,int)>
<android.widget.CompoundButton: void <init>(android.content.Context,android.util.AttributeSet)>
<android.content.pm.PackageParser.Activity: java.lang.String toString()>
<android.provider.DocumentsContract: android.net.Uri buildDocumentUri(java.lang.String,java.lang.String)>
<android.net.IConnectivityManager: android.net.NetworkState[] getAllNetworkState()>
<android.media.session.PlaybackState.CustomAction: void writeToParcel(android.os.Parcel,int)>
<com.google.android.gles_jni.GLImpl: void glGetBooleanv(int,boolean[],int)>
<android.net.wifi.ScanResult: boolean is24GHz(int)>
<android.speech.srec.WaveHeader: android.speech.srec.WaveHeader setSampleRate(int)>
<android.os.BaseBundle: double getDouble(java.lang.String)>
<android.view.InputEventConsistencyVerifier: void reset()>
<android.content.ContentProviderOperation.Builder: android.content.ContentProviderOperation.Builder withSelectionBackReference(int,int)>
<android.view.textservice.TextServicesManager: android.view.textservice.TextServicesManager getInstance()>
<android.os.StrictMode.ViolationInfo: void <init>(java.lang.Throwable,int)>
<android.view.View: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>
<android.telecom.Log: boolean isLoggable(int)>
<android.bluetooth.IBluetoothInputDevice: boolean sendData(android.bluetooth.BluetoothDevice,java.lang.String)>
<android.database.sqlite.SQLiteQueryBuilder: void appendWhereEscapeString(java.lang.String)>
<android.app.backup.BackupManager: void setAutoRestore(boolean)>
<android.net.NetworkAgent: void <init>(android.os.Looper,android.content.Context,java.lang.String,android.net.NetworkInfo,android.net.NetworkCapabilities,android.net.LinkProperties,int)>
<android.media.MediaRecorder: void setOnErrorListener(android.media.MediaRecorder.OnErrorListener)>
<android.view.animation.LayoutAnimationController: long getDelayForView(android.view.View)>
<android.nfc.TransceiveResult: byte[] getResponseOrThrow()>
<android.graphics.Canvas: void drawPath(android.graphics.Path,android.graphics.Paint)>
<android.renderscript.Float4: android.renderscript.Float4 mul(android.renderscript.Float4,android.renderscript.Float4)>
<android.bluetooth.IBluetoothGatt: void stopMultiAdvertising(int)>
<android.app.ApplicationThreadNative: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<android.renderscript.Byte2: void set(android.renderscript.Byte2)>
<android.preference.PreferenceManager: void setSharedPreferencesName(java.lang.String)>
<android.widget.TimePicker: java.lang.Integer getCurrentHour()>
<android.graphics.Canvas: int getMaximumBitmapHeight()>
<android.telephony.CellIdentityWcdma: java.lang.String toString()>
<android.graphics.Path: void addRect(float,float,float,float,android.graphics.Path.Direction)>
<android.app.admin.DevicePolicyManager: int getStorageEncryptionStatus()>
<android.view.ViewRootImpl.CalledFromWrongThreadException: void <init>(java.lang.String)>
<android.view.GhostView: android.view.GhostView addGhost(android.view.View,android.view.ViewGroup)>
<com.android.internal.widget.ToolbarWidgetWrapper: void restoreHierarchyState(android.util.SparseArray)>
<android.webkit.WebViewProvider.ViewDelegate: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.text.style.LocaleSpan: void updateMeasureState(android.text.TextPaint)>
<android.app.AppOpsManager.OpEntry: long getTime()>
<android.graphics.Typeface: android.graphics.Typeface createFromFamiliesWithDefault(android.graphics.FontFamily[])>
<android.content.ContentProvider: java.lang.String getReadPermission()>
<android.os.BatteryStats.BitDescription: void <init>(int,java.lang.String,java.lang.String)>
<android.webkit.WebViewProvider: boolean overlayVerticalScrollbar()>
<android.hardware.camera2.impl.CallbackProxies.DeviceCaptureCallbackProxy: void onCaptureFailed(android.hardware.camera2.CameraDevice,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureFailure)>
<android.hardware.location.IGeofenceHardware: int[] getMonitoringTypes()>
<android.widget.GridLayout: void setUseDefaultMargins(boolean)>
<android.media.WebVttTrack: void updateView(java.util.Vector)>
<android.print.PrintJobInfo.Builder: android.print.PrintJobInfo build()>
<android.os.BatteryStats.Uid: int getMobileRadioActiveCount(int)>
<android.animation.ValueAnimator: android.animation.TimeInterpolator getInterpolator()>
<android.text.style.StyleSpan: void <init>(int)>
<android.filterpacks.imageproc.StraightenFilter: void initProgram(android.filterfw.core.FilterContext,int)>
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothDevice getRemoteDevice(byte[])>
<android.preference.RingtonePreference: void setShowSilent(boolean)>
<android.media.Metadata: java.util.Set keySet()>
<android.content.UriPermission: boolean isReadPermission()>
<com.android.internal.view.menu.MenuBuilder: android.view.MenuItem getItem(int)>
<android.graphics.drawable.GradientDrawable: void onBoundsChange(android.graphics.Rect)>
<android.view.MotionEvent: float getHistoricalAxisValue(int,int)>
<android.graphics.drawable.ShapeDrawable: boolean onStateChange(int[])>
<android.graphics.pdf.PdfDocument: java.util.List getPages()>
<android.webkit.WebView.PrivateAccess: boolean super_requestFocus(int,android.graphics.Rect)>
<android.view.ViewConfiguration: int getJumpTapTimeout()>
<android.graphics.Xfermode: void finalize()>
<android.view.DisplayInfo: void writeToParcel(android.os.Parcel,int)>
<android.widget.ListPopupWindow: void <init>(android.content.Context)>
<android.speech.srec.Recognizer.Grammar: void addWordToSlot(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String)>
<android.renderscript.FieldPacker: void addI8(android.renderscript.Byte2)>
<android.provider.MediaStore.Images.Thumbnails: android.database.Cursor queryMiniThumbnails(android.content.ContentResolver,android.net.Uri,int,java.lang.String[])>
<android.app.ActionBar.Tab: android.app.ActionBar.Tab setIcon(int)>
<android.location.GpsMeasurement: double getCodePhaseUncertaintyInChips()>
<android.text.LoginFilter.UsernameFilterGMail: void <init>(boolean)>
<android.graphics.RectF: void union(float,float)>
<com.android.internal.widget.LockPatternUtils: void reportSuccessfulPasswordAttempt()>
<android.widget.TextView: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.service.notification.StatusBarNotification: java.lang.String toString()>
<android.content.Intent.ShortcutIconResource: android.content.Intent.ShortcutIconResource fromContext(android.content.Context,int)>
<android.widget.ViewSwitcher.ViewFactory: android.view.View makeView()>
<android.os.Messenger: int hashCode()>
<android.app.AppOpsManager: void setRestriction(int,int,int,java.lang.String[])>
<android.webkit.WebView: android.print.PrintDocumentAdapter createPrintDocumentAdapter(java.lang.String)>
<android.net.NetworkStats: void setElapsedRealtime(long)>
<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>
<android.util.EventLog: void readEvents(int[],java.util.Collection)>
<android.nfc.TagLostException: void <init>(java.lang.String)>
<android.net.http.AndroidHttpClientConnection: void shutdown()>
<android.graphics.Region: boolean set(android.graphics.Region)>
<android.location.SettingInjectorService: java.lang.String onGetSummary()>
<android.media.AudioManager: void setParameter(java.lang.String,java.lang.String)>
<android.content.pm.IPackageInstaller: android.content.pm.IPackageInstallerSession openSession(int)>
<android.hardware.Camera: int getNumberOfCameras()>
<android.content.DialogInterface: void cancel()>
<android.app.IActivityManager.WaitResult: void writeToParcel(android.os.Parcel,int)>
<android.renderscript.Int4: void mul(int)>
<android.graphics.Canvas: android.graphics.Rect getClipBounds()>
<android.database.ContentObserver: android.database.IContentObserver getContentObserver()>
<android.app.ActivityThread: void handleRequestAssistContextExtras(android.app.ActivityThread.RequestAssistContextExtras)>
<android.telephony.CellInfoLte: int describeContents()>
<android.content.ClipDescription: int getMimeTypeCount()>
<android.text.TextPaint: void set(android.text.TextPaint)>
<android.inputmethodservice.ExtractEditLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<android.filterfw.core.FilterGraph: void connect(android.filterfw.core.Filter,java.lang.String,android.filterfw.core.Filter,java.lang.String)>
<android.preference.PreferenceFragment: void onUnbindPreferences()>
<android.app.Fragment: void onConfigurationChanged(android.content.res.Configuration)>
<android.media.AudioAttributes.Builder: android.media.AudioAttributes.Builder setContentType(int)>
<android.widget.BaseExpandableListAdapter: boolean isEmpty()>
<android.telephony.TelephonyManager: int getSimState()>
<android.hardware.camera2.utils.CloseableLock: android.hardware.camera2.utils.CloseableLock.ScopedLock acquireLock()>
<android.app.IApplicationThread: void setHttpProxy(java.lang.String,java.lang.String,java.lang.String,android.net.Uri)>
<android.app.ActivityManagerProxy: void serviceDoneExecuting(android.os.IBinder,int,int,int)>
<android.bluetooth.BluetoothGattServerCallback: void onExecuteWrite(android.bluetooth.BluetoothDevice,int,boolean)>
<android.inputmethodservice.Keyboard: boolean isShifted()>
<android.view.DisplayInfo: boolean equals(android.view.DisplayInfo)>
<android.app.IActivityManager: void signalPersistentProcesses(int)>
<android.hardware.display.IDisplayManager: int[] getDisplayIds()>
<android.provider.Settings.Secure: int getInt(android.content.ContentResolver,java.lang.String,int)>
<android.location.SettingInjectorService: void <init>(java.lang.String)>
<android.widget.BaseAdapter: void notifyDataSetInvalidated()>
<android.content.ContextWrapper: java.lang.String[] fileList()>
<android.app.IActivityManager: android.content.pm.ParceledListSlice getPersistedUriPermissions(java.lang.String,boolean)>
<android.drm.DrmManagerClient: android.content.ContentValues getMetadata(android.net.Uri)>
<com.android.internal.app.IBatteryStats: void noteStopAudio(int)>
<android.hardware.camera2.CameraDevice: java.lang.String getId()>
<android.net.wifi.WifiActivityEnergyInfo: boolean isValid()>
<android.widget.ListView: void layoutChildren()>
<com.android.internal.telephony.IMms: boolean updateStoredMessageStatus(java.lang.String,android.net.Uri,android.content.ContentValues)>
<android.widget.ProgressBar: void setProgressTintList(android.content.res.ColorStateList)>
<android.location.Location: void reset()>
<android.transition.Transition: android.transition.Transition setStartDelay(long)>
<android.view.View: int getPaddingLeft()>
<android.view.inputmethod.InputConnectionWrapper: boolean commitCompletion(android.view.inputmethod.CompletionInfo)>
<android.text.Layout: void getCursorPath(int,android.graphics.Path,java.lang.CharSequence)>
<android.hardware.camera2.CaptureResult: void <init>(android.hardware.camera2.impl.CameraMetadataNative,int)>
<android.media.EncoderCapabilities: int[] getOutputFileFormats()>
<android.webkit.WebSettings: java.lang.String getPluginsPath()>
<com.android.internal.widget.IRemoteViewsFactory: int getCount()>
<android.widget.AutoCompleteTextView: void dismissDropDown()>
<android.webkit.WebSettings: boolean getAllowUniversalAccessFromFileURLs()>
<com.android.internal.widget.multiwaveview.GlowPadView: void setDirectionDescriptionsResourceId(int)>
<android.renderscript.Int4: int elementSum()>
<android.app.ActivityManagerProxy: void unregisterUserSwitchObserver(android.app.IUserSwitchObserver)>
<android.net.NetworkStatsHistory.ParcelUtils: void writeLongArray(android.os.Parcel,long[],int)>
<android.content.ContentResolver: void requestSyncAsUser(android.accounts.Account,java.lang.String,int,android.os.Bundle)>
<android.renderscript.Byte3: byte elementSum()>
<android.media.IRingtonePlayer: void stopAsync()>
<android.app.SearchableInfo: boolean useBadgeLabel()>
<android.widget.TextView: void onRtlPropertiesChanged(int)>
<android.media.MediaCodecInfo.CodecCapabilities: android.media.MediaCodecInfo.VideoCapabilities getVideoCapabilities()>
<android.renderscript.Matrix3f: void loadIdentity()>
<android.os.Parcel: void writeCharSequence(java.lang.CharSequence)>
<android.graphics.pdf.PdfDocument: void writeTo(java.io.OutputStream)>
<android.os.StrictMode: void setThreadPolicy(android.os.StrictMode.ThreadPolicy)>
<android.hardware.SystemSensorManager: java.util.List getFullSensorList()>
<com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm7BitPacked(java.lang.String,int,boolean,int,int)>
<android.opengl.ETC1Util: android.opengl.ETC1Util.ETC1Texture compressTexture(java.nio.Buffer,int,int,int,int)>
<android.os.Debug.MemoryInfo: int getOtherSharedClean(int)>
<android.text.method.ArrowKeyMovementMethod: boolean rightWord(android.widget.TextView,android.text.Spannable)>
<android.telephony.IccOpenLogicalChannelResponse: int describeContents()>
<android.widget.RemoteViewsListAdapter: int getItemViewType(int)>
<android.speech.srec.Recognizer: void putAudio(java.io.InputStream)>
<android.content.Loader: void onContentChanged()>
<android.media.MediaCodec.BufferInfo: void set(int,int,long,int)>
<android.widget.ScrollBarDrawable: void setVerticalTrackDrawable(android.graphics.drawable.Drawable)>
<android.filterfw.core.Filter: boolean isOpen()>
<android.text.style.TtsSpan.ElectronicBuilder: android.text.style.TtsSpan.ElectronicBuilder setPath(java.lang.String)>
<com.google.android.gles_jni.GLImpl: void glLoadMatrixf(float[],int)>
<android.database.CursorWrapper: int getColumnCount()>
<android.media.MediaCodecInfo.CodecCapabilities: java.lang.String[] validFeatures()>
<android.view.ViewGroup: void layout(int,int,int,int)>
<android.view.ViewDebug: void captureLayers(android.view.View,java.io.DataOutputStream)>
<android.nfc.NdefRecord: android.nfc.NdefRecord createUri(android.net.Uri)>
<android.os.IPowerManager: boolean setPowerSaveMode(boolean)>
<android.view.ViewConfiguration: int getScrollBarSize()>
<android.opengl.GLES10: void glDeleteTextures(int,int[],int)>
<android.transition.TransitionSet: android.transition.Transition getTransitionAt(int)>
<android.app.UiAutomation: android.view.accessibility.AccessibilityNodeInfo findFocus(int)>
<android.graphics.drawable.Drawable: boolean isAutoMirrored()>
<android.content.ContentProvider: android.content.pm.PathPermission[] getPathPermissions()>
<android.graphics.BitmapRegionDecoder: int getWidth()>
<android.os.PowerManager: void userActivity(long,int,int)>
<android.media.MediaCodecInfo.CodecCapabilities: boolean isRegular()>
<android.printservice.PrintService: void onPrintJobQueued(android.printservice.PrintJob)>
<android.animation.ValueAnimator.AnimationHandler: void start()>
<android.provider.Settings.System: long getLongForUser(android.content.ContentResolver,java.lang.String,long,int)>
<android.telecom.GatewayInfo: int describeContents()>
<android.renderscript.Short4: void mul(android.renderscript.Short4)>
<android.text.method.ScrollingMovementMethod: boolean end(android.widget.TextView,android.text.Spannable)>
<android.media.MediaCodecList: void <init>(int)>
<android.telephony.TelephonyManager: int getPhoneType(int)>
<android.nfc.INfcAdapter: void setP2pModes(int,int)>
<android.database.sqlite.SqliteWrapper: int delete(android.content.Context,android.content.ContentResolver,android.net.Uri,java.lang.String,java.lang.String[])>
<android.widget.ArrayAdapter: long getItemId(int)>
<android.widget.SimpleCursorAdapter: java.lang.CharSequence convertToString(android.database.Cursor)>
<android.database.Cursor: java.lang.String[] getColumnNames()>
<android.renderscript.ScriptIntrinsicColorMatrix: android.renderscript.ScriptIntrinsicColorMatrix create(android.renderscript.RenderScript,android.renderscript.Element)>
<android.content.IContentService: java.util.List getCurrentSyncsAsUser(int)>
<android.transition.Crossfade: android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)>
<android.graphics.drawable.LayerDrawable: int getId(int)>
<com.android.internal.app.ProcessStats: boolean evaluateSystemProperties(boolean)>
<android.os.Bundle: void putBooleanArray(java.lang.String,boolean[])>
<android.media.SoundPool: boolean unload(int)>
<android.media.AudioAttributes: int getCapturePreset()>
<android.widget.ListPopupWindow.ForwardingListener: void <init>(android.view.View)>
<android.telephony.CellInfoLte: void <init>(android.telephony.CellInfoLte)>
<android.webkit.WebIconDatabase.IconListener: void onReceivedIcon(java.lang.String,android.graphics.Bitmap)>
<android.app.ActivityView: void release()>
<android.util.StringBuilderPrinter: void println(java.lang.String)>
<android.webkit.WebView: void pauseTimers()>
<android.opengl.GLES30: void glDeleteQueries(int,int[],int)>
<android.view.inputmethod.InputMethodInfo: java.lang.String getSettingsActivity()>
<android.renderscript.Long4: void addMultiple(android.renderscript.Long4,long)>
<android.widget.TimePicker: void setEnabled(boolean)>
<android.transition.TransitionSet: android.transition.TransitionSet removeListener(android.transition.Transition.TransitionListener)>
<android.media.session.MediaSession.Callback: void onSetRating(android.media.Rating)>
<com.android.internal.widget.ScrollingTabContainerView.VisibilityAnimListener: void onAnimationCancel(android.animation.Animator)>
<android.widget.FrameLayout: boolean gatherTransparentRegion(android.graphics.Region)>
<android.os.IHardwareService: void setFlashlightEnabled(boolean)>
<android.renderscript.Float4: void mul(android.renderscript.Float4)>
<android.app.Activity: void onPrepareDialog(int,android.app.Dialog,android.os.Bundle)>
<android.preference.DialogPreference: void onDialogClosed(boolean)>
<android.database.sqlite.SQLiteDatabase: long insertOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)>
<com.android.internal.view.RootViewSurfaceTaker: android.view.SurfaceHolder.Callback2 willYouTakeTheSurface()>
<android.renderscript.Double4: void sub(double)>
<android.graphics.drawable.ScaleDrawable: int getIntrinsicWidth()>
<android.view.animation.DecelerateInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>
<android.app.IActivityManager: void unhandledBack()>
<android.hardware.display.DisplayManagerInternal: void registerDisplayTransactionListener(android.hardware.display.DisplayManagerInternal.DisplayTransactionListener)>
<android.net.wifi.WifiEnterpriseConfig: void setAnonymousIdentity(java.lang.String)>
<android.database.Cursor: boolean moveToPosition(int)>
<android.content.pm.UserInfo: int describeContents()>
<android.view.MagnificationSpec: android.view.MagnificationSpec obtain()>
<android.text.style.TtsSpan.SemioticClassBuilder: void <init>(java.lang.String)>
<android.hardware.display.IDisplayManager: void disconnectWifiDisplay()>
<android.text.format.Time: void switchTimezone(java.lang.String)>
<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothClass getBluetoothClass()>
<android.widget.BaseExpandableListAdapter: void notifyDataSetChanged()>
<android.graphics.Rect: void offsetTo(int,int)>
<android.os.BatteryStats: long computeBatteryScreenOffUptime(long,int)>
<com.google.android.gles_jni.GLImpl: void glFogxv(int,java.nio.IntBuffer)>
<android.graphics.Color: float saturation(int)>
<android.location.LocationRequest: long getFastestInterval()>
<android.view.accessibility.AccessibilityWindowInfo: void setActive(boolean)>
<android.content.pm.PackageParser.Instrumentation: void <init>(android.content.pm.PackageParser.ParsePackageItemArgs,android.content.pm.InstrumentationInfo)>
<com.google.android.util.AbstractMessageParser: void <init>(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean)>
<android.media.AudioService.VolumeStreamState: void setAllIndexes(android.media.AudioService.VolumeStreamState)>
<com.android.internal.view.IInputConnectionWrapper: void getTextBeforeCursor(int,int,int,com.android.internal.view.IInputContextCallback)>
<android.bluetooth.IBluetoothGattServerCallback: void onServiceAdded(int,int,int,android.os.ParcelUuid)>
<android.widget.RemoteViews: void setTextViewCompoundDrawables(int,int,int,int,int)>
<android.filterfw.core.RoundRobinScheduler: void <init>(android.filterfw.core.FilterGraph)>
<android.telecom.Connection: android.telecom.Connection.VideoProvider getVideoProvider()>
<com.android.internal.app.IBatteryStats: void noteResetVideo()>
<android.hardware.camera2.marshal.impl.MarshalQueryableEnum: void registerEnumValues(java.lang.Class,int[])>
<android.widget.SearchView.SearchAutoComplete: void setThreshold(int)>
<android.os.UpdateLock: void acquire()>
<android.accounts.IAccountAuthenticatorResponse: void onError(int,java.lang.String)>
<android.app.ActivityManagerProxy: android.os.IBinder getHomeActivityToken()>
<com.android.internal.preference.YesNoPreference: void onSetInitialValue(boolean,java.lang.Object)>
<android.bluetooth.IBluetoothA2dp: int getPriority(android.bluetooth.BluetoothDevice)>
<android.view.ViewGroup: int getChildDrawingOrder(int,int)>
<android.os.UserManager: java.util.List getUsers(boolean)>
<android.hardware.location.IFusedLocationHardware: void unregisterSink(android.hardware.location.IFusedLocationHardwareSink)>
<android.app.NotificationManager: void cancelAsUser(java.lang.String,int,android.os.UserHandle)>
<com.android.internal.policy.IKeyguardService: void setCurrentUser(int)>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDSrcIn()>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest: android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest newInstance(java.lang.String)>
<com.android.internal.os.BatteryStatsImpl.Uid: java.util.Map getWakelockStats()>
<android.content.Context: java.lang.String getString(int)>
<android.graphics.drawable.ColorDrawable: void applyTheme(android.content.res.Resources.Theme)>
<android.media.SoundPool: int load(android.content.Context,int,int)>
<android.filterfw.core.ShaderProgram: void setClearsOutput(boolean)>
<android.graphics.pdf.PdfDocument: android.graphics.pdf.PdfDocument.Page startPage(android.graphics.pdf.PdfDocument.PageInfo)>
<com.android.internal.content.SelectionBuilder: int update(android.database.sqlite.SQLiteDatabase,java.lang.String,android.content.ContentValues)>
<android.preference.PreferenceActivity: void onSaveInstanceState(android.os.Bundle)>
<android.nfc.cardemulation.ApduServiceInfo: android.content.ComponentName getComponent()>
<android.widget.ImageView: void setAlpha(int)>
<android.graphics.drawable.NinePatchDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>
<android.opengl.GLES30: void glUniformMatrix2x3fv(int,int,boolean,float[],int)>
<com.android.internal.widget.multiwaveview.PointCloud.WaveManager: void setAlpha(float)>
<android.webkit.URLUtil: java.lang.String guessUrl(java.lang.String)>
<com.android.internal.inputmethod.InputMethodUtils.InputMethodSettings: void putSelectedSubtype(int)>
<com.android.internal.util.FileRotator: void <init>(java.io.File,java.lang.String,long,long)>
<android.preference.RingtonePreference: boolean onActivityResult(int,int,android.content.Intent)>
<com.android.internal.widget.TextProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.view.WindowManagerPolicy.WindowState: int getOwningUid()>
<android.media.session.PlaybackState.CustomAction.Builder: android.media.session.PlaybackState.CustomAction build()>
<android.graphics.drawable.DrawableContainer: boolean isStateful()>
<android.content.res.CompatibilityInfo.Translator: void translateLayoutParamsInAppWindowToScreen(android.view.WindowManager.LayoutParams)>
<android.renderscript.BaseObj: int hashCode()>
<android.nfc.NdefMessage: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.widget.LockPatternUtils: void saveLockPassword(java.lang.String,int,boolean,int)>
<android.renderscript.Double2: void addMultiple(android.renderscript.Double2,double)>
<android.content.Intent: java.lang.String resolveType(android.content.Context)>
<android.service.fingerprint.FingerprintManager: void stopListening()>
<android.accounts.IAccountManager: void setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)>
<android.telephony.CellInfoWcdma: android.telephony.CellIdentityWcdma getCellIdentity()>
<android.net.http.RequestQueue: void queueRequest(android.net.http.Request,boolean)>
<android.widget.CursorAdapter: void <init>(android.content.Context,android.database.Cursor,boolean)>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.CancellationSignal)>
<com.android.internal.widget.AbsActionBarView: void setContentHeight(int)>
<android.view.WindowCallbackWrapper: boolean onCreatePanelMenu(int,android.view.Menu)>
<android.media.MediaPlayer: void setAudioSessionId(int)>
<com.android.internal.widget.LockPatternView: void <init>(android.content.Context)>
<android.hardware.Camera.Parameters: void getFocusDistances(float[])>
<android.util.JsonWriter: android.util.JsonWriter value(double)>
<android.net.dhcp.DhcpStateMachine: void onInformReceived(int,byte[],java.net.InetAddress,byte[])>
<android.telecom.Call.Details: boolean equals(java.lang.Object)>
<android.graphics.drawable.DrawableContainer: void setConstantState(android.graphics.drawable.DrawableContainer.DrawableContainerState)>
<android.widget.TextView: void dispatchFinishTemporaryDetach()>
<android.media.IAudioService: void setStreamSolo(int,boolean,android.os.IBinder)>
<android.content.IntentFilter: void writeToXml(org.xmlpull.v1.XmlSerializer)>
<com.android.internal.widget.BackgroundFallback: void setDrawable(android.graphics.drawable.Drawable)>
<android.bluetooth.BluetoothGattCallbackWrapper: void onClientConnectionState(int,int,boolean,java.lang.String)>
<android.media.effect.effects.TintEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>
<android.widget.CalendarView.CalendarViewDelegate: void setDate(long)>
<android.content.ContentProvider: void shutdown()>
<android.filterpacks.imageproc.FillLightFilter: void setupPorts()>
<android.media.audiofx.EnvironmentalReverb: void setReflectionsDelay(int)>
<android.content.ContextWrapper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>
<android.provider.DocumentsContract: android.net.Uri buildChildDocumentsUri(java.lang.String,java.lang.String)>
<android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec.Builder setStartDate(java.util.Date)>
<android.os.Environment.UserEnvironment: java.io.File[] buildExternalStorageAppDataDirsForVold(java.lang.String)>
<com.android.internal.util.HexDump: java.lang.String toHexString(byte[],int,int)>
<android.preference.VolumePreference: void onRestoreInstanceState(android.os.Parcelable)>
<android.hardware.Camera.Parameters: boolean isZoomSupported()>
<android.view.ViewRootImpl: void dispatchInvalidateRectOnAnimation(android.view.View.AttachInfo.InvalidateInfo)>
<android.os.Process: void setCanSelfBackground(boolean)>
<android.hardware.camera2.legacy.LegacyFocusStateMapper: void mapResultTriggers(android.hardware.camera2.impl.CameraMetadataNative)>
<android.bluetooth.BluetoothDevice: boolean createBondOutOfBand(byte[],byte[])>
<com.android.ims.internal.IImsConfig: void setProvisionedValue(int,int)>
<android.filterfw.core.SyncRunner: void processFilterNode(android.filterfw.core.Filter)>
<com.android.internal.util.CharSequences: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>
<android.util.Size: void <init>(int,int)>
<android.view.WindowInsets: android.view.WindowInsets consumeWindowDecorInsets()>
<android.os.Environment.UserEnvironment: java.io.File[] buildExternalStorageAppDataDirs(java.lang.String)>
<android.view.SurfaceControl: android.os.IBinder createDisplay(java.lang.String,boolean)>
<android.text.Html: java.lang.String escapeHtml(java.lang.CharSequence)>
<android.widget.AutoCompleteTextView: void <init>(android.content.Context)>
<android.net.http.AndroidHttpClientConnection: org.apache.http.StatusLine parseResponseHeader(android.net.http.Headers)>
<android.text.style.LocaleSpan: void <init>(java.util.Locale)>
<android.app.SearchDialog: void launchQuerySearch(int,java.lang.String)>
<android.drm.DrmUtils.ExtendedMetadataParser: java.lang.String get(java.lang.String)>
<android.opengl.GLES20: void glGetIntegerv(int,java.nio.IntBuffer)>
<android.opengl.GLES31: void glProgramUniform2uiv(int,int,int,java.nio.IntBuffer)>
<android.renderscript.Matrix4f: void load(android.renderscript.Matrix3f)>
<android.graphics.drawable.StateListDrawable: void setLayoutDirection(int)>
<android.view.ViewGroup.MarginLayoutParams: int getLayoutDirection()>
<android.widget.TextView: void onScreenStateChanged(int)>
<android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setOverrideDeadline(long)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>
<android.filterpacks.imageproc.ToRGBAFilter: void setupPorts()>
<android.webkit.WebResourceRequest: android.net.Uri getUrl()>
<android.service.notification.StatusBarNotification: java.lang.String getGroupKey()>
<android.net.http.EventHandler: void error(int,java.lang.String)>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: void setVariablePadding(boolean)>
<android.app.ActivityOptions: int getCustomEnterResId()>
<android.hardware.Camera.Parameters: java.util.List getSupportedVideoSizes()>
<android.view.View: int getSuggestedMinimumHeight()>
<android.app.IActivityContainer: int startActivity(android.content.Intent)>
<android.net.wifi.WifiEnterpriseConfig: java.lang.String getAnonymousIdentity()>
<android.hardware.input.InputDeviceIdentifier: java.lang.String getDescriptor()>
<android.gesture.GestureOverlayView: void draw(android.graphics.Canvas)>
<android.app.FragmentManagerImpl: void popBackStack(java.lang.String,int)>
<android.filterfw.core.ShaderProgram: void setBlendFunc(int,int)>
<android.hardware.display.DisplayManagerInternal.DisplayPowerRequest: boolean equals(java.lang.Object)>
<android.widget.BaseExpandableListAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>
<android.content.Context: int getUserId()>
<com.android.internal.os.BatteryStatsImpl.Uid: long getNetworkActivityPackets(int,int)>
<android.opengl.GLES20: void glUseProgram(int)>
<android.provider.ContactsContract.Contacts: java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri)>
<android.app.ActionBar: int getNavigationMode()>
<android.net.IConnectivityManager: void setAirplaneMode(boolean)>
<com.android.internal.widget.LockPatternUtils: java.util.List stringToPattern(java.lang.String)>
<com.android.internal.os.BinderInternal: void joinThreadPool()>
<android.net.BaseNetworkStateTracker: void privateDnsRouteSet(boolean)>
<android.view.LayoutInflater.Factory: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)>
<com.android.internal.util.FastPrintWriter: void println(int)>
<android.widget.ZoomButton: boolean onLongClick(android.view.View)>
<android.telephony.IccOpenLogicalChannelResponse: int getChannel()>
<android.bluetooth.BluetoothServerSocket: void close()>
<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getImeiForSubscriber(long)>
<com.android.internal.preference.YesNoPreference: void onRestoreInstanceState(android.os.Parcelable)>
<android.net.wifi.ScanResult: boolean is5GHz(int)>
<android.webkit.JsResult: boolean getResult()>
<android.util.ArrayMap: java.lang.String toString()>
<com.android.internal.telecom.IConnectionService: void splitFromConference(java.lang.String)>
<android.widget.AlphabetIndexer: int getPositionForSection(int)>
<android.net.LinkAddress: void <init>(java.lang.String,int,int)>
<android.transition.ArcMotion: android.graphics.Path getPath(float,float,float,float)>
<android.content.IntentFilter: int getPriority()>
<android.filterfw.core.NativeProgram: void process(android.filterfw.core.Frame[],android.filterfw.core.Frame)>
<android.os.Trace: void asyncTraceBegin(long,java.lang.String,int)>
<android.graphics.drawable.Animatable: boolean isRunning()>
<android.app.admin.IDevicePolicyManager: boolean installKeyPair(android.content.ComponentName,byte[],byte[],java.lang.String)>
<android.widget.TextView: int getTotalPaddingBottom()>
<android.preference.MultiSelectListPreference: void setEntries(int)>
<android.widget.TableLayout.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>
<android.renderscript.Script: android.renderscript.Script.KernelID createKernelID(int,int,android.renderscript.Element,android.renderscript.Element)>
<com.android.internal.widget.ActionBarView: boolean hasIcon()>
<android.view.IWindow: void dispatchDragEvent(android.view.DragEvent)>
<android.database.DatabaseUtils: void appendValueToSql(java.lang.StringBuilder,java.lang.Object)>
<com.android.internal.backup.LocalTransport: android.app.backup.RestoreDescription nextRestorePackage()>
<android.opengl.GLES30: void glBindTransformFeedback(int,int)>
<android.renderscript.Float3: android.renderscript.Float3 div(android.renderscript.Float3,float)>
<android.filterfw.core.ProgramVariable: void setValue(java.lang.Object)>
<android.net.INetworkPolicyManager: boolean isUidForeground(int)>
<android.media.effect.effects.IdentityEffect: void apply(int,int,int,int)>
<android.provider.ContactsContract.CommonDataKinds.SipAddress: int getTypeLabelResource(int)>
<android.os.BatteryStats: long computeBatteryTimeRemaining(long)>
<android.hardware.input.InputManager: java.lang.String getCurrentKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier)>
<android.os.ParcelableParcel: void writeToParcel(android.os.Parcel,int)>
<android.filterpacks.imageproc.ContrastFilter: android.filterfw.core.Program getNativeProgram(android.filterfw.core.FilterContext)>
<android.graphics.drawable.AnimationDrawable: boolean isOneShot()>
<android.widget.Switch: void setThumbResource(int)>
<android.widget.MultiAutoCompleteTextView.Tokenizer: int findTokenEnd(java.lang.CharSequence,int)>
<android.os.Debug: void dumpHprofDataDdms()>
<com.android.internal.widget.multiwaveview.GlowPadView.OnTriggerListener: void onFinishFinalAnimation()>
<android.content.ContentProviderOperation.Builder: android.content.ContentProviderOperation.Builder withYieldAllowed(boolean)>
<com.android.internal.telephony.ITelephonyRegistry: void notifyMessageWaitingChangedForPhoneId(int,long,boolean)>
<com.android.ims.internal.IImsCallSession: void sendUssd(java.lang.String)>
<android.view.VelocityTracker: android.view.VelocityTracker obtain()>
<android.opengl.GLES11Ext: void glAlphaFuncxOES(int,int)>
<android.media.AudioService.VolumeStreamState: int getIndex(int)>
<android.util.Range: android.util.Range intersect(android.util.Range)>
<android.telephony.cdma.CdmaCellLocation: double convertQuartSecToDecDegrees(int)>
<android.content.ContentResolver: int getIsSyncable(android.accounts.Account,java.lang.String)>
<android.inputmethodservice.Keyboard: android.inputmethodservice.Keyboard.Key createKeyFromXml(android.content.res.Resources,android.inputmethodservice.Keyboard.Row,int,int,android.content.res.XmlResourceParser)>
<android.renderscript.Element: android.renderscript.Element PROGRAM_VERTEX(android.renderscript.RenderScript)>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence)>
<android.widget.Checkable: void setChecked(boolean)>
<android.net.wifi.WifiManager: int getWifiApState()>
<android.widget.AbsListView: void requestLayout()>
<android.hardware.camera2.params.ColorSpaceTransform: void <init>(android.util.Rational[])>
<android.view.MenuItem: android.view.MenuItem setChecked(boolean)>
<android.content.Context: java.io.File getCodeCacheDir()>
<com.android.internal.widget.DecorToolbar: boolean showOverflowMenu()>
<android.os.Parcel: void writeIntArray(int[])>
<android.location.GpsStatus.Listener: void onGpsStatusChanged(int)>
<android.app.IActivityManager: void killApplicationProcess(java.lang.String,int)>
<com.android.internal.util.BitwiseOutputStream.AccessException: void <init>(java.lang.String)>
<android.renderscript.ScriptIntrinsicConvolve5x5: void setCoefficients(float[])>
<com.android.internal.widget.SlidingTab: void setLeftTabResources(int,int,int,int)>
<android.net.LinkQualityInfo: int getTheoreticalRxBandwidth()>
<android.text.style.TypefaceSpan: int describeContents()>
<android.text.method.ArrowKeyMovementMethod: boolean home(android.widget.TextView,android.text.Spannable)>
<com.android.internal.util.XmlUtils: int convertValueToInt(java.lang.CharSequence,int)>
<android.os.IPowerManager: void wakeUp(long)>
<android.util.EventLogTags: void <init>(java.io.BufferedReader)>
<com.google.android.util.AbstractMessageParser.Video: void <init>(java.lang.String,java.lang.String)>
<android.widget.SimpleExpandableListAdapter: int getGroupCount()>
<android.view.View: boolean dispatchNestedPreFling(float,float)>
<android.view.WindowInsets: int getWindowDecorInsetBottom()>
<android.service.notification.NotificationListenerService.RankingMap: boolean getRanking(java.lang.String,android.service.notification.NotificationListenerService.Ranking)>
<android.media.audiofx.Visualizer.OnDataCaptureListener: void onFftDataCapture(android.media.audiofx.Visualizer,byte[],int)>
<android.bluetooth.BluetoothMasInstance: int getChannel()>
<android.provider.Settings.System: int getInt(android.content.ContentResolver,java.lang.String)>
<android.renderscript.ProgramVertexFixedFunction: void bindConstants(android.renderscript.ProgramVertexFixedFunction.Constants)>
<android.os.BatteryManager: long getLongProperty(int)>
<android.renderscript.Element: android.renderscript.Element U8(android.renderscript.RenderScript)>
<android.net.wifi.p2p.WifiP2pWfdInfo: void <init>(int,int,int)>
<android.media.RemoteControlClient.OnGetPlaybackPositionListener: long onGetPlaybackPosition()>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator translationXBy(float)>
<android.widget.DialerFilter: java.lang.CharSequence getLetters()>
<android.renderscript.RSSurfaceView: void resume()>
<android.app.ActivityThread: android.content.IContentProvider acquireProvider(android.content.Context,java.lang.String,int,boolean)>
<android.appwidget.AppWidgetProviderInfo: int describeContents()>
<android.webkit.WebSettings: void setDefaultZoom(android.webkit.WebSettings.ZoomDensity)>
<android.preference.ListPreference: java.lang.CharSequence[] getEntries()>
<android.renderscript.Byte3: void negate()>
<android.app.Instrumentation: void checkStartActivityResult(int,java.lang.Object)>
<android.view.ViewGroup: void resetResolvedTextAlignment()>
<android.app.admin.DeviceAdminReceiver: android.app.admin.DevicePolicyManager getManager(android.content.Context)>
<android.renderscript.Allocation: android.renderscript.Allocation createCubemapFromCubeFaces(android.renderscript.RenderScript,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.renderscript.Allocation.MipmapControl,int)>
<android.widget.ProgressBar: int getSecondaryProgress()>
<android.view.accessibility.AccessibilityWindowInfo: int hashCode()>
<android.media.audiopolicy.AudioPolicyConfig: void addMix(android.media.audiopolicy.AudioMix)>
<android.view.View: int computeVerticalScrollExtent()>
<android.animation.LayoutTransition: android.animation.TimeInterpolator getInterpolator(int)>
<android.net.wifi.p2p.WifiP2pGroupList: void add(android.net.wifi.p2p.WifiP2pGroup)>
<android.hardware.location.GeofenceHardware: boolean pauseGeofence(int,int)>
<android.filterfw.core.VertexFrame: void setInts(int[])>
<com.android.internal.telecom.IConnectionServiceAdapter: void queryRemoteConnectionServices(com.android.internal.telecom.RemoteServiceCallback)>
<android.content.IContentService: void addPeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle,long)>
<android.app.QueuedWork: boolean hasPendingWork()>
<android.media.projection.MediaProjectionInfo: android.os.UserHandle getUserHandle()>
<com.google.android.util.AbstractMessageParser: void <init>(java.lang.String)>
<android.inputmethodservice.KeyboardView: void setProximityCorrectionEnabled(boolean)>
<android.widget.Editor.TextModifyOperation: void undo()>
<android.widget.Gallery: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.media.MediaMuxer: void <init>(java.lang.String,int)>
<android.hardware.usb.UsbDevice: int getDeviceClass()>
<android.widget.Editor: boolean performLongClick(boolean)>
<android.widget.ImageView: void onMeasure(int,int)>
<android.view.GestureDetector: void <init>(android.content.Context,android.view.GestureDetector.OnGestureListener,android.os.Handler,boolean)>
<android.view.View: int getLayoutDirection()>
<android.transition.TransitionPropagation: void captureValues(android.transition.TransitionValues)>
<android.hardware.Camera: void startFaceDetection()>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.io.Serializable)>
<android.widget.SimpleCursorTreeAdapter: void bindGroupView(android.view.View,android.content.Context,android.database.Cursor,boolean)>
<android.speech.tts.TextToSpeechService: int onIsLanguageAvailable(java.lang.String,java.lang.String,java.lang.String)>
<android.widget.ListPopupWindow: void setAdapter(android.widget.ListAdapter)>
<android.media.SoundPool.Builder: android.media.SoundPool.Builder setMaxStreams(int)>
<android.provider.DocumentsProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
<android.renderscript.Element: android.renderscript.Element ALLOCATION(android.renderscript.RenderScript)>
<android.opengl.GLES11Ext: void glLightModelxvOES(int,int[],int)>
<android.widget.CalendarView.CalendarViewDelegate: void setSelectedDateVerticalBar(android.graphics.drawable.Drawable)>
<android.location.IFusedProvider: void onFusedLocationHardwareChange(android.hardware.location.IFusedLocationHardware)>
<android.inputmethodservice.InputMethodService: boolean isExtractViewShown()>
<android.location.GpsMeasurementsEvent: java.lang.String toString()>
<android.view.inputmethod.InputMethod: void setSessionEnabled(android.view.inputmethod.InputMethodSession,boolean)>
<android.filterfw.core.SimpleFrameManager: android.filterfw.core.Frame retainFrame(android.filterfw.core.Frame)>
<android.webkit.FindActionModeCallback: void beforeTextChanged(java.lang.CharSequence,int,int,int)>
<android.hardware.usb.UsbManager: java.util.HashMap getDeviceList()>
<android.bluetooth.le.TruncatedFilter: android.bluetooth.le.ScanFilter getFilter()>
<android.app.ActivityManagerProxy: java.util.List getTasks(int,int)>
<android.content.IContentProvider: android.net.Uri uncanonicalize(java.lang.String,android.net.Uri)>
<android.content.res.CompatibilityInfo: void applyToConfiguration(int,android.content.res.Configuration)>
<android.content.res.Resources: int getInteger(int)>
<android.view.inputmethod.CursorAnchorInfo: android.graphics.RectF getCharacterBounds(int)>
<android.media.MediaExtractor: void release()>
<android.app.AlertDialog: void <init>(android.content.Context,int)>
<android.net.IpConfiguration: void setHttpProxy(android.net.ProxyInfo)>
<android.net.LocalSocket: void <init>(java.io.FileDescriptor)>
<android.graphics.drawable.LayerDrawable: boolean getPadding(android.graphics.Rect)>
<com.google.android.util.AbstractMessageParser.TrieNode: void addToTrie(com.google.android.util.AbstractMessageParser.TrieNode,java.lang.String,java.lang.String)>
<android.widget.Gallery: void <init>(android.content.Context)>
<android.os.IUserManager: java.util.List getProfiles(int,boolean)>
<android.os.FileUtils: boolean deleteOlderFiles(java.io.File,int,long)>
<android.widget.ActivityChooserView: void setActivityChooserModel(android.widget.ActivityChooserModel)>
<android.renderscript.Int3: void addAt(int,int)>
<android.view.MenuItem: char getAlphabeticShortcut()>
<android.media.AudioService: int getLastAudibleStreamVolume(int)>
<android.widget.RemoteViewsAdapter: void setRemoteViewsOnClickHandler(android.widget.RemoteViews.OnClickHandler)>
<android.app.ApplicationThreadProxy: void scheduleConfigurationChanged(android.content.res.Configuration)>
<com.android.internal.http.multipart.MultipartEntity: void writeTo(java.io.OutputStream)>
<com.android.internal.app.ProcessStats: long dumpSingleTime(java.io.PrintWriter,java.lang.String,long[],int,long,long)>
<android.view.InputEventSender: boolean sendInputEvent(int,android.view.InputEvent)>
<android.webkit.WebViewProvider.ViewDelegate: void onMeasure(int,int)>
<android.telecom.InCallAdapter: void swapConference(java.lang.String)>
<android.hardware.GeomagneticField: float getDeclination()>
<android.net.NetworkPolicy: boolean isOverWarning(long)>
<com.android.ims.internal.IImsCallSessionListener: void callSessionStartFailed(com.android.ims.internal.IImsCallSession,com.android.ims.ImsReasonInfo)>
<com.android.internal.widget.SubtitleView: void onLayout(boolean,int,int,int,int)>
<android.telephony.SubscriptionManager: void setDefaultDataSubId(long)>
<android.widget.ImageView: void clearColorFilter()>
<android.widget.HeaderViewListAdapter: int getItemViewType(int)>
<android.graphics.Path: void cubicTo(float,float,float,float,float,float)>
<android.app.Instrumentation: android.app.UiAutomation getUiAutomation()>
<android.telephony.PhoneStateListener: void onServiceStateChanged(android.telephony.ServiceState)>
<android.opengl.GLES11: void glTexParameterxv(int,int,int[],int)>
<android.hardware.display.WifiDisplayStatus: android.hardware.display.WifiDisplay getActiveDisplay()>
<com.android.internal.widget.ExploreByTouchHelper: boolean sendEventForVirtualView(int,int)>
<com.android.internal.widget.ToolbarWidgetWrapper: boolean hasLogo()>
<android.app.Activity: boolean onKeyShortcut(int,android.view.KeyEvent)>
<com.android.internal.database.SortCursor: void unregisterDataSetObserver(android.database.DataSetObserver)>
<android.drm.DrmInfo: void <init>(int,byte[],java.lang.String)>
<android.os.Debug: java.lang.String[] getVmFeatureList()>
<android.view.inputmethod.InputMethod: void restartInput(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo)>
<android.opengl.GLES11Ext: void glGetTexGenivOES(int,int,int[],int)>
<android.app.IActivityManager: void moveTaskToBack(int)>
<com.android.internal.content.PackageHelper: long calculateInstalledSize(android.content.pm.PackageParser.PackageLite,com.android.internal.content.NativeLibraryHelper.Handle,boolean,java.lang.String)>
<android.renderscript.ProgramStore: android.renderscript.ProgramStore BLEND_NONE_DEPTH_NONE(android.renderscript.RenderScript)>
<android.media.projection.MediaProjectionManager: void addCallback(android.media.projection.MediaProjectionManager.Callback,android.os.Handler)>
<android.view.RenderNodeAnimator: void setTarget(android.graphics.Canvas)>
<com.google.android.gles_jni.GLImpl: void glNormal3f(float,float,float)>
<android.media.MediaTimeProvider: long getCurrentTimeUs(boolean,boolean)>
<android.view.GestureDetector.OnGestureListener: boolean onDown(android.view.MotionEvent)>
<android.webkit.WebView: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.graphics.ComposeShader: android.graphics.Shader copy()>
<com.android.internal.content.SelectionBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.android.internal.app.IBatteryStats: void noteWifiOn()>
<android.database.MatrixCursor: android.database.MatrixCursor.RowBuilder newRow()>
<android.media.AudioManager: void dispatchMediaKeyEvent(android.view.KeyEvent)>
<android.content.RestrictionEntry: int hashCode()>
<android.media.AudioManager: int getStreamMaxVolume(int)>
<android.media.SoundPool: void stop(int)>
<android.renderscript.Element: android.renderscript.Element createVector(android.renderscript.RenderScript,android.renderscript.Element.DataType,int)>
<android.app.ActivityManager: void moveTaskToFront(int,int,android.os.Bundle)>
<android.media.RemoteDisplay.Listener: void onDisplayConnected(android.view.Surface,int,int,int,int)>
<android.widget.NumberPicker: void onDraw(android.graphics.Canvas)>
<android.opengl.GLES11Ext: void glTexParameterxvOES(int,int,int[],int)>
<android.service.notification.ZenModeConfig.DowntimeInfo: int hashCode()>
<com.android.internal.app.MediaRouteControllerDialog: boolean onKeyUp(int,android.view.KeyEvent)>
<android.graphics.drawable.Drawable: android.graphics.ColorFilter getColorFilter()>
<android.bluetooth.BluetoothDevice: int describeContents()>
<android.opengl.GLES30: void glGetSamplerParameteriv(int,int,java.nio.IntBuffer)>
<com.android.internal.widget.ActionBarContextView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.internal.widget.LockPatternUtils: boolean savedPatternExists()>
<android.app.AlarmManager: void setWindow(int,long,long,android.app.PendingIntent)>
<android.content.pm.VerifierDeviceIdentity: void <init>(long)>
<android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeAdvertiser getBluetoothLeAdvertiser()>
<android.content.Context: java.lang.ClassLoader getClassLoader()>
<android.print.PrinterInfo: java.lang.String toString()>
<android.view.accessibility.CaptioningManager: void removeCaptioningChangeListener(android.view.accessibility.CaptioningManager.CaptioningChangeListener)>
<android.content.pm.PackageManager: void verifyPendingInstall(int,int)>
<com.android.internal.os.BatteryStatsImpl: long[] getDischargeStepDurationsArray()>
<android.util.LongSparseArray: java.lang.String toString()>
<android.os.Parcel: android.util.Size readSize()>
<com.android.internal.widget.LockPatternUtils: void setLockScreenDisabled(boolean)>
<android.media.MediaCodec.MediaImage: void close()>
<android.hardware.TriggerEventListener: void onTrigger(android.hardware.TriggerEvent)>
<android.net.wifi.WifiActivityEnergyInfo: int getControllerIdleTimeMillis()>
<android.app.Dialog: void setCanceledOnTouchOutside(boolean)>
<android.widget.AbsListView: void smoothScrollToPosition(int)>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getError()>
<android.view.WindowManager: android.view.Display getDefaultDisplay()>
<com.android.internal.app.IBatteryStats: void noteStopSensor(int,int)>
<com.android.internal.view.IInputMethodManager: boolean setInputMethodEnabled(java.lang.String,boolean)>
<android.media.MediaFile: boolean isPlayListFileType(int)>
<android.location.Location: boolean isFromMockProvider()>
<com.android.internal.util.Predicates: com.android.internal.util.Predicate or(java.lang.Iterable)>
<android.content.pm.IPackageInstallObserver2: void onUserActionRequired(android.content.Intent)>
<android.app.FragmentManagerImpl: int getBackStackEntryCount()>
<com.android.internal.http.multipart.PartSource: java.lang.String getFileName()>
<android.util.Property: android.util.Property of(java.lang.Class,java.lang.Class,java.lang.String)>
<android.widget.DatePicker: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.widget.ScrollView: void onRestoreInstanceState(android.os.Parcelable)>
<android.media.tv.TvInputManager.SessionCallback: void onSessionCreated(android.media.tv.TvInputManager.Session)>
<com.android.internal.app.RestrictionsPinActivity: void onClick(android.view.View)>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>
<android.hardware.hdmi.HdmiDeviceInfo: int getDevicePowerStatus()>
<android.widget.AbsListView: int getVerticalScrollbarWidth()>
<com.android.internal.view.menu.MenuPopupHelper: void setGravity(int)>
<android.media.MutableBackgroundColorSpan: void writeToParcel(android.os.Parcel,int)>
<android.hardware.camera2.impl.CameraDeviceImpl: int setRepeatingBurst(java.util.List,android.hardware.camera2.impl.CameraDeviceImpl.CaptureCallback,android.os.Handler)>
<android.widget.RemoteViews: void setChronometer(int,long,java.lang.String,boolean)>
<android.content.IntentSender: int hashCode()>
<android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceData(android.os.ParcelUuid,byte[],byte[])>
<android.media.session.MediaSession.Callback: void onSkipToPrevious()>
<android.content.ContextWrapper: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,int,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<com.android.internal.content.PackageMonitor: void onHandleUserStop(android.content.Intent,int)>
<android.renderscript.Allocation: void copy1DRangeFromUnchecked(int,int,int[])>
<android.hardware.camera2.CameraCharacteristics: java.util.List getAvailableCaptureResultKeys()>
<android.app.VoiceInteractor.CommandRequest: void <init>(java.lang.String,android.os.Bundle)>
<android.inputmethodservice.KeyboardView.OnKeyboardActionListener: void onPress(int)>
<android.telecom.TelecomManager: java.util.List getCallCapablePhoneAccounts()>
<android.net.MailTo: java.lang.String getCc()>
<android.hardware.soundtrigger.SoundTrigger.RecognitionEvent: void writeToParcel(android.os.Parcel,int)>
<android.widget.TextView: void addTextChangedListener(android.text.TextWatcher)>
<com.google.android.util.AbstractMessageParser.Html: boolean isHtml()>
<android.opengl.GLES20: void glGetUniformiv(int,int,int[],int)>
<android.app.LoadedApk: java.lang.String getResDir()>
<android.net.wifi.WifiChannel: int describeContents()>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int,int,java.lang.Object[])>
<android.widget.AlphabetIndexer: java.lang.Object[] getSections()>
<android.content.SyncAdaptersCache: android.content.SyncAdapterType parseServiceAttributes(android.content.res.Resources,java.lang.String,android.util.AttributeSet)>
<android.net.SSLCertificateSocketFactory: org.apache.http.conn.ssl.SSLSocketFactory getHttpSocketFactory(int,android.net.SSLSessionCache)>
<com.android.internal.os.BatteryStatsImpl.Uid: com.android.internal.os.BatteryStatsImpl.Uid.Pkg getPackageStatsLocked(java.lang.String)>
<com.android.internal.view.IInputConnectionWrapper: void getTextAfterCursor(int,int,int,com.android.internal.view.IInputContextCallback)>
<android.renderscript.Program.BaseProgramBuilder: int getCurrentConstantIndex()>
<android.app.Instrumentation: android.content.Context getTargetContext()>
<android.app.usage.ConfigurationStats: int describeContents()>
<android.renderscript.Double3: android.renderscript.Double3 mul(android.renderscript.Double3,android.renderscript.Double3)>
<android.renderscript.Int3: android.renderscript.Int3 div(android.renderscript.Int3,android.renderscript.Int3)>
<android.content.CursorLoader: void setSortOrder(java.lang.String)>
<android.nfc.tech.MifareClassic: int getTimeout()>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getAllIllegal()>
<android.widget.TextView: android.graphics.Typeface getTypeface()>
<android.graphics.drawable.GradientDrawable: void setOrientation(android.graphics.drawable.GradientDrawable.Orientation)>
<android.media.MediaPlayer: void setLooping(boolean)>
<android.animation.AnimatorSet: boolean isStarted()>
<android.renderscript.Allocation: void copy1DRangeFrom(int,int,android.renderscript.Allocation,int)>
<android.media.tv.TvStreamConfig.Builder: android.media.tv.TvStreamConfig.Builder streamId(int)>
<android.media.IAudioService: boolean isStreamMute(int)>
<android.media.MediaDrm: void <init>(java.util.UUID)>
<com.android.ims.internal.IImsCallSession: void setListener(com.android.ims.internal.IImsCallSessionListener)>
<android.net.wifi.p2p.WifiP2pGroup: void addClient(android.net.wifi.p2p.WifiP2pDevice)>
<android.telecom.PhoneAccount: void writeToParcel(android.os.Parcel,int)>
<android.app.AppOpsManager.OpEntry: void <init>(int,int,long,long,int)>
<android.util.Log: int w(java.lang.String,java.lang.String)>
<android.text.method.ArrowKeyMovementMethod: boolean pageDown(android.widget.TextView,android.text.Spannable)>
<android.media.ImageReader: void close()>
<android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings build()>
<android.telephony.PreciseDataConnectionState: void writeToParcel(android.os.Parcel,int)>
<android.hardware.camera2.legacy.RequestHandlerThread: void waitUntilIdle()>
<android.text.method.ScrollingMovementMethod: boolean top(android.widget.TextView,android.text.Spannable)>
<android.widget.PopupWindow: void setSplitTouchEnabled(boolean)>
<android.content.ContentValues: void putAll(android.content.ContentValues)>
<android.view.View: android.graphics.drawable.Drawable getBackground()>
<android.view.WindowManagerPolicy.WindowState: boolean showLw(boolean)>
<android.filterfw.core.FilterFactory: android.filterfw.core.Filter createFilterByClassName(java.lang.String,java.lang.String)>
<android.widget.ZoomControls: void <init>(android.content.Context)>
<android.net.wifi.RttManager.RttListener: void onSuccess(android.net.wifi.RttManager.RttResult[])>
<android.text.format.DateUtils: java.util.Formatter formatDateRange(android.content.Context,java.util.Formatter,long,long,int,java.lang.String)>
<com.android.internal.inputmethod.InputMethodSubtypeSwitchingController.ImeSubtypeListItem: int compareTo(com.android.internal.inputmethod.InputMethodSubtypeSwitchingController.ImeSubtypeListItem)>
<android.security.KeyStore: android.security.KeyStore getInstance()>
<android.transition.ChangeScroll: void captureStartValues(android.transition.TransitionValues)>
<com.android.internal.widget.DecorToolbar: void setEmbeddedTabView(com.android.internal.widget.ScrollingTabContainerView)>
<android.os.Environment: java.io.File maybeTranslateEmulatedPathToInternal(java.io.File)>
<android.content.IntentFilter: java.util.Iterator schemeSpecificPartsIterator()>
<android.app.ActivityManager.TaskDescription: void <init>(java.lang.String)>
<android.inputmethodservice.InputMethodService: void updateInputViewShown()>
<com.android.internal.view.IInputConnectionWrapper: void getSelectedText(int,int,com.android.internal.view.IInputContextCallback)>
<android.media.tv.TvStreamConfig.Builder: android.media.tv.TvStreamConfig.Builder generation(int)>
<android.view.View: int getLayerType()>
<android.media.MediaCodecInfo.CodecCapabilities: android.media.MediaCodecInfo.CodecCapabilities createFromProfileLevel(java.lang.String,int,int)>
<android.text.style.TtsSpan.DateBuilder: android.text.style.TtsSpan.DateBuilder setMonth(int)>
<android.renderscript.Double4: void negate()>
<com.android.internal.app.WindowDecorActionBar: float getElevation()>
<android.telephony.IccOpenLogicalChannelResponse: int getStatus()>
<android.view.InputEvent: void recycle()>
<android.hardware.location.IFusedLocationHardware: void updateBatchingOptions(int,android.location.FusedBatchOptions)>
<android.text.style.CharacterStyle: void updateDrawState(android.text.TextPaint)>
<com.android.internal.widget.EditableInputConnection: boolean clearMetaKeyStates(int)>
<android.content.ComponentName: void appendShortString(java.lang.StringBuilder)>
<android.view.Window: void onActive()>
<com.android.internal.http.multipart.FilePart: void sendDispositionHeader(java.io.OutputStream)>
<android.view.View: boolean isLayoutModeOptical(java.lang.Object)>
<android.view.MotionEvent: float getX(int)>
<android.media.RingtoneManager: android.database.Cursor getCursor()>
<android.nfc.cardemulation.HostApduService: void notifyUnhandled()>
<com.android.internal.os.BatteryStatsImpl: void noteProcessFinishLocked(java.lang.String,int)>
<com.android.internal.app.IBatteryStats: void notePhoneState(int)>
<android.media.MediaFile: boolean isImageFileType(int)>
<android.provider.DocumentsProvider: java.lang.String getDocumentType(java.lang.String)>
<android.media.projection.IMediaProjection: boolean canProjectSecureVideo()>
<android.nfc.IAppCallback: void onTagDiscovered(android.nfc.Tag)>
<com.android.internal.view.menu.ActionMenu: int size()>
<android.content.ContentProviderNative: android.content.IContentProvider asInterface(android.os.IBinder)>
<android.telecom.TelecomManager: void showInCallScreen(boolean)>
<android.widget.GridView: int computeVerticalScrollRange()>
<android.graphics.Region: boolean quickReject(android.graphics.Rect)>
<android.content.ContentValues: void put(java.lang.String,java.lang.Byte)>
<android.widget.CursorAdapter: int getCount()>
<android.view.WindowManagerPolicy.WindowManagerFuncs: int getCameraLensCoverState()>
<android.telephony.CellInfoLte: void setCellIdentity(android.telephony.CellIdentityLte)>
<android.os.INetworkManagementService: void removeRoute(int,android.net.RouteInfo)>
<android.renderscript.Short4: short elementSum()>
<com.android.internal.widget.ToolbarWidgetWrapper: boolean canShowOverflowMenu()>
<android.preference.PreferenceFragment: void onBindPreferences()>
<android.app.backup.BackupHelperDispatcher: void performBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>
<android.bluetooth.IBluetoothHeadsetClient: int getAudioState(android.bluetooth.BluetoothDevice)>
<android.util.JsonReader: double nextDouble()>
<android.text.style.LocaleSpan: java.util.Locale getLocale()>
<com.android.internal.telecom.IInCallAdapter: void mergeConference(java.lang.String)>
<android.graphics.Camera: void rotateZ(float)>
<android.view.KeyEvent: char getMatch(char[])>
<android.webkit.WebChromeClient: void onShowCustomView(android.view.View,int,android.webkit.WebChromeClient.CustomViewCallback)>
<android.view.inputmethod.InputConnection: java.lang.CharSequence getTextAfterCursor(int,int)>
<com.android.internal.widget.ILockSettings: boolean checkPattern(java.lang.String,int)>
<android.view.TextureView: android.graphics.SurfaceTexture getSurfaceTexture()>
<android.net.DhcpStateMachine: android.net.DhcpStateMachine makeDhcpStateMachine(android.content.Context,com.android.internal.util.StateMachine,java.lang.String)>
<android.content.ClipDescription: java.lang.String getMimeType(int)>
<android.net.SamplingDataTracker: long getSampledTxByteCount()>
<android.view.HardwareRenderer.HardwareDrawCallbacks: void onHardwarePostDraw(android.view.HardwareCanvas)>
<android.bluetooth.IBluetoothHeadsetPhone: boolean processChld(int)>
<android.os.Debug.MemoryInfo: void readFromParcel(android.os.Parcel)>
<android.app.ProgressDialog: void incrementSecondaryProgressBy(int)>
<android.filterfw.format.PrimitiveFormat: android.filterfw.core.MutableFrameFormat createInt32Format(int)>
<android.net.wifi.WifiInfo: void setSSID(android.net.wifi.WifiSsid)>
<android.net.http.RequestHandle: void handleSslErrorResponse(boolean)>
<android.graphics.Matrix: java.lang.String toShortString()>
<android.text.style.TtsSpan.TimeBuilder: android.text.style.TtsSpan.TimeBuilder setHours(int)>
<android.bluetooth.BluetoothGattCharacteristic: int getPermissions()>
<com.android.internal.os.BatteryStatsImpl: int getDischargeCurrentLevel()>
<com.android.internal.policy.IPolicy: android.view.WindowManagerPolicy makeNewWindowManager()>
<android.media.VolumeProvider: void setCurrentVolume(int)>
<android.content.res.AssetFileDescriptor: android.os.ParcelFileDescriptor getParcelFileDescriptor()>
<android.telephony.CellSignalStrengthCdma: void setEvdoEcio(int)>
<android.ddm.DdmHandleHello: org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)>
<android.view.GhostView: void removeGhost(android.view.View)>
<android.gesture.GestureStore: int getOrientationStyle()>
<android.view.SubMenu: android.view.MenuItem getItem()>
<android.filterfw.core.GLFrame: java.nio.ByteBuffer getData()>
<android.net.wifi.ScanResult: void writeToParcel(android.os.Parcel,int)>
<android.view.WindowManagerPolicy: boolean inKeyguardRestrictedKeyInputMode()>
<android.widget.CompoundButton: boolean performClick()>
<com.android.internal.os.BinderInternal: void forceGc(java.lang.String)>
<android.os.SystemProperties: java.lang.String get(java.lang.String)>
<android.view.RenderNode: boolean setScaleY(float)>
<android.widget.Spinner: void setOnItemClickListener(android.widget.AdapterView.OnItemClickListener)>
<android.hardware.camera2.utils.HashCodeHelpers: int hashCode(java.lang.Object,java.lang.Object)>
<com.android.internal.telephony.ITelephonyRegistry: void notifyOtaspChanged(int)>
<android.view.inputmethod.InputMethod: void bindInput(android.view.inputmethod.InputBinding)>
<android.view.RenderNodeAnimator: void setStartValue(float)>
<com.android.internal.os.BatteryStatsImpl.Uid: void noteVideoTurnedOnLocked(long)>
<android.location.Address: java.lang.String getSubThoroughfare()>
<android.net.wifi.WifiEnterpriseConfig: void setPassword(java.lang.String)>
<android.graphics.Typeface: boolean equals(java.lang.Object)>
<android.net.WebAddress: java.lang.String getScheme()>
<com.google.android.gles_jni.GLImpl: void glClipPlanef(int,java.nio.FloatBuffer)>
<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageArchiveInfo(java.lang.String,int)>
<android.filterpacks.imageproc.FisheyeFilter: void <init>(java.lang.String)>
<android.telecom.Call: void conference(android.telecom.Call)>
<android.opengl.GLES20: void glGetActiveAttrib(int,int,int,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,byte)>
<android.filterfw.core.FilterSurfaceView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.opengl.GLES10: void glViewport(int,int,int,int)>
<android.opengl.GLES31: void glGetProgramResourceiv(int,int,int,int,int[],int,int,int[],int,int[],int)>
<com.android.internal.view.ActionBarPolicy: boolean showsOverflowMenuButton()>
<android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean,boolean)>
<android.os.storage.IMountService: int resizeSecureContainer(java.lang.String,int,java.lang.String)>
<android.hardware.camera2.marshal.impl.MarshalQueryablePrimitive: android.hardware.camera2.marshal.Marshaler createMarshaler(android.hardware.camera2.utils.TypeReference,int)>
<android.filterfw.core.SyncRunner: void scheduleFilterWake(android.filterfw.core.Filter,int)>
<android.view.textservice.TextInfo: void writeToParcel(android.os.Parcel,int)>
<android.app.AlertDialog: android.widget.ListView getListView()>
<android.renderscript.Program.BaseProgramBuilder: void initProgram(android.renderscript.Program)>
<android.bluetooth.le.AdvertiseData: boolean getIncludeDeviceName()>
<com.android.internal.view.WindowManagerPolicyThread: android.os.Looper getLooper()>
<android.app.backup.RestoreSession: int restoreAll(long,android.app.backup.RestoreObserver)>
<android.telecom.PhoneAccount: android.net.Uri getSubscriptionAddress()>
<android.database.MergeCursor: void close()>
<android.widget.SearchView: java.lang.CharSequence getQuery()>
<android.service.voice.VoiceInteractionServiceInfo: java.lang.String getParseError()>
<android.content.pm.PackageStats: java.lang.String toString()>
<android.media.MediaDrm: byte[] provideKeyResponse(byte[],byte[])>
<android.view.accessibility.IAccessibilityInteractionConnection: void findAccessibilityNodeInfosByText(long,java.lang.String,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)>
<android.media.AudioManager: int getStreamVolume(int)>
<android.content.pm.Signature: boolean areExactMatch(android.content.pm.Signature[],android.content.pm.Signature[])>
<android.util.LongSparseLongArray: void put(long,long)>
<android.renderscript.Short2: android.renderscript.Short2 mul(android.renderscript.Short2,android.renderscript.Short2)>
<android.view.WindowManagerPolicy: void getContentInsetHintLw(android.view.WindowManager.LayoutParams,android.graphics.Rect)>
<android.content.pm.Signature: java.security.PublicKey getPublicKey()>
<android.widget.AdapterViewFlipper: int getFlipInterval()>
<android.filterfw.geometry.Quad: android.filterfw.geometry.Quad translated(android.filterfw.geometry.Point)>
<android.gesture.GestureOverlayView: android.graphics.Paint getGesturePaint()>
<android.view.ViewGroup: void onViewRemoved(android.view.View)>
<android.view.DisplayInfo: java.lang.String toString()>
<android.os.PersistableBundle: java.lang.Object clone()>
<android.media.AudioTrack: void flush()>
<com.google.android.gles_jni.GLImpl: void glGenRenderbuffersOES(int,java.nio.IntBuffer)>
<android.database.AbstractCursor: boolean requery()>
<android.app.admin.DevicePolicyManager: java.util.List getPermittedInputMethods(android.content.ComponentName)>
<android.text.method.BaseMovementMethod: boolean handleMovementKey(android.widget.TextView,android.text.Spannable,int,int,android.view.KeyEvent)>
<android.util.TrustedTime: long getCacheCertainty()>
<android.os.BatteryStats: long computeUptime(long,int)>
<android.webkit.WebViewProvider: void setVerticalScrollbarOverlay(boolean)>
<android.view.animation.GridLayoutAnimationController: void setDirection(int)>
<android.widget.DatePickerController: int getMinYear()>
<android.filterpacks.videosrc.SurfaceTextureTarget: void close(android.filterfw.core.FilterContext)>
<android.content.res.CompatibilityInfo: android.content.res.CompatibilityInfo.Translator getTranslator()>
<android.inputmethodservice.ExtractEditText: boolean onTextContextMenuItem(int)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(java.lang.String,android.animation.TypeConverter,android.graphics.Path)>
<android.renderscript.Double4: void add(double)>
<android.graphics.drawable.NinePatchDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap,byte[],android.graphics.Rect,java.lang.String)>
<android.widget.SearchView: void setAppSearchData(android.os.Bundle)>
<android.app.AlertDialog.Builder: android.app.AlertDialog create()>
<android.telephony.TelephonyManager: java.lang.String getGroupIdLevel1()>
<android.view.PointerIcon: boolean equals(java.lang.Object)>
<android.view.ViewConfiguration: int getScaledDoubleTapSlop()>
<android.os.Environment: java.io.File getVendorDirectory()>
<android.net.wifi.p2p.WifiP2pGroupList: void writeToParcel(android.os.Parcel,int)>
<android.renderscript.ScriptIntrinsicColorMatrix: void setAdd(float,float,float,float)>
<com.android.ims.ImsReasonInfo: int getReasonType()>
<android.hardware.Camera.Parameters: void setWhiteBalance(java.lang.String)>
<android.webkit.WebView: void postUrl(java.lang.String,byte[])>
<android.content.pm.UserInfo: boolean supportsSwitchTo()>
<android.util.FloatMath: float pow(float,float)>
<com.android.internal.app.IBatteryStats: void notePhoneOff()>
<android.widget.ActionMenuPresenter: android.view.View getItemView(com.android.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)>
<android.widget.TextView: void stopSelectionActionMode()>
<android.location.LocationManager: void addTestProvider(java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int)>
<android.widget.TextView: void setMovementMethod(android.text.method.MovementMethod)>
<android.net.NetworkAgent: void <init>(android.os.Looper,android.content.Context,java.lang.String,android.net.NetworkInfo,android.net.NetworkCapabilities,android.net.LinkProperties,int,android.net.NetworkMisc)>
<android.opengl.GLES31: void glProgramUniformMatrix4x2fv(int,int,int,boolean,float[],int)>
<android.renderscript.ScriptGroup: void setInput(android.renderscript.Script.KernelID,android.renderscript.Allocation)>
<android.graphics.drawable.Drawable: void unscheduleSelf(java.lang.Runnable)>
<android.location.GpsMeasurement: boolean hasAzimuthUncertaintyInDeg()>
<android.filterpacks.imageproc.ColorTemperatureFilter: void process(android.filterfw.core.FilterContext)>
<android.transition.ChangeBounds: void setResizeClip(boolean)>
<android.print.PrintDocumentInfo: int getPageCount()>
<android.app.SearchableInfo: int getSearchButtonText()>
<android.os.Bundle: java.lang.ClassLoader getClassLoader()>
<android.graphics.drawable.GradientDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor queryWithFactory(android.database.sqlite.SQLiteDatabase.CursorFactory,boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.webkit.WebViewClient: void doUpdateVisitedHistory(android.webkit.WebView,java.lang.String,boolean)>
<android.opengl.GLES20: void glTexParameterf(int,int,float)>
<android.net.BaseNetworkStateTracker: boolean isDefaultRouteSet()>
<android.util.MonthDisplayHelper: void <init>(int,int)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setOnItemSelectedListener(android.widget.AdapterView.OnItemSelectedListener)>
<android.net.NetworkPolicy: void <init>(android.os.Parcel)>
<android.hardware.camera2.marshal.impl.MarshalQueryableParcelable: android.hardware.camera2.marshal.Marshaler createMarshaler(android.hardware.camera2.utils.TypeReference,int)>
<android.net.ConnectivityManager: void requestNetwork(android.net.NetworkRequest,android.net.ConnectivityManager.NetworkCallback)>
<android.widget.TextView: void onCommitCompletion(android.view.inputmethod.CompletionInfo)>
<android.view.WindowManagerImpl: android.view.WindowManagerImpl createLocalWindowManager(android.view.Window)>
<android.renderscript.FieldPacker: void addMatrix(android.renderscript.Matrix4f)>
<android.telephony.VoLteServiceState: boolean equals(java.lang.Object)>
<com.android.internal.widget.ActionBarOverlayLayout: void onNestedScrollAccepted(android.view.View,android.view.View,int)>
<android.app.ActivityManager.TaskDescription: void setIcon(android.graphics.Bitmap)>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getUserBadgedIcon(android.graphics.drawable.Drawable,android.os.UserHandle)>
<android.graphics.drawable.TransitionDrawable: void draw(android.graphics.Canvas)>
<android.graphics.Camera: void getMatrix(android.graphics.Matrix)>
<com.android.internal.os.BatteryStatsImpl.Uid: android.util.SparseArray getSensorStats()>
<android.view.MotionEvent: float getRawX()>
<com.android.internal.os.BatteryStatsImpl: long getWifiSignalStrengthTime(int,long,int)>
<android.media.tv.TvView: void <init>(android.content.Context)>
<android.app.ActivityManagerProxy: boolean isInLockTaskMode()>
<android.app.SearchableInfo: java.lang.String getSuggestIntentData()>
<android.widget.TableRow: void setOnHierarchyChangeListener(android.view.ViewGroup.OnHierarchyChangeListener)>
<android.media.ToneGenerator: int getAudioSessionId()>
<android.app.IActivityManager: void grantUriPermission(android.app.IApplicationThread,java.lang.String,android.net.Uri,int,int)>
<com.android.internal.util.FastPrintWriter: void flush()>
<android.widget.CursorFilter.CursorFilterClient: android.database.Cursor getCursor()>
<android.app.AppOpsManager: int startOpNoThrow(int,int,java.lang.String)>
<android.telephony.CellSignalStrengthWcdma: void <init>(android.telephony.CellSignalStrengthWcdma)>
<android.telephony.TelephonyManager: java.lang.String getImei()>
<android.media.RemoteDisplay: void resume()>
<android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback: boolean onRemoteAdapterConnected()>
<android.content.Intent: boolean isDocument()>
<com.android.internal.widget.DecorContentParent: void setMenu(android.view.Menu,com.android.internal.view.menu.MenuPresenter.Callback)>
<android.view.PointerIcon: android.view.PointerIcon createCustomIcon(android.graphics.Bitmap,float,float)>
<android.view.Window: void setSharedElementReturnTransition(android.transition.Transition)>
<android.media.MediaMuxer: void setOrientationHint(int)>
<android.widget.AbsListView: void onOverScrolled(int,int,boolean,boolean)>
<android.view.accessibility.AccessibilityNodeInfo: void enforceNotSealed()>
<android.opengl.GLES31: void glProgramUniformMatrix4fv(int,int,int,boolean,java.nio.FloatBuffer)>
<android.graphics.drawable.PictureDrawable: void setFilterBitmap(boolean)>
<android.view.View: boolean awakenScrollBars(int)>
<android.renderscript.RenderScriptGL.SurfaceConfig: void setColor(int,int)>
<android.inputmethodservice.KeyboardView: void setPreviewEnabled(boolean)>
<com.android.internal.view.menu.MenuPresenter: void setCallback(com.android.internal.view.menu.MenuPresenter.Callback)>
<android.util.Base64DataException: void <init>(java.lang.String)>
<android.media.audiofx.LoudnessEnhancer: float getTargetGain()>
<android.database.Cursor: boolean move(int)>
<android.widget.ArrayAdapter: void notifyDataSetChanged()>
<android.bluetooth.BluetoothGattCharacteristic: void setKeySize(int)>
<com.android.internal.os.BatteryStatsImpl: long getStartClockTime()>
<android.media.AudioManager: java.lang.String getProperty(java.lang.String)>
<com.android.ims.internal.IImsCallSession: void startConference(java.lang.String[],com.android.ims.ImsCallProfile)>
<android.view.InputEventReceiver.Factory: android.view.InputEventReceiver createInputEventReceiver(android.view.InputChannel,android.os.Looper)>
<com.google.android.gles_jni.GLImpl: void glGetTexGenfv(int,int,float[],int)>
<android.media.audiofx.AudioEffect: void finalize()>
<android.view.WindowManagerPolicy.WindowState: boolean hasAppShownWindows()>
<android.util.AtomicFile: long getLastModifiedTime()>
<com.android.internal.util.FastXmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>
<android.widget.Spinner: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.media.AudioRecord: int getChannelConfiguration()>
<com.android.internal.view.RotationPolicy: void unregisterRotationPolicyListener(android.content.Context,com.android.internal.view.RotationPolicy.RotationPolicyListener)>
<android.view.View: void <init>(android.content.Context)>
<android.media.session.PlaybackState.Builder: android.media.session.PlaybackState.Builder setActions(long)>
<android.view.animation.AlphaAnimation: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.AdapterView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.content.pm.PackageCleanItem: boolean equals(java.lang.Object)>
<android.provider.ContactsContract.Contacts: boolean isEnterpriseContactId(long)>
<android.text.Layout: int getLineForVertical(int)>
<android.app.PendingIntent: boolean equals(java.lang.Object)>
<android.database.CursorWindow: boolean isLong(int,int)>
<android.webkit.PluginList: void removePlugin(android.webkit.Plugin)>
<android.accessibilityservice.IAccessibilityServiceClient: void setConnection(android.accessibilityservice.IAccessibilityServiceConnection,int)>
<android.widget.ImageView: void setImageResource(int)>
<android.os.Bundle: android.os.IBinder getIBinder(java.lang.String)>
<android.filterpacks.performance.Throughput: java.lang.String toString()>
<android.renderscript.ScriptIntrinsic3DLUT: void setLUT(android.renderscript.Allocation)>
<com.android.internal.view.menu.MenuItemImpl: int getGroupId()>
<android.text.method.ScrollingMovementMethod: boolean bottom(android.widget.TextView,android.text.Spannable)>
<com.android.internal.widget.LockPatternUtils: void setCredentialRequiredToDecrypt(boolean)>
<android.app.Activity: void onConfigurationChanged(android.content.res.Configuration)>
<com.google.android.gles_jni.GLImpl: void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.text.method.CharacterPickerDialog: void onClick(android.view.View)>
<android.view.View: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo()>
<android.content.UndoOperation: boolean allowMerge()>
<android.view.View: android.view.KeyEvent.DispatcherState getKeyDispatcherState()>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser)>
<android.telephony.ServiceState: void setRoaming(boolean)>
<com.android.internal.telephony.IMms: boolean deleteStoredMessage(java.lang.String,android.net.Uri)>
<com.android.internal.util.FastXmlSerializer: void flush()>
<android.telecom.RemoteConnection.VideoProvider: void <init>(com.android.internal.telecom.IVideoProvider)>
<android.filterfw.core.FrameFormat: int getValuesPerSample()>
<android.widget.VideoView: int getDuration()>
<android.app.ActivityGroup: void onResume()>
<android.util.StateSet: boolean isWildCard(int[])>
<android.graphics.Path: void rQuadTo(float,float,float,float)>
<android.media.AudioService: void unregisterRemoteControlDisplay(android.media.IRemoteControlDisplay)>
<android.hardware.camera2.params.HighSpeedVideoConfiguration: android.util.Range getFpsRange()>
<android.service.dreams.DreamService: void setDozeScreenBrightness(int)>
<android.bluetooth.IBluetoothGattCallback: void onDescriptorRead(java.lang.String,int,int,int,android.os.ParcelUuid,int,android.os.ParcelUuid,int,android.os.ParcelUuid,byte[])>
<android.view.inputmethod.InputMethodSubtypeArray: void <init>(java.util.List)>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder setSubtypeId(int)>
<android.media.MediaCodec: android.media.MediaFormat getInputFormat()>
<com.android.internal.telephony.GsmAlphabet: int countGsmSeptets(char,boolean)>
<android.graphics.Rect: float exactCenterY()>
<android.provider.Settings.Secure: boolean setLocationProviderEnabledForUser(android.content.ContentResolver,java.lang.String,boolean,int)>
<android.app.Instrumentation: void setAutomaticPerformanceSnapshots()>
<android.graphics.Paint: boolean isFakeBoldText()>
<android.media.IAudioService: int getLastAudibleMasterVolume()>
<android.bluetooth.IBluetoothGatt: void serverDisconnect(int,java.lang.String)>
<com.android.internal.widget.SubtitleView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.net.wifi.WifiEnterpriseConfig: java.lang.String getCaCertificateAlias()>
<android.bluetooth.IBluetoothGattCallback: void onNotify(java.lang.String,int,int,android.os.ParcelUuid,int,android.os.ParcelUuid,byte[])>
<android.app.AppOpsManager: void finishOp(java.lang.String,int,java.lang.String)>
<android.text.BoringLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,android.text.BoringLayout.Metrics,boolean,android.text.TextUtils.TruncateAt,int)>
<android.app.ActivityManagerProxy: boolean isUserAMonkey()>
<android.webkit.WebViewProvider: boolean isPrivateBrowsingEnabled()>
<android.media.MediaCodecInfo.AudioCapabilities: int[] getSupportedSampleRates()>
<android.filterfw.format.PrimitiveFormat: android.filterfw.core.MutableFrameFormat createByteFormat(int)>
<android.media.session.PlaybackState.Builder: android.media.session.PlaybackState.Builder setState(int,long,float)>
<android.database.CharArrayBuffer: void <init>(int)>
<android.widget.RadialTimePickerView.OnValueSelectedListener: void onValueSelected(int,int,boolean)>
<android.view.VelocityTracker: void computeCurrentVelocity(int)>
<android.filterfw.core.Filter: int getNumberOfOutputs()>
<android.app.WallpaperManager: void setDisplayPadding(android.graphics.Rect)>
<android.app.ActivityManagerProxy: boolean removeTask(int,int)>
<android.print.IWriteResultCallback: void onWriteCanceled(int)>
<android.app.Fragment: void onSaveInstanceState(android.os.Bundle)>
<android.content.RestrictionEntry: void <init>(java.lang.String,int)>
<android.os.Parcel: android.os.ParcelFileDescriptor readFileDescriptor()>
<android.os.PerformanceCollector: android.os.Bundle addIteration(java.lang.String)>
<com.android.internal.app.ExternalMediaFormatActivity: void onResume()>
<android.media.MediaActionSound: void load(int)>
<android.media.AudioDevicePort: java.lang.String toString()>
<android.view.accessibility.AccessibilityManager: java.util.List getInstalledAccessibilityServiceList()>
<android.content.pm.VerificationParams: int getInstallerUid()>
<com.android.internal.view.animation.NativeInterpolatorFactoryHelper: long createAccelerateDecelerateInterpolator()>
<com.android.internal.view.menu.BaseMenuPresenter: void addItemView(android.view.View,int)>
<android.widget.MediaController.MediaPlayerControl: void start()>
<android.graphics.drawable.AnimatedRotateDrawable: void setFramesDuration(int)>
<android.hardware.display.IDisplayManager: void resizeVirtualDisplay(android.hardware.display.IVirtualDisplayCallback,int,int,int)>
<android.widget.CursorTreeAdapter: android.database.Cursor getGroup(int)>
<android.media.audiofx.PresetReverb: void setProperties(android.media.audiofx.PresetReverb.Settings)>
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothServerSocket listenUsingEncryptedRfcommOn(int)>
<android.widget.TabWidget: void setStripEnabled(boolean)>
<com.android.internal.app.WindowDecorActionBar: void setDisplayShowTitleEnabled(boolean)>
<android.view.animation.Animation: void initialize(int,int,int,int)>
<android.webkit.WebSettings: void setNeedInitialFocus(boolean)>
<android.renderscript.Element: android.renderscript.Element RGB_888(android.renderscript.RenderScript)>
<android.opengl.GLES20: void glFrontFace(int)>
<android.widget.TextView: void deleteText_internal(int,int)>
<android.widget.AutoCompleteTextView: android.widget.ListAdapter getAdapter()>
<android.net.NetworkUtils: int getNetworkBoundToProcess()>
<android.opengl.GLES11Ext: void glGetTexGenfvOES(int,int,float[],int)>
<android.os.UEventObserver.UEvent: void <init>(java.lang.String)>
<android.view.RenderNode: boolean setScaleX(float)>
<android.net.IpConfiguration: int describeContents()>
<com.google.android.gles_jni.GLImpl: void glGetClipPlanef(int,java.nio.FloatBuffer)>
<android.media.audiofx.PresetReverb: short getPreset()>
<android.net.NetworkPolicy: boolean isOverLimit(long)>
<android.preference.Preference.OnPreferenceChangeListener: boolean onPreferenceChange(android.preference.Preference,java.lang.Object)>
<android.view.MotionEvent: float getX()>
<android.content.UndoManager: int forgetRedos(android.content.UndoOwner[],int)>
<android.graphics.drawable.NinePatchDrawable: int getIntrinsicHeight()>
<android.bluetooth.BluetoothGattCharacteristic: int getProperties()>
<android.app.IActivityManager: int startActivityWithConfig(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.content.res.Configuration,android.os.Bundle,int)>
<android.telephony.cdma.CdmaCellLocation: int getBaseStationLatitude()>
<android.gesture.Gesture: android.graphics.Path toPath(android.graphics.Path,int,int,int,int)>
<android.bluetooth.BluetoothHeadsetClientCall: boolean isOutgoing()>
<android.printservice.IPrintService: void stopPrinterStateTracking(android.print.PrinterId)>
<android.bluetooth.BluetoothUuid: boolean containsAllUuids(android.os.ParcelUuid[],android.os.ParcelUuid[])>
<android.graphics.Paint: android.graphics.Rasterizer getRasterizer()>
<android.database.DatabaseUtils: java.lang.String dumpCursorToString(android.database.Cursor)>
<android.view.ContextMenu: android.view.ContextMenu setHeaderIcon(int)>
<android.view.accessibility.AccessibilityNodeInfo: void setChecked(boolean)>
<android.view.Window: int getNavigationBarColor()>
<android.provider.DocumentsContract: java.lang.String getTreeDocumentId(android.net.Uri)>
<android.app.AppOpsManager: int strOpToOp(java.lang.String)>
<android.net.wifi.p2p.WifiP2pGroupList: int describeContents()>
<android.widget.ActionMenuPresenter: void onSubUiVisibilityChanged(boolean)>
<android.graphics.drawable.VectorDrawable: void setTintList(android.content.res.ColorStateList)>
<android.net.BaseNetworkStateTracker: void setPolicyDataEnable(boolean)>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator translationY(float)>
<android.text.Selection: void extendSelection(android.text.Spannable,int)>
<android.content.pm.PackageParser.Component: void <init>(android.content.pm.PackageParser.Package)>
<android.content.Intent.FilterComparison: android.content.Intent getIntent()>
<android.preference.ListPreference: android.os.Parcelable onSaveInstanceState()>
<android.widget.Scroller: boolean isFinished()>
<android.net.NetworkStats: void spliceOperationsFrom(android.net.NetworkStats)>
<android.renderscript.Float2: android.renderscript.Float2 mul(android.renderscript.Float2,float)>
<android.util.Base64InputStream: void reset()>
<android.media.session.MediaSession: void setMediaButtonReceiver(android.app.PendingIntent)>
<android.transition.TransitionSet: android.transition.TransitionSet addListener(android.transition.Transition.TransitionListener)>
<android.renderscript.Long3: android.renderscript.Long3 mul(android.renderscript.Long3,android.renderscript.Long3)>
<android.media.TtmlRenderingWidget: void onAttachedToWindow()>
<android.text.util.Linkify: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,android.text.util.Linkify.MatchFilter,android.text.util.Linkify.TransformFilter)>
<android.view.accessibility.AccessibilityWindowInfo: boolean changed(android.view.accessibility.AccessibilityWindowInfo)>
<android.widget.ActionMenuView: void initialize(com.android.internal.view.menu.MenuBuilder)>
<android.view.View: void postInvalidateDelayed(long)>
<android.app.Activity: boolean onCreatePanelMenu(int,android.view.Menu)>
<android.view.View: void cancelPendingInputEvents()>
<android.app.WallpaperManager: void setWallpaperOffsets(android.os.IBinder,float,float)>
<android.webkit.WebView: boolean onKeyUp(int,android.view.KeyEvent)>
<android.service.notification.NotificationListenerService: void cancelNotification(java.lang.String,java.lang.String,int)>
<com.android.internal.os.HandlerCaller: android.os.Message obtainMessage(int)>
<android.os.Parcel: android.os.Parcelable.Creator readParcelableCreator(java.lang.ClassLoader)>
<android.view.View: float getPivotX()>
<android.view.WindowManager.LayoutParams: void <init>(int)>
<android.view.accessibility.AccessibilityWindowInfo: int getLayer()>
<android.webkit.WebView: void clearCache(boolean)>
<android.net.wifi.IWifiManager: void setFrequencyBand(int,boolean)>
<android.bluetooth.BluetoothHeadsetClient: java.util.List getDevicesMatchingConnectionStates(int[])>
<com.google.android.gles_jni.GLImpl: void glPointParameterf(int,float)>
<com.android.internal.backup.LocalTransport: java.lang.String name()>
<android.content.res.Configuration: boolean equals(java.lang.Object)>
<android.view.View: void dispatchRestoreInstanceState(android.util.SparseArray)>
<android.media.AudioService.VolumeController: boolean suppressAdjustment(int,int)>
<android.media.AudioManager: boolean shouldVibrate(int)>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>
<android.widget.ProgressBar: void invalidateDrawable(android.graphics.drawable.Drawable)>
<android.widget.HeaderViewListAdapter: int getHeadersCount()>
<com.android.ims.ImsSsInfo: void writeToParcel(android.os.Parcel,int)>
<android.hardware.display.DisplayManager.DisplayListener: void onDisplayChanged(int)>
<android.speech.RecognitionListener: void onPartialResults(android.os.Bundle)>
<com.android.internal.widget.DecorToolbar: void setWindowCallback(android.view.Window.Callback)>
<android.location.GpsMeasurement: double getPseudorangeRateInMetersPerSec()>
<android.renderscript.Int2: android.renderscript.Int2 div(android.renderscript.Int2,int)>
<android.view.accessibility.AccessibilityWindowInfo: boolean isFocused()>
<android.telephony.ServiceState: void writeToParcel(android.os.Parcel,int)>
<android.content.pm.ResolveInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>
<android.app.Notification.Builder: android.app.Notification.Builder setSubText(java.lang.CharSequence)>
<android.widget.ProgressBar: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<android.os.BatteryStats.Uid: long getAudioTurnedOnTime(long,int)>
<android.telecom.TelecomManager: int getAllPhoneAccountsCount()>
<android.content.pm.PackageItemInfo: void dumpFront(android.util.Printer,java.lang.String)>
<android.view.accessibility.AccessibilityRecord: java.util.List getText()>
<android.telecom.ParcelableCall: int getProperties()>
<android.app.usage.UsageStats: void <init>(android.app.usage.UsageStats)>
<android.view.Display: void getCurrentSizeRange(android.graphics.Point,android.graphics.Point)>
<com.android.internal.telephony.GsmAlphabet: java.lang.String gsm7BitPackedToString(byte[],int,int,int,int,int)>
<android.graphics.Paint: void setAlpha(int)>
<android.hardware.display.IDisplayManager: void setVirtualDisplaySurface(android.hardware.display.IVirtualDisplayCallback,android.view.Surface)>
<com.android.internal.app.IAppOpsService: void resetAllModes()>
<android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>
<android.view.ViewGroup: boolean getChildStaticTransformation(android.view.View,android.view.animation.Transformation)>
<android.accounts.AccountManager: boolean removeSharedAccount(android.accounts.Account,android.os.UserHandle)>
<android.provider.CalendarContract.EventDays: android.database.Cursor query(android.content.ContentResolver,int,int,java.lang.String[])>
<android.app.IApplicationThread: void scheduleUnbindService(android.os.IBinder,android.content.Intent)>
<android.view.accessibility.AccessibilityWindowInfo: void setAccessibilityFocused(boolean)>
<android.renderscript.ProgramRaster: android.renderscript.ProgramRaster CULL_NONE(android.renderscript.RenderScript)>
<android.opengl.GLES11: void glTexParameterfv(int,int,java.nio.FloatBuffer)>
<android.database.CursorWrapper: void registerDataSetObserver(android.database.DataSetObserver)>
<android.media.audiofx.EnvironmentalReverb: void setDecayHFRatio(short)>
<android.widget.ListView: void onInitializeAccessibilityNodeInfoForItem(android.view.View,int,android.view.accessibility.AccessibilityNodeInfo)>
<android.media.RemoteControlClient.MetadataEditor: android.media.RemoteControlClient.MetadataEditor putBitmap(int,android.graphics.Bitmap)>
<android.webkit.Plugin: java.lang.String toString()>
<android.location.GpsNavigationMessage: void set(android.location.GpsNavigationMessage)>
<android.location.GpsMeasurement: void resetElevationInDeg()>
<android.content.IntentFilter: int countActions()>
<android.view.GestureDetector: void setIsLongpressEnabled(boolean)>
<android.nfc.cardemulation.ApduServiceInfo: boolean requiresUnlock()>
<android.hardware.camera2.params.LensShadingMap: void <init>(float[],int,int)>
<android.view.animation.Animation: boolean willChangeTransformationMatrix()>
<android.filterpacks.ui.SurfaceTargetFilter: void prepare(android.filterfw.core.FilterContext)>
<android.net.http.RequestHandle: void setRedirectCount(int)>
<android.text.Layout: int getLineBounds(int,android.graphics.Rect)>
<android.bluetooth.IBluetoothGatt: void addDescriptor(int,android.os.ParcelUuid,int)>
<android.app.Notification.Builder: android.app.Notification.Builder setOnlyAlertOnce(boolean)>
<android.graphics.drawable.RotateDrawable: void setPivotYRelative(boolean)>
<android.app.ListFragment: long getSelectedItemId()>
<android.hardware.Camera.Parameters: void unflatten(java.lang.String)>
<android.view.ViewParent: android.view.ViewParent getParent()>
<android.view.inputmethod.BaseInputConnection: boolean commitCorrection(android.view.inputmethod.CorrectionInfo)>
<android.nfc.cardemulation.CardEmulation: boolean isValidAid(java.lang.String)>
<com.android.internal.telephony.ITelephonyRegistry: void notifyCallState(int,java.lang.String)>
<android.opengl.GLES30: void glCompressedTexImage3D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.content.pm.PackageParser.PackageParserException: void <init>(int,java.lang.String,java.lang.Throwable)>
<android.net.INetworkStatsService: android.net.NetworkStats getDataLayerSnapshotForUid(int)>
<android.media.ExifInterface: double getAltitude(double)>
<android.renderscript.RenderScriptGL.SurfaceConfig: void <init>(android.renderscript.RenderScriptGL.SurfaceConfig)>
<android.app.FragmentManager: android.app.FragmentTransaction openTransaction()>
<android.view.Window.Callback: void onDetachedFromWindow()>
<android.os.UserHandle: void <init>(android.os.Parcel)>
<android.telephony.CellIdentityCdma: int describeContents()>
<android.net.wifi.IWifiManager: void clearBlacklist()>
<android.telephony.PhoneNumberUtils: java.lang.String stringFromStringAndTOA(java.lang.String,int)>
<android.net.wifi.p2p.WifiP2pManager: void removeGroup(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ActionListener)>
<android.speech.tts.TextToSpeech: int addSpeech(java.lang.String,java.lang.String,int)>
<android.os.Parcel: void writeByteArray(byte[],int,int)>
<android.util.Base64: java.lang.String encodeToString(byte[],int,int,int)>
<android.view.inputmethod.InputMethod: void attachToken(android.os.IBinder)>
<android.filterfw.core.AsyncRunner: void <init>(android.filterfw.core.FilterContext)>
<android.inputmethodservice.KeyboardView.OnKeyboardActionListener: void onKey(int,int[])>
<android.widget.AbsListView: long[] getCheckedItemIds()>
<android.media.session.MediaController.PlaybackInfo: int getMaxVolume()>
<android.graphics.drawable.StateListDrawable: int[] getStateSet(int)>
<android.bluetooth.IBluetoothA2dp: boolean isA2dpPlaying(android.bluetooth.BluetoothDevice)>
<android.app.Activity: void stopLockTask()>
<android.animation.ValueAnimator: void end()>
<android.widget.AbsListView: void onLayout(boolean,int,int,int,int)>
<android.telecom.Call.Details: void <init>(android.net.Uri,int,java.lang.String,int,android.telecom.PhoneAccountHandle,int,int,android.telecom.DisconnectCause,long,android.telecom.GatewayInfo,int,android.telecom.StatusHints,android.os.Bundle)>
<android.inputmethodservice.KeyboardView: void closing()>
<android.app.Instrumentation: void callActivityOnCreate(android.app.Activity,android.os.Bundle)>
<com.android.internal.os.SamplingProfilerIntegration: void start()>
<android.widget.RadialTimePickerView: int getCurrentMinute()>
<com.android.internal.view.menu.MenuItemImpl: int getOrder()>
<android.content.res.Resources: void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle)>
<android.net.http.HttpResponseCache: int getRequestCount()>
<android.text.method.TextKeyListener: void onSpanAdded(android.text.Spannable,java.lang.Object,int,int)>
<android.provider.DocumentsContract: boolean deleteDocument(android.content.ContentResolver,android.net.Uri)>
<android.renderscript.Long4: void <init>(long,long,long,long)>
<android.net.http.CertificateChainValidator: void handleTrustStorageUpdate()>
<android.database.DatabaseUtils.InsertHelper: void bind(int,long)>
<android.widget.DatePicker: void setCalendarViewShown(boolean)>
<android.hardware.hdmi.HdmiDeviceInfo: int getLogicalAddress()>
<android.net.NetworkAgent: void addUidRanges(android.net.UidRange[])>
<android.util.Slog: int d(java.lang.String,java.lang.String,java.lang.Throwable)>
<android.widget.HeaderViewListAdapter: android.widget.ListAdapter getWrappedAdapter()>
<android.database.Cursor: int getCount()>
<android.bluetooth.IBluetoothAvrcpController: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.service.fingerprint.FingerprintUtils: boolean removeFingerprintIdForUser(int,android.content.ContentResolver,int)>
<android.filterpacks.imageproc.VignetteFilter: void setupPorts()>
<android.media.AudioManager: boolean isBluetoothScoAvailableOffCall()>
<android.hardware.Camera.Parameters: float getVerticalViewAngle()>
<android.media.IAudioService: int requestAudioFocus(int,int,android.os.IBinder,android.media.IAudioFocusDispatcher,java.lang.String,java.lang.String)>
<android.opengl.GLES20: void glGetActiveAttrib(int,int,int,int[],int,int[],int,int[],int,byte[],int)>
<android.app.SearchDialog: void onConfigurationChanged()>
<android.hardware.camera2.utils.CameraRuntimeException: void <init>(int,java.lang.Throwable)>
<android.widget.ScrollView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.view.accessibility.AccessibilityNodeInfo: void setPassword(boolean)>
<android.hardware.location.IGeofenceHardware: boolean addCircularFence(int,android.hardware.location.GeofenceHardwareRequestParcelable,android.hardware.location.IGeofenceHardwareCallback)>
<android.view.MotionEvent: android.view.MotionEvent obtainNoHistory(android.view.MotionEvent)>
<android.hardware.soundtrigger.SoundTrigger.ConfidenceLevel: int hashCode()>
<android.text.method.ScrollingMovementMethod: boolean left(android.widget.TextView,android.text.Spannable)>
<android.renderscript.RenderScript.RSErrorHandler: void run()>
<android.view.ViewRootImpl: void requestLayout()>
<android.renderscript.Float3: void sub(float)>
<android.hardware.hdmi.HdmiTvClient: int getDeviceType()>
<android.os.Parcel: void writeMap(java.util.Map)>
<android.content.res.AssetManager.AssetInputStream: long getNativeAsset()>
<android.renderscript.Byte3: byte length()>
<android.filterpacks.imageproc.CrossProcessFilter: void setupPorts()>
<com.android.internal.os.BatteryStatsImpl.Uid: long getProcessStateTime(int,long,int)>
<android.text.format.DateFormat: java.lang.String getTimeFormatString(android.content.Context)>
<android.os.Messenger: void <init>(android.os.Handler)>
<android.widget.TextView: android.os.Bundle getInputExtras(boolean)>
<android.view.View: void postInvalidateDelayed(long,int,int,int,int)>
<android.hardware.camera2.legacy.CaptureCollector: android.hardware.camera2.legacy.RequestHolder previewProduced()>
<android.app.Notification.Builder: android.app.Notification.Builder setUsesChronometer(boolean)>
<android.telecom.Connection.VideoProvider: void onRequestCameraCapabilities()>
<android.graphics.Paint: int getHinting()>
<com.android.internal.os.HandlerCaller: void removeMessages(int)>
<android.telephony.TelephonyManager: boolean setRadio(boolean)>
<android.app.job.JobInfo: int getId()>
<android.hardware.input.InputManager.InputDeviceListener: void onInputDeviceChanged(int)>
<android.database.sqlite.SQLiteConnectionPool: void dump(android.util.Printer,boolean)>
<android.app.ActivityOptions: android.graphics.Bitmap getThumbnail()>
<android.app.SearchManager: boolean launchAssistAction(int,java.lang.String,int)>
<android.app.IApplicationThread: void scheduleRegisteredReceiver(android.content.IIntentReceiver,android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int,int)>
<android.view.Menu: void removeItem(int)>
<android.widget.DatePicker: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.location.Criteria: void setHorizontalAccuracy(int)>
<android.filterpacks.videoproc.BackDropperFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<android.opengl.GLES10: void glMaterialfv(int,int,float[],int)>
<android.widget.TextView: void onMeasure(int,int)>
<android.hardware.location.GeofenceHardwareMonitorEvent: int getSourceTechnologies()>
<android.media.CCParser.DisplayListener: android.view.accessibility.CaptioningManager.CaptionStyle getCaptionStyle()>
<android.service.wallpaper.WallpaperService.Engine: boolean isPreview()>
<android.app.SearchDialog: boolean onTouchEvent(android.view.MotionEvent)>
<android.view.inputmethod.CursorAnchorInfo: android.graphics.Matrix getMatrix()>
<com.android.internal.util.Preconditions: void checkState(boolean)>
<android.service.media.MediaBrowserService: void onCreate()>
<com.android.internal.util.XmlUtils: void writeMapXml(java.util.Map,java.lang.String,org.xmlpull.v1.XmlSerializer)>
<android.filterpacks.imageproc.DocumentaryFilter: void initProgram(android.filterfw.core.FilterContext,int)>
<android.text.ParcelableSpan: int getSpanTypeId()>
<android.filterfw.core.FrameFormat: int[] getDimensions()>
<com.android.internal.widget.PasswordEntryKeyboard: void <init>(android.content.Context,int)>
<android.nfc.tech.NfcBarcode: android.nfc.tech.NfcBarcode get(android.nfc.Tag)>
<android.renderscript.Path: android.renderscript.Path createDynamicPath(android.renderscript.RenderScript,android.renderscript.Path.Primitive,float,android.renderscript.Allocation,android.renderscript.Allocation)>
<android.gesture.GestureOverlayView: void setFadeOffset(long)>
<android.view.View: int resolveSize(int,int)>
<android.widget.EditText: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.speech.tts.TtsEngines: java.util.Locale normalizeTTSLocale(java.util.Locale)>
<android.app.admin.IDevicePolicyManager: void lockNow()>
<android.service.media.MediaBrowserService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.bluetooth.BluetoothAdapter: boolean enable()>
<com.android.internal.app.AlertController: void setButton(int,java.lang.CharSequence,android.content.DialogInterface.OnClickListener,android.os.Message)>
<android.view.InputEventConsistencyVerifier: void onUnhandledEvent(android.view.InputEvent,int)>
<android.preference.SeekBarDialogPreference: void <init>(android.content.Context)>
<com.android.internal.app.IAppOpsService: void startWatchingMode(int,java.lang.String,com.android.internal.app.IAppOpsCallback)>
<android.webkit.WebSettings: boolean getUseDoubleTree()>
<android.widget.CursorAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)>
<android.media.tv.TvTrackInfo: int getVideoWidth()>
<com.android.internal.os.BatteryStatsImpl: int getBluetoothPingCount()>
<com.android.internal.statusbar.IStatusBar: void setWindowState(int,int)>
<com.android.internal.view.RootViewSurfaceTaker: void setSurfaceKeepScreenOn(boolean)>
<android.telephony.SubInfoRecord: java.lang.String toString()>
<android.filterfw.core.SerializedFrame: void setBitmap(android.graphics.Bitmap)>
<android.content.ContentProvider: android.content.ContentProvider coerceToLocalContentProvider(android.content.IContentProvider)>
<android.widget.CursorAdapter: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)>
<android.graphics.Paint: android.graphics.Shader getShader()>
<android.view.animation.AnimationSet: void reset()>
<com.android.internal.widget.AutoScrollHelper: com.android.internal.widget.AutoScrollHelper setMaximumVelocity(float,float)>
<android.hardware.camera2.dispatch.InvokeDispatcher: void <init>(java.lang.Object)>
<android.view.inputmethod.SparseRectFArray: java.lang.String toString()>
<android.telephony.TelephonyManager: int getVoiceMessageCount()>
<android.widget.ActivityChooserView: void setProvider(android.view.ActionProvider)>
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: java.util.List newInstance(java.lang.String)>
<android.opengl.GLES11Ext: void glGetLightxvOES(int,int,int[],int)>
<android.text.Spannable.Factory: android.text.Spannable.Factory getInstance()>
<android.media.AudioGain: int channelMask()>
<android.location.Address: double getLongitude()>
<android.opengl.GLES30: void glUniformMatrix2x4fv(int,int,boolean,java.nio.FloatBuffer)>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setContentIntentAvailableOffline(boolean)>
<android.app.UiAutomation: boolean clearWindowContentFrameStats(int)>
<com.google.android.util.AbstractMessageParser.Token: boolean setCaps()>
<android.view.View: boolean performButtonActionOnTouchDown(android.view.MotionEvent)>
<android.database.AbstractWindowedCursor: boolean isFloat(int)>
<android.appwidget.AppWidgetHostView: android.widget.FrameLayout.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.view.RenderNode: boolean setLeftTopRightBottom(int,int,int,int)>
<android.bluetooth.BluetoothMasInstance: boolean msgSupported(int)>
<android.widget.TextView: void setExtracting(android.view.inputmethod.ExtractedTextRequest)>
<android.database.sqlite.SQLiteCursor: void finalize()>
<android.hardware.camera2.legacy.ParameterUtils.WeightedRectangle: void <init>(android.graphics.Rect,int)>
<android.os.UserHandle: int getCallingUserId()>
<android.media.AudioTrack: int setLoopPoints(int,int,int)>
<android.net.NetworkStatsHistory: void recordData(long,long,android.net.NetworkStats.Entry)>
<android.webkit.WebStorage: android.webkit.WebStorage getInstance()>
<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageIIII(int,int,int,int,int)>
<com.android.internal.widget.RotarySelector: boolean onTouchEvent(android.view.MotionEvent)>
<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(android.content.Context,long)>
<android.media.MediaRecorder: void setOnInfoListener(android.media.MediaRecorder.OnInfoListener)>
<android.renderscript.Allocation: void copy2DRangeFrom(int,int,int,int,android.renderscript.Allocation,int,int)>
<android.media.MediaCodecInfo.VideoCapabilities: boolean supportsFormat(android.media.MediaFormat)>
<com.android.internal.app.IBatteryStats: void noteWifiScanStartedFromSource(android.os.WorkSource)>
<android.view.ViewGroup.LayoutParams: java.lang.String sizeToString(int)>
<com.android.internal.os.BaseCommand: java.lang.String nextArgRequired()>
<android.renderscript.Long2: long dotProduct(android.renderscript.Long2)>
<android.app.admin.IDevicePolicyManager: boolean packageHasActiveAdmins(java.lang.String,int)>
<com.android.internal.app.LocalePicker.LocaleInfo: int compareTo(com.android.internal.app.LocalePicker.LocaleInfo)>
<android.preference.SeekBarVolumizer: void onRestoreInstanceState(android.preference.VolumePreference.VolumeStore)>
<android.drm.DrmEvent: void <init>(int,int,java.lang.String)>
<android.graphics.drawable.BitmapDrawable: boolean onStateChange(int[])>
<android.content.ContextWrapper: java.io.File getNoBackupFilesDir()>
<android.graphics.drawable.RotateDrawable: android.graphics.drawable.Drawable mutate()>
<android.media.effect.Effect: void setUpdateListener(android.media.effect.EffectUpdateListener)>
<com.android.internal.http.multipart.StringPart: long lengthOfData()>
<com.google.android.util.AbstractMessageParser.Photo: java.lang.String getPhoto()>
<android.net.http.RequestQueue: void disablePlatformNotifications()>
<android.telecom.Connection: void onUnhold()>
<com.google.android.util.AbstractMessageParser.Part: com.google.android.util.AbstractMessageParser.Token getMediaToken()>
<android.os.ParcelableParcel: void <init>(java.lang.ClassLoader)>
<android.telephony.SignalStrength: int getAsuLevel()>
<android.text.SpanSet: boolean hasSpansIntersecting(int,int)>
<android.app.ActivityManager: int getFrontActivityScreenCompatMode()>
<android.webkit.WebChromeClient: void onHideCustomView()>
<android.widget.TimePicker.TimePickerDelegate: void setOnTimeChangedListener(android.widget.TimePicker.OnTimeChangedListener)>
<android.webkit.CookieManager: java.lang.Object clone()>
<android.graphics.drawable.ColorDrawable: boolean onStateChange(int[])>
<android.view.InputEventConsistencyVerifier: void onInputEvent(android.view.InputEvent,int)>
<android.os.CountDownTimer: void <init>(long,long)>
<android.app.ListFragment: int getSelectedItemPosition()>
<android.preference.MultiSelectListPreference: void onDialogClosed(boolean)>
<android.view.Window.Callback: boolean dispatchTrackballEvent(android.view.MotionEvent)>
<android.net.NetworkStatsHistory: void <init>(java.io.DataInputStream)>
<android.content.SyncResult: void writeToParcel(android.os.Parcel,int)>
<android.media.MediaMuxer: void finalize()>
<android.media.MediaRouter.RouteGroup: void removeRoute(android.media.MediaRouter.RouteInfo)>
<android.view.Window: android.view.Window.Callback getCallback()>
<android.widget.EditText: void selectAll()>
<com.android.internal.os.BatteryStatsImpl.SamplingTimer: int computeCurrentCountLocked()>
<com.android.server.net.BaseNetworkObserver: void addressUpdated(java.lang.String,android.net.LinkAddress)>
<android.content.ContentProviderOperation: android.content.ContentProviderOperation.Builder newUpdate(android.net.Uri)>
<android.util.EventLogTags: android.util.EventLogTags.Description get(java.lang.String)>
<android.widget.RemoteViews: void setChar(int,java.lang.String,char)>
<android.filterfw.core.Filter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<android.view.View: void addOnLayoutChangeListener(android.view.View.OnLayoutChangeListener)>
<android.os.StrictMode: void enableDeathOnNetwork()>
<android.graphics.drawable.AnimatedVectorDrawable: boolean canReverse()>
<android.os.SELinux: boolean getBooleanValue(java.lang.String)>
<android.renderscript.Byte3: void <init>(android.renderscript.Byte3)>
<android.accounts.Account: void writeToParcel(android.os.Parcel,int)>
<android.media.MediaFormat: android.media.MediaFormat createAudioFormat(java.lang.String,int,int)>
<android.database.Cursor: void unregisterContentObserver(android.database.ContentObserver)>
<android.app.ActivityManager.RunningTaskInfo: int describeContents()>
<android.alsa.AlsaDevicesParser: boolean hasPlaybackDevices()>
<com.android.internal.textservice.ISpellCheckerSession: void onClose()>
<android.filterpacks.base.RetargetFilter: void <init>(java.lang.String)>
<android.hardware.hdmi.HdmiPortInfo: int getAddress()>
<android.bluetooth.le.AdvertiseData: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.os.TransferPipe: void run()>
<android.text.Layout: float getLineLeft(int)>
<android.widget.RelativeLayout: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.preference.PreferenceGroupAdapter: android.preference.Preference getItem(int)>
<com.android.internal.telecom.IInCallService: void onAudioStateChanged(android.telecom.AudioState)>
<android.graphics.BitmapRegionDecoder: android.graphics.BitmapRegionDecoder newInstance(java.lang.String,boolean)>
<com.google.android.util.SmileyParser: java.lang.CharSequence getSpannableString(android.content.Context)>
<android.text.style.TextAppearanceSpan: java.lang.String getFamily()>
<android.widget.AbsSeekBar: void setThumbTintMode(android.graphics.PorterDuff.Mode)>
<android.os.AsyncTask: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>
<android.media.VolumeProvider.Callback: void onVolumeChanged(android.media.VolumeProvider)>
<android.media.MediaDrm: byte[] signRSA(byte[],java.lang.String,byte[],byte[])>
<android.media.IRemoteDisplayProvider: void connect(java.lang.String)>
<android.database.BulkCursorProxy: void deactivate()>
<android.view.WindowManager.LayoutParams: void scale(float)>
<android.content.res.CompatibilityInfo: boolean supportsScreen()>
<android.media.MediaCodec.Callback: void onOutputBufferAvailable(android.media.MediaCodec,int,android.media.MediaCodec.BufferInfo)>
<android.widget.TextView: void setPaintFlags(int)>
<android.drm.DrmManagerClient: int openConvertSession(java.lang.String)>
<android.content.AsyncQueryHandler: void onDeleteComplete(int,java.lang.Object,int)>
<android.opengl.GLES10: void glGetIntegerv(int,java.nio.IntBuffer)>
<com.android.internal.os.BatteryStatsImpl.BatchTimer: void logState(android.util.Printer,java.lang.String)>
<android.opengl.GLES20: void glUniform3iv(int,int,java.nio.IntBuffer)>
<android.view.HardwareCanvas: boolean isHardwareAccelerated()>
<com.android.internal.content.PackageMonitor: boolean onPackageChanged(java.lang.String,int,java.lang.String[])>
<android.hardware.camera2.legacy.CaptureCollector: boolean queueRequest(android.hardware.camera2.legacy.RequestHolder,android.hardware.camera2.legacy.LegacyRequest,long,java.util.concurrent.TimeUnit)>
<android.view.MotionEvent: float getHistoricalOrientation(int)>
<com.android.internal.widget.SubtitleView: void onDraw(android.graphics.Canvas)>
<android.text.util.Rfc822Token: java.lang.String quoteComment(java.lang.String)>
<com.android.internal.widget.IRemoteViewsFactory: boolean isCreated()>
<com.android.internal.os.BatterySipper: int getUid()>
<android.hardware.soundtrigger.SoundTrigger.SoundModelEvent: void writeToParcel(android.os.Parcel,int)>
<android.app.DialogFragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)>
<android.os.StrictMode: java.lang.Object trackActivity(java.lang.Object)>
<com.android.internal.http.multipart.FilePart: void <init>(java.lang.String,com.android.internal.http.multipart.PartSource,java.lang.String,java.lang.String)>
<android.content.ContentProviderOperation: void <init>(android.content.ContentProviderOperation,boolean)>
<android.filterfw.core.Program: void setHostValue(java.lang.String,java.lang.Object)>
<android.view.View: void dispatchGetDisplayList()>
<android.app.Notification.Action.Builder: android.app.Notification.Action build()>
<android.os.UserManager: boolean supportsMultipleUsers()>
<com.android.internal.os.BatteryStatsImpl.Timer: void writeToParcel(android.os.Parcel,long)>
<android.filterpacks.videosrc.SurfaceTextureTarget: void tearDown(android.filterfw.core.FilterContext)>
<android.media.UnstyledTextExtractor: void onTimeStamp(long)>
<android.view.View: void setScrollX(int)>
<android.bluetooth.IBluetoothGattCallback: void onScanResult(android.bluetooth.le.ScanResult)>
<android.graphics.drawable.ClipDrawable: void draw(android.graphics.Canvas)>
<android.widget.CalendarView.CalendarViewDelegate: void setUnfocusedMonthDateColor(int)>
<android.webkit.WebSettings: boolean getDomStorageEnabled()>
<android.media.WebVttRenderingWidget: void <init>(android.content.Context,android.util.AttributeSet)>
<android.filterfw.core.Filter: void addOutputPort(java.lang.String,android.filterfw.core.FrameFormat)>
<android.widget.PopupWindow: void <init>(int,int)>
<android.view.View: void setPressed(boolean)>
<com.android.internal.telecom.IInCallService: void setPostDial(java.lang.String,java.lang.String)>
<android.service.notification.ConditionProviderService: void onRequestConditions(int)>
<com.android.internal.os.BatteryStatsImpl: void noteWifiScanStoppedFromSourceLocked(android.os.WorkSource)>
<android.content.AsyncTaskLoader: void cancelLoadInBackground()>
<android.database.Cursor: boolean isLast()>
<android.renderscript.RenderScript: void setupDiskCache(java.io.File)>
<android.drm.DrmInfoEvent: void <init>(int,int,java.lang.String)>
<android.telephony.CellSignalStrengthWcdma: void copyFrom(android.telephony.CellSignalStrengthWcdma)>
<com.android.internal.widget.AutoScrollHelper: com.android.internal.widget.AutoScrollHelper setExclusive(boolean)>
<com.android.internal.widget.DecorToolbar: void restoreHierarchyState(android.util.SparseArray)>
<android.view.ActionMode: android.view.MenuInflater getMenuInflater()>
<android.graphics.ImageFormat: int getBitsPerPixel(int)>
<android.os.Debug: void setFieldsOn(java.lang.Class,boolean)>
<android.net.UidRange: java.lang.String toString()>
<android.security.IKeyChainService: android.content.pm.ParceledListSlice getSystemCaAliases()>
<android.widget.ExpandableListView: void setOnGroupExpandListener(android.widget.ExpandableListView.OnGroupExpandListener)>
<android.view.View: void initializeFadingEdge(android.content.res.TypedArray)>
<android.text.Layout: int getLineTop(int)>
<android.webkit.CacheManager.CacheResult: java.lang.String getExpiresString()>
<android.widget.GridLayout.LayoutParams: void setBaseAttributes(android.content.res.TypedArray,int,int)>
<android.database.AbstractWindowedCursor: byte[] getBlob(int)>
<android.provider.DocumentsContract: java.lang.String getSearchDocumentsQuery(android.net.Uri)>
<android.accessibilityservice.AccessibilityService.IAccessibilityServiceClientWrapper: void setConnection(android.accessibilityservice.IAccessibilityServiceConnection,int)>
<android.media.session.MediaSession.Callback: boolean onMediaButtonEvent(android.content.Intent)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setItems(java.lang.CharSequence[],android.content.DialogInterface.OnClickListener)>
<android.accounts.AccountManagerFuture: boolean isDone()>
<com.google.android.gles_jni.GLImpl: void glWeightPointerOES(int,int,int,int)>
<android.graphics.drawable.ScaleDrawable: boolean isStateful()>
<android.app.IActivityManager: int startActivityIntentSender(android.app.IApplicationThread,android.content.IntentSender,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle)>
<android.widget.RemoteViews: void setBoolean(int,java.lang.String,boolean)>
<android.hardware.camera2.CameraAccessException: java.lang.String getDefaultMessage(int)>
<android.net.IConnectivityManager: android.net.NetworkInfo getActiveNetworkInfoForUid(int)>
<android.opengl.GLES11: void glVertexPointer(int,int,int,int)>
<android.util.MathUtils: float max(int,int)>
<android.view.DisplayEventReceiver: void onHotplug(long,int,boolean)>
<android.opengl.GLES11Ext: void glGetClipPlanefOES(int,float[],int)>
<android.content.pm.LabeledIntent: int getIconResource()>
<android.hardware.hdmi.HdmiRecordListener: void onTimerRecordingResult(android.hardware.hdmi.HdmiRecordListener.TimerStatusData)>
<android.renderscript.Short2: void sub(short)>
<android.location.Address: void setSubThoroughfare(java.lang.String)>
<com.android.internal.util.XmlUtils: java.util.HashSet readThisSetXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[])>
<android.accessibilityservice.IAccessibilityServiceConnection: boolean findAccessibilityNodeInfosByViewId(int,long,java.lang.String,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)>
<android.os.ParcelFileDescriptor: long getStatSize()>
<android.view.VelocityTracker: float getYVelocity(int)>
<android.service.notification.ConditionProviderService: void notifyCondition(android.service.notification.Condition)>
<com.android.internal.telephony.CallerInfoAsyncQuery.QueryPoolException: void <init>(java.lang.String)>
<android.widget.Toolbar: void setSubtitleTextAppearance(android.content.Context,int)>
<android.view.View: void debug()>
<android.nfc.tech.MifareClassic: int getSize()>
<android.graphics.PorterDuffColorFilter: int hashCode()>
<com.android.internal.util.MemInfoReader: long getCachedSizeKb()>
<android.opengl.GLES11Ext: void glTexParameterxOES(int,int,int)>
<android.view.animation.Animation: boolean willChangeBounds()>
<android.opengl.GLES31: void glProgramUniformMatrix4x3fv(int,int,int,boolean,float[],int)>
<android.telecom.Connection: void setDisconnected(android.telecom.DisconnectCause)>
<android.bluetooth.BluetoothInputDevice: boolean sendData(android.bluetooth.BluetoothDevice,java.lang.String)>
<android.inputmethodservice.Keyboard: void <init>(android.content.Context,int,java.lang.CharSequence,int,int)>
<android.provider.Settings.Secure: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,int)>
<com.android.internal.content.SelectionBuilder: com.android.internal.content.SelectionBuilder reset()>
<android.view.Window: void setSoftInputMode(int)>
<com.android.internal.telecom.IInCallAdapter: void phoneAccountSelected(java.lang.String,android.telecom.PhoneAccountHandle)>
<android.content.pm.PackageParser.ServiceIntentInfo: void <init>(android.content.pm.PackageParser.Service)>
<android.app.Instrumentation: void callActivityOnNewIntent(android.app.Activity,android.content.Intent)>
<android.view.KeyEvent: char getDisplayLabel()>
<android.hardware.camera2.CameraDevice.StateCallback: void onError(android.hardware.camera2.CameraDevice,int)>
<android.telecom.InCallAdapter: void stopDtmfTone(java.lang.String)>
<android.widget.CursorAdapter: android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)>
<com.android.internal.os.BatteryStatsImpl.Uid: long getFullWifiLockTime(long,int)>
<android.os.Parcel: int readInt()>
<android.view.ViewTreeObserver: void addOnComputeInternalInsetsListener(android.view.ViewTreeObserver.OnComputeInternalInsetsListener)>
<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>
<android.net.DhcpResults: void setVendorInfo(java.lang.String)>
<android.view.accessibility.AccessibilityNodeInfo: void getBoundsInScreen(android.graphics.Rect)>
<android.nfc.NfcActivityManager: void <init>(android.nfc.NfcAdapter)>
<android.graphics.Paint: void setCompatibilityScaling(float)>
<android.net.NetworkStats.Entry: java.lang.String toString()>
<android.view.WindowCallbackWrapper: void <init>(android.view.Window.Callback)>
<com.google.android.gles_jni.GLImpl: void glGetFixedv(int,int[],int)>
<android.opengl.GLES20: void glUniform1fv(int,int,java.nio.FloatBuffer)>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getDefaultActivityIcon()>
<android.view.MotionEvent: int getDeviceId()>
<android.widget.CompoundButton: android.graphics.PorterDuff.Mode getButtonTintMode()>
<android.telecom.Response: void onError(java.lang.Object,int,java.lang.String)>
<android.print.PrinterInfo.Builder: android.print.PrinterInfo.Builder setDescription(java.lang.String)>
<android.bluetooth.BluetoothGattServerCallback: void onServiceAdded(int,android.bluetooth.BluetoothGattService)>
<android.hardware.usb.UsbManager: android.hardware.usb.UsbAccessory[] getAccessoryList()>
<android.preference.EditTextPreference: boolean shouldDisableDependents()>
<android.widget.TextView: boolean onPrivateIMECommand(java.lang.String,android.os.Bundle)>
<android.app.UiAutomation: boolean setRotation(int)>
<android.media.IRemoteControlClient: void unplugRemoteControlDisplay(android.media.IRemoteControlDisplay)>
<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo: boolean isHierarchical()>
<android.renderscript.Double4: void <init>(android.renderscript.Double4)>
<android.hardware.camera2.legacy.RequestHolder: void failRequest()>
<android.view.SurfaceControl: void screenshot(android.os.IBinder,android.view.Surface)>
<com.google.android.gles_jni.GLImpl: void glClearDepthf(float)>
<android.app.ActivityManagerProxy: void unstableProviderDied(android.os.IBinder)>
<android.media.MediaFocusControl: void remoteControlDisplayWantsPlaybackPositionSync(android.media.IRemoteControlDisplay,boolean)>
<android.os.BatteryStats: void commitCurrentHistoryBatchLocked()>
<android.app.Dialog: void onWindowAttributesChanged(android.view.WindowManager.LayoutParams)>
<android.webkit.WebResourceResponse: java.util.Map getResponseHeaders()>
<android.content.pm.VerificationParams: void <init>(android.net.Uri,android.net.Uri,android.net.Uri,int,android.content.pm.ManifestDigest)>
<android.widget.ExpandableListView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.graphics.drawable.AnimatedRotateDrawable: void setAlpha(int)>
<android.content.Intent: void setSelector(android.content.Intent)>
<android.webkit.WebView: void dispatchDraw(android.graphics.Canvas)>
<android.bluetooth.IBluetoothHeadsetPhone: boolean answerCall()>
<android.media.SubtitleTrack: void finalize()>
<android.app.ActivityManagerProxy: android.graphics.Point getAppTaskThumbnailSize()>
<android.view.View: int getTop()>
<android.filterpacks.imageproc.SimpleImageFilter: void process(android.filterfw.core.FilterContext)>
<com.android.internal.widget.PreferenceImageView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.internal.telephony.CallerInfoAsyncQuery: com.android.internal.telephony.CallerInfoAsyncQuery startQuery(int,android.content.Context,java.lang.String,com.android.internal.telephony.CallerInfoAsyncQuery.OnQueryCompleteListener,java.lang.Object,long)>
<android.widget.ActionMenuPresenter: boolean flagActionItems()>
<android.widget.ActionMenuPresenter: boolean shouldIncludeItem(int,com.android.internal.view.menu.MenuItemImpl)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface.OnClickListener)>
<android.content.ContextWrapper: android.content.ContentResolver getContentResolver()>
<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.webkit.WebViewProvider: void setFindListener(android.webkit.WebView.FindListener)>
<android.widget.AbsListView: void onDisplayHint(int)>
<android.hardware.SensorManager: void unregisterListenerImpl(android.hardware.SensorEventListener,android.hardware.Sensor)>
<android.view.inputmethod.SparseRectFArray: void <init>(android.os.Parcel)>
<android.renderscript.Byte2: void addAt(int,byte)>
<android.view.View: void getDrawingRect(android.graphics.Rect)>
<android.app.DownloadManager: int markRowDeleted(long[])>
<android.opengl.GLES20: void glGetShaderSource(int,int,java.nio.IntBuffer,byte)>
<android.location.GpsMeasurement: int describeContents()>
<android.view.inputmethod.EditorInfo: void writeToParcel(android.os.Parcel,int)>
<android.widget.DialerFilter: void onModeChange(int,int)>
<com.google.android.gles_jni.GLImpl: void glRotatef(float,float,float,float)>
<android.opengl.GLES20: void glGetProgramiv(int,int,java.nio.IntBuffer)>
<android.telephony.PhoneNumberUtils: boolean compareStrictly(java.lang.String,java.lang.String)>
<android.os.IPowerManager: boolean isInteractive()>
<android.opengl.GLES11Ext: void glGetTexEnvxvOES(int,int,int[],int)>
<android.widget.StackView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.view.KeyEvent.Callback: boolean onKeyUp(int,android.view.KeyEvent)>
<com.android.internal.os.BatteryStatsImpl: long getBluetoothStateTime(int,long,int)>
<android.location.Address: void setLocality(java.lang.String)>
<android.os.IPowerManager: void userActivity(long,int,int)>
<android.widget.CalendarView.CalendarViewDelegate: void setSelectedWeekBackgroundColor(int)>
<com.android.internal.widget.ActionBarOverlayLayout.ActionBarVisibilityCallback: void enableContentAnimations(boolean)>
<android.view.textservice.SpellCheckerInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>
<android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>
<android.graphics.drawable.BitmapDrawable: void setXfermode(android.graphics.Xfermode)>
<android.net.wifi.p2p.WifiP2pManager: void setServiceResponseListener(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ServiceResponseListener)>
<android.widget.Toolbar.LayoutParams: void <init>(android.app.ActionBar.LayoutParams)>
<android.widget.ImageView: boolean hasOverlappingRendering()>
<android.content.SharedPreferences: int getInt(java.lang.String,int)>
<com.android.server.net.DnsServerEntry: int compareTo(com.android.server.net.DnsServerEntry)>
<android.provider.Contacts.People: java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri)>
<android.content.BroadcastReceiver: int getResultCode()>
<android.view.View: boolean isLayoutDirectionInherited()>
<android.app.AppOpsManager.PackageOps: java.util.List getOps()>
<android.hardware.camera2.marshal.impl.MarshalQueryableRggbChannelVector: boolean isTypeMappingSupported(android.hardware.camera2.utils.TypeReference,int)>
<android.view.animation.PathInterpolator: void <init>(android.content.res.Resources,android.content.res.Resources.Theme,android.util.AttributeSet)>
<android.sax.EndElementListener: void end()>
<android.media.tv.TvContract: java.lang.String buildInputId(android.content.ComponentName)>
<android.app.WallpaperInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>
<android.util.TimedRemoteCaller: int onBeforeRemoteCall()>
<android.renderscript.Double2: void addAt(int,double)>
<android.view.ActionMode: java.lang.CharSequence getTitle()>
<android.view.FocusFinder: android.view.View findNearestTouchable(android.view.ViewGroup,int,int,int,int[])>
<android.hardware.camera2.params.TonemapCurve: java.lang.String toString()>
<android.widget.ScrollView: void onMeasure(int,int)>
<com.android.internal.os.BatteryStatsImpl: int getScreenOnCount(int)>
<android.webkit.URLUtil: boolean isFileUrl(java.lang.String)>
<android.renderscript.Int4: void add(int)>
<android.os.Vibrator: void vibrate(long[],int,android.media.AudioAttributes)>
<android.graphics.Interpolator: void <init>(int,int)>
<android.view.ActionProvider: void setSubUiVisibilityListener(android.view.ActionProvider.SubUiVisibilityListener)>
<android.app.Activity: void setFeatureDrawableResource(int,int)>
<android.renderscript.ScriptIntrinsicHistogram: void setOutput(android.renderscript.Allocation)>
<android.widget.TextView: int getCompoundDrawablePadding()>
<android.hardware.camera2.params.MeteringRectangle: int getX()>
<android.hardware.display.IDisplayManager: void resumeWifiDisplay()>
<android.view.View: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>
<android.opengl.EGLExt: boolean eglPresentationTimeANDROID(android.opengl.EGLDisplay,android.opengl.EGLSurface,long)>
<com.android.internal.widget.DecorContentParent: void setLogo(int)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofArgb(java.lang.Object,android.util.Property,int[])>
<android.media.audiofx.AudioEffect.OnEnableStatusChangeListener: void onEnableStatusChange(android.media.audiofx.AudioEffect,boolean)>
<android.content.IContentService: boolean isSyncPending(android.accounts.Account,java.lang.String,android.content.ComponentName)>
<android.content.Intent: java.lang.String toString()>
<android.printservice.IPrintService: void requestCancelPrintJob(android.print.PrintJobInfo)>
<android.accessibilityservice.IAccessibilityServiceConnection: boolean performGlobalAction(int)>
<android.view.accessibility.AccessibilityNodeInfo: void recycle()>
<com.google.android.util.AbstractMessageParser.Part: boolean isMedia()>
<android.printservice.IPrintServiceClient: void writePrintJobData(android.os.ParcelFileDescriptor,android.print.PrintJobId)>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildQueryString(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.filterpacks.base.ObjectSource: void setupPorts()>
<android.view.animation.Animation: boolean hasAlpha()>
<android.widget.TextView: void setCustomSelectionActionModeCallback(android.view.ActionMode.Callback)>
<android.util.ArraySet: java.lang.Object[] toArray(java.lang.Object[])>
<android.view.View: void setTag(int,java.lang.Object)>
<android.os.IUserManager: void setApplicationRestrictions(java.lang.String,android.os.Bundle,int)>
<android.app.Notification.Builder: android.app.Notification.Builder setSmallIcon(int)>
<android.renderscript.FileA3D.IndexEntry: android.renderscript.FileA3D.EntryType getEntryType()>
<android.net.wifi.p2p.WifiP2pGroupList: int getNetworkId(java.lang.String)>
<android.widget.RadioGroup: android.widget.LinearLayout.LayoutParams generateDefaultLayoutParams()>
<android.widget.SimpleAdapter: android.widget.SimpleAdapter.ViewBinder getViewBinder()>
<com.android.internal.http.multipart.Part: void sendData(java.io.OutputStream)>
<android.widget.GridLayout.Spec: int hashCode()>
<android.util.ArraySet: java.lang.String toString()>
<android.net.wifi.p2p.WifiP2pManager: void setUpnpServiceResponseListener(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.UpnpServiceResponseListener)>
<android.media.AudioService.VolumeController: boolean isSameBinder(android.media.IVolumeController)>
<android.text.Selection: boolean extendToRightEdge(android.text.Spannable,android.text.Layout)>
<android.media.EncoderCapabilities: java.util.List getVideoEncoders()>
<android.content.Intent: boolean migrateExtraStreamToClipData()>
<android.graphics.drawable.ColorDrawable: void setColorFilter(android.graphics.ColorFilter)>
<android.content.ContextWrapper: java.lang.String getPackageResourcePath()>
<android.transition.ChangeTransform: boolean getReparent()>
<android.telecom.ConnectionService: android.telecom.RemoteConnection createRemoteOutgoingConnection(android.telecom.PhoneAccountHandle,android.telecom.ConnectionRequest)>
<android.view.DisplayAdjustments: android.os.IBinder getActivityToken()>
<com.android.internal.widget.WaveView.OnTriggerListener: void onGrabbedStateChange(android.view.View,int)>
<android.media.audiofx.Visualizer: int getMeasurementMode()>
<android.speech.tts.SynthesisRequest: int getCallerUid()>
<android.print.IPrintDocumentAdapter: void layout(android.print.PrintAttributes,android.print.PrintAttributes,android.print.ILayoutResultCallback,android.os.Bundle,int)>
<android.os.Parcel: java.io.Serializable readSerializable()>
<android.location.Country: void <init>(java.lang.String,int)>
<android.media.AudioService: int getMasterStreamType()>
<android.view.View: boolean hasOverlappingRendering()>
<com.android.internal.util.State: java.lang.String getName()>
<android.content.BroadcastReceiver.PendingResult: void <init>(int,java.lang.String,android.os.Bundle,int,boolean,boolean,android.os.IBinder,int)>
<android.os.Debug: void stopNativeTracing()>
<android.graphics.Region: boolean getBounds(android.graphics.Rect)>
<android.view.HardwareCanvas: int drawRenderNode(android.view.RenderNode,android.graphics.Rect,int)>
<com.android.internal.widget.LockPatternUtils: boolean isTactileFeedbackEnabled()>
<android.widget.TextView: android.text.method.KeyListener getKeyListener()>
<android.net.wifi.BatchedScanSettings: void writeToParcel(android.os.Parcel,int)>
<android.graphics.drawable.shapes.Shape: void resize(float,float)>
<android.text.method.BaseMovementMethod: boolean onGenericMotionEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>
<android.telecom.PhoneAccountHandle: java.lang.String toString()>
<android.view.accessibility.AccessibilityNodeInfo.RangeInfo: int getType()>
<android.hardware.display.WifiDisplayStatus: int getFeatureState()>
<android.graphics.Rect: float exactCenterX()>
<android.transition.Transition: void captureStartValues(android.transition.TransitionValues)>
<android.widget.CursorTreeAdapter: android.view.View newChildView(android.content.Context,android.database.Cursor,boolean,android.view.ViewGroup)>
<android.os.BatteryStats: long getPhoneSignalStrengthTime(int,long,int)>
<android.net.NetworkAgent: void handleMessage(android.os.Message)>
<com.android.internal.os.BatteryStatsImpl: void noteWifiRunningLocked(android.os.WorkSource)>
<android.graphics.DiscretePathEffect: void <init>(float,float)>
<android.widget.ActionMenuPresenter: void setMenuView(android.widget.ActionMenuView)>
<android.security.IKeystoreService: int clear_uid(long)>
<android.net.http.Headers: void setCacheControl(java.lang.String)>
<android.webkit.WebView.PrivateAccess: void overScrollBy(int,int,int,int,int,int,int,int,boolean)>
<android.media.IRemoteControlDisplay: void setEnabled(boolean)>
<android.os.INetworkManagementService: void setAccessPoint(android.net.wifi.WifiConfiguration,java.lang.String)>
<android.graphics.drawable.LevelListDrawable: boolean onLevelChange(int)>
<android.graphics.drawable.NinePatchDrawable: int getMinimumHeight()>
<android.filterfw.core.FilterPort: void assertPortIsOpen()>
<android.app.IApplicationThread: void scheduleCreateBackupAgent(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,int)>
<com.android.internal.os.BatteryStatsImpl: void noteVibratorOnLocked(int,long)>
<android.content.pm.PackageManager: void addCrossProfileIntentFilter(android.content.IntentFilter,int,int,int)>
<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>
<android.speech.srec.Recognizer: java.lang.String eventToString(int)>
<android.renderscript.Long4: void mod(long)>
<android.graphics.Canvas: void drawText(java.lang.CharSequence,int,int,float,float,android.graphics.Paint)>
<android.security.AndroidKeyStore: java.security.cert.Certificate[] engineGetCertificateChain(java.lang.String)>
<android.media.RemoteControlClient.MetadataEditor: java.lang.Object clone()>
<android.content.Intent: byte getByteExtra(java.lang.String,byte)>
<android.graphics.drawable.DrawableContainer: void setTintList(android.content.res.ColorStateList)>
<android.net.wifi.WifiConfiguration: void setHttpProxy(android.net.ProxyInfo)>
<android.os.ServiceManagerProxy: android.os.IBinder getService(java.lang.String)>
<android.view.accessibility.AccessibilityWindowInfo: boolean isAccessibilityFocused()>
<android.inputmethodservice.InputMethodService: int getBackDisposition()>
<android.bluetooth.IBluetoothHealth: int getHealthDeviceConnectionState(android.bluetooth.BluetoothDevice)>
<android.view.View: void setOnCreateContextMenuListener(android.view.View.OnCreateContextMenuListener)>
<android.util.AttributeSet: int getAttributeUnsignedIntValue(int,int)>
<com.android.internal.telephony.GsmAlphabet.TextEncodingDetails: java.lang.String toString()>
<android.widget.AbsListView: boolean setFrame(int,int,int,int)>
<android.net.wifi.p2p.WifiP2pConfig: java.lang.String toString()>
<android.net.LocalSocket: void shutdownInput()>
<com.android.internal.os.ProcessCpuTracker: long getCpuTimeForPid(int)>
<android.content.IntentSender: void writeIntentSenderOrNullToParcel(android.content.IntentSender,android.os.Parcel)>
<android.view.accessibility.AccessibilityWindowInfo: int getChildCount()>
<android.media.tv.TvInputService.HardwareSession: boolean onSetSurface(android.view.Surface)>
<android.view.ViewOverlay: void remove(android.graphics.drawable.Drawable)>
<com.google.android.util.AbstractMessageParser.FlickrPhoto: java.lang.String getTagsURL(java.lang.String)>
<android.database.sqlite.SQLiteDatabase: void setMaxSqlCacheSize(int)>
<com.android.internal.widget.ILockSettings: boolean checkVoldPassword(int)>
<android.bluetooth.IBluetooth: android.os.ParcelFileDescriptor createSocketChannel(int,java.lang.String,android.os.ParcelUuid,int,int)>
<android.os.IPowerManager: void setStayOnSetting(int)>
<android.hardware.camera2.CaptureResult: long getFrameNumber()>
<android.database.MatrixCursor: void <init>(java.lang.String[])>
<android.preference.SeekBarPreference: void <init>(android.content.Context,android.util.AttributeSet)>
<android.service.wallpaper.WallpaperService.Engine: void onSurfaceRedrawNeeded(android.view.SurfaceHolder)>
<android.view.inputmethod.InputMethodManager: void setFullscreenMode(boolean)>
<android.telephony.VoLteServiceState: int getSrvccState()>
<android.animation.ObjectAnimator: java.lang.String toString()>
<android.hardware.camera2.marshal.impl.MarshalQueryableRect: boolean isTypeMappingSupported(android.hardware.camera2.utils.TypeReference,int)>
<com.android.internal.telecom.ITelecomService: int getCallState()>
<com.android.internal.database.SortCursor: byte[] getBlob(int)>
<android.media.AudioService: void setRemoteStreamVolume(int)>
<com.google.android.gles_jni.EGLSurfaceImpl: int hashCode()>
<android.view.inputmethod.InputConnection: boolean setSelection(int,int)>
<android.telephony.TelephonyManager: int getNetworkClass(int)>
<android.provider.Settings.System: boolean putConfigurationForUser(android.content.ContentResolver,android.content.res.Configuration,int)>
<android.app.ActionBar: void setHomeAsUpIndicator(android.graphics.drawable.Drawable)>
<com.android.internal.view.InputConnectionWrapper: int getCursorCapsMode(int)>
<android.widget.Spinner: void setDropDownHorizontalOffset(int)>
<com.android.internal.widget.LockPatternUtils: boolean isOwnerInfoEnabled()>
<android.os.storage.StorageVolume: android.os.UserHandle getOwner()>
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothDevice getRemoteDevice(java.lang.String)>
<com.android.internal.os.BatteryStatsImpl.OverflowArrayMap: java.lang.Object instantiateObject()>
<android.app.admin.IDevicePolicyManager: java.util.List getPermittedInputMethodsForCurrentUser()>
<android.widget.ScrollView: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
<android.location.Criteria: void setSpeedRequired(boolean)>
<android.telephony.ServiceState: boolean isCdma(int)>
<android.view.ScaleGestureDetector: float getCurrentSpanX()>
<android.appwidget.AppWidgetManager: java.util.List getInstalledProvidersForProfile(android.os.UserHandle)>
<android.widget.ImageView: void setBaselineAlignBottom(boolean)>
<android.graphics.drawable.RotateDrawable: void onBoundsChange(android.graphics.Rect)>
<android.bluetooth.IBluetoothGatt: void serverConnect(int,java.lang.String,boolean,int)>
<android.bluetooth.IBluetoothManagerCallback: void onBluetoothServiceUp(android.bluetooth.IBluetooth)>
<com.android.internal.view.menu.IconMenuView: void onMeasure(int,int)>
<android.text.method.CharacterPickerDialog: void onCreate(android.os.Bundle)>
<android.graphics.drawable.LayerDrawable: boolean isAutoMirrored()>
<android.net.NetworkPolicyManager: void <init>(android.net.INetworkPolicyManager)>
<android.widget.HeaderViewListAdapter: boolean isEnabled(int)>
<com.android.internal.os.BatteryStatsImpl.Uid: boolean hasUserActivity()>
<android.text.method.LinkMovementMethod: boolean right(android.widget.TextView,android.text.Spannable)>
<com.android.internal.os.BatteryStatsImpl: void noteBluetoothOffLocked()>
<android.graphics.PathMeasure: void setPath(android.graphics.Path,boolean)>
<android.content.res.CompatibilityInfo.Translator: void translateRegionInWindowToScreen(android.graphics.Region)>
<android.widget.Space: void draw(android.graphics.Canvas)>
<android.accounts.AccountManagerCallback: void run(android.accounts.AccountManagerFuture)>
<android.widget.OverScroller: void setFriction(float)>
<android.telecom.RemoteConnection.VideoProvider: void sendSessionModifyRequest(android.telecom.VideoProfile)>
<android.webkit.WebResourceRequest: boolean isForMainFrame()>
<android.net.StaticIpConfiguration: int hashCode()>
<android.opengl.GLES31: void glGetTexLevelParameterfv(int,int,int,float[],int)>
<android.bluetooth.BluetoothAdapter: int getProfileConnectionState(int)>
<android.drm.DrmErrorEvent: void <init>(int,int,java.lang.String,java.util.HashMap)>
<android.app.IActivityManager: void killBackgroundProcesses(java.lang.String,int)>
<android.view.MotionEvent.PointerProperties: void copyFrom(android.view.MotionEvent.PointerProperties)>
<android.content.ContentValues: java.lang.Long getAsLong(java.lang.String)>
<android.graphics.Canvas: void freeTextLayoutCaches()>
<android.graphics.drawable.BitmapDrawable: void setTargetDensity(android.util.DisplayMetrics)>
<android.widget.DialerFilter: void setLettersWatcher(android.text.TextWatcher)>
<android.widget.RelativeLayout: android.widget.RelativeLayout.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.print.IPrintDocumentAdapter: void setObserver(android.print.IPrintDocumentAdapterObserver)>
<android.media.MediaCodecInfo.EncoderCapabilities: void init(android.media.MediaFormat,android.media.MediaCodecInfo.CodecCapabilities)>
<android.bluetooth.le.BluetoothLeScanner: void startScan(java.util.List,android.bluetooth.le.ScanSettings,android.bluetooth.le.ScanCallback)>
<android.net.wifi.WifiScanner.ScanListener: void onResults(android.net.wifi.ScanResult[])>
<android.view.ViewGroup: void measureChildWithMargins(android.view.View,int,int,int,int)>
<android.media.MediaRouter: void <init>(android.content.Context)>
<android.gesture.GestureOverlayView: void setFadeEnabled(boolean)>
<android.widget.Scroller: boolean isScrollingInDirection(float,float)>
<android.content.IntentFilter: boolean hasDataAuthority(android.content.IntentFilter.AuthorityEntry)>
<com.android.internal.backup.LocalTransport: android.content.Intent dataManagementIntent()>
<android.content.pm.RegisteredServicesCache: java.util.Collection getAllServices(int)>
<android.telecom.RemoteConference: void registerCallback(android.telecom.RemoteConference.Callback)>
<android.media.audiofx.AudioEffect: int setParameter(int,byte[])>
<android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean)>
<android.util.Log: int d(java.lang.String,java.lang.String)>
<android.util.TimeUtils: java.lang.String formatUptime(long)>
<android.graphics.Matrix: void getValues(float[])>
<android.view.Window: void setContentView(int)>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteStatement compileStatement(java.lang.String)>
<android.util.EventLog: int writeEvent(int,int)>
<com.android.internal.app.ProcessStats.ProcessState: void <init>(com.android.internal.app.ProcessStats.ProcessState,java.lang.String,int,int,java.lang.String,long)>
<android.hardware.camera2.marshal.impl.MarshalQueryableColorSpaceTransform: android.hardware.camera2.marshal.Marshaler createMarshaler(android.hardware.camera2.utils.TypeReference,int)>
<android.widget.CheckedTextView: void jumpDrawablesToCurrentState()>
<android.telephony.CellSignalStrengthCdma: int getCdmaDbm()>
<android.renderscript.Float2: void copyTo(float[],int)>
<android.widget.HorizontalScrollView: boolean fullScroll(int)>
<android.hardware.soundtrigger.SoundTrigger.KeyphraseRecognitionEvent: int describeContents()>
<android.media.AudioService: void setMode(int,android.os.IBinder)>
<android.renderscript.Matrix2f: void multiply(android.renderscript.Matrix2f)>
<android.widget.ToggleButton: void setTextOff(java.lang.CharSequence)>
<android.transition.Transition: void setPropagation(android.transition.TransitionPropagation)>
<android.view.View: boolean onKeyDown(int,android.view.KeyEvent)>
<com.android.internal.statusbar.StatusBarIcon: void readFromParcel(android.os.Parcel)>
<android.telecom.RemoteConnection: void playDtmfTone(char)>
<android.text.style.URLSpan: int getSpanTypeId()>
<android.util.Pools.Pool: boolean release(java.lang.Object)>
<android.view.InputChannel: void finalize()>
<android.net.NetworkStateTracker: java.lang.String getTcpBufferSizesPropName()>
<android.renderscript.FileA3D: int getIndexEntryCount()>
<android.telephony.PhoneNumberUtils: byte[] networkPortionToCalledPartyBCD(java.lang.String)>
<android.nfc.INfcTag: android.nfc.TransceiveResult transceive(int,byte[],boolean)>
<android.widget.CalendarView: void setMinDate(long)>
<android.view.inputmethod.InputMethodManager: void updateCursor(android.view.View,int,int,int,int)>
<android.location.LocationManager: boolean addGpsNavigationMessageListener(android.location.GpsNavigationMessageEvent.Listener)>
<android.filterfw.core.FilterFunction: void tearDown()>
<com.android.internal.app.WindowDecorActionBar: void hideForSystem()>
<android.database.AbstractCursor: android.os.Bundle respond(android.os.Bundle)>
<android.telecom.ParcelableConnection: int getVideoState()>
<android.view.ScaleGestureDetector.SimpleOnScaleGestureListener: void onScaleEnd(android.view.ScaleGestureDetector)>
<android.renderscript.Double2: double get(int)>
<android.print.PrinterCapabilitiesInfo: void <init>(android.print.PrinterCapabilitiesInfo)>
<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputContext getInputContext()>
<android.view.accessibility.AccessibilityNodeInfo: boolean isAccessibilityFocused()>
<android.app.ExpandableListActivity: void setListAdapter(android.widget.ExpandableListAdapter)>
<android.graphics.drawable.ShapeDrawable: void setIntrinsicWidth(int)>
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int getTransactionId()>
<android.os.FileUtils: boolean isFilenameSafe(java.io.File)>
<android.widget.CalendarView: void setMaxDate(long)>
<android.filterpacks.videoproc.BackDropperFilter: void <init>(java.lang.String)>
<android.app.ActivityThread: android.content.IContentProvider acquireExistingProvider(android.content.Context,java.lang.String,int,boolean)>
<android.hardware.location.GeofenceHardwareService: void onDestroy()>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder permitDiskWrites()>
<android.print.IPrintDocumentAdapter: void start()>
<android.widget.TextView: void setMinHeight(int)>
<android.graphics.RectF: void set(android.graphics.RectF)>
<android.widget.RemoteViews: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.policy.IKeyguardService: void onDreamingStopped()>
<android.app.DatePickerDialog: void <init>(android.content.Context,android.app.DatePickerDialog.OnDateSetListener,int,int,int)>
<android.app.Dialog: boolean onSearchRequested()>
<android.telecom.Connection: void setCallCapabilities(int)>
<android.view.ViewStub: void setLayoutInflater(android.view.LayoutInflater)>
<android.content.ContextWrapper: boolean startInstrumentation(android.content.ComponentName,java.lang.String,android.os.Bundle)>
<com.android.server.net.BaseNetworkObserver: void routeUpdated(android.net.RouteInfo)>
<android.media.MediaDrm.KeyRequest: java.lang.String getDefaultUrl()>
<com.android.internal.app.IBatteryStats: void notePhoneDataConnectionState(int,boolean)>
<android.hardware.camera2.impl.CameraCaptureSessionImpl: android.hardware.camera2.CameraDevice getDevice()>
<com.android.internal.widget.LockPatternUtils: void <init>(android.content.Context)>
<android.util.LongSparseArray: java.lang.Object get(long)>
<android.net.nsd.NsdManager: void unregisterService(android.net.nsd.NsdManager.RegistrationListener)>
<com.android.internal.app.MediaRouteControllerDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
<android.util.AtomicFile: java.io.FileOutputStream startWrite()>
<android.content.res.Resources: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics)>
<android.net.NetworkQuotaInfo: long getEstimatedBytes()>
<android.widget.TextView: android.text.method.WordIterator getWordIterator()>
<android.hardware.input.InputManager: void addKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,java.lang.String)>
<android.filterpacks.imageproc.ToRGBAFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<android.hardware.soundtrigger.SoundTrigger.KeyphraseSoundModel: void <init>(java.util.UUID,java.util.UUID,byte[],android.hardware.soundtrigger.SoundTrigger.Keyphrase[])>
<android.app.admin.DevicePolicyManager: boolean isLockTaskPermitted(java.lang.String)>
<com.android.internal.widget.LockPatternUtilsCache: void setBoolean(java.lang.String,boolean,int)>
<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageOOO(int,java.lang.Object,java.lang.Object,java.lang.Object)>
<android.telephony.ServiceState: int getState()>
<android.widget.Switch: int getCompoundPaddingRight()>
<android.provider.CallLog.Calls: android.net.Uri addCall(com.android.internal.telephony.CallerInfo,android.content.Context,java.lang.String,int,int,int,android.telecom.PhoneAccountHandle,long,int,java.lang.Long,boolean)>
<android.opengl.GLES11Ext: void glGetMaterialxvOES(int,int,java.nio.IntBuffer)>
<com.android.internal.telephony.ITelephonyRegistry: void notifyCellLocation(android.os.Bundle)>
<android.speech.tts.TextToSpeechService: void onStop()>
<android.bluetooth.BluetoothAdapter: boolean isDiscovering()>
<android.location.GpsMeasurement: void resetElevationUncertaintyInDeg()>
<com.android.internal.content.PackageMonitor: void onPackageAppeared(java.lang.String,int)>
<android.telecom.Phone: void addListener(android.telecom.Phone.Listener)>
<android.os.StrictMode: android.os.StrictMode.VmPolicy getVmPolicy()>
<android.app.admin.IDevicePolicyManager: void clearCrossProfileIntentFilters(android.content.ComponentName)>
<android.content.Intent: double getDoubleExtra(java.lang.String,double)>
<android.app.Notification.Builder: android.app.Notification buildUnstyled()>
<android.filterfw.core.ProgramPort: void <init>(android.filterfw.core.Filter,java.lang.String,java.lang.String,java.lang.reflect.Field,boolean)>
<android.widget.AbsListView: void setTranscriptMode(int)>
<android.service.persistentdata.IPersistentDataBlockService: int write(byte[])>
<com.android.internal.util.StateMachine.LogRec: com.android.internal.util.IState getState()>
<android.inputmethodservice.ExtractEditText: boolean hasVerticalScrollBar()>
<com.android.internal.telecom.IConnectionServiceAdapter: void setStatusHints(java.lang.String,android.telecom.StatusHints)>
<android.webkit.Plugin: java.lang.String getName()>
<android.view.animation.AnimationSet: void setRepeatMode(int)>
<android.app.admin.DeviceAdminInfo: void writeToParcel(android.os.Parcel,int)>
<com.android.ims.ImsCallForwardInfo: void writeToParcel(android.os.Parcel,int)>
<android.hardware.camera2.utils.UncheckedThrow: void throwAnyException(java.lang.Exception)>
<android.service.persistentdata.PersistentDataBlockManager: void wipe()>
<android.database.sqlite.SQLiteSession: java.lang.String executeForString(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal)>
<android.bluetooth.le.ScanSettings: int describeContents()>
<android.media.IAudioService: int setBluetoothA2dpDeviceConnectionState(android.bluetooth.BluetoothDevice,int,int)>
<android.view.ViewGroup.MarginLayoutParams: void copyMarginsFrom(android.view.ViewGroup.MarginLayoutParams)>
<com.android.internal.os.BatteryStatsImpl: void noteWifiStoppedLocked(android.os.WorkSource)>
<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.renderscript.Matrix2f: void scale(float,float)>
<android.hardware.camera2.impl.CameraMetadataNative: void swap(android.hardware.camera2.impl.CameraMetadataNative)>
<android.content.IntentFilter: java.util.Iterator typesIterator()>
<android.app.IActivityManager: boolean releaseActivityInstance(android.os.IBinder)>
<android.net.NetworkIdentity: boolean getRoaming()>
<android.content.ClipDescription: boolean toShortString(java.lang.StringBuilder)>
<android.media.tv.TvInputManager: java.util.List getTvInputList()>
<android.bluetooth.IBluetoothInputDevice: boolean connect(android.bluetooth.BluetoothDevice)>
<android.content.ContextWrapper: void revokeUriPermission(android.net.Uri,int)>
<android.view.SurfaceControl: void setPosition(float,float)>
<com.android.internal.telecom.IConnectionService: void abort(java.lang.String)>
<android.database.BulkCursorNative: android.database.IBulkCursor asInterface(android.os.IBinder)>
<android.telephony.TelephonyManager: java.lang.String getNetworkCountryIso()>
<android.opengl.GLES31: void glActiveShaderProgram(int,int)>
<android.location.LocationManager: void <init>(android.content.Context,android.location.ILocationManager)>
<android.app.ActivityManager: boolean clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver)>
<android.net.wifi.WifiManager.WifiLock: void release()>
<android.app.ActivityManager.TaskDescription: void readFromParcel(android.os.Parcel)>
<android.net.MailTo: java.lang.String getTo()>
<android.app.ActivityManagerProxy: void closeSystemDialogs(java.lang.String)>
<android.widget.ListPopupWindow.ForwardingListener: void onViewDetachedFromWindow(android.view.View)>
<android.hardware.camera2.utils.TypeReference: java.lang.String toString()>
<com.google.android.util.AbstractMessageParser.TrieNode: boolean exists()>
<android.hardware.camera2.utils.CloseableLock: void close()>
<android.print.PrintDocumentAdapter.WriteResultCallback: void onWriteFinished(android.print.PageRange[])>
<android.view.Window.Callback: void onActionModeFinished(android.view.ActionMode)>
<com.google.android.gles_jni.GLImpl: void glGenFramebuffersOES(int,int[],int)>
<android.widget.AbsListView: void onRemoteAdapterDisconnected()>
<android.database.AbstractWindowedCursor: void checkPosition()>
<android.speech.tts.TtsEngines: void updateLocalePrefForEngine(java.lang.String,java.util.Locale)>
<android.app.Activity: boolean isDestroyed()>
<android.media.tv.TvInputService.Session: void notifyTracksChanged(java.util.List)>
<com.android.internal.util.StateMachine.LogRec: void update(com.android.internal.util.StateMachine,android.os.Message,java.lang.String,com.android.internal.util.IState,com.android.internal.util.IState,com.android.internal.util.IState)>
<com.android.internal.widget.LockScreenWidgetCallback: boolean isVisible(android.view.View)>
<android.security.KeyChainAliasCallback: void alias(java.lang.String)>
<android.widget.Chronometer: long getBase()>
<android.bluetooth.BluetoothA2dp: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.view.View: int getAccessibilityViewId()>
<android.widget.SimpleCursorTreeAdapter: void <init>(android.content.Context,android.database.Cursor,int,java.lang.String[],int[],int,java.lang.String[],int[])>
<android.filterfw.core.SyncRunner: void close()>
<android.inputmethodservice.ExtractEditText: void deleteText_internal(int,int)>
<android.media.AmrInputStream: int read(byte[])>
<android.util.Log: int wtf(java.lang.String,java.lang.String)>
<android.renderscript.Long3: void sub(long)>
<android.view.inputmethod.InputConnectionWrapper: boolean performPrivateCommand(java.lang.String,android.os.Bundle)>
<android.service.dreams.IDreamManager: void stopDozing(android.os.IBinder)>
<android.filterfw.core.VertexFrame: java.lang.String toString()>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumUpperCase(android.content.ComponentName,int)>
<android.hardware.hdmi.HdmiDeviceInfo: java.lang.String getDisplayName()>
<android.view.animation.LayoutAnimationController: boolean willOverlap()>
<android.preference.Preference: void onBindView(android.view.View)>
<android.content.pm.Signature: android.content.pm.Signature bounce(java.security.cert.CertificateFactory,android.content.pm.Signature)>
<android.net.LinkProperties: void setDnsServers(java.util.Collection)>
<com.android.internal.content.PackageMonitor: boolean isPackageModified(java.lang.String)>
<android.text.style.ForegroundColorSpan: void <init>(android.os.Parcel)>
<android.content.pm.LauncherApps.Callback: void onPackagesAvailable(java.lang.String[],android.os.UserHandle,boolean)>
<android.animation.AnimatorSet: long getStartDelay()>
<android.content.ContextWrapper: void attachBaseContext(android.content.Context)>
<android.net.NetworkRequest: int hashCode()>
<android.os.Handler: boolean sendEmptyMessage(int)>
<android.net.nsd.DnsSdTxtRecord: void <init>(byte[])>
<android.app.Fragment: android.transition.Transition getExitTransition()>
<android.bluetooth.BluetoothA2dp: java.lang.String stateToString(int)>
<android.widget.RadioGroup: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.view.SurfaceHolder: void setSizeFromLayout()>
<android.media.effect.effects.AutoFixEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>
<android.renderscript.ScriptIntrinsicConvolve3x3: android.renderscript.ScriptIntrinsicConvolve3x3 create(android.renderscript.RenderScript,android.renderscript.Element)>
<com.android.internal.inputmethod.InputMethodUtils: boolean containsSubtypeOf(android.view.inputmethod.InputMethodInfo,java.lang.String,java.lang.String)>
<android.app.LauncherActivity.IconResizer: android.graphics.drawable.Drawable createIconThumbnail(android.graphics.drawable.Drawable)>
<android.security.IKeystoreService: int password(java.lang.String)>
<com.android.internal.view.IInputMethodManager: void showInputMethodPickerFromClient(com.android.internal.view.IInputMethodClient)>
<android.bluetooth.IBluetoothHeadsetClient: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.app.ActivityOptions: android.app.ActivityOptions makeTaskLaunchBehind()>
<android.media.MediaRouter: void addCallback(int,android.media.MediaRouter.Callback)>
<android.bluetooth.BluetoothAdapter: void closeProfileProxy(int,android.bluetooth.BluetoothProfile)>
<android.app.admin.IDevicePolicyManager: boolean isAdminActive(android.content.ComponentName,int)>
<android.renderscript.FieldPacker: void align(int)>
<android.bluetooth.IBluetoothHeadsetClient: boolean holdCall(android.bluetooth.BluetoothDevice)>
<com.android.internal.telecom.ITelecomService: void acceptRingingCall()>
<android.print.PrintJobInfo: java.lang.String getPrinterName()>
<android.bluetooth.BluetoothHealthCallback: void onHealthChannelStateChange(android.bluetooth.BluetoothHealthAppConfiguration,android.bluetooth.BluetoothDevice,int,int,android.os.ParcelFileDescriptor,int)>
<android.net.NetworkPolicy: void clearSnooze()>
<android.bluetooth.le.ScanSettings: long getReportDelayMillis()>
<android.view.TextureView: void draw(android.graphics.Canvas)>
<android.media.audiofx.EnvironmentalReverb: void setReverbLevel(short)>
<android.widget.ActionMenuView: void setOnMenuItemClickListener(android.widget.ActionMenuView.OnMenuItemClickListener)>
<android.content.IContentProvider: android.net.Uri canonicalize(java.lang.String,android.net.Uri)>
<android.text.style.TtsSpan: void <init>(java.lang.String,android.os.PersistableBundle)>
<android.app.FragmentTransaction: android.app.FragmentTransaction add(int,android.app.Fragment,java.lang.String)>
<com.android.internal.app.ToolbarActionBar: android.view.Window.Callback getWrappedWindowCallback()>
<android.database.AbstractCursor: boolean isFirst()>
<android.bluetooth.BluetoothUuid: boolean isInputDevice(android.os.ParcelUuid)>
<android.hardware.camera2.utils.CameraBinderDecorator: java.lang.Object newInstance(java.lang.Object)>
<android.view.inputmethod.InputBinding: void <init>(android.view.inputmethod.InputConnection,android.os.IBinder,int,int)>
<com.android.internal.view.menu.IconMenuItemView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.view.ViewGroup: boolean isTransitionGroup()>
<android.net.NetworkCapabilities: int describeContents()>
<android.content.res.AssetFileDescriptor.AutoCloseInputStream: boolean markSupported()>
<android.opengl.GLSurfaceView.EGLWindowSurfaceFactory: void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface)>
<android.telephony.TelephonyManager: int getDataNetworkType(long)>
<android.util.PathParser.PathDataNode: void interpolatePathDataNode(android.util.PathParser.PathDataNode,android.util.PathParser.PathDataNode,float)>
<android.text.TextUtils: int indexOf(java.lang.CharSequence,char)>
<android.content.pm.PackageManager: java.util.List queryIntentActivityOptions(android.content.ComponentName,android.content.Intent[],android.content.Intent,int)>
<android.media.audiofx.Visualizer: int setEnabled(boolean)>
<android.media.tv.TvContract.Programs.Genres: java.lang.String[] decode(java.lang.String)>
<android.speech.SpeechRecognizer: void cancel()>
<android.app.Activity: void startSearch(java.lang.String,boolean,android.os.Bundle,boolean)>
<android.net.INetworkStatsService: void setUidForeground(int,boolean)>
<android.bluetooth.BluetoothHeadset: boolean stopScoUsingVirtualVoiceCall(android.bluetooth.BluetoothDevice)>
<android.hardware.camera2.legacy.CameraDeviceUserShim: int submitRequest(android.hardware.camera2.CaptureRequest,boolean,android.hardware.camera2.utils.LongParcelable)>
<android.webkit.WebSettings: void setGeolocationEnabled(boolean)>
<android.hardware.camera2.CaptureFailure: int getReason()>
<android.view.ThreadedRenderer: void notifyFramePending()>
<android.media.session.ISessionController: void registerCallbackListener(android.media.session.ISessionControllerCallback)>
<android.database.ContentObserver: android.database.IContentObserver releaseContentObserver()>
<android.text.method.NumberKeyListener: int lookup(android.view.KeyEvent,android.text.Spannable)>
<android.content.pm.PackageInstaller: void unregisterSessionCallback(android.content.pm.PackageInstaller.SessionCallback)>
<android.app.KeyguardManager.KeyguardLock: void reenableKeyguard()>
<android.bluetooth.le.AdvertiseCallback: void onStartFailure(int)>
<android.widget.Toolbar: java.lang.CharSequence getTitle()>
<android.widget.OverScroller: void abortAnimation()>
<android.speech.srec.UlawEncoderInputStream: int read()>
<android.filterpacks.imageproc.RedEyeFilter: void <init>(java.lang.String)>
<com.android.internal.app.ToolbarActionBar: void setDisplayShowHomeEnabled(boolean)>
<android.content.pm.IOnAppsChangedListener: void onPackageAdded(android.os.UserHandle,java.lang.String)>
<android.os.PersistableBundle: void putPersistableBundle(java.lang.String,android.os.PersistableBundle)>
<android.content.pm.PackageManager.LegacyPackageDeleteObserver: void <init>(android.content.pm.IPackageDeleteObserver)>
<android.net.wifi.WifiManager: void connect(android.net.wifi.WifiConfiguration,android.net.wifi.WifiManager.ActionListener)>
<android.webkit.WebView: void stopLoading()>
<android.widget.AutoCompleteTextView.Validator: boolean isValid(java.lang.CharSequence)>
<android.content.CursorLoader: void onStopLoading()>
<android.webkit.WebChromeClient: void openFileChooser(android.webkit.ValueCallback,java.lang.String,java.lang.String)>
<android.bluetooth.BluetoothA2dpSink: boolean disconnect(android.bluetooth.BluetoothDevice)>
<android.media.browse.MediaBrowser.SubscriptionCallback: void onChildrenLoaded(java.lang.String,java.util.List)>
<android.net.Uri: android.net.Uri.Builder buildUpon()>
<android.service.notification.Condition: android.net.Uri.Builder newId(android.content.Context)>
<android.app.Activity: boolean isBackgroundVisibleBehind()>
<android.app.IApplicationThread: void updateTimePrefs(boolean)>
<android.view.ViewConfiguration: boolean hasPermanentMenuKey()>
<android.location.LocationRequest: android.location.LocationRequest setFastestInterval(long)>
<android.widget.QuickContactBadge: void setExcludeMimes(java.lang.String[])>
<android.widget.AutoCompleteTextView: int getDropDownAnimationStyle()>
<android.content.res.TypedArray: int getInt(int,int)>
<android.graphics.drawable.GradientDrawable: void setGradientType(int)>
<android.content.res.TypedArray: boolean getValue(int,android.util.TypedValue)>
<android.widget.NumberPicker: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.media.MediaRecorder: void setVideoEncodingBitRate(int)>
<com.android.internal.os.BatteryStatsImpl.BatchTimer: void writeToParcel(android.os.Parcel,long)>
<android.security.AndroidKeyStore: java.util.Enumeration engineAliases()>
<android.filterfw.core.ShaderProgram: void <init>(android.filterfw.core.FilterContext,java.lang.String,java.lang.String)>
<com.google.android.gles_jni.GLImpl: void glDrawTexxvOES(int[],int)>
<android.app.ISearchManager: boolean launchAssistAction(int,java.lang.String,int)>
<android.view.textservice.SpellCheckerSession: void cancel()>
<android.renderscript.FieldPacker: void <init>(byte[])>
<android.database.sqlite.SQLiteDatabase: java.util.Map getSyncedTables()>
<android.bluetooth.IBluetoothInputDevice: boolean getProtocolMode(android.bluetooth.BluetoothDevice)>
<android.app.Activity: void startPostponedEnterTransition()>
<android.media.tv.TvInputManager.SessionCallback: void onTrackSelected(android.media.tv.TvInputManager.Session,int,java.lang.String)>
<com.android.internal.app.ToolbarActionBar: void setStackedBackgroundDrawable(android.graphics.drawable.Drawable)>
<android.widget.ListView: void setSelection(int)>
<android.content.Context: int checkUriPermission(android.net.Uri,int,int,int)>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder permitDiskReads()>
<android.opengl.GLES11: void glGetTexParameteriv(int,int,int[],int)>
<android.preference.SeekBarVolumizer: void onProgressChanged(android.widget.SeekBar,int,boolean)>
<android.text.DynamicLayout: int getLineStart(int)>
<android.telecom.ParcelableCall: android.telecom.PhoneAccountHandle getAccountHandle()>
<android.widget.ExpandableListAdapter: long getCombinedChildId(long,long)>
<android.preference.PreferenceManager: void <init>(android.app.Activity,int)>
<android.content.pm.PackageManager: void setComponentEnabledSetting(android.content.ComponentName,int,int)>
<android.media.tv.ITvInputClient: void onTracksChanged(java.util.List,int)>
<com.google.android.gles_jni.EGLSurfaceImpl: boolean equals(java.lang.Object)>
<com.android.internal.widget.multiwaveview.TargetDrawable: float getX()>
<android.net.wifi.p2p.WifiP2pDeviceList: java.lang.String toString()>
<android.opengl.GLES10: void glSampleCoveragex(int,boolean)>
<android.content.ContentProviderResult: void <init>(android.content.ContentProviderResult,int)>
<android.telephony.gsm.GsmCellLocation: void <init>(android.os.Bundle)>
<android.nfc.tech.TagTechnology: void reconnect()>
<android.app.FragmentManager: void popBackStack(java.lang.String,int)>
<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>
<android.widget.BaseAdapter: void registerDataSetObserver(android.database.DataSetObserver)>
<android.accounts.IAccountManager: java.lang.String peekAuthToken(android.accounts.Account,java.lang.String)>
<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem.OnMenuItemClickListener)>
<android.webkit.WebStorage: void getQuotaForOrigin(java.lang.String,android.webkit.ValueCallback)>
<com.android.internal.inputmethod.InputMethodUtils: java.lang.String getApiCallStack()>
<android.drm.DrmInfo: void <init>(int,java.lang.String,java.lang.String)>
<android.os.Environment: java.io.File getDataDirectory()>
<android.app.usage.ConfigurationStats: void <init>(android.app.usage.ConfigurationStats)>
<android.hardware.hdmi.HdmiRecordListener.TimerStatusData: int getExtraError()>
<com.android.internal.widget.ToolbarWidgetWrapper: boolean isOverflowMenuShowPending()>
<android.view.HardwareCanvas: void onPostDraw()>
<android.transition.Slide: void <init>(int)>
<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.media.MediaMetadataEditor: void addEditableKey(int)>
<android.view.View: void addFocusables(java.util.ArrayList,int,int)>
<android.app.admin.IDevicePolicyManager: boolean hasUserSetupCompleted()>
<android.content.IntentFilter.AuthorityEntry: int match(android.net.Uri)>
<android.view.inputmethod.CompletionInfo: java.lang.CharSequence getLabel()>
<android.net.IConnectivityManager: boolean addVpnAddress(java.lang.String,int)>
<com.android.internal.os.BatteryStatsImpl.Uid: java.util.Map getSyncStats()>
<android.content.SyncAdapterType: boolean isAlwaysSyncable()>
<android.opengl.GLES11Ext: void glGetTexParameterxvOES(int,int,int[],int)>
<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getVoiceMailNumber()>
<android.media.MediaPlayer.OnBufferingUpdateListener: void onBufferingUpdate(android.media.MediaPlayer,int)>
<android.os.IServiceManager: void addService(java.lang.String,android.os.IBinder,boolean)>
<android.content.pm.PackageParser: android.content.pm.Signature stringToSignature(java.lang.String)>
<android.view.View: android.view.ViewGroup.LayoutParams getLayoutParams()>
<android.gesture.GestureStore: void save(java.io.OutputStream)>
<android.service.fingerprint.FingerprintManager: boolean enrolledAndEnabled()>
<android.content.SyncRequest.Builder: android.content.SyncRequest.Builder setExtras(android.os.Bundle)>
<android.net.wifi.WifiSsid: java.lang.String toString()>
<android.telecom.ParcelableCall: int getCallerDisplayNamePresentation()>
<android.content.Context: java.io.File getFileStreamPath(java.lang.String)>
<android.renderscript.Double4: void add(android.renderscript.Double4)>
<android.os.Environment.UserEnvironment: java.io.File[] buildExternalStorageAppMediaDirs(java.lang.String)>
<android.opengl.GLES10: void glTexParameterf(int,int,float)>
<android.net.BaseNetworkStateTracker: void setNetId(int)>
<android.os.Process: int getGidForName(java.lang.String)>
<com.android.internal.content.NativeLibraryHelper.Handle: com.android.internal.content.NativeLibraryHelper.Handle create(java.io.File)>
<android.mtp.MtpObjectInfo: int getThumbPixWidth()>
<android.widget.AbsSeekBar: boolean performAccessibilityAction(int,android.os.Bundle)>
<android.renderscript.Short2: android.renderscript.Short2 add(android.renderscript.Short2,short)>
<com.android.ims.internal.IImsUt: int updateCLIR(int)>
<android.preference.DialogPreference: android.graphics.drawable.Drawable getDialogIcon()>
<android.hardware.camera2.marshal.impl.MarshalQueryableStreamConfigurationDuration: boolean isTypeMappingSupported(android.hardware.camera2.utils.TypeReference,int)>
<android.service.fingerprint.IFingerprintService: void stopListening(android.os.IBinder,int)>
<android.net.nsd.DnsSdTxtRecord: boolean equals(java.lang.Object)>
<android.telecom.RemoteConnection: java.util.List getConferenceableConnections()>
<android.util.TimeUtils: java.lang.String logTimeOfDay(long)>
<android.app.Instrumentation: android.app.Instrumentation.ActivityMonitor addMonitor(java.lang.String,android.app.Instrumentation.ActivityResult,boolean)>
<android.filterpacks.imageproc.ToRGBFilter: android.filterfw.core.FrameFormat getConvertedFormat(android.filterfw.core.FrameFormat)>
<android.os.BatteryProperty: void readFromParcel(android.os.Parcel)>
<android.view.accessibility.AccessibilityRecord: int getMaxScrollY()>
<android.content.IClipboard: boolean hasClipboardText(java.lang.String)>
<android.widget.LinearLayout: float getWeightSum()>
<android.preference.Preference: android.content.SharedPreferences.Editor getEditor()>
<android.text.style.TextAppearanceSpan: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.widget.DecorToolbar: void setSplitWhenNarrow(boolean)>
<android.widget.AutoCompleteTextView: void showDropDown()>
<android.media.MediaRecorder: void setVideoSource(int)>
<android.media.tv.TvInputService.HardwareSession: void <init>(android.content.Context)>
<android.app.DownloadManager: int remove(long[])>
<android.filterfw.geometry.Rectangle: android.filterfw.geometry.Rectangle fromCenterVerticalAxis(android.filterfw.geometry.Point,android.filterfw.geometry.Point,android.filterfw.geometry.Point)>
<android.content.pm.PackageStats: void <init>(java.lang.String,int)>
<android.webkit.JsDialogHelper: void <init>(android.webkit.JsPromptResult,int,java.lang.String,java.lang.String,java.lang.String)>
<android.provider.ContactsContract.CommonDataKinds.Im: int getProtocolLabelResource(int)>
<android.telecom.Call: void disconnect()>
<android.service.notification.Condition: android.service.notification.Condition copy()>
<android.provider.DocumentsProvider: java.lang.String renameDocument(java.lang.String,java.lang.String)>
<android.telecom.PhoneAccount: android.telecom.PhoneAccount.Builder builder(android.telecom.PhoneAccountHandle,java.lang.CharSequence)>
<android.nfc.TechListParcel: void <init>(java.lang.String[][])>
<android.animation.LayoutTransition: void setAnimator(int,android.animation.Animator)>
<android.app.ActivityManager: void killBackgroundProcesses(java.lang.String)>
<android.view.KeyEvent: void <init>(long,long,int,int,int)>
<com.android.internal.http.multipart.FilePart: void <init>(java.lang.String,java.lang.String,java.io.File)>
<com.android.ims.internal.IImsCallSession: int getState()>
<android.print.PrintJobInfo: long getCreationTime()>
<android.renderscript.ScriptIntrinsicBlend: void forEachDstOver(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>
<android.app.Activity: void finishAfterTransition()>
<android.hardware.camera2.CaptureResult: java.lang.Object get(android.hardware.camera2.CaptureResult.Key)>
<android.widget.CompoundButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.os.CancellationSignal.OnCancelListener: void onCancel()>
<android.app.admin.IDevicePolicyManager: java.lang.String[] getAccountTypesWithManagementDisabledAsUser(int)>
<com.android.internal.os.BatteryStatsImpl.Uid: java.util.Map getPackageStats()>
<android.inputmethodservice.InputMethodService: android.view.View onCreateExtractTextView()>
<android.widget.ImageView: void setImageTintList(android.content.res.ColorStateList)>
<android.text.Layout: float getLineRight(int)>
<com.android.internal.widget.ToolbarWidgetWrapper: void setMenu(android.view.Menu,com.android.internal.view.menu.MenuPresenter.Callback)>
<android.transition.SidePropagation: void setSide(int)>
<android.widget.PopupWindow: int getMaxAvailableHeight(android.view.View,int,boolean)>
<android.graphics.Paint: boolean isElegantTextHeight()>
<android.service.notification.ZenModeConfig: java.lang.String sourceToString(int)>
<android.media.projection.IMediaProjectionManager: void removeCallback(android.media.projection.IMediaProjectionWatcherCallback)>
<android.view.DisplayAdjustments: void <init>(android.view.DisplayAdjustments)>
<android.bluetooth.le.BluetoothLeAdvertiser: void cleanup()>
<android.hardware.display.DisplayManagerInternal: void performTraversalInTransactionFromWindowManager()>
<android.provider.Settings.Global: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,int)>
<android.hardware.usb.UsbManager: boolean hasPermission(android.hardware.usb.UsbAccessory)>
<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getVoiceMailAlphaTag()>
<android.view.animation.Animation: void setZAdjustment(int)>
<android.widget.ProgressBar: android.graphics.PorterDuff.Mode getIndeterminateTintMode()>
<android.renderscript.Long4: long length()>
<android.hardware.hdmi.IHdmiInputChangeListener: void onChanged(android.hardware.hdmi.HdmiDeviceInfo)>
<android.media.MediaCodecInfo.CodecCapabilities: android.media.MediaCodecInfo.EncoderCapabilities getEncoderCapabilities()>
<android.renderscript.Long4: void add(android.renderscript.Long4)>
<android.app.admin.IDevicePolicyManager: android.content.ComponentName getRestrictionsProvider(int)>
<android.media.MediaCrypto: void release()>
<android.webkit.WebView: void loadData(java.lang.String,java.lang.String,java.lang.String)>
<android.widget.ProgressBar: android.graphics.drawable.Drawable getIndeterminateDrawable()>
<android.widget.CalendarView.CalendarViewDelegate: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.media.audiofx.Visualizer: int getMaxCaptureRate()>
<android.app.ActivityView: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getCompleteVoiceMailNumberForSubscriber(long)>
<com.android.internal.widget.IRemoteViewsFactory: long getItemId(int)>
<android.os.IUserManager: void setDefaultGuestRestrictions(android.os.Bundle)>
<android.app.admin.DevicePolicyManager: int getKeyguardDisabledFeatures(android.content.ComponentName,int)>
<android.view.View: boolean hasTransientState()>
<android.graphics.drawable.AnimationDrawable: void setOneShot(boolean)>
<android.service.notification.NotificationListenerService: int getCurrentInterruptionFilter()>
<android.media.effect.effects.FillLightEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>
<android.net.NetworkScoreManager: boolean requestScores(android.net.NetworkKey[])>
<android.hardware.camera2.impl.CameraMetadataNative.Key: java.lang.Class getType()>
<android.app.IntentService: void setIntentRedelivery(boolean)>
<android.provider.Settings.System: boolean putIntForUser(android.content.ContentResolver,java.lang.String,int,int)>
<android.widget.AdapterViewFlipper: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.android.internal.logging.AndroidHandler: void close()>
<android.text.style.TtsSpan.FractionBuilder: android.text.style.TtsSpan.FractionBuilder setDenominator(java.lang.String)>
<android.view.inputmethod.InputConnectionWrapper: java.lang.CharSequence getTextBeforeCursor(int,int)>
<android.print.PrintDocumentInfo: int hashCode()>
<android.content.Intent: void setSourceBounds(android.graphics.Rect)>
<android.graphics.drawable.DrawableContainer: void setHotspotBounds(int,int,int,int)>
<android.renderscript.RenderScript: void finish()>
<android.view.View: void setScrollBarSize(int)>
<android.view.InputDevice: boolean isExternal()>
<android.view.Window: void setFeatureInt(int,int)>
<android.hardware.soundtrigger.SoundTrigger.KeyphraseRecognitionExtra: void <init>(int,int,int,android.hardware.soundtrigger.SoundTrigger.ConfidenceLevel[])>
<android.widget.ListView: void setRemoteViewsAdapter(android.content.Intent)>
<android.content.pm.PackageManager.LegacyPackageDeleteObserver: void onPackageDeleted(java.lang.String,int,java.lang.String)>
<android.app.ActivityView.ActivityViewCallback: void onAllActivitiesComplete(android.app.ActivityView)>
<android.view.ViewTreeObserver: void addOnWindowFocusChangeListener(android.view.ViewTreeObserver.OnWindowFocusChangeListener)>
<android.widget.TextView: void setTextLocale(java.util.Locale)>
<android.widget.ListView: void onMeasure(int,int)>
<android.renderscript.RenderScript: android.renderscript.RenderScript create(android.content.Context,android.renderscript.RenderScript.ContextType,int)>
<android.content.pm.ApplicationInfo: void setCodePath(java.lang.String)>
<android.renderscript.Long2: void <init>(long,long)>
<com.android.internal.widget.ActionBarOverlayLayout: boolean hasLogo()>
<android.opengl.EGL14: android.opengl.EGLSurface eglCreatePbufferFromClientBuffer(android.opengl.EGLDisplay,int,int,android.opengl.EGLConfig,int[],int)>
<android.media.SoundPool: void autoResume()>
<android.util.SparseArray: void delete(int)>
<android.telecom.TelecomManager: int getCurrentTtyMode()>
<android.media.tv.TvInputService: int getRegisteredCallbackCount()>
<android.app.IApplicationThread: void scheduleRelaunchActivity(android.os.IBinder,java.util.List,java.util.List,int,boolean,android.content.res.Configuration)>
<com.google.android.gles_jni.GLImpl: void glTexGeniv(int,int,java.nio.IntBuffer)>
<android.widget.EdgeEffect: void setSize(int,int)>
<com.android.internal.util.BitwiseOutputStream: void skip(int)>
<com.android.internal.util.GrowingArrayUtils: int[] insert(int[],int,int,int)>
<com.android.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTitleCondensed()>
<com.android.internal.widget.DecorContentParent: boolean hasLogo()>
<android.widget.ScrollView: void addView(android.view.View,android.view.ViewGroup.LayoutParams)>
<android.app.Application: void onTrimMemory(int)>
<android.media.AudioManager: void remoteControlDisplayWantsPlaybackPositionSync(android.media.IRemoteControlDisplay,boolean)>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,android.graphics.Bitmap.Config)>
<android.util.Base64: byte[] decode(byte[],int,int,int)>
<android.text.HtmlToSpannedConverter: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>
<com.android.internal.util.FastPrintWriter: void close()>
<android.view.View: int getSuggestedMinimumWidth()>
<android.webkit.CacheManager.CacheResult: java.lang.String getLocation()>
<android.filterpacks.imageproc.BlackWhiteFilter: void setupPorts()>
<android.net.wifi.WifiScanner: void stopTrackingWifiChange(android.net.wifi.WifiScanner.WifiChangeListener)>
<android.preference.MultiSelectListPreference: java.util.Set getValues()>
<android.bluetooth.BluetoothProfile.ServiceListener: void onServiceDisconnected(int)>
<android.net.wifi.p2p.WifiP2pGroup: void setNetworkName(java.lang.String)>
<com.android.ims.internal.IImsCallSessionListener: void callSessionResumeFailed(com.android.ims.internal.IImsCallSession,com.android.ims.ImsReasonInfo)>
<android.hardware.hdmi.IHdmiControlCallback: void onComplete(int)>
<android.bluetooth.le.ScanResult: int describeContents()>
<android.widget.TabHost: void setCurrentTabByTag(java.lang.String)>
<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageOO(int,java.lang.Object,java.lang.Object)>
<android.media.AudioManager: void registerMediaButtonEventReceiver(android.content.ComponentName)>
<android.view.GestureDetector: void <init>(android.view.GestureDetector.OnGestureListener,android.os.Handler)>
<android.graphics.Matrix: void mapPoints(float[],int,float[],int,int)>
<android.widget.ExpandableListAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>
<android.media.MediaCodecInfo.AudioCapabilities: android.util.Range getBitrateRange()>
<android.graphics.drawable.AnimatedStateListDrawable: void addTransition(int,int,android.graphics.drawable.Drawable,boolean)>
<android.app.Fragment: void onStart()>
<com.android.internal.backup.IBackupTransport: long requestBackupTime()>
<android.net.wifi.ScanResult: boolean is5GHz()>
<android.widget.DatePicker.DatePickerDelegate: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.hardware.soundtrigger.SoundTrigger.KeyphraseRecognitionExtra: java.lang.String toString()>
<android.view.RenderNode: boolean setTranslationX(float)>
<android.app.Activity: void setRequestedOrientation(int)>
<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>
<com.android.internal.util.ArrayUtils: boolean contains(long[],long)>
<android.net.BaseNetworkStateTracker: void defaultRouteSet(boolean)>
<android.bluetooth.BluetoothInputDevice: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.telecom.PhoneAccount.Builder: android.telecom.PhoneAccount.Builder setCapabilities(int)>
<android.opengl.GLES30: void glBeginTransformFeedback(int)>
<android.widget.TextClock: void setFormat24Hour(java.lang.CharSequence)>
<android.view.ViewGroup: void setClipChildren(boolean)>
<android.view.WindowInsets: int getSystemWindowInsetLeft()>
<android.net.RouteInfo: void <init>(android.net.IpPrefix,java.net.InetAddress)>
<android.media.AudioManager: int setAudioPortGain(android.media.AudioPort,android.media.AudioGainConfig)>
<android.opengl.GLES30: void glUniform1uiv(int,int,java.nio.IntBuffer)>
<com.android.internal.http.multipart.PartBase: void setContentType(java.lang.String)>
<android.speech.tts.ITextToSpeechService: int playSilence(android.os.IBinder,long,int,java.lang.String)>
<android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>
<android.accounts.ChooseAccountActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
<android.renderscript.Short4: android.renderscript.Short4 add(android.renderscript.Short4,android.renderscript.Short4)>
<android.app.IActivityContainer: void release()>
<android.telecom.AudioState: void <init>(android.telecom.AudioState)>
<android.content.Intent: java.lang.String toShortString(boolean,boolean,boolean,boolean)>
<android.os.BatteryStats: long[] getDischargeStepDurationsArray()>
<android.app.TaskStackBuilder: android.app.TaskStackBuilder create(android.content.Context)>
<android.widget.DatePicker.ValidationCallback: void onValidationChanged(boolean)>
<android.graphics.EmbossMaskFilter: void <init>(float[],float,float,float)>
<android.os.Registrant: void notifyRegistrant()>
<android.opengl.GLES30: void glBindVertexArray(int)>
<android.os.Process: int getProcessGroup(int)>
<android.content.pm.PackageInstaller: void uninstall(java.lang.String,android.content.IntentSender)>
<com.android.internal.os.BatteryStatsImpl.Uid: void readJobSummaryFromParcelLocked(java.lang.String,android.os.Parcel)>
<android.os.BatteryStats.Uid: java.util.Map getJobStats()>
<android.app.ApplicationThreadProxy: void setHttpProxy(java.lang.String,java.lang.String,java.lang.String,android.net.Uri)>
<android.speech.srec.Recognizer.Grammar: void compile()>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator xBy(float)>
<android.content.res.AssetManager: java.io.InputStream openNonAsset(java.lang.String)>
<android.preference.ListPreference: java.lang.CharSequence[] getEntryValues()>
<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>
<android.opengl.GLES11: void glGetTexEnvxv(int,int,int[],int)>
<android.hardware.camera2.utils.Decorator: java.lang.Object newInstance(java.lang.Object,android.hardware.camera2.utils.Decorator.DecoratorListener)>
<android.widget.ActionMenuView: boolean invokeItem(com.android.internal.view.menu.MenuItemImpl)>
<android.widget.DigitalClock: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.preference.PreferenceGroupAdapter: boolean hasStableIds()>
<android.widget.AppSecurityPermissions: int getPermissionCount(int)>
<android.widget.RadioGroup.LayoutParams: void <init>(android.view.ViewGroup.MarginLayoutParams)>
<android.bluetooth.BluetoothUuid: boolean is32BitUuid(android.os.ParcelUuid)>
<com.android.internal.app.LocalePicker: void onResume()>
<android.app.Service: void attach(android.content.Context,android.app.ActivityThread,java.lang.String,android.os.IBinder,android.app.Application,java.lang.Object)>
<android.net.NetworkRequest: int describeContents()>
<android.app.ActionBar: void setDisplayOptions(int)>
<android.opengl.GLES30: void glSamplerParameterf(int,int,float)>
<android.hardware.camera2.params.StreamConfigurationMap: android.util.Size[] getHighSpeedVideoSizes()>
<android.renderscript.Matrix3f: void loadRotate(float)>
<android.text.method.DateKeyListener: char[] getAcceptedChars()>
<android.print.PageRange: boolean contains(int)>
<android.widget.PopupWindow: void showAtLocation(android.os.IBinder,int,int,int)>
<android.util.MonthDisplayHelper: int getMonth()>
<android.renderscript.Matrix3f: float[] getArray()>
<com.google.android.gles_jni.GLImpl: void glGenRenderbuffersOES(int,int[],int)>
<android.database.DatabaseUtils: void readExceptionWithOperationApplicationExceptionFromParcel(android.os.Parcel)>
<android.telecom.DisconnectCause: boolean equals(java.lang.Object)>
<android.media.IAudioService: void setMasterVolume(int,int,java.lang.String)>
<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>
<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>
<android.renderscript.Short2: void div(android.renderscript.Short2)>
<android.os.IUserManager: boolean hasUserRestriction(java.lang.String,int)>
<android.security.KeyPairGeneratorSpec: javax.security.auth.x500.X500Principal getSubjectDN()>
<android.widget.SlidingDrawer: void setOnDrawerCloseListener(android.widget.SlidingDrawer.OnDrawerCloseListener)>
<android.view.FocusFinderHelper: int majorAxisDistance(int,android.graphics.Rect,android.graphics.Rect)>
<android.service.notification.StatusBarNotification: android.app.Notification getNotification()>
<android.app.admin.IDevicePolicyManager: void setPasswordMinimumNonLetter(android.content.ComponentName,int,int)>
<android.graphics.drawable.VectorDrawable: boolean isAutoMirrored()>
<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setShowAsActionFlags(int)>
<android.accounts.NetworkErrorException: void <init>(java.lang.String,java.lang.Throwable)>
<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.Drawable mutate()>
<android.app.LoadedApk: java.lang.String getAppDir()>
<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object get(android.hardware.camera2.impl.CameraMetadataNative.Key)>
<android.preference.Preference: android.preference.Preference.OnPreferenceChangeListener getOnPreferenceChangeListener()>
<android.view.ContextThemeWrapper: void applyOverrideConfiguration(android.content.res.Configuration)>
<android.graphics.drawable.BitmapDrawable: boolean isStateful()>
<android.telephony.TelephonyManager: java.lang.String[] getIsimImpu()>
<com.android.internal.app.IBatteryStats: void noteWifiScanStoppedFromSource(android.os.WorkSource)>
<android.print.PrintManager: android.print.PrinterDiscoverySession createPrinterDiscoverySession()>
<android.text.format.Time: int getJulianDay(long,long)>
<android.app.IActivityManager: android.os.Bundle getAssistContextExtras(int)>
<android.view.KeyEvent: boolean isCapsLockOn()>
<android.media.VolumeProvider: int getMaxVolume()>
<android.text.style.TtsSpan.FractionBuilder: android.text.style.TtsSpan.FractionBuilder setNumerator(java.lang.String)>
<android.preference.Preference: void setFragment(java.lang.String)>
<android.security.Credentials: void install(android.content.Context,java.security.KeyPair)>
<android.drm.DrmSupportInfo: void addFileSuffix(java.lang.String)>
<android.animation.LayoutTransition: void setInterpolator(int,android.animation.TimeInterpolator)>
<android.provider.Settings.Global: long getLong(android.content.ContentResolver,java.lang.String,long)>
<com.android.internal.widget.ActionBarView: void setNavigationIcon(int)>
<android.transition.Transition.TransitionListenerAdapter: void onTransitionEnd(android.transition.Transition)>
<android.content.pm.PackageParser.ApkLite: void <init>(java.lang.String,java.lang.String,java.lang.String,int,int,java.util.List,android.content.pm.Signature[],boolean,boolean)>
<android.filterfw.core.GLFrame: void onFrameStore()>
<android.graphics.drawable.ShapeDrawable: void setTintMode(android.graphics.PorterDuff.Mode)>
<android.content.pm.PackageParser.Instrumentation: java.lang.String toString()>
<android.net.http.SslCertificate: java.util.Date getValidNotBeforeDate()>
<android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings.Builder setCallbackType(int)>
<android.os.Bundle: void putAll(android.os.Bundle)>
<android.media.audiofx.Visualizer: int getFft(byte[])>
<android.transition.TransitionValues: boolean equals(java.lang.Object)>
<android.service.notification.NotificationRankingUpdate: void writeToParcel(android.os.Parcel,int)>
<android.media.MediaDescription.Builder: android.media.MediaDescription.Builder setMediaId(java.lang.String)>
<android.app.admin.IDevicePolicyManager: boolean setApplicationHidden(android.content.ComponentName,java.lang.String,boolean)>
<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getLine1Number()>
<android.app.PendingIntent: java.lang.String getTargetPackage()>
<android.preference.EditTextPreference: java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int)>
<android.app.ActionBar.LayoutParams: void <init>(int,int)>
<android.accessibilityservice.AccessibilityService: android.os.IBinder onBind(android.content.Intent)>
<android.gesture.Gesture: java.lang.Object clone()>
<android.inputmethodservice.InputMethodService: void onUpdateSelection(int,int,int,int,int,int)>
<android.graphics.Region: boolean union(android.graphics.Rect)>
<android.graphics.drawable.InsetDrawable: android.graphics.drawable.Drawable mutate()>
<android.media.AudioService.VolumeStreamState: boolean setIndex(int,int)>
<android.telecom.TelecomManager: void silenceRinger()>
<android.animation.ValueAnimator: android.animation.ValueAnimator clone()>
<android.service.notification.ZenModeConfig.DowntimeInfo: boolean equals(java.lang.Object)>
<android.preference.Preference: void onParentChanged(android.preference.Preference,boolean)>
<android.media.SubtitleController: void reset()>
<com.android.internal.app.WindowDecorActionBar.TabImpl: android.app.ActionBar.Tab setCustomView(android.view.View)>
<android.media.MediaRouter.VolumeCallback: void onVolumeUpdateRequest(android.media.MediaRouter.RouteInfo,int)>
<android.text.style.SpellCheckSpan: int getSpanTypeId()>
<android.hardware.location.ActivityRecognitionHardware: boolean isSupported()>
<com.android.internal.os.AtomicFile: java.io.FileOutputStream openAppend()>
<android.content.ContextWrapper: void setTheme(int)>
<android.renderscript.ProgramStore: android.renderscript.ProgramStore BLEND_NONE_DEPTH_TEST(android.renderscript.RenderScript)>
<android.widget.ExpandableListAdapter: int getChildrenCount(int)>
<android.widget.VideoView: void setOnInfoListener(android.media.MediaPlayer.OnInfoListener)>
<android.hardware.Camera.AutoFocusCallback: void onAutoFocus(boolean,android.hardware.Camera)>
<android.filterpacks.imageproc.ImageCombineFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<com.android.internal.app.ToolbarActionBar: void setIcon(int)>
<android.hardware.usb.UsbConfiguration: int getMaxPower()>
<android.content.ContentProviderOperation: android.content.ContentProviderOperation getWithoutUserIdInUri()>
<com.android.internal.app.IBatteryStats: void noteWifiBatchedScanStoppedFromSource(android.os.WorkSource)>
<com.android.internal.widget.multiwaveview.GlowPadView: int getTargetResourceId()>
<android.renderscript.Long2: android.renderscript.Long2 mul(android.renderscript.Long2,long)>
<android.ddm.DdmHandleThread: void register()>
<com.android.internal.telecom.IConnectionServiceAdapter: void setVideoState(java.lang.String,int)>
<android.bluetooth.IBluetoothHeadsetClient: boolean dialMemory(android.bluetooth.BluetoothDevice,int)>
<android.app.ActivityManagerProxy: boolean startUserInBackground(int)>
<android.preference.PreferenceCategory: void <init>(android.content.Context)>
<android.app.admin.DevicePolicyManager: android.app.admin.DeviceAdminInfo getAdminInfo(android.content.ComponentName)>
<android.printservice.PrintService: void onRequestCancelPrintJob(android.printservice.PrintJob)>
<android.opengl.GLES10: void glOrthox(int,int,int,int,int,int)>
<android.os.StatFs: long getBlockCountLong()>
<android.os.Debug: int getLoadedClassCount()>
<com.android.internal.widget.ScrollingTabContainerView: void onAttachedToWindow()>
<android.renderscript.Font: android.renderscript.Font createFromFile(android.renderscript.RenderScript,android.content.res.Resources,java.lang.String,float)>
<android.hardware.camera2.impl.CameraDeviceImpl.StateCallbackKK: void onActive(android.hardware.camera2.CameraDevice)>
<android.nfc.NdefRecord: java.lang.String toString()>
<com.google.android.gles_jni.GLImpl: void glPointParameterxv(int,java.nio.IntBuffer)>
<android.content.IntentSender: int describeContents()>
<android.view.PointerIcon: android.view.PointerIcon getSystemIcon(android.content.Context,int)>
<android.widget.RatingBar: android.widget.RatingBar.OnRatingBarChangeListener getOnRatingBarChangeListener()>
<android.bluetooth.BluetoothGattCharacteristic: android.bluetooth.BluetoothGattService getService()>
<android.widget.HorizontalScrollView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.google.android.gles_jni.GLImpl: void glTexEnvfv(int,int,java.nio.FloatBuffer)>
<android.opengl.GLES20: void glStencilMask(int)>
<android.nfc.INfcCardEmulation: boolean isDefaultServiceForAid(int,android.content.ComponentName,java.lang.String)>
<com.android.internal.view.menu.IconMenuItemView: void setItemInvoker(com.android.internal.view.menu.MenuBuilder.ItemInvoker)>
<android.inputmethodservice.Keyboard.Key: void onPressed()>
<android.app.Activity: boolean onGenericMotionEvent(android.view.MotionEvent)>
<android.app.ActivityManagerProxy: void setRequestedOrientation(android.os.IBinder,int)>
<android.bluetooth.IBluetoothManager: boolean enableNoAutoConnect()>
<android.renderscript.Matrix2f: float get(int,int)>
<android.view.WindowManagerPolicy.WindowManagerFuncs: void registerPointerEventListener(android.view.WindowManagerPolicy.PointerEventListener)>
<android.os.StrictMode: android.os.StrictMode.ThreadPolicy allowThreadDiskWrites()>
<android.view.View: void onAttachedToWindow()>
<com.android.internal.util.FastXmlSerializer: void setFeature(java.lang.String,boolean)>
<android.webkit.ConsoleMessage: java.lang.String sourceId()>
<com.android.internal.widget.DecorContentParent: void saveToolbarHierarchyState(android.util.SparseArray)>
<android.view.animation.OvershootInterpolator: void <init>(android.content.res.Resources,android.content.res.Resources.Theme,android.util.AttributeSet)>
<android.provider.ContactsContract.QuickContact: void showQuickContact(android.content.Context,android.graphics.Rect,android.net.Uri,int,java.lang.String[])>
<android.renderscript.Element: android.renderscript.Element I32_2(android.renderscript.RenderScript)>
<android.hardware.Camera.FaceDetectionListener: void onFaceDetection(android.hardware.Camera.Face[],android.hardware.Camera)>
<android.view.HardwareCanvas: void setBitmap(android.graphics.Bitmap)>
<android.hardware.usb.UsbDevice: java.lang.String getDeviceName()>
<android.media.projection.MediaProjectionInfo: int describeContents()>
<android.provider.ContactsContract.CommonDataKinds.Phone: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence)>
<android.filterpacks.base.InputStreamSource: void <init>(java.lang.String)>
<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo: int getRowIndex()>
<android.app.ApplicationErrorReport: android.content.ComponentName getErrorReportReceiver(android.content.Context,java.lang.String,int)>
<android.opengl.GLES31: void glTexStorage2DMultisample(int,int,int,int,int,boolean)>
<android.media.SubtitleTrack: void updateActiveCues(boolean,long)>
<android.opengl.GLES20: void glGenFramebuffers(int,int[],int)>
<android.webkit.WebStorage: void deleteOrigin(java.lang.String)>
<android.app.AppOpsManager: int noteOpNoThrow(int,int,java.lang.String)>
<android.filterfw.core.Frame: boolean requestResize(int[])>
<android.widget.TextView: int getImeOptions()>
<android.text.method.MetaKeyKeyListener: boolean isSelectingMetaTracker(java.lang.CharSequence,java.lang.Object)>
<android.net.wifi.p2p.WifiP2pGroup: boolean removeClient(java.lang.String)>
<android.accessibilityservice.AccessibilityServiceInfo: void writeToParcel(android.os.Parcel,int)>
<android.opengl.GLES20: void glGenBuffers(int,java.nio.IntBuffer)>
<android.util.Spline.LinearSpline: java.lang.String toString()>
<android.bluetooth.BluetoothDevice: boolean cancelBondProcess()>
<android.net.ConnectivityManager: void reportInetCondition(int,int)>
<android.widget.DateTimeView: void onDetachedFromWindow()>
<android.os.Debug: void resetGlobalAllocCount()>
<android.text.HtmlToSpannedConverter: void endPrefixMapping(java.lang.String)>
<android.view.HardwareRenderer: void enableForegroundTrimming()>
<android.content.pm.PackageManager: android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentity()>
<android.widget.ZoomButtonsController: android.view.View getZoomControls()>
<android.opengl.GLES20: int glCheckFramebufferStatus(int)>
<android.util.Printer: void println(java.lang.String)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(android.util.Property,float[])>
<android.bluetooth.BluetoothHeadset: int getBatteryUsageHint(android.bluetooth.BluetoothDevice)>
<android.media.tv.ITvInputSessionWrapper: void setMain(boolean)>
<android.app.Fragment: boolean isInLayout()>
<android.app.admin.IDevicePolicyManager: android.os.UserHandle createAndInitializeUser(android.content.ComponentName,java.lang.String,java.lang.String,android.content.ComponentName,android.os.Bundle)>
<android.content.ContentResolver: boolean releaseUnstableProvider(android.content.IContentProvider)>
<android.print.IPrintManager: java.util.List getPrintJobInfos(int,int)>
<android.print.PrintAttributes.Resolution: boolean equals(java.lang.Object)>
<android.location.GpsMeasurement: long getCarrierCycles()>
<android.media.projection.MediaProjectionInfo: void <init>(java.lang.String,android.os.UserHandle)>
<android.widget.Gallery: void onShowPress(android.view.MotionEvent)>
<android.telecom.VideoProfile: int getQuality()>
<android.app.ActivityManager.StackInfo: int describeContents()>
<android.renderscript.Type: int getY()>
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: android.net.wifi.p2p.nsd.WifiP2pServiceRequest newInstance(int,java.lang.String)>
<com.android.internal.net.LegacyVpnInfo: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.util.Predicates: com.android.internal.util.Predicate and(java.lang.Iterable)>
<android.widget.Spinner: void onMeasure(int,int)>
<android.text.style.TextAppearanceSpan: int describeContents()>
<android.preference.PreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>
<android.net.http.Headers: void setExpires(java.lang.String)>
<android.os.IUpdateLock: void releaseUpdateLock(android.os.IBinder)>
<android.app.Dialog: boolean onMenuItemSelected(int,android.view.MenuItem)>
<android.opengl.GLES20: void glUniform4f(int,float,float,float,float)>
<android.view.MotionEvent: int getToolType(int)>
<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>
<android.widget.RadialTimePickerView: void setAmOrPm(int)>
<android.database.sqlite.SQLiteTransactionListener: void onCommit()>
<android.media.tv.TvInputService.Session: void <init>(android.content.Context)>
<com.android.internal.widget.EditableInputConnection: boolean commitText(java.lang.CharSequence,int)>
<android.database.DatabaseUtils.InsertHelper: int getColumnIndex(java.lang.String)>
<android.media.tv.TvInputHardwareInfo.Builder: android.media.tv.TvInputHardwareInfo.Builder type(int)>
<android.accounts.ChooseTypeAndAccountActivity: void onSaveInstanceState(android.os.Bundle)>
<android.net.NetworkStats: long getTotalBytes()>
<android.media.session.MediaController: java.lang.CharSequence getQueueTitle()>
<android.app.SearchableInfo: android.app.SearchableInfo getActivityMetaData(android.content.Context,android.content.pm.ActivityInfo,int)>
<android.media.JetPlayer: boolean setMuteFlag(int,boolean,boolean)>
<android.app.usage.ConfigurationStats: android.content.res.Configuration getConfiguration()>
<android.view.SurfaceControl: boolean clearAnimationFrameStats()>
<android.widget.CalendarView: int getShownWeekCount()>
<android.view.KeyEvent: void recycle()>
<android.filterpacks.videoproc.BackDropperFilter: void process(android.filterfw.core.FilterContext)>
<android.widget.TextView: int getTotalPaddingEnd()>
<android.view.textservice.SpellCheckerSession: void close()>
<com.android.internal.widget.AbsActionBarView: void dismissPopupMenus()>
<android.content.res.CompatibilityInfo.Translator: void translateRectInScreenToAppWinFrame(android.graphics.Rect)>
<android.view.ViewRootImpl: void onHardwarePostDraw(android.view.HardwareCanvas)>
<android.inputmethodservice.InputMethodService: void onUnbindInput()>
<android.view.MenuItem: boolean isChecked()>
<android.opengl.GLES30: void glUniform4uiv(int,int,int[],int)>
<android.hardware.hdmi.HdmiTimerRecordSources: boolean checkTimerRecordSource(int,byte[])>
<android.graphics.Paint: boolean isSubpixelText()>
<android.text.util.Rfc822Token: boolean equals(java.lang.Object)>
<android.opengl.GLES20: void glUniform3iv(int,int,int[],int)>
<android.content.IContentService: void cancelSync(android.accounts.Account,java.lang.String,android.content.ComponentName)>
<android.preference.ListPreference: void onSetInitialValue(boolean,java.lang.Object)>
<android.opengl.GLES11: void glGetBufferParameteriv(int,int,int[],int)>
<com.android.internal.app.IVoiceInteractorCallback: void deliverCompleteVoiceResult(com.android.internal.app.IVoiceInteractorRequest,android.os.Bundle)>
<android.opengl.GLES11: void glGetMaterialxv(int,int,java.nio.IntBuffer)>
<com.android.internal.app.ToolbarActionBar: void setSelectedNavigationItem(int)>
<android.webkit.CookieManager: void setCookie(java.lang.String,java.lang.String,android.webkit.ValueCallback)>
<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceResponse: java.util.List getUniqueServiceNames()>
<android.opengl.GLUtils: void texSubImage2D(int,int,int,int,android.graphics.Bitmap)>
<android.printservice.IPrintServiceClient: void onPrintersAdded(android.content.pm.ParceledListSlice)>
<android.print.PrintJobInfo: void setLabel(java.lang.String)>
<android.content.pm.PackageItemInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>
<android.widget.ProgressBar: void onDraw(android.graphics.Canvas)>
<com.android.internal.widget.ActionBarContextView: boolean isTitleOptional()>
<android.app.Notification.Builder: android.app.Notification.Builder setStyle(android.app.Notification.Style)>
<android.database.CursorWrapper: void copyStringToBuffer(int,android.database.CharArrayBuffer)>
<android.view.animation.Animation: void ensureInterpolator()>
<android.graphics.RectF: float height()>
<android.hardware.display.IDisplayManager: void pauseWifiDisplay()>
<android.net.IConnectivityManager: void unregisterNetworkFactory(android.os.Messenger)>
<com.android.internal.view.menu.MenuBuilder: android.view.SubMenu addSubMenu(java.lang.CharSequence)>
<android.media.TtmlTrack: void onData(byte[],boolean,long)>
<com.android.internal.view.menu.MenuPopupHelper: void show()>
<com.android.internal.util.AsyncChannel: void disconnected()>
<android.content.ContentResolver: java.util.List getCurrentSyncsAsUser(int)>
<android.hardware.camera2.legacy.CaptureCollector: android.util.Pair previewCaptured(long)>
<android.view.SurfaceControl: void setSize(int,int)>
<android.widget.MediaController: boolean onTrackballEvent(android.view.MotionEvent)>
<android.view.inputmethod.InputMethodSubtype: java.lang.CharSequence getDisplayName(android.content.Context,java.lang.String,android.content.pm.ApplicationInfo)>
<android.text.style.TtsSpan.ElectronicBuilder: android.text.style.TtsSpan.ElectronicBuilder setEmailArguments(java.lang.String,java.lang.String)>
<android.util.TimeUtils: void formatDuration(long,java.lang.StringBuilder)>
<com.android.internal.statusbar.IStatusBar: void setIcon(int,com.android.internal.statusbar.StatusBarIcon)>
<android.view.KeyEvent: void recycleIfNeededAfterDispatch()>
<android.print.PrintManager: void addPrintJobStateChangeListener(android.print.PrintManager.PrintJobStateChangeListener)>
<android.text.method.MetaKeyKeyListener: void startSelecting(android.view.View,android.text.Spannable)>
<android.widget.TabWidget: void setDividerDrawable(int)>
<android.filterfw.io.PatternScanner: boolean peek(java.util.regex.Pattern)>
<android.media.RemoteDisplay.Listener: void onDisplayError(int)>
<android.widget.MediaController: void setMediaPlayer(android.widget.MediaController.MediaPlayerControl)>
<android.view.GestureDetector.OnGestureListener: boolean onSingleTapUp(android.view.MotionEvent)>
<android.hardware.SerialManager: void <init>(android.content.Context,android.hardware.ISerialManager)>
<android.graphics.Paint: android.graphics.PathEffect getPathEffect()>
<com.android.internal.view.IInputMethod: void setSessionEnabled(com.android.internal.view.IInputMethodSession,boolean)>
<android.media.AudioManager: boolean isInputDevice(int)>
<android.mtp.MtpStorageInfo: long getFreeSpace()>
<com.android.internal.app.WindowDecorActionBar: void doShow(boolean)>
<android.renderscript.Double2: double elementSum()>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>
<android.media.session.ISessionController: void sendCustomAction(java.lang.String,android.os.Bundle)>
<android.opengl.GLES20: void glUniform1fv(int,int,float[],int)>
<android.app.Notification.Action.WearableExtender: void <init>(android.app.Notification.Action)>
<com.android.internal.util.FileRotator: void rewriteAll(com.android.internal.util.FileRotator.Rewriter)>
<android.text.SpannedString: java.lang.CharSequence subSequence(int,int)>
<android.view.View: boolean isHardwareAccelerated()>
<android.filterfw.geometry.Point: android.filterfw.geometry.Point plus(float,float)>
<android.app.Notification.BigTextStyle: android.app.Notification.BigTextStyle setBigContentTitle(java.lang.CharSequence)>
<android.filterfw.io.GraphReader: void addReferencesByMap(android.filterfw.core.KeyValueMap)>
<android.location.LocationProvider: void <init>(java.lang.String,com.android.internal.location.ProviderProperties)>
<android.widget.ExpandableListView: android.widget.ListAdapter getAdapter()>
<android.hardware.camera2.params.ReprocessFormatsMap: boolean equals(java.lang.Object)>
<android.telephony.ServiceState: void setSystemAndNetworkId(int,int)>
<android.service.dreams.DreamService: int getDozeScreenBrightness()>
<android.widget.TableLayout.LayoutParams: void <init>(int,int)>
<android.os.RemoteCallbackList: boolean unregister(android.os.IInterface)>
<android.media.AudioService.VolumeStreamState: int getStreamType()>
<android.service.wallpaper.WallpaperService.Engine: void onDestroy()>
<android.hardware.location.GeofenceHardwareImpl: boolean addCircularFence(int,android.hardware.location.GeofenceHardwareRequestParcelable,android.hardware.location.IGeofenceHardwareCallback)>
<com.android.internal.app.WindowDecorActionBar.ActionModeImpl: boolean onMenuItemSelected(com.android.internal.view.menu.MenuBuilder,android.view.MenuItem)>
<android.filterfw.io.GraphIOException: void <init>(java.lang.String)>
<android.widget.RadialTimePickerView: void onLayout(boolean,int,int,int,int)>
<android.webkit.JsPromptResult: java.lang.String getStringResult()>
<android.filterfw.core.GraphRunner: void stop()>
<android.media.Rating: android.media.Rating newHeartRating(boolean)>
<android.text.method.LinkMovementMethod: boolean up(android.widget.TextView,android.text.Spannable)>
<android.hardware.Sensor: float getPower()>
<android.location.LocationRequest: long getInterval()>
<android.app.Notification.Extender: android.app.Notification.Builder extend(android.app.Notification.Builder)>
<android.media.session.ParcelableVolumeInfo: void <init>(android.os.Parcel)>
<android.view.ViewGroup: void dispatchSetActivated(boolean)>
<android.content.pm.PackageManager: java.lang.CharSequence getUserBadgedLabel(java.lang.CharSequence,android.os.UserHandle)>
<android.view.inputmethod.InputMethodSubtype: boolean isAsciiCapable()>
<android.view.animation.DecelerateInterpolator: void <init>(float)>
<com.android.internal.widget.AbsActionBarView: void setSplitView(android.view.ViewGroup)>
<android.graphics.CanvasProperty: android.graphics.CanvasProperty createFloat(float)>
<com.android.internal.view.IInputMethodManager: void hideMySoftInput(android.os.IBinder,int)>
<android.content.res.ColorStateList: void writeToParcel(android.os.Parcel,int)>
<android.text.method.KeyListener: void clearMetaKeyState(android.view.View,android.text.Editable,int)>
<android.preference.MultiCheckPreference: int findIndexOfValue(java.lang.String)>
<android.app.IActivityManager: void forceStopPackage(java.lang.String,int)>
<android.opengl.GLES20: void glUniformMatrix4fv(int,int,boolean,float[],int)>
<android.hardware.camera2.utils.HashCodeHelpers: int hashCode(int[])>
<android.view.ViewTreeObserver: void removeOnDrawListener(android.view.ViewTreeObserver.OnDrawListener)>
<android.hardware.camera2.legacy.RequestThreadManager.FpsCounter: void countAndLog()>
<com.android.internal.app.ToolbarActionBar: void setShowHideAnimationEnabled(boolean)>
<android.content.Loader.OnLoadCanceledListener: void onLoadCanceled(android.content.Loader)>
<android.content.pm.VerifierDeviceIdentity: int hashCode()>
<android.hardware.hdmi.HdmiRecordSources: android.hardware.hdmi.HdmiRecordSources.DigitalServiceSource ofArib(int,android.hardware.hdmi.HdmiRecordSources.AribData)>
<android.transition.Transition: java.lang.String getName()>
<android.net.IConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>
<android.bluetooth.le.ScanFilter: int getManufacturerId()>
<android.view.inputmethod.InputMethodManager: java.util.List getEnabledInputMethodList()>
<android.service.voice.AlwaysOnHotwordDetector: boolean startRecognition(int)>
<android.view.accessibility.AccessibilityInteractionClient: void setSameThreadMessage(android.os.Message)>
<android.app.IAppTask: android.app.ActivityManager.RecentTaskInfo getTaskInfo()>
<android.appwidget.AppWidgetHost: void <init>(android.content.Context,int,android.widget.RemoteViews.OnClickHandler,android.os.Looper)>
<android.text.style.AbsoluteSizeSpan: int getSize()>
<android.webkit.PluginList: void clear()>
<android.os.StrictMode: android.os.StrictMode.ThreadPolicy getThreadPolicy()>
<android.view.InflateException: void <init>(java.lang.String,java.lang.Throwable)>
<android.text.BoringLayout: android.text.Layout.Directions getLineDirections(int)>
<com.android.internal.widget.SwipeDismissLayout: void setOnDismissedListener(com.android.internal.widget.SwipeDismissLayout.OnDismissedListener)>
<android.telecom.Call: void removeListener(android.telecom.Call.Listener)>
<android.view.inputmethod.SparseRectFArray: int describeContents()>
<android.view.WindowManager.BadTokenException: void <init>(java.lang.String)>
<android.preference.DialogPreference: void onBindDialogView(android.view.View)>
<android.renderscript.Allocation: void copyFrom(android.renderscript.BaseObj[])>
<android.graphics.NinePatch: void draw(android.graphics.Canvas,android.graphics.Rect,android.graphics.Paint)>
<android.media.MediaFocusControl: boolean registerRemoteController(android.media.IRemoteControlDisplay,int,int,android.content.ComponentName)>
<android.database.CursorWrapper: boolean requery()>
<android.app.ActivityOptions: void update(android.app.ActivityOptions)>
<android.content.pm.KeySet: int hashCode()>
<com.android.internal.util.MemInfoReader: long getZramTotalSizeKb()>
<com.android.internal.view.IInputMethodManager: java.util.List getEnabledInputMethodSubtypeList(java.lang.String,boolean)>
<android.app.ActionBar.Tab: android.app.ActionBar.Tab setCustomView(int)>
<android.database.CursorWrapper: void close()>
<android.service.fingerprint.FingerprintManagerReceiver: void onError(int)>
<android.renderscript.Script: void setVar(int,float)>
<com.google.android.gles_jni.GLImpl: void glLoadMatrixf(java.nio.FloatBuffer)>
<android.renderscript.Long4: void <init>(long)>
<android.speech.srec.WaveHeader: int read(java.io.InputStream)>
<android.os.CommonClock: void finalize()>
<android.media.AudioPort: int[] samplingRates()>
<android.text.style.IconMarginSpan: void <init>(android.graphics.Bitmap)>
<android.widget.ViewAnimator: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.media.tv.TvInputManager.SessionCallback: void onContentAllowed(android.media.tv.TvInputManager.Session)>
<android.net.http.HttpResponseCache: long size()>
<android.hardware.soundtrigger.SoundTrigger.RecognitionConfig: void <init>(boolean,boolean,android.hardware.soundtrigger.SoundTrigger.KeyphraseRecognitionExtra[],byte[])>
<android.widget.CalendarView: void <init>(android.content.Context)>
<com.android.internal.os.storage.ExternalStorageFormatter: void updateProgressDialog(int)>
<android.graphics.drawable.GradientDrawable: boolean getPadding(android.graphics.Rect)>
<android.hardware.Camera: void setDisplayOrientation(int)>
<android.content.ContextWrapper: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle)>
<android.widget.StackView: void advance()>
<android.preference.Preference: void setOnPreferenceChangeListener(android.preference.Preference.OnPreferenceChangeListener)>
<android.hardware.location.ActivityRecognitionHardware: boolean flush()>
<android.media.session.ISessionCallback: void onSkipToTrack(long)>
<android.widget.AbsSeekBar: void <init>(android.content.Context)>
<android.media.TextTrackCue: void onTime(long)>
<android.view.ViewConfiguration: int getMaximumFlingVelocity()>
<android.text.method.ArrowKeyMovementMethod: boolean right(android.widget.TextView,android.text.Spannable)>
<android.bluetooth.IBluetooth: int getBondState(android.bluetooth.BluetoothDevice)>
<android.os.BatteryStats.Uid.Proc: int countExcessivePowers()>
<android.util.AtomicFile: void <init>(java.io.File)>
<android.media.MediaRecorder: void setVideoSize(int,int)>
<android.animation.Animator.AnimatorListener: void onAnimationRepeat(android.animation.Animator)>
<android.service.fingerprint.FingerprintManagerReceiver: void onAcquired(int)>
<android.renderscript.FieldPacker: void addU32(android.renderscript.Long3)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Bundle)>
<android.webkit.HttpAuthHandler: boolean useHttpAuthUsernamePassword()>
<android.widget.DatePicker: void setMinDate(long)>
<android.app.NativeActivity: void onPause()>
<com.android.internal.os.Zygote: void appendQuotedShellArgs(java.lang.StringBuilder,java.lang.String[])>
<android.text.style.TtsSpan.MeasureBuilder: android.text.style.TtsSpan.MeasureBuilder setNumerator(long)>
<android.renderscript.ScriptIntrinsicBlend: void forEachDstAtop(android.renderscript.Allocation,android.renderscript.Allocation)>
<android.util.JsonReader: void nextNull()>
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,java.io.InputStream)>
<android.app.WallpaperManager: android.graphics.drawable.Drawable getBuiltInDrawable()>
<android.service.notification.INotificationListener: void onInterruptionFilterChanged(int)>
<android.graphics.drawable.ScaleDrawable: boolean getPadding(android.graphics.Rect)>
<com.android.internal.os.BatterySipper: void computeMobilemspp()>
<android.widget.ViewSwitcher: void setFactory(android.widget.ViewSwitcher.ViewFactory)>
<android.renderscript.ScriptIntrinsicHistogram: void forEach_Dot(android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>
<android.widget.Toolbar: boolean isOverflowMenuShowing()>
<android.content.UndoManager: void restoreInstanceState(android.os.Parcelable)>
<android.content.res.Resources: int getIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<com.android.internal.app.ToolbarActionBar: void setSplitBackgroundDrawable(android.graphics.drawable.Drawable)>
<android.opengl.GLES20: void glGetBufferParameteriv(int,int,java.nio.IntBuffer)>
<com.android.internal.util.XmlUtils: void writeValueXml(java.lang.Object,java.lang.String,org.xmlpull.v1.XmlSerializer)>
<android.app.DownloadManager: void restartDownload(long[])>
<android.view.ViewGroup: void invalidateChild(android.view.View,android.graphics.Rect)>
<android.bluetooth.BluetoothGattCallback: void onDescriptorWrite(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattDescriptor,int)>
<android.widget.ViewFlipper: void startFlipping()>
<android.view.InputDevice: android.os.Vibrator getVibrator()>
<com.android.internal.util.StateMachine: void sendMessage(int,java.lang.Object)>
<com.android.internal.os.BatteryStatsImpl: void noteStartGpsLocked(int)>
<android.media.session.MediaSession.CallbackStub: void <init>(android.media.session.MediaSession)>
<android.bluetooth.BluetoothGattCallbackWrapper: void onExecuteWrite(java.lang.String,int)>
<android.widget.ToggleButton: void onFinishInflate()>
<android.nfc.tech.NfcA: void setTimeout(int)>
<android.content.ContentResolver: android.content.IContentProvider acquireExistingProvider(android.content.Context,java.lang.String)>
<android.ddm.DdmHandleNativeHeap: void register()>
<android.widget.Toolbar: void setOnMenuItemClickListener(android.widget.Toolbar.OnMenuItemClickListener)>
<android.filterpacks.imageproc.CropRectFilter: void initProgram(android.filterfw.core.FilterContext,int)>
<android.renderscript.Int4: android.renderscript.Int4 sub(android.renderscript.Int4,int)>
<android.opengl.GLES11: void glBindBuffer(int,int)>
<com.android.internal.net.VpnConfig: int describeContents()>
<android.hardware.soundtrigger.KeyphraseEnrollmentInfo: android.content.Intent getManageKeyphraseIntent(int,java.lang.String,java.util.Locale)>
<android.app.UiAutomationConnection: void connect(android.accessibilityservice.IAccessibilityServiceClient)>
<android.webkit.WebView: float getScale()>
<android.security.SystemKeyStore: java.lang.String toHexString(byte[])>
<android.opengl.EGLObjectHandle: long getNativeHandle()>
<android.content.ClipboardManager: void setPrimaryClip(android.content.ClipData)>
<android.graphics.drawable.AnimationDrawable: void addFrame(android.graphics.drawable.Drawable,int)>
<android.view.Window: void removeFeature(int)>
<android.view.ViewGroup: boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point)>
<android.widget.ProgressBar: void setProgress(int)>
<android.text.DynamicLayout: int getNumberOfBlocks()>
<android.view.GraphicBuffer: void destroy()>
<android.view.Window: void setAllowEnterTransitionOverlap(boolean)>
<com.google.android.gles_jni.GLImpl: void glLightModelxv(int,java.nio.IntBuffer)>
<android.printservice.PrintJob: java.lang.String getTag()>
<android.database.sqlite.SQLiteTableLockedException: void <init>(java.lang.String)>
<android.text.method.ReplacementTransformationMethod: char[] getReplacement()>
<android.media.TtmlRenderingWidget: void <init>(android.content.Context)>
<android.widget.GridView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.android.internal.app.WindowDecorActionBar: void setSubtitle(int)>
<android.graphics.Region: boolean isEmpty()>
<android.hardware.input.InputManager: void tryPointerSpeed(int)>
<android.graphics.Path: void close()>
<android.net.NetworkPolicyManager: void addUidPolicy(int,int)>
<android.text.format.Time: void set(int,int,int)>
<com.android.internal.util.StateMachine: void onHalting()>
<android.renderscript.FieldPacker: android.renderscript.Short3 subShort3()>
<android.opengl.GLES20: void glAttachShader(int,int)>
<android.view.ViewConfiguration: int getLongPressTimeout()>
<android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>
<android.view.RenderNode: boolean setRight(int)>
<android.hardware.display.DisplayManagerInternal.DisplayPowerCallbacks: void onProximityNegative()>
<android.widget.StackView: boolean performAccessibilityAction(int,android.os.Bundle)>
<android.app.Activity: void setTitle(int)>
<android.widget.AbsListView: boolean hasTextFilter()>
<android.graphics.RectF: int hashCode()>
<android.renderscript.Matrix4f: void loadFrustum(float,float,float,float,float,float)>
<android.database.AbstractWindowedCursor: void clearOrCreateWindow(java.lang.String)>
<com.android.internal.util.AsyncChannel: void connect(android.content.Context,android.os.Handler,android.os.Handler)>
<android.bluetooth.BluetoothGatt: boolean discoverServices()>
<com.android.internal.telephony.ISms: void injectSmsPdu(byte[],java.lang.String,android.app.PendingIntent)>
<android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid)>
<android.graphics.Bitmap: void setWidth(int)>
<android.location.Location: void removeSpeed()>
<com.android.internal.database.SortCursor: void <init>(android.database.Cursor[],java.lang.String)>
<android.view.View: void resetResolvedTextAlignment()>
<android.content.DialogInterface.OnClickListener: void onClick(android.content.DialogInterface,int)>
<android.graphics.drawable.GradientDrawable: int getOpacity()>
<android.os.storage.StorageManager: boolean isUsbMassStorageConnected()>
<android.database.CursorWrapper: int getInt(int)>
<android.content.Loader: void <init>(android.content.Context)>
<com.android.internal.app.WindowDecorActionBar: void setSelectedNavigationItem(int)>
<android.preference.RingtonePreference: void <init>(android.content.Context,android.util.AttributeSet)>
<android.media.MediaHTTPService: android.media.IMediaHTTPConnection makeHTTPConnection()>
<com.android.internal.view.StandaloneActionMode: java.lang.CharSequence getTitle()>
<android.view.WindowCallbackWrapper: void onWindowAttributesChanged(android.view.WindowManager.LayoutParams)>
<android.bluetooth.BluetoothGattCharacteristic: android.bluetooth.BluetoothGattDescriptor getDescriptor(java.util.UUID)>
<android.graphics.drawable.InsetDrawable: boolean getPadding(android.graphics.Rect)>
<android.net.NetworkFactory: void removeNetworkRequest(android.net.NetworkRequest)>
<android.media.tv.TvInputInfo: void writeToParcel(android.os.Parcel,int)>
<android.provider.Settings.Bookmarks: java.lang.CharSequence getLabelForFolder(android.content.res.Resources,java.lang.String)>
<android.net.StaticIpConfiguration: int describeContents()>
<android.nfc.tech.NfcBarcode: void <init>(android.nfc.Tag)>
<android.media.SoundPool: void setVolume(int,float)>
<android.filterfw.core.FilterContext: void setFrameManager(android.filterfw.core.FrameManager)>
<android.opengl.GLES11Ext: void glDrawTexxvOES(java.nio.IntBuffer)>
<android.filterfw.core.FrameFormat: int readTargetString(java.lang.String)>
<android.app.IBackupAgent: void doRestoreFile(android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long,int,android.app.backup.IBackupManager)>
<android.app.job.JobInfo: boolean isRequireDeviceIdle()>
<android.content.BroadcastReceiver: android.content.BroadcastReceiver.PendingResult getPendingResult()>
<android.media.AudioTrack: int getPositionNotificationPeriod()>
<android.drm.DrmOutputStream: void write(byte[],int,int)>
<android.preference.MultiCheckPreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.service.trust.TrustAgentService: void revokeTrust()>
<android.media.session.MediaSession: void setPlaybackToLocal(android.media.AudioAttributes)>
<android.net.INetworkManagementEventObserver: void interfaceClassDataActivityChanged(java.lang.String,boolean,long)>
<android.graphics.drawable.GradientDrawable: void setSize(int,int)>
<android.net.ConnectivityManager: void registerNetworkCallback(android.net.NetworkRequest,android.net.ConnectivityManager.NetworkCallback)>
<android.widget.ResourceCursorTreeAdapter: void <init>(android.content.Context,android.database.Cursor,int,int)>
<android.renderscript.Mesh.Builder: android.renderscript.Mesh.Builder addIndexSetType(android.renderscript.Mesh.Primitive)>
<android.media.tv.TvInputHardwareInfo: int getDeviceId()>
<com.android.internal.os.BatteryStatsImpl.OverflowArrayMap: java.lang.Object stopObject(java.lang.String)>
<android.net.INetworkPolicyManager: boolean isNetworkMetered(android.net.NetworkState)>
<android.app.Instrumentation: boolean invokeContextMenuAction(android.app.Activity,int,int)>
<android.print.PrintAttributes.MediaSize: int hashCode()>
<android.text.DynamicLayout: int getBottomPadding()>
<android.widget.AdapterViewFlipper: void showNext()>
<android.speech.tts.TextToSpeech: int speak(java.lang.CharSequence,int,android.os.Bundle,java.lang.String)>
<android.view.ViewGroup: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>
<android.renderscript.RSSurfaceView: android.renderscript.RenderScriptGL createRenderScriptGL(android.renderscript.RenderScriptGL.SurfaceConfig)>
<android.net.wifi.p2p.WifiP2pDevice: boolean wpsPbcSupported()>
<android.animation.Animator: void removeListener(android.animation.Animator.AnimatorListener)>
<android.media.session.MediaSessionManager: void setRemoteVolumeController(android.media.IRemoteVolumeController)>
<android.telephony.CellSignalStrength: void setDefaultValues()>
<com.android.internal.view.IInputConnectionWrapper: void <init>(android.os.Looper,android.view.inputmethod.InputConnection)>
<android.widget.GridView: int computeVerticalScrollExtent()>
<android.text.style.SuggestionSpan: void setFlags(int)>
<android.content.pm.PackageManager: java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo)>
<android.hardware.camera2.impl.CallbackProxies.DeviceCaptureCallbackProxy: void onCaptureProgressed(android.hardware.camera2.CameraDevice,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureResult)>
<android.telephony.PhoneStateListener: void onOtaspChanged(int)>
<android.util.LongArray: long get(int)>
<android.content.RestrictionEntry: int describeContents()>
<android.renderscript.Double2: void setValues(double,double)>
<android.bluetooth.le.ScanRecord: int getAdvertiseFlags()>
<android.service.notification.Condition: int describeContents()>
<android.view.View: boolean includeForAccessibility()>
<android.provider.ContactsContract: boolean isProfileId(long)>
<android.graphics.pdf.PdfDocument.PageInfo: int getPageHeight()>
<android.widget.ActivityChooserView: void setDefaultActionButtonContentDescription(int)>
<android.net.Uri: java.lang.String getEncodedAuthority()>
<android.hardware.hdmi.HdmiPlaybackClient: void oneTouchPlay(android.hardware.hdmi.HdmiPlaybackClient.OneTouchPlayCallback)>
<android.opengl.GLES11Ext: void glRotatexOES(int,int,int,int)>
<android.os.StrictMode: boolean vmClosableObjectLeaksEnabled()>
<android.nfc.tech.IsoDep: byte[] getHiLayerResponse()>
<android.os.INetworkManagementService: void setInterfaceQuota(java.lang.String,long)>
<android.hardware.usb.UsbRequest: java.lang.Object getClientData()>
<android.media.MediaRouter.RouteInfo: android.media.MediaRouter.RouteGroup getGroup()>
<android.os.Parcel: void readException()>
<android.net.wifi.WpsInfo: void <init>(android.net.wifi.WpsInfo)>
<android.net.NetworkTemplate: android.net.NetworkTemplate buildTemplateMobileWildcard()>
<android.widget.RemoteViews: int describeContents()>
<android.os.Message: void writeToParcel(android.os.Parcel,int)>
<android.print.IPrintManager: void destroyPrinterDiscoverySession(android.print.IPrinterDiscoveryObserver,int)>
<android.hardware.hdmi.HdmiDeviceInfo: boolean equals(java.lang.Object)>
<android.view.InputQueue: void sendInputEvent(android.view.InputEvent,java.lang.Object,boolean,android.view.InputQueue.FinishedInputEventCallback)>
<android.net.BaseNetworkStateTracker: void setDependencyMet(boolean)>
<android.opengl.EGL14: boolean eglDestroyContext(android.opengl.EGLDisplay,android.opengl.EGLContext)>
<android.view.Window: void setChildDrawable(int,android.graphics.drawable.Drawable)>
<android.animation.Animator: void setStartDelay(long)>
<android.graphics.drawable.Drawable: android.graphics.PorterDuff.Mode parseTintMode(int,android.graphics.PorterDuff.Mode)>
<android.preference.Preference: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.TabWidget: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>
<android.view.DragEvent: int getAction()>
<android.preference.SwitchPreference: java.lang.CharSequence getSwitchTextOn()>
<android.opengl.GLES31: void glProgramUniform4iv(int,int,int,java.nio.IntBuffer)>
<android.widget.Toolbar: void setLogoDescription(int)>
<android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setBackoffCriteria(long,int)>
<android.net.NetworkPolicyManager: void dumpRules(java.io.PrintWriter,int)>
<android.widget.ScrollBarDrawable: boolean getAlwaysDrawHorizontalTrack()>
<com.android.internal.widget.ToolbarWidgetWrapper: void setNavigationContentDescription(int)>
<android.renderscript.Float2: void <init>(float,float)>
<android.net.Uri.Builder: java.lang.String toString()>
<android.provider.Contacts.Organizations: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence)>
<android.media.session.ISessionController: void next()>
<android.app.StatusBarManager: void expandSettingsPanel()>
<android.net.RouteInfo: java.lang.String toString()>
<android.graphics.drawable.AnimatedVectorDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>
<android.view.View: void setClipToOutline(boolean)>
<android.widget.ActionMenuView: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.content.PeriodicSync: int describeContents()>
<android.accounts.AuthenticatorDescription: int hashCode()>
<android.view.View: boolean resolveRtlPropertiesIfNeeded()>
<android.hardware.camera2.params.LensShadingMap: int getRowCount()>
<android.widget.CheckedTextView: android.graphics.drawable.Drawable getCheckMarkDrawable()>
<com.google.android.util.AbstractMessageParser.Photo: java.lang.String getPhotoURL(java.lang.String,java.lang.String,java.lang.String)>
<android.net.RouteInfo: boolean equals(java.lang.Object)>
<android.bluetooth.BluetoothDevice: boolean cancelPairingUserInput()>
<android.widget.AbsListView: void setOverScrollEffectPadding(int,int)>
<android.net.VpnService: boolean removeAddress(java.net.InetAddress,int)>
<android.accounts.Account: void <init>(java.lang.String,java.lang.String)>
<android.os.storage.StorageManager: void enableUsbMassStorage()>
<android.renderscript.Long3: void sub(android.renderscript.Long3)>
<android.net.LinkProperties: void clear()>
<android.media.projection.MediaProjectionManager: void removeCallback(android.media.projection.MediaProjectionManager.Callback)>
<android.bluetooth.IBluetoothStateChangeCallback: void onBluetoothStateChange(boolean)>
<com.android.internal.view.menu.MenuBuilder.Callback: void onMenuModeChange(com.android.internal.view.menu.MenuBuilder)>
<android.provider.Downloads: void removeAllDownloadsByPackage(android.content.Context,java.lang.String,java.lang.String)>
<android.view.inputmethod.CursorAnchorInfo: int getComposingTextStart()>
<android.media.MediaFocusControl: int getCurrentAudioFocus()>
<android.app.ActionBar.LayoutParams: void <init>(int,int,int)>
<android.database.AbstractCursor: void setNotificationUri(android.content.ContentResolver,android.net.Uri,int)>
<android.os.Looper: java.lang.Thread getThread()>
<android.widget.Gallery: void setCallbackDuringFling(boolean)>
<android.widget.NumberPicker: void computeScroll()>
<android.graphics.drawable.AnimatedRotateDrawable: void onBoundsChange(android.graphics.Rect)>
<android.view.ViewRootImpl: void dispatchDoneAnimating()>
<android.database.sqlite.SQLiteDatabase: void disableWriteAheadLogging()>
<android.telephony.ServiceState: void setDataRegState(int)>
<android.graphics.Canvas: void drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint)>
<android.hardware.camera2.marshal.impl.MarshalQueryableMeteringRectangle: android.hardware.camera2.marshal.Marshaler createMarshaler(android.hardware.camera2.utils.TypeReference,int)>
<android.bluetooth.IBluetoothGattCallback: void onMultiAdvertiseCallback(int,boolean,android.bluetooth.le.AdvertiseSettings)>
<android.filterpacks.base.ObjectSource: void process(android.filterfw.core.FilterContext)>
<com.android.internal.widget.ToolbarWidgetWrapper: int getDropdownItemCount()>
<com.android.internal.telecom.IConnectionService: void onPostDialContinue(java.lang.String,boolean)>
<android.renderscript.Byte3: byte dotProduct(android.renderscript.Byte3,android.renderscript.Byte3)>
<android.telecom.Conference: void setCapabilities(int)>
<android.media.Rating: android.media.Rating newUnratedRating(int)>
<android.opengl.GLES31Ext: void glBlendEquationSeparateiEXT(int,int,int)>
<android.widget.GridLayout.LayoutParams: int hashCode()>
<android.widget.NumberPicker: void setOnLongPressUpdateInterval(long)>
<com.android.internal.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)>
<android.os.Process: int killProcessGroup(int,int)>
<android.media.audiofx.Virtualizer.OnParameterChangeListener: void onParameterChange(android.media.audiofx.Virtualizer,int,int,short)>
<com.android.internal.app.WindowDecorActionBar.ActionModeImpl: void setTitle(java.lang.CharSequence)>
<android.bluetooth.BluetoothPbap: boolean isConnected(android.bluetooth.BluetoothDevice)>
<android.hardware.camera2.impl.CameraDeviceImpl: void stopRepeating()>
<android.widget.PopupMenu: boolean onOpenSubMenu(com.android.internal.view.menu.MenuBuilder)>
<android.hardware.camera2.params.MeteringRectangle: int getY()>
<android.service.notification.NotificationListenerService: void setOnNotificationPostedTrim(int)>
<android.app.SearchableInfo: int describeContents()>
<android.view.accessibility.AccessibilityNodeInfo: int hashCode()>
<android.widget.ListPopupWindow: boolean onKeyUp(int,android.view.KeyEvent)>
<android.graphics.Color: int green(int)>
<android.os.SystemVibrator: void vibrate(int,java.lang.String,long,android.media.AudioAttributes)>
<android.text.util.Rfc822Tokenizer: java.lang.CharSequence terminateToken(java.lang.CharSequence)>
<android.preference.PreferenceActivity: void onHeaderClick(android.preference.PreferenceActivity.Header,int)>
<android.hardware.Camera: android.hardware.Camera.Parameters getEmptyParameters()>
<android.app.WallpaperInfo: android.content.ComponentName getComponent()>
<android.graphics.drawable.NinePatchDrawable: android.graphics.Paint getPaint()>
<android.os.ParcelableParcel: int describeContents()>
<android.media.Rating: android.media.Rating newStarRating(int,float)>
<com.android.internal.content.NativeLibraryHelper: long sumNativeBinariesWithOverride(com.android.internal.content.NativeLibraryHelper.Handle,java.lang.String)>
<android.renderscript.Float2: float dotProduct(android.renderscript.Float2)>
<android.nfc.INfcAdapter: void pausePolling(int)>
<android.widget.TextView: java.lang.CharSequence getImeActionLabel()>
<android.media.MediaFocusControl: void onSendFinished(android.app.PendingIntent,android.content.Intent,int,java.lang.String,android.os.Bundle)>
<com.android.server.net.BaseNetworkObserver: void interfaceStatusChanged(java.lang.String,boolean)>
<com.android.internal.view.menu.ActionMenuItem: int getGroupId()>
<android.media.MediaRecorder: void setMaxDuration(int)>
<android.widget.TabHost.TabSpec: java.lang.String getTag()>
<android.widget.FrameLayout.LayoutParams: void <init>(android.widget.FrameLayout.LayoutParams)>
<android.util.Range: java.lang.Comparable clamp(java.lang.Comparable)>
<com.android.internal.view.menu.ListMenuItemView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.widget.TextView: void clearComposingText()>
<android.net.VpnService.Builder: android.net.VpnService.Builder addAddress(java.net.InetAddress,int)>
<android.media.JetPlayer: boolean play()>
<android.renderscript.Element: android.renderscript.Element F32_2(android.renderscript.RenderScript)>
<android.text.format.DateFormat: char[] getDateFormatOrder(android.content.Context)>
<android.filterpacks.base.RetargetFilter: void setupPorts()>
<android.app.IActivityManager: boolean isBackgroundVisibleBehind(android.os.IBinder)>
<android.hardware.camera2.params.ColorSpaceTransform: void copyElements(int[],int)>
<android.os.Parcel: android.os.IBinder[] createBinderArray()>
<android.os.storage.IMountService: void runMaintenance()>
<android.media.AudioRecord.OnRecordPositionUpdateListener: void onMarkerReached(android.media.AudioRecord)>
<android.filterfw.core.SyncRunner: int determinePostRunState()>
<com.android.internal.os.BatteryStatsImpl: void commitPendingDataToDisk()>
<android.graphics.Canvas: boolean clipPath(android.graphics.Path)>
<android.app.Instrumentation.ActivityResult: android.content.Intent getResultData()>
<android.content.Intent: java.io.Serializable getSerializableExtra(java.lang.String)>
<android.media.IAudioService: void setRingtonePlayer(android.media.IRingtonePlayer)>
<android.nfc.NfcAdapter.ReaderCallback: void onTagDiscovered(android.nfc.Tag)>
<android.media.MediaDescription: java.lang.CharSequence getDescription()>
<android.filterpacks.imageproc.FisheyeFilter: void process(android.filterfw.core.FilterContext)>
<android.telecom.Connection: void setRingbackRequested(boolean)>
<com.google.android.gles_jni.GLImpl: void glLightf(int,int,float)>
<android.graphics.drawable.RotateDrawable: int getAlpha()>
<android.opengl.GLES31: void glVertexBindingDivisor(int,int)>
<android.media.session.MediaSessionManager: void dispatchAdjustVolume(int,int,int)>
<android.widget.SimpleCursorTreeAdapter: void <init>(android.content.Context,android.database.Cursor,int,int,java.lang.String[],int[],int,int,java.lang.String[],int[])>
<android.view.MotionEvent: float getHistoricalY(int,int)>
<android.opengl.GLES31: void glProgramUniform1i(int,int,int)>
<android.inputmethodservice.Keyboard: void <init>(android.content.Context,int,int)>
<android.app.Dialog: void setContentView(int)>
<android.hardware.soundtrigger.SoundTrigger.KeyphraseSoundModel: int describeContents()>
<android.renderscript.FieldPacker: android.renderscript.Short4 subShort4()>
<android.content.Context: android.content.Context createDisplayContext(android.view.Display)>
<com.android.internal.os.BatteryStatsImpl: java.util.Map getKernelWakelockStats()>
<android.os.FileBridge: void forceClose()>
<android.location.Location: void distanceBetween(double,double,double,double,float[])>
<android.view.inputmethod.InputConnection: boolean setComposingText(java.lang.CharSequence,int)>
<android.telephony.cdma.CdmaCellLocation: int hashCode()>
<android.renderscript.Float2: android.renderscript.Float2 div(android.renderscript.Float2,float)>
<android.app.admin.DevicePolicyManager: void setAccountManagementDisabled(android.content.ComponentName,java.lang.String,boolean)>
<android.widget.Toolbar: int getContentInsetRight()>
<android.bluetooth.BluetoothHeadsetClientCall: boolean isMultiParty()>
<android.telephony.TelephonyManager: int getNetworkType(long)>
<android.media.MediaDrm.ProvisionRequest: java.lang.String getDefaultUrl()>
<android.os.WorkSource: void set(int)>
<com.android.internal.view.menu.MenuItemImpl: char getAlphabeticShortcut()>
<com.android.ims.internal.IImsCallSessionListener: void callSessionUpdateFailed(com.android.ims.internal.IImsCallSession,com.android.ims.ImsReasonInfo)>
<android.os.storage.IMountService: void finishMediaUpdate()>
<android.content.SharedPreferences.Editor: boolean commit()>
<android.inputmethodservice.ExtractEditText: void viewClicked(android.view.inputmethod.InputMethodManager)>
<android.media.RemoteController: boolean setArtworkConfiguration(boolean,int,int)>
<android.text.ClipboardManager: void setText(java.lang.CharSequence)>
<android.media.TextTrackCueSpan: boolean equals(java.lang.Object)>
<android.service.trust.TrustAgentService: boolean onSetTrustAgentFeaturesEnabled(android.os.Bundle)>
<android.database.ContentObserver: boolean deliverSelfNotifications()>
<android.view.KeyEvent: int getUnicodeChar()>
<android.hardware.ConsumerIrManager.CarrierFrequencyRange: int getMaxFrequency()>
<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getLine1AlphaTagForSubscriber(long)>
<android.view.ViewTreeObserver.InternalInsetsInfo: int hashCode()>
<android.renderscript.Short3: void mul(short)>
<android.widget.EdgeEffect: void onRelease()>
<android.net.ConnectivityManager: void setBackgroundDataSetting(boolean)>
<android.database.AbstractCursor: boolean moveToLast()>
<com.android.internal.location.GpsNetInitiatedHandler: void handleNiNotification(com.android.internal.location.GpsNetInitiatedHandler.GpsNiNotification)>
<android.telephony.CellSignalStrengthCdma: void setCdmaDbm(int)>
<android.net.RssiCurve: int hashCode()>
<android.opengl.GLES11: void glClipPlanef(int,float[],int)>
<android.net.RouteInfo: boolean isDefaultRoute()>
<android.graphics.drawable.PaintDrawable: void setCornerRadius(float)>
<android.telephony.CellInfo: void writeToParcel(android.os.Parcel,int)>
<android.media.tv.ITvInputManager: void dispatchSurfaceChanged(android.os.IBinder,int,int,int,int)>
<com.android.internal.widget.ActionBarOverlayLayout: void saveToolbarHierarchyState(android.util.SparseArray)>
<android.widget.TabHost: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.database.CursorToBulkCursorAdaptor: void binderDied()>
<android.net.LinkProperties: java.lang.String getInterfaceName()>
<android.view.inputmethod.InputConnectionWrapper: boolean setComposingText(java.lang.CharSequence,int)>
<android.media.tv.ITvInputManager: java.util.List getAvailableTvStreamConfigList(java.lang.String,int)>
<android.media.AudioManager: boolean isMasterMute()>
<android.net.wifi.WifiManager: java.lang.String getWpsNfcConfigurationToken(int)>
<android.media.tv.ITvInputManager: void createSession(android.media.tv.ITvInputClient,java.lang.String,int,int)>
<android.os.ISchedulingPolicyService: int requestPriority(int,int,int)>
<android.app.ActivityView: void startActivity(android.content.Intent)>
<android.content.pm.LauncherActivityInfo: android.os.UserHandle getUser()>
<android.provider.ContactsContract.Groups: android.content.EntityIterator newEntityIterator(android.database.Cursor)>
<android.os.INetworkManagementService: void registerObserver(android.net.INetworkManagementEventObserver)>
<android.hardware.camera2.utils.LongParcelable: void setNumber(long)>
<android.widget.SeekBar: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.SearchView: void onWindowFocusChanged(boolean)>
<android.widget.TextView: void resetErrorChangedFlag()>
<android.hardware.camera2.legacy.BurstHolder: boolean isRepeating()>
<android.view.View: void setDrawingCacheBackgroundColor(int)>
<com.android.internal.statusbar.IStatusBar: void removeIcon(int)>
<android.os.IUserManager: boolean removeUser(int)>
<android.widget.ProgressBar: void setProgressBackgroundTintList(android.content.res.ColorStateList)>
<android.media.tv.TvContract: boolean isChannelUriForTunerInput(android.net.Uri)>
<android.media.tv.TvInputService.Session: android.view.View onCreateOverlayView()>
<android.net.Credentials: int getGid()>
<com.android.internal.view.animation.NativeInterpolatorFactoryHelper: long createAnticipateOvershootInterpolator(float)>
<android.bluetooth.IBluetoothInputDevice: boolean setPriority(android.bluetooth.BluetoothDevice,int)>
<android.widget.Chronometer: void <init>(android.content.Context,android.util.AttributeSet)>
<android.os.Debug: void stopMethodTracing()>
<android.app.ActivityView: boolean onGenericMotionEvent(android.view.MotionEvent)>
<android.webkit.WebSettings: boolean getJavaScriptEnabled()>
<com.android.internal.os.BatteryStatsImpl: void noteWifiMulticastEnabledFromSourceLocked(android.os.WorkSource)>
<android.app.backup.BackupDataOutput: int writeEntityData(byte[],int)>
<com.android.internal.widget.SlidingTab: void setOnTriggerListener(com.android.internal.widget.SlidingTab.OnTriggerListener)>
<android.os.UserHandle: int getSharedAppGid(int)>
<com.android.internal.os.BatteryStatsImpl: long computeChargeTimeRemaining(long)>
<android.renderscript.Float2: android.renderscript.Float2 div(android.renderscript.Float2,android.renderscript.Float2)>
<android.text.method.MetaKeyKeyListener: boolean isMetaTracker(java.lang.CharSequence,java.lang.Object)>
<android.provider.DocumentsContract: android.net.Uri renameDocument(android.content.ContentProviderClient,android.net.Uri,java.lang.String)>
<android.transition.TransitionSet: android.transition.TransitionSet removeTarget(java.lang.Class)>
<android.app.Activity: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>
<android.opengl.GLES30: void glDrawBuffers(int,int[],int)>
<android.media.MediaRecorder: void setLocation(float,float)>
<android.hardware.camera2.legacy.LegacyCameraDevice: void close()>
<android.view.InputEvent: android.view.InputEvent copy()>
<android.telephony.TelephonyManager: java.lang.String getSimOperator()>
<android.widget.AdapterView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.graphics.RegionIterator: void <init>(android.graphics.Region)>
<com.android.internal.widget.SlidingTab: void reset(boolean)>
<android.graphics.Interpolator: void setKeyFrame(int,int,float[])>
<android.animation.ValueAnimator: long getStartDelay()>
<android.graphics.Paint: void setDither(boolean)>
<android.os.Trace: void traceCounter(long,java.lang.String,int)>
<android.graphics.drawable.GradientDrawable: void setStroke(int,android.content.res.ColorStateList)>
<android.view.View: long getDrawingTime()>
<android.os.WorkSource: boolean equals(java.lang.Object)>
<android.animation.ObjectAnimator: void setProperty(android.util.Property)>
<android.telephony.ServiceState: int getVoiceNetworkType()>
<com.android.ims.internal.IImsVideoCallCallback: void changeCallDataUsage(int)>
<android.renderscript.Allocation: void copy2DRangeFrom(int,int,int,int,float[])>
<android.media.tv.TvView: void sendAppPrivateCommand(java.lang.String,android.os.Bundle)>
<android.media.MediaRouter.Callback: void onRouteSelected(android.media.MediaRouter,int,android.media.MediaRouter.RouteInfo)>
<android.database.CursorWrapper: boolean isFirst()>
<android.net.Uri: int compareTo(android.net.Uri)>
<android.widget.ViewAnimator: void setOutAnimation(android.view.animation.Animation)>
<android.net.wifi.WifiActivityEnergyInfo: int getStackState()>
<android.net.ConnectivityManager: android.net.ProxyInfo getGlobalProxy()>
<com.android.internal.os.BatteryStatsImpl: void notePhoneOffLocked()>
<android.service.textservice.SpellCheckerService: android.os.IBinder onBind(android.content.Intent)>
<android.renderscript.Int4: void sub(android.renderscript.Int4)>
<com.android.internal.util.AsyncChannel: void replyToMessage(android.os.Message,android.os.Message)>
<android.view.HardwareRenderer: void setupDiskCache(java.io.File)>
<android.view.WindowManagerPolicy: int getAboveUniverseLayer()>
<android.text.Annotation: void writeToParcel(android.os.Parcel,int)>
<android.transition.Transition.TransitionListener: void onTransitionCancel(android.transition.Transition)>
<android.bluetooth.BluetoothInputDevice: boolean setProtocolMode(android.bluetooth.BluetoothDevice,int)>
<android.net.VpnService.Builder: android.net.VpnService.Builder addAddress(java.lang.String,int)>
<android.os.Parcel: void writeArray(java.lang.Object[])>
<android.content.UriPermission: boolean isWritePermission()>
<com.android.internal.view.StandaloneActionMode: void finish()>
<android.graphics.drawable.VectorDrawable: void setTintMode(android.graphics.PorterDuff.Mode)>
<android.opengl.GLES20: java.lang.String glGetActiveAttrib(int,int,java.nio.IntBuffer,java.nio.IntBuffer)>
<com.android.internal.os.BatteryStatsImpl.Uid: void noteActivityPausedLocked(long)>
<com.google.android.gles_jni.GLImpl: void glDeleteFramebuffersOES(int,int[],int)>
<android.content.ComponentCallbacks: void onLowMemory()>
<android.widget.SearchView: java.lang.CharSequence getQueryHint()>
<android.app.DownloadManager: long getActiveNetworkWarningBytes(android.content.Context)>
<android.graphics.Canvas: void drawPoints(float[],android.graphics.Paint)>
<android.content.Context: java.lang.Object getSystemService(java.lang.String)>
<android.preference.ListPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.bluetooth.IBluetoothManager: void registerStateChangeCallback(android.bluetooth.IBluetoothStateChangeCallback)>
<android.app.Dialog: boolean dispatchTouchEvent(android.view.MotionEvent)>
<android.media.AudioService.VolumeController: void postMasterMuteChanged(int)>
<android.location.GpsMeasurementsEvent: int describeContents()>
<android.animation.Animator.AnimatorListener: void onAnimationStart(android.animation.Animator)>
<android.filterfw.core.ProgramPort: void transfer(android.filterfw.core.FilterContext)>
<android.widget.ActionMenuPresenter: void setWidthLimit(int,boolean)>
<android.content.pm.RegisteredServicesCache: void invalidateCache(int)>
<android.content.Intent: void saveToXml(org.xmlpull.v1.XmlSerializer)>
<android.webkit.WebViewProvider: void flingScroll(int,int)>
<android.media.AudioService: void forceRemoteSubmixFullVolume(boolean,android.os.IBinder)>
<android.widget.TextView: int getRightPaddingOffset()>
<android.widget.ListPopupWindow: void setListSelector(android.graphics.drawable.Drawable)>
<android.content.IContentService: void registerContentObserver(android.net.Uri,boolean,android.database.IContentObserver,int)>
<android.net.wifi.WifiManager: void cancelWps(android.net.wifi.WifiManager.WpsCallback)>
<android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData.Builder addServiceData(android.os.ParcelUuid,byte[])>
<android.content.UndoManager: boolean uncommitState(int,android.content.UndoOwner)>
<android.widget.OverScroller: void <init>(android.content.Context,android.view.animation.Interpolator,boolean)>
<android.preference.SeekBarPreference: void onBindView(android.view.View)>
<android.print.PrintAttributes.Margins: boolean equals(java.lang.Object)>
<android.app.IApplicationThread: void scheduleBackgroundVisibleBehindChanged(android.os.IBinder,boolean)>
<android.print.PrintAttributes: void setColorMode(int)>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder setSubtypeMode(java.lang.String)>
<android.view.MotionEvent: int getSource()>
<android.opengl.GLES30: void glClearBufferiv(int,int,java.nio.IntBuffer)>
<android.view.WindowInsets: boolean hasWindowDecorInsets()>
<android.content.IntentFilter: int describeContents()>
<android.content.ContentResolver: void cancelSync(android.content.SyncRequest)>
<android.content.pm.ServiceInfo: void writeToParcel(android.os.Parcel,int)>
<android.view.textservice.SpellCheckerSubtype: java.lang.CharSequence getDisplayName(android.content.Context,java.lang.String,android.content.pm.ApplicationInfo)>
<android.printservice.PrintJob: boolean setTag(java.lang.String)>
<android.database.AbstractCursor: android.database.CursorWindow getWindow()>
<android.content.pm.ParceledListSlice: void <init>(java.util.List)>
<android.net.MobileDataStateTracker: android.net.LinkQualityInfo getLinkQualityInfo()>
<android.content.ClipboardManager: void removePrimaryClipChangedListener(android.content.ClipboardManager.OnPrimaryClipChangedListener)>
<android.text.Layout: float getSecondaryHorizontal(int)>
<android.app.Presentation: void <init>(android.content.Context,android.view.Display)>
<com.android.internal.app.ProcessStats: void resetSafely()>
<android.media.tv.TvInputManager: java.util.List getBlockedRatings()>
<android.bluetooth.BluetoothGatt: boolean beginReliableWrite()>
<android.widget.DatePicker: int getMonth()>
<android.media.tv.ITvInputSession: void dispatchSurfaceChanged(int,int,int)>
<android.net.wifi.p2p.WifiP2pManager: void discoverPeers(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ActionListener)>
<android.view.inputmethod.BaseInputConnection: void <init>(android.view.View,boolean)>
<com.android.internal.view.menu.ActionMenu: android.view.SubMenu addSubMenu(java.lang.CharSequence)>
<android.net.wifi.p2p.WifiP2pWfdInfo: boolean isCoupledSinkSupportedAtSink()>
<android.graphics.drawable.BitmapDrawable: int getGravity()>
<android.app.ApplicationThreadProxy: void clearDnsCache()>
<android.content.IIntentSender: int send(int,android.content.Intent,java.lang.String,android.content.IIntentReceiver,java.lang.String)>
<com.android.internal.util.XmlUtils: void writeSetXml(java.util.Set,java.lang.String,org.xmlpull.v1.XmlSerializer)>
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothActivityEnergyInfo getControllerActivityEnergyInfo(int)>
<android.media.ToneGenerator: void <init>(int,int)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setIcon(android.graphics.drawable.Drawable)>
<com.android.internal.app.ProcessStats.ProcessState: void reportExcessiveWake(android.util.ArrayMap)>
<android.media.JetPlayer: boolean triggerClip(int)>
<com.google.android.util.AbstractMessageParser.Photo: java.lang.String getUser()>
<android.media.session.MediaSessionLegacyHelper: void removeMediaButtonListener(android.app.PendingIntent)>
<android.hardware.camera2.params.StreamConfigurationMap: android.util.Size[] getOutputSizes(java.lang.Class)>
<android.content.ISyncAdapter: void cancelSync(android.content.ISyncContext)>
<android.renderscript.Element: int getSubElementCount()>
<android.graphics.Color: void RGBToHSV(int,int,int,float[])>
<android.view.View: boolean dispatchUnhandledMove(android.view.View,int)>
<android.net.wifi.WifiManager: boolean startWifi()>
<android.renderscript.FieldPacker: android.renderscript.Double4 subDouble4()>
<com.google.android.gles_jni.GLImpl: void glMaterialfv(int,int,float[],int)>
<android.preference.PreferenceManager: void setSharedPreferencesMode(int)>
<android.hardware.Camera.Parameters: java.lang.String getFlashMode()>
<android.content.pm.KeySet: void writeToParcel(android.os.Parcel,int)>
<android.nfc.NdefRecord: byte[] getType()>
<android.widget.ExpandableListAdapter: android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup)>
<android.net.wifi.p2p.WifiP2pWfdInfo: void setWfdEnabled(boolean)>
<android.telecom.TelecomManager: void <init>(android.content.Context)>
<android.media.effect.effects.RotateEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>
<android.opengl.GLES10: void glShadeModel(int)>
<android.content.pm.IPackageInstallerSession: java.lang.String[] getNames()>
<android.bluetooth.le.ResultStorageDescriptor: void writeToParcel(android.os.Parcel,int)>
<android.app.Activity: void startActivityForResult(android.content.Intent,int)>
<android.app.Notification.Action.Extender: android.app.Notification.Action.Builder extend(android.app.Notification.Action.Builder)>
<android.widget.AbsListView: void setFriction(float)>
<android.telecom.TelecomManager: void unregisterPhoneAccount(android.telecom.PhoneAccountHandle)>
<android.media.audiofx.Virtualizer: void setParameterListener(android.media.audiofx.Virtualizer.OnParameterChangeListener)>
<android.net.RouteInfo: void writeToParcel(android.os.Parcel,int)>
<android.content.pm.ApplicationInfo: void writeToParcel(android.os.Parcel,int)>
<android.app.ActivityManagerProxy: void signalPersistentProcesses(int)>
<android.telephony.PhoneStateListener: void onPreciseDataConnectionStateChanged(android.telephony.PreciseDataConnectionState)>
<android.app.FragmentTransaction: android.app.FragmentTransaction setSharedElements(android.util.Pair[])>
<android.telephony.TelephonyManager: int getCallState(long)>
<com.android.internal.os.BatteryStatsImpl: void noteStopWakeLocked(int,int,java.lang.String,java.lang.String,int,long,long)>
<android.os.UserManager: java.util.List getUsers()>
<android.app.Dialog: boolean onKeyMultiple(int,int,android.view.KeyEvent)>
<android.view.ViewPropertyAnimator: android.animation.TimeInterpolator getInterpolator()>
<android.media.MediaDescription: int describeContents()>
<android.hardware.camera2.CaptureResult.Key: java.lang.String getName()>
<android.content.ContentUris: long parseId(android.net.Uri)>
<android.app.VoiceInteractor.ConfirmationRequest: void <init>(java.lang.CharSequence,android.os.Bundle)>
<android.inputmethodservice.Keyboard: void <init>(android.content.Context,int)>
<android.content.pm.PackageManager: void clearPackagePreferredActivities(java.lang.String)>
<android.printservice.PrintJob: int getAdvancedIntOption(java.lang.String)>
<android.opengl.GLES20: void glBlendEquation(int)>
<android.widget.TextView: boolean onKeyMultiple(int,int,android.view.KeyEvent)>
<android.telephony.TelephonyManager: java.lang.String getLine1AlphaTagForSubscriber(long)>
<android.app.ActivityManagerProxy: android.content.IIntentSender getIntentSender(int,java.lang.String,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle,int)>
<com.android.internal.util.TypedProperties: double getDouble(java.lang.String)>
<android.media.audiofx.AudioEffect: int setParameter(int[],byte[])>
<android.webkit.WebView: int computeHorizontalScrollOffset()>
<android.text.method.BaseMovementMethod: boolean onTrackballEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>
<android.opengl.GLES11: void glPointSizePointerOES(int,int,java.nio.Buffer)>
<android.preference.MultiSelectListPreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.opengl.ETC1Util: boolean isETC1Supported()>
<android.view.WindowId: boolean equals(java.lang.Object)>
<android.app.Instrumentation: android.app.Application newApplication(java.lang.Class,android.content.Context)>
<android.opengl.GLES11Ext: void glTexEnvxvOES(int,int,int[],int)>
<android.bluetooth.IBluetoothInputDevice: boolean getReport(android.bluetooth.BluetoothDevice,byte,byte,int)>
<android.renderscript.Int3: void setAt(int,int)>
<android.widget.Switch: int getCompoundPaddingLeft()>
<android.inputmethodservice.InputMethodService.InputMethodSessionImpl: void displayCompletions(android.view.inputmethod.CompletionInfo[])>
<android.graphics.LinearGradient: void <init>(float,float,float,float,int[],float[],android.graphics.Shader.TileMode)>
<android.webkit.WebChromeClient: void onShowCustomView(android.view.View,android.webkit.WebChromeClient.CustomViewCallback)>
<android.filterfw.core.ShaderProgram: void setSourceRect(float,float,float,float)>
<android.net.ProxyInfo: int getPort()>
<android.hardware.location.ActivityChangedEvent: int describeContents()>
<android.filterfw.geometry.Rectangle: android.filterfw.geometry.Rectangle scaled(float,float)>
<android.graphics.BitmapRegionDecoder: android.graphics.BitmapRegionDecoder newInstance(java.io.FileDescriptor,boolean)>
<android.content.Loader: void deliverResult(java.lang.Object)>
<com.android.internal.widget.ActionBarView: void setDropdownParams(android.widget.SpinnerAdapter,android.widget.AdapterView.OnItemSelectedListener)>
<android.widget.TextView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>
<android.app.admin.IDevicePolicyManager: boolean getStorageEncryption(android.content.ComponentName,int)>
<android.view.View: void makeOptionalFitsSystemWindows()>
<android.graphics.drawable.RotateDrawable: void invalidateDrawable(android.graphics.drawable.Drawable)>
<android.net.MobileDataStateTracker: boolean reconnect()>
<android.media.MediaDrm.CryptoSession: byte[] sign(byte[],byte[])>
<com.android.internal.view.menu.ListMenuItemView: void setForceShowIcon(boolean)>
<com.android.internal.util.StateMachine: boolean isDbg()>
<android.view.animation.ScaleAnimation: void <init>(float,float,float,float,int,float,int,float)>
<android.opengl.GLES30: void glGetSamplerParameteriv(int,int,int[],int)>
<android.webkit.WebChromeClient.FileChooserParams: java.lang.String getFilenameHint()>
<android.hardware.display.VirtualDisplay: void setSurface(android.view.Surface)>
<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo: int getColumnSpan()>
<android.renderscript.RSTextureView: void onSurfaceTextureUpdated(android.graphics.SurfaceTexture)>
<android.ddm.DdmHandleAppName: org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)>
<android.graphics.Region: void scale(float)>
<android.media.AudioAttributes.Builder: android.media.AudioAttributes build()>
<android.filterfw.core.StreamPort: android.filterfw.core.Frame pullFrame()>
<com.android.internal.statusbar.StatusBarIconList: void removeIcon(int)>
<android.view.WindowManagerPolicy: void enableScreenAfterBoot()>
<com.android.internal.widget.DecorToolbar: void saveHierarchyState(android.util.SparseArray)>
<android.content.ComponentCallbacks: void onConfigurationChanged(android.content.res.Configuration)>
<android.content.res.Resources: void getValue(java.lang.String,android.util.TypedValue,boolean)>
<android.net.UrlQuerySanitizer.ValueSanitizer: java.lang.String sanitize(java.lang.String)>
<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>
<android.widget.CheckedTextView: boolean isChecked()>
<android.provider.Settings.Secure: long getLongForUser(android.content.ContentResolver,java.lang.String,int)>
<android.hardware.location.IFusedLocationHardwareSink: void onDiagnosticDataAvailable(java.lang.String)>
<android.view.MotionEvent: void setAction(int)>
<android.filterfw.core.Frame: void onFrameStore()>
<android.preference.CheckBoxPreference: void <init>(android.content.Context)>
<android.mtp.MtpDevice: android.mtp.MtpDeviceInfo getDeviceInfo()>
<android.filterfw.core.ProtocolException: void <init>(java.lang.String)>
<android.widget.ProgressBar: void setProgressDrawable(android.graphics.drawable.Drawable)>
<android.webkit.WebViewProvider.ViewDelegate: boolean onHoverEvent(android.view.MotionEvent)>
<android.gesture.GestureOverlayView: int getGestureStrokeType()>
<android.net.NetworkInfo: void setExtraInfo(java.lang.String)>
<android.media.audiofx.AudioEffect: int byteArrayToInt(byte[],int)>
<android.app.Instrumentation: android.app.Instrumentation.ActivityMonitor addMonitor(android.content.IntentFilter,android.app.Instrumentation.ActivityResult,boolean)>
<android.nfc.cardemulation.CardEmulation: boolean isDefaultServiceForCategory(android.content.ComponentName,java.lang.String)>
<android.app.Activity: void startActivityForResultAsUser(android.content.Intent,int,android.os.UserHandle)>
<com.android.internal.util.AsyncService: android.os.Handler getHandler()>
<android.hardware.camera2.legacy.LegacyFaceDetectMapper: void processFaceDetectMode(android.hardware.camera2.CaptureRequest,android.hardware.Camera.Parameters)>
<android.text.style.SuggestionSpan: void writeToParcel(android.os.Parcel,int)>
<android.media.MediaRouter.RouteInfo: void setTag(java.lang.Object)>
<android.content.ClipData: java.lang.String toString()>
<android.inputmethodservice.InputMethodService: android.view.View onCreateInputView()>
<android.widget.TextView: void setTransformationMethod(android.text.method.TransformationMethod)>
<android.app.FragmentManagerImpl: void dispatchTrimMemory(int)>
<android.mtp.MtpDeviceInfo: java.lang.String getModel()>
<android.telephony.cdma.CdmaSmsCbProgramResults: void writeToParcel(android.os.Parcel,int)>
<android.hardware.soundtrigger.SoundTrigger.ConfidenceLevel: int describeContents()>
<android.transition.Slide: void captureStartValues(android.transition.TransitionValues)>
<android.preference.MultiCheckPreference: void onSetInitialValue(boolean,java.lang.Object)>
<android.net.wifi.WifiScanner: void configureWifiChange(int,int,int,int,int,android.net.wifi.WifiScanner.BssidInfo[])>
<com.google.android.gles_jni.GLImpl: void glGetTexParameteriv(int,int,int[],int)>
<android.graphics.ComposeShader: void <init>(android.graphics.Shader,android.graphics.Shader,android.graphics.Xfermode)>
<android.text.format.Formatter: java.lang.String formatIpAddress(int)>
<android.view.Window: void setExitTransition(android.transition.Transition)>
<android.database.Cursor: void close()>
<android.hardware.camera2.legacy.RequestHolder: java.util.Collection getHolderTargets()>
<com.android.internal.widget.LockPatternView: void setDisplayMode(com.android.internal.widget.LockPatternView.DisplayMode)>
<android.media.AsyncPlayer: void <init>(java.lang.String)>
<android.telecom.Call.Listener: void onVideoCallChanged(android.telecom.Call,android.telecom.InCallService.VideoCall)>
<android.net.nsd.DnsSdTxtRecord: int describeContents()>
<android.widget.CursorTreeAdapter: void bindGroupView(android.view.View,android.content.Context,android.database.Cursor,boolean)>
<android.os.Debug: void resetGlobalExternalAllocCount()>
<android.app.ApplicationThreadProxy: void setCoreSettings(android.os.Bundle)>
<android.media.RemoteControlClient: android.app.PendingIntent getRcMediaIntent()>
<android.content.pm.ContainerEncryptionParams: long getEncryptedDataStart()>
<android.widget.CompoundButton: void onRestoreInstanceState(android.os.Parcelable)>
<android.content.ISyncStatusObserver: void onStatusChanged(int)>
<android.opengl.GLES11Ext: void glGenRenderbuffersOES(int,java.nio.IntBuffer)>
<android.renderscript.RenderScriptGL: void bindProgramStore(android.renderscript.ProgramStore)>
<com.android.internal.widget.LockPatternUtils: void setEnabledTrustAgents(java.util.Collection)>
<android.net.wifi.WifiEnterpriseConfig: java.lang.String getSubjectMatch()>
<com.google.android.gles_jni.GLImpl: void glLightModelfv(int,java.nio.FloatBuffer)>
<android.os.Process: int setGid(int)>
<android.telecom.TelecomManager: void cancelMissedCallsNotification()>
<android.net.ConnectivityManager: void captivePortalCheckCompleted(android.net.NetworkInfo,boolean)>
<android.renderscript.Int2: void setValues(int,int)>
<android.app.Dialog: void onActionModeFinished(android.view.ActionMode)>
<android.util.Slog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>
<android.preference.DialogPreference: java.lang.CharSequence getDialogMessage()>
<android.location.GeocoderParams: void writeToParcel(android.os.Parcel,int)>
<android.opengl.GLES31Ext: void glGetTexParameterIuivEXT(int,int,int[],int)>
<com.google.android.util.AbstractMessageParser.FlickrPhoto: boolean isHtml()>
<android.os.PerformanceCollector.PerformanceResultsWriter: void writeStopTiming(android.os.Bundle)>
<android.hardware.Camera: void lock()>
<android.content.Intent: int[] getIntArrayExtra(java.lang.String)>
<android.filterfw.core.CachedFrameManager: android.filterfw.core.Frame releaseFrame(android.filterfw.core.Frame)>
<android.graphics.drawable.GradientDrawable: void draw(android.graphics.Canvas)>
<android.media.WebVttTrack: void onRegionParsed(android.media.TextTrackRegion)>
<android.graphics.drawable.InsetDrawable: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>
<android.app.Activity: void finishAndRemoveTask()>
<android.net.nsd.NsdManager.DiscoveryListener: void onStartDiscoveryFailed(java.lang.String,int)>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl: void revokeSelf()>
<com.android.internal.app.IBatteryStats: void noteFlashlightOff()>
<android.telephony.VoLteServiceState: java.lang.String toString()>
<android.widget.AbsListView.OnScrollListener: void onScrollStateChanged(android.widget.AbsListView,int)>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getApplicationBanner(android.content.pm.ApplicationInfo)>
<android.database.sqlite.SQLiteCursor: boolean requery()>
<android.content.ClipboardManager: android.content.ClipDescription getPrimaryClipDescription()>
<android.widget.AdapterView: boolean onRequestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>
<android.media.MediaPlayer: void setRetransmitEndpoint(java.net.InetSocketAddress)>
<android.content.res.ColorStateList: java.lang.String toString()>
<android.text.SpannableStringBuilder: int getTextRunCursor(int,int,int,int,int,android.graphics.Paint)>
<android.filterfw.GraphEnvironment: android.filterfw.io.GraphReader getGraphReader()>
<android.content.ContentValues: void putNull(java.lang.String)>
<android.speech.tts.ITextToSpeechService: int isLanguageAvailable(java.lang.String,java.lang.String,java.lang.String)>
<android.opengl.GLES30: void glUniform3ui(int,int,int,int)>
<android.accounts.IAccountAuthenticator: void hasFeatures(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,java.lang.String[])>
<android.view.View: android.view.ViewOverlay getOverlay()>
<android.content.res.CompatibilityInfo.Translator: void translatePointInScreenToAppWindow(android.graphics.PointF)>
<android.view.View.OnCreateContextMenuListener: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu.ContextMenuInfo)>
<android.net.BaseNetworkStateTracker: void setUserDataEnable(boolean)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setCursor(android.database.Cursor,android.content.DialogInterface.OnClickListener,java.lang.String)>
<android.media.AudioSystem: java.lang.String getOutputDeviceName(int)>
<android.webkit.WebViewProvider: boolean zoomOut()>
<android.widget.ActivityChooserModel: void setIntent(android.content.Intent)>
<com.google.android.util.AbstractMessageParser.FlickrPhoto: com.google.android.util.AbstractMessageParser.FlickrPhoto matchURL(java.lang.String,java.lang.String)>
<android.graphics.RadialGradient: void <init>(float,float,float,int[],float[],android.graphics.Shader.TileMode)>
<android.animation.Animator: boolean canReverse()>
<android.os.PerformanceCollector: android.os.Bundle stopTiming(java.lang.String)>
<android.webkit.WebSettings: void setDatabasePath(java.lang.String)>
<android.content.Context: void revokeUriPermission(android.net.Uri,int)>
<com.android.internal.telephony.GsmAlphabet: java.lang.String gsm8BitUnpackedToString(byte[],int,int)>
<android.graphics.drawable.GradientDrawable: void getOutline(android.graphics.Outline)>
<android.widget.ListPopupWindow: int getInputMethodMode()>
<android.media.IRemoteVolumeController: void remoteVolumeChanged(android.media.session.ISessionController,int)>
<android.view.ViewGroup.MarginLayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>
<android.app.ActivityManagerProxy: android.content.ComponentName getActivityClassForToken(android.os.IBinder)>
<android.widget.CompoundButton: void setChecked(boolean)>
<android.graphics.Bitmap: int getPixel(int,int)>
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: android.net.wifi.p2p.WifiP2pDevice getSrcDevice()>
<android.net.http.AndroidHttpClientConnection: java.lang.String toString()>
<android.os.StrictMode: void onIntentReceiverLeaked(java.lang.Throwable)>
<android.hardware.camera2.legacy.LegacyMetadataMapper: android.hardware.camera2.impl.CameraMetadataNative createRequestTemplate(android.hardware.camera2.CameraCharacteristics,int)>
<android.opengl.GLES20: void glDeleteFramebuffers(int,int[],int)>
<android.telecom.Call: java.util.List getChildren()>
<android.net.http.AndroidHttpClient: void modifyRequestToAcceptGzipResponse(org.apache.http.HttpRequest)>
<android.content.ContentProviderOperation: java.lang.String toString()>
<android.webkit.WebView: void onChildViewAdded(android.view.View,android.view.View)>
<android.widget.Gallery: void setAnimationDuration(int)>
<android.filterfw.core.Filter: void process(android.filterfw.core.FilterContext)>
<android.content.pm.UserInfo: android.os.UserHandle getUserHandle()>
<android.app.backup.BackupManager: void dataChanged()>
<android.view.View: void setScaleY(float)>
<android.widget.TableLayout: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>
<com.android.internal.widget.DecorToolbar: void setSplitToolbar(boolean)>
<android.bluetooth.IBluetoothMap: boolean setPriority(android.bluetooth.BluetoothDevice,int)>
<android.bluetooth.IBluetoothHeadsetPhone: void cdmaSwapSecondCallState()>
<android.transition.TransitionSet: android.transition.TransitionSet setInterpolator(android.animation.TimeInterpolator)>
<android.widget.QuickContactBadge: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.internal.os.BatteryStatsImpl: int getDischargeCurrentLevelLocked()>
<android.view.View.MeasureSpec: int getMode(int)>
<android.net.wifi.p2p.WifiP2pWfdInfo: java.lang.String getDeviceInfoHex()>
<android.content.Context: void startActivities(android.content.Intent[],android.os.Bundle)>
<android.nfc.NfcAdapter: void setNdefPushMessage(android.nfc.NdefMessage,android.app.Activity,int)>
<android.renderscript.AllocationAdapter: void subData2D(int,int,int,int,float[])>
<android.net.ScoredNetwork: int describeContents()>
<android.content.res.AssetFileDescriptor: long getStartOffset()>
<android.net.NetworkIdentity: java.lang.String getNetworkId()>
<android.app.NotificationManager: void cancelAll()>
<android.telephony.Rlog: int v(java.lang.String,java.lang.String,java.lang.Throwable)>
<android.widget.AutoCompleteTextView: void performFiltering(java.lang.CharSequence,int)>
<android.hardware.SensorManager: java.util.List getFullSensorList()>
<android.net.http.Headers: void setContentType(java.lang.String)>
<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet,int,boolean)>
<android.content.ContextWrapper: java.io.File getFileStreamPath(java.lang.String)>
<android.media.tv.TvContract: android.net.Uri buildChannelUriForPassthroughInput(java.lang.String)>
<android.bluetooth.IBluetoothMap: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.media.AudioTrack: int write(byte[],int,int)>
<android.transition.AutoTransition: void <init>(android.content.Context,android.util.AttributeSet)>
<android.view.ViewRootImpl: boolean isTextDirectionResolved()>
<com.google.android.gles_jni.GLImpl: void glClearStencil(int)>
<android.text.TextUtils: boolean isGraphic(java.lang.CharSequence)>
<android.os.DropBoxManager.Entry: java.lang.String getText(int)>
<com.android.internal.app.IBatteryStats: void noteEvent(int,java.lang.String,int)>
<com.android.internal.widget.SizeAdaptiveLayout: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.media.MediaRouter.RouteGroup: void addRoute(android.media.MediaRouter.RouteInfo,int)>
<android.media.MediaFormat: float getFloat(java.lang.String)>
<android.widget.AutoCompleteTextView: boolean enoughToFilter()>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder setSubtypeNameResId(int)>
<android.content.IntentFilter: void addDataType(java.lang.String)>
<android.os.INetworkManagementService: android.net.NetworkStats getNetworkStatsTethering()>
<android.hardware.camera2.CameraManager: void registerAvailabilityCallback(android.hardware.camera2.CameraManager.AvailabilityCallback,android.os.Handler)>
<android.text.style.BulletSpan: void drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout)>
<android.graphics.Paint: android.graphics.ColorFilter getColorFilter()>
<android.renderscript.AllocationAdapter: void subData1D(int,int,float[])>
<android.service.notification.ZenModeConfig: long tryParseCountdownConditionId(android.net.Uri)>
<android.appwidget.AppWidgetHostView: void setAppWidget(int,android.appwidget.AppWidgetProviderInfo)>
<android.bluetooth.BluetoothInputDevice: boolean virtualUnplug(android.bluetooth.BluetoothDevice)>
<android.view.animation.AnimationSet: boolean willChangeBounds()>
<android.app.admin.IDevicePolicyManager: void setApplicationRestrictions(android.content.ComponentName,java.lang.String,android.os.Bundle)>
<android.net.SamplingDataTracker: long getSampledRxPacketCount()>
<android.os.Binder: void dumpAsync(java.io.FileDescriptor,java.lang.String[])>
<com.android.internal.os.BatteryStatsImpl: long getScreenOnTime(long,int)>
<android.os.UserManager: boolean hasUserRestriction(java.lang.String)>
<android.filterpacks.ui.SurfaceRenderFilter: void process(android.filterfw.core.FilterContext)>
<android.webkit.WebView.HitTestResult: java.lang.String getExtra()>
<android.util.ArrayMap: void erase()>
<android.media.CameraProfile: int getJpegEncodingQualityParameter(int)>
<android.bluetooth.BluetoothActivityEnergyInfo: boolean isValid()>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator withEndAction(java.lang.Runnable)>
<com.android.internal.view.StandaloneActionMode: void setTitle(int)>
<android.app.LoadedApk: android.content.res.CompatibilityInfo getCompatibilityInfo()>
<android.media.SRTRenderer: void <init>(android.content.Context)>
<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getIccSimChallengeResponse(long,int,java.lang.String)>
<com.android.internal.os.BatteryStatsImpl: void noteProcessDiedLocked(int,int)>
<android.view.accessibility.AccessibilityEvent: int getContentChangeTypes()>
<android.media.MediaFile: java.lang.String getFileTitle(java.lang.String)>
<com.android.internal.os.BatteryStatsImpl.Uid.Proc: void addForegroundTimeLocked(long)>
<android.widget.TextView: boolean getHorizontallyScrolling()>
<android.widget.Switch: void setThumbTextPadding(int)>
<android.renderscript.Float4: android.renderscript.Float4 add(android.renderscript.Float4,float)>
<android.telecom.InCallService.VideoCall.Listener: void onCallDataUsageChanged(int)>
<android.print.IPrintSpoolerClient: void onAllPrintJobsHandled()>
<android.location.LocationManager: android.location.LocationProvider getProvider(java.lang.String)>
<android.view.ViewTreeObserver: void addOnWindowAttachListener(android.view.ViewTreeObserver.OnWindowAttachListener)>
<android.renderscript.Double4: android.renderscript.Double4 div(android.renderscript.Double4,android.renderscript.Double4)>
<com.android.internal.backup.IBackupTransport: void finishRestore()>
<android.hardware.SystemSensorManager: void <init>(android.content.Context,android.os.Looper)>
<android.bluetooth.BluetoothHeadsetClient: boolean redial(android.bluetooth.BluetoothDevice)>
<android.media.tv.TvView: void dispatchWindowFocusChanged(boolean)>
<android.location.Geofence: android.location.Geofence createCircle(double,double,float)>
<android.inputmethodservice.Keyboard: int getShiftKeyIndex()>
<com.android.internal.util.StateMachine: void sendMessage(int,int,int,java.lang.Object)>
<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setActionProvider(android.view.ActionProvider)>
<android.media.tv.ITvInputManager: void setParentalControlsEnabled(boolean,int)>
<android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setDeviceName(java.lang.String)>
<com.android.internal.view.IInputSessionCallback: void sessionCreated(com.android.internal.view.IInputMethodSession)>
<android.content.pm.PackageManager: java.lang.String getInstallerPackageName(java.lang.String)>
<android.net.NetworkUtils: boolean runDhcpRenew(java.lang.String,android.net.DhcpResults)>
<com.android.internal.widget.SwipeDismissLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.content.ContentResolver: void setMasterSyncAutomatically(boolean)>
<android.view.animation.Animation: boolean hasStarted()>
<android.content.pm.PackageInstaller.SessionParams: int describeContents()>
<android.opengl.GLES31: void glProgramUniform2i(int,int,int,int)>
<android.content.res.AssetFileDescriptor.AutoCloseInputStream: int read()>
<android.hardware.camera2.params.StreamConfigurationDuration: void <init>(int,int,int,long)>
<android.location.GpsSatellite: int getPrn()>
<com.android.internal.view.menu.IconMenuItemView: void setShortcut(boolean,char)>
<android.security.KeyStore: boolean delKey(java.lang.String,int)>
<com.android.internal.widget.ActionBarView: android.view.ViewGroup getViewGroup()>
<android.app.IStopUserCallback: void userStopped(int)>
<android.print.PageRange: int describeContents()>
<android.view.animation.Transformation: java.lang.String toShortString()>
<android.database.CursorWindow: void <init>(java.lang.String)>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setContentAction(int)>
<android.net.wifi.RssiPacketCountInfo: void writeToParcel(android.os.Parcel,int)>
<android.app.IActivityManager: int stopService(android.app.IApplicationThread,android.content.Intent,java.lang.String,int)>
<android.graphics.Rect: void union(android.graphics.Rect)>
<com.android.internal.widget.DecorToolbar: android.content.Context getContext()>
<com.android.ims.internal.IImsCallSession: com.android.ims.ImsCallProfile getCallProfile()>
<com.android.internal.os.BatteryStatsHelper: void create(android.os.BatteryStats)>
<android.media.MediaMetadataRetriever: void setDataSource(java.io.FileDescriptor)>
<android.app.admin.DevicePolicyManager: java.util.List getCrossProfileWidgetProviders(android.content.ComponentName)>
<android.view.inputmethod.InputConnectionWrapper: java.lang.CharSequence getTextAfterCursor(int,int)>
<android.text.BoringLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,android.text.BoringLayout.Metrics,boolean)>
<android.net.LinkProperties: boolean isIdenticalDnses(android.net.LinkProperties)>
<com.android.internal.view.IInputConnectionWrapper: void deleteSurroundingText(int,int)>
<android.graphics.RectF: void set(float,float,float,float)>
<android.hardware.Camera: void takePicture(android.hardware.Camera.ShutterCallback,android.hardware.Camera.PictureCallback,android.hardware.Camera.PictureCallback)>
<android.app.Instrumentation.ActivityMonitor: void <init>(android.content.IntentFilter,android.app.Instrumentation.ActivityResult,boolean)>
<android.nfc.cardemulation.HostApduService: void onDeactivated(int)>
<android.speech.tts.SynthesisRequest: java.lang.String getVariant()>
<android.hardware.camera2.impl.CameraMetadataNative: void writeValues(int,byte[])>
<android.widget.RadialTimePickerView: int getCurrentHour()>
<android.renderscript.Long4: android.renderscript.Long4 sub(android.renderscript.Long4,long)>
<android.view.inputmethod.InputBinding: int describeContents()>
<android.view.ViewGroup: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode.Callback)>
<android.database.sqlite.SQLiteDatabase: long setMaximumSize(long)>
<android.hardware.camera2.legacy.SizeAreaComparator: int compare(android.hardware.Camera.Size,android.hardware.Camera.Size)>
<android.widget.ActivityChooserModel: android.content.pm.ResolveInfo getDefaultActivity()>
<android.widget.ImageView: void setImageState(int[],boolean)>
<com.google.android.gles_jni.GLImpl: void glLightxv(int,int,java.nio.IntBuffer)>
<android.database.BulkCursorProxy: android.os.IBinder asBinder()>
<android.graphics.DashPathEffect: void <init>(float[],float)>
<android.app.ActivityManagerProxy: void removeContentProvider(android.os.IBinder,boolean)>
<android.graphics.drawable.LayerDrawable: void getOutline(android.graphics.Outline)>
<android.net.wifi.p2p.WifiP2pDevice: void <init>(android.net.wifi.p2p.WifiP2pDevice)>
<android.view.InputQueue: void finalize()>
<com.android.internal.os.BatteryStatsImpl: int getWifiSignalStrengthCount(int,int)>
<android.media.effect.SingleFilterEffect: void release()>
<android.widget.CheckedTextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.telephony.TelephonyManager: java.lang.String getMmsUAProfUrl()>
<android.telecom.TelecomManager: void addNewIncomingCall(android.telecom.PhoneAccountHandle,android.os.Bundle)>
<android.filterpacks.imageproc.ResizeFilter: void process(android.filterfw.core.FilterContext)>
<android.filterpacks.imageproc.VignetteFilter: void process(android.filterfw.core.FilterContext)>
<android.filterfw.core.FinalPort: void <init>(android.filterfw.core.Filter,java.lang.String,java.lang.reflect.Field,boolean)>
<android.opengl.GLES30: void glCompressedTexSubImage3D(int,int,int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.renderscript.ScriptIntrinsicBlend: void forEachDstIn(android.renderscript.Allocation,android.renderscript.Allocation)>
<android.location.Criteria: java.lang.String toString()>
<android.renderscript.Byte2: void div(byte)>
<android.webkit.WebSettings: void setMixedContentMode(int)>
<android.widget.ScrollView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>
<android.media.MediaExtractor: void setDataSource(android.content.Context,android.net.Uri,java.util.Map)>
<android.content.pm.LauncherActivityInfo: android.content.ComponentName getComponentName()>
<com.android.internal.os.BatteryStatsHelper: void refreshStats(int,java.util.List)>
<android.widget.ResourceCursorTreeAdapter: void <init>(android.content.Context,android.database.Cursor,int,int,int,int)>
<android.bluetooth.BluetoothHeadsetClient: java.util.List getCurrentCalls(android.bluetooth.BluetoothDevice)>
<android.widget.CompoundButton: android.content.res.ColorStateList getButtonTintList()>
<android.widget.LinearLayout.LayoutParams: void <init>(android.widget.LinearLayout.LayoutParams)>
<android.database.CursorWrapper: boolean moveToFirst()>
<android.content.res.TypedArray: java.lang.String getNonConfigurationString(int,int)>
<android.app.UiAutomationConnection: android.view.WindowAnimationFrameStats getWindowAnimationFrameStats()>
<android.location.Location: void set(android.location.Location)>
<android.security.IKeyChainService: byte[] getCertificate(java.lang.String)>
<android.widget.ViewFlipper: void <init>(android.content.Context,android.util.AttributeSet)>
<android.nfc.tech.MifareClassic: boolean authenticateSectorWithKeyB(int,byte[])>
<android.net.wifi.WifiManager: void setTdlsEnabledWithMacAddress(java.lang.String,boolean)>
<android.view.WindowManager: void removeViewImmediate(android.view.View)>
<android.view.accessibility.AccessibilityRecord: void setParcelableData(android.os.Parcelable)>
<android.view.DragEvent: int describeContents()>
<android.provider.MediaStore.Images.Media: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[])>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getEffectiveValueSanitizer(java.lang.String)>
<android.speech.tts.TextToSpeech: int addEarcon(java.lang.String,java.lang.String)>
<android.media.AmrInputStream: int read()>
<com.android.internal.widget.DecorToolbar: boolean hasLogo()>
<android.os.Parcel: int dataCapacity()>
<com.android.internal.view.BaseSurfaceHolder: void setType(int)>
<android.os.Parcel: java.lang.CharSequence[] readCharSequenceArray()>
<android.telecom.Connection: void onDisconnect()>
<android.net.SSLCertificateSocketFactory: void setHostname(java.net.Socket,java.lang.String)>
<android.opengl.GLES31: void glGetBooleani_v(int,int,java.nio.IntBuffer)>
<android.drm.DrmManagerClient: int getDrmObjectType(java.lang.String,java.lang.String)>
<android.webkit.WebViewProvider: void saveWebArchive(java.lang.String)>
<android.provider.Settings.Secure: void setLocationProviderEnabled(android.content.ContentResolver,java.lang.String,boolean)>
<android.renderscript.Long4: void mod(android.renderscript.Long4)>
<com.android.ims.ImsReasonInfo: void <init>(int,int)>
<android.bluetooth.BluetoothMap: int getState()>
<android.media.browse.MediaBrowser.MediaItem: boolean isBrowsable()>
<android.view.animation.Animation: void setFillEnabled(boolean)>
<android.content.ContentResolver: void setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)>
<android.drm.DrmManagerClient: int getDrmObjectType(android.net.Uri,java.lang.String)>
<android.hardware.camera2.params.StreamConfigurationDuration: android.util.Size getSize()>
<android.graphics.drawable.GradientDrawable: float getGradientRadius()>
<android.filterpacks.imageproc.FisheyeFilter: void initProgram(android.filterfw.core.FilterContext,int)>
<com.android.internal.app.WindowDecorActionBar: void setCustomView(int)>
<android.media.tv.TvStreamConfig: int getMaxWidth()>
<android.widget.TableRow.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>
<android.view.inputmethod.InputConnectionWrapper: boolean sendKeyEvent(android.view.KeyEvent)>
<android.util.StateSet: boolean stateSetMatches(int[],int)>
<android.net.wifi.p2p.WifiP2pManager: void addLocalService(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.nsd.WifiP2pServiceInfo,android.net.wifi.p2p.WifiP2pManager.ActionListener)>
<android.content.IContentProvider: android.database.Cursor query(java.lang.String,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.ICancellationSignal)>
<android.view.Menu: android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence)>
<android.database.AbstractCursor: double getDouble(int)>
<android.view.ViewParent: android.view.View focusSearch(android.view.View,int)>
<android.bluetooth.BluetoothHealthAppConfiguration: java.lang.String getName()>
<android.webkit.WebChromeClient: boolean onShowFileChooser(android.webkit.WebView,android.webkit.ValueCallback,android.webkit.WebChromeClient.FileChooserParams)>
<android.telecom.Connection: void onHold()>
<android.widget.AutoCompleteTextView: java.lang.CharSequence convertSelectionToString(java.lang.Object)>
<android.content.pm.PackageManager: java.lang.String installStatusToString(int)>
<android.graphics.Matrix: void mapPoints(float[],float[])>
<android.widget.AdapterViewAnimator: void onLayout(boolean,int,int,int,int)>
<android.location.Address: java.lang.String getSubLocality()>
<android.content.pm.ResolveInfo: void <init>(android.content.pm.ResolveInfo)>
<android.webkit.URLUtil: boolean isDataUrl(java.lang.String)>
<android.os.BatteryStats: long getScreenOnTime(long,int)>
<android.app.Activity: int getTitleColor()>
<android.opengl.GLES30: void glEndQuery(int)>
<android.opengl.GLES20: void glUniformMatrix2fv(int,int,boolean,float[],int)>
<android.os.Bundle: java.lang.Object clone()>
<android.os.DropBoxManager: boolean isTagEnabled(java.lang.String)>
<android.telecom.RemoteConference: void disconnect()>
<android.renderscript.Byte4: android.renderscript.Byte4 sub(android.renderscript.Byte4,android.renderscript.Byte4)>
<android.view.View: boolean isAccessibilityFocused()>
<android.webkit.WebViewDatabase: boolean hasFormData()>
<android.net.NetworkStats: android.net.NetworkStats subtract(android.net.NetworkStats)>
<android.widget.RadialTimePickerView: void initialize(int,int,boolean)>
<android.app.ActivityManagerNative: android.os.IBinder asBinder()>
<android.speech.RecognitionService: void onCancel(android.speech.RecognitionService.Callback)>
<android.app.ActionBar: android.app.ActionBar.Tab newTab()>
<android.content.res.Resources: android.content.res.XmlResourceParser getLayout(int)>
<android.app.UiAutomation: boolean injectInputEvent(android.view.InputEvent,boolean)>
<com.android.internal.telephony.ITelephonyRegistry: void notifyDataConnectionForSubscriber(long,int,boolean,java.lang.String,java.lang.String,java.lang.String,android.net.LinkProperties,android.net.NetworkCapabilities,int,boolean)>
<android.widget.HeaderViewListAdapter: void <init>(java.util.ArrayList,java.util.ArrayList,android.widget.ListAdapter)>
<android.widget.AbsListView: boolean showContextMenuForChild(android.view.View)>
<android.renderscript.Byte4: void sub(android.renderscript.Byte4)>
<android.net.wifi.p2p.WifiP2pManager: void setWifiP2pChannels(android.net.wifi.p2p.WifiP2pManager.Channel,int,int,android.net.wifi.p2p.WifiP2pManager.ActionListener)>
<com.android.internal.util.XmlUtils: void writeMapXml(java.util.Map,java.lang.String,org.xmlpull.v1.XmlSerializer,com.android.internal.util.XmlUtils.WriteMapCallback)>
<com.android.internal.widget.DrawableHolder: void setScaleX(float)>
<android.filterpacks.videosrc.SurfaceTextureTarget: void setupPorts()>
<com.google.android.util.AbstractMessageParser.Format: boolean controlCaps()>
<android.bluetooth.le.AdvertiseSettings: int getTxPowerLevel()>
<android.widget.TabHost: void clearAllTabs()>
<android.os.UEventObserver.UEvent: java.lang.String get(java.lang.String,java.lang.String)>
<android.net.IpConfiguration: void <init>(android.net.IpConfiguration)>
<android.view.accessibility.AccessibilityEvent: void recycle()>
<android.media.AudioDevicePort: boolean equals(java.lang.Object)>
<android.app.IActivityContainer: void setSurface(android.view.Surface,int,int,int)>
<android.hardware.display.WifiDisplayStatus: android.hardware.display.WifiDisplay[] getDisplays()>
<android.hardware.display.DisplayManagerGlobal: void resumeWifiDisplay()>
<android.widget.CalendarView: void setWeekNumberColor(int)>
<android.view.WindowManagerPolicy: boolean canBeForceHidden(android.view.WindowManagerPolicy.WindowState,android.view.WindowManager.LayoutParams)>
<android.content.SyncContext: void setStatusText(java.lang.String)>
<android.content.Intent: android.content.Intent getIntent(java.lang.String)>
<android.widget.CursorFilter.CursorFilterClient: java.lang.CharSequence convertToString(android.database.Cursor)>
<android.graphics.drawable.Drawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>
<android.database.BulkCursorProxy: android.os.Bundle getExtras()>
<android.opengl.GLES20: void glGetTexParameterfv(int,int,java.nio.FloatBuffer)>
<android.net.wifi.WifiActivityEnergyInfo: void writeToParcel(android.os.Parcel,int)>
<android.net.wifi.WifiInfo: void updatePacketRates(android.net.wifi.WifiLinkLayerStats)>
<com.google.android.gles_jni.EGLImpl: boolean eglDestroyContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext)>
<android.telephony.TelephonyManager: int getVoiceMessageCount(long)>
<android.webkit.WebView: void enableSlowWholeDocumentDraw()>
<android.media.MediaRouter: void removeUserRoute(android.media.MediaRouter.UserRouteInfo)>
<com.android.internal.app.IBatteryStats: long computeBatteryTimeRemaining()>
<android.content.pm.PackageManager: java.lang.String[] getPackagesForUid(int)>
<android.service.notification.NotificationListenerService: void unregisterAsSystemService()>
<android.net.MobileDataStateTracker: boolean isPrivateDnsRouteSet()>
<android.app.Activity: void setIntent(android.content.Intent)>
<android.renderscript.ScriptIntrinsicHistogram: void forEach(android.renderscript.Allocation)>
<com.android.internal.widget.ToolbarWidgetWrapper: int getDropdownSelectedPosition()>
<com.android.internal.net.NetworkStatsFactory: int nativeReadNetworkStatsDetail(android.net.NetworkStats,java.lang.String,int,java.lang.String[],int)>
<android.inputmethodservice.KeyboardView: void setKeyboard(android.inputmethodservice.Keyboard)>
<com.android.internal.view.menu.ActionMenuItem: boolean isCheckable()>
<android.app.admin.DevicePolicyManager: boolean installKeyPair(android.content.ComponentName,java.security.PrivateKey,java.security.cert.Certificate,java.lang.String)>
<android.app.backup.BackupTransport: int performBackup(android.content.pm.PackageInfo,android.os.ParcelFileDescriptor)>
<android.content.res.AssetFileDescriptor: java.lang.String toString()>
<android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData.Builder addManufacturerData(int,byte[])>
<android.content.IContentProvider: int update(java.lang.String,android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<android.util.SparseIntArray: void append(int,int)>
<android.database.BulkCursorToCursorAdaptor: int getCount()>
<com.android.internal.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)>
<android.widget.AbsSeekBar: int getThumbOffset()>
<android.hardware.usb.UsbConfiguration: int getId()>
<android.widget.AutoCompleteTextView: void setListSelection(int)>
<android.content.pm.PackageManager: void getPackageSizeInfo(java.lang.String,android.content.pm.IPackageStatsObserver)>
<android.drm.DrmSupportInfo: int hashCode()>
<android.telephony.TelephonyManager: boolean isIdle()>
<android.app.Fragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.android.internal.os.BatteryStatsImpl: long getPhoneSignalScanningTime(long,int)>
<android.app.ListFragment: void onViewCreated(android.view.View,android.os.Bundle)>
<android.gesture.GestureOverlayView: int getGestureColor()>
<android.view.inputmethod.InputMethodInfo: android.content.ComponentName getComponent()>
<android.renderscript.Matrix4f: void <init>(float[])>
<com.android.internal.view.IInputConnectionWrapper: void performPrivateCommand(java.lang.String,android.os.Bundle)>
<android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPersisted(boolean)>
<android.app.Activity: void closeOptionsMenu()>
<android.webkit.WebViewProvider: int getContentHeight()>
<android.hardware.camera2.legacy.ParameterUtils: java.lang.String stringFromArea(android.hardware.Camera.Area)>
<android.content.Context: java.io.File getSharedPrefsFile(java.lang.String)>
<com.android.internal.location.ProviderRequest: java.lang.String toString()>
<android.view.textservice.SuggestionsInfo: void setCookieAndSequence(int,int)>
<android.app.SearchDialog: void launchQuerySearch()>
<android.app.admin.IDevicePolicyManager: long getPasswordExpirationTimeout(android.content.ComponentName,int)>
<android.opengl.GLES31: void glProgramUniformMatrix2fv(int,int,int,boolean,float[],int)>
<com.android.internal.telephony.CallerInfoAsyncQuery.OnQueryCompleteListener: void onQueryComplete(int,java.lang.Object,com.android.internal.telephony.CallerInfo)>
<android.telecom.Connection: void onStateChanged(int)>
<android.net.LocalSocketAddress: void <init>(java.lang.String,android.net.LocalSocketAddress.Namespace)>
<android.net.NetworkScoreManager: boolean clearScores()>
<com.android.internal.os.BatteryStatsImpl: boolean getNextHistoryLocked(android.os.BatteryStats.HistoryItem)>
<android.hardware.hdmi.HdmiRecordSources.DigitalChannelData: int toByteArray(byte[],int)>
<android.hardware.usb.UsbAccessory: int describeContents()>
<android.bluetooth.IBluetoothHealth: boolean connectChannelToSink(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration,int)>
<com.android.internal.telephony.IMms: android.net.Uri importMultimediaMessage(java.lang.String,android.net.Uri,java.lang.String,long,boolean,boolean)>
<android.util.NtpTrustedTime: long getCachedNtpTimeReference()>
<android.content.ContentProvider: android.net.Uri uncanonicalize(android.net.Uri)>
<android.opengl.GLES11Ext: void glGenRenderbuffersOES(int,int[],int)>
<android.view.MotionEvent: int getPointerCount()>
<android.util.SparseIntArray: void <init>(int)>
<android.text.method.BaseMovementMethod: boolean scrollBottom(android.widget.TextView,android.text.Spannable)>
<android.telephony.TelephonyManager: java.lang.String getCdmaMin(long)>
<android.view.inputmethod.InputConnection: boolean performContextMenuAction(int)>
<android.preference.GenericInflater.Parent: void addItemFromInflater(java.lang.Object)>
<com.android.internal.widget.DialogTitle: void <init>(android.content.Context)>
<android.telecom.RemoteConnection: void reject()>
<android.widget.MediaController: void <init>(android.content.Context,boolean)>
<com.google.android.gles_jni.GLImpl: void glDrawTexsvOES(short[],int)>
<android.bluetooth.le.ResultStorageDescriptor: int getType()>
<android.net.wifi.WifiManager: void stopBatchedScan(android.net.wifi.BatchedScanSettings)>
<android.net.LinkQualityInfo: void setTheoreticalLatency(int)>
<android.app.SearchableInfo: int getHintId()>
<android.content.pm.Signature: char[] toChars()>
<com.android.internal.view.menu.ListMenuPresenter: com.android.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)>
<android.webkit.HttpAuthHandler: void proceed(java.lang.String,java.lang.String)>
<com.android.internal.widget.ActionBarContainer: void jumpDrawablesToCurrentState()>
<com.android.internal.widget.ActionBarView: void setContextView(com.android.internal.widget.ActionBarContextView)>
<android.renderscript.Element: android.renderscript.Element I32(android.renderscript.RenderScript)>
<android.printservice.PrintService: void attachBaseContext(android.content.Context)>
<android.graphics.drawable.NinePatchDrawable: void setTargetDensity(android.graphics.Canvas)>
<android.opengl.GLES30: void glVertexAttribI4uiv(int,java.nio.IntBuffer)>
<android.filterfw.core.GLFrame: void setDataFromFrame(android.filterfw.core.Frame)>
<android.filterfw.core.GraphRunner: android.filterfw.core.FilterContext getContext()>
<android.content.Context: void registerComponentCallbacks(android.content.ComponentCallbacks)>
<android.database.sqlite.SQLiteQueryBuilder: void setCursorFactory(android.database.sqlite.SQLiteDatabase.CursorFactory)>
<android.app.admin.DevicePolicyManager: void setMaximumTimeToLock(android.content.ComponentName,long)>
<com.google.android.gles_jni.GLImpl: void glDrawTexxOES(int,int,int,int,int)>
<android.hardware.camera2.marshal.impl.MarshalQueryableBoolean: boolean isTypeMappingSupported(android.hardware.camera2.utils.TypeReference,int)>
<android.text.method.TransformationMethod: void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect)>
<android.location.GpsMeasurement: void setCarrierCycles(long)>
<android.widget.OverScroller: int timePassed()>
<android.media.RingtoneManager: boolean getIncludeDrm()>
<android.hardware.input.InputManager: void setTouchCalibration(java.lang.String,int,android.hardware.input.TouchCalibration)>
<android.media.tv.TvInputInfo.TvInputSettings: java.util.Map getCustomLabels(android.content.Context,int)>
<android.filterfw.core.FilterGraph: java.util.Set getFilters()>
<android.content.pm.PackageParser: long readFullyIgnoringContents(java.io.InputStream)>
<android.opengl.GLES11: void glDrawElements(int,int,int,int)>
<android.inputmethodservice.Keyboard: void setHorizontalGap(int)>
<android.webkit.WebView: void loadUrl(java.lang.String,java.util.Map)>
<android.view.ViewParent: boolean requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>
<android.widget.DoubleDigitManager.CallBack: void singleDigitFinal(int)>
<android.provider.DocumentsProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)>
<android.graphics.Outline: void setConvexPath(android.graphics.Path)>
<android.widget.TextSwitcher: void <init>(android.content.Context)>
<android.media.AudioManager: void unloadSoundEffects()>
<android.app.ActivityManagerProxy: void activityDestroyed(android.os.IBinder)>
<android.net.TrafficStats: long getUidRxPackets(int)>
<android.bluetooth.BluetoothActivityEnergyInfo: int getBluetoothStackState()>
<android.view.View: void setContentDescription(java.lang.CharSequence)>
<android.media.MediaMetadataRetriever: void setDataSource(android.content.Context,android.net.Uri)>
<android.widget.ActivityChooserModel: void setOnChooseActivityListener(android.widget.ActivityChooserModel.OnChooseActivityListener)>
<android.widget.AdapterViewFlipper: void onWindowVisibilityChanged(int)>
<android.content.IntentFilter: java.util.Iterator authoritiesIterator()>
<android.graphics.Paint: void setARGB(int,int,int,int)>
<android.net.ConnectivityManager: java.lang.String[] getTetherableBluetoothRegexs()>
<android.telecom.Connection.Listener: void onConferenceableConnectionsChanged(android.telecom.Connection,java.util.List)>
<com.android.internal.http.multipart.PartBase: void setName(java.lang.String)>
<android.print.PrintManager: android.print.PrintManager getGlobalPrintManagerForUser(int)>
<android.view.ActionMode.Callback: void onDestroyActionMode(android.view.ActionMode)>
<android.graphics.Path: void rewind()>
<android.webkit.WebViewProvider: void addJavascriptInterface(java.lang.Object,java.lang.String)>
<android.filterfw.core.NativeBuffer: void <init>(int)>
<android.accounts.AccountAndUser: java.lang.String toString()>
<android.net.IpConfiguration: void setIpAssignment(android.net.IpConfiguration.IpAssignment)>
<android.app.admin.IDevicePolicyManager: void setRecommendedGlobalProxy(android.content.ComponentName,android.net.ProxyInfo)>
<android.nfc.INfcAdapterExtras: void authenticate(java.lang.String,byte[])>
<android.widget.ListPopupWindow: long getSelectedItemId()>
<android.bluetooth.BluetoothGattCharacteristic: java.lang.Integer getIntValue(int,int)>
<android.util.Pools.SynchronizedPool: void <init>(int)>
<android.app.Notification.Action: void writeToParcel(android.os.Parcel,int)>
<android.location.Country: int describeContents()>
<android.media.Ringtone: int getStreamType()>
<android.view.ViewGroup: void resolveLayoutParams()>
<android.webkit.WebSettings: void setSansSerifFontFamily(java.lang.String)>
<android.renderscript.ScriptIntrinsicBlend: void forEachXor(android.renderscript.Allocation,android.renderscript.Allocation)>
<android.widget.AutoCompleteTextView: int getDropDownAnchor()>
<android.text.LoginFilter.UsernameFilterGMail: boolean isAllowed(char)>
<android.graphics.Rect: boolean equals(java.lang.Object)>
<android.opengl.GLES20: void glGetBufferParameteriv(int,int,int[],int)>
<android.graphics.drawable.BitmapDrawable: void setAutoMirrored(boolean)>
<android.hardware.location.IActivityRecognitionHardware: java.lang.String[] getSupportedActivities()>
<android.net.Uri.Builder: android.net.Uri.Builder scheme(java.lang.String)>
<android.database.DatabaseUtils.InsertHelper: void bindNull(int)>
<com.android.internal.app.WindowDecorActionBar: void setTitle(int)>
<android.nfc.NfcActivityManager: void setNdefPushMessage(android.app.Activity,android.nfc.NdefMessage,int)>
<android.os.BatteryStats: long getScreenBrightnessTime(int,long,int)>
<android.sax.EndTextElementListener: void end(java.lang.String)>
<android.widget.AbsListView: java.lang.CharSequence getTextFilter()>
<android.os.Environment: java.io.File getSystemSecureDirectory()>
<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>
<android.telephony.TelephonyManager: java.lang.String getVoiceMailNumber(long)>
<com.android.internal.view.menu.IconMenuView: void initialize(com.android.internal.view.menu.MenuBuilder)>
<android.content.ContentValues: void put(java.lang.String,java.lang.Short)>
<android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)>
<android.media.FaceDetector: void finalize()>
<android.os.storage.IMountServiceListener: void onStorageStateChanged(java.lang.String,java.lang.String,java.lang.String)>
<com.android.internal.app.IAppOpsService: android.os.IBinder getToken(android.os.IBinder)>
<android.app.job.JobParameters: android.app.job.IJobCallback getCallback()>
<com.google.android.gles_jni.EGLImpl: boolean eglQuerySurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,int,int[])>
<com.android.internal.backup.IBackupTransport: int getNextFullRestoreDataChunk(android.os.ParcelFileDescriptor)>
<android.media.MediaFocusControl: void registerMediaButtonIntent(android.app.PendingIntent,android.content.ComponentName,android.os.IBinder)>
<android.view.inputmethod.CorrectionInfo: java.lang.CharSequence getNewText()>
<android.webkit.WebView: boolean onGenericMotionEvent(android.view.MotionEvent)>
<android.media.tv.TvView: void setOnUnhandledInputEventListener(android.media.tv.TvView.OnUnhandledInputEventListener)>
<android.telecom.StatusHints: void <init>(android.content.ComponentName,java.lang.CharSequence,int,android.os.Bundle)>
<android.app.admin.IDevicePolicyManager: void setCameraDisabled(android.content.ComponentName,boolean,int)>
<com.android.internal.widget.LockPatternUtils: int getKeyguardStoredPasswordQuality()>
<android.provider.Browser: void clearHistory(android.content.ContentResolver)>
<android.location.LocationManager: void addGeofence(android.location.LocationRequest,android.location.Geofence,android.app.PendingIntent)>
<android.view.ViewRootImpl: android.view.ViewParent getParentForAccessibility()>
<android.app.ActivityThread: android.app.ActivityThread systemMain()>
<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>
<com.android.server.WidgetBackupProvider: void restoreStarting(int)>
<com.android.internal.app.IVoiceInteractionManagerService: int deleteKeyphraseSoundModel(int,java.lang.String)>
<android.widget.ArrayAdapter: void addAll(java.util.Collection)>
<android.app.ActivityManagerProxy: android.app.IActivityManager.ContentProviderHolder getContentProviderExternal(java.lang.String,int,android.os.IBinder)>
<android.media.tv.ITvInputService: void notifyHardwareRemoved(android.media.tv.TvInputHardwareInfo)>
<android.mtp.MtpObjectInfo: int getAssociationDesc()>
<android.service.voice.AlwaysOnHotwordDetector: android.content.Intent createEnrollIntent()>
<android.location.Location: double getLatitude()>
<android.view.inputmethod.InputMethodManager: java.util.List getEnabledInputMethodSubtypeList(android.view.inputmethod.InputMethodInfo,boolean)>
<android.os.PowerManager: boolean setPowerSaveMode(boolean)>
<android.view.CollapsibleActionView: void onActionViewExpanded()>
<android.net.Uri: boolean isRelative()>
<android.location.LocationRequest: android.os.WorkSource getWorkSource()>
<android.media.Metadata: java.lang.String getString(int)>
<android.widget.AdapterViewAnimator: android.widget.Adapter getAdapter()>
<android.view.FocusFinder: android.view.View findNextFocusFromRect(android.view.ViewGroup,android.graphics.Rect,int)>
<android.view.WindowInsets: void <init>(android.graphics.Rect)>
<android.opengl.GLES10: void glBlendFunc(int,int)>
<android.content.ContentResolver: int bulkInsert(android.net.Uri,android.content.ContentValues[])>
<com.android.internal.view.menu.MenuItemImpl: android.view.View getActionView()>
<android.media.MediaPlayer: int getAudioSessionId()>
<android.telecom.ParcelableConference: int getState()>
<com.android.internal.app.IBatteryStats: void noteWifiRssiChanged(int)>
<android.os.storage.IMountService: int mkdirs(java.lang.String,java.lang.String)>
<android.view.ViewConfiguration: int getPressedStateDuration()>
<android.graphics.drawable.LayerDrawable: void draw(android.graphics.Canvas)>
<android.print.PrintJobInfo.Builder: void putAdvancedOption(java.lang.String,int)>
<android.widget.AbsListView: void draw(android.graphics.Canvas)>
<android.graphics.Insets: android.graphics.Insets of(int,int,int,int)>
<android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()>
<android.media.DataSource: int readAt(long,byte[],int)>
<android.graphics.drawable.Drawable: void clearColorFilter()>
<android.os.Environment: java.io.File[] buildExternalStorageAppObbDirs(java.lang.String)>
<com.android.internal.view.BaseIWindow: void executeCommand(java.lang.String,java.lang.String,android.os.ParcelFileDescriptor)>
<com.android.internal.telephony.GsmAlphabet: int charToGsm(char)>
<android.opengl.GLSurfaceView: void setEGLConfigChooser(boolean)>
<android.graphics.Path: void addRoundRect(android.graphics.RectF,float[],android.graphics.Path.Direction)>
<android.gesture.GestureOverlayView: android.graphics.Path getGesturePath()>
<android.widget.TabHost: android.view.View getCurrentView()>
<com.android.internal.telecom.IVideoProvider: void requestCallDataUsage()>
<android.net.VpnService.Builder: android.os.ParcelFileDescriptor establish()>
<android.hardware.display.DisplayManagerInternal.DisplayPowerRequest: void <init>(android.hardware.display.DisplayManagerInternal.DisplayPowerRequest)>
<android.widget.AbsListView: void setAdapter(android.widget.ListAdapter)>
<android.speech.tts.ITextToSpeechService: java.lang.String[] getLanguage()>
<android.util.Pools.SynchronizedPool: java.lang.Object acquire()>
<android.media.MediaPlayer: int getVideoHeight()>
<android.widget.DatePicker.DatePickerDelegate: int getYear()>
<android.text.method.BaseMovementMethod: boolean onKeyOther(android.widget.TextView,android.text.Spannable,android.view.KeyEvent)>
<android.os.PersistableBundle: android.os.PersistableBundle forPair(java.lang.String,java.lang.String)>
<android.speech.tts.TtsEngines: java.util.Locale getLocalePrefForEngine(java.lang.String)>
<android.hardware.camera2.CaptureFailure: boolean wasImageCaptured()>
<android.app.IActivityManager: void activityIdle(android.os.IBinder,android.content.res.Configuration,boolean)>
<android.net.ProxyDataTracker: java.lang.Object clone()>
<android.widget.Switch: int getThumbTextPadding()>
<android.graphics.Path: void toggleInverseFillType()>
<android.telecom.InCallAdapter: void splitFromConference(java.lang.String)>
<android.os.ParcelFileDescriptor: int detachFd()>
<android.mtp.MtpDevice: boolean importFile(int,java.lang.String)>
<android.graphics.drawable.BitmapDrawable: void setTintList(android.content.res.ColorStateList)>
<android.os.FileBridge.FileBridgeOutputStream: void close()>
<android.graphics.drawable.AnimatedVectorDrawable: int getChangingConfigurations()>
<android.app.Dialog: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.animation.StateListAnimator: void setState(int[])>
<android.os.StrictMode: void decrementExpectedActivityCount(java.lang.Class)>
<android.content.ContentResolver: java.io.OutputStream openOutputStream(android.net.Uri)>
<android.webkit.WebViewProvider.ViewDelegate: boolean performLongClick()>
<android.app.IApplicationThread: void scheduleOnNewActivityOptions(android.os.IBinder,android.app.ActivityOptions)>
<android.content.res.AssetManager: int addOverlayPath(java.lang.String)>
<android.widget.HeaderViewListAdapter: boolean removeHeader(android.view.View)>
<android.view.View: void setNextFocusRightId(int)>
<android.widget.GridView: void attachLayoutAnimationParameters(android.view.View,android.view.ViewGroup.LayoutParams,int,int)>
<android.opengl.EGL14: android.opengl.EGLSurface eglGetCurrentSurface(int)>
<android.hardware.camera2.impl.CallbackProxies.DeviceCaptureCallbackProxy: void onCaptureSequenceAborted(android.hardware.camera2.CameraDevice,int)>
<android.hardware.camera2.impl.CameraCaptureSessionImpl: void close()>
<android.content.ClipDescription: void <init>(java.lang.CharSequence,java.lang.String[])>
<android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>
<android.hardware.usb.UsbEndpoint: int getMaxPacketSize()>
<android.renderscript.ScriptIntrinsicBlend: void forEachDstIn(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>
<android.database.sqlite.SQLiteDirectCursorDriver: void cursorClosed()>
<android.nfc.Tag: java.lang.String toString()>
<android.view.View: void computeScroll()>
<android.widget.CompoundButton: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<android.media.MediaMetadata.Builder: android.media.MediaMetadata.Builder putLong(java.lang.String,long)>
<android.telephony.TelephonyManager: void enableSimplifiedNetworkSettingsForSubscriber(long,boolean)>
<android.graphics.drawable.BitmapDrawable: void <init>(java.io.InputStream)>
<com.android.internal.widget.AutoScrollHelper: com.android.internal.widget.AutoScrollHelper setRampDownDuration(int)>
<android.hardware.hdmi.HdmiControlManager: android.hardware.hdmi.HdmiTvClient getTvClient()>
<android.hardware.display.DisplayManager.DisplayListener: void onDisplayAdded(int)>
<android.util.ArrayMap: java.lang.Object valueAt(int)>
<android.util.Log: int w(java.lang.String,java.lang.Throwable)>
<android.opengl.GLES11: boolean glIsEnabled(int)>
<android.opengl.GLES31: void glProgramUniformMatrix2x4fv(int,int,int,boolean,java.nio.FloatBuffer)>
<android.transition.PatternPathMotion: void setPatternPath(android.graphics.Path)>
<android.net.NetworkPolicy: void <init>(android.net.NetworkTemplate,int,java.lang.String,long,long,boolean)>
<android.hardware.display.IDisplayManager: android.hardware.display.WifiDisplayStatus getWifiDisplayStatus()>
<android.provider.DocumentsContract: android.content.res.AssetFileDescriptor openImageThumbnail(java.io.File)>
<android.print.PrintAttributes: int getColorMode()>
<com.android.internal.widget.LockPatternUtilsCache: void removeUser(int)>
<android.graphics.drawable.BitmapDrawable: int getChangingConfigurations()>
<android.view.ViewGroup: void setLayoutTransition(android.animation.LayoutTransition)>
<android.telephony.PhoneNumberUtils: boolean isLocalEmergencyNumber(android.content.Context,long,java.lang.String)>
<android.os.UpdateLock: void setReferenceCounted(boolean)>
<android.hardware.Camera.Parameters: void setExposureCompensation(int)>
<android.webkit.WebView: void zoomBy(float)>
<android.app.backup.BackupTransport: android.content.Intent configurationIntent()>
<android.widget.ActivityChooserView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.app.backup.BackupManager: java.lang.String selectBackupTransport(java.lang.String)>
<android.graphics.drawable.RotateDrawable: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>
<com.android.internal.os.BatteryStatsImpl: void noteActivityResumedLocked(int)>
<android.content.SyncRequest: void <init>(android.content.SyncRequest.Builder)>
<android.media.DecoderCapabilities: java.util.List getAudioDecoders()>
<com.android.internal.os.BatteryStatsImpl.Uid: void noteStartGps(long)>
<android.telephony.PhoneNumberFormattingTextWatcher: void afterTextChanged(android.text.Editable)>
<android.graphics.drawable.BitmapDrawable: android.graphics.Insets getOpticalInsets()>
<android.media.TimedText: android.graphics.Rect getBounds()>
<com.android.internal.util.FastXmlSerializer: int getDepth()>
<android.util.MathUtils: float min(float,float)>
<android.widget.TableLayout: android.widget.TableLayout.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.hardware.camera2.CaptureRequest.Builder: android.hardware.camera2.CaptureRequest build()>
<android.app.ActivityManagerProxy: boolean stopServiceToken(android.content.ComponentName,android.os.IBinder,int)>
<android.widget.PopupWindow: void setElevation(float)>
<android.accounts.IAccountAuthenticatorResponse: void onRequestContinued()>
<android.view.Window: void setTitleColor(int)>
<android.filterfw.io.GraphReader: void addReference(java.lang.String,java.lang.Object)>
<android.media.projection.MediaProjection: void <init>(android.content.Context,android.media.projection.IMediaProjection)>
<com.android.internal.os.AtomicFile: void delete()>
<android.hardware.camera2.legacy.RequestHolder: int numPreviewTargets()>
<android.widget.AutoCompleteTextView: void setOnDismissListener(android.widget.AutoCompleteTextView.OnDismissListener)>
<android.text.style.TtsSpan.Builder: android.text.style.TtsSpan.Builder setLongArgument(java.lang.String,long)>
<android.webkit.WebView: void onGlobalFocusChanged(android.view.View,android.view.View)>
<android.hardware.soundtrigger.KeyphraseEnrollmentInfo: android.hardware.soundtrigger.KeyphraseMetadata[] listKeyphraseMetadata()>
<android.content.IntentFilter: void addCategory(java.lang.String)>
<android.telephony.TelephonyManager: java.lang.String getLine1Number()>
<android.view.WindowManagerPolicy: boolean allowAppAnimationsLw()>
<android.hardware.camera2.CameraAccessException: void <init>(int,java.lang.String)>
<android.graphics.drawable.InsetDrawable: int getIntrinsicWidth()>
<com.google.android.gles_jni.GLImpl: void glLightModelxv(int,int[],int)>
<android.opengl.GLES11Ext: void glTexGenivOES(int,int,int[],int)>
<android.content.res.CompatibilityInfo.Translator: void translateCanvas(android.graphics.Canvas)>
<android.widget.AbsListView: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
<android.graphics.drawable.BitmapDrawable: void draw(android.graphics.Canvas)>
<com.android.internal.widget.SizeAdaptiveLayout: com.android.internal.widget.SizeAdaptiveLayout.LayoutParams generateDefaultLayoutParams()>
<android.app.admin.DevicePolicyManager: long getPasswordExpirationTimeout(android.content.ComponentName)>
<android.security.KeyPairGeneratorSpec: void <init>(android.content.Context,java.lang.String,java.lang.String,int,java.security.spec.AlgorithmParameterSpec,javax.security.auth.x500.X500Principal,java.math.BigInteger,java.util.Date,java.util.Date,int)>
<android.nfc.tech.NfcA: byte[] transceive(byte[])>
<android.telephony.TelephonyManager: void enableSimplifiedNetworkSettings(boolean)>
<com.android.internal.util.XmlUtils: void writeLongAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,long)>
<com.android.internal.os.BatteryStatsImpl.Uid: void noteStartSensor(int,long)>
<android.opengl.GLES30: void glGetInternalformativ(int,int,int,int,int[],int)>
<android.text.style.LeadingMarginSpan.Standard: void <init>(int)>
<android.app.LoadedApk: android.content.pm.ApplicationInfo getApplicationInfo()>
<com.android.server.AppWidgetBackupBridge: byte[] getWidgetState(java.lang.String,int)>
<com.android.internal.inputmethod.InputMethodUtils.InputMethodSettings: android.util.Pair getLastInputMethodAndSubtypeLocked()>
<android.net.wifi.WifiActivityEnergyInfo: java.lang.String toString()>
<android.text.style.TtsSpan.ElectronicBuilder: android.text.style.TtsSpan.ElectronicBuilder setUsername(java.lang.String)>
<android.graphics.Canvas: void drawLines(float[],android.graphics.Paint)>
<android.net.TrafficStats: void tagSocket(java.net.Socket)>
<android.view.TextureView: android.graphics.Matrix getTransform(android.graphics.Matrix)>
<android.widget.AbsSeekBar: void setKeyProgressIncrement(int)>
<android.hardware.location.GeofenceHardwareRequest: int getSourceTechnologies()>
<android.bluetooth.IBluetooth: boolean isDiscovering()>
<android.database.Cursor: boolean moveToLast()>
<android.net.ConnectivityManager: android.net.LinkQualityInfo[] getAllLinkQualityInfo()>
<android.app.ActionBar.Tab: android.app.ActionBar.Tab setIcon(android.graphics.drawable.Drawable)>
<android.service.wallpaper.WallpaperService.Engine: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.widget.AdapterView: void removeViewAt(int)>
<android.preference.PreferenceActivity.Header: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.os.BatteryStatsImpl: void noteChangeWakelockFromSourceLocked(android.os.WorkSource,int,java.lang.String,java.lang.String,int,android.os.WorkSource,int,java.lang.String,java.lang.String,int,boolean)>
<android.content.Loader: void reset()>
<android.text.method.QwertyKeyListener: void markAsReplaced(android.text.Spannable,int,int,java.lang.String)>
<android.renderscript.ProgramStore: android.renderscript.ProgramStore BLEND_ALPHA_DEPTH_NONE(android.renderscript.RenderScript)>
<android.graphics.CornerPathEffect: void <init>(float)>
<android.os.storage.IMountService: void setField(java.lang.String,java.lang.String)>
<android.webkit.WebSettings: void setLayoutAlgorithm(android.webkit.WebSettings.LayoutAlgorithm)>
<android.widget.AdapterView: int getSelectedItemPosition()>
<android.content.ContentProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<com.android.internal.widget.ActionBarView: void onLayout(boolean,int,int,int,int)>
<android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>
<android.provider.MediaStore.Files: android.net.Uri getMtpReferencesUri(java.lang.String,long)>
<android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>
<android.app.Fragment: void setExitSharedElementCallback(android.app.SharedElementCallback)>
<android.view.InputDevice: int getControllerNumber()>
<android.view.inputmethod.BaseInputConnection: boolean beginBatchEdit()>
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: void writeToParcel(android.os.Parcel,int)>
<android.view.animation.AnticipateInterpolator: void <init>(float)>
<android.filterfw.core.Filter: int getNumberOfConnectedOutputs()>
<android.graphics.drawable.VectorDrawable: void applyTheme(android.content.res.Resources.Theme)>
<android.accounts.IAccountManager: boolean renameSharedAccountAsUser(android.accounts.Account,java.lang.String,int)>
<com.android.internal.app.IAppOpsService: java.util.List getOpsForPackage(int,java.lang.String,int[])>
<android.os.Trace: void setAppTracingAllowed(boolean)>
<com.google.android.gles_jni.EGLImpl: javax.microedition.khronos.egl.EGLDisplay eglGetCurrentDisplay()>
<android.media.session.MediaController: void unregisterCallback(android.media.session.MediaController.Callback)>
<com.android.internal.appwidget.IAppWidgetHost: void viewDataChanged(int,int)>
<android.media.session.MediaSessionLegacyHelper: android.media.session.MediaSession getSession(android.app.PendingIntent)>
<android.bluetooth.IBluetooth: boolean enable()>
<android.database.MergeCursor: java.lang.String getString(int)>
<com.android.internal.view.menu.IconMenuView: void onRestoreInstanceState(android.os.Parcelable)>
<android.graphics.Bitmap: void prepareToDraw()>
<android.opengl.GLES20: void glShaderSource(int,java.lang.String)>
<android.net.MobileLinkQualityInfo: void setCdmaDbm(int)>
<android.telecom.Connection: int getCallCapabilities()>
<android.telephony.SignalStrength: int hashCode()>
<android.preference.PreferenceGroupAdapter: void setHighlightedDrawable(android.graphics.drawable.Drawable)>
<android.hardware.camera2.legacy.RequestThreadManager: void start()>
<android.widget.AnalogClock: void onSizeChanged(int,int,int,int)>
<android.inputmethodservice.SoftInputWindow: boolean onKeyLongPress(int,android.view.KeyEvent)>
<android.app.FragmentTransaction: android.app.FragmentTransaction attach(android.app.Fragment)>
<android.widget.TwoLineListItem: android.widget.TextView getText2()>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator scaleY(float)>
<android.graphics.drawable.ColorDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>
<android.widget.ListView: int getFooterViewsCount()>
<android.os.UserManager: java.util.List getProfiles(int)>
<com.android.internal.app.IVoiceInteractionManagerService: int startVoiceActivity(android.os.IBinder,android.content.Intent,java.lang.String)>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor open(java.io.File,int,android.os.Handler,android.os.ParcelFileDescriptor.OnCloseListener)>
<android.view.ActionMode: java.lang.Object getTag()>
<android.opengl.GLES31: void glGetProgramPipelineiv(int,int,int[],int)>
<android.bluetooth.IBluetoothHeadsetClient: boolean rejectIncomingConnect(android.bluetooth.BluetoothDevice)>
<android.filterpacks.imageproc.AutoFixFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<android.bluetooth.IBluetoothGattCallback: void onGetCharacteristic(java.lang.String,int,int,android.os.ParcelUuid,int,android.os.ParcelUuid,int)>
<android.widget.NumberPicker: void setEnabled(boolean)>
<android.widget.ActionMenuView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.internal.view.menu.BaseMenuPresenter: void setCallback(com.android.internal.view.menu.MenuPresenter.Callback)>
<com.android.internal.os.BatteryStatsImpl.Uid: void reportExcessiveWakeLocked(java.lang.String,long,long)>
<com.android.internal.view.menu.ListMenuPresenter: void restoreHierarchyState(android.os.Bundle)>
<android.util.EventLog.Event: int getThreadId()>
<android.telecom.VideoCallImpl: void requestCallDataUsage()>
<android.media.MediaRouter.UserRouteInfo: void requestUpdateVolume(int)>
<android.renderscript.Double4: android.renderscript.Double4 mul(android.renderscript.Double4,android.renderscript.Double4)>
<android.telephony.CellInfoGsm: java.lang.String toString()>
<android.filterfw.core.FilterPort: void open()>
<com.android.internal.http.multipart.Part: void sendDispositionHeader(java.io.OutputStream)>
<android.text.style.TtsSpan.DecimalBuilder: void <init>(java.lang.String,java.lang.String)>
<android.widget.FrameLayout.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<android.media.MediaFormat: long getLong(java.lang.String)>
<android.app.IActivityManager: void registerProcessObserver(android.app.IProcessObserver)>
<android.content.pm.PathPermission: void writeToParcel(android.os.Parcel,int)>
<android.filterpacks.numeric.SinWaveFilter: void setupPorts()>
<android.net.SamplingDataTracker: void resetSamplingData()>
<android.opengl.GLES11Ext: void glDrawTexfvOES(float[],int)>
<android.webkit.WebView.PrivateAccess: void setMeasuredDimension(int,int)>
<android.database.DataSetObservable: void notifyChanged()>
<com.android.internal.os.BatteryStatsImpl: int getDischargeAmountScreenOff()>
<android.net.ConnectivityManager: int tether(java.lang.String)>
<android.app.JobSchedulerImpl: java.util.List getAllPendingJobs()>
<android.preference.PreferenceActivity.Header: java.lang.CharSequence getSummary(android.content.res.Resources)>
<com.android.internal.view.menu.SubMenuBuilder: boolean isShortcutsVisible()>
<android.os.UserHandle: void writeToParcel(android.os.Parcel,int)>
<android.widget.CursorTreeAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)>
<android.media.session.ISession: void setExtras(android.os.Bundle)>
<android.content.ContextWrapper: java.io.File getCacheDir()>
<android.media.MediaMetadata: android.media.MediaDescription getDescription()>
<android.net.BaseNetworkStateTracker: void startSampling(android.net.SamplingDataTracker.SamplingSnapshot)>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDDstOver()>
<android.service.voice.VoiceInteractionService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.view.MenuItem.OnActionExpandListener: boolean onMenuItemActionExpand(android.view.MenuItem)>
<com.android.internal.telephony.ISub: int getSlotId(long)>
<android.widget.TextView: boolean isPaddingOffsetRequired()>
<android.filterpacks.imageproc.VignetteFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<com.android.internal.os.BatteryStatsImpl: void noteBluetoothOnLocked()>
<android.renderscript.Double3: android.renderscript.Double3 div(android.renderscript.Double3,double)>
<android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData.Builder addServiceUuid(android.os.ParcelUuid)>
<com.google.android.gles_jni.GLImpl: void glClipPlanex(int,int[],int)>
<android.bluetooth.BluetoothServerSocket: android.bluetooth.BluetoothSocket accept(int)>
<android.hardware.soundtrigger.SoundTrigger.SoundModelEvent: boolean equals(java.lang.Object)>
<android.renderscript.Mesh.TriangleMeshBuilder: void <init>(android.renderscript.RenderScript,int,int)>
<android.bluetooth.le.BluetoothLeAdvertiser: void startAdvertising(android.bluetooth.le.AdvertiseSettings,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseCallback)>
<android.widget.AlphabetIndexer: void onChanged()>
<android.webkit.WebViewProvider: android.webkit.WebViewProvider.ViewDelegate getViewDelegate()>
<android.database.CursorWindow: boolean isBlob(int,int)>
<android.app.MediaRouteActionProvider: boolean onPerformDefaultAction()>
<android.content.IntentFilter: int countDataSchemes()>
<com.android.internal.view.menu.MenuItemImpl: android.view.SubMenu getSubMenu()>
<android.view.RenderNodeAnimator: void start()>
<com.android.internal.widget.ResolverDrawerLayout: void onMeasure(int,int)>
<com.android.internal.os.ProcessCpuTracker: int onMeasureProcessName(java.lang.String)>
<android.transition.Transition: void pause(android.view.View)>
<android.net.http.RequestQueue: android.net.http.Request getRequest()>
<android.renderscript.Int2: android.renderscript.Int2 sub(android.renderscript.Int2,android.renderscript.Int2)>
<android.net.NetworkCapabilities: void setLinkUpstreamBandwidthKbps(int)>
<android.net.DnsPinger: void <init>(android.content.Context,java.lang.String,android.os.Looper,android.os.Handler,int)>
<android.app.Notification.WearableExtender: int getCustomContentHeight()>
<android.widget.AbsListView: void setScrollIndicators(android.view.View,android.view.View)>
<android.filterfw.core.Filter: void delayNextProcess(int)>
<android.media.AudioService: void notifyVolumeControllerVisible(android.media.IVolumeController,boolean)>
<com.android.internal.appwidget.IAppWidgetHost: void updateAppWidget(int,android.widget.RemoteViews)>
<android.util.Range: int hashCode()>
<android.nfc.TechListParcel: void writeToParcel(android.os.Parcel,int)>
<android.media.AudioManager: int getMode()>
<com.android.internal.widget.DrawableHolder: int getHeight()>
<android.text.StaticLayout: int getLineTop(int)>
<android.renderscript.Long2: void sub(long)>
<android.telephony.SubscriptionManager: java.util.List getSubInfoUsingIccId(java.lang.String)>
<android.os.PersistableBundle: void writeToParcel(android.os.Parcel,int)>
<android.widget.ImageView: void invalidateDrawable(android.graphics.drawable.Drawable)>
<android.content.Intent: boolean[] getBooleanArrayExtra(java.lang.String)>
<android.net.MobileDataStateTracker: java.lang.String networkTypeToApnType(int)>
<android.appwidget.AppWidgetManager: void bindAppWidgetId(int,android.content.ComponentName,android.os.Bundle)>
<com.android.internal.widget.ExploreByTouchHelper: void invalidateRoot()>
<android.app.NativeActivity: void onCreate(android.os.Bundle)>
<android.media.AudioService: int getCurrentAudioFocus()>
<android.view.WindowManagerInternal.MagnificationCallbacks: void onRotationChanged(int)>
<android.hardware.display.DisplayManager: void pauseWifiDisplay()>
<android.view.ViewParent: void childHasTransientStateChanged(android.view.View,boolean)>
<android.widget.ActionMenuView.LayoutParams: void <init>(android.widget.ActionMenuView.LayoutParams)>
<android.accounts.AccountManager: java.lang.String getPassword(android.accounts.Account)>
<android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean,android.text.TextUtils.TruncateAt,int)>
<android.service.dreams.DreamService: boolean isFullscreen()>
<android.view.accessibility.AccessibilityEvent: void setAction(int)>
<android.telephony.CellSignalStrengthLte: android.telephony.CellSignalStrengthLte copy()>
<android.widget.RadioGroup: android.widget.RadioGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.text.style.SuggestionSpan: void notifySelection(android.content.Context,java.lang.String,int)>
<android.net.http.SslCertificate: android.net.http.SslCertificate.DName getIssuedBy()>
<android.app.ActivityManagerProxy: void activityStopped(android.os.IBinder,android.os.Bundle,android.os.PersistableBundle,java.lang.CharSequence)>
<android.media.AudioManager: void registerRemoteControlClient(android.media.RemoteControlClient)>
<android.print.PrintDocumentInfo: int describeContents()>
<android.printservice.PrintJob: int hashCode()>
<android.view.KeyEvent: int getRepeatCount()>
<android.view.TextureView: void buildLayer()>
<android.drm.DrmRights: java.lang.String getAccountId()>
<android.webkit.WebIconDatabase: android.webkit.WebIconDatabase getInstance()>
<com.android.internal.os.BatteryStatsImpl: long computeRealtime(long,int)>
<android.text.method.DialerKeyListener: android.text.method.DialerKeyListener getInstance()>
<android.os.Debug.MemoryInfo: java.lang.String getOtherLabel(int)>
<android.renderscript.Byte2: void mul(byte)>
<android.telephony.TelephonyManager: java.lang.String getNetworkOperator(long)>
<android.os.Binder: boolean pingBinder()>
<android.app.NotificationManager: void notify(java.lang.String,int,android.app.Notification)>
<android.app.backup.BackupTransport: java.lang.String transportDirName()>
<android.graphics.Paint: int getBidiFlags()>
<android.os.PerformanceCollector.PerformanceResultsWriter: void writeStartTiming(java.lang.String)>
<android.hardware.location.GeofenceHardwareImpl: void reportGeofenceTransition(int,android.location.Location,int,long,int,int)>
<android.app.LocalActivityManager: void dispatchStop()>
<android.content.ClipData.Item: java.lang.String getHtmlText()>
<android.webkit.CacheManager.CacheResult: java.lang.String getLastModified()>
<android.view.KeyEvent: java.lang.String metaStateToString(int)>
<com.android.internal.telephony.ISms: void sendDataForSubscriber(long,java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>
<android.widget.Gallery: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityWindowInfo getParent()>
<android.graphics.Interpolator: void finalize()>
<android.text.Layout: int getParagraphLeft(int)>
<android.media.MediaDrm: android.media.MediaDrm.KeyRequest getKeyRequest(byte[],byte[],java.lang.String,int,java.util.HashMap)>
<android.hardware.camera2.legacy.RequestHolder: android.hardware.camera2.CaptureRequest getRequest()>
<android.view.RenderNodeAnimator: android.animation.TimeInterpolator getInterpolator()>
<android.opengl.GLUtils: void texImage2D(int,int,android.graphics.Bitmap,int)>
<android.media.projection.IMediaProjection: int applyVirtualDisplayFlags(int)>
<android.content.res.Resources: android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[])>
<com.android.internal.view.animation.FallbackLUTInterpolator: void <init>(android.animation.TimeInterpolator,long)>
<android.view.ActionProvider: boolean hasSubMenu()>
<android.hardware.hdmi.HdmiClient: void sendKeyEvent(int,boolean)>
<android.app.AlertDialog: void setMessage(java.lang.CharSequence)>
<android.text.style.ForegroundColorSpan: int getSpanTypeId()>
<com.android.internal.os.BatteryStatsImpl: void notePhoneOnLocked()>
<android.graphics.drawable.RippleDrawable: android.graphics.Rect getDirtyBounds()>
<android.filterfw.core.GLFrame: void generateMipMap()>
<android.database.DatabaseUtils: java.lang.String stringForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>
<android.net.NetworkMisc: int describeContents()>
<android.webkit.WebView: void saveWebArchive(java.lang.String)>
<android.content.Context: void sendStickyBroadcast(android.content.Intent)>
<android.view.MotionEvent.PointerCoords: android.view.MotionEvent.PointerCoords[] createArray(int)>
<android.graphics.drawable.ColorDrawable: void setTintList(android.content.res.ColorStateList)>
<android.media.MediaPlayer: void addTimedTextSource(java.io.FileDescriptor,java.lang.String)>
<android.app.ActionBar: void setDisplayOptions(int,int)>
<android.filterpacks.imageproc.DocumentaryFilter: void <init>(java.lang.String)>
<android.view.Window: void setCloseOnTouchOutside(boolean)>
<android.os.Debug: int getThreadAllocCount()>
<android.text.style.TtsSpan.MeasureBuilder: android.text.style.TtsSpan.MeasureBuilder setIntegerPart(long)>
<android.app.ExpandableListActivity: android.widget.ExpandableListView getExpandableListView()>
<android.filterfw.core.NativeProgram: void <init>(java.lang.String,java.lang.String)>
<android.content.ContextWrapper: void enforceCallingPermission(java.lang.String,java.lang.String)>
<android.app.Notification.Builder: android.app.Notification.Builder setOngoing(boolean)>
<android.service.dreams.DreamService: boolean isScreenBright()>
<android.view.ScaleGestureDetector: long getEventTime()>
<android.view.ViewGroup: boolean isAlwaysDrawnWithCacheEnabled()>
<android.media.AudioManager: void <init>(android.content.Context)>
<com.android.internal.widget.multiwaveview.GlowPadView: void setVibrateEnabled(boolean)>
<android.app.ExpandableListActivity: boolean setSelectedChild(int,int,boolean)>
<android.filterfw.io.GraphReader: android.filterfw.core.KeyValueMap readKeyValueAssignments(java.lang.String)>
<android.view.textservice.TextServicesManager: void setSpellCheckerEnabled(boolean)>
<com.google.android.util.AbstractMessageParser.Photo: java.util.List getInfo()>
<android.net.ConnectivityManager: void removeDefaultNetworkActiveListener(android.net.ConnectivityManager.OnNetworkActiveListener)>
<android.media.session.ISessionController: android.content.pm.ParceledListSlice getQueue()>
<com.android.internal.widget.ActionBarOverlayLayout: void initFeature(int)>
<android.graphics.drawable.ColorDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>
<android.net.ConnectivityManager: boolean requestRouteToHost(int,int)>
<com.android.net.IProxyPortListener: void setProxyPort(int)>
<android.net.http.RequestHandle: java.lang.String authorizationHeader(boolean)>
<android.telephony.ServiceState: void setRilDataRadioTechnology(int)>
<android.bluetooth.IBluetoothA2dp: boolean isAvrcpAbsoluteVolumeSupported()>
<android.graphics.drawable.BitmapDrawable: void setTileModeX(android.graphics.Shader.TileMode)>
<android.media.MediaDescription.Builder: android.media.MediaDescription.Builder setIconUri(android.net.Uri)>
<android.opengl.GLES31: void glBindImageTexture(int,int,int,boolean,int,int,int)>
<android.view.accessibility.CaptioningManager.CaptionStyle: boolean hasEdgeType()>
<android.app.IActivityManager: android.app.ActivityManager.StackInfo getStackInfo(int)>
<android.net.wifi.WifiScanner.OperationResult: int describeContents()>
<android.util.ArraySet: boolean retainAll(java.util.Collection)>
<android.hardware.usb.UsbEndpoint: int getType()>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofMultiInt(java.lang.Object,java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,java.lang.Object[])>
<android.speech.srec.WaveHeader: void <init>(short,short,int,short,int)>
<android.app.NotificationManager: void notify(int,android.app.Notification)>
<android.net.LinkProperties: java.lang.String getDomains()>
<android.graphics.ColorMatrix: void postConcat(android.graphics.ColorMatrix)>
<android.service.persistentdata.IPersistentDataBlockService: byte[] read()>
<android.security.KeyChain: android.content.Intent createInstallIntent()>
<android.database.DatabaseUtils: void cursorStringToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues)>
<android.renderscript.ScriptIntrinsicHistogram: android.renderscript.ScriptIntrinsicHistogram create(android.renderscript.RenderScript,android.renderscript.Element)>
<android.media.MediaMetadataRetriever: void release()>
<android.widget.AbsSeekBar: void <init>(android.content.Context,android.util.AttributeSet)>
<android.app.IActivityManager: void updateConfiguration(android.content.res.Configuration)>
<android.nfc.tech.MifareClassic: boolean isEmulated()>
<android.widget.MediaController.MediaPlayerControl: int getCurrentPosition()>
<android.util.DisplayMetrics: void setToDefaults()>
<android.widget.RemoteViews.ActionException: void <init>(java.lang.Exception)>
<com.android.internal.backup.IBackupTransport: int finishBackup()>
<android.opengl.GLES20: void glTexParameteriv(int,int,int[],int)>
<android.opengl.GLES20: int glGetUniformLocation(int,java.lang.String)>
<android.telephony.gsm.GsmCellLocation: void setPsc(int)>
<android.net.wifi.WifiConfiguration: void <init>(android.net.wifi.WifiConfiguration)>
<android.os.PerformanceCollector: void addMeasurement(java.lang.String,java.lang.String)>
<android.util.JsonWriter: boolean isLenient()>
<android.content.ContentValues: void clear()>
<android.view.ViewRootImpl: void onNestedScroll(android.view.View,int,int,int,int)>
<android.content.res.Configuration: int diff(android.content.res.Configuration)>
<android.hardware.Camera.Parameters: void setAutoWhiteBalanceLock(boolean)>
<android.net.wifi.p2p.WifiP2pManager: void listen(android.net.wifi.p2p.WifiP2pManager.Channel,boolean,android.net.wifi.p2p.WifiP2pManager.ActionListener)>
<android.inputmethodservice.KeyboardView: android.inputmethodservice.KeyboardView.OnKeyboardActionListener getOnKeyboardActionListener()>
<android.content.pm.LabeledIntent: void <init>(android.os.Parcel)>
<android.graphics.FontFamily: void <init>(java.lang.String,java.lang.String)>
<android.widget.Toolbar: void setNavigationOnClickListener(android.view.View.OnClickListener)>
<android.text.TextUtils: int unpackRangeEndFromLong(long)>
<android.widget.AnalogClock: void onAttachedToWindow()>
<android.renderscript.Allocation: void copy1DRangeFrom(int,int,int[])>
<android.renderscript.FieldPacker: android.renderscript.Int3 subInt3()>
<android.view.View: int getRawTextDirection()>
<android.util.Base64: byte[] encode(byte[],int,int,int)>
<android.widget.Chronometer.OnChronometerTickListener: void onChronometerTick(android.widget.Chronometer)>
<com.android.internal.widget.DecorToolbar: boolean hasIcon()>
<android.media.MediaPlayer: void setOnCompletionListener(android.media.MediaPlayer.OnCompletionListener)>
<android.os.Parcel: void writeStrongInterface(android.os.IInterface)>
<android.view.WindowInsets: android.view.WindowInsets consumeWindowDecorInsets(boolean,boolean,boolean,boolean)>
<android.net.IConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
<android.telecom.InCallAdapter: void conference(java.lang.String,java.lang.String)>
<com.android.internal.widget.LockPatternView: void onSizeChanged(int,int,int,int)>
<android.os.Bundle: android.util.SizeF getSizeF(java.lang.String)>
<com.android.internal.util.MemInfoReader: long getSwapFreeSizeKb()>
<android.ddm.DdmHandleNativeHeap: void disconnected()>
<com.android.internal.view.menu.MenuBuilder: void clearAll()>
<android.app.IActivityManager: boolean launchAssistIntent(android.content.Intent,int,java.lang.String,int)>
<android.view.inputmethod.CorrectionInfo: java.lang.String toString()>
<android.provider.DocumentsProvider: java.lang.String getType(android.net.Uri)>
<android.webkit.JsResult: void <init>(android.webkit.JsResult.ResultReceiver)>
<android.net.NetworkQuotaInfo: int describeContents()>
<android.animation.Animator: void addPauseListener(android.animation.Animator.AnimatorPauseListener)>
<android.widget.TextView: boolean hasOverlappingRendering()>
<com.android.internal.widget.AutoScrollHelper: boolean isEnabled()>
<android.app.ActivityManagerProxy: void setProcessLimit(int)>
<android.content.Intent: android.content.Intent setDataAndNormalize(android.net.Uri)>
<android.nfc.cardemulation.ApduServiceInfo: int hashCode()>
<com.android.internal.util.StateMachine: java.lang.String getWhatToString(int)>
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setEnabled(boolean)>
<android.filterpacks.imageproc.BrightnessFilter: void <init>(java.lang.String)>
<android.view.ViewRootImpl: boolean isLayoutDirectionResolved()>
<android.filterfw.core.SyncRunner: void waitUntilWake()>
<android.graphics.pdf.PdfRenderer.Page: int getWidth()>
<android.accessibilityservice.AccessibilityService.IAccessibilityServiceClientWrapper: void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.os.BaseBundle: java.lang.String[] getStringArray(java.lang.String)>
<com.android.internal.view.menu.ActionMenuItem: android.view.ContextMenu.ContextMenuInfo getMenuInfo()>
<android.view.inputmethod.InputMethodSession: void dispatchTrackballEvent(int,android.view.MotionEvent,android.view.inputmethod.InputMethodSession.EventCallback)>
<android.media.audiofx.LoudnessEnhancer: void setProperties(android.media.audiofx.LoudnessEnhancer.Settings)>
<android.view.inputmethod.InputConnectionWrapper: boolean setSelection(int,int)>
<android.app.Activity: void takeKeyEvents(boolean)>
<com.android.internal.view.IInputMethodManager: boolean switchToLastInputMethod(android.os.IBinder)>
<android.app.IActivityManager: void startLockTaskMode(int)>
<android.opengl.EGL14: boolean eglQueryContext(android.opengl.EGLDisplay,android.opengl.EGLContext,int,int[],int)>
<com.android.internal.app.ToolbarActionBar: void removeOnMenuVisibilityListener(android.app.ActionBar.OnMenuVisibilityListener)>
<android.view.View: void postInvalidateOnAnimation()>
<android.app.Activity: void startActivities(android.content.Intent[],android.os.Bundle)>
<android.renderscript.Script: long getVarJ(int)>
<android.widget.ExpandableListView: long getPackedPositionForGroup(int)>
<android.app.DialogFragment: void onStart()>
<android.widget.RemoteViewsAdapter: boolean isEmpty()>
<android.provider.SearchIndexablesProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
<android.app.TimePickerDialog: void onClick(android.content.DialogInterface,int)>
<android.graphics.drawable.Drawable: void setTintList(android.content.res.ColorStateList)>
<com.android.internal.telephony.ISms: boolean enableCellBroadcast(int)>
<com.android.internal.view.InputConnectionWrapper: boolean requestCursorUpdates(int)>
<android.filterfw.core.Filter: java.lang.String toString()>
<android.graphics.drawable.PictureDrawable: int getIntrinsicHeight()>
<android.content.res.AssetManager.AssetInputStream: int getAssetInt()>
<android.widget.AbsSpinner: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.util.LongSparseArray: android.util.LongSparseArray clone()>
<android.graphics.SurfaceTexture: void getTransformMatrix(float[])>
<android.opengl.GLES30: void glVertexAttribIPointer(int,int,int,int,int)>
<android.app.IActivityManager: void performIdleMaintenance()>
<android.app.IActivityManager: boolean shouldUpRecreateTask(android.os.IBinder,java.lang.String)>
<android.view.MotionEvent: void addBatch(long,float,float,float,float,int)>
<android.net.LocalSocket: boolean isInputShutdown()>
<android.view.Window: android.os.Bundle saveHierarchyState()>
<com.android.internal.os.BatteryStatsImpl: int getHighDischargeAmountSinceCharge()>
<android.media.AudioSystem: java.lang.String getParameters(java.lang.String)>
<android.location.Geocoder: boolean isPresent()>
<android.telecom.Conference.Listener: void onDestroyed(android.telecom.Conference)>
<android.view.accessibility.CaptioningManager: java.lang.String getRawLocale()>
<android.view.WindowManager.LayoutParams: void <init>(int,int,int,int,int)>
<com.android.internal.os.BatteryStatsImpl.Uid.Pkg: void onTimeStopped(long,long,long)>
<android.renderscript.Allocation: void copyTo(java.lang.Object)>
<android.hardware.camera2.params.StreamConfigurationMap: int[] getInputFormats()>
<android.filterfw.core.Frame: void setInts(int[])>
<android.widget.DatePicker: void setValidationCallback(android.widget.DatePicker.ValidationCallback)>
<android.view.WindowManagerGlobal: android.view.IWindowSession peekWindowSession()>
<android.renderscript.Float2: void sub(float)>
<android.webkit.WebView: void clearSslPreferences()>
<android.graphics.PointF: float length()>
<android.location.LocationManager: void removeNmeaListener(android.location.GpsStatus.NmeaListener)>
<com.android.internal.util.AsyncService: void onCreate()>
<android.view.textservice.TextServicesManager: boolean isSpellCheckerEnabled()>
<android.view.MotionEvent: void getPointerCoords(int,android.view.MotionEvent.PointerCoords)>
<android.print.IPrintManager: void restartPrintJob(android.print.PrintJobId,int,int)>
<android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData.Builder setIncludeTxPowerLevel(boolean)>
<android.widget.TextClock: void <init>(android.content.Context,android.util.AttributeSet)>
<android.view.View: boolean isLayoutRequested()>
<android.bluetooth.BluetoothHealthAppConfiguration: void writeToParcel(android.os.Parcel,int)>
<android.view.ViewParent: boolean canResolveLayoutDirection()>
<android.telecom.Call.Details: android.telecom.GatewayInfo getGatewayInfo()>
<android.net.UrlQuerySanitizer: void addSanitizedEntry(java.lang.String,java.lang.String)>
<android.view.Display: void getRealSize(android.graphics.Point)>
<android.inputmethodservice.Keyboard.Row: void <init>(android.inputmethodservice.Keyboard)>
<android.net.NetworkUtils: int prefixLengthToNetmaskInt(int)>
<android.media.MediaCrypto: boolean isCryptoSchemeSupported(java.util.UUID)>
<android.util.ArrayMap: void <init>(android.util.ArrayMap)>
<android.graphics.RectF: int describeContents()>
<com.android.internal.util.HexDump: java.lang.String dumpHexString(byte[])>
<android.telephony.IccOpenLogicalChannelResponse: byte[] getSelectResponse()>
<android.bluetooth.IBluetoothManager: java.lang.String getAddress()>
<android.widget.CalendarView: void setWeekSeparatorLineColor(int)>
<android.content.pm.MacAuthenticatedInputStream: int read()>
<android.media.audiofx.PresetReverb: void setParameterListener(android.media.audiofx.PresetReverb.OnParameterChangeListener)>
<android.view.View.BaseSavedState: void <init>(android.os.Parcel)>
<android.telecom.ConnectionService: void onConference(android.telecom.Connection,android.telecom.Connection)>
<android.accounts.IAccountManager: void confirmCredentialsAsUser(android.accounts.IAccountManagerResponse,android.accounts.Account,android.os.Bundle,boolean,int)>
<android.renderscript.RenderScriptGL: void setSurface(android.view.SurfaceHolder,int,int)>
<android.preference.MultiCheckPreference: java.lang.CharSequence getSummary()>
<android.location.GpsMeasurementsEvent: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.inputmethod.InputMethodUtils.InputMethodSettings: int getCurrentUserId()>
<android.media.audiofx.Equalizer.OnParameterChangeListener: void onParameterChange(android.media.audiofx.Equalizer,int,int,int,int)>
<com.google.android.gles_jni.GLImpl: void glColorPointer(int,int,int,java.nio.Buffer)>
<android.app.ActionBar: void setLogo(android.graphics.drawable.Drawable)>
<android.net.http.HttpAuthHeader: void setUsername(java.lang.String)>
<android.inputmethodservice.Keyboard.Key: void <init>(android.content.res.Resources,android.inputmethodservice.Keyboard.Row,int,int,android.content.res.XmlResourceParser)>
<android.os.Message: java.lang.Runnable getCallback()>
<android.net.Uri: java.util.Set getQueryParameterNames()>
<android.view.View: void setMinimumWidth(int)>
<android.security.AndroidKeyStore: boolean engineContainsAlias(java.lang.String)>
<android.location.Location: void dump(android.util.Printer,java.lang.String)>
<android.net.http.SslCertificate: android.net.http.SslCertificate restoreState(android.os.Bundle)>
<com.android.internal.widget.AccessibleDateAnimator: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.content.CursorLoader: void onCanceled(android.database.Cursor)>
<com.android.internal.os.storage.ExternalStorageFormatter: int onStartCommand(android.content.Intent,int,int)>
<android.content.pm.PackageManager: java.util.List queryIntentContentProviders(android.content.Intent,int)>
<android.media.RemoteController: java.lang.String getRemoteControlClientPackageName()>
<android.os.BatteryProperties: void writeToParcel(android.os.Parcel,int)>
<android.opengl.GLES20: void glDeleteFramebuffers(int,java.nio.IntBuffer)>
<android.view.View: int getScrollBarStyle()>
<android.os.HandlerThread: void onLooperPrepared()>
<android.net.IpConfiguration: java.lang.String toString()>
<android.text.Layout: void draw(android.graphics.Canvas)>
<android.hardware.display.IDisplayManager: void forgetWifiDisplay(java.lang.String)>
<android.transition.Recolor: void captureStartValues(android.transition.TransitionValues)>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getDrawable(java.lang.String,int,android.content.pm.ApplicationInfo)>
<android.opengl.GLES31: void glProgramUniformMatrix3x2fv(int,int,int,boolean,float[],int)>
<android.widget.ExpandableListView: void onRestoreInstanceState(android.os.Parcelable)>
<android.database.sqlite.SQLiteStatement: android.os.ParcelFileDescriptor simpleQueryForBlobFileDescriptor()>
<android.graphics.drawable.NinePatchDrawable: boolean isAutoMirrored()>
<android.transition.TransitionManager: void transitionTo(android.transition.Scene)>
<android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout.Alignment,android.text.TextDirectionHeuristic,float,float,boolean,android.text.TextUtils.TruncateAt,int,int)>
<android.content.SyncContext: void <init>(android.content.ISyncContext)>
<com.android.internal.app.WindowDecorActionBar.TabImpl: android.view.View getCustomView()>
<com.google.android.util.AbstractMessageParser.Video: java.lang.String getURL(java.lang.String,java.lang.String)>
<android.content.IntentFilter: boolean hasDataSchemeSpecificPart(android.os.PatternMatcher)>
<android.hardware.location.ActivityRecognitionEvent: void writeToParcel(android.os.Parcel,int)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture renameAccount(android.accounts.Account,java.lang.String,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.view.animation.ClipRectAnimation: boolean willChangeTransformationMatrix()>
<android.widget.CompoundButton: void <init>(android.content.Context)>
<android.os.INetworkManagementService: java.lang.String[] listInterfaces()>
<android.renderscript.Int3: android.renderscript.Int3 sub(android.renderscript.Int3,android.renderscript.Int3)>
<android.filterpacks.videosink.MediaEncoderFilter: void prepare(android.filterfw.core.FilterContext)>
<android.media.tv.TvStreamConfig.Builder: android.media.tv.TvStreamConfig.Builder type(int)>
<android.widget.Chronometer: java.lang.String getFormat()>
<android.content.ContentResolver: java.lang.String getPackageName()>
<android.text.style.AbsoluteSizeSpan: int describeContents()>
<android.widget.OverScroller: int getStartY()>
<com.android.server.NetworkManagementSocketTagger: void install()>
<android.renderscript.FieldPacker: android.renderscript.Double3 subDouble3()>
<android.renderscript.Long3: void mul(android.renderscript.Long3)>
<android.content.IntentFilter: android.os.PatternMatcher getDataPath(int)>
<android.renderscript.Short3: android.renderscript.Short3 mul(android.renderscript.Short3,short)>
<android.os.BinderProxy: void linkToDeath(android.os.IBinder.DeathRecipient,int)>
<android.filterpacks.base.FrameBranch: void setupPorts()>
<android.content.ContextWrapper: void unregisterReceiver(android.content.BroadcastReceiver)>
<android.view.View: void setRotation(float)>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getApplicationLogo(android.content.pm.ApplicationInfo)>
<android.content.SyncContext: android.os.IBinder getSyncContextBinder()>
<android.database.sqlite.SQLiteStatement: long simpleQueryForLong()>
<android.view.ViewGroup: void captureTransitioningViews(java.util.List)>
<android.content.ContextWrapper: java.io.File getDatabasePath(java.lang.String)>
<android.renderscript.FieldPacker: android.renderscript.Matrix4f subMatrix4f()>
<android.text.Layout: float getSpacingMultiplier()>
<android.text.util.Rfc822Token: void setAddress(java.lang.String)>
<android.widget.TextView: boolean bringPointIntoView(int)>
<android.renderscript.Short2: void sub(android.renderscript.Short2)>
<android.app.SharedElementCallback: android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF)>
<android.opengl.GLES11Ext: void glTexEnvxOES(int,int,int)>
<android.media.TimedText.Style: void <init>(int,int,int,boolean,boolean,boolean,int,int)>
<android.widget.RadioGroup.OnCheckedChangeListener: void onCheckedChanged(android.widget.RadioGroup,int)>
<android.bluetooth.IBluetoothHeadsetClient: boolean connectAudio()>
<android.content.res.AssetManager: java.io.InputStream openNonAsset(int,java.lang.String,int)>
<android.text.method.NumberKeyListener: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>
<android.content.CursorLoader: void setSelection(java.lang.String)>
<com.android.internal.widget.multiwaveview.PointCloud.GlowManager: void setRadius(float)>
<android.hardware.camera2.marshal.impl.MarshalQueryableRect: android.hardware.camera2.marshal.Marshaler createMarshaler(android.hardware.camera2.utils.TypeReference,int)>
<android.media.MediaPlayer: void setDataSource(java.lang.String)>
<android.text.Layout: void increaseWidthTo(int)>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getActivityLogo(android.content.Intent)>
<android.app.DownloadManager: long addCompletedDownload(java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,long,boolean)>
<android.graphics.Matrix: boolean equals(java.lang.Object)>
<android.os.Parcel: void writeString(java.lang.String)>
<android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityWindowInfo getChild(int)>
<com.android.internal.content.PackageHelper: java.lang.String getSdFilesystem(java.lang.String)>
<com.android.internal.widget.DecorToolbar: void setNavigationContentDescription(int)>
<android.content.res.CompatibilityInfo: boolean neverSupportsScreen()>
<android.content.res.Configuration: int hashCode()>
<android.webkit.WebViewProvider.ViewDelegate: void onDrawVerticalScrollBar(android.graphics.Canvas,android.graphics.drawable.Drawable,int,int,int,int)>
<android.os.IBinder: void linkToDeath(android.os.IBinder.DeathRecipient,int)>
<android.app.AppOpsManager: int startOp(java.lang.String,int,java.lang.String)>
<android.view.animation.RotateAnimation: void <init>(float,float)>
<android.os.WorkSource: void set(int,java.lang.String)>
<android.widget.TextView: boolean performAccessibilityAction(int,android.os.Bundle)>
<android.view.AccessibilityIterators.AbstractTextSegmentIterator: int[] getRange(int,int)>
<com.google.android.util.AbstractMessageParser.Token: com.google.android.util.AbstractMessageParser.Token.Type getType()>
<android.view.WindowManagerPolicy.WindowState: android.graphics.Rect getGivenVisibleInsetsLw()>
<android.view.accessibility.AccessibilityRecord: void setFromIndex(int)>
<android.app.ActionBar: void setDisplayShowCustomEnabled(boolean)>
<android.util.Base64InputStream: int available()>
<android.content.pm.PackageManager: android.content.res.Resources getResourcesForApplicationAsUser(java.lang.String,int)>
<android.net.wifi.p2p.WifiP2pManager: void removeServiceRequest(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.nsd.WifiP2pServiceRequest,android.net.wifi.p2p.WifiP2pManager.ActionListener)>
<com.android.internal.util.StateMachine: android.os.Message obtainMessage(int,int,int,java.lang.Object)>
<android.content.ContextWrapper: android.os.Looper getMainLooper()>
<android.app.admin.DevicePolicyManager: void setPasswordExpirationTimeout(android.content.ComponentName,long)>
<android.widget.DatePicker.DatePickerDelegate: void updateDate(int,int,int)>
<android.widget.FilterQueryProvider: android.database.Cursor runQuery(java.lang.CharSequence)>
<android.widget.AbsListView: int getListPaddingLeft()>
<com.android.internal.os.BatteryStatsImpl.Timer: int getCountLocked(int)>
<android.graphics.drawable.RippleDrawable: boolean isProjected()>
<android.media.effect.effects.VignetteEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>
<android.media.tv.ITvInputSessionCallback: void onTracksChanged(java.util.List)>
<android.hardware.soundtrigger.IRecognitionStatusCallback: void onDetected(android.hardware.soundtrigger.SoundTrigger.KeyphraseRecognitionEvent)>
<android.widget.ShareActionProvider: void <init>(android.content.Context)>
<android.util.ArrayMap: void <init>(int)>
<android.app.IActivityManager: void unstableProviderDied(android.os.IBinder)>
<android.os.StrictMode: void noteDiskRead()>
<android.app.admin.IDevicePolicyManager: void setPasswordMinimumLetters(android.content.ComponentName,int,int)>
<android.widget.ListPopupWindow: void setHeight(int)>
<android.provider.ContactsContract.RawContacts: android.content.EntityIterator newEntityIterator(android.database.Cursor)>
<android.transition.ChangeText: int getChangeBehavior()>
<android.telecom.Conference: void onSeparate(android.telecom.Connection)>
<android.inputmethodservice.InputMethodService: android.app.Dialog getWindow()>
<android.media.TtmlUtils: java.lang.String extractText(android.media.TtmlNode,long,long)>
<android.renderscript.FieldPacker: void addI64(android.renderscript.Long2)>
<android.widget.ListPopupWindow: void clearListSelection()>
<android.widget.VideoView: void setOnErrorListener(android.media.MediaPlayer.OnErrorListener)>
<android.media.tv.TvContentRatingSystemInfo: android.net.Uri getXmlUri()>
<android.content.Intent: java.lang.Object clone()>
<android.os.CommonTimeConfig: int getPanicThreshold()>
<android.widget.ExpandableListView: void setChildIndicatorBounds(int,int)>
<android.webkit.PluginList: void pluginClicked(android.content.Context,int)>
<android.media.session.MediaController.TransportControls: void setRating(android.media.Rating)>
<android.app.ActivityGroup: void onPause()>
<android.renderscript.Short3: android.renderscript.Short3 add(android.renderscript.Short3,android.renderscript.Short3)>
<android.view.ViewRootImpl: void setDrawDuringWindowsAnimating(boolean)>
<android.text.style.TtsSpan.MoneyBuilder: android.text.style.TtsSpan.MoneyBuilder setIntegerPart(long)>
<android.database.AbstractCursor: void unregisterDataSetObserver(android.database.DataSetObserver)>
<android.webkit.WebViewProvider.ViewDelegate: void onDetachedFromWindow()>
<com.android.internal.app.IMediaContainerService: android.content.pm.PackageInfoLite getMinimalPackageInfo(java.lang.String,int,java.lang.String)>
<com.android.server.NetworkManagementSocketTagger: void setThreadSocketStatsUid(int)>
<android.media.MediaDrm.Certificate: byte[] getWrappedPrivateKey()>
<android.hardware.usb.UsbDeviceConnection: int bulkTransfer(android.hardware.usb.UsbEndpoint,byte[],int,int)>
<android.hardware.camera2.legacy.CaptureCollector: android.util.Pair jpegProduced()>
<android.filterfw.core.Frame: void setFormat(android.filterfw.core.FrameFormat)>
<android.graphics.drawable.ShapeDrawable: void setShape(android.graphics.drawable.shapes.Shape)>
<com.android.internal.view.menu.IconMenuView: int getLayoutNumRows()>
<android.telephony.TelephonyManager: int getCdmaEriIconMode()>
<android.app.admin.DevicePolicyManager: void setCrossProfileCallerIdDisabled(android.content.ComponentName,boolean)>
<android.widget.GridLayout: void requestLayout()>
<android.widget.CalendarView: long getMinDate()>
<android.app.LocalActivityManager: void removeAllActivities()>
<android.speech.tts.TtsEngines: java.util.List getEngines()>
<android.hardware.usb.UsbRequest: boolean cancel()>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest: android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest newInstance(java.lang.String,java.lang.String)>
<android.graphics.Canvas: void setScreenDensity(int)>
<android.graphics.Outline: void <init>(android.graphics.Outline)>
<android.mtp.MtpStorageInfo: java.lang.String getVolumeIdentifier()>
<com.android.internal.view.IInputMethodSession: void updateSelection(int,int,int,int,int,int)>
<android.telecom.ParcelableCall: android.os.Bundle getExtras()>
<android.view.ViewGroup: int indexOfChild(android.view.View)>
<com.android.internal.app.ToolbarActionBar: void addTab(android.app.ActionBar.Tab,int,boolean)>
<android.os.PowerManager.WakeLock: void setWorkSource(android.os.WorkSource)>
<com.android.internal.widget.AbsActionBarView: void setVisibility(int)>
<android.net.wifi.WifiInfo: void writeToParcel(android.os.Parcel,int)>
<android.media.MediaSyncEvent: int getType()>
<android.text.BoringLayout.Metrics: java.lang.String toString()>
<android.view.ScaleGestureDetector: float getFocusY()>
<android.printservice.PrintServiceInfo: void writeToParcel(android.os.Parcel,int)>
<android.widget.SimpleExpandableListAdapter: long getGroupId(int)>
<android.transition.PathMotion: android.graphics.Path getPath(float,float,float,float)>
<android.app.job.JobInfo: boolean isRequireCharging()>
<android.view.accessibility.IAccessibilityManager: java.util.List getEnabledAccessibilityServiceList(int,int)>
<android.app.Instrumentation: void start()>
<android.widget.AbsSeekBar: void setProgress(int,boolean)>
<android.database.DatabaseUtils: java.lang.String sqlEscapeString(java.lang.String)>
<android.os.UserManager: void setUserEnabled(int)>
<android.widget.TextSwitcher: void <init>(android.content.Context,android.util.AttributeSet)>
<android.nfc.NfcActivityManager: void setReaderMode(android.os.Binder,int,android.os.Bundle)>
<android.widget.DatePickerController: void setFirstDayOfWeek(int)>
<android.drm.DrmEvent: java.lang.String getMessage()>
<android.hardware.camera2.impl.CameraMetadataNative: void set(android.hardware.camera2.impl.CameraMetadataNative.Key,java.lang.Object)>
<android.media.audiofx.Equalizer: short[] getBandLevelRange()>
<android.content.IRestrictionsManager: void notifyPermissionResponse(java.lang.String,android.os.PersistableBundle)>
<com.android.internal.widget.WaveView: void onAnimationUpdate(android.animation.ValueAnimator)>
<android.app.Dialog: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.view.WindowManagerGlobal: void removeView(android.view.View,boolean)>
<android.view.Window: void setDefaultIcon(int)>
<android.media.MediaRecorder: void setAudioEncoder(int)>
<android.util.ArraySet: boolean addAll(java.util.Collection)>
<com.android.internal.app.AlertController: void installContent()>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender clearPages()>
<android.widget.CalendarView.CalendarViewDelegate: int getWeekDayTextAppearance()>
<android.bluetooth.IBluetoothHeadsetClient: boolean stopVoiceRecognition(android.bluetooth.BluetoothDevice)>
<com.android.internal.telecom.IConnectionService: void reject(java.lang.String)>
<com.android.internal.backup.LocalTransport: long requestFullBackupTime()>
<android.net.wifi.WifiEnterpriseConfig: void setEapMethod(int)>
<android.security.KeyStore: byte[] getPubkey(java.lang.String)>
<android.nfc.NfcAdapter: void enableReaderMode(android.app.Activity,android.nfc.NfcAdapter.ReaderCallback,int,android.os.Bundle)>
<android.media.session.ISessionCallback: void onRate(android.media.Rating)>
<com.android.internal.net.VpnProfile: com.android.internal.net.VpnProfile decode(java.lang.String,byte[])>
<android.content.ContextWrapper: java.io.File getFilesDir()>
<android.inputmethodservice.InputMethodService: void onUpdateExtractedText(int,android.view.inputmethod.ExtractedText)>
<android.webkit.WebView: int getProgress()>
<android.view.animation.AnimationSet: long computeDurationHint()>
<android.telecom.Phone: void setAudioRoute(int)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofMultiFloat(java.lang.String,android.graphics.Path)>
<android.app.ActivityManagerProxy: android.os.IBinder peekService(android.content.Intent,java.lang.String)>
<android.telephony.SubscriptionManager: int setDataRoaming(int,long)>
<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver,int)>
<android.widget.DigitalClock: void <init>(android.content.Context)>
<android.view.OrientationListener: void onOrientationChanged(int)>
<android.net.wifi.WifiConfiguration: java.lang.String configKey(android.net.wifi.ScanResult)>
<android.widget.SlidingDrawer.OnDrawerScrollListener: void onScrollEnded()>
<android.database.AbstractCursor: int getPosition()>
<android.app.ActivityManager: boolean isRunningInTestHarness()>
<com.android.internal.util.IndentingPrintWriter: void printPair(java.lang.String,java.lang.Object)>
<android.bluetooth.IBluetoothGattCallback: void onClientConnectionState(int,int,boolean,java.lang.String)>
<android.widget.CalendarView.CalendarViewDelegate: void setEnabled(boolean)>
<android.view.InputQueue: long getNativePtr()>
<android.app.ActivityManagerProxy: void killApplicationProcess(java.lang.String,int)>
<android.media.VolumeProvider: void onSetVolumeTo(int)>
<android.graphics.drawable.LayerDrawable: void setAutoMirrored(boolean)>
<android.content.ContentProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)>
<com.android.internal.widget.multiwaveview.PointCloud.GlowManager: float getX()>
<android.net.BaseNetworkStateTracker: void captivePortalCheckCompleted(boolean)>
<android.app.ActivityManager: boolean isInHomeStack(int)>
<android.os.FileBridge: void run()>
<android.widget.Scroller: void forceFinished(boolean)>
<android.webkit.WebView: boolean canZoomIn()>
<android.content.SearchRecentSuggestionsProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
<android.speech.SpeechRecognizer: void setRecognitionListener(android.speech.RecognitionListener)>
<android.bluetooth.BluetoothGatt: android.bluetooth.BluetoothGattService getService(java.util.UUID)>
<android.database.sqlite.SQLiteDatabase: boolean isWriteAheadLoggingEnabled()>
<com.android.internal.util.StateMachine: void sendMessage(int)>
<android.net.ConnectivityManager: void requestNetwork(android.net.NetworkRequest,android.app.PendingIntent)>
<android.telephony.PhoneNumberUtils: boolean isNanp(java.lang.String)>
<android.text.AlteredCharSequence: java.lang.String toString()>
<android.view.Display: void getOverscanInsets(android.graphics.Rect)>
<android.location.IGpsMeasurementsListener: void onGpsMeasurementsReceived(android.location.GpsMeasurementsEvent)>
<com.android.internal.widget.ActionBarOverlayLayout.ActionBarVisibilityCallback: void showForSystem()>
<android.hardware.location.GeofenceHardwareRequest: void setLastTransition(int)>
<com.android.internal.util.FastPrintWriter: void setError()>
<android.renderscript.Short2: android.renderscript.Short2 sub(android.renderscript.Short2,short)>
<android.media.MediaRouter.UserRouteInfo: void setVolumeCallback(android.media.MediaRouter.VolumeCallback)>
<android.os.Messenger: android.os.Messenger readMessengerOrNullFromParcel(android.os.Parcel)>
<android.widget.RelativeLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<android.filterfw.core.VertexFrame: void setBitmap(android.graphics.Bitmap)>
<android.os.PowerManager.WakeLock: void setReferenceCounted(boolean)>
<android.util.JsonReader: void <init>(java.io.Reader)>
<android.view.View: boolean willNotCacheDrawing()>
<com.android.internal.widget.LockPatternUtilsCache: com.android.internal.widget.LockPatternUtilsCache getInstance(com.android.internal.widget.ILockSettings)>
<android.filterpacks.imageproc.ImageEncoder: void <init>(java.lang.String)>
<android.content.pm.PackageCleanItem: void <init>(int,java.lang.String,boolean)>
<android.view.View: void onScrollChanged(int,int,int,int)>
<com.android.internal.app.WindowDecorActionBar: boolean hasIcon()>
<android.os.ServiceManager: java.lang.String[] listServices()>
<android.graphics.Movie: void draw(android.graphics.Canvas,float,float)>
<android.view.View: void setFadingEdgeLength(int)>
<android.text.Layout: float getSecondaryHorizontal(int,boolean)>
<android.hardware.hdmi.HdmiHotplugEvent: boolean isConnected()>
<android.preference.MultiSelectListPreference: void onSetInitialValue(boolean,java.lang.Object)>
<android.preference.Preference: boolean persistStringSet(java.util.Set)>
<android.provider.Settings.Global: java.lang.String getBluetoothHeadsetPriorityKey(java.lang.String)>
<com.google.android.util.AbstractMessageParser.Html: java.lang.String trimTrailingWhitespace(java.lang.String)>
<android.location.Geofence: void writeToParcel(android.os.Parcel,int)>
<android.location.Geocoder: void <init>(android.content.Context)>
<android.graphics.drawable.ColorDrawable: void setTintMode(android.graphics.PorterDuff.Mode)>
<android.renderscript.Allocation: void copyFrom(int[])>
<android.location.LocationProvider: boolean meetsCriteria(android.location.Criteria)>
<android.app.ActionBar: int getNavigationItemCount()>
<android.os.storage.StorageManager: java.lang.String getMountedObbPath(java.lang.String)>
<android.media.effect.effects.BackDropperEffect: void setParameter(java.lang.String,java.lang.Object)>
<android.app.ActivityThread: android.content.pm.IPackageManager getPackageManager()>
<android.service.dreams.IDreamService: void attach(android.os.IBinder,boolean)>
<android.telephony.CellInfoCdma: void <init>(android.telephony.CellInfoCdma)>
<android.graphics.drawable.BitmapDrawable: android.graphics.Shader.TileMode getTileModeX()>
<android.content.Intent: android.net.Uri getData()>
<android.hardware.display.DisplayManagerGlobal: android.view.DisplayInfo getDisplayInfo(int)>
<android.os.INetworkManagementService: void setIpForwardingEnabled(boolean)>
<android.hardware.camera2.params.StreamConfigurationDuration: boolean equals(java.lang.Object)>
<android.telecom.InCallService: void onPhoneDestroyed(android.telecom.Phone)>
<android.view.inputmethod.InputMethodInfo: int getSubtypeCount()>
<com.android.internal.app.ToolbarActionBar: java.lang.CharSequence getSubtitle()>
<android.transition.Transition: void end()>
<android.view.Menu: android.view.MenuItem add(java.lang.CharSequence)>
<com.android.internal.os.BatteryStatsImpl.Timer: long getTotalTimeLocked(long,int)>
<android.view.accessibility.IAccessibilityInteractionConnection: void focusSearch(long,int,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)>
<android.app.AppOpsManager: java.lang.String opToRestriction(int)>
<android.os.Bundle: void <init>(android.os.Bundle)>
<android.app.ResourcesManager: android.app.ResourcesManager getInstance()>
<com.android.internal.os.BatteryStatsImpl.Uid: void noteFullWifiLockAcquiredLocked(long)>
<android.location.GpsMeasurement: void resetCarrierPhase()>
<android.app.ActivityManager.RunningAppProcessInfo: void <init>(java.lang.String,int,java.lang.String[])>
<com.android.internal.app.IBatteryStats: void noteInteractive(boolean)>
<android.widget.TextView: void setEms(int)>
<android.telephony.TelephonyManager: java.lang.String getSimCountryIso()>
<android.media.browse.MediaBrowser.MediaItem: int getFlags()>
<com.android.internal.telephony.ITelephonyRegistry: void notifyOemHookRawEventForSubscriber(long,byte[])>
<android.media.JetPlayer: boolean loadJetFile(android.content.res.AssetFileDescriptor)>
<android.view.textservice.SuggestionsInfo: int describeContents()>
<android.widget.GridView: void setGravity(int)>
<android.content.Loader: void forceLoad()>
<android.media.tv.TvInputHardwareInfo.Builder: android.media.tv.TvInputHardwareInfo.Builder audioAddress(java.lang.String)>
<android.app.Application: void unregisterComponentCallbacks(android.content.ComponentCallbacks)>
<android.renderscript.ScriptIntrinsicBlend: void forEachSrcOver(android.renderscript.Allocation,android.renderscript.Allocation)>
<android.media.MediaPlayer: void setOnVideoSizeChangedListener(android.media.MediaPlayer.OnVideoSizeChangedListener)>
<android.util.Property: void set(java.lang.Object,java.lang.Object)>
<android.drm.DrmEvent: int getUniqueId()>
<android.app.Dialog: boolean requestWindowFeature(int)>
<android.renderscript.Double3: void negate()>
<android.os.Parcel: void writeLong(long)>
<android.renderscript.Float3: void div(float)>
<android.content.Intent: boolean isExcludingStopped()>
<com.android.internal.util.StateMachine: void sendMessageDelayed(int,int,long)>
<android.telecom.Conference: int getState()>
<android.app.DownloadManager.Request: void <init>(android.net.Uri)>
<com.android.internal.http.multipart.PartBase: void setCharSet(java.lang.String)>
<com.android.internal.view.InputConnectionWrapper: boolean setSelection(int,int)>
<android.telecom.Call: void playDtmfTone(char)>
<com.android.internal.view.menu.MenuItemImpl: int getOrdering()>
<android.emoji.EmojiFactory: int getVendorSpecificPuaFromAndroidPua(int)>
<android.telecom.GatewayInfo: android.net.Uri getGatewayAddress()>
<android.net.http.Headers: void setContentLength(long)>
<android.media.MediaMuxer: void release()>
<android.location.Address: void writeToParcel(android.os.Parcel,int)>
<android.view.ViewGroup: android.view.ViewGroupOverlay getOverlay()>
<android.content.IClipboard: void setPrimaryClip(android.content.ClipData,java.lang.String)>
<android.content.res.AssetManager: java.io.InputStream openNonAsset(int,java.lang.String)>
<android.net.wifi.p2p.nsd.WifiP2pServiceInfo: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.widget.EditableInputConnection: boolean requestCursorUpdates(int)>
<android.speech.SpeechRecognizer: void stopListening()>
<android.content.ContextWrapper: boolean stopService(android.content.Intent)>
<com.android.internal.view.IInputConnectionWrapper: void commitCompletion(android.view.inputmethod.CompletionInfo)>
<android.net.wifi.WifiManager: java.util.List getPrivilegedConfiguredNetworks()>
<com.android.ims.internal.IImsUt: int queryCallWaiting()>
<android.media.AudioTrack: void stop()>
<com.android.internal.view.menu.MenuPresenter: android.os.Parcelable onSaveInstanceState()>
<android.view.WindowInfo: java.lang.String toString()>
<android.os.Parcelable: void writeToParcel(android.os.Parcel,int)>
<android.inputmethodservice.InputMethodService.InputMethodImpl: void showSoftInput(int,android.os.ResultReceiver)>
<android.media.Metadata: boolean getBoolean(int)>
<com.android.internal.http.multipart.PartBase: java.lang.String getTransferEncoding()>
<android.telephony.CellInfoLte: android.telephony.CellInfoLte createFromParcelBody(android.os.Parcel)>
<com.android.internal.app.WindowDecorActionBar: void setHomeActionContentDescription(int)>
<android.os.StrictMode.VmPolicy.Builder: void <init>(android.os.StrictMode.VmPolicy)>
<android.widget.Scroller: void setFriction(float)>
<android.hardware.SensorManager: boolean cancelTriggerSensor(android.hardware.TriggerEventListener,android.hardware.Sensor)>
<com.android.internal.app.RestrictionsPinActivity: void setPositiveButtonState(boolean)>
<android.net.MailTo: java.util.Map getHeaders()>
<android.os.IUserManager: android.content.pm.UserInfo getProfileParent(int)>
<android.widget.VideoView: void setVideoURI(android.net.Uri)>
<android.hardware.camera2.utils.BinderHolder: android.os.IBinder getBinder()>
<android.widget.ListView: boolean isOpaque()>
<android.graphics.drawable.AnimatedVectorDrawable: int getIntrinsicWidth()>
<android.webkit.WebView: boolean onHoverEvent(android.view.MotionEvent)>
<android.view.VelocityTracker: void recycle()>
<android.net.wifi.WifiEnterpriseConfig: java.lang.String getIdentity()>
<android.graphics.DrawFilter: void finalize()>
<android.widget.DatePickerController: int getMaxDay()>
<android.opengl.GLES20: void glUniform4fv(int,int,float[],int)>
<android.net.wifi.p2p.WifiP2pManager: void connect(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pConfig,android.net.wifi.p2p.WifiP2pManager.ActionListener)>
<android.filterfw.core.SerializedFrame: void setInts(int[])>
<android.media.MediaExtractor: void setDataSource(java.io.FileDescriptor)>
<android.media.tv.TvTrackInfo.Builder: android.media.tv.TvTrackInfo.Builder setVideoFrameRate(float)>
<android.net.WifiLinkQualityInfo: int getRssi()>
<com.android.internal.app.IVoiceInteractor: com.android.internal.app.IVoiceInteractorRequest startConfirmation(java.lang.String,com.android.internal.app.IVoiceInteractorCallback,java.lang.CharSequence,android.os.Bundle)>
<android.drm.DrmManagerClient: android.drm.DrmInfo acquireDrmInfo(android.drm.DrmInfoRequest)>
<android.content.EntityIterator: void reset()>
<android.net.http.LoggingEventHandler: void error(int,java.lang.String)>
<com.android.internal.textservice.ISpellCheckerSessionListener: void onGetSuggestions(android.view.textservice.SuggestionsInfo[])>
<android.hardware.hdmi.IHdmiControlService: void addDeviceEventListener(android.hardware.hdmi.IHdmiDeviceEventListener)>
<android.os.CommonTimeConfig: byte getMasterElectionPriority()>
<android.widget.MediaController: boolean onTouchEvent(android.view.MotionEvent)>
<android.net.Uri: java.lang.String getEncodedQuery()>
<android.media.tv.TvContentRating: int hashCode()>
<android.net.LinkProperties: boolean isIdenticalInterfaceName(android.net.LinkProperties)>
<android.media.MediaCodecInfo.VideoCapabilities: android.util.Range getSupportedHeights()>
<android.filterfw.core.Frame: int[] getInts()>
<com.android.ims.ImsCallProfile: int getCallExtraInt(java.lang.String)>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence,java.lang.Object,int)>
<android.renderscript.RSTextureView: void destroyRenderScriptGL()>
<android.app.backup.RestoreDescription: int getDataType()>
<android.opengl.GLES20: void glGetFloatv(int,java.nio.FloatBuffer)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String[])>
<android.widget.TextView: int getBaseline()>
<com.android.internal.widget.ActionBarOverlayLayout: void onStopNestedScroll(android.view.View)>
<android.bluetooth.le.ScanRecord: byte[] getManufacturerSpecificData(int)>
<android.graphics.drawable.LayerDrawable: int getPaddingMode()>
<android.app.ActivityManagerProxy: boolean profileControl(java.lang.String,int,boolean,android.app.ProfilerInfo,int)>
<android.widget.HorizontalScrollView: void onSizeChanged(int,int,int,int)>
<android.widget.HorizontalScrollView: boolean onRequestFocusInDescendants(int,android.graphics.Rect)>
<android.filterpacks.videosrc.SurfaceTextureTarget: void disconnect(android.filterfw.core.FilterContext)>
<android.util.SparseArray: java.lang.Object get(int)>
<android.opengl.ETC1: void encodeImage(java.nio.Buffer,int,int,int,int,java.nio.Buffer)>
<android.view.DragEvent: android.content.ClipDescription getClipDescription()>
<com.android.internal.http.multipart.Part: void sendEndOfHeader(java.io.OutputStream)>
<android.media.AudioService.VolumeStreamState: int getMaxIndex()>
<android.app.Notification: void cloneInto(android.app.Notification,boolean)>
<com.android.internal.telephony.CallerInfoAsyncQuery: com.android.internal.telephony.CallerInfoAsyncQuery startQuery(int,android.content.Context,android.net.Uri,com.android.internal.telephony.CallerInfoAsyncQuery.OnQueryCompleteListener,java.lang.Object)>
<android.view.GestureDetector.SimpleOnGestureListener: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>
<android.filterpacks.imageproc.ColorTemperatureFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<android.preference.PreferenceFragment: void onCreate(android.os.Bundle)>
<android.content.res.ObbInfo: int describeContents()>
<android.app.IActivityManager: void enterSafeMode()>
<android.app.DatePickerDialog: android.widget.DatePicker getDatePicker()>
<android.net.http.RequestHandle: boolean setupRedirect(java.lang.String,int,java.util.Map)>
<android.preference.Preference: void setDependency(java.lang.String)>
<android.print.PrintJobInfo: java.lang.String getStateReason()>
<android.filterpacks.base.FrameFetch: void <init>(java.lang.String)>
<android.view.InputDevice: java.lang.String getDescriptor()>
<android.text.method.ArrowKeyMovementMethod: boolean up(android.widget.TextView,android.text.Spannable)>
<android.view.ViewParent: void requestLayout()>
<android.widget.ScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)>
<android.view.Display: void getRealMetrics(android.util.DisplayMetrics)>
<android.graphics.Paint: void setStrokeJoin(android.graphics.Paint.Join)>
<com.android.internal.statusbar.StatusBarIconList: int getSlotIndex(java.lang.String)>
<android.opengl.GLSurfaceView.Renderer: void onDrawFrame(javax.microedition.khronos.opengles.GL10)>
<android.net.wifi.p2p.WifiP2pManager.ActionListener: void onSuccess()>
<android.net.NetworkStats.Entry: boolean equals(java.lang.Object)>
<android.renderscript.Float4: void mul(float)>
<android.graphics.drawable.InsetDrawable: void <init>(android.graphics.drawable.Drawable,int)>
<android.app.MediaRouteButton: int[] onCreateDrawableState(int)>
<android.media.MediaDrm.MediaDrmStateException: java.lang.String getDiagnosticInfo()>
<android.accounts.AccountManager: android.accounts.Account[] getAccounts()>
<android.opengl.GLES20: void glUniform2f(int,float,float)>
<android.graphics.Canvas: android.graphics.DrawFilter getDrawFilter()>
<android.media.session.MediaSession.CallbackStub: void onSetVolumeTo(int)>
<android.net.Uri: android.net.Uri normalizeScheme()>
<android.widget.PopupWindow: void setTouchModal(boolean)>
<android.graphics.Matrix: boolean postScale(float,float)>
<android.bluetooth.BluetoothManager: java.util.List getConnectedDevices(int)>
<android.view.ViewGroup.MarginLayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<android.os.BatteryStats.Uid.Pkg.Serv: int getLaunches(int)>
<android.filterpacks.ui.SurfaceRenderFilter: void <init>(java.lang.String)>
<android.hardware.SerialManager: android.hardware.SerialPort openSerialPort(java.lang.String,int)>
<android.opengl.GLES10: void glDeleteTextures(int,java.nio.IntBuffer)>
<android.graphics.drawable.DrawableContainer: void setEnterFadeDuration(int)>
<android.app.admin.DevicePolicyManager: int getStorageEncryptionStatus(int)>
<android.telephony.SignalStrength: void <init>(android.telephony.SignalStrength)>
<android.print.PrintJobInfo: int getCopies()>
<android.app.ActionBar: boolean collapseActionView()>
<com.android.internal.util.AsyncChannel: android.os.Message sendMessageSynchronously(int,java.lang.Object)>
<com.android.internal.widget.ActionBarView: void setNavigationContentDescription(int)>
<android.widget.TextSwitcher: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>
<android.content.Intent: java.lang.String toInsecureStringWithClip()>
<com.android.internal.view.menu.MenuItemImpl: void setIsActionButton(boolean)>
<com.android.internal.view.menu.MenuView.ItemView: void setShortcut(boolean,char)>
<android.view.ActionMode: void setTitle(int)>
<android.app.Fragment: android.transition.Transition getSharedElementReturnTransition()>
<android.inputmethodservice.SoftInputWindow: boolean dispatchTouchEvent(android.view.MotionEvent)>
<android.opengl.GLES20: void glVertexAttrib3f(int,float,float,float)>
<android.view.animation.Animation: android.view.animation.Interpolator getInterpolator()>
<android.database.DatabaseUtils.InsertHelper: void bind(int,double)>
<android.os.Debug: long countInstancesOfClass(java.lang.Class)>
<com.android.internal.util.XmlUtils: void skipCurrentTag(org.xmlpull.v1.XmlPullParser)>
<android.view.ScaleGestureDetector: float getFocusX()>
<android.webkit.WebSettings: void setBlockNetworkLoads(boolean)>
<android.widget.RemoteViews: void setEmptyView(int,int)>
<android.bluetooth.BluetoothA2dpSink: boolean connect(android.bluetooth.BluetoothDevice)>
<android.hardware.display.DisplayManagerInternal: boolean isProximitySensorAvailable()>
<com.android.internal.preference.YesNoPreference: void <init>(android.content.Context)>
<android.service.notification.IConditionProvider: void onConnected()>
<android.content.SharedPreferences.OnSharedPreferenceChangeListener: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>
<android.widget.ActionMenuPresenter: boolean onSubMenuSelected(com.android.internal.view.menu.SubMenuBuilder)>
<android.view.Choreographer: void postFrameCallbackDelayed(android.view.Choreographer.FrameCallback,long)>
<android.content.IntentFilter: boolean hasDataPath(android.os.PatternMatcher)>
<com.android.internal.widget.multiwaveview.GlowPadView: int getTargetDescriptionsResourceId()>
<android.text.TextUtils.SimpleStringSplitter: void <init>(char)>
<android.util.SparseBooleanArray: int size()>
<android.telephony.CellIdentityGsm: boolean equals(java.lang.Object)>
<com.android.internal.os.BatteryStatsImpl.Uid: void noteWifiBatchedScanStoppedLocked(long)>
<android.inputmethodservice.ExtractEditText: boolean hasWindowFocus()>
<android.view.accessibility.AccessibilityNodeInfo: void setCollectionItemInfo(android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo)>
<android.content.res.CompatibilityInfo.Translator: android.graphics.Rect getTranslatedContentInsets(android.graphics.Rect)>
<android.hardware.location.GeofenceHardwareCallback: void onGeofenceResume(int,int)>
<android.app.ActivityManagerProxy: void setActivityController(android.app.IActivityController)>
<android.renderscript.Type.Builder: android.renderscript.Type.Builder setYuvFormat(int)>
<android.opengl.GLES10: void glFogxv(int,java.nio.IntBuffer)>
<android.hardware.display.WifiDisplaySessionInfo: int getSessionId()>
<android.content.pm.LauncherApps: void startAppDetailsActivity(android.content.ComponentName,android.os.UserHandle,android.graphics.Rect,android.os.Bundle)>
<com.android.internal.widget.ToolbarWidgetWrapper: void setCollapsible(boolean)>
<android.speech.RecognitionService.Callback: void endOfSpeech()>
<android.content.Intent.ShortcutIconResource: void writeToParcel(android.os.Parcel,int)>
<android.service.dreams.DreamService: void stopDozing()>
<android.net.wifi.ScanResult: java.lang.String toString()>
<android.bluetooth.IBluetoothGattServerCallback: void onDescriptorWriteRequest(java.lang.String,int,int,int,boolean,boolean,int,int,android.os.ParcelUuid,int,android.os.ParcelUuid,android.os.ParcelUuid,byte[])>
<android.media.MediaRouter.SimpleCallback: void onRouteVolumeChanged(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>
<android.content.ContentProviderClient: android.content.ContentProvider getLocalContentProvider()>
<android.os.BinderProxy: void dumpAsync(java.io.FileDescriptor,java.lang.String[])>
<android.graphics.drawable.RotateDrawable: void setColorFilter(android.graphics.ColorFilter)>
<android.opengl.GLES10: void glLightModelxv(int,int[],int)>
<com.android.internal.widget.LockPatternUtils: int getRequestedPasswordMinimumUpperCase()>
<android.media.MediaRouter.Callback: void onRouteVolumeChanged(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>
<android.filterpacks.videosrc.SurfaceTextureSource: void process(android.filterfw.core.FilterContext)>
<com.android.internal.util.StateMachine: int getLogRecSize()>
<android.nfc.NfcAdapter: void attemptDeadServiceRecovery(java.lang.Exception)>
<android.security.KeyPairGeneratorSpec: java.lang.String getKeystoreAlias()>
<android.app.FragmentManager.BackStackEntry: int getBreadCrumbTitleRes()>
<android.app.ActivityManager.TaskDescription: void setIconFilename(java.lang.String)>
<android.database.CursorWrapper: boolean move(int)>
<android.view.Window: boolean isActive()>
<android.transition.ChangeText: void captureEndValues(android.transition.TransitionValues)>
<android.app.backup.BackupAgentHelper: void onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>
<android.renderscript.Int3: void set(android.renderscript.Int3)>
<android.graphics.Region: void translate(int,int)>
<android.app.IActivityManager: void showWaitingForDebugger(android.app.IApplicationThread,boolean)>
<android.widget.ListView: void setCacheColorHint(int)>
<android.media.effect.effects.FlipEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>
<android.content.AsyncQueryHandler: void startInsert(int,java.lang.Object,android.net.Uri,android.content.ContentValues)>
<android.content.res.ColorStateList: int[][] getStates()>
<android.content.res.TypedArray: java.lang.String getPositionDescription()>
<android.widget.GridLayout: void onDebugDraw(android.graphics.Canvas)>
<com.android.internal.os.BatteryStatsImpl.Uid.Proc: int getStarts(int)>
<android.net.http.RequestQueue: android.net.http.RequestHandle queueSynchronousRequest(java.lang.String,android.net.WebAddress,java.lang.String,java.util.Map,android.net.http.EventHandler,java.io.InputStream,int)>
<android.bluetooth.le.AdvertiseData: boolean equals(java.lang.Object)>
<com.android.internal.os.BatteryStatsImpl: void noteSyncStartLocked(java.lang.String,int)>
<android.graphics.drawable.AnimatedVectorDrawable: boolean onLevelChange(int)>
<android.view.GestureDetector.OnGestureListener: void onShowPress(android.view.MotionEvent)>
<android.security.KeyStore: boolean put(java.lang.String,byte[],int,int)>
<android.security.KeyPairGeneratorSpec: android.content.Context getContext()>
<android.media.audiopolicy.AudioPolicy: android.os.IBinder token()>
<android.renderscript.Byte4: android.renderscript.Byte4 mul(android.renderscript.Byte4,android.renderscript.Byte4)>
<android.os.Environment: boolean isExternalStorageEmulated(java.io.File)>
<android.view.KeyEvent: int getFlags()>
<android.widget.ScrollView: void computeScroll()>
<android.preference.VolumePreference: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.service.trust.ITrustAgentServiceCallback: void setManagingTrust(boolean)>
<com.android.internal.os.BatteryStatsImpl: void noteSyncFinishLocked(java.lang.String,int)>
<android.net.http.RequestQueue: void <init>(android.content.Context,int)>
<android.view.accessibility.CaptioningManager: int getRawUserStyle()>
<android.media.SubtitleTrack: void onSeek(long)>
<android.widget.TextView: float getLineSpacingMultiplier()>
<android.view.KeyCharacterMap: int getModifierBehavior()>
<android.app.admin.IDevicePolicyManager: java.util.List getPermittedAccessibilityServices(android.content.ComponentName)>
<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int,int[])>
<android.view.View: float getVerticalScrollFactor()>
<android.telephony.PhoneNumberUtils: java.lang.String convertKeypadLettersToDigits(java.lang.String)>
<android.media.session.MediaSessionManager: boolean isGlobalPriorityActive()>
<com.android.internal.os.BatteryStatsImpl: long computeBatteryScreenOffRealtime(long,int)>
<android.telephony.cdma.CdmaSmsCbProgramData: int getCategory()>
<android.os.DropBoxManager: void addFile(java.lang.String,java.io.File,int)>
<android.net.wifi.p2p.WifiP2pManager.ChannelListener: void onChannelDisconnected()>
<android.renderscript.Int4: void mul(android.renderscript.Int4)>
<android.app.Instrumentation: void sendStringSync(java.lang.String)>
<android.os.BatteryStats.HistoryEventTracker: boolean updateState(int,java.lang.String,int,int)>
<android.renderscript.ScriptIntrinsicLUT: void forEach(android.renderscript.Allocation,android.renderscript.Allocation)>
<android.view.SurfaceControl: void screenshot(android.os.IBinder,android.view.Surface,int,int)>
<com.android.internal.widget.AbsActionBarView: void onConfigurationChanged(android.content.res.Configuration)>
<android.os.BatteryStats.Uid.Pkg: int getWakeups(int)>
<android.content.pm.PackageParser.Service: java.lang.String toString()>
<android.content.ContentValues: java.util.Set keySet()>
<android.util.LongSparseLongArray: long get(long)>
<android.webkit.CacheManager.CacheResult: void setInputStream(java.io.InputStream)>
<android.renderscript.Program: int getConstantCount()>
<android.location.GpsMeasurement: void setElevationUncertaintyInDeg(double)>
<android.app.IActivityManager: void killUid(int,java.lang.String)>
<android.widget.Toast: void setMargin(float,float)>
<android.service.voice.VoiceInteractionSessionService: android.service.voice.VoiceInteractionSession onNewSession(android.os.Bundle)>
<android.app.Notification.Builder: android.app.Notification getNotification()>
<android.filterfw.core.KeyValueMap: java.lang.String toString()>
<android.location.Location: void setExtraLocation(java.lang.String,android.location.Location)>
<android.renderscript.FieldPacker: void addF64(android.renderscript.Double2)>
<android.view.LayoutInflater.Filter: boolean onLoadClass(java.lang.Class)>
<android.view.View: void dispatchSetActivated(boolean)>
<android.widget.TextView: boolean getIncludeFontPadding()>
<android.app.Activity: void setEnterSharedElementCallback(android.app.SharedElementCallback)>
<android.net.IConnectivityManager: java.lang.String getMobileRedirectedProvisioningUrl()>
<android.view.inputmethod.CursorAnchorInfo: int hashCode()>
<android.view.animation.GridLayoutAnimationController: void setColumnDelay(float)>
<com.android.internal.http.multipart.MultipartEntity: java.io.InputStream getContent()>
<android.widget.Spinner: java.lang.CharSequence getPrompt()>
<com.google.android.util.AbstractMessageParser.Format: java.lang.String toHtml(boolean)>
<android.database.CursorWindow: java.lang.String getName()>
<android.provider.Settings.Global: float getFloat(android.content.ContentResolver,java.lang.String,float)>
<android.app.backup.BackupTransport: java.lang.String name()>
<android.net.WifiLinkQualityInfo: long getTxBad()>
<android.renderscript.Int4: void mod(android.renderscript.Int4)>
<android.widget.TabHost: void onAttachedToWindow()>
<android.hardware.hdmi.HdmiDeviceInfo: int getDeviceType()>
<android.view.GraphicBuffer: int getWidth()>
<android.media.MediaMetadataRetriever: void setDataSource(java.lang.String)>
<android.media.RingtoneManager: void <init>(android.content.Context)>
<com.android.internal.widget.LockPatternUtils: boolean checkVoldPassword()>
<android.view.inputmethod.BaseInputConnection: boolean sendKeyEvent(android.view.KeyEvent)>
<android.widget.RemoteViewsListAdapter: long getItemId(int)>
<android.filterfw.core.Filter: android.filterfw.core.InputPort getInputPort(java.lang.String)>
<android.inputmethodservice.Keyboard: boolean setShifted(boolean)>
<android.os.Parcel: void setDataPosition(int)>
<android.webkit.WebViewProvider: void invokeZoomPicker()>
<com.android.internal.util.XmlUtils: long[] readThisLongArrayXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[])>
<com.android.internal.app.IAppOpsService: int checkPackage(int,java.lang.String)>
<com.android.internal.view.menu.ActionMenu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>
<android.widget.AbsListView: void reclaimViews(java.util.List)>
<android.os.AsyncTask: boolean isCancelled()>
<android.net.Uri: android.net.Uri fromFile(java.io.File)>
<android.hardware.camera2.params.StreamConfigurationMap: long getOutputStallDuration(java.lang.Class,android.util.Size)>
<android.graphics.drawable.GradientDrawable: void setColor(android.content.res.ColorStateList)>
<android.bluetooth.BluetoothInputDevice: java.util.List getConnectedDevices()>
<com.android.internal.os.BatteryStatsImpl.Uid.Sensor: int getHandle()>
<android.location.GpsClock: boolean hasFullBiasInNs()>
<android.view.accessibility.AccessibilityRecord: void setRemovedCount(int)>
<android.widget.StackView: void onMeasure(int,int)>
<android.content.pm.Signature: void <init>(java.security.cert.Certificate[])>
<com.android.server.net.BaseNetworkObserver: void interfaceDnsServerInfo(java.lang.String,long,java.lang.String[])>
<android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message)>
<android.renderscript.Long3: long elementSum()>
<android.os.BatteryStats: int getWifiStateCount(int,int)>
<android.database.sqlite.SQLiteDirectCursorDriver: void cursorDeactivated()>
<android.provider.Settings.Secure: long getLong(android.content.ContentResolver,java.lang.String)>
<android.app.ActionBar: void setTitle(java.lang.CharSequence)>
<android.widget.EditText: void <init>(android.content.Context,android.util.AttributeSet)>
<android.view.Window: android.view.Window getContainer()>
<android.view.inputmethod.InputMethodManager: void updateCursorAnchorInfo(android.view.View,android.view.inputmethod.CursorAnchorInfo)>
<android.hardware.camera2.legacy.LegacyCameraDevice: void <init>(int,android.hardware.Camera,android.hardware.camera2.CameraCharacteristics,android.hardware.camera2.ICameraDeviceCallbacks)>
<android.transition.TransitionSet: android.transition.TransitionSet setOrdering(int)>
<com.android.internal.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderTitle(int)>
<android.media.MediaRouter.VolumeCallback: void onVolumeSetRequest(android.media.MediaRouter.RouteInfo,int)>
<android.text.method.BaseMovementMethod: boolean top(android.widget.TextView,android.text.Spannable)>
<android.media.effect.FilterEffect: android.filterfw.core.Frame frameFromTexture(int,int,int)>
<android.net.LinkQualityInfo: int getTheoreticalTxBandwidth()>
<android.widget.SearchView: boolean isIconfiedByDefault()>
<android.media.tv.TvInputService: boolean isNavigationKey(int)>
<android.telephony.CellIdentityCdma: int getSystemId()>
<android.os.BatteryStats.Uid.Pkg: java.util.Map getServiceStats()>
<android.content.SearchRecentSuggestionsProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
<android.content.res.Configuration: void readXmlAttrs(org.xmlpull.v1.XmlPullParser,android.content.res.Configuration)>
<android.text.style.StyleSpan: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.view.menu.ActionMenuItem: void <init>(android.content.Context,int,int,int,int,java.lang.CharSequence)>
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: void <init>(int,java.lang.String)>
<android.view.textservice.SentenceSuggestionsInfo: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.content.NativeLibraryHelper: int findSupportedAbi(com.android.internal.content.NativeLibraryHelper.Handle,java.lang.String[])>
<android.location.LocationManager: boolean addNmeaListener(android.location.GpsStatus.NmeaListener)>
<android.filterpacks.imageproc.BitmapSource: void tearDown(android.filterfw.core.FilterContext)>
<android.hardware.camera2.legacy.CaptureCollector: android.hardware.camera2.legacy.RequestHolder jpegCaptured(long)>
<android.app.usage.ConfigurationStats: void writeToParcel(android.os.Parcel,int)>
<android.graphics.NinePatch: int getWidth()>
<android.view.FrameStats: long getEndTimeNano()>
<android.util.NoSuchPropertyException: void <init>(java.lang.String)>
<android.filterpacks.imageproc.ColorTemperatureFilter: void <init>(java.lang.String)>
<android.content.IContentProvider: android.content.res.AssetFileDescriptor openAssetFile(java.lang.String,android.net.Uri,java.lang.String,android.os.ICancellationSignal)>
<android.view.WindowInsets: android.view.WindowInsets consumeStableInsets()>
<android.opengl.GLES30: void glUniform2ui(int,int,int)>
<android.app.ActivityThread: android.app.LoadedApk peekPackageInfo(java.lang.String,boolean)>
<android.util.ArraySet: boolean containsAll(java.util.Collection)>
<android.location.IGpsGeofenceHardware: boolean addCircularHardwareGeofence(int,double,double,double,int,int,int,int)>
<com.android.internal.http.multipart.Part: void sendEnd(java.io.OutputStream)>
<android.text.method.BaseMovementMethod: boolean lineStart(android.widget.TextView,android.text.Spannable)>
<com.android.internal.statusbar.StatusBarIconList: void defineSlots(java.lang.String[])>
<android.service.dreams.DreamService: void setLowProfile(boolean)>
<android.database.sqlite.SQLiteDebug: android.database.sqlite.SQLiteDebug.PagerStats getDatabaseInfo()>
<android.content.PeriodicSync: boolean equals(java.lang.Object)>
<android.widget.LinearLayout.LayoutParams: void <init>(android.view.ViewGroup.MarginLayoutParams)>
<com.android.internal.widget.DecorToolbar: void dismissPopupMenus()>
<android.media.MediaCodecList: java.lang.String findDecoderForFormat(android.media.MediaFormat)>
<android.webkit.WebView: void flingScroll(int,int)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface.OnClickListener)>
<android.util.MathUtils: float mag(float,float,float)>
<android.os.UserHandle: java.lang.String toString()>
<android.media.AudioRecord: void startRecording()>
<android.text.SpannableString: void setSpan(java.lang.Object,int,int,int)>
<android.os.BatteryProperty: long getLong()>
<android.hardware.usb.UsbAccessory: java.lang.String getUri()>
<com.google.android.gles_jni.GLImpl: void glGetMaterialxv(int,int,java.nio.IntBuffer)>
<com.android.internal.widget.ExploreByTouchHelper: void getVisibleVirtualViews(java.util.List)>
<android.view.WindowId: int hashCode()>
<android.mtp.MtpServer: void sendObjectRemoved(int)>
<android.widget.QuickContactBadge: void setOverlay(android.graphics.drawable.Drawable)>
<android.preference.MultiCheckPreference: java.lang.CharSequence[] getEntries()>
<android.app.LoaderManager.LoaderCallbacks: void onLoadFinished(android.content.Loader,java.lang.Object)>
<android.telephony.SubscriptionManager: void clearDefaultsForInactiveSubIds()>
<android.media.MediaRouter: android.media.MediaRouter.RouteInfo getSelectedRoute()>
<android.os.Parcel: java.lang.Object readValue(java.lang.ClassLoader)>
<android.telephony.PhoneStateListener: void onDataConnectionStateChanged(int)>
<android.media.MediaPlayer: void setDisplay(android.view.SurfaceHolder)>
<android.bluetooth.IBluetoothAvrcpController: java.util.List getConnectedDevices()>
<android.view.Window: void closeAllPanels()>
<android.view.View: int getMeasuredState()>
<android.security.IKeystoreService: int grant(java.lang.String,int)>
<com.android.internal.app.WindowDecorActionBar.ActionModeImpl: void finish()>
<android.graphics.drawable.Drawable: android.graphics.Rect getBounds()>
<android.opengl.GLES20: void glDeleteRenderbuffers(int,int[],int)>
<android.hardware.soundtrigger.SoundTriggerModule: void detach()>
<android.view.WindowManagerPolicy: android.view.WindowManagerPolicy.WindowState getWinShowWhenLockedLw()>
<com.android.internal.util.HexDump: java.lang.String toHexString(int)>
<android.telephony.VoLteServiceState: void validateInput()>
<android.widget.AppSecurityPermissions: void <init>(android.content.Context,android.content.pm.PackageInfo)>
<android.os.CommonTimeConfig: int forceNetworklessMasterMode()>
<android.view.inputmethod.InputMethodSubtype: int getIconResId()>
<android.accounts.AuthenticatorDescription: android.accounts.AuthenticatorDescription newKey(java.lang.String)>
<android.view.View: int getVisibility()>
<com.android.internal.net.VpnProfile: boolean isValidLockdownProfile()>
<android.app.backup.FullBackupDataOutput: void <init>(android.os.ParcelFileDescriptor)>
<android.inputmethodservice.InputMethodService: void onStartInputView(android.view.inputmethod.EditorInfo,boolean)>
<android.telecom.Connection: void onPlayDtmfTone(char)>
<android.webkit.WebView: int computeVerticalScrollOffset()>
<android.database.AbstractWindowedCursor: void setWindow(android.database.CursorWindow)>
<android.location.Address: java.lang.String getPremises()>
<android.widget.LinearLayout: int getDividerPadding()>
<android.print.PrintDocumentAdapter: void onStart()>
<android.hardware.camera2.params.RggbChannelVector: void <init>(float,float,float,float)>
<android.telephony.CellSignalStrengthGsm: void writeToParcel(android.os.Parcel,int)>
<android.widget.Adapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.preference.SwitchPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.util.SparseArray: void append(int,java.lang.Object)>
<android.service.voice.VoiceInteractionSession: void onCreate(android.os.Bundle)>
<com.android.internal.widget.WaveView: void onDraw(android.graphics.Canvas)>
<android.graphics.drawable.RippleDrawable: int getMaxRadius()>
<android.telecom.TelecomManager: boolean isInCall()>
<com.android.internal.http.multipart.StringPart: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<android.preference.RingtonePreference: void onSetInitialValue(boolean,java.lang.Object)>
<android.view.accessibility.IAccessibilityManager: void removeAccessibilityInteractionConnection(android.view.IWindow)>
<android.widget.StackView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.mtp.MtpDeviceInfo: java.lang.String getSerialNumber()>
<android.app.Activity: android.content.Intent getIntent()>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator rotationY(float)>
<android.media.MediaFormat: android.media.MediaFormat createSubtitleFormat(java.lang.String,java.lang.String)>
<android.speech.IRecognitionListener: void onEndOfSpeech()>
<android.widget.Spinner: int getBaseline()>
<android.webkit.WebResourceResponse: java.lang.String getReasonPhrase()>
<android.net.SntpClient: long getNtpTime()>
<android.graphics.drawable.ShapeDrawable: int getIntrinsicHeight()>
<android.os.BinderProxy: boolean isBinderAlive()>
<android.opengl.GLES31Ext: void glColorMaskiEXT(int,boolean,boolean,boolean,boolean)>
<android.renderscript.ProgramVertexFixedFunction.Builder: void <init>(android.renderscript.RenderScript)>
<com.android.internal.widget.ExploreByTouchHelper: void invalidateVirtualView(int)>
<android.content.res.Resources: java.lang.CharSequence[] getTextArray(int)>
<com.android.internal.widget.ActionBarOverlayLayout: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)>
<android.text.LoginFilter: void onInvalidCharacter(char)>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,java.lang.String)>
<com.android.internal.util.Predicates: com.android.internal.util.Predicate or(com.android.internal.util.Predicate[])>
<android.filterfw.core.GraphRunner: void setDoneCallback(android.filterfw.core.GraphRunner.OnRunnerDoneListener)>
<android.text.style.TtsSpan.TelephoneBuilder: void <init>(java.lang.String)>
<android.renderscript.Long3: void mod(long)>
<android.app.ActivityManagerProxy: android.graphics.Bitmap getTaskDescriptionIcon(java.lang.String)>
<com.google.android.gles_jni.GLImpl: void glClearColorx(int,int,int,int)>
<android.opengl.GLES30: void glVertexAttribDivisor(int,int)>
<android.graphics.RectF: void <init>(float,float,float,float)>
<android.webkit.CacheManager.CacheResult: void setContentLength(long)>
<com.android.internal.net.VpnConfig: android.content.Intent getIntentForConfirmation()>
<android.graphics.drawable.AnimationDrawable: void start()>
<android.view.ActionMode: boolean getTitleOptionalHint()>
<android.opengl.GLES11Ext: void glGetTexParameterxvOES(int,int,java.nio.IntBuffer)>
<android.net.NetworkUtils: boolean addressTypeMatches(java.net.InetAddress,java.net.InetAddress)>
<android.graphics.drawable.Drawable: int getIntrinsicWidth()>
<android.webkit.WebSettings: void setCursiveFontFamily(java.lang.String)>
<android.webkit.FindActionModeCallback: void onClick(android.view.View)>
<android.telecom.RemoteConnection: android.telecom.StatusHints getStatusHints()>
<com.android.internal.view.menu.MenuPresenter: int getId()>
<android.app.job.JobParameters: int describeContents()>
<android.app.SearchDialog: void hide()>
<android.media.AudioAttributes: boolean equals(java.lang.Object)>
<android.bluetooth.BluetoothProfile: java.util.List getConnectedDevices()>
<android.widget.CursorAdapter: void setFilterQueryProvider(android.widget.FilterQueryProvider)>
<android.net.NetworkStateTracker: android.net.NetworkCapabilities getNetworkCapabilities()>
<android.os.Parcel: void enforceInterface(java.lang.String)>
<android.nfc.NfcActivityManager: void onActivityStopped(android.app.Activity)>
<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuItemImpl getExpandedItem()>
<android.os.FileUtils: int getUid(java.lang.String)>
<android.renderscript.ScriptGroup: void setOutput(android.renderscript.Script.KernelID,android.renderscript.Allocation)>
<android.content.IntentFilter: int match(java.lang.String,java.lang.String,java.lang.String,android.net.Uri,java.util.Set,java.lang.String)>
<android.preference.Preference: java.util.Set getPersistedStringSet(java.util.Set)>
<android.filterpacks.imageproc.ToGrayFilter: void setupPorts()>
<android.view.MotionEvent: java.lang.String toString()>
<android.telephony.PreciseDataConnectionState: int getDataConnectionNetworkType()>
<android.renderscript.Short3: android.renderscript.Short3 mod(android.renderscript.Short3,short)>
<android.filterpacks.imageproc.AutoFixFilter: void initProgram(android.filterfw.core.FilterContext,int)>
<android.hardware.display.WifiDisplaySessionInfo: boolean isClient()>
<com.android.internal.app.WindowDecorActionBar.ActionModeImpl: boolean isTitleOptional()>
<android.app.NativeActivity: void onSaveInstanceState(android.os.Bundle)>
<com.android.internal.os.BatteryStatsImpl: void noteWifiOffLocked()>
<android.content.IContentService: void cancelRequest(android.content.SyncRequest)>
<android.bluetooth.BluetoothGattServer: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.net.NetworkStats: void dump(java.lang.String,java.io.PrintWriter)>
<android.media.tv.TvInputService.Session: boolean onTouchEvent(android.view.MotionEvent)>
<android.filterfw.core.NativeBuffer: void assertReadable()>
<android.telephony.ServiceState: boolean isEmergencyOnly()>
<android.widget.ProgressBar: android.graphics.drawable.Drawable getProgressDrawable()>
<com.android.internal.util.FastXmlSerializer: void ignorableWhitespace(java.lang.String)>
<android.widget.TextView: float getLetterSpacing()>
<android.database.sqlite.SQLiteSession: long executeForLong(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal)>
<android.app.admin.DevicePolicyManager: boolean packageHasActiveAdmins(java.lang.String)>
<android.graphics.Canvas: void rotate(float)>
<android.preference.DialogPreference: void <init>(android.content.Context)>
<android.preference.Preference: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.internal.app.WindowDecorActionBar: void setSubtitle(java.lang.CharSequence)>
<android.view.accessibility.AccessibilityNodeInfo: boolean removeChild(android.view.View,int)>
<android.graphics.Paint: android.graphics.Paint.FontMetricsInt getFontMetricsInt()>
<android.widget.PopupWindow: boolean isClippingEnabled()>
<android.opengl.GLES11Ext: void glDeleteRenderbuffersOES(int,int[],int)>
<android.view.View: void onStartTemporaryDetach()>
<android.inputmethodservice.KeyboardView: void invalidateKey(int)>
<android.media.MediaCodec: android.media.MediaCodec createByCodecName(java.lang.String)>
<android.view.ViewTreeObserver.OnWindowAttachListener: void onWindowAttached()>
<android.view.ViewGroup: void setLayoutAnimation(android.view.animation.LayoutAnimationController)>
<android.widget.SimpleAdapter: int getCount()>
<com.android.internal.os.BatteryStatsImpl.Uid.Proc: com.android.internal.os.BatteryStatsImpl getBatteryStats()>
<android.app.Activity: android.view.View getCurrentFocus()>
<android.telecom.Connection: android.telecom.Connection addConnectionListener(android.telecom.Connection.Listener)>
<android.widget.ExpandableListAdapter: void onGroupCollapsed(int)>
<android.os.storage.StorageManager: boolean isUsbMassStorageEnabled()>
<android.graphics.Paint: android.graphics.Paint.Style getStyle()>
<android.service.wallpaper.WallpaperService.Engine: void onApplyWindowInsets(android.view.WindowInsets)>
<android.widget.AutoCompleteTextView: void setDropDownWidth(int)>
<android.database.AbstractCursor: int getType(int)>
<android.net.http.AndroidHttpClient: long parseDate(java.lang.String)>
<android.app.ActivityManagerProxy: android.app.ActivityOptions getActivityOptions(android.os.IBinder)>
<android.app.IApplicationThread: void scheduleResumeActivity(android.os.IBinder,int,boolean,android.os.Bundle)>
<android.preference.SwitchPreference: java.lang.CharSequence getSwitchTextOff()>
<android.webkit.WebChromeClient: void onReceivedTitle(android.webkit.WebView,java.lang.String)>
<android.opengl.GLES11Ext: void glBindRenderbufferOES(int,int)>
<com.android.internal.view.menu.SubMenuBuilder: void <init>(android.content.Context,com.android.internal.view.menu.MenuBuilder,com.android.internal.view.menu.MenuItemImpl)>
<com.google.android.gles_jni.GLImpl: void glGetFramebufferAttachmentParameterivOES(int,int,int,int[],int)>
<com.android.internal.view.IInputConnectionWrapper: void sendKeyEvent(android.view.KeyEvent)>
<android.widget.ActivityChooserModel.OnChooseActivityListener: boolean onChooseActivity(android.widget.ActivityChooserModel,android.content.Intent)>
<android.graphics.Bitmap: int getByteCount()>
<android.os.StatFs: long getAvailableBytes()>
<android.view.MotionEvent: float getHistoricalTouchMinor(int,int)>
<android.widget.TextView: int getLineCount()>
<android.app.WallpaperManager: int getDesiredMinimumWidth()>
<android.widget.DatePicker: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.media.tv.ITvInputSessionCallback: void onVideoUnavailable(int)>
<android.media.AudioTrack: int setPositionNotificationPeriod(int)>
<android.renderscript.FieldPacker: void addU16(android.renderscript.Int4)>
<android.location.Address: void setThoroughfare(java.lang.String)>
<android.hardware.camera2.utils.TaskDrainer.DrainListener: void onDrained()>
<android.mtp.MtpServer: void removeStorage(android.mtp.MtpStorage)>
<android.graphics.Path: void moveTo(float,float)>
<android.app.PendingIntent: android.app.PendingIntent getActivities(android.content.Context,int,android.content.Intent[],int)>
<android.os.WorkSource: void clearNames()>
<android.net.DhcpResults: void updateFromDhcpRequest(android.net.DhcpResults)>
<android.net.TrafficStats: void setThreadStatsUid(int)>
<android.net.Uri: java.lang.String getPath()>
<android.provider.Downloads.Impl: boolean isStatusClientError(int)>
<android.app.ActivityManagerProxy: void bootAnimationComplete()>
<android.webkit.WebViewProvider.ViewDelegate: void onFinishTemporaryDetach()>
<android.renderscript.Script.LaunchOptions: int getYEnd()>
<android.filterfw.core.FieldPort: boolean hasFrame()>
<android.location.GpsMeasurement: double getSnrInDb()>
<com.android.ims.internal.IImsVideoCallCallback: void changeCameraCapabilities(android.telecom.CameraCapabilities)>
<android.text.DynamicLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean)>
<android.bluetooth.BluetoothHealth: boolean connectChannelToSource(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration)>
<android.bluetooth.IBluetoothGattCallback: void onConfigureMTU(java.lang.String,int,int)>
<android.widget.GridLayout: void <init>(android.content.Context)>
<android.graphics.Matrix: void setSinCos(float,float)>
<android.view.View: boolean isImportantForAccessibility()>
<android.telephony.CellInfoGsm: android.telephony.CellIdentityGsm getCellIdentity()>
<android.graphics.drawable.GradientDrawable: void setCornerRadius(float)>
<android.telephony.Rlog: int w(java.lang.String,java.lang.String)>
<android.opengl.GLES10: void glDepthMask(boolean)>
<android.widget.LinearLayout: void onMeasure(int,int)>
<android.content.RestrictionEntry: void <init>(java.lang.String,java.lang.String[])>
<android.hardware.location.IActivityRecognitionHardware: boolean flush()>
<android.location.LocationManager: void requestSingleUpdate(java.lang.String,android.location.LocationListener,android.os.Looper)>
<android.renderscript.FieldPacker: android.renderscript.Float3 subFloat3()>
<android.filterpacks.imageproc.AlphaBlendFilter: android.filterfw.core.Program getNativeProgram(android.filterfw.core.FilterContext)>
<android.telephony.cdma.CdmaCellLocation: void <init>(android.os.Bundle)>
<android.renderscript.Short2: android.renderscript.Short2 sub(android.renderscript.Short2,android.renderscript.Short2)>
<android.widget.DigitalClock: void onAttachedToWindow()>
<android.app.TimePickerDialog: void onTimeChanged(android.widget.TimePicker,int,int)>
<android.graphics.Bitmap: android.graphics.Bitmap.Config getConfig()>
<com.google.android.gles_jni.GLImpl: void glGetRenderbufferParameterivOES(int,int,java.nio.IntBuffer)>
<android.widget.TextView: java.util.Locale getTextServicesLocale()>
<android.bluetooth.BluetoothInputDevice: boolean getReport(android.bluetooth.BluetoothDevice,byte,byte,int)>
<android.graphics.drawable.VectorDrawable: int getAlpha()>
<android.preference.PreferenceFragment: void onDestroyView()>
<android.net.LinkAddress: boolean equals(java.lang.Object)>
<android.inputmethodservice.ExtractEditLayout: void finishActionMode()>
<android.view.accessibility.AccessibilityRecord: void setScrollY(int)>
<android.preference.PreferenceFrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.os.BatteryStats.HistoryItem: int describeContents()>
<android.app.Dialog: void onPanelClosed(int,android.view.Menu)>
<android.print.PrintJob: boolean isStarted()>
<android.content.pm.PackageParser.PermissionGroup: void setPackageName(java.lang.String)>
<android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>
<android.graphics.drawable.GradientDrawable: int getChangingConfigurations()>
<android.media.session.MediaSession.CallbackStub: void onPlayFromSearch(java.lang.String,android.os.Bundle)>
<android.preference.MultiSelectListPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.net.http.RequestHandle: void setupDigestAuthResponse(boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.view.accessibility.AccessibilityNodeInfo: void setLabelFor(android.view.View)>
<android.content.ContentProvider: android.os.ParcelFileDescriptor openPipeHelper(android.net.Uri,java.lang.String,android.os.Bundle,java.lang.Object,android.content.ContentProvider.PipeDataWriter)>
<android.os.Parcel: void writeBlob(byte[])>
<com.android.internal.app.WindowDecorActionBar: void setLogo(android.graphics.drawable.Drawable)>
<android.view.ActionProvider: android.view.View onCreateActionView(android.view.MenuItem)>
<android.nfc.tech.NfcV: byte getDsfId()>
<android.widget.ActionMenuPresenter: com.android.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)>
<android.view.ViewGroup: int getPersistentDrawingCache()>
<android.view.ContextThemeWrapper: void setTheme(int)>
<android.widget.TabHost: void setup(android.app.LocalActivityManager)>
<android.hardware.camera2.legacy.CameraDeviceUserShim: int createStream(int,int,int,android.view.Surface)>
<android.app.AlertDialog: void setView(android.view.View,int,int,int,int)>
<android.service.voice.AlwaysOnHotwordDetector.Callback: void onError()>
<android.content.res.TypedArray: java.lang.String getNonResourceString(int)>
<android.preference.SeekBarPreference: void setProgress(int)>
<android.location.GpsMeasurement: void setCarrierFrequencyInHz(float)>
<android.content.pm.PackageManager: void installPackageWithVerificationAndEncryption(android.net.Uri,android.content.pm.IPackageInstallObserver,int,java.lang.String,android.content.pm.VerificationParams,android.content.pm.ContainerEncryptionParams)>
<android.renderscript.Float3: void set(android.renderscript.Float3)>
<android.view.MenuItem: android.view.MenuItem setTitleCondensed(java.lang.CharSequence)>
<com.android.internal.http.multipart.ByteArrayPartSource: void <init>(java.lang.String,byte[])>
<android.media.tv.TvView: void requestUnblockContent(android.media.tv.TvContentRating)>
<android.app.Activity: void onLowMemory()>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: boolean canConstantState()>
<android.text.style.TextAppearanceSpan: int getTextStyle()>
<android.hardware.location.GeofenceHardwareCallback: void onGeofenceRemove(int,int)>
<android.view.RenderNode: android.view.RenderNode adopt(long)>
<android.accounts.IAccountManager: void updateAppPermission(android.accounts.Account,java.lang.String,int,boolean)>
<android.view.View: boolean dispatchHoverEvent(android.view.MotionEvent)>
<com.android.internal.view.menu.MenuItemImpl: boolean isActionViewExpanded()>
<com.android.internal.view.menu.ActionMenuItem: android.view.ActionProvider getActionProvider()>
<android.widget.AdapterView.OnItemSelectedListener: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)>
<android.net.NetworkInfo: void <init>(android.net.NetworkInfo)>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder penaltyDeathOnNetwork()>
<android.util.ArrayMap: void clear()>
<android.webkit.WebView: boolean restorePicture(android.os.Bundle,java.io.File)>
<android.media.ClosedCaptionWidget: android.view.accessibility.CaptioningManager.CaptionStyle getCaptionStyle()>
<android.media.tv.TvInputInfo: android.content.Intent createSettingsIntent()>
<android.os.Debug: int getThreadGcInvocationCount()>
<android.os.Parcel: void writeBooleanArray(boolean[])>
<android.widget.TextView: void setUndoManager(android.content.UndoManager,java.lang.String)>
<com.google.android.gles_jni.GLImpl: void glDeleteFramebuffersOES(int,java.nio.IntBuffer)>
<android.widget.ImageView: android.graphics.ColorFilter getColorFilter()>
<android.renderscript.Short2: void add(short)>
<android.webkit.WebViewFragment: void onResume()>
<android.content.res.Resources: java.io.InputStream openRawResource(int,android.util.TypedValue)>
<android.widget.SearchView: void setIconifiedByDefault(boolean)>
<android.text.style.ForegroundColorSpan: void updateDrawState(android.text.TextPaint)>
<android.location.LocationProvider: boolean requiresNetwork()>
<android.filterfw.core.FrameManager: android.filterfw.core.Frame newFrame(android.filterfw.core.FrameFormat)>
<android.app.IActivityManager: long[] getProcessPss(int[])>
<android.graphics.Interpolator: int getValueCount()>
<android.net.wifi.WifiScanner.OperationResult: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.util.TypedProperties: int getInt(java.lang.String,int)>
<android.app.Dialog: void setOnCancelListener(android.content.DialogInterface.OnCancelListener)>
<android.telephony.SubscriptionManager: android.telephony.SubInfoRecord getDefaultSmsSubInfo()>
<android.webkit.WebView: boolean showFindDialog(java.lang.String,boolean)>
<android.content.Loader: android.content.Context getContext()>
<android.net.Credentials: void <init>(int,int,int)>
<android.graphics.Bitmap: boolean isRecycled()>
<android.widget.AutoCompleteTextView.Validator: java.lang.CharSequence fixText(java.lang.CharSequence)>
<android.content.res.AssetFileDescriptor: java.io.FileOutputStream createOutputStream()>
<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>
<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuBuilder getRootMenu()>
<android.view.View: int[] onCreateDrawableState(int)>
<android.security.KeyChain: java.security.cert.X509Certificate toCertificate(byte[])>
<com.android.internal.widget.ActionBarOverlayLayout: boolean shouldDelayChildPressedState()>
<android.view.View: boolean canResolveTextDirection()>
<android.widget.ImageView: boolean getBaselineAlignBottom()>
<android.opengl.GLES31: void glProgramUniform3ui(int,int,int,int,int)>
<android.text.Editable: android.text.Editable append(java.lang.CharSequence,int,int)>
<android.app.FragmentBreadCrumbs: void onMeasure(int,int)>
<com.android.internal.util.BitwiseInputStream: int read(int)>
<android.location.Address: boolean hasLongitude()>
<android.view.accessibility.AccessibilityManager: boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager.AccessibilityStateChangeListener)>
<android.opengl.EGL14: android.opengl.EGLDisplay eglGetDisplay(int)>
<android.provider.Contacts.People: android.database.Cursor queryGroups(android.content.ContentResolver,long)>
<android.content.res.AssetManager: void close()>
<android.view.View: boolean onKeyPreIme(int,android.view.KeyEvent)>
<android.emoji.EmojiFactory: java.lang.String getVendorSpecificPuaFromAndroidPua(java.lang.String)>
<android.opengl.GLES11Ext: void glBindFramebufferOES(int,int)>
<android.widget.RelativeLayout: int getGravity()>
<android.view.animation.ScaleAnimation: void <init>(float,float,float,float)>
<com.android.internal.view.menu.ActionMenuItemView: boolean prefersCondensedTitle()>
<com.android.internal.widget.PasswordEntryKeyboardView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.renderscript.Font: android.renderscript.Font createFromFile(android.renderscript.RenderScript,android.content.res.Resources,java.io.File,float)>
<android.hardware.display.VirtualDisplay: android.view.Display getDisplay()>
<android.speech.srec.UlawEncoderInputStream: void close()>
<android.service.notification.NotificationListenerService: void onNotificationPosted(android.service.notification.StatusBarNotification)>
<android.widget.AutoCompleteTextView: void setDropDownAlwaysVisible(boolean)>
<android.renderscript.FieldPacker: void addU8(short)>
<com.android.server.net.BaseNetworkObserver: void interfaceClassDataActivityChanged(java.lang.String,boolean,long)>
<android.nfc.NdefRecord: java.lang.String toMimeType()>
<android.nfc.tech.Ndef: android.nfc.tech.Ndef get(android.nfc.Tag)>
<android.net.ProxyInfo: void <init>(android.net.Uri,int)>
<android.service.notification.ZenModeConfig: boolean isValid()>
<android.app.FragmentManagerImpl: android.app.FragmentTransaction beginTransaction()>
<com.android.internal.http.multipart.FilePartSource: long getLength()>
<android.telephony.PhoneNumberUtils: java.lang.String replaceUnicodeDigits(java.lang.String)>
<android.graphics.Canvas: long getNativeCanvasWrapper()>
<com.android.internal.view.StandaloneActionMode: android.view.MenuInflater getMenuInflater()>
<android.preference.PreferenceGroup: boolean removePreference(android.preference.Preference)>
<android.media.audiofx.AudioEffect: void setControlStatusListener(android.media.audiofx.AudioEffect.OnControlStatusChangeListener)>
<android.view.Window: void clearFlags(int)>
<android.widget.GridView: int getRequestedColumnWidth()>
<android.os.BatteryStats: long getNetworkActivityPackets(int,int)>
<android.view.ViewConfiguration: int getScaledScrollBarSize()>
<android.inputmethodservice.InputMethodService.InputMethodImpl: void bindInput(android.view.inputmethod.InputBinding)>
<android.util.ArrayMap: void append(java.lang.Object,java.lang.Object)>
<android.view.inputmethod.InputMethodManager: void reportFinishInputConnection(android.view.inputmethod.InputConnection)>
<android.text.Layout: int getLineEnd(int)>
<android.filterpacks.imageproc.PosterizeFilter: void process(android.filterfw.core.FilterContext)>
<com.android.internal.view.menu.MenuPopupHelper: void onCloseMenu(com.android.internal.view.menu.MenuBuilder,boolean)>
<android.opengl.GLES30: void glUniformMatrix4x2fv(int,int,boolean,java.nio.FloatBuffer)>
<android.hardware.input.InputManager: android.hardware.input.InputManager getInstance()>
<com.android.internal.app.ToolbarActionBar: void show()>
<android.telephony.TelephonyManager: void toggleRadioOnOff()>
<android.bluetooth.IBluetoothGattCallback: void onGetService(java.lang.String,int,int,android.os.ParcelUuid)>
<android.net.BaseNetworkStateTracker: boolean setRadio(boolean)>
<com.google.android.gles_jni.GLImpl: void glMultiTexCoord4f(int,float,float,float,float)>
<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet,int,java.util.Map,boolean)>
<android.app.Activity: void addContentView(android.view.View,android.view.ViewGroup.LayoutParams)>
<android.app.WallpaperManager: void clear()>
<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setCheckable(boolean)>
<android.telephony.CellIdentityCdma: int getBasestationId()>
<com.android.internal.telephony.IMms: void updateMmsDownloadStatus(int,int)>
<android.content.ContentQueryMap: void <init>(android.database.Cursor,java.lang.String,boolean,android.os.Handler)>
<android.os.BaseBundle: boolean isParcelled()>
<android.bluetooth.IBluetoothGatt: void refreshDevice(int,java.lang.String)>
<android.media.session.MediaController.Callback: void onQueueTitleChanged(java.lang.CharSequence)>
<android.graphics.drawable.Drawable: void setXfermode(android.graphics.Xfermode)>
<android.webkit.WebViewProvider: android.graphics.Picture capturePicture()>
<android.app.VoiceInteractor.CommandRequest: void onCommandResult(android.os.Bundle)>
<android.provider.Settings.Global: int getInt(android.content.ContentResolver,java.lang.String,int)>
<com.android.internal.widget.DecorContentParent: void setIcon(int)>
<android.view.textservice.SpellCheckerInfo: android.view.textservice.SpellCheckerSubtype getSubtypeAt(int)>
<android.app.Fragment: int getTargetRequestCode()>
<android.graphics.drawable.BitmapDrawable: int getIntrinsicWidth()>
<com.android.internal.view.menu.IconMenuItemView: void setTitle(java.lang.CharSequence)>
<android.webkit.FindActionModeCallback.NoAction: boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu)>
<android.telephony.SignalStrength: void <init>(boolean)>
<android.util.LongArray: void <init>(int)>
<android.speech.srec.Recognizer: void setAcousticState(java.lang.String)>
<android.opengl.GLES20: void glGetVertexAttribfv(int,int,java.nio.FloatBuffer)>
<android.media.session.MediaController.TransportControls: void skipToQueueItem(long)>
<android.media.AudioManager: boolean isMicrophoneMute()>
<android.appwidget.AppWidgetProvider: void onDisabled(android.content.Context)>
<android.speech.tts.UtteranceProgressListener: void onError(java.lang.String,int)>
<android.hardware.location.ActivityChangedEvent: java.lang.String toString()>
<android.net.http.HttpResponseCache: java.net.CacheRequest put(java.net.URI,java.net.URLConnection)>
<android.widget.RadioGroup: void <init>(android.content.Context)>
<android.renderscript.Allocation: void setFromFieldPacker(int,android.renderscript.FieldPacker)>
<android.app.admin.DeviceAdminReceiver: void onPasswordFailed(android.content.Context,android.content.Intent)>
<android.os.Binder: android.os.IInterface queryLocalInterface(java.lang.String)>
<android.content.Context: void startActivities(android.content.Intent[])>
<android.speech.tts.SynthesisCallback: int audioAvailable(byte[],int,int)>
<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>
<android.location.GpsMeasurement: void resetCarrierCycles()>
<android.database.MatrixCursor: long getLong(int)>
<android.app.IApplicationThread: void profilerControl(boolean,android.app.ProfilerInfo,int)>
<android.webkit.WebSettings: boolean getDisplayZoomControls()>
<android.hardware.Camera.Parameters: void setPreviewFormat(int)>
<com.android.internal.app.WindowDecorActionBar: void setNavigationMode(int)>
<android.widget.PopupMenu: void onCloseSubMenu(com.android.internal.view.menu.SubMenuBuilder)>
<android.widget.BaseExpandableListAdapter: void registerDataSetObserver(android.database.DataSetObserver)>
<android.content.IContentProvider: android.content.ContentProviderResult[] applyBatch(java.lang.String,java.util.ArrayList)>
<android.net.wifi.RttManager: void stopRanging(android.net.wifi.RttManager.RttListener)>
<com.android.internal.os.ProcessCpuTracker: com.android.internal.os.ProcessCpuTracker.Stats getStats(int)>
<android.view.accessibility.AccessibilityNodeInfo: int getMaxTextLength()>
<android.content.SyncRequest.Builder: android.content.SyncRequest.Builder syncOnce()>
<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothSocket createRfcommSocket(int)>
<android.database.sqlite.SQLiteCursorDriver: android.database.Cursor query(android.database.sqlite.SQLiteDatabase.CursorFactory,java.lang.String[])>
<android.app.Fragment: void setExitTransition(android.transition.Transition)>
<android.media.MediaRecorder: void setAuxiliaryOutputFile(java.lang.String)>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder permitNetwork()>
<android.view.View: float getRotationY()>
<android.renderscript.BaseObj: void destroy()>
<com.google.android.gles_jni.GLImpl: void glFrustumf(float,float,float,float,float,float)>
<android.renderscript.Allocation: void copyFromUnchecked(byte[])>
<android.view.accessibility.AccessibilityNodeInfo: void getBoundsInParent(android.graphics.Rect)>
<android.webkit.WebView: java.lang.String findAddress(java.lang.String)>
<android.renderscript.Program.BaseProgramBuilder: android.renderscript.Program.BaseProgramBuilder addTexture(android.renderscript.Program.TextureType)>
<android.widget.GridView: void <init>(android.content.Context)>
<android.media.SubtitleData: int getTrackIndex()>
<com.android.internal.util.ImageUtils: boolean isGrayscale(android.graphics.Bitmap)>
<android.service.voice.VoiceInteractionServiceInfo: void <init>(android.content.pm.PackageManager,android.content.ComponentName,int)>
<android.net.IConnectivityManager: boolean removeVpnAddress(java.lang.String,int)>
<com.google.android.util.AbstractMessageParser.Video: java.util.List getInfo()>
<android.net.IpPrefix: int hashCode()>
<android.app.ActivityManagerProxy: void handleApplicationStrictModeViolation(android.os.IBinder,int,android.os.StrictMode.ViolationInfo)>
<android.nfc.Tag: android.nfc.Tag createMockTag(byte[],int[],android.os.Bundle[])>
<android.renderscript.Float3: void negate()>
<android.media.tv.ITvInputManager: android.media.tv.TvInputInfo getTvInputInfo(java.lang.String,int)>
<com.android.internal.app.ToolbarActionBar: android.view.View getCustomView()>
<android.net.NetworkStats: int describeContents()>
<android.os.FileObserver: void finalize()>
<android.app.IUiModeManager: void setNightMode(int)>
<android.widget.GridView: int getStretchMode()>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo obtain()>
<android.app.Instrumentation: boolean onException(java.lang.Object,java.lang.Throwable)>
<android.preference.Preference: java.lang.String toString()>
<android.filterfw.core.InputPort: android.filterfw.core.Filter getSourceFilter()>
<android.net.wifi.WifiConfiguration: int getAuthType()>
<android.app.DownloadManager.Query: android.app.DownloadManager.Query orderBy(java.lang.String,int)>
<android.bluetooth.IBluetoothGattCallback: void onClientRegistered(int,int)>
<android.filterfw.core.Frame: android.filterfw.core.FrameManager getFrameManager()>
<android.media.MediaCodecInfo.EncoderCapabilities: android.util.Range getComplexityRange()>
<com.android.internal.os.BatteryStatsImpl.Uid: void reportExcessiveCpuLocked(java.lang.String,long,long)>
<android.widget.HorizontalScrollView: void onOverScrolled(int,int,boolean,boolean)>
<android.view.inputmethod.InputBinding: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.widget.WaveView: void reset()>
<android.view.accessibility.AccessibilityNodeInfo: void addChild(android.view.View,int)>
<android.media.AudioManager: void setParameters(java.lang.String)>
<android.content.pm.PackageManager: boolean getApplicationHiddenSettingAsUser(java.lang.String,android.os.UserHandle)>
<android.os.Debug: int setAllocationLimit(int)>
<android.renderscript.ScriptIntrinsicBlend: void forEachSrcOut(android.renderscript.Allocation,android.renderscript.Allocation)>
<android.opengl.GLES11: void glGetFloatv(int,float[],int)>
<android.view.IWindow: void dispatchGetNewSurface()>
<android.graphics.Paint: float descent()>
<android.hardware.camera2.CameraCaptureSession.StateCallback: void onActive(android.hardware.camera2.CameraCaptureSession)>
<android.app.Fragment: boolean isRemoving()>
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothServerSocket listenUsingInsecureRfcommOn(int)>
<android.hardware.soundtrigger.SoundTrigger.ConfidenceLevel: void <init>(int,int)>
<android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback: void onRemoteAdapterDisconnected()>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<android.telephony.DataConnectionRealTimeInfo: int hashCode()>
<android.webkit.WebViewProvider: void loadUrl(java.lang.String)>
<android.net.http.X509TrustManagerExtensions: void <init>(javax.net.ssl.X509TrustManager)>
<android.widget.EditText: boolean performAccessibilityAction(int,android.os.Bundle)>
<android.text.StaticLayout: android.text.Layout.Directions getLineDirections(int)>
<android.database.AbstractCursor: void onChange(boolean)>
<android.renderscript.ScriptIntrinsicBlend: void forEachDstAtop(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>
<android.hardware.camera2.legacy.LegacyFocusStateMapper: void processRequestTriggers(android.hardware.camera2.CaptureRequest,android.hardware.Camera.Parameters)>
<android.webkit.WebResourceResponse: void <init>(java.lang.String,java.lang.String,java.io.InputStream)>
<android.widget.TextView: int getCurrentHintTextColor()>
<android.util.PathParser: boolean canMorph(android.util.PathParser.PathDataNode[],android.util.PathParser.PathDataNode[])>
<android.media.tv.ITvInputSession: void tune(android.net.Uri,android.os.Bundle)>
<com.android.internal.widget.multiwaveview.TargetDrawable: void setY(float)>
<android.provider.BrowserContract.SyncState: void set(android.content.ContentProviderClient,android.accounts.Account,byte[])>
<android.opengl.GLES20: java.lang.String glGetActiveUniform(int,int,int[],int,int[],int)>
<android.widget.RelativeLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.internal.os.SomeArgs: void recycle()>
<android.nfc.tech.Ndef: void writeNdefMessage(android.nfc.NdefMessage)>
<android.net.wifi.p2p.WifiP2pManager: void cancelConnect(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ActionListener)>
<android.app.backup.BackupDataInput: void <init>(java.io.FileDescriptor)>
<android.view.ScaleGestureDetector: float getPreviousSpan()>
<android.graphics.Atlas: android.graphics.Atlas.Entry pack(int,int)>
<android.net.wifi.WifiConfiguration: java.lang.String configKey()>
<android.webkit.CookieManager: void setAcceptThirdPartyCookies(android.webkit.WebView,boolean)>
<android.graphics.Canvas: int saveLayer(float,float,float,float,android.graphics.Paint)>
<com.android.internal.os.BatteryStatsHelper: double getMaxPower()>
<com.android.internal.view.menu.MenuBuilder: android.view.View getHeaderView()>
<android.widget.ZoomButtonsController: void <init>(android.view.View)>
<android.app.Fragment: void onActivityCreated(android.os.Bundle)>
<android.hardware.usb.UsbDevice: java.lang.String getSerialNumber()>
<android.opengl.GLES31: void glGetTexLevelParameteriv(int,int,int,java.nio.IntBuffer)>
<android.app.ActivityThread: void main(java.lang.String[])>
<android.renderscript.RenderScript: void setErrorHandler(android.renderscript.RenderScript.RSErrorHandler)>
<android.print.PrintDocumentAdapter.WriteResultCallback: void onWriteFailed(java.lang.CharSequence)>
<android.database.DatabaseUtils: void cursorDoubleToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)>
<android.content.pm.VerificationParams: android.net.Uri getReferrer()>
<com.android.internal.widget.ToolbarWidgetWrapper: boolean canSplit()>
<android.media.session.MediaController: void registerCallback(android.media.session.MediaController.Callback)>
<android.gesture.GestureOverlayView: void addOnGestureListener(android.gesture.GestureOverlayView.OnGestureListener)>
<android.content.IntentFilter: boolean hasExactDataType(java.lang.String)>
<android.net.ConnectivityManager: android.net.Network getNetworkForType(int)>
<android.app.backup.IRestoreObserver: void onUpdate(int,java.lang.String)>
<android.hardware.Sensor: int getMinDelay()>
<android.app.IActivityPendingResult: boolean sendResult(int,java.lang.String,android.os.Bundle)>
<android.text.style.AbsoluteSizeSpan: void updateDrawState(android.text.TextPaint)>
<android.view.InputDevice: java.lang.String toString()>
<android.opengl.GLES11Ext: void glMultMatrixxOES(java.nio.IntBuffer)>
<android.text.Selection: boolean moveUp(android.text.Spannable,android.text.Layout)>
<com.android.internal.widget.ToolbarWidgetWrapper: void <init>(android.widget.Toolbar,boolean,int)>
<android.hardware.camera2.legacy.RequestQueue: long stopRepeating(int)>
<android.widget.TabHost: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.telecom.PhoneAccount: java.util.List getSupportedUriSchemes()>
<android.media.tv.TvInputService.Session: void onSetCaptionEnabled(boolean)>
<android.transition.ChangeImageTransform: void <init>(android.content.Context,android.util.AttributeSet)>
<android.view.View: void setBackgroundTintMode(android.graphics.PorterDuff.Mode)>
<android.text.method.PasswordTransformationMethod: void onTextChanged(java.lang.CharSequence,int,int,int)>
<android.webkit.WebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)>
<android.drm.DrmRights: void <init>(java.io.File,java.lang.String)>
<android.app.LauncherActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
<android.webkit.WebChromeClient.FileChooserParams: android.net.Uri[] parseResult(int,android.content.Intent)>
<com.android.internal.view.menu.ActionMenuItemView.PopupCallback: android.widget.ListPopupWindow getPopup()>
<android.widget.VideoView: void setVideoURI(android.net.Uri,java.util.Map)>
<android.view.accessibility.AccessibilityNodeInfo: void addChildUnchecked(android.view.View)>
<android.app.Fragment: android.transition.Transition getEnterTransition()>
<android.telecom.PhoneAccount.Builder: android.telecom.PhoneAccount.Builder setIconResId(int)>
<android.net.MobileDataStateTracker: void addStackedLink(android.net.LinkProperties)>
<android.content.pm.PackageManager.NameNotFoundException: void <init>(java.lang.String)>
<android.media.session.MediaController.Callback: void onAudioInfoChanged(android.media.session.MediaController.PlaybackInfo)>
<android.appwidget.AppWidgetProviderInfo: android.appwidget.AppWidgetProviderInfo clone()>
<android.app.admin.IDevicePolicyManager: void setGlobalSetting(android.content.ComponentName,java.lang.String,java.lang.String)>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator translationZ(float)>
<android.net.MobileLinkQualityInfo: int getLteRssnr()>
<android.app.Activity: void onDestroy()>
<android.graphics.LinearGradient: android.graphics.Shader copy()>
<com.android.internal.widget.ActionBarOverlayLayout: boolean isHideOnContentScrollEnabled()>
<android.nfc.tech.MifareClassic: void writeBlock(int,byte[])>
<com.android.internal.util.MemInfoReader: long getFreeSizeKb()>
<com.android.internal.widget.SubtitleView: void onMeasure(int,int)>
<com.android.internal.app.WindowDecorActionBar.TabImpl: java.lang.CharSequence getText()>
<android.text.TextUtils: java.lang.CharSequence expandTemplate(java.lang.CharSequence,java.lang.CharSequence[])>
<android.os.Looper: void quit()>
<android.animation.Animator: void cancel()>
<android.view.ActionProvider.VisibilityListener: void onActionProviderVisibilityChanged(boolean)>
<android.filterfw.geometry.Rectangle: float getWidth()>
<android.graphics.Canvas: void restore()>
<android.widget.ActivityChooserModel.ActivitySorter: void sort(android.content.Intent,java.util.List,java.util.List)>
<android.media.MediaRouter.RouteInfo: int getStatusCode()>
<android.view.WindowManagerPolicy.WindowState: boolean isGoneForLayoutLw()>
<android.view.accessibility.AccessibilityNodeInfo: void setScrollable(boolean)>
<android.media.SubtitleTrack.RenderingWidget: void setVisible(boolean)>
<android.text.method.LinkMovementMethod: void initialize(android.widget.TextView,android.text.Spannable)>
<android.net.wifi.WifiConfiguration: void setStaticIpConfiguration(android.net.StaticIpConfiguration)>
<android.media.audiofx.AudioEffect: int getParameter(int,byte[])>
<android.media.AudioService.VolumeController: void setVisible(boolean)>
<com.android.internal.util.StateMachine: void addState(com.android.internal.util.State)>
<android.location.GpsClock: void setLeapSecond(short)>
<android.net.DhcpStateMachine: void onQuitting()>
<android.nfc.tech.MifareClassic: void increment(int,int)>
<android.location.Geofence: int hashCode()>
<com.android.internal.view.IInputMethodManager: void showMySoftInput(android.os.IBinder,int)>
<android.graphics.TableMaskFilter: android.graphics.TableMaskFilter CreateGammaTable(float)>
<android.content.ContextWrapper: android.content.Context getApplicationContext()>
<android.media.Rating: int getRatingStyle()>
<android.widget.NumberPicker: void setMinValue(int)>
<com.android.internal.policy.IFaceLockCallback: void unlock()>
<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>
<android.media.MediaHTTPConnection: long getSize()>
<android.view.ViewRootImpl: void dispatchAppVisibility(boolean)>
<android.provider.SyncStateContract.Helpers: byte[] get(android.content.ContentProviderClient,android.net.Uri,android.accounts.Account)>
<android.net.MobileLinkQualityInfo: void setLteRssnr(int)>
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setActionView(android.view.View)>
<android.webkit.FindActionModeCallback: void findAll()>
<android.hardware.Camera.Parameters: void setRotation(int)>
<android.print.PrintAttributes.MediaSize: int getWidthMils()>
<android.os.storage.IMountService: int unmountSecureContainer(java.lang.String,boolean)>
<android.filterfw.core.GLEnvironment: void activate()>
<com.android.internal.os.TransferPipe: void go(java.io.FileDescriptor,long)>
<android.location.GpsMeasurement: double getElevationUncertaintyInDeg()>
<android.filterfw.core.FrameFormat: java.lang.String baseTypeToString(int)>
<android.text.DynamicLayout: void <init>(java.lang.CharSequence,java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean,android.text.TextUtils.TruncateAt,int)>
<android.hardware.location.GeofenceHardwareImpl: void reportGeofenceAddStatus(int,int)>
<android.view.accessibility.AccessibilityNodeInfo: void setContentInvalid(boolean)>
<android.app.KeyguardManager.OnKeyguardExitResult: void onKeyguardExitResult(boolean)>
<android.graphics.Matrix: boolean postRotate(float)>
<android.webkit.WebViewProvider.ViewDelegate: boolean onKeyUp(int,android.view.KeyEvent)>
<android.database.sqlite.SQLiteSession: int executeForCursorWindow(java.lang.String,java.lang.Object[],android.database.CursorWindow,int,int,boolean,int,android.os.CancellationSignal)>
<android.view.inputmethod.BaseInputConnection: boolean commitCompletion(android.view.inputmethod.CompletionInfo)>
<com.android.internal.backup.IBackupTransport: int clearBackupData(android.content.pm.PackageInfo)>
<android.provider.SearchIndexableResource: java.lang.String toString()>
<android.mtp.MtpStorage: java.lang.String getPath()>
<android.widget.PopupWindow: void setWindowLayoutType(int)>
<com.android.internal.widget.ScrollingTabContainerView: void animateToVisibility(int)>
<android.hardware.camera2.legacy.CameraDeviceState.CameraDeviceStateListener: void onIdle()>
<android.graphics.drawable.ShapeDrawable: void setShaderFactory(android.graphics.drawable.ShapeDrawable.ShaderFactory)>
<android.media.audiofx.Equalizer: int[] getBandFreqRange(short)>
<android.transition.Transition.TransitionListener: void onTransitionPause(android.transition.Transition)>
<android.webkit.WebView: android.webkit.PluginList getPluginList()>
<android.content.ClipboardManager: boolean hasText()>
<android.app.Application: void onLowMemory()>
<android.app.ActivityManagerProxy: int getLaunchedFromUid(android.os.IBinder)>
<android.os.Parcel: java.util.ArrayList createTypedArrayList(android.os.Parcelable.Creator)>
<android.os.UserHandle: void writeToParcel(android.os.UserHandle,android.os.Parcel)>
<android.widget.SearchView: boolean isIconified()>
<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.Drawable mutate()>
<android.hardware.camera2.impl.CameraMetadataNative: void readFromParcel(android.os.Parcel)>
<android.media.MediaFormat: void setFloat(java.lang.String,float)>
<android.widget.SpellChecker: void onSpellCheckSpanRemoved(android.text.style.SpellCheckSpan)>
<com.android.internal.util.XmlUtils: int convertValueToList(java.lang.CharSequence,java.lang.String[],int)>
<android.net.LinkProperties: boolean isIdenticalRoutes(android.net.LinkProperties)>
<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl.Uid.Pkg getPackageStatsLocked(int,java.lang.String)>
<android.hardware.camera2.impl.CallbackProxies.DeviceStateCallbackProxy: void onIdle(android.hardware.camera2.CameraDevice)>
<android.media.audiofx.Visualizer: int[] getCaptureSizeRange()>
<android.net.Network: java.net.InetAddress[] getAllByName(java.lang.String)>
<android.filterpacks.imageproc.ToGrayFilter: android.filterfw.core.Program getNativeProgram(android.filterfw.core.FilterContext)>
<android.graphics.PathEffect: void finalize()>
<android.bluetooth.BluetoothAudioConfig: int hashCode()>
<com.android.internal.widget.multiwaveview.GlowPadView: void ping()>
<android.os.BatteryStats.Uid: void noteActivityPausedLocked(long)>
<android.text.style.ScaleXSpan: int getSpanTypeId()>
<android.content.pm.PackageManager: java.util.List queryContentProviders(java.lang.String,int,int)>
<android.media.tv.ITvInputServiceCallback: void addHardwareTvInput(int,android.media.tv.TvInputInfo)>
<android.content.pm.VerificationParams: void writeToParcel(android.os.Parcel,int)>
<android.net.wifi.IWifiManager: java.lang.String getConfigFile()>
<android.os.Parcel: android.os.Bundle readBundle()>
<android.telecom.Connection.Listener: void onCallCapabilitiesChanged(android.telecom.Connection,int)>
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothServerSocket listenUsingInsecureRfcommWithServiceRecord(java.lang.String,java.util.UUID)>
<android.media.AudioManager: int abandonAudioFocus(android.media.AudioManager.OnAudioFocusChangeListener)>
<android.app.ActivityGroup: void <init>(boolean)>
<android.app.admin.DevicePolicyManager: java.util.List getPermittedAccessibilityServices(int)>
<android.bluetooth.BluetoothClass: boolean doesClassMatch(int)>
<android.net.NetworkUtils: java.net.InetAddress getNetworkPart(java.net.InetAddress,int)>
<android.media.ImageReader: int getWidth()>
<android.graphics.Bitmap: int getScaledWidth(android.graphics.Canvas)>
<android.app.VoiceInteractor.ConfirmationRequest: void onConfirmationResult(boolean,android.os.Bundle)>
<android.view.ViewRootImpl: boolean isViewDescendantOf(android.view.View,android.view.View)>
<android.content.pm.RegisteredServicesCache.ServiceInfo: java.lang.String toString()>
<android.media.tv.TvTrackInfo: int getType()>
<android.view.View: void setVerticalScrollbarPosition(int)>
<android.location.FusedBatchOptions: long getPeriodInNS()>
<android.media.MediaRecorder: void setProfile(android.media.CamcorderProfile)>
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>
<android.webkit.WebViewDatabase: boolean hasHttpAuthUsernamePassword()>
<com.android.internal.widget.ScrollingTabContainerView: void setAllowCollapse(boolean)>
<android.net.ProxyInfo: java.lang.String[] getExclusionList()>
<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo: int getColumnCount()>
<android.view.View: boolean dispatchGenericPointerEvent(android.view.MotionEvent)>
<android.util.EventLog: int writeEvent(int,java.lang.Object[])>
<android.widget.OverScroller: void fling(int,int,int,int,int,int,int,int)>
<android.media.IAudioService: void playSoundEffect(int)>
<android.renderscript.Int2: void div(android.renderscript.Int2)>
<android.widget.RemoteViewsService.RemoteViewsFactory: void onDataSetChanged()>
<android.text.util.Rfc822Token: java.lang.String quoteName(java.lang.String)>
<android.graphics.Picture: void endRecording()>
<android.graphics.drawable.ColorDrawable: android.graphics.drawable.Drawable mutate()>
<android.service.fingerprint.IFingerprintService: void startListening(android.os.IBinder,android.service.fingerprint.IFingerprintServiceReceiver,int)>
<android.net.wifi.WifiConnectionStatistics: int describeContents()>
<com.android.internal.view.menu.MenuView.ItemView: void setIcon(android.graphics.drawable.Drawable)>
<android.telephony.SignalStrength: void initialize(int,int,int,int,int,int,int,int,int,int,int,int,boolean)>
<android.content.ComponentName: android.content.ComponentName readFromParcel(android.os.Parcel)>
<android.widget.RemoteViews: void setInt(int,java.lang.String,int)>
<android.telephony.CellInfoWcdma: void setCellSignalStrength(android.telephony.CellSignalStrengthWcdma)>
<android.util.LongSparseArray: void append(long,java.lang.Object)>
<android.widget.AbsSeekBar: boolean onTouchEvent(android.view.MotionEvent)>
<android.net.IConnectivityManager: android.net.NetworkRequest requestNetwork(android.net.NetworkCapabilities,android.os.Messenger,int,android.os.IBinder,int)>
<android.widget.GridLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.media.tv.TvContentRating: java.util.List getSubRatings()>
<android.media.AudioMixPortConfig: android.media.AudioMixPort port()>
<android.opengl.GLES31: void glDispatchCompute(int,int,int)>
<android.app.IActivityManager: boolean startInstrumentation(android.content.ComponentName,java.lang.String,int,android.os.Bundle,android.app.IInstrumentationWatcher,android.app.IUiAutomationConnection,int,java.lang.String)>
<android.view.WindowManagerImpl: android.view.Display getDefaultDisplay()>
<android.graphics.drawable.AnimationDrawable: void stop()>
<android.app.WallpaperManager: android.graphics.drawable.Drawable getDrawable()>
<android.os.Environment.UserEnvironment: java.io.File[] buildExternalStorageAndroidObbDirs()>
<android.media.tv.TvInputService.Session: void setOverlayViewEnabled(boolean)>
<android.content.ContextWrapper: java.lang.ClassLoader getClassLoader()>
<android.location.GpsClock: byte getType()>
<android.content.Context: boolean isRestricted()>
<android.os.WorkSource: android.os.WorkSource[] setReturningDiffs(android.os.WorkSource)>
<android.hardware.location.GeofenceHardwareRequest: void setSourceTechnologies(int)>
<android.graphics.drawable.BitmapDrawable: void setFilterBitmap(boolean)>
<android.app.usage.UsageEvents.Event: java.lang.String getClassName()>
<android.widget.PopupWindow: int getWidth()>
<android.drm.DrmInfoRequest: int getInfoType()>
<com.android.internal.view.menu.ActionMenuItemView: void setPadding(int,int,int,int)>
<android.graphics.Paint: void setFlags(int)>
<com.android.internal.widget.LockPatternUtils: long getLockoutAttemptDeadline()>
<android.os.Parcel: void writeInterfaceToken(java.lang.String)>
<android.hardware.hdmi.HdmiDeviceInfo: int idForMhlDevice(int)>
<android.content.pm.PackageParser: android.content.pm.PackageInfo generatePackageInfo(android.content.pm.PackageParser.Package,int[],int,long,long,java.util.HashSet,android.content.pm.PackageUserState)>
<android.location.FusedBatchOptions: int describeContents()>
<android.widget.GridView: int getRequestedHorizontalSpacing()>
<android.view.View: boolean hasOnClickListeners()>
<android.view.accessibility.AccessibilityNodeInfo: boolean isPassword()>
<android.widget.AbsListView: void <init>(android.content.Context)>
<com.android.internal.widget.LockPatternView: void setPattern(com.android.internal.widget.LockPatternView.DisplayMode,java.util.List)>
<com.android.internal.telecom.IConnectionService: void answerVideo(java.lang.String,int)>
<android.database.Cursor: long getLong(int)>
<android.webkit.WebSettings: void setAllowFileAccess(boolean)>
<android.graphics.RectF: void printShortString(java.io.PrintWriter)>
<android.graphics.drawable.RippleDrawable: boolean onStateChange(int[])>
<android.hardware.Sensor: int getHandle()>
<com.android.ims.ImsCallProfile: int getCallExtraInt(java.lang.String,int)>
<android.os.Parcel: void writeInt(int)>
<android.speech.RecognitionService.Callback: void bufferReceived(byte[])>
<android.app.IServiceConnection: void connected(android.content.ComponentName,android.os.IBinder)>
<android.widget.TableRow.LayoutParams: void <init>(android.view.ViewGroup.MarginLayoutParams)>
<android.speech.srec.UlawEncoderInputStream: int read(byte[],int,int)>
<android.view.Display: java.lang.String typeToString(int)>
<android.renderscript.Byte2: android.renderscript.Byte2 mul(android.renderscript.Byte2,byte)>
<android.widget.ShareActionProvider: android.view.View onCreateActionView()>
<android.view.InputChannel: java.lang.String toString()>
<android.preference.Preference: int getTitleRes()>
<android.widget.ScrollView: void addView(android.view.View)>
<android.renderscript.Float3: int length()>
<android.renderscript.Sampler.Builder: void setWrapS(android.renderscript.Sampler.Value)>
<android.view.View: void setRight(int)>
<android.view.ViewRootImpl: android.view.View getView()>
<android.preference.GenericInflater.Factory: java.lang.Object onCreateItem(java.lang.String,android.content.Context,android.util.AttributeSet)>
<android.app.LoaderManagerImpl: java.lang.String toString()>
<android.telephony.TelephonyManager: java.lang.String getSubscriberId(long)>
<android.app.ProgressDialog: void setProgress(int)>
<com.android.internal.os.BatteryStatsImpl: void noteCurrentTimeChangedLocked()>
<android.view.KeyCharacterMap: int get(int,int)>
<android.text.SpannedString: void <init>(java.lang.CharSequence)>
<android.widget.ZoomButtonsController: void setZoomOutEnabled(boolean)>
<android.preference.CheckBoxPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.content.res.TypedArray: int getInteger(int,int)>
<android.os.RemoteCallbackList: void onCallbackDied(android.os.IInterface)>
<android.media.WebVttTrack: android.media.WebVttRenderingWidget getRenderingWidget()>
<android.view.TextureView: void setOpaque(boolean)>
<android.filterpacks.imageproc.RotateFilter: void setupPorts()>
<android.graphics.drawable.NinePatchDrawable: void draw(android.graphics.Canvas)>
<com.android.internal.os.BatteryStatsImpl: void prepareForDumpLocked()>
<android.app.ApplicationThreadProxy: void scheduleUnbindService(android.os.IBinder,android.content.Intent)>
<android.text.style.ForegroundColorSpan: int getForegroundColor()>
<android.view.View: android.view.ContextMenu.ContextMenuInfo getContextMenuInfo()>
<android.util.SparseLongArray: void put(int,long)>
<android.widget.CalendarView.CalendarViewDelegate: long getMinDate()>
<android.net.wifi.RttManager.ParcelableRttParams: int describeContents()>
<android.view.animation.Animation: void cancel()>
<android.speech.tts.ITextToSpeechService: int loadVoice(android.os.IBinder,java.lang.String)>
<android.view.View: void setMeasuredDimension(int,int)>
<android.content.pm.ServiceInfo: java.lang.String toString()>
<android.print.PrintDocumentInfo: int getContentType()>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLetters(android.content.ComponentName,int)>
<android.view.View: void setClickable(boolean)>
<android.media.TimedText: java.lang.String getText()>
<android.content.Loader: void registerListener(int,android.content.Loader.OnLoadCompleteListener)>
<android.inputmethodservice.ExtractEditText: void <init>(android.content.Context,android.util.AttributeSet)>
<android.media.ImageReader: int getMaxImages()>
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String capabilityToString(int)>
<android.renderscript.ScriptIntrinsicColorMatrix: void setColorMatrix(android.renderscript.Matrix3f)>
<android.preference.PreferenceActivity: void onContentChanged()>
<com.android.internal.app.ToolbarActionBar: boolean collapseActionView()>
<android.content.ContentResolver: void cancelSyncAsUser(android.accounts.Account,java.lang.String,int)>
<android.view.View: void onRtlPropertiesChanged(int)>
<android.app.ActionBar: boolean isHideOnContentScrollEnabled()>
<android.util.TypedValue: int complexToDimensionPixelSize(int,android.util.DisplayMetrics)>
<android.net.wifi.p2p.WifiP2pDevice: boolean isServiceDiscoveryCapable()>
<android.hardware.camera2.impl.CameraDeviceImpl: void setRemoteDevice(android.hardware.camera2.ICameraDeviceUser)>
<android.animation.LayoutTransition: void cancel()>
<android.media.tv.TvInputManager.TvInputCallback: void onInputRemoved(java.lang.String)>
<android.media.AudioSystem: int releaseAudioPatch(android.media.AudioPatch)>
<android.bluetooth.BluetoothHeadsetClient: boolean enterPrivateMode(android.bluetooth.BluetoothDevice,int)>
<com.android.internal.telecom.IVideoProvider: void setPreviewSurface(android.view.Surface)>
<com.android.internal.app.WindowDecorActionBar: int getHideOffset()>
<android.media.tv.ITvInputClient: void onVideoAvailable(int)>
<android.security.KeyStore: boolean delete(java.lang.String,int)>
<android.widget.OverScroller: boolean computeScrollOffset()>
<android.renderscript.Long3: void setValues(long,long,long)>
<com.android.internal.view.menu.ListMenuPresenter: boolean expandItemActionView(com.android.internal.view.menu.MenuBuilder,com.android.internal.view.menu.MenuItemImpl)>
<com.android.internal.app.AlertController.RecycleListView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.internal.view.IInputMethodManager: boolean notifySuggestionPicked(android.text.style.SuggestionSpan,java.lang.String,int)>
<com.google.android.gles_jni.GLImpl: void glPopMatrix()>
<android.content.pm.PackageManager: void getPackageSizeInfo(java.lang.String,int,android.content.pm.IPackageStatsObserver)>
<android.content.Loader: java.lang.String toString()>
<android.media.AudioTrack: int setNotificationMarkerPosition(int)>
<android.text.style.TtsSpan.FractionBuilder: void <init>(long,long,long)>
<android.view.RenderNodeAnimator: void resume()>
<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>
<android.app.backup.BackupTransport: int startRestore(long,android.content.pm.PackageInfo[])>
<com.android.internal.widget.FaceUnlockView: void onMeasure(int,int)>
<android.preference.Preference: void onAttachedToActivity()>
<android.webkit.WebView: java.lang.String[] getHttpAuthUsernamePassword(java.lang.String,java.lang.String)>
<android.app.SharedElementCallback: void onSharedElementStart(java.util.List,java.util.List,java.util.List)>
<android.service.wallpaper.WallpaperService.Engine: void onSurfaceCreated(android.view.SurfaceHolder)>
<com.android.internal.widget.AbsActionBarView: boolean isOverflowReserved()>
<android.bluetooth.IBluetoothA2dp: void adjustAvrcpAbsoluteVolume(int)>
<android.opengl.GLES20: void glFramebufferTexture2D(int,int,int,int,int)>
<android.os.storage.IMountService: java.lang.String getVolumeState(java.lang.String)>
<android.net.wifi.p2p.WifiP2pDeviceList: void update(android.net.wifi.p2p.WifiP2pDevice)>
<android.view.Window: void <init>(android.content.Context)>
<android.telephony.CellInfoGsm: boolean equals(java.lang.Object)>
<android.bluetooth.IBluetoothGattCallback: void onBatchScanResults(java.util.List)>
<android.telecom.GatewayInfo: java.lang.String getGatewayProviderPackageName()>
<android.telephony.TelephonyManager: boolean getSimplifiedNetworkSettingsEnabled()>
<android.webkit.CookieManager: java.lang.String getCookie(java.lang.String)>
<android.os.storage.StorageVolume: java.lang.String getState()>
<android.graphics.drawable.RippleDrawable: void getOutline(android.graphics.Outline)>
<android.app.ActionBar: void setSplitBackgroundDrawable(android.graphics.drawable.Drawable)>
<com.android.internal.util.StateMachine: android.os.Message obtainMessage(int,int)>
<android.hardware.Camera.Parameters: void set(java.lang.String,int)>
<android.view.inputmethod.BaseInputConnection: boolean setSelection(int,int)>
<android.renderscript.Short4: short dotProduct(android.renderscript.Short4,android.renderscript.Short4)>
<android.view.KeyEvent: int getKeyboardDevice()>
<com.android.internal.widget.multiwaveview.GlowPadView: int getSuggestedMinimumWidth()>
<android.database.AbstractCursor: byte[] getBlob(int)>
<android.content.ContentValues: void <init>(int)>
<com.android.ims.internal.IImsVideoCallCallback: void receiveSessionModifyRequest(android.telecom.VideoProfile)>
<android.bluetooth.IBluetoothHeadset: boolean sendVendorSpecificResultCode(android.bluetooth.BluetoothDevice,java.lang.String,java.lang.String)>
<android.media.audiofx.AudioEffect: int setParameter(int[],int[])>
<com.android.internal.util.IndentingPrintWriter: void increaseIndent()>
<android.telecom.VideoCallImpl: void sendSessionModifyRequest(android.telecom.VideoProfile)>
<android.media.browse.MediaBrowser: void unsubscribe(java.lang.String)>
<android.content.res.CompatibilityInfo: void applyToDisplayMetrics(android.util.DisplayMetrics)>
<android.net.wifi.WifiManager.WpsCallback: void onSucceeded()>
<com.android.internal.widget.SlidingTab: void setHoldAfterTrigger(boolean,boolean)>
<com.android.internal.view.menu.IconMenuView.LayoutParams: void <init>(int,int)>
<com.android.internal.widget.ActionBarOverlayLayout.ActionBarVisibilityCallback: void onWindowVisibilityChanged(int)>
<android.app.Dialog: boolean onGenericMotionEvent(android.view.MotionEvent)>
<android.net.wifi.WifiScanner.ScanSettings: void writeToParcel(android.os.Parcel,int)>
<android.net.wifi.WifiInfo: int getNetworkId()>
<android.media.MutableBackgroundColorSpan: void updateDrawState(android.text.TextPaint)>
<android.media.projection.MediaProjection: android.hardware.display.VirtualDisplay createVirtualDisplay(java.lang.String,int,int,int,boolean,android.view.Surface,android.hardware.display.VirtualDisplay.Callback,android.os.Handler)>
<android.os.BatteryStats.Uid.Sensor: android.os.BatteryStats.Timer getSensorTime()>
<com.android.internal.telecom.ITelecomService: android.telecom.PhoneAccountHandle getUserSelectedOutgoingPhoneAccount()>
<android.widget.NumberPicker: boolean onTouchEvent(android.view.MotionEvent)>
<android.accounts.ChooseTypeAndAccountActivity: void onActivityResult(int,int,android.content.Intent)>
<android.view.RenderNode: boolean setTranslationZ(float)>
<android.telecom.Phone.Listener: void onCallRemoved(android.telecom.Phone,android.telecom.Call)>
<android.content.RestrictionEntry: java.lang.String[] getChoiceValues()>
<android.os.Debug.MemoryInfo: int getTotalSwappablePss()>
<android.gesture.GestureStore: void addGesture(java.lang.String,android.gesture.Gesture)>
<android.net.wifi.p2p.WifiP2pDevice: void writeToParcel(android.os.Parcel,int)>
<android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
<android.text.method.ScrollingMovementMethod: boolean pageDown(android.widget.TextView,android.text.Spannable)>
<android.widget.AdapterViewAnimator: void setOutAnimation(android.content.Context,int)>
<android.media.session.PlaybackState.Builder: android.media.session.PlaybackState.Builder setBufferedPosition(long)>
<android.widget.Switch: void setTextOn(java.lang.CharSequence)>
<android.widget.ActivityChooserModel: int getActivityIndex(android.content.pm.ResolveInfo)>
<android.media.MediaMetadata: android.media.Rating getRating(java.lang.String)>
<android.renderscript.Int2: android.renderscript.Int2 add(android.renderscript.Int2,int)>
<android.renderscript.Float3: void sub(android.renderscript.Float3)>
<android.widget.ImageView: void onAttachedToWindow()>
<android.os.Handler.Callback: boolean handleMessage(android.os.Message)>
<com.android.internal.util.ProcFileReader: boolean hasMoreData()>
<android.mtp.MtpDatabase: void removeStorage(android.mtp.MtpStorage)>
<android.hardware.camera2.legacy.CameraDeviceUserShim: int createDefaultRequest(int,android.hardware.camera2.impl.CameraMetadataNative)>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int)>
<android.media.Image: long getTimestamp()>
<android.os.UEventObserver: void stopObserving()>
<android.printservice.PrintService: java.util.List getActivePrintJobs()>
<android.media.AudioPort: android.media.AudioGain[] gains()>
<android.app.SearchableInfo: java.lang.String getSuggestAuthority()>
<android.app.ActionBar: void removeTab(android.app.ActionBar.Tab)>
<android.media.projection.IMediaProjection: void stop()>
<android.text.Layout: int getEllipsisStart(int)>
<android.os.Debug: void getMemoryInfo(int,android.os.Debug.MemoryInfo)>
<android.text.method.ScrollingMovementMethod: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>
<android.opengl.GLES10: void glScalef(float,float,float)>
<android.filterpacks.imageproc.ImageCombineFilter: void setupPorts()>
<android.filterpacks.videosink.MediaRecorderStopException: void <init>(java.lang.String,java.lang.Throwable)>
<android.app.NativeActivity: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>
<android.transition.ChangeText: android.transition.ChangeText setChangeBehavior(int)>
<android.hardware.soundtrigger.SoundTrigger.ModuleProperties: int describeContents()>
<android.animation.RectEvaluator: android.graphics.Rect evaluate(float,android.graphics.Rect,android.graphics.Rect)>
<android.transition.Visibility: void setMode(int)>
<android.opengl.GLES31: void glProgramUniform3fv(int,int,int,float[],int)>
<android.widget.AbsListView: int getCheckedItemCount()>
<android.graphics.drawable.shapes.OvalShape: void getOutline(android.graphics.Outline)>
<android.media.AudioPortConfig: int channelMask()>
<android.service.notification.NotificationListenerService: android.service.notification.NotificationListenerService.RankingMap getCurrentRanking()>
<android.text.style.TtsSpan.MeasureBuilder: android.text.style.TtsSpan.MeasureBuilder setUnit(java.lang.String)>
<android.widget.Adapter: java.lang.Object getItem(int)>
<android.app.backup.WallpaperBackupHelper: void restoreEntity(android.app.backup.BackupDataInputStream)>
<android.view.inputmethod.CursorAnchorInfo.Builder: android.view.inputmethod.CursorAnchorInfo.Builder addCharacterBounds(int,float,float,float,float,int)>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: boolean isStateful()>
<android.nfc.INfcCardEmulation: boolean setDefaultServiceForCategory(int,android.content.ComponentName,java.lang.String)>
<com.android.internal.telecom.IConnectionServiceAdapter: void setOnHold(java.lang.String)>
<android.view.inputmethod.InputMethodSubtype: java.lang.String getExtraValue()>
<com.android.internal.view.menu.ActionMenu: android.view.MenuItem add(int)>
<com.android.ims.internal.IImsVideoCallProvider: void setZoom(float)>
<android.media.AudioService: int getValueForVibrateSetting(int,int,int)>
<android.os.Debug: void startMethodTracing()>
<android.nfc.cardemulation.ApduServiceInfo: int describeContents()>
<android.database.Cursor: int getInt(int)>
<android.hardware.camera2.CameraCharacteristics.Key: int hashCode()>
<android.net.http.DelegatingSSLSession: int getPeerPort()>
<com.android.internal.os.BatteryStatsImpl: int getNumChargeStepDurations()>
<android.app.Activity: void startIntentSenderFromChild(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int)>
<android.app.ActivityManager.RecentTaskInfo: void readFromParcel(android.os.Parcel)>
<android.telecom.InCallAdapter: void <init>(com.android.internal.telecom.IInCallAdapter)>
<android.text.TextUtils.SimpleStringSplitter: void setString(java.lang.String)>
<android.media.session.MediaController: void registerCallback(android.media.session.MediaController.Callback,android.os.Handler)>
<android.os.TokenWatcher: void cleanup(android.os.IBinder,boolean)>
<android.renderscript.ScriptIntrinsicBlend: void forEachSrc(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>
<android.graphics.drawable.LayerDrawable: boolean setVisible(boolean,boolean)>
<android.net.wifi.IWifiManager: void releaseMulticastLock()>
<android.media.MediaDescription.Builder: android.media.MediaDescription.Builder setSubtitle(java.lang.CharSequence)>
<android.net.Uri: boolean getBooleanQueryParameter(java.lang.String,boolean)>
<android.util.SparseIntArray: int indexOfValue(int)>
<com.android.internal.inputmethod.InputMethodUtils: java.util.Locale getSystemLocaleFromContext(android.content.Context)>
<android.media.SoundPool.SoundPoolDelegate: void release()>
<android.hardware.camera2.utils.BinderHolder: void writeToParcel(android.os.Parcel,int)>
<android.app.backup.SharedPreferencesBackupHelper: void <init>(android.content.Context,java.lang.String[])>
<android.graphics.pdf.PdfEditor: void write(android.os.ParcelFileDescriptor)>
<android.app.ActivityManagerProxy: int checkPermission(java.lang.String,int,int)>
<android.nfc.tech.NfcF: void setTimeout(int)>
<android.graphics.drawable.DrawableContainer: boolean canApplyTheme()>
<android.content.pm.PackageInstaller.SessionInfo: boolean isOpen()>
<android.app.LoadedApk: void removeContextRegistrations(android.content.Context,java.lang.String,java.lang.String)>
<android.bluetooth.IBluetoothHeadsetClient: boolean terminateCall(android.bluetooth.BluetoothDevice,int)>
<android.telecom.VideoCallImpl: void setVideoCallListener(android.telecom.InCallService.VideoCall.Listener)>
<android.view.WindowInsets: int getWindowDecorInsetTop()>
<android.content.IntentFilter: android.content.IntentFilter create(java.lang.String,java.lang.String)>
<android.nfc.INfcAdapterExtras: void setCardEmulationRoute(java.lang.String,int)>
<com.android.internal.telecom.ITelecomService: android.telecom.PhoneAccountHandle getSimCallManager()>
<android.media.MediaFocusControl: int getRemoteStreamMaxVolume()>
<android.widget.LinearLayout: android.graphics.drawable.Drawable getDividerDrawable()>
<android.os.UserManager: android.os.Bundle getDefaultGuestRestrictions()>
<android.database.MatrixCursor: short getShort(int)>
<android.media.session.MediaSession.CallbackStub: void onSeekTo(long)>
<android.media.tv.TvInputService.HardwareSession: void onHardwareVideoAvailable()>
<android.media.MediaRecorder: void setOutputFile(java.io.FileDescriptor)>
<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>
<android.os.UserManager: void setUserRestrictions(android.os.Bundle)>
<android.hardware.camera2.CaptureRequest.Builder: void <init>(android.hardware.camera2.impl.CameraMetadataNative)>
<android.widget.ExpandableListAdapter: android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup)>
<android.app.Activity: void onActionModeFinished(android.view.ActionMode)>
<android.telecom.RemoteConnection.Callback: void onVoipAudioChanged(android.telecom.RemoteConnection,boolean)>
<android.app.ActivityManagerProxy: void setFocusedStack(int)>
<android.hardware.soundtrigger.SoundTrigger.RecognitionConfig: void writeToParcel(android.os.Parcel,int)>
<android.media.IAudioService: void remoteControlDisplayUsesBitmapSize(android.media.IRemoteControlDisplay,int,int)>
<android.os.Process: long getFreeMemory()>
<android.net.wifi.WifiSsid: android.net.wifi.WifiSsid createFromAsciiEncoded(java.lang.String)>
<android.widget.HorizontalScrollView: boolean isFillViewport()>
<android.security.IKeystoreService: int zero()>
<android.net.NetworkUtils: void maskRawAddress(byte[],int)>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable.Callback getCallback()>
<android.net.VpnService: android.content.Intent prepare(android.content.Context)>
<android.app.Activity: boolean onNavigateUp()>
<android.widget.TabHost: int getCurrentTab()>
<com.android.internal.widget.DecorContentParent: boolean hideOverflowMenu()>
<android.net.ConnectivityManager: android.net.Network[] getAllNetworks()>
<com.android.internal.util.Preconditions: float checkArgumentFinite(float,java.lang.String)>
<android.net.NetworkPolicy: boolean equals(java.lang.Object)>
<android.hardware.camera2.legacy.RequestQueue: int submit(java.util.List,boolean,android.hardware.camera2.utils.LongParcelable)>
<android.drm.DrmOutputStream: void close()>
<android.widget.ProgressBar: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.bluetooth.BluetoothActivityEnergyInfo: int getControllerRxTimeMillis()>
<android.telephony.PreciseDataConnectionState: void <init>(int,int,java.lang.String,java.lang.String,java.lang.String,android.net.LinkProperties,java.lang.String)>
<android.webkit.WebSettings: boolean supportZoom()>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder detectDiskWrites()>
<com.android.internal.widget.ActionBarOverlayLayout: void onWindowVisibilityChanged(int)>
<com.android.internal.util.StateMachine: void logi(java.lang.String)>
<android.media.MediaCodecInfo.VideoCapabilities: void init(android.media.MediaFormat,android.media.MediaCodecInfo.CodecCapabilities)>
<android.net.http.Headers: long getTransferEncoding()>
<android.view.IAssetAtlas: android.view.GraphicBuffer getBuffer()>
<android.app.Activity: void startActivityFromFragment(android.app.Fragment,android.content.Intent,int,android.os.Bundle)>
<android.hardware.location.GeofenceHardware: void <init>(android.hardware.location.IGeofenceHardware)>
<android.widget.TextView: void endBatchEdit()>
<android.location.GpsStatus.NmeaListener: void onNmeaReceived(long,java.lang.String)>
<android.filterfw.core.FrameManager: void tearDown()>
<android.print.PrintJobInfo: android.print.PrintJobId getId()>
<com.android.internal.os.BatteryStatsImpl: int getWifiStateCount(int,int)>
<android.bluetooth.BluetoothGattCallbackWrapper: void onClientRegistered(int,int)>
<android.net.NetworkPolicyManager: long computeNextCycleBoundary(long,android.net.NetworkPolicy)>
<android.media.ClosedCaptionWidget: void <init>(android.content.Context)>
<android.app.Activity: void onWindowDismissed()>
<android.view.inputmethod.BaseInputConnection: boolean commitText(java.lang.CharSequence,int)>
<com.android.internal.os.BatteryStatsImpl: void dumpLocked(android.content.Context,java.io.PrintWriter,int,int,long)>
<android.os.Environment: java.io.File getUserSystemDirectory(int)>
<android.content.pm.PackageInstaller.SessionCallback: void onBadgingChanged(int)>
<com.android.internal.app.NetInitiatedActivity: void onCreate(android.os.Bundle)>
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: byte[] getRawData()>
<android.os.RemoteCallback: void <init>(android.os.Handler)>
<android.view.View: int getScrollBarFadeDuration()>
<android.graphics.NinePatch: void draw(android.graphics.Canvas,android.graphics.Rect)>
<android.print.PrinterInfo: void copyFrom(android.print.PrinterInfo)>
<android.media.projection.MediaProjectionManager: android.content.Intent createScreenCaptureIntent()>
<android.net.wifi.BatchedScanSettings: void constrain()>
<android.os.AsyncTask: void execute(java.lang.Runnable)>
<android.app.usage.UsageStatsManagerInternal: void prepareShutdown()>
<android.os.BatteryStats: long getMobileRadioActiveAdjustedTime(int)>
<android.net.ConnectivityManager: void setProvisioningNotificationVisible(boolean,int,java.lang.String)>
<android.app.admin.DeviceAdminInfo: java.lang.String toString()>
<android.app.FragmentManagerImpl: boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>
<android.webkit.WebSettings: boolean getNavDump()>
<android.app.ActivityOptions: int getHeight()>
<android.app.admin.IDevicePolicyManager: void setPasswordMinimumNumeric(android.content.ComponentName,int,int)>
<com.android.internal.view.menu.MenuPopupHelper: void onDismiss()>
<android.widget.ImageView: void setVisibility(int)>
<android.view.InputDevice: boolean isVirtual()>
<android.view.Window: void makeActive()>
<android.app.IActivityManager: void setTaskDescription(android.os.IBinder,android.app.ActivityManager.TaskDescription)>
<android.app.Instrumentation: void sendCharacterSync(int)>
<android.filterpacks.imageproc.AlphaBlendFilter: android.filterfw.core.Program getShaderProgram(android.filterfw.core.FilterContext)>
<android.widget.AutoCompleteTextView: void setOnItemClickListener(android.widget.AdapterView.OnItemClickListener)>
<com.android.internal.app.WindowDecorActionBar.ActionModeImpl: void setTitle(int)>
<android.hardware.SerialPort: void sendBreak()>
<android.app.Activity: boolean onTouchEvent(android.view.MotionEvent)>
<android.hardware.camera2.utils.TypeReference: int hashCode()>
<android.media.session.PlaybackState: int describeContents()>
<android.content.Intent: boolean filterEquals(android.content.Intent)>
<android.webkit.WebChromeClient.FileChooserParams: java.lang.String[] getAcceptTypes()>
<com.android.internal.widget.LockScreenWidgetCallback: void requestHide(android.view.View)>
<android.nfc.cardemulation.HostApduService: byte[] processCommandApdu(byte[],android.os.Bundle)>
<android.widget.AdapterView: void <init>(android.content.Context)>
<android.graphics.drawable.BitmapDrawable: void setTileModeY(android.graphics.Shader.TileMode)>
<android.hardware.Camera.Parameters: java.util.List getZoomRatios()>
<com.android.internal.widget.DrawableHolder: void onAnimationRepeat(android.animation.Animator)>
<android.content.pm.PackageManager: boolean isPackageAvailable(java.lang.String)>
<android.os.RecoverySystem: void rebootWipeCache(android.content.Context,java.lang.String)>
<android.bluetooth.BluetoothA2dp: int getPriority(android.bluetooth.BluetoothDevice)>
<android.filterfw.format.PrimitiveFormat: android.filterfw.core.MutableFrameFormat createDoubleFormat(int,int)>
<android.widget.RelativeLayout.LayoutParams: void removeRule(int)>
<android.webkit.WebChromeClient: void onReceivedTouchIconUrl(android.webkit.WebView,java.lang.String,boolean)>
<android.net.IConnectivityManager: boolean isActiveNetworkMetered()>
<com.google.android.gles_jni.EGLImpl: boolean eglWaitGL()>
<android.widget.ListView: boolean canAnimate()>
<android.media.MediaRecorder: void setVideoEncoder(int)>
<android.content.IContentService: android.content.SyncStatusInfo getSyncStatusAsUser(android.accounts.Account,java.lang.String,android.content.ComponentName,int)>
<android.media.MediaRecorder: void stop()>
<android.view.WindowCallbackWrapper: void onContentChanged()>
<com.android.internal.view.menu.ActionMenuItem: char getAlphabeticShortcut()>
<com.android.internal.util.ArrayUtils: java.util.ArrayList remove(java.util.ArrayList,java.lang.Object)>
<android.database.Cursor: android.net.Uri getNotificationUri()>
<android.database.AbstractCursor: void setExtras(android.os.Bundle)>
<android.preference.SwitchPreference: void setSwitchTextOff(int)>
<android.text.style.TabStopSpan.Standard: int getTabStop()>
<android.app.Application: void onConfigurationChanged(android.content.res.Configuration)>
<android.os.INetworkManagementService: void flushNetworkDnsCache(int)>
<android.content.pm.PackageInstaller: java.util.List getAllSessions()>
<android.print.PrinterInfo.Builder: void <init>(android.print.PrinterInfo)>
<android.telephony.CellSignalStrengthGsm: void <init>(int,int)>
<android.provider.Settings.Secure: boolean putFloat(android.content.ContentResolver,java.lang.String,float)>
<android.view.WindowManagerImpl: android.view.WindowManagerImpl createPresentationWindowManager(android.view.Display)>
<android.view.View: void setTranslationZ(float)>
<android.opengl.GLES31: void glBindVertexBuffer(int,int,long,int)>
<android.print.PrintAttributes: void clear()>
<android.printservice.PrintJob: boolean start()>
<android.content.pm.ILauncherApps: void removeOnAppsChangedListener(android.content.pm.IOnAppsChangedListener)>
<android.os.Parcel: android.os.PersistableBundle readPersistableBundle()>
<android.net.http.RequestQueue.ConnectionManager: org.apache.http.HttpHost getProxyHost()>
<android.media.projection.IMediaProjectionManager: android.media.projection.MediaProjectionInfo getActiveProjectionInfo()>
<android.widget.OverScroller: void <init>(android.content.Context,android.view.animation.Interpolator,float,float,boolean)>
<android.os.UpdateLock: boolean isHeld()>
<android.app.Notification.Builder: android.app.Notification.Builder setDeleteIntent(android.app.PendingIntent)>
<android.widget.ViewAnimator: void setAnimateFirstView(boolean)>
<android.view.SurfaceControl: void setLayer(int)>
<android.graphics.Typeface: android.graphics.Typeface create(android.graphics.Typeface,int)>
<com.android.internal.util.ArrayUtils: long[] cloneOrNull(long[])>
<android.inputmethodservice.InputMethodService.InputMethodSessionImpl: void viewClicked(boolean)>
<android.media.MediaDrm: android.media.MediaDrm.Certificate provideCertificateResponse(byte[])>
<android.media.MediaRouter: int getCategoryCount()>
<android.view.inputmethod.BaseInputConnection: boolean performContextMenuAction(int)>
<android.webkit.WebView.HitTestResult: void setExtra(java.lang.String)>
<com.android.internal.view.menu.MenuBuilder: boolean isShortcutKey(int,android.view.KeyEvent)>
<android.hardware.input.InputManager: android.hardware.input.KeyboardLayout[] getKeyboardLayouts()>
<android.location.LocationManager: void removeProximityAlert(android.app.PendingIntent)>
<android.bluetooth.BluetoothPbap: void close()>
<android.app.backup.RestoreObserver: void restoreFinished(int)>
<android.media.ImageReader: android.media.Image acquireNextImageNoThrowISE()>
<android.opengl.GLES30: void glGetSynciv(long,int,int,java.nio.IntBuffer,java.nio.IntBuffer)>
<android.renderscript.Element: android.renderscript.Element I32_3(android.renderscript.RenderScript)>
<android.printservice.PrintServiceInfo: int hashCode()>
<android.opengl.GLES30: void glUniformMatrix3x2fv(int,int,boolean,java.nio.FloatBuffer)>
<android.graphics.Path: void addRoundRect(float,float,float,float,float[],android.graphics.Path.Direction)>
<android.media.MediaCodec: void setParameters(android.os.Bundle)>
<android.widget.OverScroller: void extendDuration(int)>
<android.app.Dialog: boolean onTouchEvent(android.view.MotionEvent)>
<android.graphics.drawable.RotateDrawable: void draw(android.graphics.Canvas)>
<android.media.AudioManager: void reloadAudioSettings()>
<android.net.NetworkCapabilities: int[] getTransportTypes()>
<android.content.ContentResolver: android.content.res.AssetFileDescriptor openTypedAssetFileDescriptor(android.net.Uri,java.lang.String,android.os.Bundle)>
<android.hardware.camera2.CaptureRequest: java.util.List getKeys()>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setInverseBackgroundForced(boolean)>
<android.telecom.Connection: int getState()>
<android.telecom.PhoneAccount: java.lang.CharSequence getLabel()>
<android.media.audiopolicy.AudioPolicyConfig: java.lang.String toString()>
<android.net.MobileDataStateTracker: void captivePortalCheckCompleted(boolean)>
<android.content.Context: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<android.media.tv.ITvInputService: void createSession(android.view.InputChannel,android.media.tv.ITvInputSessionCallback,java.lang.String)>
<android.view.Window: void setWindowManager(android.view.WindowManager,android.os.IBinder,java.lang.String,boolean)>
<com.google.android.util.AbstractMessageParser.YouTubeVideo: java.util.List getInfo()>
<android.view.View: void setPadding(int,int,int,int)>
<android.widget.TimePicker.TimePickerDelegate: void setIs24HourView(java.lang.Boolean)>
<android.renderscript.Short3: short dotProduct(android.renderscript.Short3)>
<android.view.ViewGroup: void measureChild(android.view.View,int,int)>
<android.media.ClosedCaptionWidget: void setVisible(boolean)>
<android.widget.AdapterView.OnItemLongClickListener: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)>
<android.content.Context: java.io.FileOutputStream openFileOutput(java.lang.String,int)>
<android.hardware.display.DisplayManager: void registerDisplayListener(android.hardware.display.DisplayManager.DisplayListener,android.os.Handler)>
<android.content.ContextWrapper: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase.CursorFactory)>
<android.inputmethodservice.InputMethodService.InputMethodSessionImpl: void appPrivateCommand(java.lang.String,android.os.Bundle)>
<android.hardware.camera2.CameraCharacteristics: void <init>(android.hardware.camera2.impl.CameraMetadataNative)>
<android.app.ActivityManager.ProcessErrorStateInfo: void readFromParcel(android.os.Parcel)>
<android.graphics.Point: boolean equals(java.lang.Object)>
<android.os.WorkSource: android.os.WorkSource stripNames()>
<android.preference.Preference: android.os.Parcelable onSaveInstanceState()>
<com.android.internal.widget.ActionBarContainer: void onLayout(boolean,int,int,int,int)>
<android.renderscript.Short2: android.renderscript.Short2 mul(android.renderscript.Short2,short)>
<android.hardware.camera2.impl.CallbackProxies.DeviceCaptureCallbackProxy: void onCaptureStarted(android.hardware.camera2.CameraDevice,android.hardware.camera2.CaptureRequest,long,long)>
<android.app.ActivityManagerProxy: void killBackgroundProcesses(java.lang.String,int)>
<android.content.pm.PackageInstaller.SessionParams: void <init>(android.os.Parcel)>
<android.nfc.ApduList: void add(byte[])>
<android.widget.TextSwitcher: void setCurrentText(java.lang.CharSequence)>
<android.print.PrintAttributes.MediaSize: java.lang.String getLabel(android.content.pm.PackageManager)>
<com.android.server.WidgetBackupProvider: java.util.List getWidgetParticipants(int)>
<android.app.Fragment: java.lang.String toString()>
<android.opengl.GLES10: void glPointSizex(int)>
<android.view.MotionEvent: float getHistoricalSize(int,int)>
<com.android.internal.util.GrowingArrayUtils: int[] append(int[],int,int)>
<android.bluetooth.BluetoothClass: void writeToParcel(android.os.Parcel,int)>
<android.view.ViewRootImpl: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
<android.content.pm.ContainerEncryptionParams: java.lang.String toString()>
<com.android.internal.os.BatteryStatsImpl.Uid.Pkg.Serv: void startLaunchedLocked()>
<android.filterfw.core.OneShotScheduler: void reset()>
<android.database.AbstractCursor: java.lang.String[] getColumnNames()>
<android.net.NetworkStatsHistory: void writeToParcel(android.os.Parcel,int)>
<android.location.Criteria: void setVerticalAccuracy(int)>
<com.android.internal.os.BinderInternal: android.os.IBinder getContextObject()>
<com.android.internal.telephony.ISub: long getDefaultDataSubId()>
<com.android.internal.widget.ToolbarWidgetWrapper: android.view.View getCustomView()>
<android.media.session.ISessionCallback: void onPlayFromMediaId(java.lang.String,android.os.Bundle)>
<android.speech.srec.WaveHeader: short getFormat()>
<android.opengl.GLES20: void glDepthRangef(float,float)>
<android.net.TrafficStats: android.net.NetworkStats stopDataProfiling(android.content.Context)>
<android.telecom.Conference: void onMerge(android.telecom.Connection)>
<android.app.Activity: void onCreateNavigateUpTaskStack(android.app.TaskStackBuilder)>
<com.google.android.gles_jni.GLImpl: void glColor4f(float,float,float,float)>
<android.app.admin.IDevicePolicyManager: void clearDeviceOwner(java.lang.String)>
<android.graphics.Canvas: void restoreToCount(int)>
<android.location.GpsMeasurement: boolean hasTimeFromLastBitInMs()>
<android.net.SSLCertificateSocketFactory: java.lang.String[] getSupportedCipherSuites()>
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String getDescription()>
<android.media.AudioTrack: int getMinBufferSize(int,int,int)>
<android.util.Spline: android.util.Spline createSpline(float[],float[])>
<android.telephony.ServiceState: boolean isGsm(int)>
<com.google.android.gles_jni.GLImpl: void glAlphaFunc(int,float)>
<android.widget.QuickContactBadge: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.net.wifi.p2p.WifiP2pWfdInfo: boolean isSessionAvailable()>
<android.net.wifi.WifiManager: boolean reconnect()>
<android.hardware.hdmi.HdmiTvClient: void setInputChangeListener(android.hardware.hdmi.HdmiTvClient.InputChangeListener)>
<android.app.backup.IBackupManager: void backupNow()>
<android.bluetooth.le.AdvertiseData: java.util.Map getServiceData()>
<android.opengl.GLES20: void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.renderscript.Matrix2f: void rotate(float)>
<android.widget.ProgressBar: void setInterpolator(android.content.Context,int)>
<android.text.style.SuggestionSpan: java.lang.String getLocale()>
<android.text.Layout: int getLineDescent(int)>
<android.widget.ListPopupWindow: java.lang.Object getSelectedItem()>
<android.graphics.Paint: int getFontMetricsInt(android.graphics.Paint.FontMetricsInt)>
<android.content.pm.ActivityInfo: java.lang.String toString()>
<android.content.DefaultDataHandler: void startPrefixMapping(java.lang.String,java.lang.String)>
<android.renderscript.ProgramRaster.Builder: android.renderscript.ProgramRaster.Builder setCullMode(android.renderscript.ProgramRaster.CullMode)>
<android.view.KeyEvent: boolean isTainted()>
<com.android.internal.widget.ILockSettings: boolean getBoolean(java.lang.String,boolean,int)>
<android.graphics.Paint: float getTextRunAdvances(char[],int,int,int,int,boolean,float[],int)>
<android.widget.HorizontalScrollView: boolean arrowScroll(int)>
<android.os.BatteryStats.Uid: long getWifiBatchedScanTime(int,long,int)>
<android.bluetooth.BluetoothAudioConfig: void writeToParcel(android.os.Parcel,int)>
<android.view.View: void setLeft(int)>
<android.content.res.Resources: int getDimensionPixelOffset(int)>
<android.net.ConnectivityManager.NetworkCallback: void onCapabilitiesChanged(android.net.Network,android.net.NetworkCapabilities)>
<android.app.SearchableInfo.ActionKeyInfo: java.lang.String getSuggestActionMsgColumn()>
<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>
<android.opengl.GLES20: java.lang.String glGetActiveAttrib(int,int,int[],int,int[],int)>
<android.app.ActivityManagerProxy: void getMyMemoryState(android.app.ActivityManager.RunningAppProcessInfo)>
<android.net.MailTo: boolean isMailTo(java.lang.String)>
<android.os.BatteryStats: void formatTime(java.lang.StringBuilder,long)>
<android.view.View: boolean isVisibleToUser()>
<android.view.ViewGroup: void dispatchConfigurationChanged(android.content.res.Configuration)>
<android.provider.Settings.Global: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>
<android.text.Layout: long getLineRangeForDraw(android.graphics.Canvas)>
<android.webkit.WebViewProvider: void setWebChromeClient(android.webkit.WebChromeClient)>
<android.net.NetworkTemplate: void <init>(int,java.lang.String,java.lang.String)>
<android.widget.TextView: void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
<android.widget.GridLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.media.IAudioService: void setRingerMode(int,boolean)>
<android.app.AppOpsManager.PackageOps: void writeToParcel(android.os.Parcel,int)>
<android.widget.AbsListView: boolean onNestedFling(android.view.View,float,float,boolean)>
<android.renderscript.FieldPacker: android.renderscript.Byte4 subByte4()>
<android.opengl.GLSurfaceView.Renderer: void onSurfaceChanged(javax.microedition.khronos.opengles.GL10,int,int)>
<android.widget.DatePicker: boolean getSpinnersShown()>
<android.app.ActivityManager: void stopLockTaskMode()>
<com.android.internal.view.menu.IconMenuItemView: com.android.internal.view.menu.MenuItemImpl getItemData()>
<android.widget.VideoView: void setOnPreparedListener(android.media.MediaPlayer.OnPreparedListener)>
<android.print.PrinterInfo: int getStatus()>
<android.app.WallpaperManager: void clearWallpaperOffsets(android.os.IBinder)>
<android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int,android.os.ResultReceiver)>
<android.app.UiModeManager: void disableCarMode(int)>
<android.widget.HeaderViewListAdapter: boolean hasStableIds()>
<com.android.internal.widget.ResolverDrawerLayout: boolean isSmallCollapsed()>
<android.hardware.location.GeofenceHardwareRequestParcelable: double getLatitude()>
<android.media.session.ISession: void setCurrentVolume(int)>
<android.net.ProxyInfo: android.net.Uri getPacFileUrl()>
<android.app.Notification.BigPictureStyle: android.app.Notification.BigPictureStyle bigLargeIcon(android.graphics.Bitmap)>
<android.util.MathUtils: float atan2(float,float)>
<android.view.accessibility.AccessibilityEvent: java.lang.String toString()>
<android.filterfw.core.FrameFormat: void <init>(int,int)>
<android.media.ResampleInputStream: void finalize()>
<android.view.WindowManagerPolicy: void adjustWindowParamsLw(android.view.WindowManager.LayoutParams)>
<android.telephony.CellInfoWcdma: int hashCode()>
<android.app.Dialog: void <init>(android.content.Context,boolean,android.os.Message)>
<android.media.AudioAttributes.Builder: void <init>(android.media.AudioAttributes)>
<com.android.internal.view.menu.MenuBuilder: void addMenuPresenter(com.android.internal.view.menu.MenuPresenter,android.content.Context)>
<android.renderscript.Double3: void <init>(double,double,double)>
<android.view.inputmethod.InputMethodSession.EventCallback: void finishedEvent(int,boolean)>
<android.gesture.GestureOverlayView: boolean dispatchTouchEvent(android.view.MotionEvent)>
<android.content.SyncStatusInfo: void setPeriodicSyncTime(int,long)>
<com.android.internal.inputmethod.InputMethodUtils: boolean checkIfPackageBelongsToUid(android.app.AppOpsManager,int,java.lang.String)>
<com.android.internal.os.IDropBoxManagerService: boolean isTagEnabled(java.lang.String)>
<android.net.NetworkStats: android.net.NetworkStats combineValues(java.lang.String,int,int,int,long,long,long,long,long)>
<android.renderscript.Float4: float dotProduct(android.renderscript.Float4)>
<android.view.View: boolean isAttachedToWindow()>
<android.widget.Toolbar: void setSubtitleTextColor(int)>
<android.location.LocationRequest: void decrementNumUpdates()>
<android.view.View: void setLayoutParams(android.view.ViewGroup.LayoutParams)>
<com.google.android.gles_jni.GLImpl: void glTexEnviv(int,int,java.nio.IntBuffer)>
<android.net.IConnectivityManager: android.net.LinkProperties getActiveLinkProperties()>
<android.bluetooth.BluetoothGattService: void setAdvertisePreferred(boolean)>
<android.media.effect.FilterEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>
<com.android.internal.app.AlertController: void <init>(android.content.Context,android.content.DialogInterface,android.view.Window)>
<com.android.internal.app.AlertController.AlertParams: void <init>(android.content.Context)>
<android.util.ArrayMap: int hashCode()>
<android.net.NetworkPolicyManager: void dumpPolicy(java.io.PrintWriter,int)>
<com.android.internal.widget.PointerLocationView: void onInputDeviceRemoved(int)>
<android.hardware.camera2.params.LensShadingMap: int getColumnCount()>
<android.telephony.SignalStrength: int getLteDbm()>
<android.renderscript.Allocation: void copyFrom(android.renderscript.Allocation)>
<android.app.admin.DevicePolicyManager: boolean resetPassword(java.lang.String,int)>
<android.net.LocalSocket: boolean isBound()>
<android.graphics.Path: void offset(float,float,android.graphics.Path)>
<com.android.internal.app.ToolbarActionBar: int getTabCount()>
<android.widget.DialerFilter: void <init>(android.content.Context)>
<android.transition.Transition.EpicenterCallback: android.graphics.Rect onGetEpicenter(android.transition.Transition)>
<android.os.storage.IMountService: int decryptStorage(java.lang.String)>
<android.renderscript.Allocation: void syncAll(int)>
<android.view.Gravity: void applyDisplay(int,android.graphics.Rect,android.graphics.Rect)>
<android.view.ViewConfiguration: int getScrollBarFadeDuration()>
<android.widget.CalendarView: boolean getShowWeekNumber()>
<com.google.android.gles_jni.GLImpl: void glColor4x(int,int,int,int)>
<android.preference.Preference: void setIcon(android.graphics.drawable.Drawable)>
<com.android.internal.util.ArrayUtils: boolean[] newUnpaddedBooleanArray(int)>
<android.app.IActivityManager: int getUidForIntentSender(android.content.IIntentSender)>
<android.media.AudioManager: void playSoundEffect(int,int)>
<android.inputmethodservice.Keyboard.Key: int squaredDistanceFrom(int,int)>
<android.media.AudioSystem: int getPrimaryOutputSamplingRate()>
<android.widget.Toolbar.LayoutParams: void <init>(int,int,int)>
<android.app.KeyguardManager: void exitKeyguardSecurely(android.app.KeyguardManager.OnKeyguardExitResult)>
<android.view.animation.ScaleAnimation: void <init>(float,float,float,float,float,float)>
<android.hardware.camera2.DngCreator: android.hardware.camera2.DngCreator setLocation(android.location.Location)>
<android.database.DatabaseUtils.InsertHelper: long replace(android.content.ContentValues)>
<android.view.animation.AnimationSet: void setFillBefore(boolean)>
<android.net.wifi.WifiManager: void connect(int,android.net.wifi.WifiManager.ActionListener)>
<android.widget.CursorTreeAdapter: void <init>(android.database.Cursor,android.content.Context,boolean)>
<com.google.android.util.AbstractMessageParser.TrieNode: com.google.android.util.AbstractMessageParser.TrieNode getChild(char)>
<android.content.pm.VerificationParams: android.content.pm.ManifestDigest getManifestDigest()>
<android.widget.Gallery: boolean showContextMenuForChild(android.view.View)>
<android.view.ViewStub: android.view.LayoutInflater getLayoutInflater()>
<android.view.inputmethod.InputMethodManager: void updateSelection(android.view.View,int,int,int,int)>
<android.view.textservice.TextInfo: java.lang.String getText()>
<android.service.notification.ZenModeConfig: java.lang.String toString()>
<android.content.ComponentName: java.lang.String getShortClassName()>
<android.util.LogWriter: void <init>(int,java.lang.String)>
<com.android.internal.widget.DecorToolbar: java.lang.CharSequence getTitle()>
<android.location.SettingInjectorService: boolean onGetEnabled()>
<android.webkit.PluginData: void <init>(java.io.InputStream,long,java.util.Map,int)>
<android.media.tv.ITvInputManager: java.util.List getHardwareList()>
<android.hardware.hdmi.IHdmiControlService: boolean canChangeSystemAudioMode()>
<android.accessibilityservice.AccessibilityService: java.util.List getWindows()>
<android.graphics.drawable.AnimatedStateListDrawable: void jumpToCurrentState()>
<com.android.ims.ImsCallProfile: java.lang.String getCallExtra(java.lang.String)>
<android.app.job.JobScheduler: java.util.List getAllPendingJobs()>
<android.renderscript.Matrix2f: void loadRotate(float)>
<android.opengl.GLES30: void glGetUniformuiv(int,int,java.nio.IntBuffer)>
<android.view.animation.AnimationSet: void scaleCurrentDuration(float)>
<android.widget.ActivityChooserModel.HistoricalRecord: java.lang.String toString()>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDAdd()>
<android.media.tv.TvInputInfo.TvInputSettings: java.util.Set getHiddenTvInputIds(android.content.Context,int)>
<android.renderscript.AllocationAdapter: void resize(int)>
<android.animation.AnimatorSet: android.animation.TimeInterpolator getInterpolator()>
<android.widget.AbsListView: void onTouchModeChanged(boolean)>
<android.security.IKeystoreService: long getmtime(java.lang.String)>
<android.telephony.PhoneNumberUtils: int toaFromString(java.lang.String)>
<com.android.internal.widget.LockPatternUtils: int getRequestedPasswordMinimumLowerCase()>
<android.telecom.ConnectionService: boolean onUnbind(android.content.Intent)>
<android.view.animation.Animation: void setRepeatMode(int)>
<android.text.method.NumberKeyListener: char[] getAcceptedChars()>
<android.animation.Keyframe: java.lang.Class getType()>
<android.text.method.BaseMovementMethod: boolean scrollTop(android.widget.TextView,android.text.Spannable)>
<android.os.Looper: boolean isIdling()>
<android.media.MediaRouter.RouteInfo: android.media.MediaRouter.RouteCategory getCategory()>
<android.widget.Chronometer: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.content.ContentProvider: void enforceWritePermissionInner(android.net.Uri)>
<android.opengl.GLES30: void glGetActiveUniformBlockName(int,int,java.nio.Buffer,java.nio.Buffer)>
<android.filterfw.core.NativeProgram: void reset()>
<android.content.IntentFilter: android.content.IntentFilter.AuthorityEntry getDataAuthority(int)>
<android.os.Parcel: android.os.Parcel obtain(long)>
<android.speech.srec.UlawEncoderInputStream: void <init>(java.io.InputStream,int)>
<com.google.android.gles_jni.EGLImpl: javax.microedition.khronos.egl.EGLSurface eglCreatePbufferSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int[])>
<com.android.ims.ImsReasonInfo: java.lang.String getExtraMessage()>
<android.printservice.IPrintServiceClient: boolean setPrintJobState(android.print.PrintJobId,int,java.lang.String)>
<android.content.IContentService: void setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)>
<android.text.method.Touch: int getInitialScrollY(android.widget.TextView,android.text.Spannable)>
<android.net.INetworkManagementEventObserver: void routeUpdated(android.net.RouteInfo)>
<android.widget.DatePickerController: void registerOnDateChangedListener(android.widget.OnDateChangedListener)>
<android.os.UserManager: java.util.List getUserProfiles()>
<com.android.internal.view.IInputConnectionWrapper: void commitCorrection(android.view.inputmethod.CorrectionInfo)>
<android.content.ContextWrapper: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)>
<android.webkit.Plugin: void setName(java.lang.String)>
<android.widget.Toast: int getDuration()>
<android.telecom.Connection: android.net.Uri getAddress()>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofMultiFloat(java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,java.lang.Object[])>
<android.location.IGpsStatusListener: void onGpsStarted()>
<com.android.internal.telecom.IConnectionService: void onAudioStateChanged(java.lang.String,android.telecom.AudioState)>
<android.app.IActivityManager: boolean refContentProvider(android.os.IBinder,int,int)>
<com.android.internal.telecom.ITelecomService: android.telecom.PhoneAccount getPhoneAccount(android.telecom.PhoneAccountHandle)>
<android.app.IApplicationThread: void scheduleTrimMemory(int)>
<com.android.internal.widget.ActionBarView: void setNavigationMode(int)>
<android.filterpacks.imageproc.SaturateFilter: void process(android.filterfw.core.FilterContext)>
<android.renderscript.Allocation: void copyTo(int[])>
<android.view.KeyEvent: int normalizeMetaState(int)>
<android.content.AsyncQueryHandler: void startQuery(int,java.lang.Object,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.view.ViewTreeObserver: void removeOnWindowAttachListener(android.view.ViewTreeObserver.OnWindowAttachListener)>
<android.media.session.PlaybackState.Builder: android.media.session.PlaybackState.Builder setErrorMessage(java.lang.CharSequence)>
<android.view.View: android.view.View findViewTraversal(int)>
<android.view.MotionEvent: void scale(float)>
<android.widget.GridLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<android.telephony.CellSignalStrengthLte: void <init>(int,int,int,int,int,int)>
<android.opengl.GLES10: void glMaterialxv(int,int,java.nio.IntBuffer)>
<android.provider.Browser: java.lang.String[] getVisitedHistory(android.content.ContentResolver)>
<android.media.AudioManager: void registerAudioPortUpdateListener(android.media.AudioManager.OnAudioPortUpdateListener)>
<android.content.ContentProviderClient: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String,android.os.CancellationSignal)>
<android.media.WebVttRenderer: boolean supports(android.media.MediaFormat)>
<android.app.VoiceInteractor.Request: void onCancel()>
<android.os.Handler: void <init>(android.os.Handler.Callback)>
<android.media.session.MediaSession.QueueItem: int describeContents()>
<android.webkit.WebSettings: boolean getSavePassword()>
<android.accounts.AccountManager: java.lang.String getPreviousName(android.accounts.Account)>
<android.view.SurfaceControl: boolean getAnimationFrameStats(android.view.WindowAnimationFrameStats)>
<android.media.audiofx.PresetReverb.Settings: java.lang.String toString()>
<android.hardware.soundtrigger.SoundTriggerModule: int startRecognition(int,android.hardware.soundtrigger.SoundTrigger.RecognitionConfig)>
<android.media.RingtoneManager: void <init>(android.app.Activity)>
<android.app.TabActivity: android.widget.TabWidget getTabWidget()>
<android.provider.Settings.Secure: float getFloatForUser(android.content.ContentResolver,java.lang.String,float,int)>
<android.widget.ExpandableListView: int getPackedPositionChild(long)>
<android.bluetooth.IBluetooth: android.bluetooth.BluetoothActivityEnergyInfo reportActivityInfo()>
<android.security.KeyStore: boolean delKey(java.lang.String)>
<com.android.internal.view.menu.ListMenuPresenter: void setItemIndexOffset(int)>
<android.telephony.CellSignalStrengthCdma: void setCdmaEcio(int)>
<android.content.pm.IPackageInstaller: android.content.pm.ParceledListSlice getMySessions(java.lang.String,int)>
<android.media.session.MediaSessionManager: void dispatchMediaKeyEvent(android.view.KeyEvent,boolean)>
<android.transition.Transition: android.transition.Transition removeTarget(int)>
<android.widget.EditText: void setSelection(int,int)>
<com.android.internal.util.FastXmlSerializer: java.lang.Object getProperty(java.lang.String)>
<android.widget.FrameLayout: void onSizeChanged(int,int,int,int)>
<android.hardware.usb.UsbDeviceConnection: boolean setInterface(android.hardware.usb.UsbInterface)>
<com.google.android.gles_jni.GLImpl: void glWeightPointerOES(int,int,int,java.nio.Buffer)>
<android.bluetooth.BluetoothHeadsetClient: boolean disconnectAudio()>
<android.telephony.cdma.CdmaSmsCbProgramResults: void <init>(int,int,int)>
<android.net.wifi.WifiConfiguration: java.lang.String configKey(boolean)>
<android.filterpacks.imageproc.PosterizeFilter: void setupPorts()>
<android.app.Fragment: void setArguments(android.os.Bundle)>
<android.graphics.drawable.AnimatedVectorDrawable: int getIntrinsicHeight()>
<android.location.IGpsGeofenceHardware: boolean pauseHardwareGeofence(int)>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender addActions(java.util.List)>
<android.content.ContextWrapper: java.io.File getCodeCacheDir()>
<com.android.internal.view.BaseSurfaceHolder: void setFixedSize(int,int)>
<android.widget.AbsListView: void onTextChanged(java.lang.CharSequence,int,int,int)>
<android.app.FragmentManagerImpl: void setBackStackIndex(int,android.app.BackStackRecord)>
<android.view.Window: boolean hasChildren()>
<android.app.WallpaperManager: void sendWallpaperCommand(android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle)>
<android.hardware.camera2.utils.ListUtils: java.lang.Object listSelectFirstFrom(java.util.List,java.lang.Object[])>
<android.filterfw.core.InputPort: void close()>
<android.database.AbstractWindowedCursor: android.database.CursorWindow getWindow()>
<android.bluetooth.BluetoothGattServerCallback: void onCharacteristicReadRequest(android.bluetooth.BluetoothDevice,int,int,android.bluetooth.BluetoothGattCharacteristic)>
<com.android.internal.view.BaseIWindow: void dispatchDragEvent(android.view.DragEvent)>
<com.android.internal.app.NetInitiatedActivity: void onPause()>
<android.net.BaseNetworkStateTracker: java.lang.String getNetworkInterfaceName()>
<android.os.FileUtils: boolean isValidExtFilename(java.lang.String)>
<com.android.internal.app.WindowDecorActionBar: void <init>(android.view.View)>
<android.hardware.SystemSensorManager: boolean cancelTriggerSensorImpl(android.hardware.TriggerEventListener,android.hardware.Sensor,boolean)>
<android.webkit.WebChromeClient: void onRequestFocus(android.webkit.WebView)>
<android.os.Parcel: void readTypedArray(java.lang.Object[],android.os.Parcelable.Creator)>
<android.content.res.TypedArray: void recycle()>
<android.content.pm.ApplicationInfo: java.lang.String getBaseResourcePath()>
<android.net.wifi.WifiManager.WifiLock: java.lang.String toString()>
<android.media.effect.effects.BlackWhiteEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>
<android.filterpacks.base.FrameSource: void setupPorts()>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle updateCredentials(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)>
<android.print.PrintAttributes.Margins: int hashCode()>
<android.renderscript.Script.LaunchOptions: int getXEnd()>
<android.app.IActivityManager: void setLockScreenShown(boolean)>
<android.net.NetworkPolicyManager: void setUidPolicy(int,int)>
<android.media.AudioService: void systemReady()>
<android.hardware.usb.UsbAccessory: boolean equals(java.lang.Object)>
<android.media.audiofx.BassBoost.OnParameterChangeListener: void onParameterChange(android.media.audiofx.BassBoost,int,int,short)>
<com.android.internal.widget.ActionBarOverlayLayout: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
<android.app.IActivityController: int appNotResponding(java.lang.String,int,java.lang.String)>
<android.net.IConnectivityManager: void supplyMessenger(int,android.os.Messenger)>
<android.widget.ScrollView: void onDetachedFromWindow()>
<android.bluetooth.le.ScanFilter: byte[] getManufacturerDataMask()>
<android.net.wifi.WifiManager: int calculateSignalLevel(int,int)>
<com.android.internal.app.MediaRouteChooserDialogFragment: void setExtendedSettingsClickListener(android.view.View.OnClickListener)>
<android.graphics.Shader: void copyLocalMatrix(android.graphics.Shader)>
<android.accounts.IAccountAuthenticator: void updateCredentials(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)>
<com.android.internal.inputmethod.InputMethodUtils.InputMethodSettings: java.util.List getEnabledInputMethodSubtypeListLocked(android.content.Context,android.view.inputmethod.InputMethodInfo,boolean)>
<android.app.IApplicationThread: void dumpGfxInfo(java.io.FileDescriptor,java.lang.String[])>
<android.filterfw.core.SerializedFrame: void setFloats(float[])>
<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence)>
<android.view.View: void setImportantForAccessibility(int)>
<android.view.ViewGroup: boolean resolveTextAlignment()>
<android.graphics.Rect: int hashCode()>
<android.media.RemoteControlClient: android.media.session.MediaSession getMediaSession()>
<android.app.ResultInfo: void <init>(java.lang.String,int,int,android.content.Intent)>
<android.app.Fragment: android.app.Fragment instantiate(android.content.Context,java.lang.String)>
<android.preference.SeekBarPreference: java.lang.CharSequence getSummary()>
<android.hardware.usb.UsbConfiguration: android.hardware.usb.UsbInterface getInterface(int)>
<android.text.method.TransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)>
<android.hardware.display.VirtualDisplay.Callback: void onResumed()>
<android.preference.TwoStatePreference: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.renderscript.ScriptIntrinsicYuvToRGB: android.renderscript.ScriptIntrinsicYuvToRGB create(android.renderscript.RenderScript,android.renderscript.Element)>
<android.renderscript.Mesh.Builder: android.renderscript.Mesh.Builder addVertexType(android.renderscript.Element,int)>
<com.android.internal.view.menu.ActionMenuItem: void setShowAsAction(int)>
<android.hardware.camera2.CameraDevice.StateCallback: void onClosed(android.hardware.camera2.CameraDevice)>
<android.telecom.RemoteConnection.VideoProvider: void setPauseImage(java.lang.String)>
<android.app.Fragment: void onInflate(android.util.AttributeSet,android.os.Bundle)>
<android.app.DialogFragment: void setStyle(int,int)>
<android.view.Display: int getOrientation()>
<android.net.LocalSocket: void bind(android.net.LocalSocketAddress)>
<android.app.Notification.Builder: android.app.Notification.Builder setGroupSummary(boolean)>
<android.drm.DrmRights: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.widget.TextView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.view.View: void setWillNotCacheDrawing(boolean)>
<android.media.MediaFocusControl: void unregisterRemoteControlClient(android.app.PendingIntent,android.media.IRemoteControlClient)>
<com.android.internal.util.XmlUtils: void writeIntArrayXml(int[],java.lang.String,org.xmlpull.v1.XmlSerializer)>
<android.content.ContentProvider: int getUserIdFromAuthority(java.lang.String)>
<android.media.tv.TvInputService: android.media.tv.TvInputInfo onHdmiDeviceAdded(android.hardware.hdmi.HdmiDeviceInfo)>
<android.widget.LinearLayout: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.telecom.Log: void w(java.lang.Object,java.lang.String,java.lang.Object[])>
<android.app.FragmentTransaction: android.app.FragmentTransaction setCustomTransition(int,int)>
<android.graphics.drawable.AnimatedVectorDrawable: void setAlpha(int)>
<com.android.internal.content.NativeLibraryHelper: void removeNativeBinariesLI(java.lang.String)>
<android.preference.PreferenceScreen: void onDismiss(android.content.DialogInterface)>
<android.widget.TextView: void onVisibilityChanged(android.view.View,int)>
<android.text.method.ArrowKeyMovementMethod: boolean down(android.widget.TextView,android.text.Spannable)>
<android.animation.AnimatorSet: android.animation.AnimatorSet clone()>
<android.view.WindowManagerGlobal: void updateViewLayout(android.view.View,android.view.ViewGroup.LayoutParams)>
<android.net.wifi.p2p.WifiP2pManager: void requestGroupInfo(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.GroupInfoListener)>
<com.android.internal.widget.DecorToolbar: boolean isTitleTruncated()>
<android.widget.ImageSwitcher: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.widget.DialerFilter: int getMode()>
<android.text.method.QwertyKeyListener: void <init>(android.text.method.TextKeyListener.Capitalize,boolean)>
<android.hardware.usb.UsbInterface: void setEndpoints(android.os.Parcelable[])>
<android.view.InputEvent: void prepareForReuse()>
<android.view.inputmethod.CursorAnchorInfo.Builder: void reset()>
<com.android.internal.app.MediaRouteControllerDialog: void <init>(android.content.Context,int)>
<android.net.NetworkUtils: boolean protectFromVpn(int)>
<android.media.tv.ITvInputClient: void onSessionEvent(java.lang.String,android.os.Bundle,int)>
<android.telephony.CellIdentityCdma: void writeToParcel(android.os.Parcel,int)>
<android.telephony.CellSignalStrengthGsm: void <init>(android.telephony.CellSignalStrengthGsm)>
<android.net.wifi.WifiConfiguration: android.net.wifi.WifiConfiguration.Visibility setVisibility(long)>
<android.app.Activity: boolean isVoiceInteraction()>
<android.view.View: void setHorizontalScrollBarEnabled(boolean)>
<android.animation.ValueAnimator: android.animation.ValueAnimator ofPropertyValuesHolder(android.animation.PropertyValuesHolder[])>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor[] createSocketPair()>
<android.view.inputmethod.InputMethodManager: void startGettingWindowFocus(android.view.View)>
<android.media.WebVttParser: float parseFloatPercentage(java.lang.String)>
<com.android.internal.os.BatteryStatsImpl: long computeBatteryTimeRemaining(long)>
<android.graphics.Matrix: void setRotate(float,float,float)>
<android.transition.Transition: android.animation.TimeInterpolator getInterpolator()>
<android.net.wifi.IWifiManager: int addOrUpdateNetwork(android.net.wifi.WifiConfiguration)>
<android.app.AppImportanceMonitor: void onImportanceChanged(int,int,int)>
<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setActionView(int)>
<android.widget.CalendarView: int getWeekDayTextAppearance()>
<android.app.Activity: int getChangingConfigurations()>
<android.renderscript.Double3: void add(android.renderscript.Double3)>
<android.content.res.Resources: java.lang.CharSequence getQuantityText(int,int)>
<android.hardware.camera2.legacy.LegacyCameraDevice: void finalize()>
<android.net.NetworkStatsHistory: int getIndexAfter(long)>
<android.service.dreams.DreamService: boolean isLowProfile()>
<android.net.wifi.ScanResult: boolean is24GHz()>
<android.view.View: void setSaveFromParentEnabled(boolean)>
<com.google.android.gles_jni.GLImpl: void glGetTexEnviv(int,int,int[],int)>
<android.widget.DatePickerController: void setMaxDate(long)>
<android.telephony.CellSignalStrength: int hashCode()>
<android.view.accessibility.AccessibilityRecord: int getWindowId()>
<android.text.style.RasterizerSpan: android.graphics.Rasterizer getRasterizer()>
<android.hardware.camera2.CameraCaptureSession.CaptureCallback: void onCaptureCompleted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.TotalCaptureResult)>
<android.graphics.drawable.GradientDrawable: android.graphics.drawable.Drawable mutate()>
<android.webkit.WebView.PrivateAccess: void awakenScrollBars(int,boolean)>
<com.android.internal.widget.SlidingTab: void <init>(android.content.Context,android.util.AttributeSet)>
<android.os.BatteryStats: int getNumDischargeStepDurations()>
<android.view.View: void setCameraDistance(float)>
<android.print.IPrintSpooler: void createPrintJob(android.print.PrintJobInfo)>
<android.os.Process: void removeAllProcessGroups()>
<android.app.ActivityManager: int checkComponentPermission(java.lang.String,int,int,boolean)>
<android.view.ViewStub: int getLayoutResource()>
<android.widget.HorizontalScrollView: void setFillViewport(boolean)>
<android.text.style.MaskFilterSpan: android.graphics.MaskFilter getMaskFilter()>
<android.database.MatrixCursor.RowBuilder: android.database.MatrixCursor.RowBuilder add(java.lang.String,java.lang.Object)>
<android.accounts.AccountManager: void clearPassword(android.accounts.Account)>
<android.content.ContentResolver: android.content.IContentProvider acquireProvider(java.lang.String)>
<android.telephony.CellSignalStrengthGsm: android.telephony.CellSignalStrengthGsm copy()>
<android.os.Debug: void startNativeTracing()>
<android.content.ClipData.Item: android.content.Intent getIntent()>
<android.widget.Chronometer: void setStarted(boolean)>
<android.text.TextUtils: java.lang.CharSequence concat(java.lang.CharSequence[])>
<android.media.session.ISessionController: void setVolumeTo(int,int,java.lang.String)>
<android.content.pm.ComponentInfo: boolean isEnabled()>
<android.media.AudioManager: int createAudioPatch(android.media.AudioPatch[],android.media.AudioPortConfig[],android.media.AudioPortConfig[])>
<android.text.Selection: void removeSelection(android.text.Spannable)>
<android.view.View: boolean hasWindowFocus()>
<com.android.internal.widget.DecorToolbar: boolean hideOverflowMenu()>
<android.hardware.Camera: android.hardware.Camera openUninitialized()>
<android.renderscript.RenderScript: android.renderscript.RenderScript.RSErrorHandler getErrorHandler()>
<android.view.RenderNode: float getRotationY()>
<android.app.backup.BackupTransport: int initializeDevice()>
<android.view.WindowManagerPolicy.WindowState: android.graphics.Rect getGivenContentInsetsLw()>
<android.print.PrintAttributes.Builder: android.print.PrintAttributes.Builder setMinMargins(android.print.PrintAttributes.Margins)>
<android.telephony.CellSignalStrengthCdma: int getEvdoEcio()>
<android.content.ContextWrapper: void enforceCallingUriPermission(android.net.Uri,int,java.lang.String)>
<com.android.internal.widget.LockPatternUtils: int getRequestedPasswordMinimumSymbols()>
<android.transition.Slide: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.BaseExpandableListAdapter: int getGroupTypeCount()>
<android.content.pm.RegisteredServicesCacheListener: void onServiceChanged(java.lang.Object,int,boolean)>
<android.location.Address: void setLongitude(double)>
<android.app.admin.IDevicePolicyManager: boolean getAutoTimeRequired()>
<android.nfc.tech.NfcV: int getMaxTransceiveLength()>
<com.android.internal.util.ParcelableString: int describeContents()>
<android.app.IInstrumentationWatcher: void instrumentationFinished(android.content.ComponentName,int,android.os.Bundle)>
<android.view.animation.LayoutAnimationController: void setAnimation(android.view.animation.Animation)>
<android.preference.DialogPreference: void setDialogIcon(android.graphics.drawable.Drawable)>
<com.android.internal.widget.SizeAdaptiveLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.service.voice.VoiceInteractionSession: boolean onKeyMultiple(int,int,android.view.KeyEvent)>
<android.filterfw.core.SerializedFrame: java.nio.ByteBuffer getData()>
<com.android.internal.backup.IBackupTransport: java.lang.String name()>
<android.net.NetworkCapabilities: int getLinkUpstreamBandwidthKbps()>
<android.widget.CompoundButton: void setButtonTintList(android.content.res.ColorStateList)>
<android.service.dreams.DreamService: boolean isDozing()>
<android.webkit.WebViewProvider: void setHttpAuthUsernamePassword(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.media.MiniThumbFile: void reset()>
<android.view.ScaleGestureDetector: float getCurrentSpan()>
<android.widget.RadialTimePickerView: void showHours(boolean)>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDXor()>
<android.renderscript.FieldPacker: int subI32()>
<android.content.pm.PackageParser: android.content.pm.PackageParser.ApkLite parseApkLite(java.io.File,int)>
<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>
<android.text.style.EasyEditSpan: void setDeleteEnabled(boolean)>
<android.database.sqlite.SQLiteTransactionListener: void onRollback()>
<android.widget.TextView: int getExtendedPaddingBottom()>
<android.telecom.TelecomManager: android.telecom.PhoneAccount getPhoneAccount(android.telecom.PhoneAccountHandle)>
<android.os.BatteryStats.Uid: long getProcessStateTime(int,long,int)>
<android.widget.AbsoluteLayout: void <init>(android.content.Context)>
<com.android.internal.widget.DecorToolbar: void animateToVisibility(int)>
<android.os.Registrant: android.os.Handler getHandler()>
<android.filterfw.core.Filter: void setupPorts()>
<android.media.AudioService.VolumeController: java.lang.String toString()>
<android.os.UserHandle: void formatUid(java.io.PrintWriter,int)>
<android.view.accessibility.AccessibilityRecord: long getSourceNodeId()>
<android.app.Activity: android.app.Dialog onCreateDialog(int,android.os.Bundle)>
<android.app.ActivityThread: android.app.ActivityThread currentActivityThread()>
<android.service.notification.ZenModeConfig: boolean isValidDowntimeConditionId(android.net.Uri)>
<com.android.internal.view.menu.MenuBuilder: void clearHeader()>
<android.media.AudioRecord: int getPositionNotificationPeriod()>
<android.text.style.RelativeSizeSpan: void <init>(float)>
<android.location.IFusedGeofenceHardware: void pauseMonitoringGeofence(int)>
<android.net.http.SslError: void <init>(int,android.net.http.SslCertificate)>
<android.content.res.Configuration: int updateFrom(android.content.res.Configuration)>
<android.view.Surface: void writeToParcel(android.os.Parcel,int)>
<android.service.persistentdata.IPersistentDataBlockService: void setOemUnlockEnabled(boolean)>
<android.content.pm.PackageManager: void setInstallerPackageName(java.lang.String,java.lang.String)>
<android.renderscript.Short4: void addAt(int,short)>
<android.location.LocalListenerHelper.ListenerOperation: void execute(java.lang.Object)>
<android.database.Cursor: android.os.Bundle respond(android.os.Bundle)>
<android.opengl.GLES31: void glProgramUniform2fv(int,int,int,java.nio.FloatBuffer)>
<android.view.SubMenu: android.view.SubMenu setHeaderIcon(int)>
<android.content.pm.FeatureInfo: void writeToParcel(android.os.Parcel,int)>
<android.media.Metadata: java.util.Date getDate(int)>
<android.location.Location: double getLongitude()>
<android.hardware.camera2.impl.CallbackProxies.DeviceStateCallbackProxy: void onError(android.hardware.camera2.CameraDevice,int)>
<android.os.SystemProperties: void set(java.lang.String,java.lang.String)>
<android.nfc.tech.MifareClassic: void restore(int)>
<android.bluetooth.BluetoothA2dpSink: android.bluetooth.BluetoothAudioConfig getAudioConfig(android.bluetooth.BluetoothDevice)>
<android.app.ActivityManager.AppTask: void <init>(android.app.IAppTask)>
<android.bluetooth.BluetoothPan: boolean connect(android.bluetooth.BluetoothDevice)>
<android.os.IUserManager: int getUserSerialNumber(int)>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder detectLeakedClosableObjects()>
<android.text.style.ImageSpan: void <init>(android.content.Context,int,int)>
<android.text.style.ReplacementSpan: void draw(android.graphics.Canvas,java.lang.CharSequence,int,int,float,int,int,int,android.graphics.Paint)>
<android.graphics.Path: void rLineTo(float,float)>
<android.widget.LinearLayout: void <init>(android.content.Context)>
<android.content.ContextWrapper: int getWallpaperDesiredMinimumWidth()>
<android.view.KeyEvent: boolean metaStateHasModifiers(int,int)>
<android.net.wifi.p2p.WifiP2pGroup: android.net.wifi.p2p.WifiP2pDevice getOwner()>
<android.widget.LinearLayout: int getShowDividers()>
<android.widget.TextView: boolean isInputMethodTarget()>
<android.media.Tokenizer.TokenizerPhase: void tokenize()>
<android.filterfw.core.FilterSurfaceView: void unbind()>
<android.graphics.Bitmap: int getScaledHeight(android.util.DisplayMetrics)>
<android.net.TrafficStats: long getUidTcpRxSegments(int)>
<android.bluetooth.IBluetoothHeadset: boolean disconnect(android.bluetooth.BluetoothDevice)>
<android.net.ConnectivityManager: int setUsbTethering(boolean)>
<android.graphics.Region: boolean getBoundaryPath(android.graphics.Path)>
<android.util.DayOfMonthCursor: boolean isSelected(int,int)>
<android.app.LoadedApk: java.lang.String[] getSplitAppDirs()>
<android.content.AsyncTaskLoader: void onCanceled(java.lang.Object)>
<android.net.nsd.DnsSdTxtRecord: void <init>(android.net.nsd.DnsSdTxtRecord)>
<android.widget.AbsListView: void clearChoices()>
<android.bluetooth.BluetoothHeadsetClientCall: int getState()>
<android.hardware.input.KeyboardLayout: java.lang.String getDescriptor()>
<android.util.Slog: int i(java.lang.String,java.lang.String)>
<android.view.inputmethod.InputBinding: java.lang.String toString()>
<android.graphics.Paint: void setShadowLayer(float,float,float,int)>
<android.text.DynamicLayout: int getIndexFirstChangedBlock()>
<com.android.internal.widget.multiwaveview.PointCloud: void makePointCloud(float,float)>
<android.hardware.camera2.CameraCaptureSession.CaptureCallback: void onCaptureProgressed(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureResult)>
<android.content.Intent: android.content.Intent setDataAndTypeAndNormalize(android.net.Uri,java.lang.String)>
<android.widget.GridLayout: void setOrientation(int)>
<android.net.LocalSocket: java.io.InputStream getInputStream()>
<android.view.View: void dispatchSetPressed(boolean)>
<android.filterfw.GraphEnvironment: android.filterfw.core.FilterGraph getGraph(int)>
<com.android.internal.widget.ActionBarView: void setSplitToolbar(boolean)>
<android.filterfw.geometry.Point: android.filterfw.geometry.Point scaledTo(float)>
<android.content.ContextWrapper: android.content.Context createPackageContext(java.lang.String,int)>
<android.app.AppOpsManager.OpEntry: boolean isRunning()>
<android.net.InterfaceConfiguration: void writeToParcel(android.os.Parcel,int)>
<android.content.CursorLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.provider.ContactsContract.StatusUpdates: int getPresencePrecedence(int)>
<android.view.animation.Animation: void restrictDuration(long)>
<com.google.android.util.AbstractMessageParser: com.google.android.util.AbstractMessageParser.Token tokenForUrl(java.lang.String,java.lang.String)>
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener)>
<android.hardware.camera2.utils.BinderHolder: void setBinder(android.os.IBinder)>
<android.animation.StateListAnimator.Tuple: int[] getSpecs()>
<android.util.MathUtils: float min(int,int,int)>
<android.media.MediaFocusControl: void dispatchMediaKeyEvent(android.view.KeyEvent)>
<android.content.res.AssetFileDescriptor: int describeContents()>
<android.media.projection.MediaProjection.Callback: void onStop()>
<android.bluetooth.BluetoothHeadsetClient: boolean explicitCallTransfer(android.bluetooth.BluetoothDevice)>
<android.renderscript.Element: android.renderscript.Element FONT(android.renderscript.RenderScript)>
<android.os.PowerManager.WakeLock: void finalize()>
<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>
<android.hardware.display.IDisplayManager: void startWifiDisplayScan()>
<android.view.Window: boolean isShortcutKey(int,android.view.KeyEvent)>
<android.net.NetworkTemplate: android.net.NetworkTemplate buildTemplateWifiWildcard()>
<android.media.MediaRouter.RouteCategory: java.lang.String toString()>
<android.view.Gravity: void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int)>
<android.widget.TimePicker: void setOnTimeChangedListener(android.widget.TimePicker.OnTimeChangedListener)>
<android.telecom.VideoCallImpl: void setPreviewSurface(android.view.Surface)>
<android.graphics.drawable.BitmapDrawable: android.graphics.Shader.TileMode getTileModeY()>
<android.renderscript.Byte3: void addAt(int,byte)>
<android.net.NetworkTemplate: java.lang.String getSubscriberId()>
<android.media.projection.IMediaProjectionManager: boolean isValidMediaProjection(android.media.projection.IMediaProjection)>
<android.webkit.WebView: android.webkit.WebView.HitTestResult getHitTestResult()>
<android.graphics.pdf.PdfRenderer: void finalize()>
<android.view.inputmethod.InputConnection: int getCursorCapsMode(int)>
<android.transition.TransitionUtils: android.view.View copyViewImage(android.view.ViewGroup,android.view.View,android.view.View)>
<android.widget.TextView: void setHint(java.lang.CharSequence)>
<android.os.BatteryStats: long getWifiSignalStrengthTime(int,long,int)>
<com.android.internal.view.menu.ActionMenu: android.view.MenuItem add(java.lang.CharSequence)>
<android.renderscript.Element: android.renderscript.Element I16_3(android.renderscript.RenderScript)>
<com.android.internal.widget.DecorContentParent: void setWindowCallback(android.view.Window.Callback)>
<com.android.internal.statusbar.StatusBarIconList: int describeContents()>
<android.media.AudioService: boolean registerRemoteControlDisplay(android.media.IRemoteControlDisplay,int,int)>
<android.view.WindowInsets: android.view.WindowInsets consumeSystemWindowInsets(boolean,boolean,boolean,boolean)>
<android.content.pm.PackageInstaller.SessionParams: void setInstallLocation(int)>
<android.view.Window: android.view.View findViewById(int)>
<android.app.ActionBar.TabListener: void onTabUnselected(android.app.ActionBar.Tab,android.app.FragmentTransaction)>
<com.google.android.collect.Sets: java.util.SortedSet newSortedSet(java.lang.Object[])>
<android.opengl.ETC1: void formatHeader(java.nio.Buffer,int,int)>
<com.android.internal.view.IInputMethodClient: void setActive(boolean)>
<android.content.IntentFilter: java.lang.String matchCategories(java.util.Set)>
<android.widget.ToggleButton: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.internal.app.WindowDecorActionBar: void doHide(boolean)>
<android.media.TextTrackCue: java.lang.StringBuilder appendLinesToBuilder(java.lang.StringBuilder)>
<android.renderscript.Double3: double dotProduct(android.renderscript.Double3)>
<android.app.usage.UsageStatsManager: java.util.List queryUsageStats(int,long,long)>
<android.media.MediaRouter: void selectRoute(int,android.media.MediaRouter.RouteInfo)>
<android.app.ApplicationErrorReport.AnrInfo: void dump(android.util.Printer,java.lang.String)>
<android.view.WindowInsets: void <init>(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,boolean)>
<android.animation.AnimatorSet: void reverse()>
<android.hardware.camera2.params.StreamConfiguration: int getHeight()>
<android.opengl.GLES31: void glGetTexLevelParameteriv(int,int,int,int[],int)>
<android.renderscript.Long2: void add(android.renderscript.Long2)>
<android.location.Location: void writeToParcel(android.os.Parcel,int)>
<android.view.ViewGroup: boolean isChildrenDrawnWithCacheEnabled()>
<android.widget.Gallery: void dispatchSetPressed(boolean)>
<android.filterpacks.imageproc.TintFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<android.os.INetworkManagementService: void wifiFirmwareReload(java.lang.String,java.lang.String)>
<android.view.ViewRootImpl: void dispatchInvalidateDelayed(android.view.View,long)>
<android.view.ViewGroup.MarginLayoutParams: int getMarginEnd()>
<android.app.IApplicationThread: void clearDnsCache()>
<android.text.HtmlToSpannedConverter: void startPrefixMapping(java.lang.String,java.lang.String)>
<android.opengl.GLES20: void glDrawElements(int,int,int,java.nio.Buffer)>
<android.provider.Settings.Global: boolean putLong(android.content.ContentResolver,java.lang.String,long)>
<com.android.internal.util.XmlUtils: boolean readBooleanAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>
<android.media.SubtitleController: android.media.SubtitleTrack addTrack(android.media.MediaFormat)>
<android.preference.DialogPreference: void setPositiveButtonText(java.lang.CharSequence)>
<android.widget.HeaderViewListAdapter: long getItemId(int)>
<com.google.android.gles_jni.GLImpl: void glMatrixIndexPointerOES(int,int,int,int)>
<android.telephony.PhoneNumberUtils: boolean isGlobalPhoneNumber(java.lang.String)>
<android.media.MediaCodecInfo.VideoCapabilities: int getHeightAlignment()>
<android.media.SoundPool.SoundPoolDelegate: void pause(int)>
<android.service.dreams.DreamService: void onWakeUp()>
<android.hardware.camera2.impl.CameraDeviceImpl: void configureOutputs(java.util.List)>
<android.view.ViewGroup: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
<android.content.ContentResolver: boolean getSyncAutomatically(android.accounts.Account,java.lang.String)>
<android.nfc.tech.NdefFormatable: void <init>(android.nfc.Tag)>
<android.content.ContentProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String,android.os.CancellationSignal)>
<android.widget.VideoView: int resolveAdjustedSize(int,int)>
<android.hardware.camera2.impl.CameraDeviceImpl: android.hardware.camera2.impl.CameraDeviceImpl.CameraDeviceCallbacks getCallbacks()>
<android.content.pm.PackageParser: android.content.pm.PermissionGroupInfo generatePermissionGroupInfo(android.content.pm.PackageParser.PermissionGroup,int)>
<com.android.internal.app.WindowDecorActionBar: void <init>(android.app.Activity)>
<android.opengl.GLES11: void glGetTexEnvxv(int,int,java.nio.IntBuffer)>
<android.content.pm.IPackageInstaller: android.content.pm.ParceledListSlice getAllSessions(int)>
<android.database.CursorWindow: void writeToParcel(android.os.Parcel,int)>
<android.media.MediaRouter.Callback: void onRouteUnselected(android.media.MediaRouter,int,android.media.MediaRouter.RouteInfo)>
<android.media.MediaScannerClient: void scanFile(java.lang.String,long,long,boolean,boolean)>
<android.widget.NumberPicker: void setWrapSelectorWheel(boolean)>
<android.view.Window: void setSharedElementEnterTransition(android.transition.Transition)>
<android.app.admin.DevicePolicyManager: void setMaximumFailedPasswordsForWipe(android.content.ComponentName,int)>
<com.android.internal.view.BaseSurfaceHolder: void unlockCanvasAndPost(android.graphics.Canvas)>
<android.filterfw.geometry.Quad: android.filterfw.geometry.Rectangle boundingBox()>
<android.media.session.PlaybackState: long getPosition()>
<android.service.fingerprint.FingerprintManager: void enrollCancel()>
<android.telecom.Connection: void onPostDialContinue(boolean)>
<android.view.inputmethod.CompletionInfo: void writeToParcel(android.os.Parcel,int)>
<android.hardware.hdmi.IHdmiRecordListener: byte[] getOneTouchRecordSource(int)>
<android.webkit.WebViewProvider: void init(java.util.Map,boolean)>
<android.graphics.drawable.GradientDrawable: void <init>(android.graphics.drawable.GradientDrawable.Orientation,int[])>
<android.widget.AbsListView: int computeVerticalScrollRange()>
<com.android.internal.app.WindowDecorActionBar.ActionModeImpl: void onCloseSubMenu(com.android.internal.view.menu.SubMenuBuilder)>
<com.android.internal.util.FastPrintWriter: void println(char[])>
<android.app.IActivityManager: boolean shutdown(int)>
<android.renderscript.Mesh.AllocationBuilder: android.renderscript.Mesh create()>
<com.google.android.gles_jni.GLImpl: void glColorMask(boolean,boolean,boolean,boolean)>
<com.android.internal.view.menu.IconMenuItemView: void drawableStateChanged()>
<android.database.CursorJoiner: boolean hasNext()>
<android.app.ActivityManager.StackInfo: void writeToParcel(android.os.Parcel,int)>
<android.app.usage.UsageStats: long getTotalTimeInForeground()>
<android.widget.AdapterViewAnimator: void setOutAnimation(android.animation.ObjectAnimator)>
<android.content.SyncStats: int describeContents()>
<android.os.Bundle: int describeContents()>
<com.android.internal.view.menu.ActionMenu: void setGroupEnabled(int,boolean)>
<android.widget.ExpandableListView.OnGroupExpandListener: void onGroupExpand(int)>
<android.util.Slog: int w(java.lang.String,java.lang.String)>
<android.content.res.Resources.NotFoundException: void <init>(java.lang.String)>
<android.app.Instrumentation: void sendStatus(int,android.os.Bundle)>
<android.text.style.TtsSpan.Builder: android.text.style.TtsSpan.Builder setIntArgument(java.lang.String,int)>
<android.text.util.Linkify.TransformFilter: java.lang.String transformUrl(java.util.regex.Matcher,java.lang.String)>
<android.app.backup.IFullBackupRestoreObserver: void onTimeout()>
<android.bluetooth.BluetoothGattCallback: void onConnectionStateChange(android.bluetooth.BluetoothGatt,int,int)>
<android.media.session.MediaController: android.media.session.PlaybackState getPlaybackState()>
<android.renderscript.Element: android.renderscript.Element I16_2(android.renderscript.RenderScript)>
<android.view.MotionEvent: void recycle()>
<android.widget.ListPopupWindow: void setPromptPosition(int)>
<android.database.sqlite.SqliteWrapper: android.database.Cursor query(android.content.Context,android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.webkit.WebSettings: void setSaveFormData(boolean)>
<android.telephony.ServiceState: void copyFrom(android.telephony.ServiceState)>
<android.filterpacks.imageproc.AutoFixFilter: void tearDown(android.filterfw.core.FilterContext)>
<android.content.ContextWrapper: java.io.File[] getObbDirs()>
<android.net.NetworkScorerAppManager: android.net.NetworkScorerAppManager.NetworkScorerAppData getScorer(android.content.Context,java.lang.String)>
<android.view.accessibility.AccessibilityInteractionClient: void setComputeClickPointInScreenActionResult(android.graphics.Point,int)>
<android.view.animation.Animation: void setDetachWallpaper(boolean)>
<android.view.Window: void setAllowExitTransitionOverlap(boolean)>
<android.provider.ContactsContract.QuickContact: android.content.Intent composeQuickContactsIntent(android.content.Context,android.view.View,android.net.Uri,int,java.lang.String[])>
<android.content.ContentValues: java.lang.Float getAsFloat(java.lang.String)>
<com.android.internal.http.multipart.Part: boolean isRepeatable()>
<android.view.accessibility.AccessibilityNodeInfo: int getVirtualDescendantId(long)>
<android.preference.MultiCheckPreference: android.os.Parcelable onSaveInstanceState()>
<android.view.accessibility.AccessibilityRecord: boolean isFullScreen()>
<android.telecom.Connection: void setConferenceableConnections(java.util.List)>
<android.inputmethodservice.InputMethodService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.media.audiofx.AudioEffect: byte[] concatArrays(byte[][])>
<android.service.voice.IVoiceInteractionSession: void taskStarted(android.content.Intent,int)>
<android.renderscript.Script: void forEach(int,android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.FieldPacker,android.renderscript.Script.LaunchOptions)>
<android.content.pm.ProviderInfo: void <init>(android.content.pm.ProviderInfo)>
<android.nfc.cardemulation.AidGroup: void writeAsXml(org.xmlpull.v1.XmlSerializer)>
<android.view.View: boolean requestFocusFromTouch()>
<android.media.MediaFormat: boolean getFeatureEnabled(java.lang.String)>
<android.accounts.Account: java.lang.String toString()>
<android.app.ActivityManagerProxy: void activityPaused(android.os.IBinder)>
<android.os.UserHandle: android.os.UserHandle readFromParcel(android.os.Parcel)>
<android.net.VpnService.Builder: android.net.VpnService.Builder addAllowedApplication(java.lang.String)>
<android.database.sqlite.SQLiteDatabaseLockedException: void <init>(java.lang.String)>
<android.view.animation.ClipRectAnimation: void applyTransformation(float,android.view.animation.Transformation)>
<android.location.LocationManager: void removeGpsMeasurementListener(android.location.GpsMeasurementsEvent.Listener)>
<android.view.View.MeasureSpec: int makeMeasureSpec(int,int)>
<android.view.accessibility.AccessibilityNodeInfo: void removeAction(int)>
<android.service.notification.IConditionProvider: void onUnsubscribe(android.net.Uri)>
<android.provider.CallLog.Calls: android.net.Uri addCall(com.android.internal.telephony.CallerInfo,android.content.Context,java.lang.String,int,int,int,android.telecom.PhoneAccountHandle,long,int,java.lang.Long)>
<android.widget.RelativeLayout.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>
<android.telephony.cdma.CdmaSmsCbProgramData: int describeContents()>
<android.filterfw.core.ShaderProgram: android.filterfw.core.ShaderProgram createIdentity(android.filterfw.core.FilterContext)>
<com.android.internal.widget.SwipeDismissLayout: void setOnSwipeProgressChangedListener(com.android.internal.widget.SwipeDismissLayout.OnSwipeProgressChangedListener)>
<android.content.pm.ApplicationInfo.DisplayNameComparator: void <init>(android.content.pm.PackageManager)>
<android.animation.TypeEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)>
<android.content.SyncStats: void <init>(android.os.Parcel)>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQueryWithFactory(android.database.sqlite.SQLiteDatabase.CursorFactory,java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>
<com.android.internal.util.IState: void enter()>
<android.widget.RadialTimePickerView: int getAmOrPm()>
<android.graphics.BlurMaskFilter: void <init>(float,android.graphics.BlurMaskFilter.Blur)>
<android.renderscript.Int2: void mul(int)>
<android.view.InputChannel: void transferTo(android.view.InputChannel)>
<android.media.audiofx.Visualizer: int setMeasurementMode(int)>
<android.net.IConnectivityManager: void reportInetCondition(int,int)>
<android.widget.ImageView: void setMaxHeight(int)>
<android.preference.DialogPreference: int getDialogLayoutResource()>
<android.bluetooth.BluetoothAdapter: boolean setName(java.lang.String)>
<android.view.Window.Callback: void onWindowAttributesChanged(android.view.WindowManager.LayoutParams)>
<android.app.Dialog: void openContextMenu(android.view.View)>
<android.content.IntentFilter: void <init>(java.lang.String)>
<android.app.Activity: void onPause()>
<android.hardware.Camera.Parameters: void setGpsTimestamp(long)>
<android.filterfw.core.FrameFormat: java.lang.String dimensionsToString(int[])>
<android.location.GpsNavigationMessage: void setMessageId(short)>
<android.media.session.ISessionControllerCallback: void onMetadataChanged(android.media.MediaMetadata)>
<android.hardware.location.IGeofenceHardwareMonitorCallback: void onMonitoringSystemChange(android.hardware.location.GeofenceHardwareMonitorEvent)>
<android.graphics.Bitmap: void setHeight(int)>
<android.widget.HorizontalScrollView: float getRightFadingEdgeStrength()>
<android.transition.ArcMotion: float getMaximumAngle()>
<android.graphics.Bitmap: void setConfig(android.graphics.Bitmap.Config)>
<com.android.internal.view.ActionBarPolicy: int getMaxActionButtons()>
<android.filterpacks.videosrc.MediaSource: void prepare(android.filterfw.core.FilterContext)>
<android.app.TabActivity: void onContentChanged()>
<android.content.Context: android.os.Looper getMainLooper()>
<android.sax.Element: java.lang.String toString()>
<android.app.Fragment: void setReturnTransition(android.transition.Transition)>
<android.opengl.GLES11: void glTexParameteriv(int,int,java.nio.IntBuffer)>
<android.view.animation.Animation: void setStartOffset(long)>
<android.opengl.GLES20: void glBindFramebuffer(int,int)>
<android.widget.SlidingDrawer: void animateToggle()>
<android.webkit.WebView: android.graphics.Bitmap getFavicon()>
<android.transition.ChangeBounds: void setReparent(boolean)>
<android.os.PersistableBundle: android.os.PersistableBundle restoreFromXml(org.xmlpull.v1.XmlPullParser)>
<android.app.ActivityGroup: java.util.HashMap onRetainNonConfigurationChildInstances()>
<android.view.accessibility.AccessibilityInteractionClient: void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.os.BatteryStats.Uid: long getWifiScanTime(long,int)>
<android.renderscript.BaseObj: boolean equals(java.lang.Object)>
<android.drm.DrmInfo: byte[] getData()>
<android.os.IUpdateLock: void acquireUpdateLock(android.os.IBinder,java.lang.String)>
<com.android.internal.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderTitle(java.lang.CharSequence)>
<android.widget.ToggleButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.net.StaticIpConfiguration: void readFromParcel(android.net.StaticIpConfiguration,android.os.Parcel)>
<android.inputmethodservice.InputMethodService: void onDestroy()>
<android.media.tv.ITvInputSession: void requestUnblockContent(java.lang.String)>
<android.net.NetworkStatsHistory.DataStreamUtils: long[] readVarLongArray(java.io.DataInputStream)>
<android.app.IActivityManager: void unbindBackupAgent(android.content.pm.ApplicationInfo)>
<com.google.android.gles_jni.GLImpl: void glOrthox(int,int,int,int,int,int)>
<com.android.internal.app.ToolbarActionBar: boolean onMenuKeyEvent(android.view.KeyEvent)>
<com.android.ims.internal.IImsUtListener: void utConfigurationQueried(com.android.ims.internal.IImsUt,int,android.os.Bundle)>
<android.view.InputFilter: void sendInputEvent(android.view.InputEvent,int)>
<android.media.effect.effects.StraightenEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>
<android.app.IUiAutomationConnection: android.view.WindowContentFrameStats getWindowContentFrameStats(int)>
<android.app.Dialog: void cancel()>
<android.content.pm.PackageManager: android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName,int)>
<android.bluetooth.BluetoothActivityEnergyInfo: int getControllerIdleTimeMillis()>
<android.renderscript.ScriptIntrinsicResize: void forEach_bicubic(android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>
<android.content.DefaultDataHandler: void startDocument()>
<android.media.MediaCodec.CryptoInfo: void set(int,int[],int[],byte[],byte[],int)>
<android.os.PowerManagerInternal: void setButtonBrightnessOverrideFromWindowManager(int)>
<android.hardware.hdmi.HdmiClient: int getDeviceType()>
<android.media.IRemoteControlDisplay: void setAllMetadata(int,android.os.Bundle,android.graphics.Bitmap)>
<android.graphics.Canvas: void setHighContrastText(boolean)>
<android.text.Layout: int getLineBottom(int)>
<android.gesture.GestureOverlayView: long getFadeOffset()>
<android.widget.ListPopupWindow: int getSelectedItemPosition()>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,android.util.Property,android.animation.TypeEvaluator,java.lang.Object[])>
<android.app.IActivityManager: void setServiceForeground(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,boolean)>
<android.os.Parcel: void writeDoubleArray(double[])>
<android.net.wifi.WifiInfo: void setSupplicantState(android.net.wifi.SupplicantState)>
<android.renderscript.ScriptIntrinsicBlend: void forEachClear(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>
<android.text.format.DateUtils: java.lang.CharSequence formatDuration(long)>
<android.net.NetworkInfo: int getSubtype()>
<android.telephony.SubscriptionManager: int setDisplayName(java.lang.String,long)>
<com.android.ims.internal.IImsConfig: java.lang.String getMasterStringValue(int)>
<android.renderscript.Float2: void add(android.renderscript.Float2)>
<android.widget.AbsListView: void setRemoteViewsOnClickHandler(android.widget.RemoteViews.OnClickHandler)>
<android.gesture.Gesture: float getLength()>
<android.media.session.MediaSession.Token: void writeToParcel(android.os.Parcel,int)>
<android.telecom.Conference: void onMerge()>
<android.filterfw.core.NativeFrame: void setData(java.nio.ByteBuffer,int,int)>
<android.media.AudioPatch: android.media.AudioPortConfig[] sinks()>
<android.os.MessageQueue.IdleHandler: boolean queueIdle()>
<android.widget.TextView: void resetResolvedDrawables()>
<android.renderscript.Byte2: void <init>(android.renderscript.Byte2)>
<com.android.internal.view.menu.ActionMenuItem: int getItemId()>
<android.opengl.GLES11: void glGetFixedv(int,java.nio.IntBuffer)>
<android.net.ProxyInfo: int describeContents()>
<android.provider.Settings.Global: java.lang.String getBluetoothMapPriorityKey(java.lang.String)>
<android.app.admin.DevicePolicyManager: boolean getAutoTimeRequired()>
<android.mtp.MtpObjectInfo: int getThumbCompressedSize()>
<android.print.PrintJobInfo: int describeContents()>
<android.bluetooth.IBluetoothHealth: boolean disconnectChannel(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration,int)>
<android.widget.TabHost.TabSpec: android.widget.TabHost.TabSpec setIndicator(java.lang.CharSequence,android.graphics.drawable.Drawable)>
<android.content.BroadcastReceiver.PendingResult: java.lang.String getResultData()>
<android.telephony.DataConnectionRealTimeInfo: void <init>(long,int)>
<com.android.internal.view.menu.BaseMenuPresenter: void onCloseMenu(com.android.internal.view.menu.MenuBuilder,boolean)>
<android.app.backup.RestoreObserver: void restoreSetsAvailable(android.app.backup.RestoreSet[])>
<android.widget.RemoteViews: java.lang.String getPackage()>
<com.android.internal.widget.PointerLocationView: boolean onGenericMotionEvent(android.view.MotionEvent)>
<android.widget.TextView: void setTypeface(android.graphics.Typeface)>
<android.view.ScaleGestureDetector: void setQuickScaleEnabled(boolean)>
<android.content.ContextWrapper: java.io.FileOutputStream openFileOutput(java.lang.String,int)>
<android.net.INetworkStatsService: void advisePersistThreshold(long)>
<android.speech.srec.MicrophoneInputStream: void close()>
<android.widget.TextView: int getTotalPaddingRight()>
<com.android.internal.backup.IBackupTransport: android.app.backup.RestoreDescription nextRestorePackage()>
<android.location.IGpsStatusListener: void onNmeaReceived(long,java.lang.String)>
<android.os.StrictMode: boolean vmRegistrationLeaksEnabled()>
<android.widget.TextView: void drawableHotspotChanged(float,float)>
<android.webkit.CacheManager.CacheResult: java.lang.String getETag()>
<android.app.Dialog: void onDetachedFromWindow()>
<android.webkit.ClientCertRequest: int getPort()>
<android.widget.PopupWindow: void setFocusable(boolean)>
<android.content.res.TypedArray: int getChangingConfigurations()>
<android.view.WindowInfo: android.view.WindowInfo obtain()>
<com.android.internal.widget.LockPatternUtils: int getKeyguardStoredPasswordQuality(int)>
<android.opengl.GLES30: void glTexSubImage3D(int,int,int,int,int,int,int,int,int,int,int)>
<android.app.backup.BackupHelper: void performBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>
<android.print.PageRange: void writeToParcel(android.os.Parcel,int)>
<android.widget.ExpandableListView.OnGroupClickListener: boolean onGroupClick(android.widget.ExpandableListView,android.view.View,int,long)>
<android.widget.SlidingDrawer: boolean isMoving()>
<android.widget.MultiAutoCompleteTextView: void <init>(android.content.Context)>
<android.widget.Filter: void filter(java.lang.CharSequence)>
<com.android.internal.widget.AbsActionBarView.VisibilityAnimListener: com.android.internal.widget.AbsActionBarView.VisibilityAnimListener withFinalVisibility(int)>
<android.app.Dialog: void onWindowFocusChanged(boolean)>
<android.net.WifiKey: int hashCode()>
<android.view.DragEvent: android.content.ClipData getClipData()>
<android.view.WindowManagerPolicy: android.view.View addStartingWindow(android.os.IBinder,java.lang.String,int,android.content.res.CompatibilityInfo,java.lang.CharSequence,int,int,int,int)>
<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageIOOO(int,int,java.lang.Object,java.lang.Object,java.lang.Object)>
<android.gesture.GestureOverlayView: void setGesture(android.gesture.Gesture)>
<android.view.ViewGroup: void removeDetachedView(android.view.View,boolean)>
<android.location.GpsMeasurement: void setState(short)>
<android.opengl.GLES11: boolean glIsTexture(int)>
<android.os.Debug: int getBinderReceivedTransactions()>
<android.os.Environment: java.io.File getMediaStorageDirectory()>
<android.text.style.SubscriptSpan: void updateMeasureState(android.text.TextPaint)>
<android.telephony.ServiceState: int getRilDataRadioTechnology()>
<android.filterpacks.videosrc.CameraSource: void <init>(java.lang.String)>
<android.widget.ImageButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.renderscript.Long2: long dotProduct(android.renderscript.Long2,android.renderscript.Long2)>
<android.bluetooth.BluetoothHeadsetClient: boolean rejectIncomingConnect(android.bluetooth.BluetoothDevice)>
<android.gesture.GestureLibrary: void removeGesture(java.lang.String,android.gesture.Gesture)>
<com.android.ims.ImsReasonInfo: int describeContents()>
<android.preference.ListPreference: void setSummary(java.lang.CharSequence)>
<com.android.internal.view.IInputConnectionWrapper: boolean isActive()>
<android.view.GraphicBuffer: int getHeight()>
<com.android.internal.util.StateMachine: void unhandledMessage(android.os.Message)>
<android.opengl.GLES10: void glLoadMatrixf(java.nio.FloatBuffer)>
<android.webkit.CookieSyncManager: android.webkit.CookieSyncManager getInstance()>
<android.webkit.WebView: void documentHasImages(android.os.Message)>
<android.content.SharedPreferences.Editor: android.content.SharedPreferences.Editor putInt(java.lang.String,int)>
<android.location.Location: float bearingTo(android.location.Location)>
<android.app.admin.DevicePolicyManager: void setActiveAdmin(android.content.ComponentName,boolean,int)>
<android.media.SubtitleTrack: void onTimedEvent(long)>
<android.view.accessibility.AccessibilityRecord: int getAddedCount()>
<android.database.DatabaseUtils.InsertHelper: long insert(android.content.ContentValues)>
<android.view.inputmethod.InputConnection: boolean requestCursorUpdates(int)>
<android.net.TrafficStats: void closeQuietly(android.net.INetworkStatsSession)>
<com.android.internal.content.NativeLibraryHelper: boolean hasRenderscriptBitcode(com.android.internal.content.NativeLibraryHelper.Handle)>
<android.app.Activity: android.app.FragmentManager getFragmentManager()>
<android.animation.LayoutTransition: long getStartDelay(int)>
<android.widget.CheckedTextView: void drawableHotspotChanged(float,float)>
<android.content.RestrictionEntry: void <init>(android.os.Parcel)>
<android.widget.AbsSeekBar: void setThumbOffset(int)>
<android.net.TrafficStats: void setThreadStatsTagBackup()>
<android.app.Notification.MediaStyle: void addExtras(android.os.Bundle)>
<com.android.internal.view.menu.BaseMenuPresenter: void bindItemView(com.android.internal.view.menu.MenuItemImpl,com.android.internal.view.menu.MenuView.ItemView)>
<android.filterfw.io.PatternScanner: void skip(java.util.regex.Pattern)>
<android.media.MediaDrm: void setPropertyByteArray(java.lang.String,byte[])>
<android.database.MatrixCursor.RowBuilder: android.database.MatrixCursor.RowBuilder add(java.lang.Object)>
<android.widget.AbsListView: boolean isTextFilterEnabled()>
<android.app.backup.BackupDataInput: int readEntityData(byte[],int,int)>
<android.content.pm.LauncherActivityInfo: android.graphics.drawable.Drawable getBadgedIcon(int)>
<android.view.animation.GridLayoutAnimationController: float getColumnDelay()>
<android.widget.AbsListView: int getTopPaddingOffset()>
<android.speech.tts.Voice: java.util.Locale getLocale()>
<android.os.ParcelFileDescriptor: int describeContents()>
<android.widget.TextView: void onDetachedFromWindowInternal()>
<android.filterfw.core.NativeFrame: java.lang.String toString()>
<android.filterfw.core.Frame: void setGenericObjectValue(java.lang.Object)>
<com.android.internal.app.AlertController: void setIcon(int)>
<android.net.http.X509TrustManagerExtensions: java.util.List checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String,java.lang.String)>
<android.filterpacks.imageproc.ImageStitcher: void setupPorts()>
<android.media.audiofx.EnvironmentalReverb: void setDensity(short)>
<android.text.style.UnderlineSpan: void <init>(android.os.Parcel)>
<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>
<android.security.IKeyChainService: void setGrant(int,java.lang.String,boolean)>
<android.os.Parcel: void readException(int,java.lang.String)>
<android.net.SSLSessionCache: void install(android.net.SSLSessionCache,javax.net.ssl.SSLContext)>
<android.media.IRemoteVolumeObserver: void dispatchRemoteVolumeUpdate(int,int)>
<android.os.Message: android.os.Handler getTarget()>
<android.alsa.AlsaCardsParser: int getNumCardRecords()>
<android.telephony.CellInfoGsm: int hashCode()>
<com.android.internal.os.BatteryStatsImpl.Uid.Proc: int countExcessivePowers()>
<android.os.INetworkManagementService: java.lang.String[] getDnsForwarders()>
<android.webkit.CookieManager: void removeSessionCookie()>
<android.hardware.hdmi.HdmiTvClient.InputChangeListener: void onChanged(android.hardware.hdmi.HdmiDeviceInfo)>
<android.net.wifi.p2p.WifiP2pDeviceList: boolean clear()>
<com.android.internal.util.ProcFileReader: long nextLong()>
<android.view.InputChannel: void dispose()>
<android.graphics.PathMeasure: void finalize()>
<android.content.Loader.ForceLoadContentObserver: boolean deliverSelfNotifications()>
<android.graphics.drawable.PictureDrawable: void setAlpha(int)>
<android.hardware.soundtrigger.SoundTrigger.KeyphraseRecognitionExtra: int describeContents()>
<android.text.style.TtsSpan.VerbatimBuilder: android.text.style.TtsSpan.VerbatimBuilder setVerbatim(java.lang.String)>
<android.widget.TabWidget: void setCurrentTab(int)>
<android.nfc.INfcCardEmulation: boolean isDefaultServiceForCategory(int,android.content.ComponentName,java.lang.String)>
<android.app.admin.DevicePolicyManager: long getMaximumTimeToLock(android.content.ComponentName)>
<android.os.storage.StorageVolume: int getStorageId()>
<android.net.wifi.WifiManager.MulticastLock: boolean isHeld()>
<android.widget.Editor.TextModifyOperation: void <init>(android.os.Parcel,java.lang.ClassLoader)>
<android.bluetooth.BluetoothAdapter: java.lang.String getName()>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getChild(int)>
<android.hardware.display.DisplayManager: void forgetWifiDisplay(java.lang.String)>
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)>
<com.android.internal.http.multipart.PartSource: long getLength()>
<android.app.backup.IBackupManager: java.lang.String selectBackupTransport(java.lang.String)>
<android.opengl.GLES11Ext: void glDrawTexivOES(int[],int)>
<android.view.inputmethod.InputConnection: boolean setComposingRegion(int,int)>
<android.database.DatabaseUtils: android.os.ParcelFileDescriptor blobFileDescriptorForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>
<android.webkit.WebViewProvider.ViewDelegate: boolean onGenericMotionEvent(android.view.MotionEvent)>
<com.android.internal.os.BatteryStatsImpl.BatteryCallback: void batteryPowerChanged(boolean)>
<android.renderscript.Float3: android.renderscript.Float3 sub(android.renderscript.Float3,float)>
<android.widget.GridLayout: android.widget.GridLayout.Spec spec(int,android.widget.GridLayout.Alignment,float)>
<android.media.session.MediaController: java.lang.String getPackageName()>
<android.renderscript.Int3: int length()>
<android.view.accessibility.AccessibilityWindowInfo: void writeToParcel(android.os.Parcel,int)>
<android.telecom.Connection.Listener: void onVideoProviderChanged(android.telecom.Connection,android.telecom.Connection.VideoProvider)>
<android.security.Credentials: void install(android.content.Context)>
<android.renderscript.Script: void setVar(int,double)>
<android.widget.TableLayout: void setColumnStretchable(int,boolean)>
<android.media.MediaRouterClientState: java.lang.String toString()>
<android.security.IKeyChainService: java.lang.String requestPrivateKey(java.lang.String)>
<android.widget.Gallery: void <init>(android.content.Context,android.util.AttributeSet)>
<android.inputmethodservice.KeyboardView: void onClick(android.view.View)>
<com.android.internal.os.BatteryStatsImpl.SamplingTimer: void addCurrentReportedTotalTime(long)>
<android.animation.Animator: void reverse()>
<android.net.wifi.p2p.WifiP2pDevice: boolean isDeviceLimit()>
<android.location.FusedBatchOptions: void setFlag(int)>
<android.content.pm.ManifestDigest: int hashCode()>
<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>
<android.filterfw.core.FilterGraph: void flushFrames()>
<android.app.MediaRouteButton: void showDialog()>
<android.app.VoiceInteractor.CompleteVoiceRequest: void onCompleteResult(android.os.Bundle)>
<android.app.ListFragment: void setSelection(int)>
<android.hardware.camera2.impl.CameraMetadataNative: int describeContents()>
<android.content.Context: void enforcePermission(java.lang.String,int,int,java.lang.String)>
<android.os.BatteryStats: long computeBatteryScreenOffRealtime(long,int)>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype build()>
<com.android.internal.util.ArrayUtils: boolean contains(android.util.ArraySet,java.lang.Object)>
<android.graphics.Matrix: boolean preRotate(float,float,float)>
<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig copy()>
<android.widget.ProgressBar: void <init>(android.content.Context)>
<android.media.AudioManager: int getVibrateSetting(int)>
<android.service.trust.TrustAgentService: void grantTrust(java.lang.CharSequence,long,boolean)>
<android.view.TextureView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.media.AudioRecord: int getAudioSource()>
<com.android.internal.policy.IFaceLockInterface: void stopUi()>
<android.view.WindowManagerPolicy: void dump(java.lang.String,java.io.PrintWriter,java.lang.String[])>
<android.view.accessibility.AccessibilityManager: void <init>(android.content.Context,android.view.accessibility.IAccessibilityManager,int)>
<android.media.IAudioService: void notifyVolumeControllerVisible(android.media.IVolumeController,boolean)>
<android.view.ViewRootImpl: boolean performHapticFeedback(int,boolean)>
<com.android.internal.view.menu.MenuBuilder: java.util.ArrayList getVisibleItems()>
<android.media.AudioManager: void setVibrateSetting(int,int)>
<android.view.RenderNode: boolean offsetTopAndBottom(int)>
<android.gesture.GestureOverlayView: void <init>(android.content.Context)>
<android.view.accessibility.AccessibilityEvent: java.lang.CharSequence getPackageName()>
<android.graphics.PointF: void <init>(android.graphics.Point)>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getAllButWhitespaceLegal()>
<android.graphics.drawable.TransitionDrawable: void <init>(android.graphics.drawable.Drawable[])>
<com.android.internal.view.IInputContext: void beginBatchEdit()>
<android.media.MediaScannerConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>
<android.app.Fragment: boolean isResumed()>
<android.widget.RelativeLayout: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.hardware.Camera.Parameters: boolean isVideoSnapshotSupported()>
<android.mtp.MtpDatabase: void setServer(android.mtp.MtpServer)>
<android.database.sqlite.SQLiteCursor: int getCount()>
<android.filterpacks.imageproc.CropFilter: void <init>(java.lang.String)>
<android.net.wifi.WifiConfiguration: void setProxy(android.net.IpConfiguration.ProxySettings,android.net.ProxyInfo)>
<android.bluetooth.BluetoothGattService: java.util.UUID getUuid()>
<android.webkit.WebView.PrivateAccess: int getHorizontalScrollbarHeight()>
<android.hardware.hdmi.IHdmiControlService: void startTimerRecording(int,int,byte[])>
<android.net.wifi.WifiConfiguration: void setProxySettings(android.net.IpConfiguration.ProxySettings)>
<android.telecom.Connection: android.telecom.ConnectionService getConnectionService()>
<android.content.ContentResolver: void takePersistableUriPermission(android.net.Uri,int)>
<com.google.android.gles_jni.GLImpl: void glTexEnviv(int,int,int[],int)>
<android.hardware.camera2.utils.ListUtils: boolean listElementsEqualTo(java.util.List,java.lang.Object)>
<android.widget.PopupMenu: void <init>(android.content.Context,android.view.View,int)>
<android.net.WebAddress: java.lang.String toString()>
<android.os.Parcel: void appendFrom(android.os.Parcel,int,int)>
<android.content.Loader: java.lang.String dataToString(java.lang.Object)>
<android.opengl.EGL14: boolean eglReleaseTexImage(android.opengl.EGLDisplay,android.opengl.EGLSurface,int)>
<android.telephony.PhoneStateListener: void onCellInfoChanged(java.util.List)>
<android.view.accessibility.IAccessibilityManagerClient: void setState(int)>
<android.app.Dialog: android.app.ActionBar getActionBar()>
<android.content.ContentProvider: android.net.Uri getUriWithoutUserId(android.net.Uri)>
<android.provider.ContactsContract.RawContacts: android.net.Uri getContactLookupUri(android.content.ContentResolver,android.net.Uri)>
<android.media.session.MediaSession: void setExtras(android.os.Bundle)>
<android.app.NativeActivity: void onDestroy()>
<android.opengl.EGL14: android.opengl.EGLContext eglCreateContext(android.opengl.EGLDisplay,android.opengl.EGLConfig,android.opengl.EGLContext,int[],int)>
<android.opengl.GLES30: void glGetInteger64v(int,long[],int)>
<android.service.voice.VoiceInteractionSession: void <init>(android.content.Context)>
<android.filterfw.core.ShaderProgram: void setVertexCount(int)>
<android.view.Menu: boolean performShortcut(int,android.view.KeyEvent,int)>
<android.graphics.drawable.ClipDrawable: void setAlpha(int)>
<com.android.ims.internal.IImsCallSessionListener: void callSessionTerminated(com.android.ims.internal.IImsCallSession,com.android.ims.ImsReasonInfo)>
<android.hardware.hdmi.HdmiTimerRecordSources: android.hardware.hdmi.HdmiTimerRecordSources.TimerInfo timerInfoOf(int,int,android.hardware.hdmi.HdmiTimerRecordSources.Time,android.hardware.hdmi.HdmiTimerRecordSources.Duration,int)>
<android.telecom.CameraCapabilities: void <init>(boolean,float,int,int)>
<android.preference.VolumePreference: void onBindDialogView(android.view.View)>
<android.app.backup.BackupAgentHelper: void addHelper(java.lang.String,android.app.backup.BackupHelper)>
<android.view.MenuInflater: void <init>(android.content.Context,java.lang.Object)>
<android.webkit.WebView: void computeScroll()>
<android.print.PrintAttributes.MediaSize: void <init>(java.lang.String,java.lang.String,int,int,int)>
<android.hardware.camera2.utils.TypeReference: boolean containsTypeVariable(java.lang.reflect.Type)>
<android.location.Location: void setBearing(float)>
<android.telephony.PreciseCallState: int hashCode()>
<android.graphics.ColorMatrix: void reset()>
<android.widget.HorizontalScrollView: void computeScroll()>
<com.android.internal.view.StandaloneActionMode: void <init>(android.content.Context,com.android.internal.widget.ActionBarContextView,android.view.ActionMode.Callback,boolean)>
<com.android.internal.os.BatteryStatsImpl: void noteWakeupReasonLocked(java.lang.String)>
<android.app.ApplicationThreadProxy: void scheduleActivityConfigurationChanged(android.os.IBinder)>
<com.google.android.gles_jni.GLImpl: void glTexParameterxv(int,int,int[],int)>
<android.net.NetworkFactory: void addNetworkRequest(android.net.NetworkRequest,int)>
<android.graphics.Paint: int getColor()>
<android.app.DownloadManager: android.os.ParcelFileDescriptor openDownloadedFile(long)>
<android.media.MediaRouterClientState.RouteInfo: int describeContents()>
<android.graphics.Bitmap: boolean hasAlpha()>
<android.hardware.camera2.legacy.LegacyRequest: void setParameters(android.hardware.Camera.Parameters)>
<android.util.TimeUtils: java.lang.String getTimeZoneDatabaseVersion()>
<android.widget.CalendarView.CalendarViewDelegate: int getFocusedMonthDateColor()>
<android.widget.ProgressBar: void setIndeterminateDrawable(android.graphics.drawable.Drawable)>
<android.content.res.Configuration: void readFromParcel(android.os.Parcel)>
<android.os.Environment: java.io.File getEmulatedStorageObbSource()>
<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.view.accessibility.AccessibilityManager: boolean isHighTextContrastEnabled()>
<android.graphics.Color: int getHtmlColor(java.lang.String)>
<android.content.CursorLoader: android.net.Uri getUri()>
<android.widget.TextView: int getTypefaceStyle()>
<android.hardware.hdmi.HdmiTvClient: void setHdmiMhlVendorCommandListener(android.hardware.hdmi.HdmiTvClient.HdmiMhlVendorCommandListener)>
<android.app.NativeActivity: void onResume()>
<android.renderscript.Script: void setVar(int,android.renderscript.BaseObj)>
<android.bluetooth.le.ScanFilter: byte[] getServiceDataMask()>
<android.telephony.IccOpenLogicalChannelResponse: void writeToParcel(android.os.Parcel,int)>
<android.net.ConnectivityManager: int untether(java.lang.String)>
<android.transition.ArcMotion: float getMinimumVerticalAngle()>
<android.widget.TextView: boolean isAccessibilitySelectionExtendable()>
<android.app.Activity: boolean onPrepareOptionsMenu(android.view.Menu)>
<android.text.format.Time: void set(int,int,int,int,int,int)>
<android.content.pm.PackageInstaller.Session: void setStagingProgress(float)>
<com.android.internal.widget.WeightedLinearLayout: void onMeasure(int,int)>
<android.media.IAudioService: int getMasterMaxVolume()>
<android.widget.TextView: int getTextColor(android.content.Context,android.content.res.TypedArray,int)>
<android.app.Notification.Builder: android.app.Notification.Builder setVisibility(int)>
<android.widget.ListView: void setOverscrollHeader(android.graphics.drawable.Drawable)>
<android.os.INetworkManagementService: void setDnsServersForNetwork(int,java.lang.String[],java.lang.String)>
<android.webkit.WebSettings: void setAllowContentAccess(boolean)>
<android.graphics.drawable.shapes.RectShape: void draw(android.graphics.Canvas,android.graphics.Paint)>
<android.graphics.PathMeasure: void <init>(android.graphics.Path,boolean)>
<android.graphics.Rect: int width()>
<android.os.IPowerManager: void setAttentionLight(boolean,int)>
<android.net.wifi.WifiManager: int getAggressiveHandover()>
<android.media.AudioTrack: int getChannelConfiguration()>
<android.hardware.display.DisplayManagerInternal.DisplayPowerCallbacks: void onStateChanged()>
<android.media.projection.MediaProjectionInfo: void writeToParcel(android.os.Parcel,int)>
<android.app.IActivityManager: android.content.res.Configuration getConfiguration()>
<android.widget.Editor.TextModifyOperation: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.app.ProcessStats.ProcessState: void reportCachedKill(android.util.ArrayMap,long)>
<android.filterfw.core.InputPort: boolean isConnected()>
<android.text.method.BaseKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>
<com.android.internal.os.BatteryStatsImpl: void finishIteratingHistoryLocked()>
<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothGatt connectGatt(android.content.Context,boolean,android.bluetooth.BluetoothGattCallback)>
<com.google.android.gles_jni.GLImpl: void glTexEnvxv(int,int,int[],int)>
<com.android.internal.util.StateMachine: void logd(java.lang.String)>
<android.app.admin.IDevicePolicyManager: boolean isApplicationHidden(android.content.ComponentName,java.lang.String)>
<android.content.ContextWrapper: void clearWallpaper()>
<android.widget.SimpleAdapter: android.widget.Filter getFilter()>
<android.hardware.camera2.utils.HashCodeHelpers: int hashCode(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
<com.android.internal.os.BatteryStatsImpl.Counter: void writeToParcel(android.os.Parcel)>
<android.opengl.GLES11: void glGetTexEnviv(int,int,int[],int)>
<android.widget.TextView: int getMinHeight()>
<android.media.AudioPort: android.media.AudioPortConfig activeConfig()>
<android.location.Address: android.os.Bundle getExtras()>
<android.location.LocationRequest: long getExpireAt()>
<android.content.ContentResolver: android.content.IContentProvider acquireProvider(android.net.Uri)>
<com.android.internal.view.menu.ActionMenu: void setGroupVisible(int,boolean)>
<android.widget.Filter: void setDelayer(android.widget.Filter.Delayer)>
<android.graphics.drawable.LayerDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>
<android.content.SyncRequest.Builder: android.content.SyncRequest.Builder setNoRetry(boolean)>
<android.opengl.GLES10: void glLightfv(int,int,java.nio.FloatBuffer)>
<android.widget.ViewAnimator: void removeViewInLayout(android.view.View)>
<android.telecom.AudioState: java.lang.String audioRouteToString(int)>
<android.database.Cursor: void deactivate()>
<com.android.internal.app.ToolbarActionBar: void setDisplayHomeAsUpEnabled(boolean)>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder setSubtypeLocale(java.lang.String)>
<android.filterfw.core.FieldPort: void transfer(android.filterfw.core.FilterContext)>
<android.net.LocalSocket: boolean isOutputShutdown()>
<com.android.internal.widget.SwipeDismissLayout: boolean onTouchEvent(android.view.MotionEvent)>
<android.media.ExifInterface: long[] getThumbnailRange()>
<android.hardware.usb.UsbConfiguration: boolean isSelfPowered()>
<com.android.internal.app.WindowDecorActionBar: void setDisplayUseLogoEnabled(boolean)>
<android.media.SubtitleTrack: void clearActiveCues()>
<android.content.Intent: java.lang.String getPackage()>
<android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder,boolean)>
<android.widget.AbsListView: boolean onRemoteAdapterConnected()>
<android.net.NetworkTemplate: java.lang.String getNetworkId()>
<com.google.android.gles_jni.GLImpl: void glLightModelx(int,int)>
<android.media.tv.TvStreamConfig: java.lang.String toString()>
<android.media.AudioRoutesInfo: int describeContents()>
<android.widget.CompoundButton: boolean isChecked()>
<android.app.ActivityManagerProxy: boolean unbindService(android.app.IServiceConnection)>
<android.util.Xml: android.util.Xml.Encoding findEncodingByName(java.lang.String)>
<android.os.Environment.UserEnvironment: java.io.File[] buildExternalStorageAppObbDirsForVold(java.lang.String)>
<android.os.FileUtils: java.lang.String[] rewriteAfterRename(java.io.File,java.io.File,java.lang.String[])>
<android.os.SELinux: boolean checkSELinuxAccess(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.app.SearchManager: void triggerSearch(java.lang.String,android.content.ComponentName,android.os.Bundle)>
<android.view.ViewGroup: void setAnimationCacheEnabled(boolean)>
<android.hardware.camera2.utils.LongParcelable: void writeToParcel(android.os.Parcel,int)>
<android.app.Fragment: void setTargetFragment(android.app.Fragment,int)>
<android.print.PrintAttributes.Margins: void <init>(int,int,int,int)>
<com.android.internal.telecom.IConnectionService: void removeConnectionServiceAdapter(com.android.internal.telecom.IConnectionServiceAdapter)>
<android.widget.RadialTimePickerView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.net.NetworkInfo: void writeToParcel(android.os.Parcel,int)>
<android.preference.PreferenceActivity.Header: java.lang.CharSequence getBreadCrumbShortTitle(android.content.res.Resources)>
<android.filterpacks.imageproc.ImageCombineFilter: void process(android.filterfw.core.FilterContext)>
<android.hardware.camera2.params.StreamConfiguration: android.util.Size getSize()>
<android.media.browse.MediaBrowser.ConnectionCallback: void onConnectionSuspended()>
<android.net.wifi.WifiManager: android.net.wifi.WifiConfiguration getWifiApConfiguration()>
<android.graphics.Paint: float getFontMetrics(android.graphics.Paint.FontMetrics)>
<android.text.format.Time: int getWeekNumber()>
<com.android.internal.os.BatteryStatsImpl.Uid: void updateRealProcessStateLocked(java.lang.String,int,long)>
<android.util.LongArray: int indexOf(long)>
<android.view.ViewTreeObserver: void addOnPreDrawListener(android.view.ViewTreeObserver.OnPreDrawListener)>
<android.app.ActivityView: void <init>(android.content.Context)>
<com.android.internal.widget.LockPatternUtilsCache: boolean havePattern(int)>
<android.content.pm.IPackageInstaller: void unregisterCallback(android.content.pm.IPackageInstallerCallback)>
<com.android.internal.widget.LockPatternUtilsCache: long getLong(java.lang.String,long,int)>
<android.accounts.AccountManagerResponse: void <init>(android.accounts.IAccountManagerResponse)>
<android.provider.ContactsContract.CommonDataKinds.SipAddress: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>
<android.util.DisplayMetrics: java.lang.String toString()>
<android.app.AppOpsManager: java.lang.String opToPermission(int)>
<android.view.TextureView: boolean isOpaque()>
<android.os.Parcel: java.util.ArrayList createBinderArrayList()>
<android.os.ParcelFileDescriptor: void close()>
<android.view.View: int getPaddingBottom()>
<android.hardware.Camera: void finalize()>
<android.app.ApplicationThreadProxy: void scheduleCreateBackupAgent(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,int)>
<android.hardware.camera2.utils.Decorator.DecoratorListener: void onBeforeInvocation(java.lang.reflect.Method,java.lang.Object[])>
<android.content.ClipData.Item: void <init>(android.content.Intent)>
<android.renderscript.Int3: void mul(android.renderscript.Int3)>
<android.bluetooth.IBluetoothHeadsetClient: boolean setPriority(android.bluetooth.BluetoothDevice,int)>
<android.view.ViewGroup: android.view.View focusSearch(android.view.View,int)>
<android.view.SurfaceControl: android.view.SurfaceControl.PhysicalDisplayInfo[] getDisplayConfigs(android.os.IBinder)>
<com.android.internal.widget.LockPatternUtils: int getRequestedPasswordMinimumNumeric()>
<android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec.Builder setAlgorithmParameterSpec(java.security.spec.AlgorithmParameterSpec)>
<com.android.internal.view.IInputMethodManager: boolean setCurrentInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)>
<android.app.ActivityManager: android.content.pm.ConfigurationInfo getDeviceConfigurationInfo()>
<android.text.DynamicLayout: int getParagraphDirection(int)>
<com.android.internal.textservice.ISpellCheckerSession: void onCancel()>
<android.graphics.SurfaceTexture: void detachFromGLContext()>
<android.os.Process: boolean setSwappiness(int,boolean)>
<android.mtp.MtpDevice: int[] getStorageIds()>
<android.database.IBulkCursor: android.database.CursorWindow getWindow(int)>
<android.os.PatternMatcher: int describeContents()>
<android.hardware.camera2.dispatch.DuckTypingDispatcher: java.lang.Object dispatch(java.lang.reflect.Method,java.lang.Object[])>
<android.hardware.camera2.impl.CaptureResultExtras: int getPartialResultCount()>
<android.widget.Gallery: android.view.ContextMenu.ContextMenuInfo getContextMenuInfo()>
<android.app.admin.DevicePolicyManager: void setPasswordHistoryLength(android.content.ComponentName,int)>
<android.util.SparseArray: int size()>
<com.android.internal.app.WindowDecorActionBar: android.view.View getCustomView()>
<android.database.CursorIndexOutOfBoundsException: void <init>(int,int)>
<android.graphics.PointF: boolean equals(java.lang.Object)>
<android.filterfw.core.CachedFrameManager: void tearDown()>
<android.net.wifi.p2p.WifiP2pDeviceList: boolean remove(android.net.wifi.p2p.WifiP2pDeviceList)>
<android.net.nsd.NsdServiceInfo: byte[] getTxtRecord()>
<android.widget.LinearLayout: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.filterfw.GraphEnvironment: android.filterfw.core.GraphRunner getRunner(int,int)>
<android.content.SyncAdapterType: boolean isUserVisible()>
<com.android.internal.app.ProcessStats: int describeContents()>
<android.media.AudioTrack: int getPlaybackRate()>
<android.graphics.drawable.PictureDrawable: int getOpacity()>
<android.graphics.Paint: int getTextWidths(java.lang.String,int,int,float[])>
<android.view.animation.AnticipateOvershootInterpolator: float getInterpolation(float)>
<android.app.IActivityController: boolean appCrashed(java.lang.String,int,java.lang.String,java.lang.String,long,java.lang.String)>
<android.app.IApplicationThread: void scheduleBindService(android.os.IBinder,android.content.Intent,boolean,int)>
<android.app.Fragment: android.view.View getView()>
<android.database.Cursor: boolean isNull(int)>
<com.android.internal.telephony.GsmAlphabet: char gsmExtendedToChar(int)>
<android.os.BinderProxy: void finalize()>
<android.preference.Preference: void setDefaultValue(java.lang.Object)>
<android.os.StrictMode: void incrementExpectedActivityCount(java.lang.Class)>
<android.hardware.usb.UsbConfiguration: int getInterfaceCount()>
<android.widget.QuickContactBadge: void drawableStateChanged()>
<android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String,int,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<android.ddm.DdmHandleHeap: void connected()>
<android.opengl.GLU: int gluUnProject(float,float,float,float[],int,float[],int,int[],int,float[],int)>
<com.android.internal.os.BatteryStatsHelper: long getChargeTimeRemaining()>
<android.location.GpsClock: double getBiasInNs()>
<android.os.Debug: int getGlobalAllocCount()>
<android.content.pm.IPackageInstaller: void registerCallback(android.content.pm.IPackageInstallerCallback,int)>
<com.android.internal.os.BatteryStatsHelper: com.android.internal.os.PowerProfile getPowerProfile()>
<android.hardware.Sensor: int getFifoReservedEventCount()>
<android.graphics.LargeBitmap: int getWidth()>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture updateCredentials(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.opengl.GLES11Ext: void glTranslatexOES(int,int,int)>
<android.view.ViewDebug: long getViewRootImplCount()>
<android.net.wifi.WifiChannel: void writeToParcel(android.os.Parcel,int)>
<android.renderscript.ScriptIntrinsic3DLUT: void forEach(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>
<android.location.Address: int describeContents()>
<android.database.sqlite.SQLiteDatabase: void markTableSyncable(java.lang.String,java.lang.String,java.lang.String)>
<android.content.pm.PackageManager: boolean hasSystemFeature(java.lang.String)>
<android.widget.AbsListView: float getBottomFadingEdgeStrength()>
<android.content.BroadcastReceiver: int getSendingUserId()>
<android.filterfw.core.Filter: void parametersUpdated(java.util.Set)>
<android.hardware.SensorManager: float getInclination(float[])>
<android.telephony.SubscriptionManager: android.telephony.SubInfoRecord getSubInfoForSubscriber(long)>
<android.util.TimeUtils: java.util.TimeZone getTimeZone(int,boolean,long,java.lang.String)>
<com.android.internal.util.MemInfoReader: long getBuffersSizeKb()>
<android.widget.ZoomControls: void show()>
<android.printservice.IPrintService: void stopPrinterDiscovery()>
<android.os.Parcel: void recycle()>
<android.bluetooth.BluetoothGattServer: java.util.List getServices()>
<android.text.method.BaseMovementMethod: int getMovementMetaState(android.text.Spannable,android.view.KeyEvent)>
<android.view.ViewGroup: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>
<android.hardware.Camera: void stopSmoothZoom()>
<android.content.UndoManager: android.content.UndoOperation getLastOperation(int)>
<android.widget.DatePicker.DatePickerDelegate: java.util.Calendar getMinDate()>
<android.widget.SimpleCursorAdapter: void setCursorToStringConverter(android.widget.SimpleCursorAdapter.CursorToStringConverter)>
<android.graphics.LightingColorFilter: void setColorMultiply(int)>
<android.media.MediaFormat: java.lang.String getString(java.lang.String)>
<android.view.inputmethod.InputConnectionWrapper: boolean commitText(java.lang.CharSequence,int)>
<android.graphics.Region: boolean quickContains(android.graphics.Rect)>
<android.animation.LayoutTransition: void disableTransitionType(int)>
<android.content.ContentProviderOperation: java.lang.String[] resolveSelectionArgsBackReferences(android.content.ContentProviderResult[],int)>
<android.net.INetworkStatsSession: android.net.NetworkStatsHistory getHistoryForNetwork(android.net.NetworkTemplate,int)>
<android.renderscript.RenderScriptGL: int getHeight()>
<com.android.internal.widget.ActionBarContainer: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<android.view.Window: android.transition.Transition getSharedElementReturnTransition()>
<android.widget.ListPopupWindow: boolean isDropDownAlwaysVisible()>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getApplicationLogo(java.lang.String)>
<android.view.ScaleGestureDetector.SimpleOnScaleGestureListener: boolean onScaleBegin(android.view.ScaleGestureDetector)>
<android.location.IGpsGeofenceHardware: boolean removeHardwareGeofence(int)>
<android.net.wifi.WifiScanner.WifiChangeSettings: int describeContents()>
<android.telecom.ConnectionService: void onRemoteConferenceAdded(android.telecom.RemoteConference)>
<android.app.admin.IDevicePolicyManager: void setPasswordMinimumLowerCase(android.content.ComponentName,int,int)>
<android.speech.srec.Recognizer: java.lang.String getResult(int,java.lang.String)>
<android.view.VelocityTracker: float getXVelocity()>
<android.graphics.PointF: boolean equals(float,float)>
<android.app.ActivityManager: void setPackageScreenCompatMode(java.lang.String,int)>
<android.net.NetworkIdentity: int hashCode()>
<android.filterpacks.imageproc.DrawOverlayFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<android.telephony.CellIdentityGsm: int getCid()>
<android.app.Dialog: boolean onKeyDown(int,android.view.KeyEvent)>
<android.hardware.display.DisplayManager: void unregisterDisplayListener(android.hardware.display.DisplayManager.DisplayListener)>
<android.view.View: boolean awakenScrollBars(int,boolean)>
<android.net.wifi.WifiInfo: int getFrequency()>
<android.database.sqlite.SQLiteGlobal: java.lang.String getDefaultJournalMode()>
<android.nfc.tech.NdefFormatable: void formatReadOnly(android.nfc.NdefMessage)>
<android.location.Location: boolean hasSpeed()>
<android.view.ViewGroup: void removeViewsInLayout(int,int)>
<android.hardware.display.IDisplayManager: void renameWifiDisplay(java.lang.String,java.lang.String)>
<android.os.Parcel: void readLongArray(long[])>
<com.android.internal.view.StandaloneActionMode: boolean onSubMenuSelected(com.android.internal.view.menu.SubMenuBuilder)>
<android.service.notification.Condition: void <init>(android.net.Uri,java.lang.String,java.lang.String,java.lang.String,int,int,int)>
<android.media.projection.IMediaProjectionWatcherCallback: void onStart(android.media.projection.MediaProjectionInfo)>
<android.graphics.PorterDuffColorFilter: int getColor()>
<android.text.BoringLayout: void draw(android.graphics.Canvas,android.graphics.Path,android.graphics.Paint,int)>
<android.media.MediaPlayer: void setAuxEffectSendLevel(float)>
<com.android.internal.app.ToolbarActionBar: int getNavigationMode()>
<android.view.animation.LayoutAnimationController: android.view.animation.Animation getAnimationForView(android.view.View)>
<android.content.pm.MacAuthenticatedInputStream: int read(byte[],int,int)>
<android.net.wifi.IWifiManager: boolean acquireWifiLock(android.os.IBinder,int,java.lang.String,android.os.WorkSource)>
<android.media.MediaCodecInfo.EncoderCapabilities: void setDefaultFormat(android.media.MediaFormat)>
<android.hardware.soundtrigger.SoundTrigger.Keyphrase: void writeToParcel(android.os.Parcel,int)>
<android.graphics.drawable.NinePatchDrawable: boolean canApplyTheme()>
<android.media.AudioManager.OnAudioPortUpdateListener: void onAudioPatchListUpdate(android.media.AudioPatch[])>
<android.widget.ZoomButtonsController: void setVisible(boolean)>
<android.printservice.PrintService: android.printservice.PrinterDiscoverySession onCreatePrinterDiscoverySession()>
<com.android.internal.widget.ActionBarView: void onMeasure(int,int)>
<com.android.ims.ImsStreamMediaProfile: void copyFrom(com.android.ims.ImsStreamMediaProfile)>
<android.content.pm.ILauncherApps: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,android.os.UserHandle)>
<android.net.http.Headers: java.lang.String getContentEncoding()>
<android.content.ContentQueryMap: void close()>
<android.content.ContentValues: java.lang.Byte getAsByte(java.lang.String)>
<android.widget.TimePicker: void setCurrentMinute(java.lang.Integer)>
<com.google.android.util.SmileyResources: int getSmileyRes(java.lang.String)>
<com.android.internal.os.RuntimeInit: void wrapperInit(int,java.lang.String[])>
<android.os.Debug.MemoryInfo: int getOtherPrivateDirty(int)>
<android.view.ViewRootImpl: void childHasTransientStateChanged(android.view.View,boolean)>
<com.android.internal.view.IInputMethodSession: void updateCursorAnchorInfo(android.view.inputmethod.CursorAnchorInfo)>
<android.widget.BaseExpandableListAdapter: void notifyDataSetInvalidated()>
<android.view.inputmethod.InputMethodManager: void checkFocus()>
<android.media.AudioManager: void loadSoundEffects()>
<android.media.session.MediaController.TransportControls: void sendCustomAction(android.media.session.PlaybackState.CustomAction,android.os.Bundle)>
<android.app.Notification.Builder: android.app.Notification.Builder setColor(int)>
<android.widget.RemoteViews: void setPendingIntentTemplate(int,android.app.PendingIntent)>
<android.opengl.GLES30: boolean glIsVertexArray(int)>
<android.app.backup.IRestoreSession: void endRestoreSession()>
<android.content.Context: void grantUriPermission(java.lang.String,android.net.Uri,int)>
<android.hardware.usb.UsbEndpoint: void writeToParcel(android.os.Parcel,int)>
<android.content.ClipData: android.content.ClipData newIntent(java.lang.CharSequence,android.content.Intent)>
<android.view.Window: void setType(int)>
<android.content.CursorLoader: void setUri(android.net.Uri)>
<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessStats.PackageState getPackageStateLocked(java.lang.String,int,int)>
<android.bluetooth.IBluetoothHealth: java.util.List getConnectedHealthDevices()>
<android.graphics.YuvImage: boolean compressToJpeg(android.graphics.Rect,int,java.io.OutputStream)>
<android.renderscript.Type: boolean hasMipmaps()>
<android.media.AudioFormat: int getChannelMask()>
<android.widget.AbsListView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.google.android.util.AbstractMessageParser.Part: java.lang.String getType(boolean)>
<android.app.Notification.Builder: android.app.Notification.Builder setLocalOnly(boolean)>
<android.telephony.TelephonyManager: void answerRingingCall()>
<android.provider.DocumentsProvider: android.content.res.AssetFileDescriptor openTypedAssetFile(android.net.Uri,java.lang.String,android.os.Bundle,android.os.CancellationSignal)>
<android.widget.ListView: void onFocusChanged(boolean,int,android.graphics.Rect)>
<android.util.DayOfMonthCursor: int getSelectedColumn()>
<android.widget.ScrollView: void measureChildWithMargins(android.view.View,int,int,int,int)>
<android.view.View: android.view.TouchDelegate getTouchDelegate()>
<android.telecom.DisconnectCause: void <init>(int,java.lang.CharSequence,java.lang.CharSequence,java.lang.String)>
<android.location.LocationManager: void requestLocationUpdates(android.location.LocationRequest,android.app.PendingIntent)>
<com.google.android.util.AbstractMessageParser.YouTubeVideo: boolean isHtml()>
<android.content.ISyncAdapter: void startSync(android.content.ISyncContext,java.lang.String,android.accounts.Account,android.os.Bundle)>
<android.view.View: void onAnimationEnd()>
<android.security.AndroidKeyStore: void engineSetEntry(java.lang.String,java.security.KeyStore.Entry,java.security.KeyStore.ProtectionParameter)>
<android.view.MotionEvent: boolean isWithinBoundsNoHistory(float,float,float,float)>
<android.nfc.INfcAdapterExtras: int getCardEmulationRoute(java.lang.String)>
<android.app.IActivityManager: void activityResumed(android.os.IBinder)>
<android.view.ViewGroup: void addFocusables(java.util.ArrayList,int,int)>
<android.webkit.WebView: android.view.View getZoomControls()>
<android.filterfw.core.FrameFormat: boolean hasMetaKey(java.lang.String)>
<android.opengl.GLES20: void glGetShaderiv(int,int,int[],int)>
<com.android.server.NetworkManagementSocketTagger: void setKernelCounterSet(int,int)>
<android.webkit.FindActionModeCallback.NoAction: boolean onCreateActionMode(android.view.ActionMode,android.view.Menu)>
<android.renderscript.RenderScriptGL.SurfaceConfig: void setAlpha(int,int)>
<com.android.internal.database.SortCursor: long getLong(int)>
<android.view.inputmethod.CursorAnchorInfo: float getInsertionMarkerHorizontal()>
<android.renderscript.Int3: int get(int)>
<android.filterfw.geometry.Point: android.filterfw.geometry.Point plus(android.filterfw.geometry.Point)>
<android.os.FileObserver: void startWatching()>
<com.android.internal.widget.BackgroundFallback: void draw(android.view.ViewGroup,android.graphics.Canvas,android.view.View)>
<android.renderscript.FieldPacker: void addU64(long)>
<android.hardware.input.TouchCalibration: boolean equals(java.lang.Object)>
<com.android.internal.view.menu.IconMenuView: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.content.ClipData: int describeContents()>
<android.widget.RemoteViews: void setOnClickFillInIntent(int,android.content.Intent)>
<android.provider.Settings.NameValueTable: android.net.Uri getUriFor(android.net.Uri,java.lang.String)>
<android.nfc.INfcTag: boolean isNdef(int)>
<android.net.TrafficStats: long getUidTxPackets(int)>
<android.view.inputmethod.CursorAnchorInfo: float getInsertionMarkerBottom()>
<android.filterpacks.imageproc.BitmapOverlayFilter: void process(android.filterfw.core.FilterContext)>
<android.view.ViewGroup: void setStaticTransformationsEnabled(boolean)>
<android.app.FragmentManagerImpl: java.lang.String toString()>
<android.app.FragmentManager.OnBackStackChangedListener: void onBackStackChanged()>
<com.android.internal.widget.ActionBarOverlayLayout: void onLayout(boolean,int,int,int,int)>
<android.location.LocationRequest: android.location.LocationRequest setSmallestDisplacement(float)>
<android.media.tv.TvContract: android.net.Uri buildProgramsUriForChannel(long)>
<android.view.inputmethod.SparseRectFArray: int getFlags(int,int)>
<android.view.RenderNode: boolean setPivotY(float)>
<android.view.ViewGroup: void setTouchscreenBlocksFocus(boolean)>
<com.android.internal.view.menu.MenuBuilder: void addMenuPresenter(com.android.internal.view.menu.MenuPresenter)>
<android.os.BatteryStats.Uid: android.os.BatteryStats.Timer getForegroundActivityTimer()>
<android.bluetooth.le.BluetoothLeScanner: void startScan(android.bluetooth.le.ScanCallback)>
<android.filterpacks.base.GLTextureTarget: void setupPorts()>
<android.telecom.ParcelableCall: android.telecom.GatewayInfo getGatewayInfo()>
<android.widget.ListView: void setOverscrollFooter(android.graphics.drawable.Drawable)>
<android.widget.VideoView: void setSubtitleWidget(android.media.SubtitleTrack.RenderingWidget)>
<android.opengl.EGL14: android.opengl.EGLSurface eglCreateWindowSurface(android.opengl.EGLDisplay,android.opengl.EGLConfig,java.lang.Object,int[],int)>
<android.net.SSLCertificateSocketFactory: byte[] getAlpnSelectedProtocol(java.net.Socket)>
<android.widget.TableRow: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>
<com.android.internal.app.WindowDecorActionBar: void setDisplayShowCustomEnabled(boolean)>
<com.android.ims.internal.IImsUt: int updateCallBarring(int,boolean,java.lang.String[])>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getAllButNulLegal()>
<android.app.Activity: void onUserLeaveHint()>
<android.hardware.camera2.marshal.impl.MarshalQueryableRange: boolean isTypeMappingSupported(android.hardware.camera2.utils.TypeReference,int)>
<android.provider.SearchIndexablesProvider: java.lang.String getType(android.net.Uri)>
<android.media.MediaMetadata: long getLong(java.lang.String)>
<android.widget.SimpleExpandableListAdapter: void <init>(android.content.Context,java.util.List,int,java.lang.String[],int[],java.util.List,int,java.lang.String[],int[])>
<com.android.internal.view.IInputMethodManager: com.android.internal.view.InputBindResult windowGainedFocus(com.android.internal.view.IInputMethodClient,android.os.IBinder,int,int,int,android.view.inputmethod.EditorInfo,com.android.internal.view.IInputContext)>
<android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,long)>
<android.security.KeyStore: boolean unlock(java.lang.String)>
<android.widget.SlidingDrawer: void setOnDrawerScrollListener(android.widget.SlidingDrawer.OnDrawerScrollListener)>
<android.database.BulkCursorDescriptor: int describeContents()>
<android.database.MergeCursor: void unregisterDataSetObserver(android.database.DataSetObserver)>
<android.view.View: int getMeasuredWidth()>
<android.os.BatteryStats: int getDischargeAmountScreenOff()>
<android.telephony.PhoneNumberUtils: void formatJapaneseNumber(android.text.Editable)>
<android.speech.tts.TextToSpeech: boolean areDefaultsEnforced()>
<android.media.MediaCodecInfo.VideoCapabilities: boolean areSizeAndRateSupported(int,int,double)>
<com.android.internal.widget.ToolbarWidgetWrapper: void setDropdownSelectedPosition(int)>
<android.view.inputmethod.InputConnection: boolean clearMetaKeyStates(int)>
<android.os.SELinux: java.lang.String[] getBooleanNames()>
<android.app.ActivityManagerProxy: void grantUriPermission(android.app.IApplicationThread,java.lang.String,android.net.Uri,int,int)>
<android.net.LinkQualityInfo: void setNetworkType(int)>
<android.bluetooth.BluetoothGattCharacteristic: java.lang.Float getFloatValue(int,int)>
<android.provider.DocumentsProvider: android.database.Cursor querySearchDocuments(java.lang.String,java.lang.String,java.lang.String[])>
<android.view.ViewRootImpl: int getTextAlignment()>
<android.opengl.GLES31: void glProgramUniformMatrix4x2fv(int,int,int,boolean,java.nio.FloatBuffer)>
<com.google.android.gles_jni.GLImpl: void glBindTexture(int,int)>
<android.widget.RatingBar: void setOnRatingBarChangeListener(android.widget.RatingBar.OnRatingBarChangeListener)>
<android.database.CursorWrapper: void <init>(android.database.Cursor)>
<android.nfc.NdefRecord: void <init>(byte[])>
<android.database.sqlite.SQLiteConnectionPool: void releaseConnection(android.database.sqlite.SQLiteConnection)>
<android.app.backup.BackupAgentHelper: android.app.backup.BackupHelperDispatcher getDispatcher()>
<android.service.fingerprint.IFingerprintServiceReceiver: void onAcquired(int)>
<com.android.internal.util.FastXmlSerializer: void endDocument()>
<com.android.internal.os.BatteryStatsImpl: int mapUid(int)>
<android.renderscript.Float2: android.renderscript.Float2 mul(android.renderscript.Float2,android.renderscript.Float2)>
<android.widget.Scroller: int getStartY()>
<android.content.pm.ApplicationInfo: void disableCompatibilityMode()>
<android.graphics.RectF: void setEmpty()>
<android.opengl.GLES11: void glGetTexParameterxv(int,int,java.nio.IntBuffer)>
<android.animation.ValueAnimator: void setRepeatMode(int)>
<android.gesture.GestureOverlayView: void setGestureStrokeSquarenessTreshold(float)>
<com.android.internal.widget.LockPatternUtils: void saveLockPattern(java.util.List)>
<android.os.WorkSource: void <init>(int)>
<android.webkit.WebSettings: java.lang.String getStandardFontFamily()>
<android.os.IServiceManager: void setPermissionController(android.os.IPermissionController)>
<android.renderscript.Allocation: void copy2DRangeFrom(int,int,int,int,byte[])>
<com.android.internal.app.AlertController: android.widget.Button getButton(int)>
<android.media.SubtitleTrack: android.media.MediaFormat getFormat()>
<android.database.AbstractCursor: void setNotificationUri(android.content.ContentResolver,android.net.Uri)>
<android.telephony.PhoneNumberUtils: java.lang.String normalizeNumber(java.lang.String)>
<android.net.Uri.Builder: android.net.Uri.Builder authority(java.lang.String)>
<android.view.WindowCallbackWrapper: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.preference.PreferenceActivity: boolean isMultiPane()>
<android.print.IPrintDocumentAdapter: void write(android.print.PageRange[],android.os.ParcelFileDescriptor,android.print.IWriteResultCallback,int)>
<android.text.style.TypefaceSpan: void updateMeasureState(android.text.TextPaint)>
<android.preference.SeekBarVolumizer: void changeVolumeBy(int)>
<android.graphics.drawable.LayerDrawable: void applyTheme(android.content.res.Resources.Theme)>
<android.text.AutoText: java.lang.String get(java.lang.CharSequence,int,int,android.view.View)>
<android.view.ViewGroup: boolean requestFocus(int,android.graphics.Rect)>
<android.drm.DrmInfoRequest: java.lang.String getMimeType()>
<android.widget.TextView: void setLines(int)>
<android.media.tv.TvContentRatingSystemInfo: boolean isSystemDefined()>
<android.net.MobileLinkQualityInfo: int getGsmErrorRate()>
<android.widget.ScrollView: void onSizeChanged(int,int,int,int)>
<android.content.ClipDescription: java.lang.String[] filterMimeTypes(java.lang.String)>
<android.inputmethodservice.InputMethodService: void updateFullscreenMode()>
<android.net.NetworkFactory: void setCapabilityFilter(android.net.NetworkCapabilities)>
<android.filterpacks.imageproc.CrossProcessFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<android.app.backup.BackupAgent: void onRestoreFile(android.os.ParcelFileDescriptor,long,java.io.File,int,long,long)>
<android.widget.SearchView: void setQueryHint(java.lang.CharSequence)>
<android.media.AudioManager: void adjustVolume(int,int)>
<android.text.method.WordIterator: int preceding(int)>
<android.app.Notification.BigTextStyle: android.app.Notification.BigTextStyle setSummaryText(java.lang.CharSequence)>
<android.view.View: boolean hasNestedScrollingParent()>
<android.net.UidRange: int getStartUser()>
<android.view.inputmethod.InputMethodInfo: void dump(android.util.Printer,java.lang.String)>
<android.net.ProxyDataTracker: boolean teardown()>
<android.media.MediaFocusControl.AudioFocusDeathHandler: void binderDied()>
<android.widget.TableLayout: boolean isColumnStretchable(int)>
<android.nfc.INfcAdapterExtras: android.os.Bundle transceive(java.lang.String,byte[])>
<android.renderscript.Sampler: android.renderscript.Sampler CLAMP_NEAREST(android.renderscript.RenderScript)>
<android.media.MediaRouter: void selectRouteInt(int,android.media.MediaRouter.RouteInfo,boolean)>
<android.os.MemoryFile: void writeBytes(byte[],int,int,int)>
<android.mtp.MtpObjectInfo: int getFormat()>
<android.view.inputmethod.InputBinding: android.view.inputmethod.InputConnection getConnection()>
<com.android.internal.http.multipart.Part: java.lang.String getTransferEncoding()>
<android.animation.Animator: void removePauseListener(android.animation.Animator.AnimatorPauseListener)>
<android.view.accessibility.AccessibilityRecord: int getMaxScrollX()>
<android.net.BaseNetworkStateTracker: void supplyMessenger(android.os.Messenger)>
<android.os.PowerManager: android.os.PowerManager.WakeLock newWakeLock(int,java.lang.String)>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator rotationYBy(float)>
<android.media.effect.FilterGraphEffect: void <init>(android.media.effect.EffectContext,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Class)>
<com.android.internal.os.BatteryStatsImpl: long getBatteryRealtime(long)>
<android.app.Dialog: boolean onOptionsItemSelected(android.view.MenuItem)>
<android.view.View: void setHorizontalFadingEdgeEnabled(boolean)>
<android.widget.Switch: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>
<android.service.dreams.DreamService: void startDozing()>
<android.app.ActivityOptions: android.os.Bundle toBundle()>
<android.os.Debug: long getNativeHeapAllocatedSize()>
<android.text.TextPaint: void setUnderlineText(int,float)>
<android.text.method.BaseMovementMethod: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>
<android.speech.tts.TextToSpeech: void shutdown()>
<android.os.BatteryStats.Uid: void noteWifiMulticastEnabledLocked(long)>
<android.media.TtmlNodeListener: void onRootNodeParsed(android.media.TtmlNode)>
<android.widget.HorizontalScrollView: void smoothScrollBy(int,int)>
<com.android.internal.content.PackageHelper: android.os.storage.IMountService getMountService()>
<com.android.internal.view.menu.ActionMenuItemView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.android.internal.os.ZygoteInit: void main(java.lang.String[])>
<android.app.IActivityManager: boolean isUserAMonkey()>
<android.database.sqlite.SQLiteFullException: void <init>(java.lang.String)>
<android.widget.TextView: void setPaddingRelative(int,int,int,int)>
<android.app.IActivityManager: android.os.IBinder getHomeActivityToken()>
<android.animation.LayoutTransition: long getDuration(int)>
<com.android.internal.os.BatteryStatsImpl: void noteVideoOnLocked(int)>
<android.speech.IRecognitionListener: void onBeginningOfSpeech()>
<android.widget.Gallery: boolean onKeyDown(int,android.view.KeyEvent)>
<android.view.Gravity: void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int)>
<android.webkit.WebStorage.Origin: void <init>(java.lang.String,long)>
<android.bluetooth.BluetoothActivityEnergyInfo: void writeToParcel(android.os.Parcel,int)>
<android.graphics.drawable.AnimationDrawable: boolean setVisible(boolean,boolean)>
<android.view.animation.PathInterpolator: void <init>(float,float)>
<android.nfc.ErrorCodes: java.lang.String asString(int)>
<com.android.internal.app.ToolbarActionBar: void setHomeButtonEnabled(boolean)>
<com.android.internal.view.IInputContext: void endBatchEdit()>
<android.filterfw.core.Filter: void addInputPort(java.lang.String)>
<android.renderscript.Int4: void <init>(int,int,int,int)>
<android.os.BatteryStats.Uid.Proc: android.os.BatteryStats.Uid.Proc.ExcessivePower getExcessivePower(int)>
<android.opengl.GLES11Ext: void glRenderbufferStorageOES(int,int,int,int)>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle getAuthToken(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)>
<com.android.internal.widget.PasswordEntryKeyboardView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.internal.view.menu.MenuBuilder: boolean isShortcutsVisible()>
<android.text.TextUtils: int lastIndexOf(java.lang.CharSequence,char,int)>
<android.database.AbstractCursor: boolean moveToFirst()>
<android.media.MediaDrm: byte[] getPropertyByteArray(java.lang.String)>
<android.text.SpannableString: java.lang.CharSequence subSequence(int,int)>
<com.android.internal.http.multipart.MultipartEntity: byte[] getMultipartBoundary()>
<android.inputmethodservice.InputMethodService: boolean onGenericMotionEvent(android.view.MotionEvent)>
<android.hardware.camera2.utils.ParamsUtils: android.graphics.Rect mapRect(android.graphics.Matrix,android.graphics.Rect)>
<android.service.notification.StatusBarNotification: void writeToParcel(android.os.Parcel,int)>
<android.widget.ExpandableListView: void setOnItemClickListener(android.widget.AdapterView.OnItemClickListener)>
<android.os.Environment.UserEnvironment: java.io.File getExternalStoragePublicDirectory(java.lang.String)>
<android.view.Window: void addFlags(int)>
<android.renderscript.Mesh.Builder: int getCurrentIndexSetIndex()>
<android.view.animation.RotateAnimation: void <init>(float,float,int,float,int,float)>
<android.hardware.camera2.utils.LongParcelable: long getNumber()>
<android.webkit.CookieManager: void setAcceptFileSchemeCookiesImpl(boolean)>
<android.os.Process: boolean isIsolated()>
<android.util.LogPrinter: void <init>(int,java.lang.String,int)>
<com.android.internal.widget.multiwaveview.GlowPadView.OnTriggerListener: void onTrigger(android.view.View,int)>
<android.speech.srec.UlawEncoderInputStream: int available()>
<com.google.android.gles_jni.EGLDisplayImpl: void <init>(long)>
<android.net.RouteInfo: void <init>(android.net.IpPrefix,java.net.InetAddress,java.lang.String)>
<android.widget.EdgeEffect: void <init>(android.content.Context)>
<android.telephony.SignalStrength: void initialize(int,int,int,int,int,int,int,boolean)>
<android.app.admin.DevicePolicyManager: void clearPackagePersistentPreferredActivities(android.content.ComponentName,java.lang.String)>
<android.preference.SeekBarPreference: void onSetInitialValue(boolean,java.lang.Object)>
<android.os.ServiceManagerProxy: void addService(java.lang.String,android.os.IBinder,boolean)>
<android.view.inputmethod.InputMethodManager: void setUpdateCursorAnchorInfoMode(int)>
<android.app.IActivityManager: void reportActivityFullyDrawn(android.os.IBinder)>
<android.view.InputDevice: int getGeneration()>
<android.net.NetworkStatsHistory: void recordHistory(android.net.NetworkStatsHistory,long,long)>
<android.widget.SearchView: void setSuggestionsAdapter(android.widget.CursorAdapter)>
<android.service.notification.StatusBarNotification: java.lang.String getPackageName()>
<android.location.LocationRequest: void <init>(android.location.LocationRequest)>
<android.app.admin.DeviceAdminInfo: void dump(android.util.Printer,java.lang.String)>
<android.hardware.SerialManager: java.lang.String[] getSerialPorts()>
<android.hardware.camera2.legacy.SurfaceTextureRenderer: android.graphics.SurfaceTexture getSurfaceTexture()>
<android.app.IActivityContainer: int startActivityIntentSender(android.content.IIntentSender)>
<android.widget.SearchView.SearchAutoComplete: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.net.wifi.p2p.WifiP2pGroup: void setPassphrase(java.lang.String)>
<android.view.View: int getPaddingEnd()>
<android.widget.ZoomButtonsController: boolean onTouch(android.view.View,android.view.MotionEvent)>
<android.view.WindowCallbackWrapper: void onActionModeFinished(android.view.ActionMode)>
<com.android.internal.os.BatteryStatsImpl.BatchTimer: int computeCurrentCountLocked()>
<com.android.internal.location.GpsNetInitiatedHandler: void <init>(android.content.Context,android.location.INetInitiatedListener,boolean)>
<android.hardware.camera2.utils.HashCodeHelpers: int hashCode(java.lang.Object[])>
<android.graphics.drawable.ScaleDrawable: boolean setVisible(boolean,boolean)>
<android.content.pm.ComponentInfo: android.graphics.drawable.Drawable loadDefaultBanner(android.content.pm.PackageManager)>
<android.app.job.JobInfo: boolean isPeriodic()>
<android.view.View: void setTop(int)>
<android.widget.CalendarView.CalendarViewDelegate: void setFirstDayOfWeek(int)>
<android.net.wifi.WifiManager: int getVerboseLoggingLevel()>
<com.android.internal.view.InputConnectionWrapper: java.lang.CharSequence getTextBeforeCursor(int,int)>
<com.android.internal.app.WindowDecorActionBar.TabImpl: android.app.ActionBar.Tab setContentDescription(java.lang.CharSequence)>
<android.opengl.Matrix: float length(float,float,float)>
<com.google.android.gles_jni.GLImpl: void glPolygonOffset(float,float)>
<android.database.sqlite.SQLiteConnection: long executeForLastInsertedRowId(java.lang.String,java.lang.Object[],android.os.CancellationSignal)>
<android.media.MediaFocusControl: void unregisterMediaButtonIntent(android.app.PendingIntent)>
<android.graphics.drawable.ShapeDrawable: void setColorFilter(android.graphics.ColorFilter)>
<android.media.MediaMetadataEditor: void clear()>
<android.renderscript.Int4: void setAt(int,int)>
<android.widget.SearchView: void setOnSuggestionListener(android.widget.SearchView.OnSuggestionListener)>
<android.net.NetworkScoreManager: boolean setActiveScorer(java.lang.String)>
<android.app.Activity: boolean shouldUpRecreateTask(android.content.Intent)>
<android.webkit.WebViewClient: void onUnhandledInputEvent(android.webkit.WebView,android.view.InputEvent)>
<com.google.android.util.AbstractMessageParser.Format: boolean isHtml()>
<android.media.audiofx.Equalizer: short getNumberOfPresets()>
<android.graphics.RadialGradient: void <init>(float,float,float,int,int,android.graphics.Shader.TileMode)>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor queryWithFactory(android.database.sqlite.SQLiteDatabase.CursorFactory,boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.CancellationSignal)>
<android.util.SparseIntArray: java.lang.String toString()>
<android.renderscript.Long3: void <init>(long)>
<android.opengl.GLES11Ext: void glFogxvOES(int,int[],int)>
<android.view.inputmethod.InputMethod: void revokeSession(android.view.inputmethod.InputMethodSession)>
<android.content.ContextWrapper: int checkCallingOrSelfPermission(java.lang.String)>
<android.os.BaseBundle: long[] getLongArray(java.lang.String)>
<android.nfc.NfcAdapter.OnNdefPushCompleteCallback: void onNdefPushComplete(android.nfc.NfcEvent)>
<android.content.res.Resources: java.lang.CharSequence getText(int,java.lang.CharSequence)>
<com.android.internal.os.BatteryStatsImpl.Uid: void noteResetVideoLocked(long)>
<android.view.WindowManagerPolicy.WindowState: void computeFrameLw(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>
<android.app.Notification.Action: android.os.Bundle getExtras()>
<android.app.DatePickerDialog: android.os.Bundle onSaveInstanceState()>
<android.renderscript.Float4: void <init>(android.renderscript.Float4)>
<android.accessibilityservice.AccessibilityService: boolean onKeyEvent(android.view.KeyEvent)>
<android.hardware.location.GeofenceHardwareMonitorEvent: int describeContents()>
<android.widget.Toast: void setDuration(int)>
<android.media.AudioTrack: void release()>
<android.net.http.RequestQueue: android.net.http.RequestHandle queueRequest(java.lang.String,java.lang.String,java.util.Map,android.net.http.EventHandler,java.io.InputStream,int)>
<android.widget.PopupMenu: void <init>(android.content.Context,android.view.View)>
<android.os.BaseBundle: int getInt(java.lang.String)>
<android.content.pm.PackageItemInfo: android.graphics.drawable.Drawable loadBanner(android.content.pm.PackageManager)>
<android.transition.Transition: void setEpicenterCallback(android.transition.Transition.EpicenterCallback)>
<android.media.AudioManager: void unregisterMediaButtonEventReceiver(android.app.PendingIntent)>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setContentIconGravity(int)>
<android.net.VpnService.Builder: android.net.VpnService.Builder addDisallowedApplication(java.lang.String)>
<android.net.NetworkPolicyManager: void unregisterListener(android.net.INetworkPolicyListener)>
<android.location.Address: java.lang.String getPostalCode()>
<android.os.BatteryStats: void formatTimeMs(java.lang.StringBuilder,long)>
<android.content.SharedPreferences: android.content.SharedPreferences.Editor edit()>
<com.android.internal.content.PackageMonitor: void onSomePackagesChanged()>
<android.media.tv.TvInputInfo: boolean isPassthroughInput()>
<com.android.internal.os.BatteryStatsImpl: int getHistoryUsedSize()>
<android.renderscript.Int4: int length()>
<android.renderscript.FieldPacker: android.renderscript.Byte3 subByte3()>
<android.transition.Transition: void runAnimators()>
<android.app.ActivityManager.TaskDescription: void writeToParcel(android.os.Parcel,int)>
<android.widget.BaseAdapter: int getViewTypeCount()>
<android.view.accessibility.AccessibilityNodeInfo: boolean isVisibleToUser()>
<com.android.internal.widget.PointerLocationView: void <init>(android.content.Context)>
<com.android.internal.os.BatteryStatsImpl: void addIsolatedUidLocked(int,int)>
<android.opengl.EGLSurface: boolean equals(java.lang.Object)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(java.lang.String,android.animation.TypeEvaluator,java.lang.Object[])>
<android.widget.VideoView: boolean isPlaying()>
<android.media.tv.TvContentRating: android.media.tv.TvContentRating createRating(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>
<android.widget.CalendarView: void setSelectedWeekBackgroundColor(int)>
<android.widget.TwoLineListItem: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.view.inputmethod.InputMethodSession: void updateCursor(android.graphics.Rect)>
<android.media.tv.TvView: void setZOrderMediaOverlay(boolean)>
<com.google.android.gles_jni.GLImpl: void glCopyTexImage2D(int,int,int,int,int,int,int,int)>
<android.media.AudioGain: int minValue()>
<android.widget.LinearLayout: boolean isBaselineAligned()>
<com.android.internal.os.BatteryStatsImpl: int getHistoryStringPoolBytes()>
<android.graphics.PointF: java.lang.String toString()>
<android.text.BoringLayout: android.text.BoringLayout.Metrics isBoring(java.lang.CharSequence,android.text.TextPaint)>
<android.database.AbstractCursor: void unregisterContentObserver(android.database.ContentObserver)>
<android.view.InputEvent: int getSource()>
<android.database.CursorWrapper: int getPosition()>
<android.app.LocalActivityManager: android.app.Activity getActivity(java.lang.String)>
<android.bluetooth.BluetoothUuid: boolean is16BitUuid(android.os.ParcelUuid)>
<android.content.IContentService: boolean isSyncPendingAsUser(android.accounts.Account,java.lang.String,android.content.ComponentName,int)>
<android.util.Spline.LinearSpline: void <init>(float[],float[])>
<android.media.session.MediaController: android.media.session.MediaController.TransportControls getTransportControls()>
<com.android.internal.telephony.CallerInfoAsyncQuery: com.android.internal.telephony.CallerInfoAsyncQuery startQuery(int,android.content.Context,java.lang.String,com.android.internal.telephony.CallerInfoAsyncQuery.OnQueryCompleteListener,java.lang.Object)>
<android.print.PrinterCapabilitiesInfo: int getColorModes()>
<com.android.internal.telecom.ITelecomService: void clearAccounts(java.lang.String)>
<android.nfc.tech.IsoDep: boolean isExtendedLengthApduSupported()>
<android.graphics.drawable.InsetDrawable: int getChangingConfigurations()>
<com.android.internal.app.ProcessMap: java.lang.Object put(java.lang.String,int,java.lang.Object)>
<android.os.ConditionVariable: void open()>
<android.media.MediaDescription.Builder: android.media.MediaDescription.Builder setTitle(java.lang.CharSequence)>
<android.os.Process: int[] getPids(java.lang.String,int[])>
<android.opengl.GLES11: void glGetMaterialxv(int,int,int[],int)>
<android.content.SyncStats: java.lang.String toString()>
<android.net.Uri: java.lang.String getScheme()>
<android.media.ImageReader: int getHeight()>
<android.hardware.camera2.CameraCaptureSession.CaptureCallback: void onCapturePartial(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureResult)>
<com.google.android.gles_jni.GLImpl: void glGetTexGeniv(int,int,java.nio.IntBuffer)>
<android.filterfw.core.FrameFormat: java.lang.Class getObjectClass()>
<android.graphics.Color: int alpha(int)>
<android.widget.VideoView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.view.MotionEvent.PointerCoords: float getAxisValue(int)>
<android.util.TimingLogger: void reset(java.lang.String,java.lang.String)>
<android.view.View: boolean isSaveFromParentEnabled()>
<android.app.IApplicationThread: void scheduleCreateService(android.os.IBinder,android.content.pm.ServiceInfo,android.content.res.CompatibilityInfo,int)>
<android.widget.ScrollView: void onOverScrolled(int,int,boolean,boolean)>
<android.net.BaseNetworkStateTracker: boolean isAvailable()>
<android.os.storage.IMountService: boolean isExternalStorageEmulated()>
<android.telephony.CellSignalStrengthCdma: java.lang.String toString()>
<android.media.session.MediaController.PlaybackInfo: int getCurrentVolume()>
<android.text.method.BaseMovementMethod: boolean left(android.widget.TextView,android.text.Spannable)>
<android.app.usage.UsageEvents.Event: android.content.res.Configuration getConfiguration()>
<com.android.internal.app.ToolbarActionBar: void setLogo(android.graphics.drawable.Drawable)>
<android.hardware.GeomagneticField: float getZ()>
<android.net.SSLCertificateSocketFactory: void setTrustManagers(javax.net.ssl.TrustManager[])>
<android.widget.HorizontalScrollView: void addView(android.view.View)>
<com.android.internal.view.menu.ActionMenuItemView: void setChecked(boolean)>
<android.text.BoringLayout: int getParagraphDirection(int)>
<android.opengl.GLES31: void glProgramUniform3iv(int,int,int,int[],int)>
<android.widget.TabWidget: void <init>(android.content.Context)>
<android.widget.Switch: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.text.style.AbsoluteSizeSpan: int getSpanTypeId()>
<android.filterfw.core.RandomScheduler: android.filterfw.core.Filter scheduleNextNode()>
<android.app.ActivityManagerProxy: void noteWakeupAlarm(android.content.IIntentSender,int,java.lang.String)>
<android.text.StaticLayout: int getTopPadding()>
<android.widget.ListView: void <init>(android.content.Context)>
<android.app.ActivityManagerProxy: void setPackageAskScreenCompat(java.lang.String,boolean)>
<com.android.internal.widget.multiwaveview.GlowPadView: void onLayout(boolean,int,int,int,int)>
<android.net.wifi.IWifiManager: int getAllowScansWithTraffic()>
<android.content.Context: boolean deleteDatabase(java.lang.String)>
<android.widget.TextView: int getImeActionId()>
<android.media.MediaCrypto: void finalize()>
<android.filterfw.geometry.Point: android.filterfw.geometry.Point normalize()>
<android.media.MediaDrm.CryptoSession: boolean verify(byte[],byte[],byte[])>
<android.view.KeyEvent: boolean isScrollLockOn()>
<android.renderscript.Allocation: void copy1DRangeFrom(int,int,byte[])>
<android.service.notification.ZenModeConfig: android.net.Uri toDowntimeConditionId(android.service.notification.ZenModeConfig.DowntimeInfo)>
<android.media.MediaPlayer: android.os.Parcel newRequest()>
<android.net.LinkProperties: int getMtu()>
<com.android.internal.widget.ToolbarWidgetWrapper: void setDisplayOptions(int)>
<android.widget.ViewFlipper: void onDetachedFromWindow()>
<com.android.internal.util.TypedProperties: boolean getBoolean(java.lang.String,boolean)>
<android.webkit.WebViewProvider.ScrollDelegate: int computeHorizontalScrollOffset()>
<android.filterpacks.base.GLTextureTarget: void <init>(java.lang.String)>
<android.service.voice.VoiceInteractionSession.Request: void sendCompleteVoiceResult(android.os.Bundle)>
<android.service.trust.TrustAgentService: void onCreate()>
<android.view.View: android.view.View findViewById(int)>
<android.bluetooth.IBluetoothPbap: boolean connect(android.bluetooth.BluetoothDevice)>
<android.app.admin.DeviceAdminInfo: java.lang.String getPackageName()>
<android.telecom.RemoteConnection.VideoProvider: void setCamera(java.lang.String)>
<android.transition.TransitionUtils: android.graphics.Bitmap createViewBitmap(android.view.View,android.graphics.Matrix,android.graphics.RectF)>
<android.content.ContentProviderClient: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.widget.HorizontalScrollView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<android.opengl.GLES11: void glGetTexEnviv(int,int,java.nio.IntBuffer)>
<android.graphics.drawable.ShapeDrawable: boolean inflateTag(java.lang.String,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>
<android.view.inputmethod.InputMethodManager: void hideSoftInputFromInputMethod(android.os.IBinder,int)>
<android.renderscript.FieldPacker: void addI64(android.renderscript.Long4)>
<android.nfc.tech.Ndef: boolean canMakeReadOnly()>
<android.view.MotionEvent: void transform(android.graphics.Matrix)>
<android.util.Range: java.lang.Comparable getUpper()>
<android.graphics.RectF: void union(android.graphics.RectF)>
<android.net.ProxyInfo: java.net.InetSocketAddress getSocketAddress()>
<android.net.wifi.WifiEnterpriseConfig: java.security.cert.X509Certificate getCaCertificate()>
<android.hardware.camera2.legacy.LegacyExceptionUtils.BufferQueueAbandonedException: void <init>(java.lang.String)>
<android.net.wifi.p2p.WifiP2pWfdInfo: boolean setDeviceType(int)>
<android.app.ActivityManagerProxy: int addAppTask(android.os.IBinder,android.content.Intent,android.app.ActivityManager.TaskDescription,android.graphics.Bitmap)>
<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo: android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo obtain(int,int,int,int,boolean)>
<android.view.animation.AlphaAnimation: void <init>(float,float)>
<android.os.Parcel: int[] createIntArray()>
<android.app.Activity: boolean navigateUpTo(android.content.Intent)>
<android.text.method.CharacterPickerDialog: void <init>(android.content.Context,android.view.View,android.text.Editable,java.lang.String,boolean)>
<android.view.View: void transformMatrixToLocal(android.graphics.Matrix)>
<android.net.wifi.p2p.WifiP2pGroupList: void remove(int)>
<android.app.SearchableInfo.ActionKeyInfo: java.lang.String getQueryActionMsg()>
<android.service.trust.ITrustAgentService: void setCallback(android.service.trust.ITrustAgentServiceCallback)>
<android.telecom.Connection.Listener: void onVideoStateChanged(android.telecom.Connection,int)>
<android.app.DownloadManager: long enqueue(android.app.DownloadManager.Request)>
<android.media.tv.TvInputService: android.os.IBinder onBind(android.content.Intent)>
<android.content.ContentProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>
<android.content.pm.PackageParser: android.content.pm.ProviderInfo generateProviderInfo(android.content.pm.PackageParser.Provider,int,android.content.pm.PackageUserState,int)>
<com.android.internal.widget.LockPatternView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.database.sqlite.SQLiteOpenHelper: void onDowngrade(android.database.sqlite.SQLiteDatabase,int,int)>
<android.preference.SwitchPreference: void <init>(android.content.Context,android.util.AttributeSet)>
<com.google.android.util.AbstractMessageParser.Part: void setMeText(java.lang.String)>
<android.graphics.ColorMatrix: void setScale(float,float,float,float)>
<android.view.accessibility.AccessibilityNodeInfo: void setVisibleToUser(boolean)>
<android.app.SearchableInfo: int getVoiceLanguageModeId()>
<android.webkit.ClientCertRequest: java.security.Principal[] getPrincipals()>
<android.location.LocationRequest: int describeContents()>
<android.view.ViewGroup.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>
<android.graphics.drawable.BitmapDrawable: android.content.res.ColorStateList getTint()>
<android.os.Parcel: void finalize()>
<android.bluetooth.IBluetooth: java.lang.String getAddress()>
<android.telecom.RemoteConnection: android.telecom.RemoteConnection failure(android.telecom.DisconnectCause)>
<android.net.http.RequestQueue: void requeueRequest(android.net.http.Request)>
<com.android.internal.app.IBatteryStats: long getAwakeTimeBattery()>
<android.content.ContentValues: byte[] getAsByteArray(java.lang.String)>
<android.opengl.GLES20: void glViewport(int,int,int,int)>
<android.net.http.AndroidHttpClientConnection: int getLocalPort()>
<android.view.ContextThemeWrapper: int getThemeResId()>
<android.text.BidiFormatter: java.lang.String unicodeWrap(java.lang.String,android.text.TextDirectionHeuristic)>
<android.app.UiAutomationConnection: void disconnect()>
<android.util.ArraySet: java.lang.Object[] toArray()>
<android.view.View: float getTranslationY()>
<android.bluetooth.BluetoothA2dp: void finalize()>
<android.view.ViewGroup: void measureChildren(int,int)>
<com.android.internal.view.BaseIWindow: void dispatchSystemUiVisibilityChanged(int,int,int,int)>
<android.text.Selection: boolean extendDown(android.text.Spannable,android.text.Layout)>
<android.content.Intent: int getIntExtra(java.lang.String,int)>
<android.util.AttributeSet: int getAttributeNameResource(int)>
<android.preference.PreferenceScreen: void bind(android.widget.ListView)>
<android.app.MediaRouteActionProvider: android.view.View onCreateActionView(android.view.MenuItem)>
<android.webkit.WebViewProvider: boolean canGoBack()>
<android.graphics.drawable.BitmapDrawable: void setDither(boolean)>
<android.content.BroadcastReceiver: boolean isOrderedBroadcast()>
<android.app.admin.IDevicePolicyManager: void setPasswordMinimumUpperCase(android.content.ComponentName,int,int)>
<android.media.TtmlRenderingWidget: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.location.GpsClock: double getBiasUncertaintyInNs()>
<android.media.tv.TvInputManager.Session: void setCaptionEnabled(boolean)>
<android.database.CursorWrapper: boolean moveToPrevious()>
<com.android.ims.internal.IImsUtListener: void utConfigurationCallBarringQueried(com.android.ims.internal.IImsUt,int,com.android.ims.ImsSsInfo[])>
<android.media.AudioService: void remoteControlDisplayUsesBitmapSize(android.media.IRemoteControlDisplay,int,int)>
<android.media.tv.ITvInputManagerCallback: void onInputRemoved(java.lang.String)>
<android.net.VpnService.Builder: android.net.VpnService.Builder setMtu(int)>
<android.media.MediaPlayer: int getCurrentPosition()>
<android.telecom.Connection.VideoProvider: void onSendSessionModifyResponse(android.telecom.VideoProfile)>
<android.location.Address: void clearLatitude()>
<android.net.LocalSocket: boolean isClosed()>
<android.graphics.Rect: int centerX()>
<android.app.DialogFragment: boolean isCancelable()>
<android.widget.TextView: void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int)>
<android.renderscript.Byte2: android.renderscript.Byte2 add(android.renderscript.Byte2,byte)>
<android.telephony.cdma.CdmaCellLocation: void setCellLocationData(int,int,int)>
<android.nfc.NfcAdapter: boolean enableNdefPush()>
<android.media.audiofx.AudioEffect: void setParameterListener(android.media.audiofx.AudioEffect.OnParameterChangeListener)>
<android.content.SharedPreferences.Editor: android.content.SharedPreferences.Editor putLong(java.lang.String,long)>
<android.webkit.WebSettings: java.lang.String getDatabasePath()>
<android.view.InputDevice: int getKeyboardType()>
<android.app.ActivityView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.SlidingDrawer: void onFinishInflate()>
<android.view.accessibility.AccessibilityRecord: int getFromIndex()>
<android.hardware.camera2.CaptureRequest.Key: int hashCode()>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory.Options)>
<android.graphics.Point: void readFromParcel(android.os.Parcel)>
<android.provider.MediaStore: android.net.Uri getMediaScannerUri()>
<android.os.FactoryTest: int getMode()>
<android.net.LinkProperties: void setLinkAddresses(java.util.Collection)>
<android.renderscript.Script.FieldBase: void init(android.renderscript.RenderScript,int,int)>
<android.inputmethodservice.InputMethodService: void onUpdateCursorAnchorInfo(android.view.inputmethod.CursorAnchorInfo)>
<android.text.style.LocaleSpan: int getSpanTypeId()>
<android.hardware.camera2.utils.CameraRuntimeException: void <init>(int,java.lang.String)>
<android.widget.AlphabetIndexer: int compare(java.lang.String,java.lang.String)>
<android.accounts.Account: void <init>(android.os.Parcel)>
<android.hardware.camera2.impl.CameraDeviceImpl.CameraDeviceCallbacks: android.os.IBinder asBinder()>
<android.transition.Crossfade: void captureStartValues(android.transition.TransitionValues)>
<android.app.backup.BackupAgent: void fullBackupFile(java.io.File,android.app.backup.FullBackupDataOutput)>
<android.filterpacks.videosink.MediaEncoderFilter: void close(android.filterfw.core.FilterContext)>
<com.android.internal.widget.ResolverDrawerLayout: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
<android.media.session.MediaController.TransportControls: void sendCustomAction(java.lang.String,android.os.Bundle)>
<android.os.INetworkManagementService: void setDnsForwarders(android.net.Network,java.lang.String[])>
<android.view.Surface: int getGenerationId()>
<android.widget.DatePicker: void setMaxDate(long)>
<android.widget.AdapterView: java.lang.Object getItemAtPosition(int)>
<android.filterfw.core.GraphRunner: void <init>(android.filterfw.core.FilterContext)>
<android.preference.Preference: void setShouldDisableView(boolean)>
<android.content.pm.LabeledIntent: void <init>(android.content.Intent,java.lang.String,int,int)>
<com.google.android.util.AbstractMessageParser.FlickrPhoto: java.lang.String getUserSetsURL(java.lang.String,java.lang.String)>
<android.telephony.TelephonyManager: int getCdmaEriIconIndex(long)>
<android.view.View: boolean onTrackballEvent(android.view.MotionEvent)>
<android.graphics.drawable.StateListDrawable: boolean onStateChange(int[])>
<android.text.style.LeadingMarginSpan: void drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout)>
<android.content.EntityIterator: void close()>
<android.graphics.PointF: void readFromParcel(android.os.Parcel)>
<android.view.ScaleGestureDetector.OnScaleGestureListener: boolean onScale(android.view.ScaleGestureDetector)>
<android.media.tv.TvInputHardwareInfo: java.lang.String getAudioAddress()>
<android.graphics.drawable.Drawable.ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources.Theme)>
<android.accessibilityservice.IAccessibilityServiceConnection: void setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)>
<android.hardware.location.ActivityRecognitionEvent: java.lang.String toString()>
<com.android.internal.util.MemInfoReader: long getShmemSizeKb()>
<com.android.internal.view.IInputMethodManager: void showInputMethodAndSubtypeEnablerFromClient(com.android.internal.view.IInputMethodClient,java.lang.String)>
<android.telecom.Connection.VideoProvider: void changeCameraCapabilities(android.telecom.CameraCapabilities)>
<android.os.Debug: long getNativeHeapFreeSize()>
<android.view.RenderNodeAnimator: void cancel()>
<android.view.ViewStub: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.app.backup.AbsoluteFileBackupHelper: void performBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>
<android.hardware.hdmi.HdmiDeviceInfo: int getId()>
<android.view.accessibility.AccessibilityNodeInfo: void setSource(android.view.View)>
<android.view.ViewGroup: void dispatchWindowVisibilityChanged(int)>
<com.android.internal.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)>
<android.net.Uri.Builder: android.net.Uri.Builder path(java.lang.String)>
<android.telecom.Connection: void setDialing()>
<android.widget.DatePicker: int getDayOfMonth()>
<android.media.tv.TvView.TvInputCallback: void onDisconnected(java.lang.String)>
<android.view.MenuItem: android.view.MenuItem setCheckable(boolean)>
<android.text.method.MetaKeyKeyListener: void resetMetaState(android.text.Spannable)>
<android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setChoices(java.lang.CharSequence[])>
<android.media.session.MediaController.Callback: void onPlaybackStateChanged(android.media.session.PlaybackState)>
<android.widget.ImageView: void setAdjustViewBounds(boolean)>
<android.telecom.PhoneAccount: android.graphics.drawable.Drawable getIcon(android.content.Context)>
<android.renderscript.Byte3: void add(byte)>
<android.bluetooth.BluetoothHeadsetClient: boolean setPriority(android.bluetooth.BluetoothDevice,int)>
<android.hardware.soundtrigger.SoundTrigger.ConfidenceLevel: boolean equals(java.lang.Object)>
<android.app.WallpaperManager: android.app.WallpaperInfo getWallpaperInfo()>
<com.android.internal.app.AlertController.AlertParams: void apply(com.android.internal.app.AlertController)>
<android.media.Tokenizer.OnTokenListener: void onStart(java.lang.String,java.lang.String[],java.lang.String)>
<android.speech.RecognitionListener: void onBufferReceived(byte[])>
<android.view.RenderNode: void getMatrix(android.graphics.Matrix)>
<android.net.http.AndroidHttpClientConnection: void sendRequestHeader(org.apache.http.HttpRequest)>
<android.content.pm.PackageManager: android.content.pm.FeatureInfo[] getSystemAvailableFeatures()>
<android.media.AudioService: int getVibrateSetting(int)>
<android.database.sqlite.SQLiteStatement: void execute()>
<android.database.sqlite.SQLiteDatabase: java.lang.String findEditTable(java.lang.String)>
<android.app.MediaRouteButton: boolean performLongClick()>
<android.service.fingerprint.FingerprintManager: void <init>(android.content.Context,android.service.fingerprint.IFingerprintService)>
<android.app.backup.BackupTransport: java.lang.String dataManagementLabel()>
<android.mtp.MtpServer: void start()>
<android.telecom.Connection: void setRinging()>
<android.telephony.PhoneNumberUtils: boolean isNonSeparator(char)>
<android.content.ContentResolver: int syncErrorStringToInt(java.lang.String)>
<android.content.pm.VerificationParams: android.net.Uri getVerificationURI()>
<com.android.internal.view.IInputMethodManager: boolean switchToNextInputMethod(android.os.IBinder,boolean)>
<android.content.IntentFilter: boolean hasCategory(java.lang.String)>
<android.opengl.GLES11Ext: void glPointSizexOES(int)>
<android.media.session.ISessionController: java.lang.String getPackageName()>
<android.text.style.StyleSpan: int describeContents()>
<android.widget.SimpleCursorAdapter: android.database.Cursor swapCursor(android.database.Cursor)>
<android.preference.PreferenceFragment: android.preference.PreferenceScreen getPreferenceScreen()>
<android.media.MutableBackgroundColorSpan: int getBackgroundColor()>
<android.widget.TableLayout: void setColumnShrinkable(int,boolean)>
<android.location.LocationProvider: boolean supportsSpeed()>
<android.telephony.SubscriptionManager: long getDefaultSmsSubId()>
<android.database.BulkCursorToCursorAdaptor: java.lang.String[] getColumnNames()>
<com.android.internal.content.PackageMonitor: int isPackageDisappearing(java.lang.String)>
<android.provider.Settings.Global: java.lang.String getString(android.content.ContentResolver,java.lang.String)>
<android.app.backup.IBackupManager: java.lang.String getDestinationString(java.lang.String)>
<android.app.FragmentManagerImpl: void showFragment(android.app.Fragment,int,int)>
<android.renderscript.Long4: void sub(android.renderscript.Long4)>
<com.android.internal.os.BatteryStatsImpl: void noteWifiScanStoppedLocked(int)>
<android.view.inputmethod.BaseInputConnection: int getCursorCapsMode(int)>
<android.content.pm.PackageManager: boolean addPermission(android.content.pm.PermissionInfo)>
<android.app.Activity: void startActivityForResultAsUser(android.content.Intent,int,android.os.Bundle,android.os.UserHandle)>
<android.content.ISyncServiceAdapter: void cancelSync(android.content.ISyncContext)>
<android.provider.BrowserContract.SyncState: byte[] get(android.content.ContentProviderClient,android.accounts.Account)>
<android.net.wifi.WifiManager: void setCountryCode(java.lang.String,boolean)>
<android.filterfw.core.Frame: void onFrameFetch()>
<android.graphics.Point: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.os.BatteryStatsHelper: android.os.BatteryStats getStats()>
<android.widget.ViewSwitcher: android.view.View getNextView()>
<android.media.audiofx.PresetReverb.OnParameterChangeListener: void onParameterChange(android.media.audiofx.PresetReverb,int,int,short)>
<android.content.ContentValues: java.lang.Integer getAsInteger(java.lang.String)>
<android.os.Trace: void beginSection(java.lang.String)>
<android.view.RenderNodeAnimator: void <init>(android.graphics.CanvasProperty,int,float)>
<com.android.internal.widget.ToolbarWidgetWrapper: void setEmbeddedTabView(com.android.internal.widget.ScrollingTabContainerView)>
<android.view.IWindowFocusObserver: void focusLost(android.os.IBinder)>
<android.print.PrinterDiscoverySession: void setOnPrintersChangeListener(android.print.PrinterDiscoverySession.OnPrintersChangeListener)>
<android.content.IntentSender.SendIntentException: void <init>(java.lang.Exception)>
<android.media.MediaDrm.OnEventListener: void onEvent(android.media.MediaDrm,byte[],int,int,byte[])>
<android.view.accessibility.AccessibilityNodeProvider: boolean performAction(int,int,android.os.Bundle)>
<android.widget.Spinner: void setOnItemClickListenerInt(android.widget.AdapterView.OnItemClickListener)>
<android.bluetooth.IBluetoothHeadset: java.util.List getConnectedDevices()>
<android.net.wifi.p2p.WifiP2pDeviceList: void updateGroupCapability(java.lang.String,int)>
<android.widget.RemoteViewsService.RemoteViewsFactory: void onCreate()>
<android.view.MotionEvent: int getFlags()>
<android.view.accessibility.AccessibilityManager: boolean isTouchExplorationEnabled()>
<android.widget.CalendarView.CalendarViewDelegate: long getMaxDate()>
<android.media.RemoteDisplayState: boolean isValid()>
<android.nfc.tech.MifareClassic: int getBlockCountInSector(int)>
<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>
<com.android.internal.os.BatteryStatsImpl.Uid: void noteWifiMulticastDisabledLocked(long)>
<android.opengl.GLSurfaceView: void setEGLWindowSurfaceFactory(android.opengl.GLSurfaceView.EGLWindowSurfaceFactory)>
<android.telecom.RemoteConnection.Callback: void onConferenceableConnectionsChanged(android.telecom.RemoteConnection,java.util.List)>
<android.webkit.WebViewProvider.ViewDelegate: void onScrollChanged(int,int,int,int)>
<android.util.JsonWriter: void setLenient(boolean)>
<android.provider.DocumentsContract: android.net.Uri buildRecentDocumentsUri(java.lang.String,java.lang.String)>
<com.android.internal.os.BatteryStatsImpl: long getWifiSupplStateTime(int,long,int)>
<android.media.projection.MediaProjectionManager: android.media.projection.MediaProjectionInfo getActiveProjectionInfo()>
<android.animation.LayoutTransition: void enableTransitionType(int)>
<android.widget.ScrollBarDrawable: void setAlwaysDrawHorizontalTrack(boolean)>
<com.android.internal.widget.multiwaveview.GlowPadView: void setEnableTarget(int,boolean)>
<android.media.AudioTrack: int getAudioFormat()>
<android.transition.TransitionSet: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.internal.view.menu.ListMenuPresenter: void saveHierarchyState(android.os.Bundle)>
<android.renderscript.ScriptIntrinsicColorMatrix: void setColorMatrix(android.renderscript.Matrix4f)>
<android.app.Notification.Builder: android.app.Notification.Builder setWhen(long)>
<android.net.VpnService: boolean protect(java.net.DatagramSocket)>
<android.renderscript.ScriptIntrinsicBlend: void forEachAdd(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>
<com.google.android.util.AbstractMessageParser.FlickrPhoto: java.lang.String getUrl()>
<android.graphics.Camera: float dotWithNormal(float,float,float)>
<com.android.internal.util.BitwiseOutputStream: byte[] toByteArray()>
<android.view.View: android.view.View.AccessibilityDelegate getAccessibilityDelegate()>
<android.app.SearchableInfo: int getInputType()>
<android.net.NetworkUtils: java.lang.String[] makeStrings(java.util.Collection)>
<android.animation.AnimatorInflater: android.animation.Animator loadAnimator(android.content.Context,int)>
<android.preference.MultiCheckPreference: void setValues(boolean[])>
<android.view.accessibility.CaptioningManager.CaptioningChangeListener: void onLocaleChanged(java.util.Locale)>
<android.widget.ExpandableListAdapter: boolean isEmpty()>
<android.app.ActivityManager.AppTask: void setExcludeFromRecents(boolean)>
<android.widget.ProgressBar: android.graphics.PorterDuff.Mode getProgressTintMode()>
<android.telephony.TelephonyManager: java.lang.String getCdmaMdn(long)>
<android.content.res.ColorStateList: void <init>(int[][],int[])>
<android.media.tv.TvInputManager.SessionCallback: void onChannelRetuned(android.media.tv.TvInputManager.Session,android.net.Uri)>
<android.preference.MultiCheckPreference: void onRestoreInstanceState(android.os.Parcelable)>
<android.view.MenuInflater: void inflate(int,android.view.Menu)>
<com.android.internal.view.menu.IconMenuView: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.text.style.ImageSpan: void <init>(android.content.Context,android.net.Uri,int)>
<android.webkit.WebView: void freeMemory()>
<android.renderscript.Element: android.renderscript.Element ELEMENT(android.renderscript.RenderScript)>
<com.android.internal.widget.ScrollingTabContainerView: void setContentHeight(int)>
<android.hardware.camera2.legacy.SurfaceTextureRenderer: void configureSurfaces(java.util.Collection)>
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String toString()>
<android.os.BatteryStats.HistoryTag: boolean equals(java.lang.Object)>
<android.graphics.drawable.InsetDrawable: void draw(android.graphics.Canvas)>
<android.media.ClosedCaptionRenderer: android.media.SubtitleTrack createTrack(android.media.MediaFormat)>
<android.app.ActionBar: int getSelectedNavigationIndex()>
<android.renderscript.ScriptIntrinsicLUT: android.renderscript.ScriptIntrinsicLUT create(android.renderscript.RenderScript,android.renderscript.Element)>
<android.opengl.GLES30: void glGetActiveUniformBlockName(int,int,int,int[],int,byte[],int)>
<com.android.internal.widget.DecorToolbar: void setMenuPrepared()>
<android.view.ViewRootImpl: void childDrawableStateChanged(android.view.View)>
<android.app.admin.IDevicePolicyManager: java.lang.String getProfileOwnerName(int)>
<android.hardware.display.IDisplayManager: void releaseVirtualDisplay(android.hardware.display.IVirtualDisplayCallback)>
<android.media.projection.IMediaProjection: boolean canProjectAudio()>
<android.opengl.GLES10: void glDepthRangex(int,int)>
<android.webkit.WebSettings: void setMinimumLogicalFontSize(int)>
<android.preference.MultiSelectListPreference: void setEntryValues(java.lang.CharSequence[])>
<android.hardware.camera2.CaptureRequest.Builder: void removeTarget(android.view.Surface)>
<android.view.ActionMode: void invalidate()>
<android.os.Debug: int getGlobalGcInvocationCount()>
<android.webkit.WebView: void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.nfc.NfcAdapter: boolean invokeBeam(android.app.Activity)>
<android.hardware.camera2.params.MeteringRectangle: java.lang.String toString()>
<android.os.IInterface: android.os.IBinder asBinder()>
<android.widget.BaseExpandableListAdapter: boolean areAllItemsEnabled()>
<android.net.NetworkCapabilities: android.net.NetworkCapabilities removeCapability(int)>
<android.hardware.location.GeofenceHardwareMonitorEvent: java.lang.String toString()>
<android.media.projection.MediaProjectionInfo: java.lang.String toString()>
<android.media.MediaRouterClientState: int describeContents()>
<android.net.NetworkInfo: boolean isAvailable()>
<android.os.BatteryStats.HistoryPrinter: void printNextItem(java.io.PrintWriter,android.os.BatteryStats.HistoryItem,long,boolean,boolean)>
<android.view.ViewStub: void onMeasure(int,int)>
<android.net.NetworkIdentity: java.lang.String toString()>
<android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setLabel(java.lang.CharSequence)>
<android.view.MenuItem: boolean isEnabled()>
<android.printservice.PrintJob: boolean block(java.lang.String)>
<android.net.wifi.p2p.WifiP2pManager: void getNfcHandoverSelect(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.HandoverMessageListener)>
<android.accessibilityservice.AccessibilityService: void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.opengl.GLES31: void glDispatchComputeIndirect(long)>
<android.util.FloatMath: float sqrt(float)>
<android.renderscript.Path: android.renderscript.Path createDynamicPath(android.renderscript.RenderScript,android.renderscript.Path.Primitive,float,android.renderscript.Allocation)>
<android.widget.DatePicker.DatePickerDelegate: void setValidationCallback(android.widget.DatePicker.ValidationCallback)>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator rotationBy(float)>
<android.net.UrlQuerySanitizer: void <init>(java.lang.String)>
<android.app.Service: void onDestroy()>
<android.content.ContentProvider: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)>
<android.widget.GridLayout.LayoutParams: void <init>(android.widget.GridLayout.LayoutParams)>
<android.net.wifi.IWifiManager: void setWifiApConfiguration(android.net.wifi.WifiConfiguration)>
<android.widget.ProgressBar: void drawableStateChanged()>
<android.widget.ZoomControls: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.text.method.ArrowKeyMovementMethod: boolean canSelectArbitrarily()>
<android.media.AudioRecord: void <init>(int,int,int,int,int)>
<android.os.StrictMode: void onWebViewMethodCalledOnWrongThread(java.lang.Throwable)>
<android.webkit.WebView: boolean canZoomOut()>
<android.renderscript.Allocation: void copy1DRangeFromUnchecked(int,int,java.lang.Object)>
<android.webkit.ClientCertRequest: void ignore()>
<android.graphics.YuvImage: int getYuvFormat()>
<com.android.internal.view.IInputMethodSession: void toggleSoftInput(int,int)>
<android.opengl.GLES10Ext: int glQueryMatrixxOES(java.nio.IntBuffer,java.nio.IntBuffer)>
<android.content.res.AssetFileDescriptor.AutoCloseOutputStream: void <init>(android.content.res.AssetFileDescriptor)>
<com.android.internal.widget.SlidingTab: void onMeasure(int,int)>
<android.preference.CheckBoxPreference: void onBindView(android.view.View)>
<android.view.WindowManagerPolicy.WindowManagerFuncs: android.view.WindowManagerPolicy.FakeWindow addFakeWindow(android.os.Looper,android.view.InputEventReceiver.Factory,java.lang.String,int,int,int,boolean,boolean,boolean)>
<android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)>
<com.android.internal.widget.EditableInputConnection: boolean commitCompletion(android.view.inputmethod.CompletionInfo)>
<android.view.GestureDetector.OnDoubleTapListener: boolean onDoubleTap(android.view.MotionEvent)>
<com.android.internal.util.XmlUtils: java.util.HashSet readSetXml(java.io.InputStream)>
<android.app.admin.IDevicePolicyManager: boolean isUninstallBlocked(android.content.ComponentName,java.lang.String)>
<com.android.internal.policy.PolicyManager: android.view.FallbackEventHandler makeNewFallbackEventHandler(android.content.Context)>
<android.widget.SimpleCursorAdapter: int getStringConversionColumn()>
<android.filterfw.core.GraphRunner: boolean isRunning()>
<android.app.AppGlobals: int getIntCoreSetting(java.lang.String,int)>
<android.app.Activity: void finishActivityFromChild(android.app.Activity,int)>
<android.text.style.TtsSpan.TimeBuilder: android.text.style.TtsSpan.TimeBuilder setMinutes(int)>
<android.hardware.camera2.params.TonemapCurve: void <init>(float[],float[],float[])>
<android.media.AudioSystem.ErrorCallback: void onError(int)>
<android.hardware.display.WifiDisplayStatus: void <init>(int,int,int,android.hardware.display.WifiDisplay,android.hardware.display.WifiDisplay[],android.hardware.display.WifiDisplaySessionInfo)>
<android.widget.QuickContactBadge: void setMode(int)>
<com.android.internal.view.menu.MenuItemImpl: void actionFormatChanged()>
<android.filterpacks.imageproc.SharpenFilter: void <init>(java.lang.String)>
<android.view.InputDevice: java.util.List getMotionRanges()>
<android.app.Instrumentation: void waitForIdleSync()>
<android.net.NetworkUtils: java.net.InetAddress intToInetAddress(int)>
<android.graphics.Rect: boolean intersects(android.graphics.Rect,android.graphics.Rect)>
<android.os.BatteryManagerInternal: int getInvalidCharger()>
<android.net.SamplingDataTracker: int getSampleDuration()>
<android.graphics.drawable.TransitionDrawable: void reverseTransition(int)>
<android.view.MenuItem: android.view.MenuItem setActionView(int)>
<android.speech.tts.SynthesisRequest: java.lang.CharSequence getCharSequenceText()>
<android.net.Uri: java.lang.String getQuery()>
<android.app.Dialog: void setOnKeyListener(android.content.DialogInterface.OnKeyListener)>
<android.view.View: void onCreateContextMenu(android.view.ContextMenu)>
<android.media.AudioService: void avrcpSupportsAbsoluteVolume(java.lang.String,boolean)>
<android.hardware.hdmi.IHdmiControlService: void deviceSelect(int,android.hardware.hdmi.IHdmiControlCallback)>
<android.graphics.Bitmap: void setDefaultDensity(int)>
<com.android.internal.view.IInputMethodManager: void addClient(com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext,int,int)>
<android.content.IContentService: void cancelSyncAsUser(android.accounts.Account,java.lang.String,android.content.ComponentName,int)>
<android.os.BaseBundle: void clear()>
<android.view.Window: void injectInputEvent(android.view.InputEvent)>
<android.preference.PreferenceFragment: android.preference.Preference findPreference(java.lang.CharSequence)>
<android.view.View.AttachInfo.Callbacks: void playSoundEffect(int)>
<android.view.Window: void setUiOptions(int,int)>
<android.hardware.camera2.marshal.MarshalHelpers: java.lang.Class wrapClassIfPrimitive(java.lang.Class)>
<android.media.audiofx.EnvironmentalReverb: void setRoomHFLevel(short)>
<android.widget.MediaController: void setAnchorView(android.view.View)>
<android.bluetooth.IBluetooth: int getAdapterConnectionState()>
<com.android.internal.widget.SlidingTab: void onLayout(boolean,int,int,int,int)>
<android.hardware.usb.UsbAccessory: java.lang.String getModel()>
<android.app.admin.DevicePolicyManager: void uninstallCaCert(android.content.ComponentName,byte[])>
<android.mtp.MtpDevice: long getParent(int)>
<android.widget.HeaderViewListAdapter: android.widget.Filter getFilter()>
<android.view.ViewDebug: void capture(android.view.View,java.io.OutputStream,android.view.View)>
<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>
<android.text.method.DialerKeyListener: int lookup(android.view.KeyEvent,android.text.Spannable)>
<android.app.FragmentManager: void popBackStack(int,int)>
<android.service.notification.StatusBarNotification: android.os.UserHandle getUser()>
<android.app.LoaderManagerImpl: void destroyLoader(int)>
<android.content.ContentResolver: void addPeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle,long)>
<android.transition.ChangeText: android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofInt(android.util.Property,int[])>
<android.content.ContextWrapper: void grantUriPermission(java.lang.String,android.net.Uri,int)>
<com.android.internal.util.StateMachine: void onQuitting()>
<android.webkit.WebViewProvider.ViewDelegate: void preDispatchDraw(android.graphics.Canvas)>
<android.view.WindowManagerPolicy.WindowState: boolean isDefaultDisplay()>
<android.accounts.AuthenticatorDescription: void <init>(java.lang.String,java.lang.String,int,int,int,int)>
<android.content.BroadcastReceiver: void setResultData(java.lang.String)>
<android.media.tv.TvInputInfo: java.lang.String getId()>
<com.android.internal.widget.ScrollingTabContainerView: void <init>(android.content.Context)>
<android.media.tv.ITvInputSessionWrapper: void appPrivateCommand(java.lang.String,android.os.Bundle)>
<android.view.animation.LayoutAnimationController: void setInterpolator(android.view.animation.Interpolator)>
<android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings.Builder setReportDelay(long)>
<android.graphics.drawable.LayerDrawable: int getOpacity()>
<android.content.pm.ApplicationInfo: void setSplitCodePaths(java.lang.String[])>
<android.os.AsyncTask: void init()>
<android.telecom.VideoProfile.VideoState: boolean isReceptionEnabled(int)>
<android.graphics.drawable.DrawableContainer: int getCurrentIndex()>
<android.renderscript.ScriptIntrinsicConvolve5x5: android.renderscript.Script.KernelID getKernelID()>
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setShowAsActionFlags(int)>
<android.webkit.WebViewProvider: int getContentWidth()>
<android.preference.MultiCheckPreference: void setSummary(java.lang.CharSequence)>
<android.widget.ZoomControls: void setIsZoomOutEnabled(boolean)>
<android.app.Notification: java.lang.CharSequence safeCharSequence(java.lang.CharSequence)>
<android.app.admin.DevicePolicyManager: int getMaximumFailedPasswordsForWipe(android.content.ComponentName,int)>
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothServerSocket listenUsingEncryptedRfcommWithServiceRecord(java.lang.String,java.util.UUID)>
<android.graphics.Rect: java.lang.String toShortString(java.lang.StringBuilder)>
<android.widget.ViewAnimator: void removeViewsInLayout(int,int)>
<android.net.wifi.WifiManager: int getWifiState()>
<com.android.internal.os.BatteryStatsImpl.Uid: long getWifiBatchedScanTime(int,long,int)>
<android.renderscript.Float4: void set(android.renderscript.Float4)>
<android.media.audiofx.LoudnessEnhancer: void <init>(int,int)>
<android.widget.ViewAnimator: int getDisplayedChild()>
<android.util.Pools.SimplePool: void <init>(int)>
<android.content.Context: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<android.os.storage.StorageVolume: java.lang.String getDescription(android.content.Context)>
<android.app.Activity: void setContentTransitionManager(android.transition.TransitionManager)>
<android.net.NetworkKey: void <init>(android.net.WifiKey)>
<android.view.WindowManager.LayoutParams: void <init>(int,int)>
<android.hardware.location.IActivityRecognitionHardware: boolean unregisterSink(android.hardware.location.IActivityRecognitionHardwareSink)>
<android.content.ContextWrapper: void startActivitiesAsUser(android.content.Intent[],android.os.Bundle,android.os.UserHandle)>
<android.text.util.Rfc822Tokenizer: int findTokenStart(java.lang.CharSequence,int)>
<android.view.View: boolean isVerticalFadingEdgeEnabled()>
<android.media.Image: void close()>
<android.widget.RatingBar: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl: void revokeSession(android.view.inputmethod.InputMethodSession)>
<com.android.internal.view.menu.ActionMenuItem: boolean isActionViewExpanded()>
<android.media.browse.MediaBrowser.MediaItem: java.lang.String getMediaId()>
<android.app.LoaderManager: void destroyLoader(int)>
<android.widget.Switch: java.lang.CharSequence getTextOff()>
<android.text.style.BackgroundColorSpan: void updateDrawState(android.text.TextPaint)>
<android.widget.ImageSwitcher: void setImageURI(android.net.Uri)>
<android.view.View: void dispatchSaveInstanceState(android.util.SparseArray)>
<com.android.internal.content.NativeLibraryHelper.Handle: void close()>
<android.widget.Spinner: boolean performClick()>
<android.app.ActionBar.TabListener: void onTabReselected(android.app.ActionBar.Tab,android.app.FragmentTransaction)>
<android.renderscript.Long3: void add(long)>
<android.media.effect.effects.BackDropperEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>
<android.widget.Toolbar.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>
<android.graphics.Bitmap: int scaleFromDensity(int,int,int)>
<android.transition.ChangeTransform: void captureStartValues(android.transition.TransitionValues)>
<com.google.android.gles_jni.GLImpl: void glMaterialfv(int,int,java.nio.FloatBuffer)>
<android.location.CountryDetector: android.location.Country detectCountry()>
<android.hardware.soundtrigger.IRecognitionStatusCallback: void onRecognitionResumed()>
<android.util.SparseIntArray: int get(int)>
<android.renderscript.Float2: void addAt(int,float)>
<android.print.PrinterInfo: java.lang.String getName()>
<android.view.ViewGroup: void onAnimationEnd()>
<android.text.format.Time: void <init>(java.lang.String)>
<android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,java.util.Date)>
<android.app.admin.IDevicePolicyManager: int getPasswordMinimumUpperCase(android.content.ComponentName,int)>
<android.telecom.PhoneAccount.Builder: android.telecom.PhoneAccount.Builder setShortDescription(java.lang.CharSequence)>
<android.content.IntentFilter.AuthorityEntry: java.lang.String getHost()>
<android.opengl.GLES20: void glUniform2fv(int,int,float[],int)>
<android.text.format.Time: boolean before(android.text.format.Time)>
<android.content.RestrictionsManager: boolean hasRestrictionsProvider()>
<android.media.SubtitleTrack.RenderingWidget: void onDetachedFromWindow()>
<android.widget.TimePicker: void setIs24HourView(java.lang.Boolean)>
<android.widget.ArrayAdapter: void addAll(java.lang.Object[])>
<android.content.ContentProvider: android.os.ParcelFileDescriptor openFileHelper(android.net.Uri,java.lang.String)>
<com.android.internal.widget.AutoScrollHelper.AbsListViewAutoScroller: boolean canTargetScrollHorizontally(int)>
<android.net.IConnectivityManager: int tether(java.lang.String)>
<android.util.JsonWriter: android.util.JsonWriter name(java.lang.String)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setPositiveButton(int,android.content.DialogInterface.OnClickListener)>
<android.widget.AdapterView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.android.internal.policy.IFaceLockInterface: void startWithoutUi()>
<android.app.IActivityManager: boolean stopServiceToken(android.content.ComponentName,android.os.IBinder,int)>
<android.location.GpsMeasurement: void resetDopplerShiftInHz()>
<android.media.AudioAttributes: int getContentType()>
<android.net.IConnectivityManager: boolean updateLockdownVpn()>
<android.widget.ListPopupWindow: void dismiss()>
<android.app.ActionBar: android.app.ActionBar.Tab getTabAt(int)>
<android.os.PowerManagerInternal: boolean getLowPowerModeEnabled()>
<com.android.internal.view.menu.MenuPopupHelper: void dismiss()>
<android.app.Activity: void startIntentSenderFromChild(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)>
<android.graphics.drawable.AnimatedRotateDrawable: boolean isRunning()>
<android.view.Window.Callback: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode.Callback)>
<android.filterfw.core.FilterPort: void pushFrame(android.filterfw.core.Frame)>
<android.os.DropBoxManager.Entry: void writeToParcel(android.os.Parcel,int)>
<android.graphics.Rect: int centerY()>
<android.view.accessibility.AccessibilityWindowInfo: void setLayer(int)>
<com.android.internal.widget.ActionBarContextView: boolean shouldDelayChildPressedState()>
<android.util.ExceptionUtils: java.lang.String getCompleteMessage(java.lang.String,java.lang.Throwable)>
<android.content.pm.PackageItemInfo: android.content.pm.ApplicationInfo getApplicationInfo()>
<android.renderscript.Byte3: void add(android.renderscript.Byte3)>
<android.view.KeyCharacterMap: android.view.KeyCharacterMap.FallbackAction getFallbackAction(int,int)>
<android.renderscript.RenderScript: android.renderscript.RenderScript create(android.content.Context,int)>
<android.database.sqlite.SQLiteDatatypeMismatchException: void <init>(java.lang.String)>
<android.media.MediaFile: boolean isAudioFileType(int)>
<android.app.ActivityManager.TaskDescription: void saveToXml(org.xmlpull.v1.XmlSerializer)>
<android.content.res.ObbInfo: java.lang.String toString()>
<android.renderscript.Long3: void addAt(int,long)>
<android.text.format.DateUtils: java.lang.String formatElapsedTime(long)>
<android.content.IContentProvider: android.os.ICancellationSignal createCancellationSignal()>
<com.google.android.gles_jni.GLImpl: void glTexEnvx(int,int,int)>
<android.view.inputmethod.BaseInputConnection: java.lang.CharSequence getTextBeforeCursor(int,int)>
<com.android.ims.internal.IImsConfig: void setProvisionedStringValue(int,java.lang.String)>
<android.hardware.soundtrigger.IRecognitionStatusCallback: void onError(int)>
<android.app.IActivityManager: android.content.ComponentName getActivityClassForToken(android.os.IBinder)>
<android.app.Service: boolean stopSelfResult(int)>
<android.os.CommonClock: int getEstimatedError()>
<android.bluetooth.IBluetoothGatt: void unregisterServer(int)>
<android.app.AlertDialog: android.widget.Button getButton(int)>
<android.net.wifi.WifiManager: boolean saveConfiguration()>
<android.content.ContentResolver: android.content.ContentProviderClient acquireContentProviderClient(java.lang.String)>
<android.hardware.hdmi.HdmiRecordListener.TimerStatusData: int getNotProgammedError()>
<android.app.IActivityManager: android.graphics.Bitmap getTaskDescriptionIcon(java.lang.String)>
<android.widget.VideoView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.util.AndroidException: void <init>(java.lang.String,java.lang.Throwable)>
<android.util.ArrayMap: int indexOfKey(java.lang.Object)>
<android.webkit.WebViewProvider: boolean overlayHorizontalScrollbar()>
<android.telecom.ParcelableConference: android.telecom.PhoneAccountHandle getPhoneAccount()>
<android.media.tv.TvContract: android.net.Uri buildChannelLogoUri(long)>
<android.content.pm.IPackageInstallerCallback: void onSessionCreated(int)>
<com.android.internal.widget.ToolbarWidgetWrapper: int getDisplayOptions()>
<android.bluetooth.BluetoothDevice: byte[] convertPinToBytes(java.lang.String)>
<android.util.SparseIntArray: int valueAt(int)>
<com.android.internal.view.menu.IconMenuView.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<android.view.inputmethod.CorrectionInfo: int getOffset()>
<android.database.CursorWindow: boolean isNull(int,int)>
<com.android.internal.widget.LockPatternUtils: boolean savedPasswordExists()>
<android.os.BatteryStats: long getBluetoothOnTime(long,int)>
<android.telephony.SignalStrength: boolean isGsm()>
<android.content.PeriodicSync: boolean syncExtrasEquals(android.os.Bundle,android.os.Bundle)>
<android.bluetooth.BluetoothGattCallback: void onCharacteristicRead(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic,int)>
<android.telephony.ServiceState: void setEmergencyOnly(boolean)>
<android.inputmethodservice.Keyboard.Key: int[] getCurrentDrawableState()>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofMultiFloat(java.lang.Object,java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,java.lang.Object[])>
<android.webkit.WebView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>
<android.preference.PreferenceGroup: void onAttachedToActivity()>
<com.android.internal.util.XmlUtils: void writeByteArrayXml(byte[],java.lang.String,org.xmlpull.v1.XmlSerializer)>
<android.renderscript.Long2: void addMultiple(android.renderscript.Long2,long)>
<android.view.inputmethod.SparseRectFArray: android.graphics.RectF get(int)>
<android.os.Looper: boolean isCurrentThread()>
<android.graphics.Rect: void offset(int,int)>
<android.webkit.WebSettings: int getCacheMode()>
<android.view.MenuItem: boolean isVisible()>
<android.renderscript.Element: android.renderscript.Element U32_3(android.renderscript.RenderScript)>
<android.opengl.GLES10: void glLightxv(int,int,java.nio.IntBuffer)>
<android.drm.DrmInfoRequest: void put(java.lang.String,java.lang.Object)>
<android.opengl.GLES31Ext: void glMinSampleShadingOES(float)>
<com.android.internal.widget.ActionBarOverlayLayout: boolean onNestedFling(android.view.View,float,float,boolean)>
<com.android.internal.widget.ResolverDrawerLayout: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.opengl.GLES30: void glDrawArraysInstanced(int,int,int,int)>
<android.renderscript.Int4: int get(int)>
<android.speech.SpeechRecognizer: boolean isRecognitionAvailable(android.content.Context)>
<android.text.Selection: void selectAll(android.text.Spannable)>
<com.android.internal.widget.DecorToolbar: void setTitle(java.lang.CharSequence)>
<android.widget.TableRow: android.view.View getVirtualChildAt(int)>
<android.opengl.GLES30: void glUniformMatrix2x4fv(int,int,boolean,float[],int)>
<android.printservice.PrinterDiscoverySession: boolean isPrinterDiscoveryStarted()>
<android.widget.GridView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.database.MergeCursor: byte[] getBlob(int)>
<android.bluetooth.BluetoothAdapter: boolean changeApplicationBluetoothState(boolean,android.bluetooth.BluetoothAdapter.BluetoothStateChangeCallback)>
<android.util.TypedValue: float getFraction(float,float)>
<android.webkit.WebViewProvider: void goBack()>
<com.android.internal.inputmethod.InputMethodUtils.InputMethodSettings: java.util.List getEnabledInputMethodListLocked()>
<android.graphics.YuvImage: byte[] getYuvData()>
<android.filterfw.core.SimpleFrame: void setData(java.nio.ByteBuffer,int,int)>
<com.android.internal.widget.LockPatternView: void setOnPatternListener(com.android.internal.widget.LockPatternView.OnPatternListener)>
<android.filterfw.core.RandomScheduler: void reset()>
<android.app.ActivityManager.TaskDescription: void <init>(java.lang.String,android.graphics.Bitmap,int)>
<android.content.pm.LabeledIntent: void <init>(android.content.Intent,java.lang.String,java.lang.CharSequence,int)>
<android.widget.ListPopupWindow: void setVerticalOffset(int)>
<android.widget.GridLayout: android.widget.GridLayout.Spec spec(int,int)>
<com.android.internal.view.IInputContext: void clearMetaKeyStates(int)>
<android.text.DynamicLayout: void <init>(java.lang.CharSequence,java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean)>
<android.renderscript.Float4: void div(float)>
<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable.ConstantState getConstantState()>
<android.filterpacks.base.OutputStreamTarget: void process(android.filterfw.core.FilterContext)>
<android.os.Trace: void asyncTraceEnd(long,java.lang.String,int)>
<com.android.internal.app.WindowDecorActionBar: int getTabCount()>
<android.renderscript.Float2: void div(float)>
<android.media.AudioManager: void setSpeakerphoneOn(boolean)>
<android.hardware.camera2.params.StreamConfigurationDuration: int getHeight()>
<android.net.NetworkRequest: void <init>(android.net.NetworkCapabilities,int,int)>
<android.opengl.GLES31Ext: java.lang.String[] glGetDebugMessageLogKHR(int,int[],int,int[],int,int[],int,int[],int)>
<com.android.internal.util.GrowingArrayUtils: int growSize(int)>
<android.content.UndoOperation: void redo()>
<android.net.NetworkRequest.Builder: android.net.NetworkRequest.Builder setNetworkSpecifier(java.lang.String)>
<android.widget.AdapterViewAnimator: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.graphics.drawable.ColorDrawable: boolean isStateful()>
<android.util.LongSparseLongArray: int size()>
<android.view.ViewGroup: void clearDisappearingChildren()>
<android.os.ParcelFormatException: void <init>(java.lang.String)>
<android.webkit.WebViewProvider.ViewDelegate: void onAttachedToWindow()>
<android.widget.AdapterView: int getPositionForView(android.view.View)>
<android.media.AudioService: void startBluetoothScoVirtualCall(android.os.IBinder)>
<android.view.Window: android.view.View peekDecorView()>
<android.content.res.Resources: android.content.res.Resources getSystem()>
<android.telecom.Call.Listener: void onChildrenChanged(android.telecom.Call,java.util.List)>
<android.widget.Scroller: void setFinalY(int)>
<android.app.IActivityManager: java.lang.String getProviderMimeType(android.net.Uri,int)>
<android.net.NetworkScoreManager: void <init>(android.content.Context)>
<android.app.AlarmManager: void setInexactRepeating(int,long,long,android.app.PendingIntent)>
<com.android.internal.widget.ToolbarWidgetWrapper: boolean showOverflowMenu()>
<com.android.internal.util.IState: void exit()>
<android.net.wifi.p2p.WifiP2pDevice: boolean isInvitationCapable()>
<android.opengl.GLES30: java.lang.String glGetStringi(int,int)>
<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtype()>
<android.app.SearchDialog: boolean show(java.lang.String,boolean,android.content.ComponentName,android.os.Bundle)>
<android.hardware.camera2.legacy.CameraDeviceState.CameraDeviceStateListener: void onError(int,android.hardware.camera2.legacy.RequestHolder)>
<android.hardware.camera2.params.StreamConfiguration: void <init>(int,int,int,boolean)>
<android.os.storage.StorageVolume: int getFatVolumeId()>
<com.android.internal.view.animation.NativeInterpolatorFactoryHelper: long createOvershootInterpolator(float)>
<android.net.wifi.IWifiManager: android.net.wifi.WifiInfo getConnectionInfo()>
<android.renderscript.FileA3D: android.renderscript.FileA3D.IndexEntry getIndexEntry(int)>
<android.telecom.Connection.VideoProvider: void changePeerDimensions(int,int)>
<android.telecom.ParcelableConnection: int getHandlePresentation()>
<com.android.internal.os.BatteryStatsImpl.Counter: void logState(android.util.Printer,java.lang.String)>
<android.database.CursorWrapper: boolean moveToLast()>
<android.graphics.drawable.shapes.RoundRectShape: void getOutline(android.graphics.Outline)>
<android.renderscript.Matrix3f: void loadTranslate(float,float)>
<android.os.StrictMode: void setVmPolicy(android.os.StrictMode.VmPolicy)>
<android.provider.VoicemailContract.Status: android.net.Uri buildSourceUri(java.lang.String)>
<android.hardware.soundtrigger.SoundTrigger.RecognitionEvent: java.lang.String toString()>
<android.media.AudioGain: int stepValue()>
<android.content.ContentProviderClient: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String)>
<com.android.internal.os.ProcessCpuTracker: int getLastSoftIrqTime()>
<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>
<android.telephony.SignalStrength: int getLteCqi()>
<android.opengl.GLES11Ext: boolean glIsFramebufferOES(int)>
<android.media.WebVttRenderingWidget: void onDetachedFromWindow()>
<android.app.ActivityManagerProxy: void keyguardWaitingForActivityDrawn()>
<android.view.LayoutInflater: void setPrivateFactory(android.view.LayoutInflater.Factory2)>
<com.android.internal.widget.ILockSettings: void setLockPattern(java.lang.String,int)>
<android.renderscript.ProgramStore.Builder: android.renderscript.ProgramStore.Builder setColorMaskEnabled(boolean,boolean,boolean,boolean)>
<android.renderscript.Matrix4f: void translate(float,float,float)>
<android.nfc.tech.MifareClassic: byte[] readBlock(int)>
<android.widget.Toolbar.LayoutParams: void <init>(android.widget.Toolbar.LayoutParams)>
<android.filterfw.core.ShaderProgram: void process(android.filterfw.core.Frame[],android.filterfw.core.Frame)>
<android.renderscript.Double3: android.renderscript.Double3 sub(android.renderscript.Double3,android.renderscript.Double3)>
<android.service.dreams.IDreamManager: void setDreamComponents(android.content.ComponentName[])>
<android.net.NetworkStats: long getTotalPackets()>
<android.app.AppOpsManager: boolean opAllowsReset(int)>
<android.view.MagnificationSpec: void writeToParcel(android.os.Parcel,int)>
<android.net.wifi.ScanSettings: boolean isValid()>
<android.os.UserManager: void setDefaultGuestRestrictions(android.os.Bundle)>
<android.speech.tts.ITextToSpeechService: boolean isSpeaking()>
<android.text.method.ReplacementTransformationMethod: char[] getOriginal()>
<android.filterpacks.imageproc.TintFilter: void initProgram(android.filterfw.core.FilterContext,int)>
<android.graphics.Color: int blue(int)>
<com.android.internal.app.WindowDecorActionBar: void setLogo(int)>
<android.view.View: boolean canResolveLayoutDirection()>
<android.app.IActivityManager: android.os.ParcelFileDescriptor openContentUri(android.net.Uri)>
<com.android.internal.os.PowerProfile: int getNumSpeedSteps()>
<com.android.internal.app.MediaRouteDialogPresenter: android.app.Dialog createDialog(android.content.Context,int,android.view.View.OnClickListener)>
<android.telephony.cdma.CdmaCellLocation: int getSystemId()>
<android.widget.PopupWindow: void showAsDropDown(android.view.View,int,int,int)>
<android.view.InputChannel: java.lang.String getName()>
<android.view.accessibility.AccessibilityRecord: void setItemCount(int)>
<android.content.pm.PackageManager: android.content.pm.KeySet getSigningKeySet(java.lang.String)>
<com.android.internal.widget.ResolverDrawerLayout: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.net.wifi.IWifiManager: void enableAggressiveHandover(int)>
<android.view.inputmethod.InputMethodSubtypeArray: void writeToParcel(android.os.Parcel)>
<android.gesture.GestureStroke: android.graphics.Path toPath(float,float,int)>
<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>
<android.media.MediaPlayer: boolean isPlaying()>
<android.telephony.CellSignalStrengthCdma: int getCdmaLevel()>
<com.android.internal.widget.ILockSettings: void setBoolean(java.lang.String,boolean,int)>
<com.android.internal.app.WindowDecorActionBar: void setHomeButtonEnabled(boolean)>
<android.net.wifi.WifiLinkLayerStats: void writeToParcel(android.os.Parcel,int)>
<android.view.InputDevice.MotionRange: float getRange()>
<android.content.ContentResolver: java.lang.String getType(android.net.Uri)>
<android.media.MediaRouter.RouteInfo: int getVolume()>
<com.android.internal.widget.DrawableHolder: int getWidth()>
<android.content.IContentService: android.content.SyncAdapterType[] getSyncAdapterTypesAsUser(int)>
<android.renderscript.Script: void bindAllocation(android.renderscript.Allocation,int)>
<android.net.WebAddress: java.lang.String getAuthInfo()>
<android.media.session.ISessionController: void previous()>
<android.content.Intent: java.lang.Object getExtra(java.lang.String)>
<android.app.IAppTask: void setExcludeFromRecents(boolean)>
<com.android.internal.util.IndentingPrintWriter: void <init>(java.io.Writer,java.lang.String)>
<com.android.internal.widget.SlidingTab: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<android.app.Activity: android.media.session.MediaController getMediaController()>
<android.widget.Editor: void setError(java.lang.CharSequence,android.graphics.drawable.Drawable)>
<android.filterfw.core.GLFrame: int getTextureId()>
<android.service.dreams.IDreamManager: void startDozing(android.os.IBinder,int,int)>
<android.opengl.GLES20: void glGetAttachedShaders(int,int,java.nio.IntBuffer,java.nio.IntBuffer)>
<android.filterpacks.imageproc.SaturateFilter: void <init>(java.lang.String)>
<android.webkit.WebSettings: void setTextZoom(int)>
<android.app.ActivityManagerProxy: void appNotRespondingViaProvider(android.os.IBinder)>
<android.app.RemoteInput: android.os.Bundle getResultsFromIntent(android.content.Intent)>
<android.opengl.GLES20: void glGetShaderSource(int,int,int[],int,byte[],int)>
<android.database.sqlite.SQLiteConnection: void finalize()>
<android.content.pm.PathPermission: void <init>(android.os.Parcel)>
<android.app.ActivityManagerProxy: void moveTaskToBack(int)>
<android.widget.TextView: int getExtendedPaddingTop()>
<com.android.internal.widget.PasswordEntryKeyboardHelper: void onRelease(int)>
<com.android.ims.internal.IImsCallSessionListener: void callSessionRemoveParticipantsRequestDelivered(com.android.ims.internal.IImsCallSession)>
<android.preference.SeekBarVolumizer: void startSample()>
<android.accounts.IAccountAuthenticator: void getAccountCredentialsForCloning(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account)>
<android.view.View: boolean isTextDirectionInherited()>
<android.view.animation.Animation.AnimationListener: void onAnimationStart(android.view.animation.Animation)>
<android.util.IntProperty: void <init>(java.lang.String)>
<android.app.ActivityManagerProxy: android.os.Debug.MemoryInfo[] getProcessMemoryInfo(int[])>
<android.graphics.drawable.AnimatedVectorDrawable: void setHotspot(float,float)>
<android.content.Intent: android.content.Intent addCategory(java.lang.String)>
<android.content.pm.IPackageInstaller: int createSession(android.content.pm.PackageInstaller.SessionParams,java.lang.String,int)>
<android.graphics.Canvas: void drawTextOnPath(char[],int,int,android.graphics.Path,float,float,android.graphics.Paint)>
<android.nfc.INfcTag: int connect(int,int)>
<android.widget.Toast: void setText(int)>
<android.net.ConnectivityManager: void supplyMessenger(int,android.os.Messenger)>
<android.view.textservice.SuggestionsInfo: void <init>(int,java.lang.String[],int,int)>
<android.inputmethodservice.InputMethodService: void onExtractingInputChanged(android.view.inputmethod.EditorInfo)>
<android.view.ViewParent: void onStopNestedScroll(android.view.View)>
<android.hardware.camera2.impl.CameraMetadataNative.Key: boolean equals(java.lang.Object)>
<android.bluetooth.BluetoothHeadset: boolean rejectIncomingConnect(android.bluetooth.BluetoothDevice)>
<android.app.Activity: void onCreate(android.os.Bundle)>
<android.media.tv.TvView: void selectTrack(int,java.lang.String)>
<android.net.Uri: android.net.Uri getCanonicalUri()>
<android.app.Activity: android.view.LayoutInflater getLayoutInflater()>
<android.renderscript.Short2: short dotProduct(android.renderscript.Short2,android.renderscript.Short2)>
<android.widget.AbsListView: void scrollListBy(int)>
<com.android.internal.view.menu.IconMenuPresenter: void addItemView(android.view.View,int)>
<android.location.Criteria: void setPowerRequirement(int)>
<android.app.LauncherActivity: android.app.LauncherActivity.ListItem itemForPosition(int)>
<android.hardware.camera2.legacy.CameraDeviceUserShim: int deleteStream(int)>
<android.view.MenuItem: boolean expandActionView()>
<android.util.Xml: void parse(java.lang.String,org.xml.sax.ContentHandler)>
<android.graphics.drawable.VectorDrawable: boolean canApplyTheme()>
<android.opengl.GLES31Ext: void glPatchParameteriEXT(int,int)>
<android.telecom.RemoteConference: int getCallCapabilities()>
<android.view.Display: java.lang.String getName()>
<android.view.View: void setOnLongClickListener(android.view.View.OnLongClickListener)>
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>
<android.hardware.hdmi.HdmiDeviceInfo: int getAdopterId()>
<android.opengl.GLES30: void glSamplerParameterfv(int,int,float[],int)>
<android.bluetooth.BluetoothHealthAppConfiguration: int getDataType()>
<android.telephony.TelephonyManager: java.util.List getCarrierPackageNamesForIntent(android.content.Intent)>
<android.content.res.Resources: float getDimension(int)>
<android.location.LocationManager: android.location.GpsStatus getGpsStatus(android.location.GpsStatus)>
<android.app.FragmentManager: boolean popBackStackImmediate()>
<android.net.DhcpStateMachine: void doQuit()>
<android.opengl.GLES30: void glUniform4ui(int,int,int,int,int)>
<android.service.voice.VoiceInteractionSessionService: void onCreate()>
<android.widget.AppSecurityPermissions: android.view.View getPermissionsView()>
<android.gesture.GestureStore: void load(java.io.InputStream)>
<android.content.res.Resources: java.lang.String getResourcePackageName(int)>
<android.os.INetworkManagementService: void removeVpnUidRanges(int,android.net.UidRange[])>
<com.android.server.LocalServices: void addService(java.lang.Class,java.lang.Object)>
<android.widget.ListView: boolean onKeyDown(int,android.view.KeyEvent)>
<android.webkit.WebView: void setDownloadListener(android.webkit.DownloadListener)>
<android.telecom.InCallService.VideoCall.Listener: void onPeerDimensionsChanged(int,int)>
<android.net.wifi.WifiInfo: boolean getHiddenSSID()>
<android.content.Intent: boolean hasExtra(java.lang.String)>
<com.android.internal.widget.AbsActionBarView: boolean showOverflowMenu()>
<android.hardware.camera2.utils.CameraRuntimeException: void <init>(int,java.lang.String,java.lang.Throwable)>
<android.media.audiofx.Virtualizer.Settings: java.lang.String toString()>
<android.renderscript.Allocation: void copyFrom(float[])>
<android.view.ViewManager: void addView(android.view.View,android.view.ViewGroup.LayoutParams)>
<android.content.pm.LauncherApps.Callback: void onPackageChanged(java.lang.String,android.os.UserHandle)>
<android.app.Activity: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>
<android.widget.AbsListView: int getLeftPaddingOffset()>
<android.filterpacks.imageproc.CropRectFilter: void setupPorts()>
<android.preference.PreferenceManager: android.content.SharedPreferences getDefaultSharedPreferences(android.content.Context)>
<android.text.method.MetaKeyKeyListener: int getMetaState(long)>
<android.content.BroadcastReceiver: android.os.Bundle getResultExtras(boolean)>
<android.app.Dialog: void <init>(android.content.Context)>
<com.android.server.WidgetBackupProvider: void restoreWidgetState(java.lang.String,byte[],int)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,android.util.Property,android.animation.TypeConverter,android.graphics.Path)>
<android.telecom.StatusHints: int hashCode()>
<android.webkit.WebView: void onSizeChanged(int,int,int,int)>
<android.net.NetworkIdentity: android.net.NetworkIdentity buildNetworkIdentity(android.content.Context,android.net.NetworkState)>
<android.app.LoadedApk: java.lang.ClassLoader getClassLoader()>
<android.graphics.drawable.DrawableContainer: int getOpacity()>
<android.net.Network: int hashCode()>
<android.opengl.GLES31: void glProgramUniform2f(int,int,float,float)>
<android.hardware.camera2.legacy.RequestQueue: void <init>(java.util.List)>
<android.telephony.cdma.CdmaSmsCbProgramData: int getMaxMessages()>
<android.app.backup.BackupHelperDispatcher: void addHelper(java.lang.String,android.app.backup.BackupHelper)>
<android.widget.ActivityChooserView: void onDetachedFromWindow()>
<android.telecom.Conference: void destroy()>
<android.webkit.WebView.PrivateAccess: void onScrollChanged(int,int,int,int)>
<android.content.pm.PackageManager: void revokePermission(java.lang.String,java.lang.String)>
<com.android.internal.util.XmlUtils: void writeFloatAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,float)>
<android.media.tv.TvInputManager.Session: void selectTrack(int,java.lang.String)>
<android.os.CommonClock: void release()>
<com.google.android.gles_jni.GLImpl: void glDisableClientState(int)>
<android.hardware.Camera: void release()>
<android.widget.HeaderViewListAdapter: int getFootersCount()>
<android.net.NetworkInfo: boolean isFailover()>
<android.app.ActionBar: void setSelectedNavigationItem(int)>
<com.android.internal.backup.LocalTransport: android.content.Intent configurationIntent()>
<android.text.Selection: boolean moveLeft(android.text.Spannable,android.text.Layout)>
<android.view.MenuItem: android.content.Intent getIntent()>
<android.filterpacks.ui.SurfaceRenderFilter: void surfaceCreated(android.view.SurfaceHolder)>
<android.app.Activity: void finishAffinity()>
<android.text.TextUtils: java.lang.String htmlEncode(java.lang.String)>
<android.app.ActivityView: void onVisibilityChanged(android.view.View,int)>
<android.app.JobSchedulerImpl: int schedule(android.app.job.JobInfo)>
<android.telecom.Conference: android.telecom.AudioState getAudioState()>
<android.telephony.TelephonyManager: java.lang.String getCompleteVoiceMailNumber(long)>
<com.android.internal.util.StateMachine: void sendMessageAtFrontOfQueue(int,int,int,java.lang.Object)>
<android.view.WindowManagerPolicy.WindowState: boolean hideLw(boolean)>
<android.os.BatteryStats.Uid.Pkg.Serv: long getStartTime(long,int)>
<android.widget.TimePicker.TimePickerDelegate: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.app.admin.IDevicePolicyManager: void setUninstallBlocked(android.content.ComponentName,java.lang.String,boolean)>
<android.renderscript.Matrix4f: void loadOrthoWindow(int,int)>
<android.hardware.hdmi.HdmiPlaybackClient: void queryDisplayStatus(android.hardware.hdmi.HdmiPlaybackClient.DisplayStatusCallback)>
<android.transition.TransitionSet: android.transition.TransitionSet setStartDelay(long)>
<android.animation.Animator: boolean isPaused()>
<android.inputmethodservice.ExtractEditLayout: void <init>(android.content.Context)>
<android.graphics.Movie: boolean isOpaque()>
<android.os.SystemClock: long elapsedRealtimeNanos()>
<com.android.internal.widget.PasswordEntryKeyboardHelper: void createKeyboards()>
<android.graphics.drawable.Drawable: boolean setState(int[])>
<android.os.storage.IMountService: void setUsbMassStorageEnabled(boolean)>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getText()>
<android.service.notification.INotificationListener: void onNotificationRankingUpdate(android.service.notification.NotificationRankingUpdate)>
<android.os.Parcel: void readMap(java.util.Map,java.lang.ClassLoader)>
<android.location.ICountryListener: void onCountryDetected(android.location.Country)>
<android.app.admin.IDevicePolicyManager: void enableSystemApp(android.content.ComponentName,java.lang.String)>
<android.content.pm.IPackageInstallerCallback: void onSessionActiveChanged(int,boolean)>
<android.location.CountryDetector: void addCountryListener(android.location.CountryListener,android.os.Looper)>
<android.view.View: boolean computeFitSystemWindows(android.graphics.Rect,android.graphics.Rect)>
<android.content.DefaultDataHandler: void setDocumentLocator(org.xml.sax.Locator)>
<com.android.ims.internal.IImsUt: int updateCallForward(int,int,java.lang.String,int)>
<android.opengl.GLES31: void glProgramUniform1fv(int,int,int,float[],int)>
<android.renderscript.Double3: android.renderscript.Double3 add(android.renderscript.Double3,android.renderscript.Double3)>
<android.hardware.hdmi.HdmiRecordSources: android.hardware.hdmi.HdmiRecordSources.ExternalPlugData ofExternalPlug(int)>
<android.content.UndoOperation: void commit()>
<com.android.internal.app.ProcessStats: java.util.ArrayList collectProcessesLocked(int[],int[],int[],int[],long,java.lang.String,boolean)>
<android.os.Handler: java.lang.String getMessageName(android.os.Message)>
<android.view.GestureDetector.SimpleOnGestureListener: boolean onSingleTapUp(android.view.MotionEvent)>
<android.view.InflateException: void <init>(java.lang.Throwable)>
<android.view.ViewRootImpl: void handleDispatchSystemUiVisibilityChanged(android.view.ViewRootImpl.SystemUiVisibilityInfo)>
<android.filterfw.core.Filter: void <init>(java.lang.String)>
<android.renderscript.Element: android.renderscript.Element U64(android.renderscript.RenderScript)>
<com.android.internal.app.ProcessMap: android.util.ArrayMap getMap()>
<android.app.PendingIntent: android.app.PendingIntent getActivities(android.content.Context,int,android.content.Intent[],int,android.os.Bundle)>
<android.content.UndoOperation: void <init>(android.content.UndoOwner)>
<android.content.PeriodicSync: void <init>(android.accounts.Account,java.lang.String,android.os.Bundle,long,long)>
<android.hardware.camera2.CameraCaptureSession: int capture(android.hardware.camera2.CaptureRequest,android.hardware.camera2.CameraCaptureSession.CaptureCallback,android.os.Handler)>
<android.media.SubtitleTrack.Cue: void onTime(long)>
<android.widget.ScrollView: boolean shouldDelayChildPressedState()>
<android.widget.CheckedTextView: int[] onCreateDrawableState(int)>
<android.widget.TextView: void viewClicked(android.view.inputmethod.InputMethodManager)>
<android.widget.GridLayout: android.widget.GridLayout.Spec spec(int,float)>
<android.widget.ViewFlipper: boolean isAutoStart()>
<com.google.android.gles_jni.EGLImpl: javax.microedition.khronos.egl.EGLSurface eglGetCurrentSurface(int)>
<android.provider.ContactsContract.Contacts: android.net.Uri getLookupUri(android.content.ContentResolver,android.net.Uri)>
<android.media.AudioManager: boolean isWiredHeadsetOn()>
<android.app.Activity: void postponeEnterTransition()>
<android.widget.PopupWindow: boolean isOutsideTouchable()>
<android.util.ArrayMap: boolean containsValue(java.lang.Object)>
<android.bluetooth.IBluetoothGattServerCallback: void onDescriptorReadRequest(java.lang.String,int,int,boolean,int,int,android.os.ParcelUuid,int,android.os.ParcelUuid,android.os.ParcelUuid)>
<android.content.CursorLoader: android.database.Cursor loadInBackground()>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator translationX(float)>
<android.text.format.Time: java.lang.String format2445()>
<com.google.android.gles_jni.GLImpl: void glDrawElements(int,int,int,java.nio.Buffer)>
<android.widget.AbsListView: void onGlobalLayout()>
<android.telecom.ParcelableConnection: java.util.List getConferenceableConnectionIds()>
<android.view.animation.AccelerateInterpolator: float getInterpolation(float)>
<com.android.ims.ImsStreamMediaProfile: java.lang.String toString()>
<com.android.internal.telephony.EncodeException: void <init>(char)>
<android.content.pm.VerifierDeviceIdentity: void writeToParcel(android.os.Parcel,int)>
<android.content.pm.VerifierDeviceIdentity: boolean equals(java.lang.Object)>
<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.animation.StateListAnimator: void addState(int[],android.animation.Animator)>
<android.content.pm.LauncherApps: boolean isActivityEnabled(android.content.ComponentName,android.os.UserHandle)>
<android.media.AudioSystem: int setMasterMute(boolean)>
<android.renderscript.ScriptC: void <init>(android.renderscript.RenderScript,android.content.res.Resources,int)>
<android.opengl.GLES31: void glProgramUniform3f(int,int,float,float,float)>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getLabelFor()>
<android.filterfw.geometry.Point: android.filterfw.geometry.Point minus(float,float)>
<android.media.AudioFormat: int channelCountFromInChannelMask(int)>
<com.android.ims.internal.IImsCallSession: void terminate(int)>
<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>
<android.net.NetworkScorerAppManager: java.util.Collection getAllValidScorers(android.content.Context)>
<android.util.LruCache: void resize(int)>
<android.media.effect.SizeChangeEffect: void apply(int,int,int,int)>
<com.google.android.gles_jni.GLImpl: void glTexParameterfv(int,int,float[],int)>
<com.android.internal.os.BatteryStatsImpl: void noteFullWifiLockReleasedFromSourceLocked(android.os.WorkSource)>
<android.provider.ContactsContract.Contacts: android.net.Uri lookupContact(android.content.ContentResolver,android.net.Uri)>
<android.telephony.CellIdentityLte: boolean equals(java.lang.Object)>
<com.android.internal.app.ProcessStats.ServiceState: java.lang.String toString()>
<android.renderscript.Double2: void set(android.renderscript.Double2)>
<android.telephony.PreciseCallState: int getBackgroundCallState()>
<android.view.ViewStub.OnInflateListener: void onInflate(android.view.ViewStub,android.view.View)>
<android.graphics.Bitmap: void copyPixelsFromBuffer(java.nio.Buffer)>
<android.print.PrintJobInfo: android.print.PrinterId getPrinterId()>
<android.hardware.camera2.impl.CameraDeviceImpl: void setSessionListener(android.hardware.camera2.impl.CameraDeviceImpl.StateCallbackKK)>
<android.app.AlarmManager.AlarmClockInfo: long getTriggerTime()>
<android.widget.ScrollView: float getTopFadingEdgeStrength()>
<android.renderscript.ScriptIntrinsicLUT: android.renderscript.Script.KernelID getKernelID()>
<android.net.NetworkPolicy: java.lang.String toString()>
<android.nfc.tech.Ndef: void <init>(android.nfc.Tag)>
<android.media.MediaRouter: boolean isRouteAvailable(int,int)>
<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<android.widget.Toolbar: void <init>(android.content.Context)>
<android.widget.ImageView: int[] onCreateDrawableState(int)>
<com.android.internal.widget.TextProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.internal.widget.multiwaveview.PointCloud.GlowManager: float getAlpha()>
<android.graphics.drawable.shapes.RectShape: void getOutline(android.graphics.Outline)>
<android.os.UserManager: int getUserHandle(int)>
<android.speech.tts.TextToSpeech.EngineInfo: java.lang.String toString()>
<android.media.audiofx.LoudnessEnhancer: void setParameterListener(android.media.audiofx.LoudnessEnhancer.OnParameterChangeListener)>
<com.android.internal.app.MediaRouteControllerDialog: android.view.View onCreateMediaControlView(android.os.Bundle)>
<android.location.Location: float distanceTo(android.location.Location)>
<com.android.internal.app.ProcessStats.ServiceState: void clearCurrentOwner(java.lang.Object,boolean)>
<com.android.internal.widget.LockPatternView: void disableInput()>
<android.inputmethodservice.KeyboardView: void setPopupOffset(int,int)>
<android.telephony.CellIdentityLte: int getMnc()>
<android.widget.TabHost.TabSpec: android.widget.TabHost.TabSpec setIndicator(java.lang.CharSequence)>
<android.location.GpsMeasurement: boolean hasPseudorangeUncertaintyInMeters()>
<android.widget.SectionIndexer: int getSectionForPosition(int)>
<android.app.IActivityManager: android.content.Intent registerReceiver(android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int)>
<android.app.IActivityManager: void setDebugApp(java.lang.String,boolean,boolean)>
<android.content.ISyncAdapter: void initialize(android.accounts.Account,java.lang.String)>
<android.media.TtmlUtils: long parseTimeExpression(java.lang.String,int,int,int)>
<android.app.SearchManager.OnCancelListener: void onCancel()>
<android.animation.LayoutTransition: void setDuration(long)>
<android.os.DropBoxManager.Entry: int getFlags()>
<android.graphics.Bitmap: void getPixels(int[],int,int,int,int,int,int)>
<android.bluetooth.IBluetoothHeadsetClient: boolean dial(android.bluetooth.BluetoothDevice,java.lang.String)>
<android.speech.tts.SynthesisCallback: int getMaxBufferSize()>
<android.renderscript.Matrix4f: void loadTranslate(float,float,float)>
<android.net.wifi.WifiManager: boolean startScan(android.os.WorkSource)>
<com.android.internal.inputmethod.InputMethodUtils.InputMethodSettings: java.lang.String getLastSubtypeForInputMethodLocked(java.lang.String)>
<android.widget.AbsListView.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,long)>
<android.renderscript.Allocation: android.renderscript.Allocation createFromBitmapResource(android.renderscript.RenderScript,android.content.res.Resources,int,android.renderscript.Allocation.MipmapControl,int)>
<android.renderscript.FieldPacker: android.renderscript.Short2 subShort2()>
<android.app.IActivityManager: void activitySlept(android.os.IBinder)>
<android.graphics.Canvas: void drawRoundRect(android.graphics.RectF,float,float,android.graphics.Paint)>
<android.media.AudioManager: int requestAudioFocus(android.media.AudioManager.OnAudioFocusChangeListener,int,int)>
<android.speech.tts.SynthesisRequest: int getPitch()>
<android.hardware.camera2.utils.HashCodeHelpers: int hashCode(int,int,int,int)>
<android.renderscript.Script: double getVarD(int)>
<android.renderscript.Matrix3f: void scale(float,float,float)>
<android.net.RouteInfo: boolean isIPv4Default()>
<android.content.ContentProvider: void attachInfoForTesting(android.content.Context,android.content.pm.ProviderInfo)>
<android.app.Activity: boolean isImmersive()>
<android.app.ListFragment: void setListShownNoAnimation(boolean)>
<com.google.android.util.AbstractMessageParser.MusicTrack: java.util.List getInfo()>
<android.os.TokenWatcher: void acquired()>
<android.hardware.camera2.CameraCaptureSession.CaptureCallback: void onCaptureFailed(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureFailure)>
<android.app.AlertDialog: void setIcon(int)>
<com.android.internal.widget.LockPatternView: boolean onHoverEvent(android.view.MotionEvent)>
<android.util.Rational: float floatValue()>
<com.android.internal.widget.DrawableHolder: void draw(android.graphics.Canvas)>
<com.android.internal.util.AsyncChannel: void connect(android.content.Context,android.os.Handler,java.lang.String,java.lang.String)>
<android.media.MediaCrypto: void <init>(java.util.UUID,byte[])>
<android.app.admin.IDevicePolicyManager: void wipeData(int,int)>
<android.hardware.camera2.CameraCaptureSession.StateCallback: void onConfigureFailed(android.hardware.camera2.CameraCaptureSession)>
<android.media.tv.TvInputManager.TvInputCallback: void onInputUpdated(java.lang.String)>
<com.android.internal.widget.multiwaveview.TargetDrawable: float getY()>
<android.location.GpsClock: short getLeapSecond()>
<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,int)>
<android.location.IGpsStatusListener: void onFirstFix(int)>
<android.content.DialogInterface.OnMultiChoiceClickListener: void onClick(android.content.DialogInterface,int,boolean)>
<android.widget.TextView: void setText(char[],int,int)>
<android.filterfw.core.FieldPort: boolean acceptsFrame()>
<android.widget.HorizontalScrollView: void measureChild(android.view.View,int,int)>
<android.view.View: void offsetLeftAndRight(int)>
<android.app.ProgressDialog: void setIndeterminateDrawable(android.graphics.drawable.Drawable)>
<android.media.session.MediaSessionLegacyHelper: android.media.session.MediaSessionLegacyHelper getHelper(android.content.Context)>
<android.opengl.GLES10: void glMultiTexCoord4f(int,float,float,float,float)>
<android.text.Selection: boolean moveRight(android.text.Spannable,android.text.Layout)>
<android.view.accessibility.AccessibilityInteractionClient: java.util.List findAccessibilityNodeInfosByText(int,int,long,java.lang.String)>
<android.net.MobileLinkQualityInfo: void setLteCqi(int)>
<android.provider.ContactsContract.CommonDataKinds.Phone: int getTypeLabelResource(int)>
<android.accounts.AbstractAccountAuthenticator: void <init>(android.content.Context)>
<android.widget.AdapterView: boolean canAnimate()>
<android.media.MediaCodecInfo.VideoCapabilities: android.util.Range getSupportedFrameRatesFor(int,int)>
<android.media.tv.TvInputManager: boolean captureFrame(java.lang.String,android.view.Surface,android.media.tv.TvStreamConfig)>
<android.content.pm.VerifierInfo: void writeToParcel(android.os.Parcel,int)>
<android.print.PrinterId: void <init>(android.content.ComponentName,java.lang.String)>
<com.android.internal.view.menu.IconMenuView: void onAttachedToWindow()>
<android.media.MediaDescription: java.lang.CharSequence getSubtitle()>
<android.view.SurfaceControl: void setDisplayLayerStack(android.os.IBinder,int)>
<android.inputmethodservice.ExtractEditText: void setCursorPosition_internal(int,int)>
<android.text.StaticLayout: boolean getLineContainsTab(int)>
<android.view.View: boolean resolveTextDirection()>
<android.filterfw.core.ShaderProgram: void setAttributeValues(java.lang.String,android.filterfw.core.VertexFrame,int,int,int,int,boolean)>
<android.view.View.AccessibilityDelegate: void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>
<com.android.internal.view.IInputMethodSession: void displayCompletions(android.view.inputmethod.CompletionInfo[])>
<android.location.FusedBatchOptions: void setSourceToUse(int)>
<com.android.internal.widget.ActionBarOverlayLayout.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>
<android.graphics.Bitmap: android.graphics.NinePatch.InsetStruct getNinePatchInsets()>
<android.renderscript.Matrix3f: void loadMultiply(android.renderscript.Matrix3f,android.renderscript.Matrix3f)>
<android.provider.Settings.System: int getIntForUser(android.content.ContentResolver,java.lang.String,int,int)>
<android.widget.ProgressBar: android.graphics.PorterDuff.Mode getProgressBackgroundTintMode()>
<com.google.android.util.AbstractMessageParser.Part: java.util.ArrayList getTokens()>
<android.animation.ValueAnimator: float getAnimatedFraction()>
<android.util.Slog: int wtf(java.lang.String,java.lang.Throwable)>
<android.telecom.Connection.VideoProvider: void changeCallDataUsage(int)>
<android.media.IAudioService: void setVibrateSetting(int,int)>
<android.view.View: boolean fitSystemWindows(android.graphics.Rect)>
<android.text.SpanSet: void recycle()>
<android.accounts.AccountManager: android.os.Bundle sanitizeResult(android.os.Bundle)>
<android.app.admin.DevicePolicyManager: int getMaximumFailedPasswordsForWipe(android.content.ComponentName)>
<android.bluetooth.BluetoothDevice: boolean setDeviceOutOfBandData(byte[],byte[])>
<android.media.session.MediaController: int getRatingType()>
<android.widget.RadialTimePickerView: void setCurrentHour(int)>
<android.hardware.Camera.Parameters: void setSceneMode(java.lang.String)>
<android.opengl.GLES30: void glGetQueryObjectuiv(int,int,java.nio.IntBuffer)>
<android.transition.Transition.TransitionListener: void onTransitionEnd(android.transition.Transition)>
<android.opengl.GLES11Ext: void glDrawTexfOES(float,float,float,float,float)>
<android.media.session.ISessionControllerCallback: void onEvent(java.lang.String,android.os.Bundle)>
<android.opengl.GLES30: void glDrawElementsInstanced(int,int,int,java.nio.Buffer,int)>
<android.hardware.location.GeofenceHardwareImpl: android.hardware.location.GeofenceHardwareImpl getInstance(android.content.Context)>
<android.bluetooth.BluetoothDevice: java.lang.String getAddress()>
<android.hardware.camera2.params.ColorSpaceTransform: void <init>(int[])>
<android.app.ActivityManagerProxy: boolean handleApplicationWtf(android.os.IBinder,java.lang.String,boolean,android.app.ApplicationErrorReport.CrashInfo)>
<android.text.style.SuggestionRangeSpan: void <init>(android.os.Parcel)>
<android.hardware.location.IFusedLocationHardware: void startBatching(int,android.location.FusedBatchOptions)>
<android.net.LocalServerSocket: android.net.LocalSocket accept()>
<android.opengl.GLES30: void glGetVertexAttribIuiv(int,int,java.nio.IntBuffer)>
<android.net.ConnectivityManager: int checkMobileProvisioning(int)>
<android.text.style.TtsSpan.TelephoneBuilder: android.text.style.TtsSpan.TelephoneBuilder setExtension(java.lang.String)>
<android.view.animation.GridLayoutAnimationController: void setDirectionPriority(int)>
<android.widget.GridView: int computeVerticalScrollOffset()>
<android.telephony.CellInfo: void setTimeStamp(long)>
<android.content.Context: void sendOrderedBroadcast(android.content.Intent,java.lang.String,int,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<android.graphics.Region: void translate(int,int,android.graphics.Region)>
<android.renderscript.Float2: void setValues(float,float)>
<android.widget.Editor.EasyEditDeleteListener: void onDeleteClick(android.text.style.EasyEditSpan)>
<android.view.View: void setX(float)>
<android.view.accessibility.AccessibilityManager: void interrupt()>
<android.widget.RemoteViews: void setLabelFor(int,int)>
<android.hardware.Camera: int cameraInitUnspecified(int)>
<com.google.android.gles_jni.GLImpl: void glPointSize(float)>
<android.text.method.QwertyKeyListener: android.text.method.QwertyKeyListener getInstanceForFullKeyboard()>
<android.graphics.drawable.LayerDrawable: void setHotspot(float,float)>
<com.android.internal.widget.SizeAdaptiveLayout.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>
<android.os.UserManager: void setUserIcon(int,android.graphics.Bitmap)>
<android.renderscript.Element: android.renderscript.Element F64(android.renderscript.RenderScript)>
<android.media.session.PlaybackState.Builder: android.media.session.PlaybackState.Builder setActiveQueueItemId(long)>
<android.text.BoringLayout: void ellipsized(int,int)>
<android.net.NetworkUtils: java.net.InetAddress hexToInet6Address(java.lang.String)>
<com.android.internal.util.FastPrintWriter: void <init>(android.util.Printer,int)>
<com.android.internal.view.animation.NativeInterpolatorFactory: long createNativeInterpolator()>
<android.transition.Explode: void captureEndValues(android.transition.TransitionValues)>
<android.renderscript.Sampler.Builder: void setWrapT(android.renderscript.Sampler.Value)>
<com.android.internal.util.FastXmlSerializer: void entityRef(java.lang.String)>
<android.os.Vibrator: void vibrate(long)>
<android.os.Parcel: void writeBinderArray(android.os.IBinder[])>
<android.filterfw.geometry.Point: float length()>
<android.inputmethodservice.AbstractInputMethodService: android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl onCreateInputMethodSessionInterface()>
<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getSubscriberIdForSubscriber(long)>
<android.renderscript.ScriptIntrinsicBlend: void forEachDst(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>
<android.util.AtomicFile: java.io.File getBaseFile()>
<android.opengl.GLDebugHelper: javax.microedition.khronos.egl.EGL wrap(javax.microedition.khronos.egl.EGL,int,java.io.Writer)>
<android.view.ViewGroup: void requestTransitionStart(android.animation.LayoutTransition)>
<android.widget.Scroller: int getCurrY()>
<android.app.ActivityManagerProxy: int startActivityWithConfig(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.content.res.Configuration,android.os.Bundle,int)>
<com.android.internal.os.HandlerCaller: com.android.internal.os.SomeArgs sendMessageAndWait(android.os.Message)>
<android.content.pm.PackageItemInfo: android.content.res.XmlResourceParser loadXmlMetaData(android.content.pm.PackageManager,java.lang.String)>
<android.renderscript.Matrix4f: void set(int,int,float)>
<android.view.textservice.TextInfo: void <init>(java.lang.String,int,int)>
<android.content.pm.PackageParser: void setOnlyCoreApps(boolean)>
<com.android.internal.widget.ToolbarWidgetWrapper: void animateToVisibility(int)>
<android.print.pdf.PrintedPdfDocument: android.graphics.Rect getPageContentRect()>
<android.widget.SimpleExpandableListAdapter: void <init>(android.content.Context,java.util.List,int,int,java.lang.String[],int[],java.util.List,int,int,java.lang.String[],int[])>
<android.net.nsd.NsdServiceInfo: void <init>(java.lang.String,java.lang.String)>
<com.android.internal.os.BatteryStatsImpl.Uid: com.android.internal.os.BatteryStatsImpl.Timer getVibratorOnTimer()>
<android.app.LoadedApk: boolean isSecurityViolation()>
<android.app.NotificationManager: boolean matchesCallFilter(android.os.Bundle)>
<android.widget.PopupWindow: int getMaxAvailableHeight(android.view.View)>
<android.net.INetworkStatsService: long getNetworkTotalBytes(android.net.NetworkTemplate,long,long)>
<android.filterpacks.imageproc.AutoFixFilter: void setupPorts()>
<android.inputmethodservice.InputMethodService: void onFinishInput()>
<android.os.Debug.MemoryInfo: void writeToParcel(android.os.Parcel,int)>
<android.widget.TableLayout: boolean isColumnCollapsed(int)>
<android.view.ScaleGestureDetector.SimpleOnScaleGestureListener: boolean onScale(android.view.ScaleGestureDetector)>
<android.text.style.RelativeSizeSpan: int describeContents()>
<android.widget.RelativeLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.text.BidiFormatter.Builder: android.text.BidiFormatter build()>
<android.renderscript.ProgramRaster: android.renderscript.ProgramRaster CULL_BACK(android.renderscript.RenderScript)>
<android.inputmethodservice.InputMethodService.InputMethodImpl: void attachToken(android.os.IBinder)>
<android.hardware.location.GeofenceHardwareImpl: int getStatusOfMonitoringType(int)>
<android.telecom.InCallService.VideoCall: void setZoom(float)>
<android.text.TextUtils: boolean delimitedStringContains(java.lang.String,char,java.lang.String)>
<android.opengl.GLES31: void glFramebufferParameteri(int,int,int)>
<android.widget.NumberPicker: int computeVerticalScrollRange()>
<android.service.dreams.IDreamManager: void dream()>
<android.hardware.location.GeofenceHardwareImpl: void setFusedGeofenceHardware(android.location.IFusedGeofenceHardware)>
<android.util.Singleton: java.lang.Object get()>
<android.graphics.Path: void addPath(android.graphics.Path,float,float)>
<android.media.MediaCodecInfo.AudioCapabilities: int getMaxInputChannelCount()>
<android.media.session.ISessionControllerCallback: void onSessionDestroyed()>
<android.graphics.Outline: void set(android.graphics.Outline)>
<android.media.MediaCodec.CodecException: java.lang.String getDiagnosticInfo()>
<android.view.MotionEvent: float getHistoricalPressure(int,int)>
<android.database.AbstractCursor.SelfContentObserver: void <init>(android.database.AbstractCursor)>
<com.android.internal.widget.WaveView.OnTriggerListener: void onTrigger(android.view.View,int)>
<android.hardware.usb.UsbEndpoint: int getAddress()>
<android.text.method.MetaKeyKeyListener: long resetLockedMeta(long)>
<android.text.util.Linkify: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String)>
<android.inputmethodservice.ExtractEditText: void finishInternalChanges()>
<android.util.TimingLogger: void addSplit(java.lang.String)>
<com.google.android.util.AbstractMessageParser.FlickrPhoto: java.lang.String getGrouping()>
<android.view.MotionEvent.PointerCoords: void <init>(android.view.MotionEvent.PointerCoords)>
<com.android.internal.view.menu.MenuPopupHelper: void updateMenuView(boolean)>
<android.view.VelocityTracker: void finalize()>
<android.content.Context: java.io.File getDatabasePath(java.lang.String)>
<android.os.WorkSource: void <init>(int,java.lang.String)>
<com.android.internal.widget.ResolverDrawerLayout: void onNestedPreScroll(android.view.View,int,int,int[])>
<android.app.Activity: boolean startNextMatchingActivity(android.content.Intent)>
<android.media.session.MediaSession.CallbackStub: void onSkipToTrack(long)>
<com.android.internal.util.StateMachine: int getLogRecCount()>
<android.hardware.input.KeyboardLayout: int describeContents()>
<android.renderscript.Double4: android.renderscript.Double4 sub(android.renderscript.Double4,double)>
<android.os.Environment: java.io.File getExternalStorageDirectory()>
<android.hardware.camera2.utils.HashCodeHelpers: int hashCode(int,int)>
<android.os.CommonClock: long getTimelineId()>
<com.android.internal.widget.AutoScrollHelper: boolean canTargetScrollHorizontally(int)>
<android.view.accessibility.AccessibilityInteractionClient: android.graphics.Point computeClickPointInScreen(int,int,long)>
<android.renderscript.Int4: android.renderscript.Int4 mul(android.renderscript.Int4,android.renderscript.Int4)>
<android.filterpacks.imageproc.RedEyeFilter: void process(android.filterfw.core.FilterContext)>
<com.android.internal.policy.IPolicy: android.view.FallbackEventHandler makeNewFallbackEventHandler(android.content.Context)>
<android.media.WebVttRenderingWidget: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByOtherThreads()>
<android.app.NotificationManager: android.app.INotificationManager getService()>
<android.renderscript.Long3: long dotProduct(android.renderscript.Long3)>
<com.android.internal.os.BatteryStatsImpl.SamplingTimer: void logState(android.util.Printer,java.lang.String)>
<android.inputmethodservice.AbstractInputMethodService: android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl onCreateInputMethodInterface()>
<android.media.SubtitleController.Listener: void onSubtitleTrackSelected(android.media.SubtitleTrack)>
<com.android.internal.view.menu.MenuItemImpl: boolean shouldShowIcon()>
<android.content.pm.PermissionGroupInfo: java.lang.String toString()>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setMultiChoiceItems(android.database.Cursor,java.lang.String,java.lang.String,android.content.DialogInterface.OnMultiChoiceClickListener)>
<android.drm.ProcessedData: java.lang.String getAccountId()>
<android.telephony.CellIdentityCdma: void <init>(int,int,int,int,int)>
<android.graphics.MaskFilter: void finalize()>
<com.google.android.gles_jni.EGLDisplayImpl: boolean equals(java.lang.Object)>
<android.bluetooth.BluetoothGattService: void setHandles(int)>
<android.media.VolumeProvider: void onAdjustVolume(int)>
<android.media.AudioManager: void unregisterRemoteController(android.media.RemoteController)>
<android.appwidget.AppWidgetHostView: android.view.View getErrorView()>
<android.media.session.ISession: void setActive(boolean)>
<android.telecom.VideoCallImpl: void setDisplaySurface(android.view.Surface)>
<com.android.internal.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable)>
<android.view.ViewParent: void requestFitSystemWindows()>
<android.widget.SimpleAdapter: void setViewText(android.widget.TextView,java.lang.String)>
<android.widget.ActionMenuPresenter: void onRestoreInstanceState(android.os.Parcelable)>
<android.hardware.hdmi.HdmiTvClient: void portSelect(int,android.hardware.hdmi.HdmiTvClient.SelectCallback)>
<android.net.LinkProperties: java.lang.String toString()>
<android.app.LocalActivityManager: void dispatchPause(boolean)>
<android.renderscript.Element: android.renderscript.Element F32_3(android.renderscript.RenderScript)>
<android.content.pm.PackageManager: android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int)>
<android.text.BoringLayout: int getLineCount()>
<android.media.ImageReader: void setOnImageAvailableListener(android.media.ImageReader.OnImageAvailableListener,android.os.Handler)>
<android.app.Instrumentation.ActivityMonitor: android.content.IntentFilter getFilter()>
<android.media.MediaExtractor: void setDataSource(java.lang.String)>
<android.widget.ActionMenuPresenter: boolean showOverflowMenu()>
<android.content.UndoManager: android.content.UndoOperation getLastOperation(java.lang.Class,android.content.UndoOwner,int)>
<android.telephony.TelephonyManager: java.lang.String getCompleteVoiceMailNumber()>
<android.os.CommonClock.OnServerDiedListener: void onServerDied()>
<android.hardware.usb.UsbManager: boolean isFunctionEnabled(java.lang.String)>
<android.provider.SearchRecentSuggestions: void saveRecentQuery(java.lang.String,java.lang.String)>
<android.widget.RemoteViews: void setProgressBar(int,int,int,boolean)>
<android.util.EventLog: int writeEvent(int,java.lang.String)>
<android.content.pm.PackageManager: android.content.Intent getLaunchIntentForPackage(java.lang.String)>
<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig.DowntimeInfo toDowntimeInfo()>
<android.media.tv.TvInputManager.SessionCallback: void onTracksChanged(android.media.tv.TvInputManager.Session,java.util.List)>
<android.security.KeyStore: boolean lock()>
<android.view.LayoutInflater: void <init>(android.content.Context)>
<android.app.FragmentManagerImpl: void attachActivity(android.app.Activity,android.app.FragmentContainer,android.app.Fragment)>
<android.webkit.WebView.PrivateAccess: boolean super_setFrame(int,int,int,int)>
<android.media.RemoteController: void <init>(android.content.Context,android.media.RemoteController.OnClientUpdateListener,android.os.Looper)>
<android.app.IActivityManager: int bindService(android.app.IApplicationThread,android.os.IBinder,android.content.Intent,java.lang.String,android.app.IServiceConnection,int,int)>
<android.graphics.Canvas: void drawRoundRect(float,float,float,float,float,float,android.graphics.Paint)>
<com.google.android.gles_jni.GLImpl: void glLoadIdentity()>
<android.widget.EditText: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.transition.ChangeTransform: void <init>(android.content.Context,android.util.AttributeSet)>
<android.content.Context: java.io.File getExternalCacheDir()>
<android.renderscript.Short4: void addMultiple(android.renderscript.Short4,short)>
<android.graphics.SweepGradient: void <init>(float,float,int[],float[])>
<android.view.ViewGroup: void setDescendantFocusability(int)>
<android.widget.ImageButton: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.app.IActivityManager: void removeContentProvider(android.os.IBinder,boolean)>
<android.renderscript.ScriptIntrinsicConvolve5x5: void setInput(android.renderscript.Allocation)>
<android.net.nsd.NsdManager.RegistrationListener: void onUnregistrationFailed(android.net.nsd.NsdServiceInfo,int)>
<android.widget.NumberPicker: void onMeasure(int,int)>
<android.content.pm.ApplicationInfo: void setResourcePath(java.lang.String)>
<android.graphics.PixelFormat: boolean isPublicFormat(int)>
<android.hardware.camera2.params.StreamConfigurationMap: long getOutputMinFrameDuration(int,android.util.Size)>
<android.net.NetworkStateTracker: void supplyMessenger(android.os.Messenger)>
<android.view.accessibility.AccessibilityRecord: void setContentDescription(java.lang.CharSequence)>
<android.net.wifi.p2p.WifiP2pGroupList: boolean clear()>
<android.telecom.Call.Details: java.lang.String getCallerDisplayName()>
<android.view.Window: void setDefaultLogo(int)>
<android.media.AudioTrack: boolean getTimestamp(android.media.AudioTimestamp)>
<android.media.SubtitleController: void <init>(android.content.Context,android.media.MediaTimeProvider,android.media.SubtitleController.Listener)>
<android.view.accessibility.AccessibilityNodeInfo: void setRangeInfo(android.view.accessibility.AccessibilityNodeInfo.RangeInfo)>
<com.android.internal.util.ArrayUtils: long[] appendLong(long[],long)>
<android.renderscript.Element: android.renderscript.Element SAMPLER(android.renderscript.RenderScript)>
<android.view.textservice.SpellCheckerInfo: int getSubtypeCount()>
<android.telephony.CellLocation: void requestLocationUpdate()>
<android.filterfw.io.GraphReader: android.filterfw.core.FilterGraph readGraphResource(android.content.Context,int)>
<com.android.internal.os.BatteryStatsImpl.Timer: void writeTimerToParcel(android.os.Parcel,com.android.internal.os.BatteryStatsImpl.Timer,long)>
<android.mtp.MtpObjectInfo: java.lang.String getName()>
<android.view.accessibility.AccessibilityManager: boolean removeHighTextContrastStateChangeListener(android.view.accessibility.AccessibilityManager.HighTextContrastChangeListener)>
<android.opengl.GLSurfaceView: int getRenderMode()>
<android.net.http.SSLConnectionClosedByUserException: void <init>(java.lang.String)>
<android.content.ComponentName: java.lang.String getClassName()>
<com.android.internal.os.BatteryStatsImpl: void writeSyncLocked()>
<android.app.Activity: void invalidateOptionsMenu()>
<android.view.SurfaceHolder: void setType(int)>
<android.view.WindowManagerPolicy: void selectRotationAnimationLw(int[])>
<android.gesture.GestureLibraries: android.gesture.GestureLibrary fromFile(java.io.File)>
<android.opengl.GLES10: void glTexEnvx(int,int,int)>
<android.view.MotionEvent: int getActionIndex()>
<android.widget.HorizontalScrollView: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceRequest: android.net.wifi.p2p.nsd.WifiP2pUpnpServiceRequest newInstance(java.lang.String)>
<android.webkit.WebViewProvider.ViewDelegate: boolean onTouchEvent(android.view.MotionEvent)>
<android.opengl.GLES30: void glGetUniformIndices(int,java.lang.String[],int[],int)>
<android.media.WebVttRenderingWidget: void onAttachedToWindow()>
<android.webkit.WebSettings: boolean getAllowFileAccess()>
<android.opengl.GLES30: void glProgramParameteri(int,int,int)>
<android.view.ViewGroup: void detachViewsFromParent(int,int)>
<com.google.android.util.AbstractMessageParser.TrieNode: java.lang.String getValue()>
<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator rotation(float)>
<com.android.internal.widget.DrawableHolder: float getAlpha()>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getActivityIcon(android.content.Intent)>
<android.opengl.GLES20: void glVertexAttrib4fv(int,java.nio.FloatBuffer)>
<android.bluetooth.BluetoothAvrcpController: void sendPassThroughCmd(android.bluetooth.BluetoothDevice,int,int)>
<android.filterpacks.imageproc.ToPackedGrayFilter: void process(android.filterfw.core.FilterContext)>
<android.media.IVolumeController: void volumeChanged(int,int)>
<com.android.internal.widget.ActionBarView: boolean shouldDelayChildPressedState()>
<com.android.internal.telephony.ISub: int getActiveSubInfoCount()>
<android.security.KeyPairGeneratorSpec: java.lang.String getKeyType()>
<android.speech.tts.ITextToSpeechCallback: void onError(java.lang.String,int)>
<android.os.UpdateLock: void release()>
<com.android.internal.view.menu.MenuBuilder: android.view.MenuItem findItem(int)>
<android.widget.AbsListView: boolean isItemChecked(int)>
<android.telephony.CellIdentityWcdma: int describeContents()>
<android.net.wifi.p2p.WifiP2pGroup: void writeToParcel(android.os.Parcel,int)>
<android.text.HtmlToSpannedConverter: void processingInstruction(java.lang.String,java.lang.String)>
<com.google.android.gles_jni.GLImpl: void glBindRenderbufferOES(int,int)>
<android.view.View: void setLongClickable(boolean)>
<android.widget.RadioGroup: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.view.animation.LayoutAnimationController: void start()>
<android.transition.Slide.CalculateSlide: float getGoneX(android.view.ViewGroup,android.view.View)>
<com.android.internal.widget.DrawableHolder: float getScaleX()>
<android.content.Intent: android.content.Intent replaceExtras(android.content.Intent)>
<android.telecom.RemoteConference: void hold()>
<android.app.ActivityManagerProxy: void finishReceiver(android.os.IBinder,int,java.lang.String,android.os.Bundle,boolean)>
<android.filterfw.core.VertexFrame: void setData(java.nio.ByteBuffer,int,int)>
<android.os.BatteryStats: void dumpLocked(android.content.Context,java.io.PrintWriter,int,int,long)>
<android.telephony.CellIdentityLte: int getPci()>
<android.net.wifi.IWifiManager: void pollBatchedScan()>
<android.renderscript.Byte3: void mul(byte)>
<android.appwidget.AppWidgetManager: void partiallyUpdateAppWidget(int[],android.widget.RemoteViews)>
<android.app.ActionBar.LayoutParams: void <init>(android.app.ActionBar.LayoutParams)>
<com.android.internal.telephony.CallInfo: int describeContents()>
<android.graphics.Path: void arcTo(android.graphics.RectF,float,float)>
<android.preference.Preference: java.lang.CharSequence getTitle()>
<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.Drawable[])>
<android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addExtras(android.os.Bundle)>
<com.android.ims.internal.IImsService: void turnOnIms()>
<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri)>
<android.net.http.LoggingEventHandler: boolean handleSslErrorRequest(android.net.http.SslError)>
<android.provider.ContactsContract.Contacts.AggregationSuggestions.Builder: android.provider.ContactsContract.Contacts.AggregationSuggestions.Builder setContactId(long)>
<android.view.DragEvent: boolean getResult()>
<android.util.ArraySet: void addAll(android.util.ArraySet)>
<com.google.android.gles_jni.GLImpl: void glDepthRangef(float,float)>
<android.hardware.Camera: boolean previewEnabled()>
<android.view.inputmethod.InputConnectionWrapper: int getCursorCapsMode(int)>
<android.media.WebVttRenderingWidget: void setSize(int,int)>
<android.speech.RecognitionService.Callback: void beginningOfSpeech()>
<android.os.RemoteCallback: void sendResult(android.os.Bundle)>
<android.os.PersistableBundle: void saveToXml(org.xmlpull.v1.XmlSerializer)>
<android.service.voice.VoiceInteractionService: void onCreate()>
<android.text.method.SingleLineTransformationMethod: char[] getReplacement()>
<com.android.internal.view.menu.MenuPresenter.Callback: boolean onOpenSubMenu(com.android.internal.view.menu.MenuBuilder)>
<android.view.KeyEvent: boolean isWakeKey()>
<android.net.wifi.WifiManager: boolean setWifiApEnabled(android.net.wifi.WifiConfiguration,boolean)>
<android.widget.DatePicker: android.os.Parcelable onSaveInstanceState()>
<android.app.IActivityManager: void requestBugReport()>
<android.app.NativeActivity: void onLowMemory()>
<android.content.Intent: android.os.Parcelable[] getParcelableArrayExtra(java.lang.String)>
<android.net.RouteInfo: void <init>(android.net.IpPrefix)>
<android.graphics.drawable.Drawable: void applyTheme(android.content.res.Resources.Theme)>
<android.database.sqlite.SQLiteQueryBuilder: void appendWhere(java.lang.CharSequence)>
<com.android.internal.util.StateMachine: android.os.Message obtainMessage(int,java.lang.Object)>
<android.app.ResourcesManager: boolean applyConfigurationToResourcesLocked(android.content.res.Configuration,android.content.res.CompatibilityInfo)>
<android.preference.PreferenceGroup: void addItemFromInflater(android.preference.Preference)>
<android.widget.LinearLayout: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.widget.ImageView: void setScaleType(android.widget.ImageView.ScaleType)>
<android.preference.PreferenceScreen: boolean isOnSameScreenAsChildren()>
<android.view.accessibility.AccessibilityNodeInfo: int getAccessibilityViewId(long)>
<android.webkit.WebViewFactory: java.lang.String getWebViewPackageName()>
<android.widget.ListPopupWindow.ForwardingListener: void onViewAttachedToWindow(android.view.View)>
<android.widget.TextView: int getTopPaddingOffset()>
<android.os.Parcel: java.util.ArrayList createStringArrayList()>
<android.media.tv.TvInputManager.Hardware: void overrideAudioSink(int,java.lang.String,int,int,int)>
<android.graphics.drawable.AnimatedRotateDrawable: boolean onLevelChange(int)>
<android.widget.PopupWindow: void showAsDropDown(android.view.View)>
<com.android.internal.view.IInputConnectionWrapper: void setSelection(int,int)>
<android.net.NetworkStatsHistory: void <init>(long,int,int)>
<android.location.Location: float getAccuracy()>
<android.graphics.Canvas: boolean clipRect(android.graphics.Rect,android.graphics.Region.Op)>
<android.widget.TextSwitcher: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofFloat(java.lang.String,float[])>
<android.widget.TextView: void setLetterSpacing(float)>
<android.preference.PreferenceGroup: void removeAll()>
<android.renderscript.RSSurfaceView: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>
<android.text.style.LeadingMarginSpan.Standard: void drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout)>
<android.telephony.gsm.GsmCellLocation: boolean equals(java.lang.Object)>
<android.filterfw.FilterFunctionEnvironment: android.filterfw.core.FilterFunction createFunction(java.lang.Class,java.lang.Object[])>
<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<android.app.admin.IDevicePolicyManager: int getMaximumFailedPasswordsForWipe(android.content.ComponentName,int)>
<android.database.CursorWindow: short getShort(int,int)>
<android.os.BatteryStats: int getHistoryTotalSize()>
<com.android.internal.view.menu.ActionMenuItem: char getNumericShortcut()>
<android.widget.Chronometer: android.widget.Chronometer.OnChronometerTickListener getOnChronometerTickListener()>
<android.widget.TextView: void setCursorVisible(boolean)>
<android.app.Notification.InboxStyle: void addExtras(android.os.Bundle)>
<android.net.wifi.WifiManager: void disable(int,android.net.wifi.WifiManager.ActionListener)>
<android.app.admin.IDevicePolicyManager: boolean removeUser(android.content.ComponentName,android.os.UserHandle)>
<android.view.WindowAnimationFrameStats: void writeToParcel(android.os.Parcel,int)>
<android.webkit.WebSettings: void setLoadWithOverviewMode(boolean)>
<com.android.server.net.NetlinkTracker: void clearLinkProperties()>
<android.inputmethodservice.InputMethodService: void onCreate()>
<android.view.MotionEvent.PointerProperties: android.view.MotionEvent.PointerProperties[] createArray(int)>
<com.android.internal.view.InputConnectionWrapper: boolean beginBatchEdit()>
<android.print.PrinterDiscoverySession: void stopPrinterDiscovery()>
<android.filterfw.core.AsyncRunner: void run()>
<android.telecom.Connection: void setInitialized()>
<android.graphics.Bitmap: boolean isMutable()>
<android.widget.Button: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.text.format.DateFormat: boolean hasDesignator(java.lang.CharSequence,char)>
<android.database.Cursor: int getPosition()>
<android.nfc.NfcAdapter: void resumePolling()>
<android.app.ActivityThread: android.os.Looper getLooper()>
<android.os.ServiceManager: android.os.IBinder checkService(java.lang.String)>
<android.view.RenderNode: void finalize()>
<android.opengl.GLES31: void glProgramUniform4ui(int,int,int,int,int,int)>
<android.media.MediaMuxer: void stop()>
<android.media.RingtoneManager: void setType(int)>
<com.android.internal.util.XmlUtils: void writeIntAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,int)>
<android.filterfw.core.FilterFunction: void close()>
<android.hardware.camera2.impl.CameraMetadataNative: void <init>(android.hardware.camera2.impl.CameraMetadataNative)>
<android.service.voice.AlwaysOnHotwordDetector: void dump(java.lang.String,java.io.PrintWriter)>
<android.opengl.GLES20: int glGetAttribLocation(int,java.lang.String)>
<android.widget.ZoomButtonsController: void setOnZoomListener(android.widget.ZoomButtonsController.OnZoomListener)>
<android.app.DownloadManager.Query: android.app.DownloadManager.Query setOnlyIncludeVisibleInDownloadsUi(boolean)>
<com.android.internal.util.StateMachine: void sendMessageDelayed(int,int,int,long)>
<android.renderscript.Matrix2f: void loadMultiply(android.renderscript.Matrix2f,android.renderscript.Matrix2f)>
<android.widget.CursorTreeAdapter: long getGroupId(int)>
<android.filterfw.core.FieldPort: void setFrame(android.filterfw.core.Frame)>
<com.android.internal.os.BatteryStatsImpl: void readLocked()>
<android.telephony.TelephonyManager: int getSimState(int)>
<android.view.accessibility.AccessibilityNodeInfo: void setDismissable(boolean)>
<com.android.internal.os.BatteryStatsImpl.Uid.Proc: android.os.BatteryStats.Uid.Proc.ExcessivePower getExcessivePower(int)>
<android.mtp.MtpObjectInfo: int getImagePixWidth()>
<android.view.WindowManagerPolicy.WindowManagerFuncs: java.lang.Object getWindowManagerLock()>
<android.app.IActivityManager: int getLaunchedFromUid(android.os.IBinder)>
<com.android.internal.widget.ActionBarContainer: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<android.content.IContentService: int getIsSyncableAsUser(android.accounts.Account,java.lang.String,int)>
<android.content.pm.PackageParser.Package: java.lang.String toString()>
<com.android.internal.widget.PointerLocationView: void onDraw(android.graphics.Canvas)>
<com.android.internal.database.SortCursor: void close()>
<android.hardware.location.IActivityRecognitionHardware: boolean disableActivityEvent(java.lang.String,int)>
<android.animation.ValueAnimator: long getCurrentPlayTime()>
<android.database.Cursor: boolean moveToNext()>
<android.os.BinderProxy: boolean transactNative(int,android.os.Parcel,android.os.Parcel,int)>
<android.app.IActivityManager: void finishVoiceTask(android.service.voice.IVoiceInteractionSession)>
<android.widget.TextView: void onCommitCorrection(android.view.inputmethod.CorrectionInfo)>
<com.android.internal.widget.LockPatternUtils: boolean isLockScreenDisabled()>
<android.widget.EdgeEffect: int getMaxHeight()>
<android.accounts.IAccountManager: java.lang.String getPassword(android.accounts.Account)>
<android.app.Activity: void dismissDialog(int)>
<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.view.ViewTreeObserver: void addOnDrawListener(android.view.ViewTreeObserver.OnDrawListener)>
<android.app.job.JobInfo: boolean hasEarlyConstraint()>
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setTitle(int)>
<android.opengl.GLES31Ext: void glGetSamplerParameterIuivEXT(int,int,java.nio.IntBuffer)>
<android.animation.Keyframes.IntKeyframes: int getIntValue(float)>
<android.media.session.MediaSessionLegacyHelper: boolean isGlobalPriorityActive()>
<android.nfc.tech.NfcA: byte[] getAtqa()>
<android.app.Notification.Style: android.widget.RemoteViews getStandardView(int)>
<android.graphics.Canvas: boolean quickReject(float,float,float,float,android.graphics.Canvas.EdgeType)>
<android.renderscript.Script.LaunchOptions: android.renderscript.Script.LaunchOptions setY(int,int)>
<com.android.internal.app.IMediaContainerService: long calculateInstalledSize(java.lang.String,boolean,java.lang.String)>
<android.media.AudioManager: void unregisterAudioPolicyAsync(android.media.audiopolicy.AudioPolicy)>
<android.opengl.GLES10: void glMaterialx(int,int,int)>
<android.view.View: boolean toLocalMotionEvent(android.view.MotionEvent)>
<android.webkit.WebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)>
<android.app.Notification.Builder: android.app.Notification.Builder setContentIntent(android.app.PendingIntent)>
<android.database.AbstractCursor: void fillWindow(int,android.database.CursorWindow)>
<android.hardware.camera2.params.HighSpeedVideoConfiguration: int hashCode()>
<android.view.WindowManagerPolicy: android.view.KeyEvent dispatchUnhandledKey(android.view.WindowManagerPolicy.WindowState,android.view.KeyEvent,int)>
<com.google.android.gles_jni.EGLImpl: java.lang.String eglQueryString(javax.microedition.khronos.egl.EGLDisplay,int)>
<android.media.audiofx.AutomaticGainControl: android.media.audiofx.AutomaticGainControl create(int)>
<android.text.format.Time: boolean isEpoch(android.text.format.Time)>
<android.telephony.CellIdentityWcdma: int hashCode()>
<android.hardware.usb.UsbAccessory: java.lang.String getDescription()>
<android.view.KeyEvent: boolean isMetaPressed()>
<android.net.ConnectivityManager: boolean isTetheringSupported()>
<com.android.internal.app.IBatteryStats: void noteStopWakelock(int,int,java.lang.String,java.lang.String,int)>
<android.content.ISyncContext: void onFinished(android.content.SyncResult)>
<android.telephony.PreciseCallState: void <init>(int,int,int,int,int)>
<android.telecom.ParcelableConference: void writeToParcel(android.os.Parcel,int)>
<android.content.pm.PackageInfoLite: int describeContents()>
<android.content.pm.ActivityInfo: int getThemeResource()>
<android.bluetooth.le.ResultStorageDescriptor: int getOffset()>
<com.android.internal.view.menu.BaseMenuPresenter: void <init>(android.content.Context,int,int)>
<com.android.internal.widget.ActionBarView: void setNavigationIcon(android.graphics.drawable.Drawable)>
<android.net.INetworkScoreCache: void updateScores(java.util.List)>
<android.app.ActionBar: void setDisplayShowTitleEnabled(boolean)>
<android.view.KeyEvent: boolean isTracking()>
<android.net.wifi.WifiScanner.WifiChangeSettings: void writeToParcel(android.os.Parcel,int)>
<android.app.ActivityManager: android.os.Debug.MemoryInfo[] getProcessMemoryInfo(int[])>
<android.telephony.NeighboringCellInfo: void <init>(android.os.Parcel)>
<com.android.internal.telecom.IInCallAdapter: void rejectCall(java.lang.String,boolean,java.lang.String)>
<android.filterfw.core.Frame: void setBitmap(android.graphics.Bitmap)>
<android.content.Intent: float[] getFloatArrayExtra(java.lang.String)>
<android.view.DisplayInfo: void getLogicalMetrics(android.util.DisplayMetrics,android.content.res.CompatibilityInfo,android.os.IBinder)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture editProperties(java.lang.String,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.net.LinkProperties: boolean equals(java.lang.Object)>
<android.widget.TabHost.OnTabChangeListener: void onTabChanged(java.lang.String)>
<android.hardware.camera2.utils.TaskSingleDrainer: void beginDrain()>
<android.view.View: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.bluetooth.IBluetoothGatt: void clientConnect(int,java.lang.String,boolean,int)>
<android.app.backup.BackupDataOutput: void <init>(java.io.FileDescriptor)>
<android.hardware.camera2.params.StreamConfigurationDuration: int hashCode()>
<android.media.MediaRouter.UserRouteInfo: void setIconDrawable(android.graphics.drawable.Drawable)>
<android.view.animation.TranslateAnimation: void <init>(android.content.Context,android.util.AttributeSet)>
<android.view.View: void postInvalidate(int,int,int,int)>
<android.bluetooth.IBluetooth: boolean isOffloadedFilteringSupported()>
<android.bluetooth.IBluetoothHeadsetPhone: java.lang.String getNetworkOperator()>
<android.app.Application.ActivityLifecycleCallbacks: void onActivityPaused(android.app.Activity)>
<android.location.Address: void setSubAdminArea(java.lang.String)>
<android.widget.OverScroller: int getCurrY()>
<android.location.LocationRequest: float getSmallestDisplacement()>
<android.view.HardwareCanvas: void drawRenderNode(android.view.RenderNode)>
<com.android.internal.widget.ActionBarView: void onConfigurationChanged(android.content.res.Configuration)>
<android.preference.Preference: void onDependencyChanged(android.preference.Preference,boolean)>
<android.view.KeyCharacterMap.UnavailableException: void <init>(java.lang.String)>
<android.net.UrlQuerySanitizer: boolean hasParameter(java.lang.String)>
<android.view.Display: int getLayerStack()>
<android.app.IActivityManager: boolean finishActivity(android.os.IBinder,int,android.content.Intent,boolean)>
<android.bluetooth.BluetoothHeadsetClient: boolean dialMemory(android.bluetooth.BluetoothDevice,int)>
<android.nfc.tech.NfcB: byte[] transceive(byte[])>
<android.telephony.CellSignalStrengthGsm: int getLevel()>
<android.widget.TextView: int getTotalPaddingStart()>
<android.widget.CheckedTextView: void setCheckMarkTintList(android.content.res.ColorStateList)>
<com.android.internal.util.ArrayUtils: boolean contains(int[],int)>
<android.media.audiopolicy.AudioMix.Builder: android.media.audiopolicy.AudioMix build()>
<android.service.wallpaper.IWallpaperService: void attach(android.service.wallpaper.IWallpaperConnection,android.os.IBinder,int,boolean,int,int,android.graphics.Rect)>
<android.filterfw.core.SimpleFrame: float[] getFloats()>
<android.provider.Settings.System: float getFloat(android.content.ContentResolver,java.lang.String)>
<android.media.audiofx.Virtualizer: boolean getSpeakerAngles(int,int,int[])>
<android.inputmethodservice.KeyboardView.OnKeyboardActionListener: void swipeUp()>
<android.app.ActivityManagerProxy: void forceStopPackage(java.lang.String,int)>
<android.graphics.pdf.PdfRenderer: void close()>
<android.graphics.Canvas: void setMatrix(android.graphics.Matrix)>
<android.text.TextUtils: void copySpansFrom(android.text.Spanned,int,int,java.lang.Class,android.text.Spannable,int)>
<com.android.internal.widget.RotarySelector: void onDraw(android.graphics.Canvas)>
<android.net.http.SslError: boolean hasError(int)>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromPath(java.lang.String)>
<android.widget.TextClock: java.lang.CharSequence getFormat24Hour()>
<android.telephony.CellIdentityLte: int hashCode()>
<android.graphics.drawable.GradientDrawable: boolean isStateful()>
<android.app.ActionBar.Tab: android.app.ActionBar.Tab setTag(java.lang.Object)>
<android.hardware.camera2.DngCreator: android.hardware.camera2.DngCreator setDescription(java.lang.String)>
<android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData.Builder setIncludeDeviceName(boolean)>
<android.app.FragmentBreadCrumbs: void <init>(android.content.Context,android.util.AttributeSet)>
<android.provider.Contacts.ContactMethods: java.lang.String encodeCustomImProtocol(java.lang.String)>
<android.app.admin.DevicePolicyManager: void setGlobalSetting(android.content.ComponentName,java.lang.String,java.lang.String)>
<android.security.KeyStore: boolean duplicate(java.lang.String,int,java.lang.String,int)>
<android.view.View: boolean onKeyShortcut(int,android.view.KeyEvent)>
<android.print.PrintManager: void <init>(android.content.Context,android.print.IPrintManager,int,int)>
<android.preference.DialogPreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.graphics.CanvasProperty: long getNativeContainer()>
<android.bluetooth.IBluetoothManager: android.bluetooth.IBluetoothGatt getBluetoothGatt()>
<android.view.WindowInsets: int getWindowDecorInsetRight()>
<android.filterpacks.imageproc.SaturateFilter: void setupPorts()>
<android.widget.AdapterView: void setOnItemSelectedListener(android.widget.AdapterView.OnItemSelectedListener)>
<android.transition.TransitionManager: void beginDelayedTransition(android.view.ViewGroup)>
<android.content.pm.PackageManager: int installStatusToPublicStatus(int)>
<android.content.res.ResourcesKey: boolean hasOverrideConfiguration()>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture hasFeatures(android.accounts.Account,java.lang.String[],android.accounts.AccountManagerCallback,android.os.Handler)>
<android.transition.TransitionPropagation: long getStartDelay(android.view.ViewGroup,android.transition.Transition,android.transition.TransitionValues,android.transition.TransitionValues)>
<android.webkit.WebViewProvider.ViewDelegate: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>
<android.net.nsd.NsdServiceInfo: void setServiceType(java.lang.String)>
<android.net.wifi.p2p.WifiP2pDeviceList: void <init>(java.util.ArrayList)>
<com.android.internal.util.StateMachine: void <init>(java.lang.String,android.os.Handler)>
<android.net.MobileDataStateTracker: android.net.NetworkInfo getNetworkInfo()>
<android.graphics.drawable.InsetDrawable: void onBoundsChange(android.graphics.Rect)>
<android.media.session.IActiveSessionsListener: void onActiveSessionsChanged(java.util.List)>
<android.print.PrinterInfo.Builder: void <init>(android.print.PrinterId,java.lang.String,int)>
<android.net.wifi.p2p.WifiP2pDeviceList: int describeContents()>
<android.media.tv.TvInputInfo: java.lang.CharSequence loadLabel(android.content.Context)>
<android.view.MagnificationSpec: boolean isNop()>
<com.android.internal.content.SelectionBuilder: java.lang.String[] getSelectionArgs()>
<android.drm.DrmManagerClient: java.lang.String getOriginalMimeType(java.lang.String)>
<com.android.ims.internal.IImsCallSession: void update(int,com.android.ims.ImsStreamMediaProfile)>
<android.print.pdf.PrintedPdfDocument: int getPageHeight()>
<android.app.job.JobScheduler: void cancel(int)>
<android.hardware.display.DisplayManagerGlobal: android.hardware.display.DisplayManagerGlobal getInstance()>
<android.renderscript.Int4: void addAt(int,int)>
<android.app.ActivityManagerProxy: void setAlwaysFinish(boolean)>
<android.content.pm.LimitedLengthInputStream: int read(byte[])>
<android.view.KeyEvent: boolean isShiftPressed()>
<android.widget.OverScroller: boolean springBack(int,int,int,int,int,int)>
<android.hardware.camera2.marshal.impl.MarshalQueryableParcelable: boolean isTypeMappingSupported(android.hardware.camera2.utils.TypeReference,int)>
<android.filterfw.core.FilterPort: void close()>
<android.nfc.INfcAdapter: void setForegroundDispatch(android.app.PendingIntent,android.content.IntentFilter[],android.nfc.TechListParcel)>
<com.android.internal.view.menu.ListMenuPresenter: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<android.accessibilityservice.IAccessibilityServiceConnection: boolean performAccessibilityAction(int,long,int,android.os.Bundle,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)>
<android.media.tv.ITvInputHardwareCallback: void onReleased()>
<android.gesture.GestureOverlayView: int getUncertainGestureColor()>
<com.android.internal.telecom.IConnectionServiceAdapter: void setRinging(java.lang.String)>
<android.service.dreams.DreamService: void setScreenBright(boolean)>
<android.media.AudioManager: void adjustStreamVolume(int,int,int)>
<android.nfc.NdefRecord: int describeContents()>
<android.widget.PopupMenu: boolean onMenuItemSelected(com.android.internal.view.menu.MenuBuilder,android.view.MenuItem)>
<android.renderscript.Long4: android.renderscript.Long4 mul(android.renderscript.Long4,android.renderscript.Long4)>
<android.media.tv.TvInputService.Session: void onRelease()>
<android.print.PrintAttributes.Resolution: java.lang.String getId()>
<com.android.internal.os.BatteryStatsImpl: long getNetworkActivityBytes(int,int)>
<com.android.internal.app.WindowDecorActionBar: boolean isTitleTruncated()>
<com.android.internal.view.menu.SubMenuBuilder: java.lang.String getActionViewStatesKey()>
<android.text.style.TtsSpan: void writeToParcel(android.os.Parcel,int)>
<android.app.admin.DevicePolicyManager: boolean installCaCert(android.content.ComponentName,byte[])>
<android.media.tv.TvInputHardwareInfo: int describeContents()>
<android.opengl.GLES30: void glProgramBinary(int,int,java.nio.Buffer,int)>
<android.media.SRTTrack: void updateView(java.util.Vector)>
<android.app.ActivityManagerProxy: void reportActivityFullyDrawn(android.os.IBinder)>
<android.animation.PropertyValuesHolder: void setProperty(android.util.Property)>
<android.webkit.CookieManager: void flushCookieStore()>
<android.util.Log: int wtfStack(java.lang.String,java.lang.String)>
<android.provider.DocumentsContract: android.net.Uri buildTreeDocumentUri(java.lang.String,java.lang.String)>
<android.widget.GridLayout: void setColumnCount(int)>
<android.view.View: int computeVerticalScrollRange()>
<android.view.MotionEvent: float getHistoricalPressure(int)>
<android.app.Notification.Action.WearableExtender: android.app.Notification.Action.Builder extend(android.app.Notification.Action.Builder)>
<com.android.internal.widget.AutoScrollHelper: com.android.internal.widget.AutoScrollHelper setMinimumVelocity(float,float)>
<android.net.wifi.p2p.IWifiP2pManager: android.os.Messenger getMessenger()>
<android.os.ParcelFileDescriptor.AutoCloseInputStream: void close()>
<android.view.accessibility.AccessibilityRecord: void setPassword(boolean)>
<android.preference.DialogPreference: void showDialog(android.os.Bundle)>
<android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityNodeInfo getRoot()>
<android.filterfw.MffEnvironment: android.filterfw.core.FilterContext getContext()>
<com.android.internal.util.ArrayUtils: android.util.ArraySet add(android.util.ArraySet,java.lang.Object)>
<android.widget.CursorAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.view.Window: boolean superDispatchKeyShortcutEvent(android.view.KeyEvent)>
<android.view.animation.Transformation: android.graphics.Matrix getMatrix()>
<android.media.MediaCodec.CryptoInfo: java.lang.String toString()>
<android.net.NetworkStateTracker: void removeStackedLink(android.net.LinkProperties)>
<android.content.IntentSender: void writeToParcel(android.os.Parcel,int)>
<android.widget.TextView: float getTextSize()>
<android.opengl.Matrix: void scaleM(float[],int,float[],int,float,float,float)>
<android.view.WindowManager.LayoutParams: void setTitle(java.lang.CharSequence)>
<android.content.UndoManager: android.os.Parcelable saveInstanceState()>
<android.widget.AbsSpinner: void onMeasure(int,int)>
<android.graphics.Canvas: void drawOval(android.graphics.RectF,android.graphics.Paint)>
<com.google.android.util.AbstractMessageParser: com.google.android.util.AbstractMessageParser.Part getPart(int)>
<android.view.Window: android.content.res.TypedArray getWindowStyle()>
<android.view.GestureDetector: void <init>(android.content.Context,android.view.GestureDetector.OnGestureListener)>
<com.android.internal.widget.EditableInputConnection: boolean beginBatchEdit()>
<android.webkit.WebView.WebViewTransport: void setWebView(android.webkit.WebView)>
<android.content.Loader: void rollbackContentChanged()>
<android.hardware.location.IFusedLocationHardware: boolean supportsDeviceContextInjection()>
<android.os.Parcel: long readLong()>
<android.app.Activity: boolean showDialog(int,android.os.Bundle)>
<android.os.NullVibrator: void vibrate(int,java.lang.String,long,android.media.AudioAttributes)>
<android.renderscript.Int2: void <init>(int)>
<android.gesture.GestureStroke: java.lang.Object clone()>
<android.content.AbstractThreadedSyncAdapter: void <init>(android.content.Context,boolean,boolean)>
<android.renderscript.Long2: android.renderscript.Long2 add(android.renderscript.Long2,android.renderscript.Long2)>
<android.provider.SyncStateContract.Helpers: android.content.ContentProviderOperation newSetOperation(android.net.Uri,android.accounts.Account,byte[])>
<android.app.Dialog: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu.ContextMenuInfo)>
<android.media.MediaRouter.UserRouteInfo: void setVolumeMax(int)>
<android.widget.Gallery: boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float)>
<android.filterpacks.text.ToUpperCase: void process(android.filterfw.core.FilterContext)>
<com.android.internal.view.IInputMethodManager: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtype()>
<android.content.pm.ApplicationInfo: void setBaseCodePath(java.lang.String)>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setContentIcon(int)>
<android.service.notification.NotificationListenerService: void onListenerConnected()>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator rotationX(float)>
<android.net.http.LoggingEventHandler: void locationChanged(java.lang.String,boolean)>
<com.android.internal.view.StandaloneActionMode: void setCustomView(android.view.View)>
<android.preference.DialogPreference: void onClick(android.content.DialogInterface,int)>
<android.os.StrictMode.StrictModeNetworkViolation: void <init>(int)>
<android.view.WindowManagerPolicy: void screenTurnedOff()>
<com.android.internal.os.RuntimeInit: void zygoteInit(int,java.lang.String[],java.lang.ClassLoader)>
<com.android.internal.telecom.ITelecomService: void showInCallScreen(boolean)>
<android.view.Window: android.transition.Transition getReturnTransition()>
<android.util.EventLog: int getTagCode(java.lang.String)>
<android.graphics.RegionIterator: void finalize()>
<android.app.ActionBar: void setNavigationMode(int)>
<android.view.HardwareCanvas: void drawCircle(android.graphics.CanvasProperty,android.graphics.CanvasProperty,android.graphics.CanvasProperty,android.graphics.CanvasProperty)>
<com.android.internal.view.BaseIWindow: void resized(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,boolean,android.content.res.Configuration)>
<com.android.internal.telephony.CallerInfo: com.android.internal.telephony.CallerInfo getCallerInfo(android.content.Context,android.net.Uri)>
<android.preference.Preference: android.content.Context getContext()>
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String getId()>
<android.widget.DatePicker: long getMinDate()>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>
<android.app.IActivityManager: void finishReceiver(android.os.IBinder,int,java.lang.String,android.os.Bundle,boolean)>
<android.net.NetworkInfo: android.net.NetworkInfo.State getState()>
<com.android.internal.view.menu.MenuItemImpl: java.lang.CharSequence getTitle()>
<android.graphics.RectF: float width()>
<android.widget.TextView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.telephony.ServiceState: boolean equals(java.lang.Object)>
<android.view.MotionEvent: float getAxisValue(int)>
<android.view.WindowCallbackWrapper: boolean dispatchKeyEvent(android.view.KeyEvent)>
<com.android.internal.util.FastXmlSerializer: boolean getFeature(java.lang.String)>
<android.bluetooth.BluetoothHeadsetClient: boolean dial(android.bluetooth.BluetoothDevice,java.lang.String)>
<android.os.Parcel: android.util.SparseArray readSparseArray(java.lang.ClassLoader)>
<com.android.internal.widget.AbsActionBarView: int getContentHeight()>
<android.graphics.Color: int parseColor(java.lang.String)>
<android.location.Address: java.lang.String getAddressLine(int)>
<android.view.accessibility.AccessibilityEvent: int getMovementGranularity()>
<android.media.projection.MediaProjectionManager: void <init>(android.content.Context)>
<com.android.internal.telephony.GsmAlphabet: java.lang.String gsm8BitUnpackedToString(byte[],int,int,java.lang.String)>
<android.content.res.Resources: void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics,android.content.res.CompatibilityInfo)>
<android.widget.TextView: void onAttachedToWindow()>
<com.android.internal.widget.ToolbarWidgetWrapper: void <init>(android.widget.Toolbar,boolean)>
<android.telephony.TelephonyManager: int getSimCount()>
<android.view.WindowManagerPolicy: int getUserRotationMode()>
<android.os.PowerManagerInternal: void registerLowPowerModeObserver(android.os.PowerManagerInternal.LowPowerModeListener)>
<android.media.session.ISessionController: android.app.PendingIntent getLaunchPendingIntent()>
<android.os.Environment.UserEnvironment: java.io.File[] buildExternalStorageAndroidDataDirs()>
<android.database.DatabaseUtils.InsertHelper: void bind(int,boolean)>
<android.filterpacks.base.NullFilter: void process(android.filterfw.core.FilterContext)>
<android.hardware.Camera: void addCallbackBuffer(byte[])>
<android.net.NetworkStatsHistory.DataStreamUtils: void writeVarLongArray(java.io.DataOutputStream,long[],int)>
<android.content.UndoManager: int undo(android.content.UndoOwner[],int)>
<android.opengl.ETC1: void encodeBlock(java.nio.Buffer,int,java.nio.Buffer)>
<android.os.storage.StorageVolume: void setState(java.lang.String)>
<android.widget.CursorAdapter: android.database.Cursor getCursor()>
<com.android.internal.backup.LocalTransport: int clearBackupData(android.content.pm.PackageInfo)>
<android.text.method.MetaKeyKeyListener: void stopSelecting(android.view.View,android.text.Spannable)>
<android.widget.ShareActionProvider: void setShareHistoryFileName(java.lang.String)>
<android.graphics.drawable.RotateDrawable: int getIntrinsicWidth()>
<android.content.BroadcastReceiver.PendingResult: void setResultExtras(android.os.Bundle)>
<com.android.internal.widget.ActionBarView: void setWindowTitle(java.lang.CharSequence)>
<android.webkit.WebView.PrivateAccess: boolean super_onHoverEvent(android.view.MotionEvent)>
<android.os.Environment.UserEnvironment: java.io.File getMediaDir()>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder setIsAsciiCapable(boolean)>
<android.app.ActionBar.Tab: java.lang.CharSequence getText()>
<android.graphics.Matrix: void mapPoints(float[])>
<android.provider.MediaStore.Audio.Media: android.net.Uri getContentUriForPath(java.lang.String)>
<android.view.View: boolean dispatchKeyEventPreIme(android.view.KeyEvent)>
<android.hardware.camera2.legacy.RequestThreadManager.FpsCounter: void <init>(java.lang.String)>
<com.android.internal.os.BatteryStatsImpl: void pullPendingStateUpdatesLocked()>
<android.opengl.EGL14: android.opengl.EGLDisplay eglGetCurrentDisplay()>
<android.filterpacks.performance.ThroughputFilter: void process(android.filterfw.core.FilterContext)>
<android.content.IClipboard: void addPrimaryClipChangedListener(android.content.IOnPrimaryClipChangedListener,java.lang.String)>
<android.widget.DatePicker.DatePickerDelegate: void init(int,int,int,android.widget.DatePicker.OnDateChangedListener)>
<android.app.Service: android.os.IBinder onBind(android.content.Intent)>
<android.opengl.GLES10: void glTexEnvfv(int,int,float[],int)>
<android.widget.SimpleExpandableListAdapter: android.view.View newGroupView(boolean,android.view.ViewGroup)>
<android.view.RenderNode: boolean isValid()>
<android.os.Parcel: void writeFloatArray(float[])>
<com.android.internal.backup.IBackupTransport: int startRestore(long,android.content.pm.PackageInfo[])>
<android.hardware.display.DisplayManagerGlobal: void pauseWifiDisplay()>
<android.filterfw.core.VertexFrame: int getVboId()>
<android.widget.TabHost: void onDetachedFromWindow()>
<android.webkit.Plugin: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.android.internal.view.menu.ListMenuItemView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.os.BatteryStats: int getWifiSignalStrengthCount(int,int)>
<android.view.View: void buildLayer()>
<android.content.pm.ApplicationInfo.DisplayNameComparator: int compare(android.content.pm.ApplicationInfo,android.content.pm.ApplicationInfo)>
<android.view.View: android.view.View findViewByPredicateTraversal(com.android.internal.util.Predicate,android.view.View)>
<android.media.RemoteControlClient.OnMetadataUpdateListener: void onMetadataUpdate(int,java.lang.Object)>
<android.net.wifi.p2p.WifiP2pManager: void addServiceRequest(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.nsd.WifiP2pServiceRequest,android.net.wifi.p2p.WifiP2pManager.ActionListener)>
<com.android.internal.util.StateMachine: com.android.internal.util.IState getCurrentState()>
<android.os.IUserManager: boolean hasRestrictionsChallenge()>
<android.nfc.tech.MifareUltralight: byte[] transceive(byte[])>
<android.app.admin.IDevicePolicyManager: void setSecureSetting(android.content.ComponentName,java.lang.String,java.lang.String)>
<com.android.internal.telephony.ITelephonyRegistry: void notifyCellInfoForSubscriber(long,java.util.List)>
<android.renderscript.Element.Builder: android.renderscript.Element create()>
<android.os.Binder: void dump(java.io.FileDescriptor,java.lang.String[])>
<android.widget.ViewAnimator: void showNext()>
<android.media.MediaPlayer: void pause()>
<android.preference.PreferenceGroupAdapter: void <init>(android.preference.PreferenceGroup)>
<android.bluetooth.BluetoothGattDescriptor: java.util.UUID getUuid()>
<android.app.admin.IDevicePolicyManager: void setPasswordMinimumSymbols(android.content.ComponentName,int,int)>
<android.filterfw.core.Filter: void pushOutput(java.lang.String,android.filterfw.core.Frame)>
<android.media.AudioManager: void setMasterVolume(int,int)>
<android.net.NetworkStats: android.net.NetworkStats groupedByUid()>
<android.app.Notification.InboxStyle: android.app.Notification.InboxStyle setBigContentTitle(java.lang.CharSequence)>
<android.os.storage.IMountService: void mountObb(java.lang.String,java.lang.String,java.lang.String,android.os.storage.IObbActionListener,int)>
<android.content.res.Configuration: int compareTo(android.content.res.Configuration)>
<android.view.InputChannel: void readFromParcel(android.os.Parcel)>
<android.media.MediaFocusControl: void <init>(android.os.Looper,android.content.Context,android.media.AudioService.VolumeController,android.media.AudioService)>
<com.android.internal.app.IBatteryStats: void noteJobFinish(java.lang.String,int)>
<android.renderscript.Double4: android.renderscript.Double4 add(android.renderscript.Double4,double)>
<android.app.admin.DevicePolicyManager: void enableSystemApp(android.content.ComponentName,java.lang.String)>
<android.view.ContextThemeWrapper: void attachBaseContext(android.content.Context)>
<android.app.backup.IRestoreObserver: void restoreSetsAvailable(android.app.backup.RestoreSet[])>
<android.webkit.WebViewProvider: boolean canGoForward()>
<android.view.Window: void takeSurface(android.view.SurfaceHolder.Callback2)>
<android.accounts.Account: int describeContents()>
<android.app.AlertDialog: void setButton3(java.lang.CharSequence,android.content.DialogInterface.OnClickListener)>
<android.os.INetworkActivityListener: void onNetworkActive()>
<com.android.internal.view.IInputMethodSession: void viewClicked(boolean)>
<android.database.sqlite.SQLiteDirectCursorDriver: void <init>(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,android.os.CancellationSignal)>
<android.hardware.usb.UsbAccessory: int hashCode()>
<android.widget.CalendarView: int getFirstDayOfWeek()>
<android.view.accessibility.AccessibilityRecord: java.lang.CharSequence getClassName()>
<android.renderscript.Float3: void <init>(android.renderscript.Float3)>
<android.text.format.Time: void setToNow()>
<android.content.Intent: android.content.Intent putCharSequenceArrayListExtra(java.lang.String,java.util.ArrayList)>
<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorListener,int,int)>
<android.database.CursorToBulkCursorAdaptor: void <init>(android.database.Cursor,android.database.IContentObserver,java.lang.String)>
<android.bluetooth.BluetoothGattCallbackWrapper: void onMultiAdvertiseCallback(int,boolean,android.bluetooth.le.AdvertiseSettings)>
<android.graphics.Camera: void setLocation(float,float,float)>
<android.hardware.hdmi.HdmiControlManager: android.hardware.hdmi.HdmiClient getClient(int)>
<com.android.ims.ImsConfigListener: void onSetFeatureResponse(int,int,int,int)>
<android.text.method.MetaKeyKeyListener: boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent)>
<android.net.IpPrefix: int getPrefixLength()>
<android.view.WindowManagerInternal: void setMagnificationCallbacks(android.view.WindowManagerInternal.MagnificationCallbacks)>
<android.webkit.WebViewProvider.ViewDelegate: void setBackgroundColor(int)>
<com.android.ims.ImsCallProfile: void writeToParcel(android.os.Parcel,int)>
<android.content.ContentResolver: android.os.ParcelFileDescriptor openFileDescriptor(android.net.Uri,java.lang.String,android.os.CancellationSignal)>
<android.hardware.IProCameraUser: void disconnect()>
<android.view.View: boolean isFocusable()>
<android.widget.DialerFilter: void setMode(int)>
<android.content.ContentValues: java.lang.Short getAsShort(java.lang.String)>
<android.opengl.GLES30: void glGetActiveUniformsiv(int,int,java.nio.IntBuffer,int,java.nio.IntBuffer)>
<android.renderscript.Int3: void sub(int)>
<android.provider.Browser: android.database.Cursor getAllVisitedUrls(android.content.ContentResolver)>
<android.filterfw.format.ObjectFormat: android.filterfw.core.MutableFrameFormat fromObject(java.lang.Object,int,int)>
<android.graphics.Paint: void getTextBounds(java.lang.String,int,int,android.graphics.Rect)>
<android.telephony.DataConnectionRealTimeInfo: int describeContents()>
<android.media.tv.TvView: boolean dispatchTouchEvent(android.view.MotionEvent)>
<android.telephony.PreciseDataConnectionState: android.net.LinkProperties getDataConnectionLinkProperties()>
<android.content.ContentProviderResult: void <init>(int)>
<android.app.ActivityManagerInternal: void wakingUp()>
<android.renderscript.Element: android.renderscript.Element U32_4(android.renderscript.RenderScript)>
<android.app.ProfilerInfo: void <init>(java.lang.String,android.os.ParcelFileDescriptor,int,boolean)>
<android.view.DragEvent: android.view.DragEvent obtain(android.view.DragEvent)>
<android.view.View: void setBackgroundResource(int)>
<android.appwidget.AppWidgetProviderInfo: void <init>(android.os.Parcel)>
<com.android.internal.view.menu.MenuBuilder: java.util.ArrayList getActionItems()>
<android.telecom.DisconnectCause: int getCode()>
<android.view.Menu: android.view.SubMenu addSubMenu(int,int,int,int)>
<android.net.wifi.p2p.WifiP2pManager: void setDeviceName(android.net.wifi.p2p.WifiP2pManager.Channel,java.lang.String,android.net.wifi.p2p.WifiP2pManager.ActionListener)>
<android.filterfw.geometry.Point: void set(float,float)>
<android.location.GpsMeasurement: boolean hasDopplerShiftUncertaintyInHz()>
<com.android.internal.view.StandaloneActionMode: void onMenuModeChange(com.android.internal.view.menu.MenuBuilder)>
<android.animation.ValueAnimator: void setAllowRunningAsynchronously(boolean)>
<android.service.notification.Condition: boolean isValidId(android.net.Uri,java.lang.String)>
<android.content.res.TypedArray: int[] extractThemeAttrs()>
<com.android.internal.widget.ToolbarWidgetWrapper: android.view.ViewGroup getViewGroup()>
<android.media.session.MediaSession.CallbackStub: void onPause()>
<android.bluetooth.BluetoothGattServer: boolean sendResponse(android.bluetooth.BluetoothDevice,int,int,int,byte[])>
<android.app.Notification.Builder: android.app.Notification.Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews)>
<android.app.NativeActivity: void onGlobalLayout()>
<com.google.android.gles_jni.GLImpl: void glGetTexParameteriv(int,int,java.nio.IntBuffer)>
<android.view.ViewGroup: void startViewTransition(android.view.View)>
<android.media.IRemoteVolumeController: void updateRemoteController(android.media.session.ISessionController)>
<android.nfc.cardemulation.AidGroup: java.lang.String toString()>
<android.bluetooth.IBluetoothPbap: int getState()>
<android.os.Environment: boolean isExternalStorageRemovable(java.io.File)>
<com.android.internal.widget.ActionBarOverlayLayout: void onMeasure(int,int)>
<android.renderscript.Matrix2f: void load(android.renderscript.Matrix2f)>
<com.android.internal.util.StateMachine: void sendMessageAtFrontOfQueue(int,int,int)>
<android.graphics.drawable.AnimatedVectorDrawable: boolean setVisible(boolean,boolean)>
<android.app.Notification.WearableExtender: boolean getHintShowBackgroundOnly()>
<android.media.AudioManager: void avrcpSupportsAbsoluteVolume(java.lang.String,boolean)>
<android.net.http.AndroidHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>
<android.graphics.ColorMatrixColorFilter: void setColorMatrix(android.graphics.ColorMatrix)>
<com.android.internal.app.IVoiceInteractor: com.android.internal.app.IVoiceInteractorRequest startAbortVoice(java.lang.String,com.android.internal.app.IVoiceInteractorCallback,java.lang.CharSequence,android.os.Bundle)>
<com.android.internal.widget.LockPatternUtils: boolean isVisiblePatternEnabled()>
<android.text.Html: java.lang.String toHtml(android.text.Spanned)>
<android.widget.ScrollView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.app.backup.BackupTransport: void finishRestore()>
<com.android.internal.view.StandaloneActionMode: java.lang.CharSequence getSubtitle()>
<android.content.pm.ResolveInfo: java.lang.String toString()>
<android.opengl.EGL14: android.opengl.EGLSurface eglCreatePbufferSurface(android.opengl.EGLDisplay,android.opengl.EGLConfig,int[],int)>
<android.filterpacks.videosrc.SurfaceTextureSource: void tearDown(android.filterfw.core.FilterContext)>
<android.media.AudioService: boolean loadSoundEffects()>
<android.accessibilityservice.AccessibilityServiceInfo: void setCapabilities(int)>
<android.app.IAppTask: void finishAndRemoveTask()>
<android.view.ViewConfiguration: long getZoomControlsTimeout()>
<com.android.internal.view.InputConnectionWrapper: boolean setComposingRegion(int,int)>
<android.provider.MediaStore.Audio.Playlists: android.net.Uri getContentUri(java.lang.String)>
<android.telecom.DisconnectCause: int hashCode()>
<android.net.NetworkStateTracker: boolean isAvailable()>
<android.renderscript.ScriptC: void <init>(int,android.renderscript.RenderScript)>
<android.media.Rating: float getPercentRating()>
<android.renderscript.Element: android.renderscript.Element U32_2(android.renderscript.RenderScript)>
<android.widget.Scroller: void startScroll(int,int,int,int)>
<android.media.MediaCodecInfo.CodecCapabilities: android.media.MediaCodecInfo.CodecCapabilities dup()>
<android.graphics.drawable.LayerDrawable: void getHotspotBounds(android.graphics.Rect)>
<android.bluetooth.BluetoothGattServer: void cancelConnection(android.bluetooth.BluetoothDevice)>
<android.database.sqlite.SQLiteDirectCursorDriver: android.database.Cursor query(android.database.sqlite.SQLiteDatabase.CursorFactory,java.lang.String[])>
<android.gesture.GestureOverlayView: void setGestureStrokeAngleThreshold(float)>
<android.provider.MediaStore.Audio.Media: android.net.Uri getContentUri(java.lang.String)>
<android.media.audiopolicy.AudioPolicy: java.lang.String toString()>
<android.net.IConnectivityManager: void releaseNetworkRequest(android.net.NetworkRequest)>
<com.android.internal.os.BatteryStatsImpl.Uid: void noteStartSyncLocked(java.lang.String,long)>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo focusSearch(int)>
<android.media.AudioSystem: int setMasterVolume(float)>
<android.media.audiofx.EnvironmentalReverb.Settings: void <init>(java.lang.String)>
<android.hardware.hdmi.HdmiControlManager: void removeHotplugEventListener(android.hardware.hdmi.HdmiControlManager.HotplugEventListener)>
<android.webkit.WebViewProvider: void requestFocusNodeHref(android.os.Message)>
<android.appwidget.AppWidgetManager: boolean bindAppWidgetIdIfAllowed(int,android.content.ComponentName)>
<android.telephony.PreciseDataConnectionState: int hashCode()>
<android.app.Fragment: void setReenterTransition(android.transition.Transition)>
<android.view.Surface: void unlockCanvas(android.graphics.Canvas)>
<android.telecom.Call.Details: android.telecom.PhoneAccountHandle getAccountHandle()>
<com.android.internal.app.ProcessStats: void dumpSummaryLocked(java.io.PrintWriter,java.lang.String,long,boolean)>
<android.graphics.drawable.ScaleDrawable: void setAlpha(int)>
<android.widget.TextView: void setHint(int)>
<android.print.PrintAttributes.Margins: int getRightMils()>
<android.widget.DatePicker.DatePickerDelegate: java.util.Calendar getMaxDate()>
<android.content.ContentProviderOperation.Builder: android.content.ContentProviderOperation.Builder withValue(java.lang.String,java.lang.Object)>
<android.service.fingerprint.FingerprintUtils: int[] getFingerprintIdsForUser(android.content.ContentResolver,int)>
<android.net.NetworkInfo: void setIsAvailable(boolean)>
<android.widget.AbsListView: android.view.ContextMenu.ContextMenuInfo getContextMenuInfo()>
<android.hardware.location.IGeofenceHardware: boolean unregisterForMonitorStateChangeCallback(int,android.hardware.location.IGeofenceHardwareMonitorCallback)>
<android.media.TtmlTrack: void onTtmlNodeParsed(android.media.TtmlNode)>
<com.android.internal.view.menu.MenuDialogHelper: void dismiss()>
<android.view.View.AccessibilityDelegate: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)>
<android.app.Activity: void setProgressBarIndeterminateVisibility(boolean)>
<android.content.ContentResolver: int getIsSyncableAsUser(android.accounts.Account,java.lang.String,int)>
<android.text.GraphicsOperations: float measureText(int,int,android.graphics.Paint)>
<android.hardware.camera2.CaptureFailure: void <init>(android.hardware.camera2.CaptureRequest,int,boolean,int,long)>
<android.net.wifi.WifiActivityEnergyInfo: int getControllerTxTimeMillis()>
<android.util.EventLogTags: android.util.EventLogTags.Description get(int)>
<com.android.internal.widget.ActionBarView: boolean isSplit()>
<android.graphics.Path: boolean isInverseFillType()>
<android.os.Debug: int getGlobalClassInitCount()>
<android.text.Editable.Factory: android.text.Editable newEditable(java.lang.CharSequence)>
<android.widget.HorizontalScrollView: android.os.Parcelable onSaveInstanceState()>
<com.android.internal.view.IInputContext: void performPrivateCommand(java.lang.String,android.os.Bundle)>
<com.android.internal.util.XmlUtils: void writeMapXml(java.util.Map,java.io.OutputStream)>
<android.view.View.OnKeyListener: boolean onKey(android.view.View,int,android.view.KeyEvent)>
<android.widget.RemoteViews: void setRemoteAdapter(int,int,android.content.Intent)>
<android.media.projection.MediaProjectionInfo: int hashCode()>
<android.hardware.camera2.impl.CallbackProxies.DeviceStateCallbackProxy: void onBusy(android.hardware.camera2.CameraDevice)>
<android.media.Rating: boolean isRated()>
<android.preference.Preference.BaseSavedState: void <init>(android.os.Parcelable)>
<android.app.job.IJobScheduler: int schedule(android.app.job.JobInfo)>
<android.database.CursorWrapper: void unregisterContentObserver(android.database.ContentObserver)>
<android.accounts.IAccountManager: void hasFeatures(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String[])>
<android.os.Environment: java.io.File[] buildExternalStorageAppDataDirs(java.lang.String)>
<android.widget.ZoomButtonsController: boolean isAutoDismissed()>
<android.text.style.TtsSpan.OrdinalBuilder: void <init>(java.lang.String)>
<android.view.View: float getScaleX()>
<android.webkit.WebView: android.print.PrintDocumentAdapter createPrintDocumentAdapter()>
<android.view.accessibility.CaptioningManager.CaptionStyle: boolean hasBackgroundColor()>
<android.widget.GridView: void onFocusChanged(boolean,int,android.graphics.Rect)>
<android.widget.Spinner: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.media.ClosedCaptionTrack: void onData(byte[],boolean,long)>
<com.android.internal.os.BatteryStatsImpl: boolean startIteratingOldHistoryLocked()>
<android.text.format.Time: int getActualMaximum(int)>
<android.location.GpsClock: long getFullBiasInNs()>
<android.app.backup.FileBackupHelper: void performBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>
<com.android.internal.widget.LockScreenWidgetInterface: void setCallback(com.android.internal.widget.LockScreenWidgetCallback)>
<android.telecom.Connection: android.telecom.Connection removeConnectionListener(android.telecom.Connection.Listener)>
<android.os.storage.IMountService: int fixPermissionsSecureContainer(java.lang.String,int,java.lang.String)>
<android.view.KeyEvent: boolean isConfirmKey(int)>
<android.widget.AbsListView: boolean onGenericMotionEvent(android.view.MotionEvent)>
<com.android.internal.app.WindowDecorActionBar: void setListNavigationCallbacks(android.widget.SpinnerAdapter,android.app.ActionBar.OnNavigationListener)>
<android.os.UserManager: void setApplicationRestrictions(java.lang.String,android.os.Bundle,android.os.UserHandle)>
<android.app.IActivityManager: boolean requestVisibleBehind(android.os.IBinder,boolean)>
<android.net.wifi.WifiManager.MulticastLock: void finalize()>
<android.content.pm.PackageInstaller: android.content.pm.PackageInstaller.Session openSession(int)>
<android.view.SurfaceControl: void screenshot(android.os.IBinder,android.view.Surface,int,int,int,int,boolean)>
<android.view.View: android.view.ViewRootImpl getViewRootImpl()>
<android.content.res.ColorStateList: boolean isOpaque()>
<android.bluetooth.BluetoothHealth: android.os.ParcelFileDescriptor getMainChannelFd(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration)>
<android.content.IntentFilter: void addDataAuthority(android.content.IntentFilter.AuthorityEntry)>
<android.util.FloatMath: float ceil(float)>
<android.content.pm.PackageInstaller.SessionInfo: void writeToParcel(android.os.Parcel,int)>
<android.media.audiofx.Visualizer: int setServerDiedListener(android.media.audiofx.Visualizer.OnServerDiedListener)>
<android.content.pm.PackageParser.Permission: void <init>(android.content.pm.PackageParser.Package)>
<android.view.ViewGroup: boolean onRequestFocusInDescendants(int,android.graphics.Rect)>
<android.app.IActivityManager: boolean navigateUpTo(android.os.IBinder,android.content.Intent,int,android.content.Intent)>
<android.app.ActivityManagerProxy: java.lang.String getPackageForToken(android.os.IBinder)>
<com.android.internal.statusbar.StatusBarIcon: int describeContents()>
<android.net.wifi.WifiManager: int getAllowScansWithTraffic()>
<android.bluetooth.IBluetooth: boolean setPasskey(android.bluetooth.BluetoothDevice,boolean,int,byte[])>
<android.os.RecoverySystem: void installPackage(android.content.Context,java.io.File)>
<android.view.WindowManager.InvalidDisplayException: void <init>(java.lang.String)>
<com.google.android.gles_jni.GLImpl: void glLineWidth(float)>
<android.view.HardwareRenderer.HardwareDrawCallbacks: void onHardwarePreDraw(android.view.HardwareCanvas)>
<android.print.PrintAttributes.MediaSize: android.print.PrintAttributes.MediaSize asLandscape()>
<com.android.internal.telecom.IConnectionService: void swapConference(java.lang.String)>
<android.os.Registrant: void <init>(android.os.Handler,int,java.lang.Object)>
<android.gesture.GestureOverlayView: void addOnGesturePerformedListener(android.gesture.GestureOverlayView.OnGesturePerformedListener)>
<android.util.Base64OutputStream: void write(byte[],int,int)>
<android.app.admin.DevicePolicyManager: void setCameraDisabled(android.content.ComponentName,boolean)>
<android.sax.RootElement: void <init>(java.lang.String,java.lang.String)>
<android.renderscript.Long4: android.renderscript.Long4 mod(android.renderscript.Long4,android.renderscript.Long4)>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumNumeric(android.content.ComponentName)>
<android.renderscript.RenderScriptGL: void bindRootScript(android.renderscript.Script)>
<android.graphics.drawable.PictureDrawable: void <init>(android.graphics.Picture)>
<com.android.ims.ImsCallProfile: int getVideoStateFromCallType(int)>
<android.content.ContentProviderOperation: android.content.ContentProviderOperation.Builder newDelete(android.net.Uri)>
<android.widget.GridLayout: void setColumnOrderPreserved(boolean)>
<android.media.session.ISession: void setMediaButtonReceiver(android.app.PendingIntent)>
<com.android.internal.view.IInputMethodManager: void registerSuggestionSpansForNotification(android.text.style.SuggestionSpan[])>
<android.widget.AbsListView: boolean performAccessibilityAction(int,android.os.Bundle)>
<android.media.WebVttRenderingWidget: void setActiveCues(java.util.Vector)>
<android.service.voice.AlwaysOnHotwordDetector.EventPayload: android.media.AudioFormat getCaptureAudioFormat()>
<android.provider.Settings.Secure: int getIntForUser(android.content.ContentResolver,java.lang.String,int,int)>
<android.webkit.PluginStub: android.view.View getEmbeddedView(int,android.content.Context)>
<android.preference.PreferenceScreen: android.app.Dialog getDialog()>
<android.media.audiofx.NoiseSuppressor: boolean isAvailable()>
<com.android.internal.view.menu.MenuView: int getWindowAnimations()>
<android.view.WindowManagerPolicy.WindowManagerFuncs: void switchKeyboardLayout(int,int)>
<android.media.SubtitleTrack: void updateView(java.util.Vector)>
<android.service.dreams.DreamService: android.view.WindowManager getWindowManager()>
<android.preference.SwitchPreference: void <init>(android.content.Context)>
<android.renderscript.ScriptC: void <init>(android.renderscript.RenderScript,java.lang.String,byte[],byte[])>
<android.content.ContentProviderClient: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setEnabled(boolean)>
<android.widget.TabWidget: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.net.NetworkRequest: java.lang.String toString()>
<android.nfc.cardemulation.CardEmulation: boolean categoryAllowsForegroundPreference(java.lang.String)>
<android.filterpacks.base.NullFilter: void setupPorts()>
<android.os.SystemClock: long uptimeMillis()>
<android.opengl.GLES11Ext: void glFogxOES(int,int)>
<com.android.internal.widget.multiwaveview.TargetDrawable: void setEnabled(boolean)>
<com.android.internal.os.BinderInternal: long getLastGcTime()>
<android.os.Parcel: void writeSize(android.util.Size)>
<android.renderscript.Long2: android.renderscript.Long2 div(android.renderscript.Long2,android.renderscript.Long2)>
<android.view.View: boolean postDelayed(java.lang.Runnable,long)>
<android.view.accessibility.AccessibilityInteractionClient: java.util.List getWindows(int)>
<android.telecom.PhoneAccount.Builder: void <init>(android.telecom.PhoneAccountHandle,java.lang.CharSequence)>
<android.widget.RemoteViews: void setShort(int,java.lang.String,short)>
<android.net.NetworkCapabilities: android.net.NetworkCapabilities removeTransportType(int)>
<android.content.ContentProvider: java.lang.String getCallingPackage()>
<android.widget.TextView: void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int)>
<android.graphics.ColorFilter: void finalize()>
<android.media.MediaPlayer: void setOnPreparedListener(android.media.MediaPlayer.OnPreparedListener)>
<android.app.ResultInfo: void writeToParcel(android.os.Parcel,int)>
<android.app.ActivityThread: void performNewIntents(android.os.IBinder,java.util.List)>
<android.view.inputmethod.InputMethodInfo: void <init>(java.lang.String,java.lang.String,java.lang.CharSequence,java.lang.String)>
<android.graphics.Path: void rCubicTo(float,float,float,float,float,float)>
<android.telephony.ServiceState: int getCdmaEriIconMode()>
<android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setManufacturerData(int,byte[])>
<android.net.http.HttpResponseCache: void delete()>
<android.animation.Keyframes: void invalidateCache()>
<android.renderscript.ScriptIntrinsicBlur: android.renderscript.Script.KernelID getKernelID()>
<android.hardware.display.DisplayManagerGlobal: void registerDisplayListener(android.hardware.display.DisplayManager.DisplayListener,android.os.Handler)>
<android.text.style.SubscriptSpan: int describeContents()>
<android.os.Binder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>
<android.view.ViewStub: void setVisibility(int)>
<android.filterfw.io.PatternScanner: void <init>(java.lang.String,java.util.regex.Pattern)>
<android.media.DataSource: long getSize()>
<android.view.ViewPropertyAnimator: long getDuration()>
<com.android.server.NetworkManagementSocketTagger: int kernelToTag(java.lang.String)>
<android.content.ClipData.Item: java.lang.String coerceToHtmlText(android.content.Context)>
<android.content.BroadcastReceiver: boolean getDebugUnregister()>
<android.graphics.BitmapRegionDecoder: android.graphics.Bitmap decodeRegion(android.graphics.Rect,android.graphics.BitmapFactory.Options)>
<android.hardware.camera2.impl.CameraMetadataNative: byte[] readValues(int)>
<com.android.internal.telephony.IMms: android.net.Uri addMultimediaMessageDraft(java.lang.String,android.net.Uri)>
<android.media.TimedText.CharPos: void <init>(int,int)>
<com.android.internal.view.menu.ActionMenuItem: boolean invoke()>
<android.hardware.hdmi.IHdmiControlService: void setArcMode(boolean)>
<android.renderscript.Mesh.TriangleMeshBuilder: android.renderscript.Mesh create(boolean)>
<android.widget.ExpandableListAdapter: void registerDataSetObserver(android.database.DataSetObserver)>
<android.media.AudioService: void onSystemReady()>
<android.widget.PopupWindow: void setTouchInterceptor(android.view.View.OnTouchListener)>
<android.content.res.TypedArray: int getIndex(int)>
<android.app.FragmentBreadCrumbs: void <init>(android.content.Context)>
<android.opengl.GLES31: void glGetMultisamplefv(int,int,java.nio.FloatBuffer)>
<android.preference.Preference: int getPersistedInt(int)>
<android.widget.GridView: int getNumColumns()>
<com.android.internal.app.WindowDecorActionBar: boolean isShowing()>
<android.opengl.GLES30: long glFenceSync(int,int)>
<android.webkit.WebSettings: int getUserAgent()>
<android.accounts.AuthenticatorException: void <init>(java.lang.String,java.lang.Throwable)>
<android.media.Ringtone: void setUri(android.net.Uri)>
<android.filterpacks.imageproc.TintFilter: void setupPorts()>
<android.provider.ContactsContract.StatusUpdates: int getPresenceIconResourceId(int)>
<android.os.FileUtils: int setPermissions(java.io.FileDescriptor,int,int,int)>
<android.database.sqlite.SQLiteDatabaseConfiguration: void <init>(java.lang.String,int)>
<android.webkit.WebView: void setLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.drm.DrmSupportInfo: java.util.Iterator getFileSuffixIterator()>
<android.content.pm.ContainerEncryptionParams: long getDataEnd()>
<android.app.Dialog: android.view.LayoutInflater getLayoutInflater()>
<android.os.CommonTimeConfig: int getMasterAnnounceInterval()>
<android.view.animation.ScaleAnimation: void initialize(int,int,int,int)>
<com.android.internal.backup.LocalTransport: java.lang.String transportDirName()>
<com.google.android.gles_jni.GLImpl: void glBlendEquation(int)>
<android.provider.Browser: void deleteHistoryTimeFrame(android.content.ContentResolver,long,long)>
<android.os.Parcel: boolean[] createBooleanArray()>
<android.app.IActivityManager: boolean moveActivityTaskToBack(android.os.IBinder,boolean)>
<android.preference.EditTextPreference: void onSetInitialValue(boolean,java.lang.Object)>
<android.app.admin.DeviceAdminReceiver: void onPasswordSucceeded(android.content.Context,android.content.Intent)>
<android.content.SyncAdapterType: void <init>(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean,java.lang.String)>
<android.renderscript.Int4: android.renderscript.Int4 sub(android.renderscript.Int4,android.renderscript.Int4)>
<com.android.ims.ImsSsInfo: void <init>(android.os.Parcel)>
<android.text.Selection.PositionIterator: int following(int)>
<android.view.RenderNodeAnimator: long getStartDelay()>
<android.widget.ScrollBarDrawable: int getOpacity()>
<android.graphics.Interpolator: android.graphics.Interpolator.Result timeToValues(int,float[])>
<android.widget.DialerFilter: void onFinishInflate()>
<com.android.internal.widget.EditableInputConnection: boolean endBatchEdit()>
<android.os.ServiceManagerProxy: void setPermissionController(android.os.IPermissionController)>
<android.graphics.drawable.RippleDrawable: int getOpacity()>
<android.graphics.drawable.AnimatedRotateDrawable: boolean onStateChange(int[])>
<android.util.Rational: double doubleValue()>
<android.net.NetworkStats: android.net.NetworkStats addIfaceValues(java.lang.String,long,long,long,long)>
<com.android.internal.os.BatteryStatsImpl.Uid: com.android.internal.os.BatteryStatsImpl getBatteryStats()>
<android.service.textservice.SpellCheckerService.Session: android.view.textservice.SuggestionsInfo onGetSuggestions(android.view.textservice.TextInfo,int)>
<android.app.Notification.Style: void populateBigContentView(android.app.Notification)>
<android.media.session.ISessionController: void unregisterCallbackListener(android.media.session.ISessionControllerCallback)>
<android.text.method.KeyListener: int getInputType()>
<android.widget.AdapterViewAnimator: void <init>(android.content.Context)>
<android.widget.GridLayout: android.widget.GridLayout.Spec spec(int,android.widget.GridLayout.Alignment)>
<android.opengl.GLES31: void glProgramUniform2ui(int,int,int,int)>
<android.hardware.soundtrigger.SoundTrigger.KeyphraseRecognitionExtra: int hashCode()>
<android.nfc.INfcUnlockHandler: boolean onUnlockAttempted(android.nfc.Tag)>
<android.hardware.camera2.utils.Decorator.DecoratorListener: void onFinally(java.lang.reflect.Method,java.lang.Object[])>
<android.bluetooth.BluetoothGattCallback: void onMtuChanged(android.bluetooth.BluetoothGatt,int,int)>
<android.widget.TabHost: android.view.View getCurrentTabView()>
<android.os.PowerManager.WakeLock: void setHistoryTag(java.lang.String)>
<android.content.res.AssetManager: java.lang.String getAssetAllocations()>
<android.app.KeyguardManager.KeyguardLock: void disableKeyguard()>
<android.os.INetworkManagementService: void setPermission(java.lang.String,int[])>
<android.content.SyncRequest: android.os.Bundle getBundle()>
<android.opengl.GLUtils: void setTracingLevel(int)>
<android.gesture.GestureOverlayView.OnGesturingListener: void onGesturingStarted(android.gesture.GestureOverlayView)>
<android.speech.tts.TextToSpeech: java.util.Set getAvailableLanguages()>
<com.android.internal.util.StateMachine: void start()>
<android.preference.PreferenceActivity.Header: java.lang.CharSequence getBreadCrumbTitle(android.content.res.Resources)>
<android.ddm.DdmHandleThread: org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)>
<com.android.ims.internal.IImsCallSessionListener: void callSessionProgressing(com.android.ims.internal.IImsCallSession,com.android.ims.ImsStreamMediaProfile)>
<android.widget.Button: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.widget.AbsListView: void setOverScrollMode(int)>
<com.android.internal.view.InputConnectionWrapper: java.lang.CharSequence getSelectedText(int)>
<android.util.JsonWriter: android.util.JsonWriter value(boolean)>
<android.content.ContentValues: void writeToParcel(android.os.Parcel,int)>
<com.android.ims.internal.IImsCallSession: void extendToConference(java.lang.String[])>
<android.media.tv.TvInputManager.HardwareCallback: void onStreamConfigChanged(android.media.tv.TvStreamConfig[])>
<android.bluetooth.IBluetoothCallback: void onBluetoothStateChange(int,int)>
<android.graphics.Canvas: void drawPicture(android.graphics.Picture,android.graphics.Rect)>
<android.widget.HorizontalScrollView: boolean shouldDelayChildPressedState()>
<android.webkit.WebViewFactoryProvider.Statics: java.lang.String findAddress(java.lang.String)>
<android.os.FileObserver: void <init>(java.lang.String)>
<android.net.INetworkManagementEventObserver: void addressUpdated(java.lang.String,android.net.LinkAddress)>
<com.android.internal.widget.multiwaveview.PointCloud: void setScale(float)>
<android.widget.ExpandableListView: boolean performItemClick(android.view.View,int,long)>
<com.android.internal.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)>
<android.view.View: void onFocusLost()>
<android.os.SystemVibrator: void <init>(android.content.Context)>
<android.app.job.JobParameters: void <init>(android.os.IBinder,int,android.os.PersistableBundle,boolean)>
<android.hardware.camera2.impl.CameraMetadataNative.Key: void <init>(java.lang.String,android.hardware.camera2.utils.TypeReference)>
<android.hardware.location.GeofenceHardwareRequestParcelable: int getNotificationResponsiveness()>
<android.database.BulkCursorToCursorAdaptor: void initialize(android.database.BulkCursorDescriptor)>
<android.animation.Keyframes: void setEvaluator(android.animation.TypeEvaluator)>
<android.content.ContentProviderProxy: void <init>(android.os.IBinder)>
<android.text.AlteredCharSequence: java.lang.CharSequence subSequence(int,int)>
<android.media.MediaRouter: void rebindAsUser(int)>
<android.preference.Preference: android.view.View getView(android.view.View,android.view.ViewGroup)>
<android.content.Intent: java.lang.String resolveTypeIfNeeded(android.content.ContentResolver)>
<android.content.ContextWrapper: void sendStickyBroadcast(android.content.Intent)>
<com.android.internal.view.menu.MenuView.ItemView: void initialize(com.android.internal.view.menu.MenuItemImpl,int)>
<android.widget.HeaderViewListAdapter: java.lang.Object getItem(int)>
<android.text.method.MultiTapKeyListener: void onSpanRemoved(android.text.Spannable,java.lang.Object,int,int)>
<android.app.AppOpsManager: void checkPackage(int,java.lang.String)>
<android.widget.ViewAnimator: void setOutAnimation(android.content.Context,int)>
<android.widget.VideoView: android.os.Looper getSubtitleLooper()>
<android.graphics.Color: int HSVToColor(float[])>
<android.preference.PreferenceFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<android.os.BatteryStats: java.lang.String formatRatioLocked(long,long)>
<android.accounts.IAccountManager: android.accounts.Account[] getAccountsForPackage(java.lang.String,int)>
<android.os.INetworkManagementService: void addInterfaceToLocalNetwork(java.lang.String,java.util.List)>
<android.renderscript.Element: android.renderscript.Element I32_4(android.renderscript.RenderScript)>
<android.media.MediaRouter.RouteInfo: java.lang.CharSequence getName()>
<android.hardware.Camera: void setErrorCallback(android.hardware.Camera.ErrorCallback)>
<android.net.wifi.WifiSsid: byte[] getOctets()>
<android.app.admin.IDevicePolicyManager: boolean switchUser(android.content.ComponentName,android.os.UserHandle)>
<android.app.IActivityManager: boolean finishActivityAffinity(android.os.IBinder)>
<android.widget.AdapterView.OnItemSelectedListener: void onNothingSelected(android.widget.AdapterView)>
<android.graphics.drawable.LayerDrawable: void setHotspotBounds(int,int,int,int)>
<android.widget.ExpandableListView: void setOnGroupCollapseListener(android.widget.ExpandableListView.OnGroupCollapseListener)>
<android.net.http.DelegatingSSLSession: long getLastAccessedTime()>
<android.media.tv.TvInputInfo: int hashCode()>
<android.widget.DialerFilter: boolean isQwertyKeyboard()>
<android.inputmethodservice.InputMethodService.InputMethodSessionImpl: void updateSelection(int,int,int,int,int,int)>
<android.opengl.GLUtils: int getInternalFormat(android.graphics.Bitmap)>
<android.content.IntentSender.OnFinished: void onSendFinished(android.content.IntentSender,android.content.Intent,int,java.lang.String,android.os.Bundle)>
<android.view.WindowManagerPolicy: void finishLayoutLw()>
<android.webkit.WebViewProvider: boolean zoomIn()>
<android.hardware.soundtrigger.SoundTrigger.Keyphrase: boolean equals(java.lang.Object)>
<android.bluetooth.BluetoothMap: void finalize()>
<android.view.GhostView: android.view.GhostView getGhost(android.view.View)>
<com.android.internal.telecom.IVideoCallback: void changeCallDataUsage(int)>
<android.app.ActivityManagerProxy: boolean convertToTranslucent(android.os.IBinder,android.app.ActivityOptions)>
<android.media.AudioManager: void setWiredDeviceConnectionState(int,int,java.lang.String)>
<android.app.ExpandableListActivity: void onGroupCollapse(int)>
<android.view.Display: android.view.DisplayAdjustments getDisplayAdjustments()>
<android.hardware.camera2.params.Face: android.graphics.Point getMouthPosition()>
<com.android.internal.widget.ToolbarWidgetWrapper: void setSplitToolbar(boolean)>
<android.renderscript.Long4: android.renderscript.Long4 add(android.renderscript.Long4,android.renderscript.Long4)>
<android.view.ViewRootImpl: boolean canResolveTextDirection()>
<android.filterpacks.imageproc.ColorTemperatureFilter: void setupPorts()>
<android.telephony.TelephonyManager: java.lang.String getNetworkOperator()>
<android.app.backup.BackupTransport: android.content.Intent dataManagementIntent()>
<android.view.View: boolean getGlobalVisibleRect(android.graphics.Rect,android.graphics.Point)>
<android.os.StatFs: long getBlockSizeLong()>
<android.net.MobileLinkQualityInfo: void setEvdoSnr(int)>
<android.app.VoiceInteractor: boolean[] supportsCommands(java.lang.String[])>
<com.android.internal.telephony.GsmAlphabet: int countGsmSeptets(char)>
<android.location.CountryDetector: void <init>(android.location.ICountryDetector)>
<android.nfc.INfcCardEmulation: java.util.List getServices(int,java.lang.String)>
<android.graphics.Canvas: int saveLayerAlpha(android.graphics.RectF,int)>
<android.opengl.GLES31: void glGetProgramResourceiv(int,int,int,int,java.nio.IntBuffer,int,java.nio.IntBuffer,java.nio.IntBuffer)>
<android.printservice.PrinterDiscoverySession: java.util.List getPrinters()>
<android.telephony.CellSignalStrengthLte: int getAsuLevel()>
<android.view.Surface: void allocateBuffers()>
<android.security.KeyChainException: void <init>(java.lang.String)>
<android.os.INetworkManagementService: boolean isTetheringStarted()>
<android.view.ViewGroup: void setLayoutAnimationListener(android.view.animation.Animation.AnimationListener)>
<android.hardware.camera2.legacy.CaptureCollector: boolean hasPendingPreviewCaptures()>
<android.view.accessibility.AccessibilityEventSource: void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)>
<android.util.Spline.LinearSpline: float interpolate(float)>
<android.app.AppOpsManager: void finishOp(int)>
<android.os.Process: int getUidForName(java.lang.String)>
<android.net.WebAddress: void <init>(java.lang.String)>
<android.opengl.EGL14: boolean eglDestroySurface(android.opengl.EGLDisplay,android.opengl.EGLSurface)>
<android.renderscript.ProgramVertex.Builder: void <init>(android.renderscript.RenderScript)>
<android.os.storage.IMountService: void unregisterListener(android.os.storage.IMountServiceListener)>
<android.renderscript.Allocation: void setSurface(android.view.Surface)>
<android.speech.srec.Recognizer.Grammar: void finalize()>
<android.opengl.GLSurfaceView: void onDetachedFromWindow()>
<android.net.http.EventHandler: void certificate(android.net.http.SslCertificate)>
<com.android.internal.widget.ActionBarView: void setNavigationContentDescription(java.lang.CharSequence)>
<android.util.MathUtils: float max(int,int,int)>
<android.opengl.GLES10: void glFinish()>
<android.os.BatteryProperty: void writeToParcel(android.os.Parcel,int)>
<android.graphics.Region: boolean set(int,int,int,int)>
<android.gesture.GestureOverlayView: void setGestureVisible(boolean)>
<android.graphics.drawable.RotateDrawable: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>
<android.telecom.Connection.VideoProvider: void receiveSessionModifyRequest(android.telecom.VideoProfile)>
<android.bluetooth.IBluetoothMap: int getState()>
<android.media.tv.TvInputManager: void createSession(java.lang.String,android.media.tv.TvInputManager.SessionCallback,android.os.Handler)>
<android.filterfw.format.ImageFormat: int bytesPerSampleForColorspace(int)>
<android.filterpacks.base.NullFilter: void <init>(java.lang.String)>
<android.widget.AdapterViewFlipper: void setAutoStart(boolean)>
<android.content.res.AssetFileDescriptor.AutoCloseInputStream: long skip(long)>
<android.view.accessibility.AccessibilityNodeInfo: void setEditable(boolean)>
<android.security.KeyStore: boolean isEmpty()>
<com.android.internal.widget.LockPatternUtils: boolean isBiometricWeakInstalled()>
<com.android.internal.telecom.IVideoProvider: void setPauseImage(java.lang.String)>
<android.widget.AbsListView: void onCancelPendingInputEvents()>
<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.internal.app.ProcessStats.TotalMemoryUseCollection: void <init>(int[],int[])>
<android.text.GetChars: void getChars(int,int,char[],int)>
<com.android.server.net.BaseNetworkObserver: void interfaceAdded(java.lang.String)>
<com.android.internal.util.StateMachine.LogRec: java.lang.String toString()>
<android.net.ConnectivityManager: boolean isNetworkSupported(int)>
<android.appwidget.AppWidgetManager: void setBindAppWidgetPermission(java.lang.String,int,boolean)>
<android.view.View: void setRevealClip(boolean,float,float,float)>
<android.view.animation.Animation: void getInvalidateRegion(int,int,int,int,android.graphics.RectF,android.view.animation.Transformation)>
<android.transition.Transition: void forceVisibility(int,boolean)>
<android.app.IActivityManager: void setFocusedStack(int)>
<android.widget.TableRow: android.widget.LinearLayout.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.view.SurfaceControl: boolean clearContentFrameStats()>
<android.gesture.GestureOverlayView: int getOrientation()>
<com.android.internal.widget.multiwaveview.GlowPadView: void <init>(android.content.Context)>
<android.app.StatusBarManager: void setIcon(java.lang.String,int,int,java.lang.String)>
<android.hardware.Camera.PreviewCallback: void onPreviewFrame(byte[],android.hardware.Camera)>
<android.os.FileBridge: java.io.FileDescriptor getClientSocket()>
<com.android.internal.statusbar.StatusBarIcon: void writeToParcel(android.os.Parcel,int)>
<android.app.ActivityManager.TaskDescription: int getPrimaryColor()>
<com.android.ims.internal.IImsVideoCallProvider: void setCamera(java.lang.String)>
<android.opengl.GLES31: void glProgramUniformMatrix2x3fv(int,int,int,boolean,float[],int)>
<android.hardware.hdmi.HdmiDeviceInfo: int getVendorId()>
<android.net.wifi.p2p.WifiP2pGroup: void setOwner(android.net.wifi.p2p.WifiP2pDevice)>
<android.renderscript.Float3: java.lang.Float dotProduct(android.renderscript.Float3,android.renderscript.Float3)>
<android.animation.ValueAnimator: java.lang.String toString()>
<android.media.effect.FilterEffect: java.lang.String getName()>
<android.media.VolumeProvider: void <init>(int,int,int)>
<android.webkit.ConsoleMessage: java.lang.String message()>
<android.media.tv.TvInputService.Session: boolean onTune(android.net.Uri,android.os.Bundle)>
<com.android.internal.inputmethod.InputMethodUtils.InputMethodSettings: void appendAndPutEnabledInputMethodLocked(java.lang.String,boolean)>
<android.location.CountryDetector: void removeCountryListener(android.location.CountryListener)>
<android.hardware.Camera.Parameters: void dump()>
<com.google.android.gles_jni.GLImpl: void glGetFloatv(int,float[],int)>
<android.content.ContentQueryMap: void finalize()>
<android.opengl.GLES30: void glDrawBuffers(int,java.nio.IntBuffer)>
<android.os.ParcelableParcel: java.lang.ClassLoader getClassLoader()>
<android.view.ViewDebug: void stopRecyclerTracing()>
<android.filterfw.geometry.Quad: android.filterfw.geometry.Quad translated(float,float)>
<android.transition.ChangeClipBounds: void captureEndValues(android.transition.TransitionValues)>
<android.media.RemoteController.OnClientUpdateListener: void onClientPlaybackStateUpdate(int)>
<android.renderscript.FieldPacker: void subalign(int)>
<android.preference.MultiSelectListPreference: int findIndexOfValue(java.lang.String)>
<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceResponse: void <init>(int,int,android.net.wifi.p2p.WifiP2pDevice,byte[])>
<android.app.KeyguardManager: boolean inKeyguardRestrictedInputMode()>
<android.telephony.CellSignalStrengthLte: int getTimingAdvance()>
<android.media.AudioTrack: int getNotificationMarkerPosition()>
<android.widget.AdapterView: android.view.View getSelectedView()>
<android.widget.MediaController: void onFinishInflate()>
<android.database.sqlite.SQLiteDebug: void dump(android.util.Printer,java.lang.String[])>
<android.filterpacks.base.RetargetFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<android.media.tv.TvInputService: java.lang.String onHdmiDeviceRemoved(android.hardware.hdmi.HdmiDeviceInfo)>
<com.android.internal.widget.LockScreenWidgetCallback: void userActivity(android.view.View)>
<android.os.BatteryStats: long getMobileRadioActiveUnknownTime(int)>
<android.renderscript.Int4: void <init>(android.renderscript.Int4)>
<android.os.CountDownTimer: void onFinish()>
<android.transition.TransitionManager: void setTransition(android.transition.Scene,android.transition.Scene,android.transition.Transition)>
<android.content.Context: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<android.app.AlertDialog: void setButton(int,java.lang.CharSequence,android.content.DialogInterface.OnClickListener)>
<android.view.ViewParent: void bringChildToFront(android.view.View)>
<android.media.session.MediaSession: void setQueueTitle(java.lang.CharSequence)>
<android.bluetooth.BluetoothGattService: void <init>(java.util.UUID,int)>
<android.widget.ScrollBarDrawable: void setAlpha(int)>
<android.filterfw.core.SerializedFrame: java.lang.Object getObjectValue()>
<android.speech.tts.TextToSpeechService: java.util.Set onGetFeaturesForLanguage(java.lang.String,java.lang.String,java.lang.String)>
<android.nfc.tech.MifareClassic: int blockToSector(int)>
<android.net.http.DelegatingSSLSession: boolean isValid()>
<android.telephony.CellSignalStrengthLte: int getLevel()>
<android.opengl.GLES30: void glDrawRangeElements(int,int,int,int,int,int)>
<android.text.method.MetaKeyKeyListener: int getMetaState(java.lang.CharSequence)>
<android.widget.NumberPicker: boolean getWrapSelectorWheel()>
<android.content.RestrictionsManager: void notifyPermissionResponse(java.lang.String,android.os.PersistableBundle)>
<android.bluetooth.IBluetoothMap: java.util.List getConnectedDevices()>
<android.hardware.camera2.params.LensShadingMap: float getGainFactor(int,int,int)>
<android.content.ContentResolver: void setIsSyncable(android.accounts.Account,java.lang.String,int)>
<android.view.inputmethod.CursorAnchorInfo: float getInsertionMarkerBaseline()>
<com.android.internal.widget.PasswordEntryKeyboard: void <init>(android.content.Context,int,java.lang.CharSequence,int,int)>
<com.android.internal.view.menu.IconMenuItemView: boolean performClick()>
<com.android.internal.widget.ActionBarContainer: void <init>(android.content.Context,android.util.AttributeSet)>
<android.graphics.Canvas: void drawTextRun(java.lang.CharSequence,int,int,int,int,float,float,boolean,android.graphics.Paint)>
<android.database.sqlite.SQLiteQueryBuilder: void setTables(java.lang.String)>
<android.telecom.InCallAdapter: void turnProximitySensorOff(boolean)>
<android.widget.Toolbar: void setTitle(int)>
<android.view.GestureDetector.SimpleOnGestureListener: boolean onDoubleTapEvent(android.view.MotionEvent)>
<android.renderscript.Element: int getVectorSize()>
<android.widget.OverScroller: int getFinalY()>
<android.app.ActionBar: void addTab(android.app.ActionBar.Tab,int,boolean)>
<android.filterfw.core.FilterPort: void checkFrameManager(android.filterfw.core.Frame,android.filterfw.core.FilterContext)>
<android.app.IActivityManager: android.content.pm.UserInfo getCurrentUser()>
<android.media.MediaFormat: void setString(java.lang.String,java.lang.String)>
<android.service.fingerprint.FingerprintManagerReceiver: void onEnrollResult(int,int)>
<android.drm.DrmInfo: java.lang.Object get(java.lang.String)>
<android.media.AudioManager: void setRouting(int,int,int)>
<android.app.ActivityOptions: int getWidth()>
<android.view.Window.Callback: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.gesture.GestureOverlayView: boolean isGesturing()>
<android.accounts.AccountManager: android.content.Intent newChooseAccountIntent(android.accounts.Account,java.util.ArrayList,java.lang.String[],boolean,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)>
<com.android.internal.app.WindowDecorActionBar: void removeTab(android.app.ActionBar.Tab)>
<android.hardware.ISerialManager: java.lang.String[] getSerialPorts()>
<android.view.inputmethod.InputMethodSubtype: boolean overridesImplicitlyEnabledSubtype()>
<android.graphics.Canvas: boolean isOpaque()>
<android.renderscript.Byte3: android.renderscript.Byte3 add(android.renderscript.Byte3,android.renderscript.Byte3)>
<android.widget.TextView: void cancelLongPress()>
<android.mtp.MtpStorage: long getReserveSpace()>
<android.net.wifi.IWifiManager: android.os.Messenger getWifiServiceMessenger()>
<android.hardware.Camera.Parameters: void removeGpsData()>
<com.android.internal.app.ProcessStats.ProcessState: void reportExcessiveCpu(android.util.ArrayMap)>
<android.filterfw.core.Filter: void initWithAssignmentString(java.lang.String)>
<android.hardware.usb.UsbConfiguration: int describeContents()>
<android.webkit.WebView: int findAll(java.lang.String)>
<android.filterpacks.base.ObjectSource: void <init>(java.lang.String)>
<com.android.internal.telecom.IInCallService: void updateCall(android.telecom.ParcelableCall)>
<android.opengl.GLException: void <init>(int,java.lang.String)>
<android.provider.ContactsContract.SyncState: void set(android.content.ContentProviderClient,android.accounts.Account,byte[])>
<android.os.UserManager: boolean canAddMoreUsers()>
<android.bluetooth.IBluetoothGatt: void clientDisconnect(int,java.lang.String)>
<android.content.pm.IPackageInstallerSession: android.os.ParcelFileDescriptor openWrite(java.lang.String,long,long)>
<com.android.internal.http.multipart.PartBase: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.view.View: void requestFitSystemWindows()>
<android.net.wifi.WifiManager: void finalize()>
<android.opengl.GLES10: void glLineWidthx(int)>
<android.widget.PopupWindow: boolean isTouchable()>
<android.service.voice.VoiceInteractionSession: void onBackPressed()>
<android.net.wifi.WifiScanner: java.util.List getAvailableChannels(int)>
<com.android.internal.view.IInputConnectionWrapper: void performEditorAction(int)>
<android.media.MediaMetadata.Builder: android.media.MediaMetadata.Builder putBitmap(java.lang.String,android.graphics.Bitmap)>
<android.widget.AdapterView: int getCount()>
<com.android.server.net.BaseNetworkObserver: void interfaceLinkStateChanged(java.lang.String,boolean)>
<android.content.SharedPreferences.Editor: android.content.SharedPreferences.Editor putFloat(java.lang.String,float)>
<com.android.internal.widget.AbsActionBarView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.accessibilityservice.AccessibilityServiceInfo: java.lang.String getSettingsActivityName()>
<android.widget.TimePicker.TimePickerDelegate: android.os.Parcelable onSaveInstanceState(android.os.Parcelable)>
<android.hardware.Camera.Parameters: android.hardware.Camera.Size getPreferredPreviewSizeForVideo()>
<android.graphics.Matrix: boolean mapRect(android.graphics.RectF)>
<com.android.internal.widget.DialogTitle: void onMeasure(int,int)>
<com.android.internal.widget.LockPatternUtils: boolean isLockPatternEnabled()>
<android.hardware.camera2.impl.CaptureResultExtras: void <init>(int,int,int,int,long,int)>
<android.graphics.Interpolator: int getKeyFrameCount()>
<android.media.UnstyledTextExtractor: void onEnd(java.lang.String)>
<android.telecom.PhoneAccount: boolean supportsUriScheme(java.lang.String)>
<android.content.pm.PackageInstaller.SessionParams: void <init>(int)>
<android.net.http.Headers: void getHeaders(android.net.http.Headers.HeaderCallback)>
<android.os.Process: void setThreadGroup(int,int)>
<android.filterfw.core.GLEnvironment: void unregisterSurfaceId(int)>
<android.app.Dialog: void onOptionsMenuClosed(android.view.Menu)>
<android.animation.StateListAnimator: android.animation.Animator getRunningAnimator()>
<android.content.RestrictionEntry: void setType(int)>
<com.android.internal.view.menu.SubMenuBuilder: boolean isQwertyMode()>
<android.media.MediaFormat: void setInteger(java.lang.String,int)>
<com.android.internal.telecom.ITelecomService: void addNewUnknownCall(android.telecom.PhoneAccountHandle,android.os.Bundle)>
<android.os.storage.StorageVolume: int describeContents()>
<android.app.IActivityManager: void publishService(android.os.IBinder,android.content.Intent,android.os.IBinder)>
<android.net.ConnectivityManager: java.lang.String getNetworkTypeName(int)>
<com.google.android.gles_jni.GLImpl: void glEnableClientState(int)>
<android.app.ListActivity: void onRestoreInstanceState(android.os.Bundle)>
<android.app.ActionBar: void removeTabAt(int)>
<android.widget.RemoteViewsListAdapter: void setViewsList(java.util.ArrayList)>
<android.webkit.DateSorter: int getIndex(long)>
<android.app.IActivityManager: boolean switchUser(int)>
<android.app.admin.DevicePolicyManager: boolean setProfileOwner(java.lang.String,java.lang.String,int)>
<android.database.CursorWindow: java.lang.String getString(int,int)>
<com.android.internal.widget.PasswordEntryKeyboardView: boolean setShifted(boolean)>
<android.widget.Gallery: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.hardware.camera2.params.StreamConfigurationMap: android.util.Range[] getHighSpeedVideoFpsRangesFor(android.util.Size)>
<android.graphics.drawable.shapes.Shape: void getOutline(android.graphics.Outline)>
<android.widget.SimpleAdapter: void setViewBinder(android.widget.SimpleAdapter.ViewBinder)>
<android.os.BaseBundle: boolean containsKey(java.lang.String)>
<android.database.DatabaseUtils.InsertHelper: void bind(int,byte[])>
<android.filterfw.core.FilterFactory: void addPackage(java.lang.String)>
<android.widget.AdapterViewFlipper: void showPrevious()>
<android.os.Debug: void resetGlobalExternalFreedSize()>
<android.net.IConnectivityManager: void pendingListenForNetwork(android.net.NetworkCapabilities,android.app.PendingIntent)>
<android.graphics.Outline: float getAlpha()>
<android.graphics.NinePatch: int getHeight()>
<android.net.wifi.WifiConfiguration: android.net.ProxyInfo getHttpProxy()>
<android.content.pm.PackageInstaller: void updateSessionAppIcon(int,android.graphics.Bitmap)>
<android.hardware.Camera.Parameters: boolean getVideoStabilization()>
<android.media.effect.effects.IdentityEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>
<com.android.internal.app.IBatteryStats: void noteWifiMulticastDisabled(int)>
<android.view.LayoutInflater: android.content.Context getContext()>
<com.android.internal.app.IBatteryStats: void noteWifiSupplicantStateChanged(int,boolean)>
<android.renderscript.RSTextureView: android.renderscript.RenderScriptGL getRenderScriptGL()>
<android.util.ArraySet: boolean add(java.lang.Object)>
<android.bluetooth.BluetoothA2dp: void adjustAvrcpAbsoluteVolume(int)>
<android.content.pm.PackageInstaller.SessionParams: void setOriginatingUri(android.net.Uri)>
<android.animation.ValueAnimator: android.animation.PropertyValuesHolder[] getValues()>
<android.view.inputmethod.BaseInputConnection: void removeComposingSpans(android.text.Spannable)>
<android.media.AudioFormat.Builder: void <init>(android.media.AudioFormat)>
<android.nfc.NfcAdapter: void pausePolling(int)>
<android.location.GpsStatus: int getMaxSatellites()>
<android.text.GraphicsOperations: void drawTextRun(android.graphics.Canvas,int,int,int,int,float,float,boolean,android.graphics.Paint)>
<android.widget.GridLayout: int getOrientation()>
<android.hardware.Camera.Parameters: void setPreviewSize(int,int)>
<android.os.storage.IMountService: android.os.storage.StorageVolume[] getVolumeList()>
<android.bluetooth.le.AdvertiseData: java.lang.String toString()>
<android.graphics.drawable.shapes.PathShape: void <init>(android.graphics.Path,float,float)>
<android.content.ContextWrapper: java.io.File[] getExternalFilesDirs(java.lang.String)>
<android.os.INetworkManagementService: void setFirewallInterfaceRule(java.lang.String,boolean)>
<android.widget.RemoteViews: void setDisplayedChild(int,int)>
<android.telecom.Call: void swapConference()>
<android.widget.ActionMenuPresenter: void onConfigurationChanged(android.content.res.Configuration)>
<android.app.Fragment: void setMenuVisibility(boolean)>
<android.util.JsonReader: void setLenient(boolean)>
<android.widget.ListView: android.view.View findViewTraversal(int)>
<android.view.accessibility.AccessibilityNodeInfo: java.util.List getActionList()>
<android.drm.DrmRights: void <init>(java.lang.String,java.lang.String)>
<android.os.Debug: void startMethodTracing(java.lang.String,java.io.FileDescriptor,int,int)>
<android.widget.MultiAutoCompleteTextView.Tokenizer: int findTokenStart(java.lang.CharSequence,int)>
<android.speech.tts.Voice: boolean isNetworkConnectionRequired()>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setListener(android.animation.Animator.AnimatorListener)>
<android.net.SSLCertificateSocketFactory: java.lang.String[] getDefaultCipherSuites()>
<android.view.RenderNode: boolean setAlpha(float)>
<com.android.internal.view.menu.ListMenuItemView: com.android.internal.view.menu.MenuItemImpl getItemData()>
<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>
<android.os.DropBoxManager: void <init>(com.android.internal.os.IDropBoxManagerService)>
<android.filterfw.core.KeyValueMap: android.filterfw.core.KeyValueMap fromKeyValues(java.lang.Object[])>
<android.os.BaseBundle: double getDouble(java.lang.String,double)>
<android.telephony.VoLteServiceState: android.telephony.VoLteServiceState newFromBundle(android.os.Bundle)>
<android.printservice.PrintJob: android.print.PrintJobInfo getInfo()>
<android.view.ViewParent: boolean onNestedPreFling(android.view.View,float,float)>
<android.opengl.GLES30: void glGenQueries(int,java.nio.IntBuffer)>
<android.net.wifi.ScanResult: void setAutoJoinStatus(int)>
<com.android.internal.os.BatteryStatsImpl: long getGlobalWifiRunningTime(long,int)>
<android.os.PowerManager: boolean useTwilightAdjustmentFeature()>
<android.nfc.INfcAdapter: void invokeBeamInternal(android.nfc.BeamShareData)>
<android.inputmethodservice.InputMethodService: void hideStatusIcon()>
<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl: void dispatchKeyEvent(int,android.view.KeyEvent,android.view.inputmethod.InputMethodSession.EventCallback)>
<com.android.internal.util.StateMachine: void sendMessage(int,int,int)>
<android.content.RestrictionEntry: void setSelectedString(java.lang.String)>
<com.android.internal.view.menu.ActionMenu: void setQwertyMode(boolean)>
<android.app.IActivityManager: void handleApplicationCrash(android.os.IBinder,android.app.ApplicationErrorReport.CrashInfo)>
<android.app.WallpaperManager: android.graphics.drawable.Drawable peekDrawable()>
<android.os.Debug: int getBinderLocalObjectCount()>
<com.android.internal.os.BatteryStatsImpl.Uid: void noteActivityResumedLocked(long)>
<android.app.LoaderManager: android.content.Loader restartLoader(int,android.os.Bundle,android.app.LoaderManager.LoaderCallbacks)>
<android.util.MathUtils: float dist(float,float,float,float)>
<com.android.internal.os.storage.ExternalStorageFormatter: void onCancel(android.content.DialogInterface)>
<android.bluetooth.BluetoothGattServerCallback: void onCharacteristicWriteRequest(android.bluetooth.BluetoothDevice,int,android.bluetooth.BluetoothGattCharacteristic,boolean,boolean,int,byte[])>
<android.hardware.soundtrigger.SoundTrigger.ConfidenceLevel: void writeToParcel(android.os.Parcel,int)>
<android.hardware.camera2.CameraCaptureSession: int captureBurst(java.util.List,android.hardware.camera2.CameraCaptureSession.CaptureCallback,android.os.Handler)>
<com.android.internal.widget.PasswordEntryKeyboard: void <init>(android.content.Context,int,int,int)>
<com.android.internal.app.LocalePicker: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
<android.telephony.TelephonyManager: void setLine1NumberForDisplay(java.lang.String,java.lang.String)>
<android.widget.CalendarView: int getWeekSeparatorLineColor()>
<android.widget.TextView: void setSingleLine(boolean)>
<android.security.KeyStore: int getLastError()>
<android.view.View: boolean onFilterTouchEventForSecurity(android.view.MotionEvent)>
<android.widget.BaseAdapter: boolean isEnabled(int)>
<android.app.Presentation: android.view.Display getDisplay()>
<android.telephony.PhoneNumberUtils: java.lang.String getNumberFromIntent(android.content.Intent,android.content.Context)>
<android.graphics.Picture: android.graphics.Canvas beginRecording(int,int)>
<android.content.ContentResolver: java.util.List getPeriodicSyncs(android.accounts.Account,java.lang.String)>
<android.opengl.GLES10: void glTexEnvf(int,int,float)>
<android.hardware.camera2.impl.CameraMetadataNative.Key: android.hardware.camera2.utils.TypeReference getTypeReference()>
<android.opengl.GLES10: void glDisable(int)>
<android.view.SurfaceControl: void setDisplayPowerMode(android.os.IBinder,int)>
<android.view.accessibility.CaptioningManager.CaptioningChangeListener: void onEnabledChanged(boolean)>
<android.os.RegistrantList: void addUnique(android.os.Handler,int,java.lang.Object)>
<android.opengl.ETC1: void decodeBlock(java.nio.Buffer,java.nio.Buffer)>
<com.android.internal.widget.ToolbarWidgetWrapper: boolean hideOverflowMenu()>
<android.media.AudioTrack: int getSampleRate()>
<android.view.ViewStub: android.view.View inflate()>
<android.media.RemoteControlClient: void setMetadataUpdateListener(android.media.RemoteControlClient.OnMetadataUpdateListener)>
<android.renderscript.Byte3: byte dotProduct(android.renderscript.Byte3)>
<android.view.inputmethod.InputMethod.SessionCallback: void sessionCreated(android.view.inputmethod.InputMethodSession)>
<android.widget.RadioButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.google.android.gles_jni.EGLImpl: boolean eglWaitNative(int,java.lang.Object)>
<com.android.internal.app.IMediaContainerService: java.lang.String copyPackageToContainer(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,java.lang.String)>
<android.webkit.WebChromeClient: void onReceivedIcon(android.webkit.WebView,android.graphics.Bitmap)>
<com.android.internal.app.IBatteryStats: void noteFullWifiLockReleasedFromSource(android.os.WorkSource)>
<com.android.internal.widget.DecorToolbar: android.view.ViewGroup getViewGroup()>
<android.telecom.RemoteConference: void stopDtmfTone()>
<android.media.tv.TvInputManager: int getInputState(java.lang.String)>
<android.content.IContentService: boolean isSyncActive(android.accounts.Account,java.lang.String,android.content.ComponentName)>
<android.net.http.Headers: void setWwwAuthenticate(java.lang.String)>
<android.opengl.GLES10: void glCullFace(int)>
<android.renderscript.Int2: int dotProduct(android.renderscript.Int2,android.renderscript.Int2)>
<android.view.MenuItem: java.lang.CharSequence getTitle()>
<android.media.SoundPool: void <init>(int,int,int)>
<com.android.internal.inputmethod.InputMethodUtils: java.util.Locale getFallbackLocaleForDefaultIme(java.util.ArrayList,android.content.Context)>
<com.android.internal.widget.ResolverDrawerLayout: void <init>(android.content.Context)>
<android.hardware.camera2.impl.CallbackProxies.DeviceStateCallbackProxy: void onDisconnected(android.hardware.camera2.CameraDevice)>
<android.inputmethodservice.SoftInputWindow: boolean onKeyMultiple(int,int,android.view.KeyEvent)>
<com.android.internal.util.VirtualRefBasePtr: void release()>
<com.android.internal.app.WindowDecorActionBar.ActionModeImpl: java.lang.CharSequence getSubtitle()>
<android.widget.CursorTreeAdapter: void setChildrenCursor(int,android.database.Cursor)>
<android.gesture.GestureOverlayView: void removeOnGesturePerformedListener(android.gesture.GestureOverlayView.OnGesturePerformedListener)>
<android.media.audiofx.EnvironmentalReverb.OnParameterChangeListener: void onParameterChange(android.media.audiofx.EnvironmentalReverb,int,int,int)>
<com.android.internal.view.menu.ActionMenuItemView: boolean onTouchEvent(android.view.MotionEvent)>
<android.text.Selection: boolean extendToLeftEdge(android.text.Spannable,android.text.Layout)>
<android.opengl.GLES31: void glGenProgramPipelines(int,java.nio.IntBuffer)>
<com.google.android.gles_jni.GLImpl: void glMaterialx(int,int,int)>
<android.graphics.drawable.ColorDrawable: int getChangingConfigurations()>
<android.widget.SlidingDrawer: void dispatchDraw(android.graphics.Canvas)>
<android.location.GpsClock: void resetDriftUncertaintyInNsPerSec()>
<android.media.IAudioService: int getLastAudibleStreamVolume(int)>
<android.view.animation.Animation: boolean isInitialized()>
<com.android.internal.os.BatteryStatsImpl: void noteNetworkInterfaceTypeLocked(java.lang.String,int)>
<android.filterpacks.imageproc.StraightenFilter: void <init>(java.lang.String)>
<android.app.backup.IBackupManager: boolean hasBackupPassword()>
<android.media.MediaCodec.MediaImage: void setCropRect(android.graphics.Rect)>
<android.service.dreams.IDreamManager: android.content.ComponentName getDefaultDreamComponent()>
<android.database.BulkCursorToCursorAdaptor: boolean requery()>
<android.app.PackageDeleteObserver: void onUserActionRequired(android.content.Intent)>
<android.view.View: int getLabelFor()>
<com.android.internal.widget.multiwaveview.TargetDrawable: float getScaleX()>
<android.nfc.tech.MifareClassic: void setTimeout(int)>
<android.database.sqlite.SQLiteProgram: void bindAllArgsAsStrings(java.lang.String[])>
<android.bluetooth.BluetoothA2dp: boolean isAvrcpAbsoluteVolumeSupported()>
<android.os.CancellationSignal: android.os.CancellationSignal fromTransport(android.os.ICancellationSignal)>
<com.android.internal.view.IInputContext: void finishComposingText()>
<android.media.IAudioService: boolean shouldVibrate(int)>
<android.content.pm.PackageManager: void deleteApplicationCacheFiles(java.lang.String,android.content.pm.IPackageDataObserver)>
<android.text.Spanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>
<android.media.MediaCodec.MediaImage: android.media.Image.Plane[] getPlanes()>
<android.net.WifiLinkQualityInfo: void setRssi(int)>
<android.widget.Chronometer: void onWindowVisibilityChanged(int)>
<android.print.PrintJobInfo: void setId(android.print.PrintJobId)>
<android.app.DatePickerDialog: void updateDate(int,int,int)>
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources)>
<android.net.wifi.WifiSsid: android.net.wifi.WifiSsid createFromHex(java.lang.String)>
<android.view.View: float getAlpha()>
<android.hardware.location.GeofenceHardwareRequestParcelable: void writeToParcel(android.os.Parcel,int)>
<android.text.util.Rfc822Tokenizer: android.text.util.Rfc822Token[] tokenize(java.lang.CharSequence)>
<android.view.RenderNode: boolean setLeft(int)>
<android.animation.TypeConverter: void <init>(java.lang.Class,java.lang.Class)>
<android.opengl.GLES30: void glGenVertexArrays(int,java.nio.IntBuffer)>
<android.app.Fragment: android.content.res.Resources getResources()>
<android.hardware.location.IActivityRecognitionHardware: boolean enableActivityEvent(java.lang.String,int,long)>
<android.location.GeocoderParams: int describeContents()>
<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo: android.view.accessibility.AccessibilityNodeInfo.CollectionInfo obtain(int,int,boolean,int)>
<android.view.animation.Animation: void setFillAfter(boolean)>
<android.graphics.Bitmap: void setHasMipMap(boolean)>
<com.android.internal.app.IVoiceInteractionManagerService: int updateKeyphraseSoundModel(android.hardware.soundtrigger.SoundTrigger.KeyphraseSoundModel)>
<android.telephony.PhoneNumberUtils: boolean isEmergencyNumber(java.lang.String,java.lang.String)>
<com.android.internal.app.WindowDecorActionBar: boolean hasLogo()>
<android.net.http.RequestHandle: void <init>(android.net.http.RequestQueue,java.lang.String,android.net.WebAddress,java.lang.String,java.util.Map,java.io.InputStream,int,android.net.http.Request,android.net.http.Connection)>
<android.hardware.SerialPort: void <init>(java.lang.String)>
<android.bluetooth.le.ScanSettings: int getScanMode()>
<android.widget.ListView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.util.Range: java.lang.String toString()>
<android.accounts.AuthenticatorException: void <init>(java.lang.String)>
<android.telephony.CellSignalStrengthWcdma: int hashCode()>
<android.telephony.SubscriptionManager: int getAllSubInfoCount()>
<android.hardware.camera2.impl.CallbackProxies.DeviceCaptureCallbackProxy: void onCaptureSequenceCompleted(android.hardware.camera2.CameraDevice,int,long)>
<android.renderscript.Short2: void set(android.renderscript.Short2)>
<android.view.InputDevice.MotionRange: float getMax()>
<android.widget.GridView: void setRemoteViewsAdapter(android.content.Intent)>
<android.graphics.drawable.InsetDrawable: boolean canApplyTheme()>
<android.text.format.DateUtils: java.lang.String getAMPMString(int)>
<android.bluetooth.IBluetoothA2dpSink: boolean connect(android.bluetooth.BluetoothDevice)>
<com.android.internal.os.BatteryStatsImpl.Uid: com.android.internal.os.BatteryStatsImpl.StopwatchTimer createAudioTurnedOnTimerLocked()>
<android.provider.BrowserContract.Bookmarks: android.net.Uri buildFolderUri(long)>
<android.hardware.camera2.params.Face: android.graphics.Point getLeftEyePosition()>
<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent,android.app.PendingIntent.OnFinished,android.os.Handler)>
<android.text.Layout: int getParagraphRight(int)>
<android.hardware.camera2.params.StreamConfigurationMap: android.util.Size[] getOutputSizes(int)>
<android.graphics.drawable.GradientDrawable: void setColors(int[])>
<android.content.IntentFilter: int matchDataAuthority(android.net.Uri)>
<android.app.IApplicationThread: void scheduleLowMemory()>
<android.os.Handler: void <init>(android.os.Looper,android.os.Handler.Callback)>
<android.media.tv.TvInputService: java.lang.String onHardwareRemoved(android.media.tv.TvInputHardwareInfo)>
<com.android.internal.backup.LocalTransport: int performFullBackup(android.content.pm.PackageInfo,android.os.ParcelFileDescriptor)>
<android.app.ITransientNotification: void hide()>
<android.media.AudioManager: void stopBluetoothSco()>
<android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>
<android.telephony.cdma.CdmaCellLocation: int getNetworkId()>
<android.net.VpnService.Builder: android.net.VpnService.Builder addDnsServer(java.lang.String)>
<android.provider.DocumentsContract: boolean isManageMode(android.net.Uri)>
<android.view.View: void setVerticalFadingEdgeEnabled(boolean)>
<android.net.Network: void <init>(android.net.Network)>
<com.android.internal.os.BatteryStatsImpl.Uid: com.android.internal.os.BatteryStatsImpl.StopwatchTimer createVideoTurnedOnTimerLocked()>
<android.view.SurfaceControl: android.graphics.Bitmap screenshot(android.graphics.Rect,int,int,int,int,boolean,int)>
<com.android.internal.util.SizedInputStream: void close()>
<android.media.AudioService: void setStreamSolo(int,boolean,android.os.IBinder)>
<android.widget.CursorAdapter: void init(android.content.Context,android.database.Cursor,boolean)>
<android.net.LinkQualityInfo: long getPacketErrorCount()>
<android.media.tv.ITvInputHardwareCallback: void onStreamConfigChanged(android.media.tv.TvStreamConfig[])>
<android.net.IConnectivityManager: void setPolicyDataEnable(int,boolean)>
<android.view.accessibility.AccessibilityNodeInfo.RangeInfo: android.view.accessibility.AccessibilityNodeInfo.RangeInfo obtain(android.view.accessibility.AccessibilityNodeInfo.RangeInfo)>
<android.view.DisplayAdjustments: boolean equals(java.lang.Object)>
<android.view.WindowManagerInternal.MagnificationCallbacks: void onRectangleOnScreenRequested(int,int,int,int)>
<android.media.Image.Plane: int getRowStride()>
<android.os.storage.StorageVolume: java.lang.String getPath()>
<com.android.internal.widget.ToolbarWidgetWrapper: void setSubtitle(java.lang.CharSequence)>
<android.media.audiofx.Equalizer: short getNumberOfBands()>
<android.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)>
<android.content.IntentSender: java.lang.String getCreatorPackage()>
<android.transition.Transition.TransitionListenerAdapter: void onTransitionCancel(android.transition.Transition)>
<com.android.internal.view.BaseSurfaceHolder: int getRequestedType()>
<android.graphics.Canvas: void checkRange(int,int,int)>
<android.renderscript.ScriptIntrinsicConvolve5x5: android.renderscript.Script.FieldID getFieldID_Input()>
<android.util.Slog: int v(java.lang.String,java.lang.String)>
<android.view.View: void setMinimumHeight(int)>
<com.android.internal.os.ProcessCpuTracker: int getLastSystemTime()>
<android.opengl.GLES20: void glGetTexParameterfv(int,int,float[],int)>
<android.net.DnsPinger: void handleMessage(android.os.Message)>
<android.graphics.Canvas: void drawTextRun(char[],int,int,int,int,float,float,boolean,android.graphics.Paint)>
<com.android.internal.os.BatteryStatsHelper: double getMaxDrainedPower()>
<android.telephony.cdma.CdmaSmsCbProgramResults: int getLanguage()>
<com.android.internal.os.BatteryStatsImpl.StopwatchTimer: long computeRunTimeLocked(long)>
<android.os.CommonTimeConfig: int setMasterAnnounceInterval(int)>
<android.graphics.drawable.AnimatedRotateDrawable: boolean isStateful()>
<android.widget.PopupWindow: android.graphics.drawable.Drawable getBackground()>
<com.android.internal.content.PackageMonitor: android.os.Handler getRegisteredHandler()>
<android.graphics.drawable.ScaleDrawable: boolean onLevelChange(int)>
<android.app.FragmentManager: int getBackStackEntryCount()>
<android.view.ViewGroup: void childDrawableStateChanged(android.view.View)>
<android.os.ResultReceiver: void writeToParcel(android.os.Parcel,int)>
<android.animation.Animator: void setAllowRunningAsynchronously(boolean)>
<android.telephony.CellInfo: void setRegistered(boolean)>
<android.net.TrafficStats: long getMobileRxBytes()>
<android.app.Instrumentation: void callActivityOnPause(android.app.Activity)>
<com.android.internal.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)>
<android.media.tv.ITvInputSession: void setSurface(android.view.Surface)>
<android.media.audiofx.AudioEffect: int byteArrayToInt(byte[])>
<android.media.AudioPort: android.media.AudioPortConfig buildConfig(int,int,int,android.media.AudioGainConfig)>
<android.widget.DatePicker.DatePickerDelegate: void setFirstDayOfWeek(int)>
<android.widget.SlidingDrawer: void animateClose()>
<android.transition.Recolor: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.internal.app.WindowDecorActionBar: void setCustomView(android.view.View)>
<android.hardware.display.DisplayViewport: java.lang.String toString()>
<android.app.Fragment: void unregisterForContextMenu(android.view.View)>
<android.content.RestrictionEntry: void setChoiceValues(java.lang.String[])>
<android.hardware.location.GeofenceHardwareRequestParcelable: void <init>(int,android.hardware.location.GeofenceHardwareRequest)>
<android.content.pm.PackageManager: int getComponentEnabledSetting(android.content.ComponentName)>
<com.android.internal.view.menu.ActionMenuItem: boolean isEnabled()>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder setClassInstanceLimit(java.lang.Class,int)>
<android.location.Address: void setPostalCode(java.lang.String)>
<android.app.admin.IDevicePolicyManager: java.util.List getActiveAdmins(int)>
<android.media.JetPlayer: boolean setMuteFlags(int,boolean)>
<android.widget.MediaController.MediaPlayerControl: int getAudioSessionId()>
<android.widget.SearchView: void onDetachedFromWindow()>
<android.appwidget.AppWidgetHostView: void updateAppWidgetOptions(android.os.Bundle)>
<android.hardware.soundtrigger.SoundTriggerModule: int stopRecognition(int)>
<android.widget.LinearLayout.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.ScrollView: void smoothScrollBy(int,int)>
<android.view.View: void setSaveEnabled(boolean)>
<android.content.pm.PackageManager: void grantPermission(java.lang.String,java.lang.String)>
<android.content.IntentFilter: void <init>(java.lang.String,java.lang.String)>
<android.media.session.PlaybackState: int getStateFromRccState(int)>
<android.widget.ScrollView: void setFillViewport(boolean)>
<android.accounts.AccountManager: android.accounts.Account[] getAccountsForPackage(java.lang.String,int)>
<android.webkit.PermissionRequest: void grant(java.lang.String[])>
<com.android.internal.view.menu.IconMenuView: void run()>
<android.text.StaticLayout: int getParagraphDirection(int)>
<android.bluetooth.BluetoothDevice: android.os.ParcelUuid[] getUuids()>
<android.app.IActivityManager: boolean clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver,int)>
<android.text.method.BaseMovementMethod: boolean bottom(android.widget.TextView,android.text.Spannable)>
<android.filterfw.core.RoundRobinScheduler: void reset()>
<android.net.BaseNetworkStateTracker: void addStackedLink(android.net.LinkProperties)>
<android.bluetooth.le.ScanRecord: java.util.Map getServiceData()>
<android.telephony.PhoneNumberUtils: java.lang.String convertPreDial(java.lang.String)>
<android.renderscript.Matrix4f: void loadIdentity()>
<android.util.Base64: byte[] decode(byte[],int)>
<android.hardware.camera2.CameraDevice.StateCallback: void onDisconnected(android.hardware.camera2.CameraDevice)>
<com.android.internal.os.BatteryStatsHelper: void storeStatsHistoryInFile(java.lang.String)>
<android.content.pm.PackageManager: int[] getPackageGids(java.lang.String)>
<android.bluetooth.BluetoothAvrcpController: java.util.List getConnectedDevices()>
<android.service.dreams.Sandman: void startDreamWhenDockedIfAppropriate(android.content.Context)>
<android.net.wifi.p2p.WifiP2pDevice: boolean isGroupOwner()>
<com.google.android.gles_jni.GLImpl: void glTexGenfv(int,int,java.nio.FloatBuffer)>
<android.view.animation.Animation: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.ListPopupWindow: void <init>(android.content.Context,android.util.AttributeSet)>
<android.media.MediaDrm: android.media.MediaDrm.CryptoSession getCryptoSession(byte[],java.lang.String,java.lang.String)>
<android.view.OrientationListener: void enable()>
<android.telecom.Call: int getState()>
<android.bluetooth.BluetoothInputDevice: boolean disconnect(android.bluetooth.BluetoothDevice)>
<android.text.style.EasyEditSpan: boolean isDeleteEnabled()>
<android.media.MediaRecorder: void setMaxFileSize(long)>
<android.os.Bundle: short[] getShortArray(java.lang.String)>
<android.net.UrlQuerySanitizer: java.util.List getParameterList()>
<android.location.LocationRequest: void setWorkSource(android.os.WorkSource)>
<android.content.ContextWrapper: void <init>(android.content.Context)>
<com.google.android.util.AbstractMessageParser.Format: void <init>(char,boolean)>
<android.graphics.drawable.RippleDrawable: void setColor(android.content.res.ColorStateList)>
<com.android.internal.app.IAppOpsService: void stopWatchingMode(com.android.internal.app.IAppOpsCallback)>
<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>
<android.media.ResourceBusyException: void <init>(java.lang.String)>
<com.android.internal.os.BatteryStatsImpl: int getDischargeAmountScreenOnSinceCharge()>
<android.hardware.hdmi.IHdmiControlService: void portSelect(int,android.hardware.hdmi.IHdmiControlCallback)>
<android.widget.HorizontalScrollView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.view.WindowManagerGlobal: android.view.IWindowSession getWindowSession()>
<android.text.style.RasterizerSpan: void <init>(android.graphics.Rasterizer)>
<com.android.ims.ImsConfigListener: void onGetFeatureResponse(int,int,int,int)>
<android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction: boolean equals(java.lang.Object)>
<android.util.LruCache: java.lang.Object get(java.lang.Object)>
<android.app.ApplicationThreadProxy: void scheduleLaunchActivity(android.content.Intent,android.os.IBinder,int,android.content.pm.ActivityInfo,android.content.res.Configuration,android.content.res.CompatibilityInfo,com.android.internal.app.IVoiceInteractor,int,android.os.Bundle,android.os.PersistableBundle,java.util.List,java.util.List,boolean,boolean,android.app.ProfilerInfo)>
<android.view.Gravity: boolean isVertical(int)>
<android.media.MediaCodecInfo.CodecCapabilities: android.media.MediaCodecInfo.AudioCapabilities getAudioCapabilities()>
<android.app.job.JobParameters: android.os.PersistableBundle getExtras()>
<android.renderscript.Byte4: byte dotProduct(android.renderscript.Byte4,android.renderscript.Byte4)>
<android.service.dreams.DreamService: void onWindowAttributesChanged(android.view.WindowManager.LayoutParams)>
<android.content.SyncStatusInfo: int describeContents()>
<android.telecom.Connection.VideoProvider: void onSendSessionModifyRequest(android.telecom.VideoProfile)>
<com.google.android.util.AbstractMessageParser: com.google.android.util.AbstractMessageParser.Resources getResources()>
<com.android.internal.view.IInputContext: void deleteSurroundingText(int,int)>
<android.renderscript.Byte2: void copyTo(byte[],int)>
<android.database.DatabaseUtils: void cursorStringToInsertHelper(android.database.Cursor,java.lang.String,android.database.DatabaseUtils.InsertHelper,int)>
<android.widget.ImageView: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<com.android.internal.util.AsyncChannel: void sendMessage(int,int,int)>
<android.content.Intent.FilterComparison: int hashCode()>
<android.widget.VideoView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.nfc.cardemulation.CardEmulation: boolean unsetPreferredService(android.app.Activity)>
<android.app.ActivityManagerProxy: android.content.Intent getIntentForIntentSender(android.content.IIntentSender)>
<android.renderscript.AllocationAdapter: void setY(int)>
<android.app.Fragment: android.transition.Transition getReenterTransition()>
<android.net.INetworkPolicyManager: boolean getRestrictBackground()>
<android.net.LinkAddress: java.net.InetAddress getAddress()>
<android.app.LocalActivityManager: android.app.Activity getCurrentActivity()>
<android.content.ContextWrapper: void sendBroadcast(android.content.Intent,java.lang.String)>
<android.util.Slog: int i(java.lang.String,java.lang.String,java.lang.Throwable)>
<android.preference.RingtonePreference: void onClick()>
<android.filterpacks.videosrc.MediaSource: void process(android.filterfw.core.FilterContext)>
<android.bluetooth.IBluetoothManager: java.lang.String getName()>
<android.net.NetworkStats: android.net.NetworkStats addValues(java.lang.String,int,int,int,long,long,long,long,long)>
<com.android.internal.app.IVoiceInteractor: com.android.internal.app.IVoiceInteractorRequest startCompleteVoice(java.lang.String,com.android.internal.app.IVoiceInteractorCallback,java.lang.CharSequence,android.os.Bundle)>
<android.hardware.Camera.Size: boolean equals(java.lang.Object)>
<android.telephony.SignalStrength: void <init>(android.os.Parcel)>
<android.app.NativeActivity: void onStop()>
<android.widget.VideoView: void onLayout(boolean,int,int,int,int)>
<android.speech.tts.TextToSpeech: int addSpeech(java.lang.CharSequence,java.lang.String,int)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture confirmCredentials(android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.media.MediaPlayer: void setDataSource(android.content.Context,android.net.Uri,java.util.Map)>
<com.android.internal.inputmethod.InputMethodUtils: java.lang.CharSequence getImeAndSubtypeDisplayName(android.content.Context,android.view.inputmethod.InputMethodInfo,android.view.inputmethod.InputMethodSubtype)>
<android.service.persistentdata.PersistentDataBlockManager: int write(byte[])>
<android.app.AppOpsManager: java.lang.String opToName(int)>
<android.filterfw.format.PrimitiveFormat: android.filterfw.core.MutableFrameFormat createDoubleFormat(int)>
<android.nfc.cardemulation.AidGroup: int describeContents()>
<com.android.internal.view.IInputContext: void commitCompletion(android.view.inputmethod.CompletionInfo)>
<android.view.TextureView: void setSurfaceTexture(android.graphics.SurfaceTexture)>
<android.media.tv.TvInputInfo: android.media.tv.TvInputInfo createTvInputInfo(android.content.Context,android.content.pm.ResolveInfo)>
<com.android.internal.view.menu.MenuItemImpl: boolean showsTextAsAction()>
<android.renderscript.Mesh.Builder: void <init>(android.renderscript.RenderScript,int)>
<android.view.MotionEvent: float getHistoricalToolMinor(int,int)>
<android.content.RestrictionEntry: boolean equals(java.lang.Object)>
<android.widget.TextView: int getMaxLines()>
<android.app.ActivityView: void setCallback(android.app.ActivityView.ActivityViewCallback)>
<android.media.MediaCodecInfo.EncoderCapabilities: boolean isBitrateModeSupported(int)>
<android.text.style.ImageSpan: void <init>(android.graphics.Bitmap,int)>
<android.telecom.Call.Listener: void onDetailsChanged(android.telecom.Call,android.telecom.Call.Details)>
<android.service.dreams.IDreamService: void wakeUp()>
<android.location.LocationManager: void setTestProviderEnabled(java.lang.String,boolean)>
<android.widget.ImageSwitcher: void setImageDrawable(android.graphics.drawable.Drawable)>
<android.nfc.INfcAdapter: void setAppCallback(android.nfc.IAppCallback)>
<android.telephony.PhoneNumberUtils: boolean isPotentialLocalEmergencyNumber(android.content.Context,long,java.lang.String)>
<com.android.internal.widget.LockPatternView.Cell: com.android.internal.widget.LockPatternView.Cell of(int,int)>
<android.media.AudioRecord: int setNotificationMarkerPosition(int)>
<com.android.internal.inputmethod.InputMethodUtils.InputMethodSettings: void enableAllIMEsIfThereIsNoEnabledIME()>
<android.printservice.PrinterDiscoverySession: void addPrinters(java.util.List)>
<android.hardware.input.TouchCalibration: void <init>(android.os.Parcel)>
<android.app.ActivityManagerProxy: int startActivityFromRecents(int,android.os.Bundle)>
<android.content.Entity.NamedContentValues: void <init>(android.net.Uri,android.content.ContentValues)>
<android.media.audiofx.BassBoost.Settings: void <init>(java.lang.String)>
<android.inputmethodservice.Keyboard: void setVerticalGap(int)>
<android.media.AudioAttributes.Builder: android.media.AudioAttributes.Builder setUsage(int)>
<android.webkit.WebViewProvider: boolean canGoBackOrForward(int)>
<android.text.style.QuoteSpan: int describeContents()>
<android.media.SoundPool.SoundPoolDelegate: int load(android.content.Context,int,int)>
<android.media.SoundPool: void setOnLoadCompleteListener(android.media.SoundPool.OnLoadCompleteListener)>
<android.view.accessibility.AccessibilityNodeInfo: void setCanOpenPopup(boolean)>
<android.media.session.MediaSession.CallbackStub: void onStop()>
<android.widget.AbsoluteLayout: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.service.restrictions.RestrictionsReceiver: void onReceive(android.content.Context,android.content.Intent)>
<android.app.ActivityManagerProxy: int broadcastIntent(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int)>
<android.hardware.hdmi.HdmiRecordListener.TimerStatusData: int getProgrammedInfo()>
<android.net.ConnectivityManager: android.net.LinkQualityInfo getLinkQualityInfo(int)>
<com.google.android.gles_jni.GLImpl: void glDepthRangex(int,int)>
<android.database.sqlite.SQLiteCursor: void <init>(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery)>
<android.location.GpsSatellite: boolean hasAlmanac()>
<android.widget.AbsListView: void jumpDrawablesToCurrentState()>
<android.net.DhcpResults: void <init>(android.net.DhcpResults)>
<android.app.Dialog: android.content.Context getContext()>
<android.widget.RemoteViews: void setIntent(int,java.lang.String,android.content.Intent)>
<android.webkit.WebViewProvider.ViewDelegate: boolean onTrackballEvent(android.view.MotionEvent)>
<android.util.PathParser: android.util.PathParser.PathDataNode[] deepCopyNodes(android.util.PathParser.PathDataNode[])>
<android.view.View.AccessibilityDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)>
<android.filterfw.core.FilterPort: boolean hasFrame()>
<android.hardware.SensorManager: void getAngleChange(float[],float[],float[])>
<android.view.ViewGroup: void removeView(android.view.View)>
<android.bluetooth.IBluetoothA2dp: boolean disconnect(android.bluetooth.BluetoothDevice)>
<android.media.audiofx.AudioEffect: boolean getEnabled()>
<android.os.SystemClock: long currentThreadTimeMicro()>
<android.hardware.SensorManager: android.hardware.Sensor getDefaultSensor(int,boolean)>
<android.bluetooth.IBluetoothHeadsetClient: java.util.List getCurrentCalls(android.bluetooth.BluetoothDevice)>
<android.inputmethodservice.InputMethodService: void onWindowHidden()>
<android.opengl.GLES10: void glPixelStorei(int,int)>
<android.os.INetworkManagementService: void setMtu(java.lang.String,int)>
<android.net.wifi.WifiInfo: android.net.wifi.SupplicantState getSupplicantState()>
<android.telephony.CellIdentityLte: int getCi()>
<android.widget.ProgressBar: void incrementProgressBy(int)>
<android.os.Parcel: void readBinderArray(android.os.IBinder[])>
<android.renderscript.Short3: short length()>
<android.net.LinkAddress: void <init>(java.net.InterfaceAddress)>
<android.os.FileUtils: boolean sync(java.io.FileOutputStream)>
<android.view.Window: void takeInputQueue(android.view.InputQueue.Callback)>
<android.appwidget.AppWidgetManager: boolean hasBindAppWidgetPermission(java.lang.String)>
<android.filterfw.core.FilterGraph: void setAutoBranchMode(int)>
<android.os.Debug: boolean cacheRegisterMap(java.lang.String)>
<com.android.internal.util.FastPrintWriter: void <init>(android.util.Printer)>
<android.view.Window: void setChildInt(int,int)>
<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setFindAccessibilityNodeInfosResult(java.util.List,int)>
<com.android.internal.widget.EditableInputConnection: boolean performContextMenuAction(int)>
<android.webkit.SslErrorHandler: void cancel()>
<android.graphics.Paint: void <init>(android.graphics.Paint)>
<android.drm.DrmManagerClient: android.drm.DrmConvertedStatus convertData(int,byte[])>
<android.widget.ExpandableListView: long getSelectedId()>
<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>
<android.printservice.PrintJob: android.print.PrintJobId getId()>
<android.view.InputDevice: android.view.InputDevice.MotionRange getMotionRange(int)>
<android.gesture.GestureOverlayView.OnGestureListener: void onGestureStarted(android.gesture.GestureOverlayView,android.view.MotionEvent)>
<android.view.WindowManagerPolicy: boolean isKeyguardHostWindow(android.view.WindowManager.LayoutParams)>
<android.app.admin.IDevicePolicyManager: void setAccountManagementDisabled(android.content.ComponentName,java.lang.String,boolean)>
<android.widget.CursorTreeAdapter: android.database.Cursor getChildrenCursor(android.database.Cursor)>
<com.android.internal.widget.DecorContentParent: void restoreToolbarHierarchyState(android.util.SparseArray)>
<android.mtp.MtpObjectInfo: long getDateCreated()>
<android.media.JetPlayer: boolean pause()>
<android.hardware.camera2.impl.CaptureResultExtras: void writeToParcel(android.os.Parcel,int)>
<android.animation.AnimatorSet: void resume()>
<android.media.ThumbnailUtils: android.graphics.Bitmap createImageThumbnail(java.lang.String,int)>
<android.service.media.MediaBrowserService: android.os.IBinder onBind(android.content.Intent)>
<android.app.FragmentManager: void addOnBackStackChangedListener(android.app.FragmentManager.OnBackStackChangedListener)>
<android.app.NotificationManager: android.content.ComponentName getEffectsSuppressor()>
<com.android.internal.widget.AutoScrollHelper.AbsListViewAutoScroller: void <init>(android.widget.AbsListView)>
<android.bluetooth.IBluetoothHeadset: boolean startScoUsingVirtualVoiceCall(android.bluetooth.BluetoothDevice)>
<android.app.PendingIntent: android.content.Intent getIntent()>
<com.android.internal.widget.ActionBarOverlayLayout.ActionBarVisibilityCallback: void onContentScrollStopped()>
<android.net.INetworkPolicyListener: void onMeteredIfacesChanged(java.lang.String[])>
<android.util.Property: boolean isReadOnly()>
<android.content.pm.FeatureGroupInfo: void <init>(android.content.pm.FeatureGroupInfo)>
<android.hardware.camera2.CaptureFailure: long getFrameNumber()>
<android.util.DayOfMonthCursor: int getSelectedMonthOffset()>
<android.webkit.WebViewProvider.ScrollDelegate: int computeVerticalScrollRange()>
<android.telecom.Connection: android.telecom.Conference getConference()>
<android.renderscript.Short4: android.renderscript.Short4 mod(android.renderscript.Short4,short)>
<android.widget.TableLayout: void onMeasure(int,int)>
<android.animation.ObjectAnimator: void start()>
<android.os.StatFs: int getAvailableBlocks()>
<android.net.wifi.WifiManager: boolean isOffChannelTdlsSupported()>
<android.webkit.WebViewProvider.ScrollDelegate: int computeHorizontalScrollRange()>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int[],int,int,int,int,android.graphics.Bitmap.Config)>
<android.content.ContentQueryMap: android.content.ContentValues getValues(java.lang.String)>
<android.preference.Preference: java.lang.String getKey()>
<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl.Uid getUidStatsLocked(int)>
<android.graphics.drawable.DrawableContainer: void setDither(boolean)>
<android.os.INetworkManagementService: void tetherInterface(java.lang.String)>
<android.view.View: void addOnAttachStateChangeListener(android.view.View.OnAttachStateChangeListener)>
<android.view.InputFilter: void onInputEvent(android.view.InputEvent,int)>
<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String,java.lang.CharSequence)>
<android.app.backup.BackupHelper: void writeNewStateDescription(android.os.ParcelFileDescriptor)>
<android.widget.ActivityChooserModel.ActivityResolveInfo: int compareTo(android.widget.ActivityChooserModel.ActivityResolveInfo)>
<android.view.ViewGroup: boolean dispatchTrackballEvent(android.view.MotionEvent)>
<android.hardware.camera2.legacy.CameraDeviceState: boolean setCaptureResult(android.hardware.camera2.legacy.RequestHolder,android.hardware.camera2.impl.CameraMetadataNative,int)>
<android.renderscript.RenderScriptGL: void setSurfaceTexture(android.graphics.SurfaceTexture,int,int)>
<android.view.ViewGroup: void addView(android.view.View,int,int)>
<android.media.audiofx.Virtualizer: int getVirtualizationMode()>
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()>
<android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)>
<android.nfc.tech.NfcF: void <init>(android.nfc.Tag)>
<android.media.tv.TvStreamConfig: int getMaxHeight()>
<android.view.SurfaceControl: void setTransparentRegionHint(android.graphics.Region)>
<com.google.android.gles_jni.EGLImpl: boolean eglGetConfigAttrib(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int[])>
<android.net.http.Headers: void setLastModified(java.lang.String)>
<android.telephony.TelephonyManager: boolean isRadioOn()>
<android.text.style.SubscriptSpan: void <init>(android.os.Parcel)>
<android.hardware.input.InputDeviceIdentifier: int describeContents()>
<android.os.StrictMode: void onFileUriExposed(java.lang.String)>
<android.view.animation.PathInterpolator: void <init>(android.graphics.Path)>
<android.media.tv.ITvInputManagerCallback: void onInputUpdated(java.lang.String)>
<android.view.View: int getAccessibilityWindowId()>
<android.filterfw.core.GraphRunner: void run()>
<android.telephony.PhoneNumberUtils: boolean compareLoosely(java.lang.String,java.lang.String)>
<android.content.AsyncTaskLoader: boolean onCancelLoad()>
<android.nfc.ApduList: java.util.List get()>
<android.hardware.camera2.params.MeteringRectangle: int getMeteringWeight()>
<android.content.Loader: int getId()>
<android.service.persistentdata.PersistentDataBlockManager: long getMaximumDataBlockSize()>
<android.graphics.Canvas: void drawPatch(android.graphics.NinePatch,android.graphics.RectF,android.graphics.Paint)>
<android.bluetooth.BluetoothSocket: java.io.OutputStream getOutputStream()>
<android.renderscript.Byte2: void add(android.renderscript.Byte2)>
<android.app.ActivityManager: void setFrontActivityScreenCompatMode(int)>
<android.media.SubtitleController: boolean selectTrack(android.media.SubtitleTrack)>
<android.net.LinkProperties: boolean isIdenticalStackedLinks(android.net.LinkProperties)>
<com.android.internal.widget.ResolverDrawerLayout.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<android.inputmethodservice.AbstractInputMethodService: boolean onGenericMotionEvent(android.view.MotionEvent)>
<android.view.accessibility.AccessibilityRecord: int getToIndex()>
<com.android.internal.telephony.IMms: android.net.Uri addTextMessageDraft(java.lang.String,java.lang.String,java.lang.String)>
<android.widget.AutoCompleteTextView: void onDisplayHint(int)>
<com.android.internal.app.IBatteryStats: void noteStopVideo(int)>
<android.os.StrictMode: boolean vmSqliteObjectLeaksEnabled()>
<android.opengl.GLES10: void glLightfv(int,int,float[],int)>
<android.net.wifi.p2p.nsd.WifiP2pServiceInfo: boolean equals(java.lang.Object)>
<com.android.internal.util.NotificationColorUtil: boolean isGrayscaleIcon(android.content.Context,int)>
<android.app.RemoteInput.Builder: android.app.RemoteInput.Builder addExtras(android.os.Bundle)>
<android.net.http.RequestHandle: void pauseRequest(boolean)>
<android.graphics.PorterDuffXfermode: void <init>(android.graphics.PorterDuff.Mode)>
<android.content.res.ColorStateList: android.content.res.ColorStateList withAlpha(int)>
<android.text.util.Rfc822Token: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<com.android.internal.util.XmlUtils: java.lang.String readStringAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>
<android.app.DownloadManager: android.database.Cursor query(android.app.DownloadManager.Query)>
<com.android.internal.widget.ActionBarOverlayLayout: void setLogo(int)>
<android.graphics.Region: void recycle()>
<android.os.StrictMode: void enableDefaults()>
<android.filterfw.core.MutableFrameFormat: void setBytesPerSample(int)>
<android.widget.RadialTimePickerView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.widget.TextView: boolean onTextContextMenuItem(int)>
<android.text.style.SuggestionRangeSpan: int getSpanTypeId()>
<android.database.MatrixCursor: java.lang.String[] getColumnNames()>
<android.widget.TableRow: void onMeasure(int,int)>
<android.media.MediaDrm: void provideProvisionResponse(byte[])>
<android.widget.SearchView: void setOnSearchClickListener(android.view.View.OnClickListener)>
<com.android.internal.widget.ResolverDrawerLayout: void requestChildFocus(android.view.View,android.view.View)>
<android.renderscript.Long3: android.renderscript.Long3 div(android.renderscript.Long3,long)>
<android.widget.Spinner: void <init>(android.content.Context)>
<android.media.session.PlaybackState: int getState()>
<android.opengl.GLES31: void glProgramUniform3uiv(int,int,int,java.nio.IntBuffer)>
<android.filterfw.geometry.Quad: float getBoundingWidth()>
<android.media.tv.TvInputManager: boolean isSingleSessionActive()>
<com.android.internal.util.TypedProperties: float getFloat(java.lang.String,float)>
<android.text.style.ReplacementSpan: void updateDrawState(android.text.TextPaint)>
<android.graphics.drawable.shapes.RectShape: android.graphics.RectF rect()>
<android.accounts.IAccountManager: void getAuthTokenLabel(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String)>
<android.view.GestureDetector: boolean isLongpressEnabled()>
<android.net.LocalServerSocket: java.io.FileDescriptor getFileDescriptor()>
<android.telephony.cdma.CdmaSmsCbProgramData: int getAlertOption()>
<android.renderscript.Int2: void mod(android.renderscript.Int2)>
<android.mtp.MtpObjectInfo: int getCompressedSize()>
<android.animation.LayoutTransition: void endChangingAnimations()>
<android.widget.ViewAnimator: android.view.animation.Animation getInAnimation()>
<android.telecom.RemoteConnection: boolean isRingbackRequested()>
<android.content.pm.PackageInstaller.SessionParams: void setInstallFlagsInternal()>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: void setExitFadeDuration(int)>
<android.view.ViewTreeObserver: void removeOnTouchModeChangeListener(android.view.ViewTreeObserver.OnTouchModeChangeListener)>
<android.media.IAudioService: void setBluetoothA2dpOn(boolean)>
<android.graphics.drawable.LayerDrawable: void invalidateDrawable(android.graphics.drawable.Drawable)>
<android.os.DropBoxManager.Entry: void <init>(java.lang.String,long,java.lang.String)>
<android.graphics.Canvas: void drawLines(float[],int,int,android.graphics.Paint)>
<android.bluetooth.BluetoothGattCharacteristic: java.util.List getDescriptors()>
<android.widget.DigitalClock: void <init>(android.content.Context,android.util.AttributeSet)>
<android.media.tv.ITvInputSessionCallback: void onSessionEvent(java.lang.String,android.os.Bundle)>
<android.view.InputEventReceiver: void dispose()>
<android.filterfw.core.OutputPort: android.filterfw.core.InputPort getTargetPort()>
<android.content.res.Resources: void updateSystemConfiguration(android.content.res.Configuration,android.util.DisplayMetrics,android.content.res.CompatibilityInfo)>
<android.media.AudioService.AudioPolicyProxy: void binderDied()>
<android.widget.AbsListView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.internal.view.BaseSurfaceHolder: int getRequestedHeight()>
<android.accounts.AccountManager: void <init>(android.content.Context,android.accounts.IAccountManager)>
<android.nfc.tech.NfcF: byte[] getSystemCode()>
<com.android.internal.app.ToolbarActionBar: android.app.ActionBar.Tab getTabAt(int)>
<android.app.SearchableInfo: boolean getVoiceSearchEnabled()>
<android.telephony.PreciseDataConnectionState: boolean equals(java.lang.Object)>
<android.content.pm.ApplicationInfo: android.content.pm.ApplicationInfo getApplicationInfo()>
<com.android.internal.preference.YesNoPreference: void <init>(android.content.Context,android.util.AttributeSet)>
<android.opengl.GLES20: void glSampleCoverage(float,boolean)>
<com.android.server.AppWidgetBackupBridge: void restoreWidgetState(java.lang.String,byte[],int)>
<android.widget.ListView: boolean removeFooterView(android.view.View)>
<android.service.media.IMediaBrowserService: void addSubscription(java.lang.String,android.service.media.IMediaBrowserServiceCallbacks)>
<android.widget.RemoteViewsAdapter: int getViewTypeCount()>
<android.print.IPrintSpoolerCallbacks: void onGetPrintJobInfoResult(android.print.PrintJobInfo,int)>
<android.view.KeyEvent.DispatcherState: boolean isTracking(android.view.KeyEvent)>
<android.accessibilityservice.AccessibilityService: android.view.accessibility.AccessibilityNodeInfo getRootInActiveWindow()>
<android.app.IActivityController: boolean activityResuming(java.lang.String)>
<android.graphics.Region: android.graphics.Path getBoundaryPath()>
<android.util.SparseBooleanArray: boolean get(int)>
<android.filterpacks.imageproc.SepiaFilter: void setupPorts()>
<android.net.wifi.WifiInfo: java.lang.String getMacAddress()>
<com.android.internal.view.menu.ActionMenu: void removeItem(int)>
<android.provider.Contacts.ContactMethods: java.lang.String encodePredefinedImProtocol(int)>
<android.view.RenderNode: boolean setAnimationMatrix(android.graphics.Matrix)>
<android.graphics.PointF: void <init>(float,float)>
<android.transition.TransitionSet: int getOrdering()>
<android.net.wifi.p2p.WifiP2pManager.DnsSdServiceResponseListener: void onDnsSdServiceAvailable(java.lang.String,java.lang.String,android.net.wifi.p2p.WifiP2pDevice)>
<com.android.internal.view.menu.MenuPopupHelper: boolean flagActionItems()>
<android.widget.AppSecurityPermissions.PermissionItemView: void setPermission(android.widget.AppSecurityPermissions.MyPermissionGroupInfo,android.widget.AppSecurityPermissions.MyPermissionInfo,boolean,java.lang.CharSequence,java.lang.String,boolean)>
<android.net.LinkProperties: boolean addRoute(android.net.RouteInfo)>
<android.util.TypedValue: float complexToDimension(int,android.util.DisplayMetrics)>
<android.widget.ImageView: boolean getAdjustViewBounds()>
<android.renderscript.Double4: void setAt(int,double)>
<android.app.admin.IDevicePolicyManager: java.lang.String getDeviceOwner()>
<android.service.notification.ZenModeConfig: void <init>(android.os.Parcel)>
<android.view.MenuItem: android.view.MenuItem setNumericShortcut(char)>
<android.content.pm.PackageManager: java.util.List getInstalledApplications(int)>
<com.google.android.collect.Maps: java.util.HashMap newHashMap()>
<android.print.PageRange: void <init>(int,int)>
<android.app.backup.BackupTransport: long requestFullBackupTime()>
<android.text.method.DigitsKeyListener: int getInputType()>
<android.telecom.Connection: java.util.List getConferenceableConnections()>
<android.webkit.FindActionModeCallback: void setWebView(android.webkit.WebView)>
<android.media.AudioSystem: boolean isStreamActive(int,int)>
<android.media.SubtitleTrack: boolean isTimedText()>
<android.os.UserHandle: int getUid(int,int)>
<android.content.res.ResourcesKey: boolean equals(java.lang.Object)>
<com.android.internal.os.BatteryStatsHelper: boolean checkWifiOnly(android.content.Context)>
<android.content.IContentProvider: android.os.ParcelFileDescriptor openFile(java.lang.String,android.net.Uri,java.lang.String,android.os.ICancellationSignal)>
<android.net.http.SslCertificate: java.lang.String getValidNotBefore()>
<android.location.Geocoder: java.util.List getFromLocation(double,double,int)>
<android.location.GpsMeasurement: double getPseudorangeRateUncertaintyInMetersPerSec()>
<android.graphics.drawable.RotateDrawable: float getPivotY()>
<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig.DowntimeInfo tryParseDowntimeConditionId(android.net.Uri)>
<android.content.pm.ConfigurationInfo: void <init>(android.content.pm.ConfigurationInfo)>
<android.graphics.Rect: int height()>
<android.net.IpConfiguration: android.net.StaticIpConfiguration getStaticIpConfiguration()>
<android.widget.Space: void <init>(android.content.Context,android.util.AttributeSet)>
<android.animation.AnimatorInflater: android.animation.StateListAnimator loadStateListAnimator(android.content.Context,int)>
<android.text.format.Time: java.lang.String toString()>
<android.os.Bundle: short getShort(java.lang.String)>
<com.android.internal.view.menu.MenuView.ItemView: boolean showsIcon()>
<android.renderscript.Double2: android.renderscript.Double2 mul(android.renderscript.Double2,android.renderscript.Double2)>
<android.hardware.usb.UsbEndpoint: java.lang.String toString()>
<android.net.wifi.WifiManager: boolean startCustomizedScan(android.net.wifi.ScanSettings)>
<android.net.wifi.p2p.WifiP2pConfig: void invalidate()>
<com.android.internal.view.IInputMethodManager: com.android.internal.view.InputBindResult startInput(com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo,int)>
<android.renderscript.Long2: void sub(android.renderscript.Long2)>
<android.inputmethodservice.InputMethodService: void onAppPrivateCommand(java.lang.String,android.os.Bundle)>
<android.inputmethodservice.InputMethodService: void setExtractView(android.view.View)>
<android.print.PrintJobInfo.Builder: void setAttributes(android.print.PrintAttributes)>
<android.view.ViewGroup: boolean dispatchKeyEventPreIme(android.view.KeyEvent)>
<android.widget.RemoteViews: void setTextViewCompoundDrawablesRelativeColorFilter(int,int,int,android.graphics.PorterDuff.Mode)>
<android.nfc.NfcAdapter: android.nfc.INfcTag getTagService()>
<android.widget.ExpandableListView: void setChildIndicatorBoundsRelative(int,int)>
<com.android.internal.os.IDropBoxManagerService: android.os.DropBoxManager.Entry getNextEntry(java.lang.String,long)>
<android.graphics.Canvas: void drawColor(int,android.graphics.PorterDuff.Mode)>
<android.graphics.Movie: int height()>
<android.bluetooth.le.ScanFilter: int hashCode()>
<android.widget.LinearLayout: int getBaselineAlignedChildIndex()>
<android.print.PrintAttributes: android.print.PrintAttributes asPortrait()>
<android.os.Debug: void startMethodTracing(java.lang.String)>
<android.view.View: void setScrollY(int)>
<android.app.Fragment: void setExitSharedElementTransitionCallback(android.app.SharedElementCallback)>
<android.widget.TextView.OnEditorActionListener: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>
<android.net.WifiLinkQualityInfo: void setTxGood(long)>
<android.renderscript.Long2: android.renderscript.Long2 mul(android.renderscript.Long2,android.renderscript.Long2)>
<android.content.ContentProviderOperation: int getType()>
<android.app.ActionBar: int getTabCount()>
<android.hardware.camera2.legacy.ParameterUtils: android.hardware.camera2.legacy.ParameterUtils.ZoomData convertScalerCropRegion(android.graphics.Rect,android.graphics.Rect,android.util.Size,android.hardware.Camera.Parameters)>
<android.security.Credentials: byte[] convertToPem(java.security.cert.Certificate[])>
<com.android.internal.policy.IKeyguardService: void onSystemReady()>
<android.service.dreams.DreamService: void setInteractive(boolean)>
<android.app.ApplicationThreadProxy: void dumpProvider(java.io.FileDescriptor,android.os.IBinder,java.lang.String[])>
<android.widget.GridView: void setAdapter(android.widget.ListAdapter)>
<android.preference.PreferenceGroupAdapter: boolean areAllItemsEnabled()>
<android.view.accessibility.AccessibilityNodeInfo: void addChild(android.view.View)>
<android.view.ViewGroup: boolean addStatesFromChildren()>
<android.net.IConnectivityManager: android.net.ProxyInfo getGlobalProxy()>
<android.media.WebVttTrack: void onData(byte[],boolean,long)>
<android.app.TabActivity: void onRestoreInstanceState(android.os.Bundle)>
<android.app.FragmentManagerImpl: void freeBackStackIndex(int)>
<android.os.Environment: void setUserRequired(boolean)>
<android.media.projection.IMediaProjectionManager: android.media.projection.IMediaProjection createProjection(int,java.lang.String,int,boolean)>
<android.bluetooth.BluetoothDevice: java.lang.String getName()>
<android.service.voice.VoiceInteractionService: void startSession(android.os.Bundle)>
<android.telecom.TelecomManager: void addNewUnknownCall(android.telecom.PhoneAccountHandle,android.os.Bundle)>
<com.android.internal.os.BatteryStatsImpl: long[] getChargeStepDurationsArray()>
<android.util.LogPrinter: void println(java.lang.String)>
<android.telephony.SignalStrength: int getEvdoEcio()>
<android.opengl.GLES20: void glGetUniformfv(int,int,float[],int)>
<android.media.effect.effects.LomoishEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>
<android.content.BroadcastReceiver.PendingResult: void setResult(int,java.lang.String,android.os.Bundle)>
<android.util.AndroidException: void <init>(java.lang.Exception)>
<android.app.Notification.WearableExtender: android.app.Notification.Builder extend(android.app.Notification.Builder)>
<android.os.SystemService: void stop(java.lang.String)>
<android.os.CommonTimeConfig.OnServerDiedListener: void onServerDied()>
<android.view.InputDevice: int getProductId()>
<android.provider.Settings.Bookmarks: java.lang.CharSequence getTitle(android.content.Context,android.database.Cursor)>
<android.util.TypedValue: float complexToFloat(int)>
<android.widget.ListView: boolean drawChild(android.graphics.Canvas,android.view.View,long)>
<android.widget.ViewSwitcher: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.widget.Gallery: void onLongPress(android.view.MotionEvent)>
<android.renderscript.Short4: void mul(short)>
<android.opengl.GLES31Ext: void glTexBufferRangeEXT(int,int,int,int,int)>
<android.provider.Settings.Secure: void getMovedKeys(java.util.HashSet)>
<android.content.pm.PackageInstaller.Session: void fsync(java.io.OutputStream)>
<android.appwidget.AppWidgetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])>
<android.gesture.GestureOverlayView: void onDetachedFromWindow()>
<android.net.LinkProperties: boolean hasGlobalIPv6Address()>
<android.app.ActivityOptions: int getStartX()>
<android.renderscript.ScriptIntrinsicBlend: void forEachSrcAtop(android.renderscript.Allocation,android.renderscript.Allocation)>
<android.filterfw.core.GLEnvironment: void swapBuffers()>
<android.renderscript.Script.FieldBase: void init(android.renderscript.RenderScript,int)>
<android.view.Menu: android.view.SubMenu addSubMenu(int)>
<android.app.Fragment: void onPause()>
<android.webkit.CacheManager: boolean endCacheTransaction()>
<android.os.storage.IMountService: java.lang.String getMountedObbPath(java.lang.String)>
<android.provider.ContactsContract.CommonDataKinds.Im: int getTypeLabelResource(int)>
<android.net.MobileDataStateTracker: void defaultRouteSet(boolean)>
<android.telecom.RemoteConnectionManager: android.telecom.RemoteConnection createRemoteConnection(android.telecom.PhoneAccountHandle,android.telecom.ConnectionRequest,boolean)>
<android.app.ActivityManagerProxy: boolean dumpHeap(java.lang.String,int,boolean,java.lang.String,android.os.ParcelFileDescriptor)>
<android.media.SoundPool.Builder: android.media.SoundPool build()>
<android.media.SubtitleTrack.RenderingWidget: void setOnChangedListener(android.media.SubtitleTrack.RenderingWidget.OnChangedListener)>
<android.widget.GridView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.hardware.soundtrigger.SoundTrigger.Keyphrase: int describeContents()>
<android.hardware.usb.UsbDeviceConnection: int getFileDescriptor()>
<com.android.internal.app.ProcessStats: void addSysMemUsage(long,long,long,long,long)>
<android.view.ViewConfiguration: int getScaledTouchSlop()>
<android.speech.tts.ITextToSpeechService: java.lang.String[] getClientDefaultLanguage()>
<com.android.internal.app.MediaRouteControllerDialog: void onCreate(android.os.Bundle)>
<android.nfc.tech.NfcB: void <init>(android.nfc.Tag)>
<android.bluetooth.BluetoothGatt: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofMultiInt(java.lang.Object,java.lang.String,android.graphics.Path)>
<android.view.DisplayAdjustments: void <init>(android.os.IBinder)>
<com.android.internal.os.BinderInternal: void disableBackgroundScheduling(boolean)>
<android.content.ContentProvider: boolean isTemporary()>
<com.android.internal.widget.PointerLocationView: boolean onTrackballEvent(android.view.MotionEvent)>
<android.drm.DrmManagerClient: java.lang.String getOriginalMimeType(android.net.Uri)>
<android.content.pm.IPackageDeleteObserver: void packageDeleted(java.lang.String,int)>
<android.telecom.Connection: void onAnswer(int)>
<android.text.format.DateFormat: boolean is24HourFormat(android.content.Context)>
<android.content.pm.PackageManager: android.content.Intent getLeanbackLaunchIntentForPackage(java.lang.String)>
<android.telecom.PhoneAccount: boolean hasCapabilities(int)>
<android.os.UserHandle: int hashCode()>
<android.view.animation.AnimationUtils: android.view.animation.Animation makeOutAnimation(android.content.Context,boolean)>
<android.view.ViewGroup.OnHierarchyChangeListener: void onChildViewAdded(android.view.View,android.view.View)>
<android.view.ViewGroup: void dispatchWindowFocusChanged(boolean)>
<android.content.Intent: android.content.Intent putExtras(android.content.Intent)>
<android.appwidget.AppWidgetHostView: android.view.View getDefaultView()>
<android.hardware.soundtrigger.SoundTrigger.KeyphraseSoundModel: java.lang.String toString()>
<android.renderscript.ProgramRaster: android.renderscript.ProgramRaster.CullMode getCullMode()>
<android.inputmethodservice.KeyboardView.OnKeyboardActionListener: void swipeDown()>
<android.webkit.WebView: void setWebViewClient(android.webkit.WebViewClient)>
<android.app.IApplicationThread: void scheduleDestroyBackupAgent(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo)>
<android.bluetooth.BluetoothHeadsetClient: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.hardware.SerialPort: int read(java.nio.ByteBuffer)>
<android.location.Country: int hashCode()>
<android.filterfw.core.NativeProgram: java.lang.Object getHostValue(java.lang.String)>
<android.service.notification.StatusBarNotification: void <init>(android.os.Parcel)>
<android.print.PrintAttributes: boolean equals(java.lang.Object)>
<android.content.ContextWrapper: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<android.security.KeyStore: boolean generate(java.lang.String,int,int,int,int,byte[][])>
<android.content.UndoManager: int countRedos(android.content.UndoOwner[])>
<android.widget.Adapter: void registerDataSetObserver(android.database.DataSetObserver)>
<android.content.pm.VerifierInfo: void <init>(java.lang.String,java.security.PublicKey)>
<android.location.GpsNavigationMessage: void setPrn(byte)>
<android.app.Fragment: void onDestroyView()>
<android.view.ViewRootImpl: void dispatchResized(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,boolean,android.content.res.Configuration)>
<android.media.browse.MediaBrowser: void <init>(android.content.Context,android.content.ComponentName,android.media.browse.MediaBrowser.ConnectionCallback,android.os.Bundle)>
<com.android.ims.internal.IImsService: com.android.ims.internal.IImsCallSession getPendingCallSession(int,java.lang.String)>
<android.view.accessibility.AccessibilityEvent: void setPackageName(java.lang.CharSequence)>
<android.location.LocationManager: void requestLocationUpdates(long,float,android.location.Criteria,android.app.PendingIntent)>
<android.speech.tts.TextToSpeech: android.speech.tts.Voice getVoice()>
<android.database.MatrixCursor: byte[] getBlob(int)>
<android.content.pm.IOnAppsChangedListener: void onPackageChanged(android.os.UserHandle,java.lang.String)>
<android.os.Process: int getThreadPriority(int)>
<android.renderscript.Short2: void addMultiple(android.renderscript.Short2,short)>
<android.view.Window: void onConfigurationChanged(android.content.res.Configuration)>
<android.app.IActivityManager: android.os.IBinder peekService(android.content.Intent,java.lang.String)>
<android.bluetooth.BluetoothAdapter: boolean checkBluetoothAddress(java.lang.String)>
<android.view.accessibility.AccessibilityRecord: void recycle()>
<android.app.UiAutomation: java.util.List getWindows()>
<android.media.AudioTrack: int getState()>
<android.net.wifi.WifiActivityEnergyInfo: int getControllerEnergyUsed()>
<com.android.internal.view.menu.ExpandedMenuView: void initialize(com.android.internal.view.menu.MenuBuilder)>
<android.app.admin.IDevicePolicyManager: int enableSystemAppWithIntent(android.content.ComponentName,android.content.Intent)>
<android.app.Dialog: android.view.View findViewById(int)>
<android.net.ConnectivityManager: boolean isNetworkTypeValid(int)>
<android.os.Debug: int getMethodTracingMode()>
<android.content.IntentSender: void <init>(android.os.IBinder)>
<android.view.SurfaceView: void setSecure(boolean)>
<android.media.ExifInterface: double getAttributeDouble(java.lang.String,double)>
<android.telecom.VideoProfile.VideoState: boolean isTransmissionEnabled(int)>
<android.widget.ShareActionProvider: void setShareIntent(android.content.Intent)>
<android.widget.ToggleButton: java.lang.CharSequence getTextOn()>
<android.text.method.DateKeyListener: int getInputType()>
<android.animation.Animator: long getStartDelay()>
<com.android.internal.app.MediaRouteChooserDialog: void setExtendedSettingsClickListener(android.view.View.OnClickListener)>
<android.preference.PreferenceCategory: void <init>(android.content.Context,android.util.AttributeSet)>
<android.text.style.BulletSpan: void writeToParcel(android.os.Parcel,int)>
<android.view.InputDevice.MotionRange: float getFlat()>
<android.content.pm.ComponentInfo: void dumpFront(android.util.Printer,java.lang.String)>
<android.view.Display: boolean hasAccess(int)>
<android.app.admin.DeviceAdminReceiver: void onPasswordChanged(android.content.Context,android.content.Intent)>
<android.location.GpsMeasurement: void setAccumulatedDeltaRangeInMeters(double)>
<android.preference.PreferenceScreen: void <init>(android.content.Context,android.util.AttributeSet)>
<android.net.NetworkInfo: void setSubtype(int,java.lang.String)>
<android.graphics.drawable.Drawable: void setTint(int)>
<android.database.SQLException: void <init>(java.lang.String,java.lang.Throwable)>
<android.view.textservice.TextInfo: void <init>(java.lang.String)>
<android.content.pm.LauncherApps: java.util.List getActivityList(java.lang.String,android.os.UserHandle)>
<android.print.PrintJobInfo: void setTag(java.lang.String)>
<android.media.AudioService.VolumeStreamState: void setAllIndexesToMax()>
<android.media.IRingtonePlayer: void play(android.os.IBinder,android.net.Uri,android.media.AudioAttributes)>
<android.content.res.CompatibilityInfo.Translator: void translateRectInScreenToAppWindow(android.graphics.Rect)>
<android.media.IAudioService: void startBluetoothScoVirtualCall(android.os.IBinder)>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl: void setSessionEnabled(android.view.inputmethod.InputMethodSession,boolean)>
<android.renderscript.Int3: void addMultiple(android.renderscript.Int3,int)>
<android.renderscript.Float3: void mul(float)>
<android.view.View: void resolveDrawables()>
<android.security.AndroidKeyStore: void engineDeleteEntry(java.lang.String)>
<android.graphics.Paint: float getTextScaleX()>
<com.android.internal.app.IAppOpsService: int checkOperation(int,int,java.lang.String)>
<com.android.server.backup.SystemBackupAgent: void onBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>
<android.app.PendingIntent: int getCreatorUid()>
<android.preference.DialogPreference: java.lang.CharSequence getDialogTitle()>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLength(android.content.ComponentName,int)>
<android.filterpacks.imageproc.ToPackedGrayFilter: void prepare(android.filterfw.core.FilterContext)>
<android.widget.SlidingDrawer: void onMeasure(int,int)>
<android.database.sqlite.SQLiteClosable: void onAllReferencesReleasedFromContainer()>
<android.app.StatusBarManager: java.lang.String windowStateToString(int)>
<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>
<android.telecom.InCallAdapter: void turnProximitySensorOn()>
<android.media.tv.ITvInputSessionWrapper: void dispatchSurfaceChanged(int,int,int)>
<com.android.internal.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window.Callback)>
<android.webkit.UrlInterceptRegistry: boolean unregisterHandler(android.webkit.UrlInterceptHandler)>
<android.view.View: void scrollTo(int,int)>
<android.webkit.WebIconDatabase: void close()>
<android.telecom.RemoteConnection: java.lang.CharSequence getCallerDisplayName()>
<android.content.SyncResult: java.lang.String toDebugString()>
<android.widget.GridView: void setVerticalSpacing(int)>
<android.location.LocationManager: void requestLocationUpdates(long,float,android.location.Criteria,android.location.LocationListener,android.os.Looper)>
<android.content.ClipData: void <init>(android.content.ClipDescription,android.content.ClipData.Item)>
<android.view.ViewRootImpl: void getLastTouchPoint(android.graphics.Point)>
<android.net.Uri: boolean isHierarchical()>
<android.net.InterfaceConfiguration: java.lang.String toString()>
<android.app.FragmentManager.BackStackEntry: java.lang.CharSequence getBreadCrumbShortTitle()>
<android.hardware.usb.UsbDeviceConnection: int bulkTransfer(android.hardware.usb.UsbEndpoint,byte[],int,int,int)>
<android.view.animation.OvershootInterpolator: float getInterpolation(float)>
<com.android.internal.app.AlertActivity: boolean onKeyDown(int,android.view.KeyEvent)>
<android.renderscript.Long4: android.renderscript.Long4 div(android.renderscript.Long4,android.renderscript.Long4)>
<android.hardware.location.GeofenceHardwareMonitorEvent: android.location.Location getLocation()>
<android.webkit.ClientCertRequest: void cancel()>
<android.preference.Preference: java.lang.String getDependency()>
<android.widget.CalendarView.CalendarViewDelegate: void setDate(long,boolean,boolean)>
<android.alsa.AlsaDevicesParser: void Log()>
<android.content.pm.PackageManager: java.util.List queryInstrumentation(java.lang.String,int)>
<android.webkit.WebSettings: boolean getBlockNetworkLoads()>
<com.android.internal.widget.RotarySelector: void onMeasure(int,int)>
<android.media.session.ISession: void setRatingType(int)>
<android.service.notification.NotificationListenerService.RankingMap: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.telephony.ITelephonyRegistry: void notifyDataConnectionRealTimeInfo(android.telephony.DataConnectionRealTimeInfo)>
<android.net.wifi.p2p.WifiP2pManager: void requestConnectionInfo(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ConnectionInfoListener)>
<android.view.ScaleGestureDetector: boolean onTouchEvent(android.view.MotionEvent)>
<android.text.style.QuoteSpan: void <init>(android.os.Parcel)>
<android.net.VpnService.Builder: android.net.VpnService.Builder allowFamily(int)>
<com.android.internal.os.BatteryStatsImpl.LongSamplingCounter: void onTimeStarted(long,long,long)>
<android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setDeviceAddress(java.lang.String)>
<android.graphics.BitmapFactory.Options: void requestCancelDecode()>
<android.telephony.ServiceState: void setStateOff()>
<android.media.session.MediaSession.Callback: void onPlayFromSearch(java.lang.String,android.os.Bundle)>
<com.android.internal.statusbar.StatusBarIconList: java.lang.String getSlot(int)>
<android.database.AbstractCursor: long getLong(int)>
<android.util.Size: boolean equals(java.lang.Object)>
<android.telephony.ServiceState: void <init>(android.os.Parcel)>
<android.graphics.Paint: void setStrikeThruText(boolean)>
<android.widget.TabWidget: int getTabCount()>
<com.android.internal.os.BatteryStatsImpl: void finishAddingCpuLocked(int,int,int,long[])>
<android.graphics.drawable.ClipDrawable: void setLayoutDirection(int)>
<android.content.pm.PackageInstaller.SessionInfo: java.lang.CharSequence getAppLabel()>
<com.android.internal.backup.LocalTransport: android.app.backup.RestoreSet[] getAvailableRestoreSets()>
<android.os.Handler: android.os.Message obtainMessage(int,int,int)>
<android.util.JsonWriter: android.util.JsonWriter value(long)>
<android.os.PowerManager.WakeLock: boolean isHeld()>
<android.content.pm.ConfigurationInfo: java.lang.String getGlEsVersion()>
<android.hardware.location.GeofenceHardwareImpl: boolean pauseGeofence(int,int)>
<com.android.internal.inputmethod.InputMethodUtils.InputMethodSettings: void setCurrentProfileIds(int[])>
<android.content.CursorEntityIterator: void close()>
<android.filterfw.MffEnvironment: void activateGLEnvironment()>
<android.net.ConnectivityManager: boolean isActiveNetworkMetered()>
<android.view.DisplayInfo: boolean equals(java.lang.Object)>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(char)>
<android.widget.SimpleExpandableListAdapter: int getChildrenCount(int)>
<android.util.Spline: android.util.Spline createLinearSpline(float[],float[])>
<android.app.ActivityManager: int getLauncherLargeIconSize()>
<com.android.internal.widget.LockPatternUtils: byte[] patternToHash(java.util.List)>
<android.bluetooth.BluetoothMap: void close()>
<android.net.ProxyInfo: java.lang.String getHost()>
<android.hardware.display.VirtualDisplay.Callback: void onPaused()>
<com.google.android.gles_jni.GLImpl: void glTexParameterxv(int,int,java.nio.IntBuffer)>
<android.text.style.MaskFilterSpan: void updateDrawState(android.text.TextPaint)>
<com.android.internal.util.StateMachine: boolean recordLogRec(android.os.Message)>
<android.media.AudioService.VolumeStreamState: void checkFixedVolumeDevices()>
<android.content.ContentProviderOperation.Builder: android.content.ContentProviderOperation.Builder withSelection(java.lang.String,java.lang.String[])>
<android.text.TextUtils: int indexOf(java.lang.CharSequence,java.lang.CharSequence,int,int)>
<android.os.Message: android.os.Message obtain(android.os.Message)>
<android.accounts.IAccountAuthenticator: void getAccountRemovalAllowed(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account)>
<android.provider.DocumentsProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.filterfw.core.MutableFrameFormat: void setMetaValue(java.lang.String,java.lang.Object)>
<android.text.style.AbsoluteSizeSpan: void <init>(int)>
<android.renderscript.Element: android.renderscript.Element F32_4(android.renderscript.RenderScript)>
<android.net.wifi.WifiManager: void enableVerboseLogging(int)>
<android.view.View: float getPivotY()>
<com.android.internal.widget.ActionBarOverlayLayout: boolean isOverflowMenuShowing()>
<android.graphics.drawable.GradientDrawable: android.graphics.drawable.GradientDrawable.Orientation getOrientation()>
<android.renderscript.FieldPacker: void addI16(short)>
<android.media.RemoteController: boolean seekTo(long)>
<android.renderscript.Type: int getX()>
<android.graphics.PorterDuffColorFilter: void setColor(int)>
<android.view.ViewGroup: void dispatchFinishTemporaryDetach()>
<android.speech.srec.WaveHeader: android.speech.srec.WaveHeader setBitsPerSample(short)>
<android.text.SpannableString: void <init>(java.lang.CharSequence)>
<android.filterfw.core.FilterGraph: boolean addFilter(android.filterfw.core.Filter)>
<android.filterfw.core.FilterGraph: void setDiscardUnconnectedOutputs(boolean)>
<android.bluetooth.BluetoothHealthAppConfiguration: int hashCode()>
<android.widget.ActionMenuView: android.widget.ActionMenuView.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.telephony.CellSignalStrengthWcdma: boolean equals(java.lang.Object)>
<android.filterfw.format.ObjectFormat: android.filterfw.core.MutableFrameFormat fromClass(java.lang.Class,int)>
<android.hardware.display.DisplayManager: void connectWifiDisplay(java.lang.String)>
<android.bluetooth.BluetoothAdapter: boolean isOffloadedFilteringSupported()>
<android.net.NetworkInfo: void setIsConnectedToProvisioningNetwork(boolean)>
<android.location.GpsNavigationMessage: void setSubmessageId(short)>
<android.util.ArraySet: java.util.Iterator iterator()>
<com.android.internal.view.menu.MenuPresenter: boolean onSubMenuSelected(com.android.internal.view.menu.SubMenuBuilder)>
<android.database.sqlite.SQLiteGlobal: int getWALConnectionPoolSize()>
<android.content.SharedPreferences: java.util.Map getAll()>
<android.opengl.EGLObjectHandle: int hashCode()>
<android.media.MediaRecorder: void finalize()>
<com.android.internal.telephony.IMms: android.os.Bundle getCarrierConfigValues(long)>
<android.preference.Preference: android.view.View onCreateView(android.view.ViewGroup)>
<com.google.android.gles_jni.GLImpl: void glStencilMask(int)>
<android.media.MediaRecorder.OnErrorListener: void onError(android.media.MediaRecorder,int,int)>
<android.telephony.SignalStrength: int getGsmSignalStrength()>
<android.provider.CalendarContract.CalendarAlerts: void scheduleAlarm(android.content.Context,android.app.AlarmManager,long)>
<android.content.UriPermission: void writeToParcel(android.os.Parcel,int)>
<android.view.animation.RotateAnimation: void <init>(float,float,float,float)>
<android.widget.ProgressBar: void setIndeterminateDrawableTiled(android.graphics.drawable.Drawable)>
<android.app.admin.DevicePolicyManager: void clearProfileOwner(android.content.ComponentName)>
<android.net.INetworkManagementEventObserver: void interfaceRemoved(java.lang.String)>
<android.app.Activity: void registerForContextMenu(android.view.View)>
<android.webkit.WebView.PictureListener: void onNewPicture(android.webkit.WebView,android.graphics.Picture)>
<android.animation.ValueAnimator: void setEvaluator(android.animation.TypeEvaluator)>
<android.net.dhcp.DhcpStateMachine: void onDiscoverReceived(boolean,int,byte[],byte[])>
<com.google.android.gles_jni.GLImpl: void glMultMatrixx(java.nio.IntBuffer)>
<android.renderscript.RenderScript: void setMessageHandler(android.renderscript.RenderScript.RSMessageHandler)>
<android.text.BidiFormatter: boolean isRtl(java.lang.String)>
<com.android.ims.internal.IImsUt: int updateCOLP(boolean)>
<android.view.WindowManagerPolicy: void adjustConfigurationLw(android.content.res.Configuration,int,int)>
<android.view.View: boolean isFocusableInTouchMode()>
<android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getItemAtIndex(int)>
<android.text.method.TextKeyListener: boolean shouldCap(android.text.method.TextKeyListener.Capitalize,java.lang.CharSequence,int)>
<android.bluetooth.BluetoothPan: int getConnectionState(android.bluetooth.BluetoothDevice)>
<com.android.internal.statusbar.IStatusBar: void animateExpandNotificationsPanel()>
<android.view.ScaleGestureDetector: float getPreviousSpanX()>
<android.animation.LayoutTransition: void setAnimateParentHierarchy(boolean)>
<android.view.KeyEvent: int getScanCode()>
<android.hardware.Sensor: java.lang.String getVendor()>
<android.os.BatteryStats: long[] getChargeStepDurationsArray()>
<android.app.TimePickerDialog: void <init>(android.content.Context,android.app.TimePickerDialog.OnTimeSetListener,int,int,boolean)>
<android.sax.Element: android.sax.Element getChild(java.lang.String)>
<android.bluetooth.IBluetoothMap: java.util.List getDevicesMatchingConnectionStates(int[])>
<com.android.internal.widget.IRemoteViewsFactory: android.widget.RemoteViews getViewAt(int)>
<android.renderscript.ScriptIntrinsicBlend: void forEachDstOut(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>
<android.widget.FrameLayout: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.view.inputmethod.InputMethodSubtype: java.lang.String getExtraValueOf(java.lang.String)>
<com.android.internal.app.ToolbarActionBar: void setDisplayOptions(int,int)>
<android.renderscript.Sampler: android.renderscript.Sampler CLAMP_LINEAR(android.renderscript.RenderScript)>
<android.service.notification.StatusBarNotification: android.service.notification.StatusBarNotification clone()>
<android.preference.Preference: boolean isEnabled()>
<android.view.InputEventReceiver: void onInputEvent(android.view.InputEvent)>
<android.widget.TextView: android.text.style.URLSpan[] getUrls()>
<android.view.MotionEvent: long getEventTime()>
<android.bluetooth.BluetoothPbap: void <init>(android.content.Context,android.bluetooth.BluetoothPbap.ServiceListener)>
<android.nfc.NdefRecord: byte[] getPayload()>
<android.hardware.camera2.legacy.RequestThreadManager: long cancelRepeating(int)>
<android.view.WindowManagerGlobal: boolean shouldDestroyEglContext(int)>
<android.app.Dialog: void setOnShowListener(android.content.DialogInterface.OnShowListener)>
<android.webkit.MimeTypeMap: java.lang.String getMimeTypeFromExtension(java.lang.String)>
<android.media.FaceDetector.Face: void getMidPoint(android.graphics.PointF)>
<android.widget.AutoCompleteTextView: int getDropDownWidth()>
<android.webkit.WebSettings: void setUserAgent(int)>
<android.widget.VideoView: boolean onKeyDown(int,android.view.KeyEvent)>
<android.app.ActivityManagerProxy: int startActivities(android.app.IApplicationThread,java.lang.String,android.content.Intent[],java.lang.String[],android.os.IBinder,android.os.Bundle,int)>
<android.net.wifi.p2p.WifiP2pWfdInfo: boolean isWfdEnabled()>
<android.app.DialogFragment: int getTheme()>
<com.google.android.gles_jni.GLImpl: void glDrawTexsvOES(java.nio.ShortBuffer)>
<android.view.MenuInflater: void <init>(android.content.Context)>
<android.opengl.GLES30: boolean glIsSampler(int)>
<android.media.AudioManager: int getDevicesForStream(int)>
<android.widget.TextView: void setInputType(int)>
<android.view.inputmethod.InputMethodInfo: boolean isAuxiliaryIme()>
<android.app.backup.IFullBackupRestoreObserver: void onEndRestore()>
<android.net.http.HttpResponseCache: android.net.http.HttpResponseCache getInstalled()>
<android.app.VoiceInteractor.Request: android.content.Context getContext()>
<android.net.Uri.Builder: android.net.Uri.Builder appendPath(java.lang.String)>
<android.media.AudioManager: int listAudioDevicePorts(java.util.ArrayList)>
<android.bluetooth.IBluetoothInputDevice: boolean virtualUnplug(android.bluetooth.BluetoothDevice)>
<android.app.Notification.Action: int describeContents()>
<android.opengl.GLES20: void glGetFramebufferAttachmentParameteriv(int,int,int,java.nio.IntBuffer)>
<android.content.AsyncQueryHandler.WorkerHandler: void handleMessage(android.os.Message)>
<android.widget.TextView: float getScaledTextSize()>
<android.view.accessibility.AccessibilityManager: boolean addHighTextContrastStateChangeListener(android.view.accessibility.AccessibilityManager.HighTextContrastChangeListener)>
<android.text.style.IconMarginSpan: void chooseHeight(java.lang.CharSequence,int,int,int,int,android.graphics.Paint.FontMetricsInt)>
<com.android.internal.telephony.IMms: void updateMmsSendStatus(int,byte[],int)>
<android.filterfw.core.GraphRunner: android.filterfw.core.FilterGraph getGraph()>
<android.location.Criteria: void setBearingRequired(boolean)>
<android.widget.RatingBar: void setRating(float)>
<android.telecom.PhoneAccount.Builder: void <init>(android.telecom.PhoneAccount)>
<android.hardware.display.DisplayManagerGlobal: android.view.Display getRealDisplay(int,android.os.IBinder)>
<android.widget.ZoomButton: boolean onTouchEvent(android.view.MotionEvent)>
<android.telecom.Call: void unhold()>
<com.android.internal.telephony.IPhoneStateListener: void onDataActivity(int)>
<android.app.admin.DevicePolicyManager: java.util.List getInstalledCaCerts(android.content.ComponentName)>
<android.media.tv.ITvInputManager: void releaseTvInputHardware(int,android.media.tv.ITvInputHardware,int)>
<android.provider.SearchRecentSuggestions: void truncateHistory(android.content.ContentResolver,int)>
<android.content.IContentService: void syncAsUser(android.content.SyncRequest,int)>
<com.android.internal.os.BatteryStatsImpl: void noteWifiScanStartedFromSourceLocked(android.os.WorkSource)>
<android.app.job.IJobScheduler: java.util.List getAllPendingJobs()>
<android.os.Debug: void startAllocCounting()>
<android.view.accessibility.AccessibilityNodeInfo: boolean isCheckable()>
<android.bluetooth.le.AdvertiseData: boolean getIncludeTxPowerLevel()>
<android.app.AlertDialog: void <init>(android.content.Context,boolean,android.content.DialogInterface.OnCancelListener)>
<android.content.RestrictionsManager: java.util.List getManifestRestrictions(java.lang.String)>
<android.media.IVolumeController: void masterMuteChanged(int)>
<android.os.BatteryStats: long getBatteryRealtime(long)>
<android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>
<com.android.internal.view.menu.MenuBuilder: java.util.ArrayList getNonActionItems()>
<android.app.ActivityManager.RunningServiceInfo: void writeToParcel(android.os.Parcel,int)>
<android.location.LocationManager: void removeAllGeofences(android.app.PendingIntent)>
<android.location.LocationManager: android.location.Location getLastLocation()>
<android.location.IGpsStatusListener: void onSvStatusChanged(int,int[],float[],float[],float[],int,int,int)>
<android.view.DisplayInfo: int getNaturalWidth()>
<android.media.tv.TvContentRating: boolean equals(java.lang.Object)>
<android.graphics.drawable.ClipDrawable: boolean onLevelChange(int)>
<android.app.Dialog: void setOwnerActivity(android.app.Activity)>
<android.telephony.CellIdentityWcdma: int getLac()>
<android.media.tv.ITvInputManager: android.media.tv.ITvInputHardware acquireTvInputHardware(int,android.media.tv.ITvInputHardwareCallback,android.media.tv.TvInputInfo,int)>
<android.media.projection.IMediaProjectionCallback: void onStop()>
<android.os.Parcel: void writeSparseBooleanArray(android.util.SparseBooleanArray)>
<android.preference.CheckBoxPreference: void <init>(android.content.Context,android.util.AttributeSet)>
<android.telephony.PhoneStateListener: void onDataActivity(int)>
<android.app.usage.UsageStats: long getLastTimeUsed()>
<android.content.pm.PackageInfo: java.lang.String toString()>
<android.renderscript.Mesh: int getPrimitiveCount()>
<android.app.ActionBar: boolean isTitleTruncated()>
<android.media.projection.MediaProjectionManager.Callback: void onStop(android.media.projection.MediaProjectionInfo)>
<android.view.LayoutInflater: android.view.LayoutInflater.Factory getFactory()>
<android.webkit.WebHistoryItem: android.graphics.Bitmap getFavicon()>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,java.lang.String,android.graphics.Path)>
<android.app.Notification.Style: android.app.Notification buildStyled(android.app.Notification)>
<com.android.internal.widget.DecorToolbar: void setIcon(android.graphics.drawable.Drawable)>
<android.filterfw.core.NativeFrame: float[] getFloats()>
<android.provider.DocumentsProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)>
<android.hardware.camera2.legacy.RequestHandlerThread: void onLooperPrepared()>
<com.android.internal.app.WindowDecorActionBar: java.lang.CharSequence getSubtitle()>
<android.app.usage.UsageStatsManager: java.util.List queryConfigurations(int,long,long)>
<android.media.IAudioService: int getStreamMaxVolume(int)>
<android.transition.Transition.TransitionListener: void onTransitionResume(android.transition.Transition)>
<android.accounts.IAccountManager: void removeAccount(android.accounts.IAccountManagerResponse,android.accounts.Account)>
<android.os.UserManager: android.content.pm.UserInfo createGuest(android.content.Context,java.lang.String)>
<android.hardware.camera2.legacy.RequestHolder: int numJpegTargets()>
<android.filterfw.core.Filter: void setWaitsOnOutputPort(java.lang.String,boolean)>
<android.print.PrintJobId: java.lang.String flattenToString()>
<android.preference.MultiCheckPreference: boolean[] getValues()>
<android.content.pm.VerificationParams: int getOriginatingUid()>
<android.telecom.Conference.Listener: void onConnectionAdded(android.telecom.Conference,android.telecom.Connection)>
<android.renderscript.Short4: void copyTo(short[],int)>
<android.nfc.INfcAdapter: void setReaderMode(android.os.IBinder,android.nfc.IAppCallback,int,android.os.Bundle)>
<android.transition.Transition: long getStartDelay()>
<android.content.Intent: android.content.Intent setAction(java.lang.String)>
<android.view.View: int getLeft()>
<android.os.Message: android.os.Message obtain(android.os.Handler,int,int,int,java.lang.Object)>
<android.renderscript.Allocation: android.renderscript.Allocation createCubemapFromBitmap(android.renderscript.RenderScript,android.graphics.Bitmap,android.renderscript.Allocation.MipmapControl,int)>
<android.net.NetworkKey: boolean equals(java.lang.Object)>
<android.widget.RelativeLayout: boolean shouldDelayChildPressedState()>
<android.widget.ListPopupWindow: android.view.View getSelectedView()>
<android.renderscript.FieldPacker: void addU16(android.renderscript.Int2)>
<android.location.Location: int describeContents()>
<android.hardware.hdmi.HdmiRecordListener.TimerStatusData: int getDurationMinute()>
<android.os.Bundle: android.os.Bundle forPair(java.lang.String,java.lang.String)>
<android.view.KeyEvent: android.view.KeyEvent createFromParcelBody(android.os.Parcel)>
<com.android.internal.os.BatteryStatsImpl.Uid: long getMobileRadioActiveTime(int)>
<android.media.AudioPort: int role()>
<android.widget.NumberPicker: void setFormatter(android.widget.NumberPicker.Formatter)>
<android.appwidget.AppWidgetHost: android.appwidget.AppWidgetHostView createView(android.content.Context,int,android.appwidget.AppWidgetProviderInfo)>
<android.widget.Space: void <init>(android.content.Context)>
<android.bluetooth.IBluetoothHeadsetPhone: boolean sendDtmf(int)>
<android.hardware.camera2.params.LensShadingMap: int getGainFactorCount()>
<android.os.storage.IMountService: java.lang.String getField(java.lang.String)>
<android.location.FusedBatchOptions: boolean isSourceToUseSet(int)>
<android.renderscript.RSSurfaceView: void pause()>
<android.location.LocationRequest: android.location.LocationRequest create()>
<android.widget.MultiAutoCompleteTextView: void replaceText(java.lang.CharSequence)>
<android.content.SyncRequest.Builder: android.content.SyncRequest.Builder setIgnoreBackoff(boolean)>
<android.graphics.drawable.LayerDrawable: boolean canApplyTheme()>
<android.text.GraphicsOperations: int getTextWidths(int,int,float[],android.graphics.Paint)>
<com.android.internal.inputmethod.InputMethodUtils.InputMethodSettings: java.util.List getEnabledInputMethodAndSubtypeHashCodeListLocked()>
<android.renderscript.Byte3: void sub(android.renderscript.Byte3)>
<android.content.ComponentName: int compareTo(android.content.ComponentName)>
<android.webkit.WebChromeClient: void onGeolocationPermissionsShowPrompt(java.lang.String,android.webkit.GeolocationPermissions.Callback)>
<android.media.audiofx.AutomaticGainControl: boolean isAvailable()>
<android.hardware.display.DisplayManager: android.view.Display[] getDisplays()>
<android.content.res.CompatibilityInfo: int describeContents()>
<android.content.pm.Signature: int describeContents()>
<android.widget.ShareActionProvider: void setOnShareTargetSelectedListener(android.widget.ShareActionProvider.OnShareTargetSelectedListener)>
<android.widget.SimpleExpandableListAdapter: android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup)>
<com.android.internal.view.menu.MenuPopupHelper: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<android.opengl.GLES30: boolean glIsSync(long)>
<android.app.ISearchManagerCallback: void onCancel()>
<android.view.animation.Animation: int getRepeatCount()>
<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getDeviceId()>
<android.view.WindowInsets: int getWindowDecorInsetLeft()>
<android.net.nsd.NsdManager: void setEnabled(boolean)>
<com.android.internal.policy.IFaceLockInterface: void startUi(android.os.IBinder,int,int,int,int,boolean)>
<android.content.pm.IPackageInstaller: void updateSessionAppLabel(int,java.lang.String)>
<android.bluetooth.BluetoothDevice: boolean createBond(int)>
<android.bluetooth.IBluetoothGatt: void writeDescriptor(int,java.lang.String,int,int,android.os.ParcelUuid,int,android.os.ParcelUuid,int,android.os.ParcelUuid,int,int,byte[])>
<android.view.IAssetAtlas: boolean isCompatible(int)>
<com.android.internal.widget.ToolbarWidgetWrapper: void setCustomView(android.view.View)>
<android.widget.SearchView.SearchAutoComplete: void <init>(android.content.Context)>
<android.telephony.SignalStrength: void fillInNotifierBundle(android.os.Bundle)>
<android.os.BatteryStats: void finishIteratingHistoryLocked()>
<android.media.MediaDrm.ProvisionRequest: byte[] getData()>
<android.hardware.soundtrigger.SoundTrigger.StatusListener: void onServiceDied()>
<com.android.internal.util.XmlUtils: void writeBitmapAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,android.graphics.Bitmap)>
<android.widget.StackView: void onLayout(boolean,int,int,int,int)>
<com.android.internal.widget.LockPatternUtils: void setBiometricWeakLivelinessEnabled(boolean)>
<android.database.DatabaseUtils.InsertHelper: void close()>
<android.database.sqlite.SQLiteQueryBuilder: void setProjectionMap(java.util.Map)>
<android.app.Activity: boolean startNextMatchingActivity(android.content.Intent,android.os.Bundle)>
<android.webkit.CookieManager: boolean allowFileSchemeCookiesImpl()>
<com.android.internal.util.Preconditions: float[] checkArrayElementsInRange(float[],float,float,java.lang.String)>
<android.view.accessibility.AccessibilityNodeInfo: int getMovementGranularities()>
<android.view.KeyCharacterMap.FallbackAction: android.view.KeyCharacterMap.FallbackAction obtain()>
<com.android.internal.app.WindowDecorActionBar: android.view.ActionMode startActionMode(android.view.ActionMode.Callback)>
<android.telephony.ServiceState: int getNetworkType()>
<android.app.ActivityManagerProxy: void startLockTaskModeOnCurrent()>
<android.hardware.camera2.CaptureRequest: boolean equals(java.lang.Object)>
<android.app.IActivityManager: java.util.List getProcessesInErrorState()>
<android.graphics.Color: float brightness(int)>
<com.android.internal.widget.ActionBarView: void onFinishInflate()>
<com.android.ims.ImsCallProfile: java.lang.String getCallExtra(java.lang.String,java.lang.String)>
<android.app.Notification.Action.Builder: android.app.Notification.Action.Builder addRemoteInput(android.app.RemoteInput)>
<com.android.internal.widget.AutoScrollHelper: com.android.internal.widget.AutoScrollHelper setEnabled(boolean)>
<com.android.internal.widget.ActionBarContextView: void onAnimationStart(android.animation.Animator)>
<com.android.internal.app.WindowDecorActionBar: void setElevation(float)>
<android.text.method.MovementMethod: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>
<android.view.inputmethod.InputMethodManager: boolean switchToNextInputMethod(android.os.IBinder,boolean)>
<com.android.internal.widget.ILockSettings: void unregisterObserver(com.android.internal.widget.ILockSettingsObserver)>
<android.os.Parcel: void readTypedList(java.util.List,android.os.Parcelable.Creator)>
<android.renderscript.AllocationAdapter: void readData(int[])>
<android.inputmethodservice.InputMethodService: void onComputeInsets(android.inputmethodservice.InputMethodService.Insets)>
<android.opengl.GLES20: void glGetShaderPrecisionFormat(int,int,java.nio.IntBuffer,java.nio.IntBuffer)>
<android.util.AtomicFile: void finishWrite(java.io.FileOutputStream)>
<android.speech.tts.TextToSpeechService: java.lang.String onGetDefaultVoiceNameFor(java.lang.String,java.lang.String,java.lang.String)>
<android.net.NetworkStatsHistory.DataStreamUtils: void writeVarLong(java.io.DataOutputStream,long)>
<android.ddm.DdmHandleHello: void register()>
<com.android.internal.widget.SubtitleView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.hardware.usb.UsbAccessory: java.lang.String getManufacturer()>
<com.google.android.gles_jni.GLImpl: void glTexParameteriv(int,int,java.nio.IntBuffer)>
<android.os.storage.IMountService: java.lang.String getSecureContainerFilesystemPath(java.lang.String)>
<android.graphics.Bitmap: android.graphics.Bitmap extractAlpha(android.graphics.Paint,int[])>
<android.net.wifi.WifiManager: boolean initializeMulticastFiltering()>
<android.hardware.camera2.params.HighSpeedVideoConfiguration: int getFpsMax()>
<android.telecom.VideoCallImpl: void setZoom(float)>
<android.widget.CursorTreeAdapter: android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup)>
<android.transition.SidePropagation: void setPropagationSpeed(float)>
<com.android.internal.preference.YesNoPreference: void setValue(boolean)>
<android.nfc.NfcAdapter: android.nfc.INfcAdapterExtras getNfcAdapterExtrasInterface()>
<android.widget.ImageView: android.graphics.Matrix getImageMatrix()>
<com.android.internal.app.WindowDecorActionBar: int getHeight()>
<android.graphics.drawable.Drawable.ConstantState: android.graphics.Bitmap getBitmap()>
<android.hardware.location.GeofenceHardwareRequestParcelable: int describeContents()>
<android.media.tv.TvTrackInfo.Builder: android.media.tv.TvTrackInfo.Builder setVideoWidth(int)>
<android.os.Debug: void stopAllocCounting()>
<com.android.internal.os.BatteryStatsImpl.Uid: long getWifiRunningTime(long,int)>
<android.text.method.ArrowKeyMovementMethod: boolean lineStart(android.widget.TextView,android.text.Spannable)>
<com.android.internal.os.BatteryStatsImpl: void writeToParcelWithoutUids(android.os.Parcel,int)>
<android.widget.VideoView: void setMediaController(android.widget.MediaController)>
<android.widget.ImageView: int getBaseline()>
<android.bluetooth.BluetoothAdapter: boolean configHciSnoopLog(boolean)>
<android.filterpacks.imageproc.LomoishFilter: void process(android.filterfw.core.FilterContext)>
<android.app.Notification.Builder: android.app.Notification.Builder setAutoCancel(boolean)>
<android.database.CrossProcessCursor: void fillWindow(int,android.database.CursorWindow)>
<android.content.ContentResolver: void unregisterContentObserver(android.database.ContentObserver)>
<android.animation.AnimatorSet: boolean isRunning()>
<android.renderscript.Int2: void mul(android.renderscript.Int2)>
<android.sax.Element: void setStartElementListener(android.sax.StartElementListener)>
<android.media.tv.TvInputManager.Session: void release()>
<com.android.internal.widget.SlidingTab: void onVisibilityChanged(android.view.View,int)>
<android.content.Intent: android.content.Intent setPackage(java.lang.String)>
<android.view.inputmethod.InputConnection: boolean commitText(java.lang.CharSequence,int)>
<android.media.MediaCodecInfo.VideoCapabilities: android.util.Range getAspectRatioRange(boolean)>
<android.net.wifi.IWifiManager: boolean isScanAlwaysAvailable()>
<android.telecom.ParcelableCall: int getState()>
<android.hardware.camera2.legacy.ParameterUtils: boolean containsSize(java.util.List,int,int)>
<android.content.ContextWrapper: boolean deleteFile(java.lang.String)>
<android.os.Debug: void getMemInfo(long[])>
<android.view.ViewGroup.MarginLayoutParams: int getMarginStart()>
<android.telephony.cdma.CdmaSmsCbProgramResults: int getCategory()>
<android.webkit.WebView: int getContentHeight()>
<android.hardware.usb.UsbManager: void setCurrentFunction(java.lang.String,boolean)>
<android.preference.PreferenceGroup: android.preference.Preference findPreference(java.lang.CharSequence)>
<android.media.tv.TvInputService.Session: void notifyVideoAvailable()>
<android.nfc.cardemulation.ApduServiceInfo: boolean equals(java.lang.Object)>
<android.net.wifi.p2p.WifiP2pDevice: boolean isGroupLimit()>
<com.android.internal.view.menu.ActionMenuItemView: void onMeasure(int,int)>
<android.telecom.VideoProfile.VideoState: boolean isBidirectional(int)>
<android.filterfw.core.ProgramVariable: java.lang.String getVariableName()>
<android.app.admin.IDevicePolicyManager: void addPersistentPreferredActivity(android.content.ComponentName,android.content.IntentFilter,android.content.ComponentName)>
<android.app.AppOpsManager: void finishOp(int,int,java.lang.String)>
<android.graphics.Paint: boolean isUnderlineText()>
<android.widget.TextView: int getBottomPaddingOffset()>
<android.view.KeyEvent: android.view.KeyCharacterMap getKeyCharacterMap()>
<com.android.internal.util.StateMachine: void transitionTo(com.android.internal.util.IState)>
<android.location.GpsMeasurement: boolean hasAzimuthInDeg()>
<com.android.ims.internal.IImsCallSession: void sendDtmf(char,android.os.Message)>
<android.net.wifi.WifiManager.WifiLock: void setReferenceCounted(boolean)>
<android.nfc.cardemulation.AidGroup: java.lang.String getCategory()>
<android.hardware.camera2.legacy.CameraDeviceUserShim: int beginConfigure()>
<android.os.Bundle: void <init>(int)>
<android.webkit.WebViewProvider.ViewDelegate: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>
<android.media.session.PlaybackState.CustomAction.Builder: android.media.session.PlaybackState.CustomAction.Builder setExtras(android.os.Bundle)>
<android.renderscript.Byte4: void div(byte)>
<com.android.internal.view.menu.ListMenuPresenter: void setId(int)>
<com.android.internal.widget.ResolverDrawerLayout: void onAttachedToWindow()>
<android.bluetooth.IBluetoothHeadset: int getBatteryUsageHint(android.bluetooth.BluetoothDevice)>
<android.media.tv.TvView.TvInputCallback: void onEvent(java.lang.String,java.lang.String,android.os.Bundle)>
<com.android.internal.view.menu.MenuDialogHelper: void onCloseMenu(com.android.internal.view.menu.MenuBuilder,boolean)>
<com.android.internal.widget.SubtitleView: void setEdgeColor(int)>
<android.hardware.camera2.params.StreamConfigurationMap: void <init>(android.hardware.camera2.params.StreamConfiguration[],android.hardware.camera2.params.StreamConfigurationDuration[],android.hardware.camera2.params.StreamConfigurationDuration[],android.hardware.camera2.params.HighSpeedVideoConfiguration[])>
<android.view.inputmethod.InputMethodManager: boolean setCurrentInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)>
<android.app.Notification.WearableExtender: java.util.List getActions()>
<android.bluetooth.BluetoothA2dp: boolean disconnect(android.bluetooth.BluetoothDevice)>
<android.os.OperationCanceledException: void <init>(java.lang.String)>
<com.android.internal.app.AlertController: void setButtonPanelLayoutHint(int)>
<android.inputmethodservice.Keyboard.Key: void <init>(android.inputmethodservice.Keyboard.Row)>
<android.media.audiofx.Equalizer.Settings: java.lang.String toString()>
<android.util.MathUtils: float sq(float)>
<android.nfc.cardemulation.ApduServiceInfo: java.lang.String getDescription()>
<android.content.IContentProvider: android.content.res.AssetFileDescriptor openTypedAssetFile(java.lang.String,android.net.Uri,java.lang.String,android.os.Bundle,android.os.ICancellationSignal)>
<android.opengl.GLES10: void glColorMask(boolean,boolean,boolean,boolean)>
<com.android.internal.os.BatteryStatsImpl.SamplingTimer: void setUpdateVersion(int)>
<android.text.style.URLSpan: void onClick(android.view.View)>
<android.preference.PreferenceCategory: boolean onPrepareAddPreference(android.preference.Preference)>
<android.hardware.ICamera: void disconnect()>
<com.android.internal.app.IBatteryStats: void noteWifiRunning(android.os.WorkSource)>
<com.android.internal.widget.DecorToolbar: void setSubtitle(java.lang.CharSequence)>
<com.android.internal.content.PackageHelper: long calculateInstalledSize(android.content.pm.PackageParser.PackageLite,boolean,java.lang.String)>
<android.os.Handler: boolean hasMessages(int,java.lang.Object)>
<android.service.notification.StatusBarNotification: long getPostTime()>
<android.hardware.camera2.impl.CameraDeviceImpl.CameraDeviceCallbacks: void onDeviceIdle()>
<android.util.LongSparseLongArray: int indexOfKey(long)>
<com.android.internal.policy.PolicyManager: android.view.Window makeNewWindow(android.content.Context)>
<com.android.internal.view.menu.MenuItemImpl: boolean collapseActionView()>
<com.android.internal.view.menu.MenuPresenter: void updateMenuView(boolean)>
<android.media.tv.ITvInputHardware: boolean dispatchKeyEventToHdmi(android.view.KeyEvent)>
<android.renderscript.Path: android.renderscript.Path.Primitive getPrimitive()>
<android.view.WindowManagerPolicy: int windowTypeToLayerLw(int)>
<android.util.Log: android.util.Log.TerribleFailureHandler setWtfHandler(android.util.Log.TerribleFailureHandler)>
<android.opengl.GLSurfaceView: void setEGLConfigChooser(android.opengl.GLSurfaceView.EGLConfigChooser)>
<android.text.method.MetaKeyKeyListener: long handleKeyUp(long,int,android.view.KeyEvent)>
<android.telecom.Log: void v(java.lang.Object,java.lang.String,java.lang.Object[])>
<android.os.Messenger: void writeMessengerOrNullToParcel(android.os.Messenger,android.os.Parcel)>
<android.graphics.drawable.DrawableContainer: void applyTheme(android.content.res.Resources.Theme)>
<android.view.MenuItem: android.view.ContextMenu.ContextMenuInfo getMenuInfo()>
<android.hardware.camera2.legacy.LegacyExceptionUtils: int throwOnError(int)>
<android.app.ActivityManagerProxy: void notifyLaunchTaskBehindComplete(android.os.IBinder)>
<android.media.MediaCodecInfo: boolean isEncoder()>
<android.view.inputmethod.InputMethodInfo: void <init>(android.content.Context,android.content.pm.ResolveInfo)>
<android.net.ConnectivityManager: void requestNetwork(android.net.NetworkRequest,android.net.ConnectivityManager.NetworkCallback,int)>
<android.widget.DialerFilter: void clearText()>
<android.database.sqlite.SQLiteQueryBuilder: void appendColumns(java.lang.StringBuilder,java.lang.String[])>
<android.preference.PreferenceGroupAdapter: int getCount()>
<android.database.AbstractCursor: boolean isClosed()>
<android.filterfw.geometry.Point: java.lang.String toString()>
<android.preference.PreferenceGroupAdapter: long getItemId(int)>
<android.view.MotionEvent: int getEdgeFlags()>
<android.text.Layout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float)>
<android.content.CursorLoader: void setProjection(java.lang.String[])>
<android.view.View: android.view.AccessibilityIterators.TextSegmentIterator getIteratorForGranularity(int)>
<android.provider.MediaStore.Audio.Genres.Members: android.net.Uri getContentUri(java.lang.String,long)>
<android.speech.srec.UlawEncoderInputStream: void encode(byte[],int,byte[],int,int,int)>
<android.content.ContentResolver: android.content.ContentProviderClient acquireUnstableContentProviderClient(java.lang.String)>
<android.app.admin.IDevicePolicyManager: void enforceCanManageCaCerts(android.content.ComponentName)>
<android.media.AudioTrack: int write(float[],int,int,int)>
<android.widget.ProgressBar: void postInvalidate()>
<android.hardware.Camera.Parameters: int getPreviewFrameRate()>
<android.bluetooth.IBluetoothHealth: boolean connectChannelToSource(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration)>
<com.android.internal.os.BatteryStatsImpl.Uid.Proc: long getForegroundTime(int)>
<com.android.internal.content.NativeLibraryHelper: int copyNativeBinariesForSupportedAbi(com.android.internal.content.NativeLibraryHelper.Handle,java.io.File,java.lang.String[],boolean)>
<android.mtp.MtpStorage: void <init>(android.os.storage.StorageVolume,android.content.Context)>
<android.view.inputmethod.InputBinding: int getUid()>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setNeutralButton(int,android.content.DialogInterface.OnClickListener)>
<android.bluetooth.BluetoothGattCallbackWrapper: void onDescriptorRead(java.lang.String,int,int,int,android.os.ParcelUuid,int,android.os.ParcelUuid,int,android.os.ParcelUuid,byte[])>
<android.os.RegistrantList: void removeCleared()>
<android.opengl.GLES11Ext: void glMaterialxOES(int,int,int)>
<android.preference.PreferenceActivity: void setParentTitle(java.lang.CharSequence,java.lang.CharSequence,android.view.View.OnClickListener)>
<android.content.Intent: java.util.ArrayList getParcelableArrayListExtra(java.lang.String)>
<android.view.Display: int getRotation()>
<android.view.PointerIcon: int describeContents()>
<android.net.http.EventHandler: void data(byte[],int)>
<android.bluetooth.BluetoothHealthAppConfiguration: int getRole()>
<android.graphics.Interpolator: void setRepeatMirror(float,boolean)>
<android.content.res.Resources: java.lang.String[] getStringArray(int)>
<android.os.BatteryStats: long computeChargeTimeRemaining(long)>
<android.content.SharedPreferences: void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener)>
<android.filterfw.core.StreamPort: void <init>(android.filterfw.core.Filter,java.lang.String)>
<android.webkit.WebViewProvider.ViewDelegate: void onFocusChanged(boolean,int,android.graphics.Rect)>
<android.media.AudioAttributes.Builder: android.media.AudioAttributes.Builder addTag(java.lang.String)>
<com.android.internal.content.PackageMonitor: void onPackageDisappeared(java.lang.String,int)>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo: android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo newInstance(java.lang.String,java.lang.String,java.util.Map)>
<android.view.accessibility.AccessibilityRecord: int getItemCount()>
<android.widget.HeaderViewListAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>
<android.hardware.camera2.impl.CallbackProxies.DeviceCaptureCallbackProxy: void onCapturePartial(android.hardware.camera2.CameraDevice,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureResult)>
<com.android.internal.widget.ScrollingTabContainerView: void removeTabAt(int)>
<android.app.admin.DevicePolicyManager: java.util.List getPermittedAccessibilityServices(android.content.ComponentName)>
<android.net.LocalSocket: void setReceiveBufferSize(int)>
<android.os.UserManager: java.lang.CharSequence getBadgedLabelForUser(java.lang.CharSequence,android.os.UserHandle)>
<android.opengl.GLES11Ext: void glTexGenfOES(int,int,float)>
<android.renderscript.ProgramStore.Builder: android.renderscript.ProgramStore create()>
<android.view.inputmethod.InputMethodSubtype: java.util.List sort(android.content.Context,int,android.view.inputmethod.InputMethodInfo,java.util.List)>
<android.media.MediaRouter: android.media.MediaRouter.RouteCategory createRouteCategory(int,boolean)>
<android.media.AudioManagerInternal: void setStreamVolumeForUid(int,int,int,java.lang.String,int)>
<android.media.tv.TvView: void onLayout(boolean,int,int,int,int)>
<com.android.internal.http.multipart.FilePartSource: java.lang.String getFileName()>
<android.webkit.UrlInterceptRegistry: android.webkit.CacheManager.CacheResult getSurrogate(java.lang.String,java.util.Map)>
<android.renderscript.Float2: float dotProduct(android.renderscript.Float2,android.renderscript.Float2)>
<android.widget.AdapterViewAnimator: void showPrevious()>
<android.filterfw.core.InputPort: android.filterfw.core.OutputPort getSourcePort()>
<android.widget.TextView: int getTotalPaddingTop()>
<android.accounts.AccountManager: void updateAppPermission(android.accounts.Account,java.lang.String,int,boolean)>
<android.renderscript.Script: void getVarV(int,android.renderscript.FieldPacker)>
<com.android.internal.os.BatteryStatsImpl.Counter: void onTimeStarted(long,long,long)>
<com.android.internal.view.menu.MenuBuilder: void changeMenuMode()>
<android.view.inputmethod.InputMethodSession: void dispatchKeyEvent(int,android.view.KeyEvent,android.view.inputmethod.InputMethodSession.EventCallback)>
<android.hardware.hdmi.HdmiTvClient: void sendMhlVendorCommand(int,int,int,byte[])>
<android.app.LoaderManagerImpl: android.content.Loader getLoader(int)>
<android.os.ParcelFileDescriptor: void checkError()>
<android.bluetooth.BluetoothGattServerCallback: void onNotificationSent(android.bluetooth.BluetoothDevice,int)>
<android.graphics.Bitmap: void writeToParcel(android.os.Parcel,int)>
<android.media.IRemoteControlDisplay: void setArtwork(int,android.graphics.Bitmap)>
<android.preference.PreferenceFragment: void onActivityResult(int,int,android.content.Intent)>
<android.hardware.Camera.Parameters: void setJpegQuality(int)>
<android.webkit.WebView: void onMeasure(int,int)>
<com.android.internal.widget.WaveView: void <init>(android.content.Context)>
<android.media.projection.IMediaProjection: void registerCallback(android.media.projection.IMediaProjectionCallback)>
<android.graphics.drawable.ScaleDrawable: android.graphics.drawable.Drawable mutate()>
<android.telephony.CellSignalStrengthGsm: int hashCode()>
<android.content.pm.ApplicationInfo: java.lang.String[] getSplitCodePaths()>
<android.telephony.cdma.CdmaCellLocation: int getBaseStationLongitude()>
<android.content.pm.PackageManager: void deletePackage(java.lang.String,android.content.pm.IPackageDeleteObserver,int)>
<android.opengl.GLES11Ext: void glFrustumfOES(float,float,float,float,float,float)>
<android.widget.ActionMenuPresenter: void onCloseMenu(com.android.internal.view.menu.MenuBuilder,boolean)>
<android.view.View: void setKeepScreenOn(boolean)>
<android.os.HandlerThread: void <init>(java.lang.String,int)>
<android.view.View: void startAnimation(android.view.animation.Animation)>
<android.app.SearchManager.OnDismissListener: void onDismiss()>
<android.renderscript.Double2: android.renderscript.Double2 sub(android.renderscript.Double2,android.renderscript.Double2)>
<android.util.EventLog: java.lang.String getTagName(int)>
<android.hardware.Camera.Area: boolean equals(java.lang.Object)>
<android.content.Context: java.lang.String getBasePackageName()>
<android.net.http.RequestHandle: int getRedirectCount()>
<android.accessibilityservice.AccessibilityService: android.accessibilityservice.AccessibilityServiceInfo getServiceInfo()>
<android.bluetooth.IBluetoothHeadset: int getPriority(android.bluetooth.BluetoothDevice)>
<android.os.UserHandle: boolean equals(java.lang.Object)>
<android.os.storage.IMountService: int encryptStorage(int,java.lang.String)>
<android.renderscript.ScriptIntrinsic3DLUT: android.renderscript.ScriptIntrinsic3DLUT create(android.renderscript.RenderScript,android.renderscript.Element)>
<android.content.IntentFilter: void addDataScheme(java.lang.String)>
<com.android.ims.internal.IImsCallSession: void close()>
<android.view.ViewTreeObserver: void removeOnScrollChangedListener(android.view.ViewTreeObserver.OnScrollChangedListener)>
<com.android.internal.app.LocalePicker.LocaleInfo: java.util.Locale getLocale()>
<android.print.IPrintManager: void stopPrinterStateTracking(android.print.PrinterId,int)>
<android.content.pm.PackageParser: android.content.pm.PermissionInfo generatePermissionInfo(android.content.pm.PackageParser.Permission,int)>
<android.content.res.AssetManager.AssetInputStream: void mark(int)>
<android.telephony.ServiceState: void setState(int)>
<android.widget.AbsListView: android.graphics.drawable.Drawable getSelector()>
<android.service.wallpaper.WallpaperService.Engine: void onTouchEvent(android.view.MotionEvent)>
<com.android.internal.content.PackageMonitor: void onPackagesUnavailable(java.lang.String[])>
<android.bluetooth.le.ResultStorageDescriptor: int describeContents()>
<android.content.res.TypedArray: int getLayoutDimension(int,java.lang.String)>
<android.renderscript.Mesh: int getVertexAllocationCount()>
<com.android.internal.app.IMediaContainerService: void clearDirectory(java.lang.String)>
<android.net.NetworkPolicyManager: int[] getUidsWithPolicy(int)>
<android.app.UiAutomation: void <init>(android.os.Looper,android.app.IUiAutomationConnection)>
<android.view.Window: void setStatusBarColor(int)>
<android.preference.MultiCheckPreference: void <init>(android.content.Context)>
<android.content.res.AssetManager.AssetInputStream: int available()>
<android.view.animation.AnimationSet: void setDuration(long)>
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setCheckable(boolean)>
<android.mtp.MtpStorageInfo: int getStorageId()>
<android.content.Context: android.content.res.Resources.Theme getTheme()>
<android.view.Display: boolean getDisplayInfo(android.view.DisplayInfo)>
<android.animation.ValueAnimator: void setRepeatCount(int)>
<android.view.ActionMode: void finish()>
<com.android.internal.view.menu.ListMenuItemView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.PopupWindow: int getInputMethodMode()>
<android.preference.Preference: boolean onKey(android.view.View,int,android.view.KeyEvent)>
<android.widget.AutoCompleteTextView: void setCompletionHint(java.lang.CharSequence)>
<android.view.accessibility.AccessibilityInteractionClient: void setFindAccessibilityNodeInfosResult(java.util.List,int)>
<android.graphics.Matrix: boolean mapRect(android.graphics.RectF,android.graphics.RectF)>
<android.hardware.Camera: void setParameters(android.hardware.Camera.Parameters)>
<com.android.internal.content.SelectionBuilder: java.lang.String getSelection()>
<android.filterpacks.base.InputStreamSource: void process(android.filterfw.core.FilterContext)>
<android.graphics.Matrix: boolean isAffine()>
<com.android.internal.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()>
<android.media.MediaRouter.RouteGroup: void addRoute(android.media.MediaRouter.RouteInfo)>
<android.webkit.WebResourceResponse: int getStatusCode()>
<android.bluetooth.BluetoothDevice: int getType()>
<com.android.internal.widget.ILockSettings: boolean havePattern(int)>
<android.view.accessibility.AccessibilityRecord: void setWindowId(int)>
<android.graphics.drawable.VectorDrawable: void draw(android.graphics.Canvas)>
<com.android.internal.http.multipart.MultipartEntity: org.apache.http.Header getContentType()>
<android.webkit.WebSettings: boolean getVideoOverlayForEmbeddedEncryptedVideoEnabled()>
<android.preference.Preference: void setKey(java.lang.String)>
<android.preference.SwitchPreference: void setSwitchTextOff(java.lang.CharSequence)>
<android.widget.DatePicker: int getFirstDayOfWeek()>
<android.graphics.Paint: int getTextRunCursor(java.lang.String,int,int,int,int,int)>
<android.bluetooth.IBluetoothMap: boolean connect(android.bluetooth.BluetoothDevice)>
<android.os.Handler: android.os.Message obtainMessage(int)>
<android.util.Base64: byte[] decode(java.lang.String,int)>
<android.database.DatabaseUtils: void cursorFillWindow(android.database.Cursor,int,android.database.CursorWindow)>
<android.content.ContentProviderClient: void finalize()>
<com.android.internal.view.menu.IconMenuPresenter: boolean shouldIncludeItem(int,com.android.internal.view.menu.MenuItemImpl)>
<android.telecom.Call: void postDialContinue(boolean)>
<android.graphics.drawable.VectorDrawable: boolean isStateful()>
<android.bluetooth.BluetoothAdapter: android.os.ParcelUuid[] getUuids()>
<android.app.ActivityManagerProxy: void setUserIsMonkey(boolean)>
<android.widget.Scroller: int getStartX()>
<com.android.internal.view.menu.IconMenuView: void onLayout(boolean,int,int,int,int)>
<android.net.nsd.NsdManager.ResolveListener: void onResolveFailed(android.net.nsd.NsdServiceInfo,int)>
<android.app.IActivityManager: void startLockTaskMode(android.os.IBinder)>
<android.speech.srec.WaveHeader: short getNumChannels()>
<android.filterpacks.imageproc.ResizeFilter: void <init>(java.lang.String)>
<android.view.ViewGroup: boolean requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>
<android.os.WorkSource: java.lang.String toString()>
<android.telecom.InCallAdapter: void playDtmfTone(java.lang.String,char)>
<android.net.SSLCertificateSocketFactory: void setSoWriteTimeout(java.net.Socket,int)>
<com.android.internal.app.ToolbarActionBar: void addTab(android.app.ActionBar.Tab)>
<android.webkit.WebView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: android.net.wifi.p2p.nsd.WifiP2pServiceRequest newInstance(int)>
<android.app.IApplicationThread: void dumpMemInfo(java.io.FileDescriptor,android.os.Debug.MemoryInfo,boolean,boolean,boolean,java.lang.String[])>
<android.widget.Toast: float getVerticalMargin()>
<android.view.ViewParent: int getLayoutDirection()>
<android.view.animation.GridLayoutAnimationController: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.internal.view.menu.ListMenuPresenter: void setCallback(com.android.internal.view.menu.MenuPresenter.Callback)>
<android.view.textservice.SuggestionsInfo: int getSuggestionsAttributes()>
<android.provider.Settings.System: long getLongForUser(android.content.ContentResolver,java.lang.String,int)>
<android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec.Builder setEndDate(java.util.Date)>
<android.widget.SimpleCursorAdapter: android.widget.SimpleCursorAdapter.CursorToStringConverter getCursorToStringConverter()>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofMultiInt(java.lang.Object,java.lang.String,int[][])>
<android.hardware.input.InputManager: boolean[] deviceHasKeys(int[])>
<com.android.internal.view.IInputMethodManager: void setImeWindowStatus(android.os.IBinder,int,int)>
<android.webkit.WebViewProvider.ViewDelegate: boolean requestFocus(int,android.graphics.Rect)>
<com.android.internal.widget.LockPatternView: com.android.internal.widget.LockPatternView.CellState[][] getCellStates()>
<com.android.internal.view.menu.MenuBuilder: void onItemsChanged(boolean)>
<android.widget.AutoCompleteTextView: boolean isPerformingCompletion()>
<android.net.wifi.p2p.WifiP2pManager: android.net.wifi.p2p.WifiP2pManager.Channel initialize(android.content.Context,android.os.Looper,android.net.wifi.p2p.WifiP2pManager.ChannelListener)>
<android.media.session.MediaSession: void notifyRemoteVolumeChanged(android.media.VolumeProvider)>
<android.print.PrintAttributes: void setMinMargins(android.print.PrintAttributes.Margins)>
<com.google.android.gles_jni.GLImpl: void glLightfv(int,int,float[],int)>
<android.opengl.GLES10: void glLoadMatrixx(int[],int)>
<android.content.Intent: int getFlags()>
<android.app.Instrumentation: void runOnMainSync(java.lang.Runnable)>
<android.appwidget.AppWidgetProviderInfo: android.graphics.drawable.Drawable loadIcon(android.content.Context,int)>
<android.graphics.Paint: int breakText(char[],int,int,float,float[])>
<android.location.GpsMeasurement: void setTimeOffsetInNs(double)>
<android.view.View: void addChildrenForAccessibility(java.util.ArrayList)>
<android.net.http.AndroidHttpClient: void finalize()>
<android.content.ContextWrapper: android.content.ComponentName startService(android.content.Intent)>
<android.bluetooth.le.ScanResult: boolean equals(java.lang.Object)>
<android.renderscript.Long4: android.renderscript.Long4 sub(android.renderscript.Long4,android.renderscript.Long4)>
<android.hardware.display.DisplayManager: android.hardware.display.VirtualDisplay createVirtualDisplay(android.media.projection.MediaProjection,java.lang.String,int,int,int,android.view.Surface,int,android.hardware.display.VirtualDisplay.Callback,android.os.Handler)>
<android.os.Message: int describeContents()>
<com.android.internal.app.ToolbarActionBar: int getSelectedNavigationIndex()>
<android.provider.BrowserContract.SyncState: android.util.Pair getWithUri(android.content.ContentProviderClient,android.accounts.Account)>
<android.net.NetworkStateTracker: boolean isDefaultRouteSet()>
<android.renderscript.Script: void setVar(int,int)>
<android.telecom.Call.Details: int getHandlePresentation()>
<android.widget.TimePicker.TimePickerDelegate: java.lang.Integer getCurrentMinute()>
<android.hardware.soundtrigger.KeyphraseEnrollmentInfo: java.lang.String toString()>
<android.filterpacks.imageproc.FillLightFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<android.hardware.location.GeofenceHardwareRequestParcelable: int getUnknownTimer()>
<android.hardware.hdmi.HdmiTvClient: void deviceSelect(int,android.hardware.hdmi.HdmiTvClient.SelectCallback)>
<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>
<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<android.media.MediaDrm: java.lang.String getPropertyString(java.lang.String)>
<android.graphics.drawable.InsetDrawable: void setTintMode(android.graphics.PorterDuff.Mode)>
<android.renderscript.Float3: void setValues(float,float,float)>
<android.app.FragmentManagerImpl: void detachFragment(android.app.Fragment,int,int)>
<android.media.audiofx.BassBoost.Settings: java.lang.String toString()>
<com.android.internal.util.FastPrintWriter: void print(java.lang.String)>
<android.app.ActivityManagerProxy: void finishInstrumentation(android.app.IApplicationThread,int,android.os.Bundle)>
<android.content.UndoOperation: boolean matchOwner(android.content.UndoOwner)>
<android.opengl.GLES10: void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.content.ContentProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
<android.opengl.GLES30: void glSamplerParameteriv(int,int,java.nio.IntBuffer)>
<android.media.session.ISessionCallback: void onCustomAction(java.lang.String,android.os.Bundle)>
<android.text.LoginFilter: void onStop()>
<android.widget.Scroller: void startScroll(int,int,int,int,int)>
<android.database.DatabaseUtils: void writeExceptionToParcel(android.os.Parcel,java.lang.Exception)>
<android.bluetooth.le.ResultStorageDescriptor: int getLength()>
<android.speech.SpeechRecognizer: void destroy()>
<android.hardware.camera2.utils.TypeReference: boolean equals(java.lang.Object)>
<com.android.internal.widget.DecorToolbar: boolean canShowOverflowMenu()>
<android.content.res.TypedArray: java.lang.CharSequence[] getTextArray(int)>
<android.os.Looper: android.os.MessageQueue getQueue()>
<android.graphics.Paint: float getTextSize()>
<com.android.internal.os.BatteryStatsImpl: int getDischargeAmount(int)>
<com.android.internal.view.IInputContextCallback: void setTextBeforeCursor(java.lang.CharSequence,int)>
<android.speech.tts.TextToSpeechService: java.util.List onGetVoices()>
<android.hardware.display.DisplayManager: void stopWifiDisplayScan()>
<android.view.KeyCharacterMap: android.view.KeyCharacterMap load(int)>
<android.animation.StateListAnimator.Tuple: android.animation.Animator getAnimator()>
<android.telephony.PhoneNumberUtils: boolean isPotentialLocalEmergencyNumber(android.content.Context,java.lang.String)>
<android.sax.Element: android.sax.Element getChild(java.lang.String,java.lang.String)>
<android.net.http.RequestFeeder: boolean haveRequest(org.apache.http.HttpHost)>
<android.media.RemoteControlClient: void setPlaybackState(int)>
<android.bluetooth.IBluetoothHeadset: boolean connect(android.bluetooth.BluetoothDevice)>
<android.content.ContextWrapper: java.io.File getObbDir()>
<android.net.Uri.Builder: android.net.Uri.Builder encodedPath(java.lang.String)>
<android.content.ContentResolver: android.content.IContentProvider acquireExistingProvider(android.net.Uri)>
<android.filterfw.core.GLFrame: void focus()>
<com.android.internal.app.IBatteryStats: void noteScreenBrightness(int)>
<android.telecom.RemoteConnection: int getVideoState()>
<android.renderscript.Float3: android.renderscript.Float3 add(android.renderscript.Float3,android.renderscript.Float3)>
<android.graphics.pdf.PdfDocument.PageInfo: android.graphics.Rect getContentRect()>
<com.android.internal.widget.RotarySelector: void setLeftHandleResource(int)>
<android.os.Debug: long threadCpuTimeNanos()>
<android.content.Intent: int getContentUserHint()>
<android.opengl.GLES31: java.lang.String glGetProgramResourceName(int,int,int)>
<android.webkit.WebView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>
<android.hardware.usb.UsbEndpoint: int getEndpointNumber()>
<android.nfc.INfcAdapter: boolean enableNdefPush()>
<android.app.ActionBar: void setIcon(int)>
<android.view.MotionEvent.PointerProperties: void clear()>
<com.android.internal.widget.PointerLocationView: void onInputDeviceAdded(int)>
<android.media.MediaFormat: int getInteger(java.lang.String,int)>
<android.net.nsd.NsdServiceInfo: void setAttribute(java.lang.String,java.lang.String)>
<android.view.animation.AnimationUtils: android.view.animation.Animation makeInAnimation(android.content.Context,boolean)>
<android.net.wifi.WifiManager: boolean requestBatchedScan(android.net.wifi.BatchedScanSettings,android.os.WorkSource)>
<com.android.internal.app.IAppOpsService: int startOperation(android.os.IBinder,int,int,java.lang.String)>
<android.text.BoringLayout: int getLineDescent(int)>
<android.media.IAudioService: boolean registerRemoteController(android.media.IRemoteControlDisplay,int,int,android.content.ComponentName)>
<android.webkit.WebBackForwardList: int getSize()>
<android.speech.tts.TextToSpeechService.UtteranceProgressDispatcher: void dispatchOnSuccess()>
<android.media.RingtoneManager: void stopPreviousRingtone()>
<android.util.Range: java.lang.Comparable getLower()>
<android.view.ViewDebug: void trace(android.view.View,android.view.ViewDebug.RecyclerTraceType,int[])>
<android.text.method.BaseMovementMethod: boolean lineEnd(android.widget.TextView,android.text.Spannable)>
<android.widget.DatePicker: void onRestoreInstanceState(android.os.Parcelable)>
<com.android.internal.inputmethod.InputMethodSubtypeSwitchingController.ControllerImpl: com.android.internal.inputmethod.InputMethodSubtypeSwitchingController.ControllerImpl createFrom(com.android.internal.inputmethod.InputMethodSubtypeSwitchingController.ControllerImpl,java.util.List)>
<android.os.PersistableBundle: int describeContents()>
<android.media.RemoteControlClient: void <init>(android.app.PendingIntent)>
<com.android.internal.app.IVoiceInteractorCallback: void deliverCommandResult(com.android.internal.app.IVoiceInteractorRequest,boolean,android.os.Bundle)>
<android.telephony.TelephonyManager: int getPreferredNetworkType()>
<android.app.IApplicationThread: void scheduleLaunchActivity(android.content.Intent,android.os.IBinder,int,android.content.pm.ActivityInfo,android.content.res.Configuration,android.content.res.CompatibilityInfo,com.android.internal.app.IVoiceInteractor,int,android.os.Bundle,android.os.PersistableBundle,java.util.List,java.util.List,boolean,boolean,android.app.ProfilerInfo)>
<android.provider.DocumentsContract: android.graphics.Bitmap getDocumentThumbnail(android.content.ContentResolver,android.net.Uri,android.graphics.Point,android.os.CancellationSignal)>
<com.android.internal.app.ToolbarActionBar: boolean isTitleTruncated()>
<android.content.pm.ApplicationInfo: java.lang.String toString()>
<android.renderscript.Long3: android.renderscript.Long3 mul(android.renderscript.Long3,long)>
<android.os.SELinux: java.lang.String getFileContext(java.lang.String)>
<android.app.Notification.Action.Builder: android.os.Bundle getExtras()>
<android.content.pm.PackageManager: java.lang.String deleteStatusToString(int,java.lang.String)>
<android.widget.TextView: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative()>
<android.widget.SearchView: void onMeasure(int,int)>
<android.widget.Switch: void onMeasure(int,int)>
<android.media.MediaFocusControl: boolean isPlaystateActive(int)>
<android.database.sqlite.SQLiteDatabase: void endTransaction()>
<android.content.res.Resources: int getDimensionPixelSize(int)>
<android.nfc.INfcCardEmulation: boolean setPreferredService(android.content.ComponentName)>
<android.animation.PropertyValuesHolder: void setKeyframes(android.animation.Keyframe[])>
<android.media.AudioService.VolumeController: void postDisplaySafeVolumeWarning(int)>
<com.android.internal.app.IBatteryStats: void noteVibratorOff(int)>
<android.content.res.Configuration: void writeXmlAttrs(org.xmlpull.v1.XmlSerializer,android.content.res.Configuration)>
<android.net.nsd.DnsSdTxtRecord: int keyCount()>
<android.widget.RemoteViewsAdapter: boolean isDataReady()>
<android.text.Layout: void drawBackground(android.graphics.Canvas,android.graphics.Path,android.graphics.Paint,int,int,int)>
<com.android.internal.telephony.IPhoneStateListener: void onCallStateChanged(int,java.lang.String)>
<android.hardware.Camera.Parameters: boolean getAutoWhiteBalanceLock()>
<android.nfc.cardemulation.ApduServiceInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>
<android.opengl.GLES30: void glUniform2uiv(int,int,java.nio.IntBuffer)>
<com.android.internal.view.BaseSurfaceHolder: void onUpdateSurface()>
<android.app.Activity: void startLockTask()>
<com.android.internal.util.AsyncChannel: java.lang.String cmdToString(int)>
<android.renderscript.Int3: void add(int)>
<android.widget.AdapterViewAnimator: void setRemoteViewsOnClickHandler(android.widget.RemoteViews.OnClickHandler)>
<android.widget.ExpandableListView: void onRtlPropertiesChanged(int)>
<android.text.style.AlignmentSpan.Standard: void <init>(android.text.Layout.Alignment)>
<android.hardware.camera2.CameraMetadata: java.lang.Object getProtected(java.lang.Object)>
<android.accounts.AccountAuthenticatorResponse: void <init>(android.os.Parcel)>
<android.net.http.RequestHandle: void waitUntilComplete()>
<android.view.IApplicationToken: long getKeyDispatchingTimeout()>
<android.hardware.camera2.dispatch.ArgumentReplacingDispatcher: java.lang.Object dispatch(java.lang.reflect.Method,java.lang.Object[])>
<android.database.CursorToBulkCursorAdaptor: android.database.CursorWindow getWindow(int)>
<android.view.InputDevice.MotionRange: float getFuzz()>
<android.opengl.GLES20: void glEnableVertexAttribArray(int)>
<android.net.wifi.IWifiManager: void reassociate()>
<android.graphics.Canvas: void drawText(char[],int,int,float,float,android.graphics.Paint)>
<android.hardware.usb.UsbConfiguration: void setInterfaces(android.os.Parcelable[])>
<android.view.MotionEvent: float getHistoricalOrientation(int,int)>
<android.text.style.StrikethroughSpan: void <init>(android.os.Parcel)>
<com.android.internal.os.BatteryStatsImpl: void noteEventLocked(int,java.lang.String,int)>
<android.media.session.ISessionController: void playFromMediaId(java.lang.String,android.os.Bundle)>
<android.bluetooth.BluetoothProfile: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.bluetooth.IBluetoothHeadsetClient: android.os.Bundle getCurrentAgFeatures(android.bluetooth.BluetoothDevice)>
<android.view.SurfaceControl: void setAnimationTransaction()>
<android.text.style.ImageSpan: android.graphics.drawable.Drawable getDrawable()>
<android.app.ActivityManager: int getDefaultAppRecentsLimitStatic()>
<android.app.IActivityManager: android.app.IActivityManager.ContentProviderHolder getContentProviderExternal(java.lang.String,int,android.os.IBinder)>
<android.provider.Settings.System: int getIntForUser(android.content.ContentResolver,java.lang.String,int)>
<android.view.View: int getVerticalFadingEdgeLength()>
<android.hardware.input.InputManager: android.os.Vibrator getInputDeviceVibrator(int)>
<android.animation.Keyframes: android.animation.Keyframes clone()>
<android.opengl.GLES30: void glTexStorage3D(int,int,int,int,int,int)>
<android.opengl.GLES11: void glGetFloatv(int,java.nio.FloatBuffer)>
<android.telephony.TelephonyManager: java.lang.String getSimCountryIso(long)>
<android.bluetooth.BluetoothClass: java.lang.String toString()>
<android.media.MiniThumbFile: void saveMiniThumbToFile(byte[],long,long)>
<android.view.View: void transformMatrixToGlobal(android.graphics.Matrix)>
<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap.CompressFormat,int,java.io.OutputStream)>
<android.widget.SpellChecker: void onGetSuggestions(android.view.textservice.SuggestionsInfo[])>
<android.widget.AbsListView: void setFastScrollStyle(int)>
<android.security.AndroidKeyStore: boolean engineIsKeyEntry(java.lang.String)>
<com.google.android.gles_jni.GLImpl: void glLineWidthx(int)>
<android.app.WallpaperInfo: java.lang.String toString()>
<android.filterfw.core.FilterFunction: void <init>(android.filterfw.core.FilterContext,android.filterfw.core.Filter)>
<android.content.pm.IPackageInstallerSession: void close()>
<android.hardware.camera2.marshal.impl.MarshalQueryablePair: boolean isTypeMappingSupported(android.hardware.camera2.utils.TypeReference,int)>
<android.view.View: void setOutlineProvider(android.view.ViewOutlineProvider)>
<android.bluetooth.IBluetoothHeadset: int getAudioState(android.bluetooth.BluetoothDevice)>
<android.telephony.ServiceState: void setVoiceRegState(int)>
<android.media.tv.TvInputService.Session: void layoutSurface(int,int,int,int)>
<android.util.DayOfMonthCursor: int getSelectedRow()>
<android.view.ViewRootImpl: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode.Callback)>
<android.bluetooth.IBluetoothGatt: void registerServer(android.os.ParcelUuid,android.bluetooth.IBluetoothGattServerCallback)>
<android.transition.Transition: android.transition.Transition excludeChildren(int,boolean)>
<android.security.IKeyChainService: boolean installKeyPair(byte[],byte[],java.lang.String)>
<com.android.internal.telephony.ISms: int getPremiumSmsPermission(java.lang.String)>
<android.widget.VideoView: boolean onTouchEvent(android.view.MotionEvent)>
<android.app.ActivityView: void onDetachedFromWindow()>
<com.android.internal.telecom.IInCallAdapter: void splitFromConference(java.lang.String)>
<android.opengl.EGL14: int eglQueryAPI()>
<android.view.textservice.SentenceSuggestionsInfo: android.view.textservice.SuggestionsInfo getSuggestionsInfoAt(int)>
<android.hardware.camera2.legacy.CameraDeviceUserShim: android.os.IBinder asBinder()>
<android.view.Window: void setUiOptions(int)>
<android.content.pm.PackageInstaller.SessionCallback: void onProgressChanged(int,float)>
<android.media.TtmlTrack: android.media.TtmlCue getNextResult()>
<android.service.notification.StatusBarNotification: boolean isOngoing()>
<android.location.GpsMeasurement: void setAzimuthUncertaintyInDeg(double)>
<android.text.method.BaseMovementMethod: void onTakeFocus(android.widget.TextView,android.text.Spannable,int)>
<android.renderscript.Double2: void <init>(double,double)>
<android.widget.DatePicker.DatePickerDelegate: void setEnabled(boolean)>
<android.appwidget.AppWidgetHost: void onProviderChanged(int,android.appwidget.AppWidgetProviderInfo)>
<android.telephony.CellIdentityGsm: java.lang.String toString()>
<android.hardware.camera2.params.ColorSpaceTransform: void copyElements(android.util.Rational[],int)>
<android.content.SharedPreferences: java.util.Set getStringSet(java.lang.String,java.util.Set)>
<android.os.Environment.UserEnvironment: java.io.File[] getExternalDirsForApp()>
<android.os.MessageQueue: void finalize()>
<android.net.NetworkKey: int describeContents()>
<com.google.android.gles_jni.GLImpl: void glBlendFunc(int,int)>
<android.os.IRemoteCallback: void sendResult(android.os.Bundle)>
<android.content.DialogInterface.OnKeyListener: boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent)>
<android.telephony.PhoneNumberFormattingTextWatcher: void beforeTextChanged(java.lang.CharSequence,int,int,int)>
<android.content.ContentProvider.PipeDataWriter: void writeDataToPipe(android.os.ParcelFileDescriptor,android.net.Uri,java.lang.String,android.os.Bundle,java.lang.Object)>
<com.google.android.gles_jni.GLImpl: void glGetTexGenfv(int,int,java.nio.FloatBuffer)>
<android.bluetooth.BluetoothGattServerCallback: void onDescriptorReadRequest(android.bluetooth.BluetoothDevice,int,int,android.bluetooth.BluetoothGattDescriptor)>
<com.android.internal.view.menu.MenuBuilder: int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])>
<android.app.ActivityManager: boolean getPackageAskScreenCompat(java.lang.String)>
<android.view.Surface: void finalize()>
<android.view.ViewGroup: android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets)>
<android.view.OrientationEventListener: void <init>(android.content.Context)>
<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl.Uid.Proc getProcessStatsLocked(int,java.lang.String)>
<android.os.Handler: boolean sendMessageAtTime(android.os.Message,long)>
<android.view.ViewGroup.MarginLayoutParams: void setMargins(int,int,int,int)>
<android.filterpacks.videosrc.SurfaceTextureSource: void prepare(android.filterfw.core.FilterContext)>
<com.android.internal.view.menu.MenuItemImpl: boolean isEnabled()>
<android.view.inputmethod.CursorAnchorInfo.Builder: android.view.inputmethod.CursorAnchorInfo.Builder setInsertionMarkerLocation(float,float,float,float,int)>
<android.widget.SearchView.OnSuggestionListener: boolean onSuggestionClick(int)>
<android.location.Location: void setAccuracy(float)>
<com.android.internal.telephony.ITelephonyRegistry: void notifyDataConnectionFailedForSubscriber(long,java.lang.String,java.lang.String)>
<android.opengl.EGL14: boolean eglBindAPI(int)>
<android.os.BatteryStats.Uid: long getNetworkActivityPackets(int,int)>
<android.telephony.SignalStrength: java.lang.String toString()>
<android.app.Notification.MediaStyle: boolean hasProgress()>
<android.webkit.WebViewProvider.ViewDelegate: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>
<android.view.animation.AlphaAnimation: void applyTransformation(float,android.view.animation.Transformation)>
<com.android.internal.view.menu.MenuBuilder: void setGroupVisible(int,boolean)>
<android.widget.HeaderViewListAdapter: boolean areAllItemsEnabled()>
<android.net.DhcpResults: boolean equals(java.lang.Object)>
<android.app.admin.IDevicePolicyManager: void clearProfileOwner(android.content.ComponentName)>
<android.security.KeyStore: boolean grant(java.lang.String,int)>
<android.content.res.TypedArray: int getColor(int,int)>
<android.telephony.TelephonyManager: java.lang.String getGroupIdLevel1(long)>
<android.os.ParcelFileDescriptor.OnCloseListener: void onClose(java.io.IOException)>
<android.view.SurfaceHolder: void unlockCanvasAndPost(android.graphics.Canvas)>
<com.android.internal.view.menu.MenuItemImpl: android.content.Intent getIntent()>
<android.opengl.GLES20: void glDisable(int)>
<android.telecom.ConnectionRequest: int describeContents()>
<android.net.MobileDataStateTracker: void releaseWakeLock()>
<android.widget.ViewAnimator: boolean getAnimateFirstView()>
<android.view.RenderNodeAnimator: void <init>(android.graphics.CanvasProperty,float)>
<android.app.ActionBar: void setStackedBackgroundDrawable(android.graphics.drawable.Drawable)>
<android.graphics.drawable.AnimatedRotateDrawable: void start()>
<android.net.http.SslError: void <init>(int,java.security.cert.X509Certificate,java.lang.String)>
<android.content.pm.PackageInstaller.SessionParams: void writeToParcel(android.os.Parcel,int)>
<android.nfc.cardemulation.ApduServiceInfo: java.lang.String toString()>
<android.net.wifi.WifiManager: boolean isWifiScannerSupported()>
<com.android.ims.internal.IImsEcbm: void setListener(com.android.ims.internal.IImsEcbmListener)>
<android.hardware.camera2.marshal.MarshalHelpers: int checkNativeType(int)>
<android.view.WindowCallbackWrapper: android.view.View onCreatePanelView(int)>
<com.android.server.backup.SystemBackupAgent: void onFullBackup(android.app.backup.FullBackupDataOutput)>
<android.graphics.drawable.AnimatedVectorDrawable: void start()>
<android.content.pm.PackageCleanItem: int hashCode()>
<android.os.BatteryStats: java.lang.String getStartPlatformVersion()>
<android.gesture.Gesture: android.graphics.RectF getBoundingBox()>
<android.security.KeyChain: void choosePrivateKeyAlias(android.app.Activity,android.security.KeyChainAliasCallback,java.lang.String[],java.security.Principal[],java.lang.String,int,java.lang.String)>
<android.nfc.INfcTag: int close(int)>
<android.hardware.location.IActivityRecognitionHardwareWatcher: void onInstanceChanged(android.hardware.location.IActivityRecognitionHardware)>
<android.bluetooth.IBluetoothPan: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.accessibilityservice.AccessibilityService.IAccessibilityServiceClientWrapper: void onGesture(int)>
<com.android.internal.telephony.SmsRawData: void <init>(byte[])>
<android.view.animation.CycleInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>
<android.hardware.display.IDisplayManager: android.view.DisplayInfo getDisplayInfo(int)>
<android.media.effect.effects.CropEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>
<android.media.MutableBackgroundColorSpan: int describeContents()>
<android.media.TextTrackCue: int hashCode()>
<android.view.animation.Animation: void start()>
<android.transition.ArcMotion: void setMinimumVerticalAngle(float)>
<android.widget.NumberPicker: boolean dispatchTouchEvent(android.view.MotionEvent)>
<android.net.INetworkPolicyManager: int[] getUidsWithPolicy(int)>
<android.content.UriPermission: void <init>(android.net.Uri,int,long)>
<com.google.android.gles_jni.GLImpl: void glPointSizePointerOES(int,int,java.nio.Buffer)>
<android.os.Process: long getPss(int)>
<android.graphics.drawable.Drawable: boolean isProjected()>
<android.view.Window: void setLocalFocus(boolean,boolean)>
<android.widget.ImageView: void setImageLevel(int)>
<android.transition.Transition: android.transition.TransitionValues getTransitionValues(android.view.View,boolean)>
<android.nfc.NdefMessage: byte[] toByteArray()>
<android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction: int getId()>
<android.widget.OverScroller: int getFinalX()>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getActivityBanner(android.content.ComponentName)>
<android.database.sqlite.SQLiteSession: boolean hasConnection()>
<android.os.BatteryStats: int getBluetoothStateCount(int,int)>
<android.media.IAudioService: void disableSafeMediaVolume()>
<android.webkit.JsDialogHelper: void <init>(android.webkit.JsPromptResult,android.os.Message)>
<android.telecom.InCallAdapter: void unholdCall(java.lang.String)>
<android.app.admin.IDevicePolicyManager: void setPasswordHistoryLength(android.content.ComponentName,int,int)>
<android.app.job.JobInfo: int getBackoffPolicy()>
<android.widget.BaseExpandableListAdapter: int getChildType(int,int)>
<android.print.PrinterId: void writeToParcel(android.os.Parcel,int)>
<android.view.SurfaceHolder.Callback: void surfaceDestroyed(android.view.SurfaceHolder)>
<android.widget.ArrayAdapter: android.content.Context getContext()>
<android.drm.DrmInfo: java.util.Iterator keyIterator()>
<android.gesture.GestureLibrary: void setSequenceType(int)>
<android.preference.DialogPreference: void <init>(android.content.Context,android.util.AttributeSet)>
<android.app.FragmentManagerState: int describeContents()>
<android.view.textservice.SentenceSuggestionsInfo: int getSuggestionsCount()>
<android.app.IActivityManager: boolean dumpHeap(java.lang.String,int,boolean,java.lang.String,android.os.ParcelFileDescriptor)>
<android.view.DragEvent: java.lang.String toString()>
<android.widget.Switch: void setSwitchMinWidth(int)>
<android.media.WebVttParser.Phase: void parse(java.lang.String)>
<android.view.Display: void getSize(android.graphics.Point)>
<android.drm.DrmOutputStream: void <init>(android.drm.DrmManagerClient,android.os.ParcelFileDescriptor,java.lang.String)>
<com.android.internal.widget.DrawableHolder: void onAnimationCancel(android.animation.Animator)>
<android.content.pm.PackageItemInfo.DisplayNameComparator: int compare(android.content.pm.PackageItemInfo,android.content.pm.PackageItemInfo)>
<android.telephony.SignalStrength: int getCdmaLevel()>
<android.inputmethodservice.Keyboard: int[] getShiftKeyIndices()>
<android.bluetooth.BluetoothHeadsetClient: boolean sendDTMF(android.bluetooth.BluetoothDevice,byte)>
<android.app.AlertDialog: void <init>(android.content.Context)>
<android.media.MediaExtractor: long getSampleTime()>
<android.media.MediaPlayer: void deselectTrack(int)>
<android.app.ActivityManagerProxy: java.lang.String getTagForIntentSender(android.content.IIntentSender,java.lang.String)>
<android.content.IntentFilter: int countDataTypes()>
<android.graphics.Region: boolean set(android.graphics.Rect)>
<android.preference.PreferenceCategory: boolean isEnabled()>
<android.content.ClipData.Item: java.lang.CharSequence getText()>
<android.widget.ActionMenuView: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.android.internal.backup.IBackupTransport: int sendBackupData(int)>
<android.media.AudioRecord: int read(byte[],int,int)>
<com.android.internal.statusbar.StatusBarIcon: java.lang.String toString()>
<android.telephony.ServiceState: void <init>(android.telephony.ServiceState)>
<android.graphics.LightingColorFilter: int getColorAdd()>
<android.app.ListActivity: void onDestroy()>
<android.net.StaticIpConfiguration: boolean equals(java.lang.Object)>
<com.android.internal.util.JournaledFile: void commit()>
<android.app.DatePickerDialog: void onClick(android.content.DialogInterface,int)>
<android.view.ViewGroup: void drawableHotspotChanged(float,float)>
<android.os.Parcel: java.lang.String readString()>
<android.os.Parcel: int dataPosition()>
<android.hardware.usb.UsbEndpoint: int getAttributes()>
<android.app.backup.BackupAgent: void onRestoreFile(android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long)>
<android.content.pm.IPackageInstallerSession: void setClientProgress(float)>
<android.telecom.TelecomManager: boolean isRinging()>
<android.webkit.WebViewProvider: boolean savePicture(android.os.Bundle,java.io.File)>
<com.google.android.util.AbstractMessageParser.YouTubeVideo: java.lang.String getURL(java.lang.String)>
<android.opengl.GLES10: void glTexEnvxv(int,int,java.nio.IntBuffer)>
<android.nfc.INfcTag: int ndefWrite(int,android.nfc.NdefMessage)>
<android.filterfw.geometry.Point: float distanceTo(android.filterfw.geometry.Point)>
<com.android.internal.os.BatteryStatsImpl: long getMobileRadioActiveAdjustedTime(int)>
<android.widget.AutoCompleteTextView: void onWindowFocusChanged(boolean)>
<android.app.SearchManager: java.util.List getGlobalSearchActivities()>
<android.graphics.Matrix: void setTranslate(float,float)>
<android.opengl.GLES20: void glGetUniformiv(int,int,java.nio.IntBuffer)>
<android.hardware.usb.UsbDevice: int getConfigurationCount()>
<android.view.View: android.graphics.Bitmap getDrawingCache()>
<android.media.Tokenizer.OnTokenListener: void onLineEnd()>
<android.gesture.GestureOverlayView: boolean isGestureVisible()>
<android.database.sqlite.SQLiteOpenHelper: java.lang.String getDatabaseName()>
<android.renderscript.FieldPacker: void reset()>
<android.hardware.usb.UsbInterface: int getInterfaceClass()>
<android.widget.AutoCompleteTextView: void onCommitCompletion(android.view.inputmethod.CompletionInfo)>
<android.widget.OverScroller: boolean isOverScrolled()>
<android.net.wifi.WifiManager: boolean isWifiApEnabled()>
<android.widget.DoubleDigitManager.CallBack: boolean singleDigitIntermediate(int)>
<android.inputmethodservice.Keyboard: int getMinWidth()>
<android.hardware.camera2.legacy.LegacyCameraDevice: long cancelRequest(int)>
<android.bluetooth.IBluetoothHeadsetPhone: java.lang.String getSubscriberNumber()>
<android.content.Context: void startActivitiesAsUser(android.content.Intent[],android.os.Bundle,android.os.UserHandle)>
<android.service.notification.NotificationRankingUpdate: void <init>(android.os.Parcel)>
<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.content.ContextWrapper: void enforceUriPermission(android.net.Uri,int,int,int,java.lang.String)>
<android.content.ContentResolver: boolean isSyncPending(android.accounts.Account,java.lang.String)>
<android.view.RenderNode: float getScaleY()>
<android.graphics.Bitmap: int getScaledHeight(android.graphics.Canvas)>
<android.media.MediaRouter: void removeCallback(android.media.MediaRouter.Callback)>
<android.app.Activity: void onStart()>
<android.text.Layout: int getLineStart(int)>
<android.speech.tts.TextToSpeechService: void onSynthesizeText(android.speech.tts.SynthesisRequest,android.speech.tts.SynthesisCallback)>
<android.filterfw.core.FieldPort: void clear()>
<android.content.Context: android.content.ComponentName startServiceAsUser(android.content.Intent,android.os.UserHandle)>
<android.opengl.GLES31: void glProgramUniform1uiv(int,int,int,java.nio.IntBuffer)>
<android.net.LinkAddress: void <init>(java.lang.String)>
<com.google.android.gles_jni.GLImpl: void glAlphaFuncx(int,int)>
<com.google.android.gles_jni.GLImpl: void glTexParameterfv(int,int,java.nio.FloatBuffer)>
<android.graphics.Path: void lineTo(float,float)>
<android.widget.RadialTimePickerView: void showMinutes(boolean)>
<android.util.LongArray: void add(long)>
<android.util.JsonWriter: android.util.JsonWriter endObject()>
<android.webkit.WebSettings: void setSerifFontFamily(java.lang.String)>
<android.filterfw.core.SimpleFrameManager: android.filterfw.core.Frame newBoundFrame(android.filterfw.core.FrameFormat,int,long)>
<android.webkit.WebViewDatabase: void clearFormData()>
<android.app.Activity: android.os.IBinder getActivityToken()>
<android.preference.CheckBoxPreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.media.MediaCodec: void stop()>
<android.widget.TextView: int getAccessibilitySelectionEnd()>
<android.telephony.TelephonyManager: java.lang.String getNetworkTypeName()>
<android.renderscript.Mesh.AllocationBuilder: int getCurrentVertexTypeIndex()>
<android.widget.RemoteViews: void setImageViewResource(int,int)>
<android.widget.TextView: void setTextIsSelectable(boolean)>
<android.view.MagnificationSpec: android.view.MagnificationSpec obtain(android.view.MagnificationSpec)>
<android.opengl.GLES31: void glUseProgramStages(int,int,int)>
<android.graphics.SurfaceTexture: long getTimestamp()>
<android.renderscript.Byte4: byte length()>
<android.view.animation.LayoutAnimationController: void setDelay(float)>
<android.os.Parcelable.Creator: java.lang.Object[] newArray(int)>
<android.text.style.EasyEditSpan: void <init>(android.os.Parcel)>
<android.net.NetworkStatsHistory: void <init>(long,int)>
<android.widget.BaseAdapter: int getItemViewType(int)>
<android.view.TextureView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.view.IWindow: void dispatchAppVisibility(boolean)>
<android.app.IUserSwitchObserver: void onUserSwitching(int,android.os.IRemoteCallback)>
<android.graphics.Color: float hue(int)>
<android.view.ViewGroup: void resetResolvedTextDirection()>
<com.android.internal.view.menu.IconMenuItemView: void onTextChanged(java.lang.CharSequence,int,int,int)>
<android.telephony.TelephonyManager: java.lang.String getDeviceId()>
<android.os.storage.StorageManager: boolean isObbMounted(java.lang.String)>
<android.view.ViewGroup: void dispatchWindowSystemUiVisiblityChanged(int)>
<android.filterfw.core.GraphRunner.OnRunnerDoneListener: void onRunnerDone(int)>
<android.app.backup.RestoreDescription: java.lang.String getPackageName()>
<android.app.IWallpaperManagerCallback: void onWallpaperChanged()>
<com.android.internal.inputmethod.InputMethodUtils: int getSubtypeIdFromHashCode(android.view.inputmethod.InputMethodInfo,int)>
<android.util.PrintWriterPrinter: void <init>(java.io.PrintWriter)>
<android.hardware.camera2.impl.CameraDeviceImpl.CaptureCallback: void onCaptureCompleted(android.hardware.camera2.CameraDevice,android.hardware.camera2.CaptureRequest,android.hardware.camera2.TotalCaptureResult)>
<android.widget.Switch: void drawableStateChanged()>
<android.widget.ProgressBar: void setProgressTintMode(android.graphics.PorterDuff.Mode)>
<android.os.UserHandle: boolean isSameApp(int,int)>
<android.preference.TwoStatePreference: void setDisableDependentsState(boolean)>
<android.appwidget.AppWidgetManager: java.util.List getInstalledProviders(int)>
<android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>
<android.database.sqlite.SQLiteDatabase: void setLockingEnabled(boolean)>
<android.inputmethodservice.KeyboardView: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.internal.os.BatteryStatsImpl: void noteStopGpsLocked(int)>
<android.os.INetworkManagementService: void setDefaultNetId(int)>
<android.view.accessibility.AccessibilityNodeInfo: int getActions()>
<android.hardware.Camera.Parameters: java.util.List getSupportedSceneModes()>
<android.graphics.PointF: int describeContents()>
<android.preference.MultiCheckPreference: void setEntryValues(int)>
<android.content.ContentResolver: android.content.res.AssetFileDescriptor openTypedAssetFileDescriptor(android.net.Uri,java.lang.String,android.os.Bundle,android.os.CancellationSignal)>
<android.preference.SeekBarVolumizer: android.widget.SeekBar getSeekBar()>
<android.content.UndoManager: boolean isInUndo()>
<android.location.Location: float getBearing()>
<android.renderscript.Double3: void addAt(int,double)>
<android.hardware.GeomagneticField: float getY()>
<com.google.android.gles_jni.GLImpl: void glVertexPointer(int,int,int,int)>
<android.app.Notification.Style: void restoreFromExtras(android.os.Bundle)>
<android.net.INetworkPolicyManager: android.net.NetworkPolicy[] getNetworkPolicies()>
<android.os.storage.StorageVolume: void writeToParcel(android.os.Parcel,int)>
<android.app.LoadedApk: android.app.IServiceConnection getServiceDispatcher(android.content.ServiceConnection,android.content.Context,android.os.Handler,int)>
<android.location.GpsMeasurement: void setAccumulatedDeltaRangeState(short)>
<android.hardware.SensorManager: float getAltitude(float,float)>
<android.app.ActivityManagerProxy: void grantUriPermissionFromOwner(android.os.IBinder,int,java.lang.String,android.net.Uri,int,int,int)>
<android.telephony.TelephonyManager: java.lang.String getLine1NumberForSubscriber(long)>
<android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence)>
<android.widget.AbsListView: boolean isPaddingOffsetRequired()>
<android.util.SparseIntArray: android.util.SparseIntArray clone()>
<android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int)>
<android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityWindowInfo obtain()>
<android.os.IVibratorService: boolean hasVibrator()>
<android.view.View: void invalidate()>
<android.os.BatteryStats.Uid: android.util.SparseArray getPidStats()>
<android.app.TabActivity: void onPostCreate(android.os.Bundle)>
<android.widget.ImageView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.opengl.GLES31: void glSampleMaski(int,int)>
<android.hardware.usb.UsbAccessory: java.lang.String toString()>
<com.google.android.util.AbstractMessageParser.Token: boolean isMedia()>
<android.opengl.GLES30: void glGetProgramBinary(int,int,int[],int,int[],int,java.nio.Buffer)>
<android.bluetooth.le.ScanFilter: java.lang.String toString()>
<android.graphics.Color: void colorToHSV(int,float[])>
<android.hardware.SerialPort: void write(java.nio.ByteBuffer,int)>
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: java.lang.String getSupplicantQuery()>
<android.view.ViewGroup: void resolveDrawables()>
<android.filterfw.core.Frame: java.nio.ByteBuffer getData()>
<android.content.pm.InstrumentationInfo: java.lang.String toString()>
<android.media.AudioManager: boolean isBluetoothScoOn()>
<android.hardware.hdmi.HdmiTimerRecordSources: android.hardware.hdmi.HdmiTimerRecordSources.Duration durationOf(int,int)>
<android.hardware.camera2.CameraCaptureSession: void stopRepeating()>
<android.view.RenderNode: float getElevation()>
<android.media.SubtitleData: long getDurationUs()>
<android.app.PendingIntent: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.app.NetInitiatedActivity: void onClick(android.content.DialogInterface,int)>
<android.renderscript.Matrix2f: void <init>(float[])>
<android.app.ActivityManager: java.util.List getRunningExternalApplications()>
<android.speech.tts.SynthesisRequest: java.lang.String getVoiceName()>
<android.view.ViewGroup: void onAnimationStart()>
<android.widget.FrameLayout: android.widget.FrameLayout.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.widget.CursorTreeAdapter: java.lang.String convertToString(android.database.Cursor)>
<android.hardware.camera2.params.MeteringRectangle: int getWidth()>
<android.graphics.drawable.AnimatedRotateDrawable: int getOpacity()>
<android.app.RemoteInput: void writeToParcel(android.os.Parcel,int)>
<android.media.session.MediaController.TransportControls: void stop()>
<android.os.BatteryStats: int getMobileRadioActiveUnknownCount(int)>
<android.media.MediaRecorder: void release()>
<android.filterpacks.ui.SurfaceRenderFilter: void prepare(android.filterfw.core.FilterContext)>
<com.android.internal.widget.AutoScrollHelper: boolean canTargetScrollVertically(int)>
<android.view.VelocityTracker: android.view.VelocityTracker obtain(java.lang.String)>
<android.net.LocalSocket: int getReceiveBufferSize()>
<android.media.JetPlayer.OnJetEventListener: void onJetUserIdUpdate(android.media.JetPlayer,int,int)>
<android.hardware.camera2.impl.CallbackProxies.DeviceStateCallbackProxy: void onUnconfigured(android.hardware.camera2.CameraDevice)>
<android.widget.DatePicker: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.text.DynamicLayout: int getLineCount()>
<android.view.WindowId: void writeToParcel(android.os.Parcel,int)>
<android.widget.PopupWindow: int getMaxAvailableHeight(android.view.View,int)>
<android.opengl.GLSurfaceView.EGLWindowSurfaceFactory: javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object)>
<com.google.android.gles_jni.GLImpl: void glDeleteRenderbuffersOES(int,java.nio.IntBuffer)>
<android.net.LinkProperties: android.net.LinkProperties.CompareResult compareDnses(android.net.LinkProperties)>
<android.view.accessibility.AccessibilityEvent: int describeContents()>
<android.gesture.OrientedBoundingBox: android.graphics.Path toPath()>
<android.accessibilityservice.AccessibilityServiceInfo: java.util.List getCapabilityInfos()>
<android.widget.AdapterViewAnimator: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.android.internal.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)>
<com.android.internal.widget.DrawableHolder: void setScaleY(float)>
<android.graphics.drawable.BitmapDrawable: void <init>(java.lang.String)>
<com.android.internal.os.BatteryStatsImpl: void reportExcessiveWakeLocked(int,java.lang.String,long,long)>
<com.android.ims.ImsCallForwardInfo: int describeContents()>
<android.database.Observable: void unregisterAll()>
<android.media.MediaExtractor: void setDataSource(java.lang.String,java.util.Map)>
<android.os.BatteryStats: int getHistoryUsedSize()>
<android.view.View.AccessibilityDelegate: boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>
<android.inputmethodservice.ExtractEditText: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.internal.view.menu.MenuDialogHelper: void onClick(android.content.DialogInterface,int)>
<android.preference.PreferenceFragment: boolean hasListView()>
<android.graphics.ColorMatrixColorFilter: void <init>(float[])>
<android.content.OperationApplicationException: void <init>(java.lang.String,int)>
<com.android.internal.widget.DrawableHolder: float getX()>
<android.media.projection.IMediaProjection: boolean canProjectVideo()>
<android.app.FragmentManager: boolean popBackStackImmediate(int,int)>
<android.media.audiofx.Visualizer.OnDataCaptureListener: void onWaveFormDataCapture(android.media.audiofx.Visualizer,byte[],int)>
<android.opengl.GLSurfaceView: void onAttachedToWindow()>
<com.android.internal.widget.RotarySelector: void onSizeChanged(int,int,int,int)>
<android.renderscript.ScriptIntrinsicHistogram: void setDotCoefficients(float,float,float,float)>
<android.content.Context: void sendBroadcast(android.content.Intent,java.lang.String)>
<android.app.ActivityManagerProxy: void startLockTaskMode(int)>
<android.content.SyncRequest.Builder: android.content.SyncRequest build()>
<android.hardware.hdmi.HdmiControlManager.VendorCommandListener: void onReceived(int,byte[],boolean)>
<com.android.internal.app.ProcessStats: void readFromParcel(android.os.Parcel)>
<android.location.Geocoder: void <init>(android.content.Context,java.util.Locale)>
<android.printservice.PrintServiceInfo: android.content.pm.ResolveInfo getResolveInfo()>
<android.widget.ActivityChooserView: boolean showPopup()>
<android.widget.Toolbar: void onRestoreInstanceState(android.os.Parcelable)>
<android.media.MediaDescription: android.os.Bundle getExtras()>
<android.view.WindowManagerPolicy: void startKeyguardExitAnimation(long,long)>
<android.content.IRestrictionsManager: android.content.Intent createLocalApprovalIntent()>
<android.graphics.Point: int describeContents()>
<android.content.pm.LauncherApps: void addCallback(android.content.pm.LauncherApps.Callback)>
<com.android.internal.telecom.IVideoProvider: void setDeviceOrientation(int)>
<android.preference.PreferenceGroup: void dispatchRestoreInstanceState(android.os.Bundle)>
<android.service.voice.VoiceInteractionSession.Request: void sendConfirmResult(boolean,android.os.Bundle)>
<android.graphics.drawable.DrawableContainer: void setCurrentIndex(int)>
<com.android.internal.view.menu.MenuDialogHelper: void onDismiss(android.content.DialogInterface)>
<com.android.internal.widget.ToolbarWidgetWrapper: void setNavigationIcon(int)>
<android.util.DayOfMonthCursor: int getSelectedDayOfMonth()>
<android.print.PrinterDiscoverySession: void finalize()>
<android.renderscript.Double2: void sub(android.renderscript.Double2)>
<android.filterfw.core.OneShotScheduler: void <init>(android.filterfw.core.FilterGraph)>
<android.view.ViewGroup: boolean hasFocusable()>
<android.app.ActivityOptions: int getCustomExitResId()>
<android.os.Debug.MemoryInfo: int describeContents()>
<android.filterpacks.imageproc.FlipFilter: void process(android.filterfw.core.FilterContext)>
<android.preference.MultiSelectListPreference: android.os.Parcelable onSaveInstanceState()>
<android.widget.Spinner: int getDropDownHorizontalOffset()>
<android.service.wallpaper.IWallpaperEngine: void setVisibility(boolean)>
<android.graphics.drawable.ShapeDrawable: void getOutline(android.graphics.Outline)>
<android.hardware.soundtrigger.SoundTriggerModule: int loadSoundModel(android.hardware.soundtrigger.SoundTrigger.SoundModel,int[])>
<android.media.IVolumeController: void displaySafeVolumeWarning(int)>
<android.appwidget.AppWidgetHostView: void <init>(android.content.Context,android.widget.RemoteViews.OnClickHandler)>
<android.provider.Settings.System: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,int)>
<android.hardware.camera2.CaptureResult.Key: void <init>(java.lang.String,android.hardware.camera2.utils.TypeReference)>
<android.app.usage.UsageEvents: int describeContents()>
<android.net.IConnectivityManager: android.net.NetworkCapabilities getNetworkCapabilities(android.net.Network)>
<android.app.admin.DevicePolicyManager: long getPasswordExpiration(android.content.ComponentName)>
<android.opengl.GLES20: void glGetFloatv(int,float[],int)>
<android.media.tv.TvInputManager: void removeBlockedRating(android.media.tv.TvContentRating)>
<android.view.accessibility.AccessibilityWindowInfo: void setConnectionId(int)>
<android.media.MediaCodec: void setVideoScalingMode(int)>
<android.transition.TransitionSet: android.transition.TransitionSet addTransition(android.transition.Transition)>
<android.accessibilityservice.IAccessibilityServiceClient: void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.content.Loader.ForceLoadContentObserver: void onChange(boolean)>
<android.view.accessibility.AccessibilityRecord: void setFullScreen(boolean)>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl: void dispatchTrackballEvent(int,android.view.MotionEvent,android.view.inputmethod.InputMethodSession.EventCallback)>
<android.transition.ChangeImageTransform: void captureEndValues(android.transition.TransitionValues)>
<android.text.style.SpellCheckSpan: void <init>(android.os.Parcel)>
<android.filterpacks.videosrc.SurfaceTextureTarget: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>
<android.text.Selection: boolean moveToLeftEdge(android.text.Spannable,android.text.Layout)>
<android.hardware.Camera.Parameters: void setMeteringAreas(java.util.List)>
<android.database.BulkCursorToCursorAdaptor: android.os.Bundle getExtras()>
<android.os.Parcel: java.lang.CharSequence readCharSequence()>
<android.renderscript.FieldPacker: void addI8(android.renderscript.Byte3)>
<android.app.FragmentTransaction: android.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence)>
<android.content.res.Resources: boolean resourceHasPackage(int)>
<android.os.Debug.MemoryInfo: int getTotalPrivateDirty()>
<com.android.internal.app.RestrictionsPinActivity: void afterTextChanged(android.text.Editable)>
<android.telephony.TelephonyManager: int getCurrentPhoneType()>
<android.opengl.Matrix: void frustumM(float[],int,float,float,float,float,float,float)>
<android.view.accessibility.AccessibilityRecord: void setSealed(boolean)>
<android.app.AlertDialog: void setIcon(android.graphics.drawable.Drawable)>
<android.location.Criteria: void setCostAllowed(boolean)>
<android.util.ArrayMap: boolean equals(java.lang.Object)>
<com.google.android.util.AbstractMessageParser.Video: java.lang.String getRssUrl(java.lang.String)>
<android.opengl.GLES10: void glDepthFunc(int)>
<android.filterfw.core.AsyncRunner: void setGraph(android.filterfw.core.FilterGraph)>
<android.media.audiofx.AudioEffect: int setParameter(int[],short[])>
<android.net.http.SslError: android.net.http.SslError SslErrorFromChromiumErrorCode(int,android.net.http.SslCertificate,java.lang.String)>
<android.telecom.RemoteConnection: int getState()>
<android.content.ContextWrapper: void setWallpaper(android.graphics.Bitmap)>
<android.app.FragmentManagerImpl: boolean popBackStackImmediate()>
<android.opengl.GLES31: int glGetProgramResourceLocation(int,int,java.lang.String)>
<android.net.http.LoggingEventHandler: void certificate(android.net.http.SslCertificate)>
<android.app.admin.DevicePolicyManager: android.app.admin.DevicePolicyManager create(android.content.Context,android.os.Handler)>
<android.graphics.drawable.RippleDrawable: void draw(android.graphics.Canvas)>
<android.media.session.MediaController.TransportControls: void playFromSearch(java.lang.String,android.os.Bundle)>
<android.content.Context: java.io.File getDir(java.lang.String,int)>
<android.net.nsd.NsdServiceInfo: int describeContents()>
<android.filterpacks.imageproc.ImageCombineFilter: android.filterfw.core.Program getNativeProgram(android.filterfw.core.FilterContext)>
<android.accounts.IAccountManager: android.accounts.AuthenticatorDescription[] getAuthenticatorTypes(int)>
<android.app.ActivityOptions: android.app.ActivityOptions makeScaleUpAnimation(android.view.View,int,int,int,int)>
<android.view.Window: void setLayout(int,int)>
<android.telecom.Connection: android.telecom.Connection createCanceledConnection()>
<com.android.internal.util.Preconditions: int checkArgumentInRange(int,int,int,java.lang.String)>
<android.widget.TabHost.ContentStrategy: android.view.View getContentView()>
<com.android.internal.inputmethod.InputMethodUtils: boolean isImeThatHasSubtypeOf(android.view.inputmethod.InputMethodInfo,java.util.Locale,boolean,java.lang.String)>
<android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int,int,int,int,int)>
<android.preference.DialogPreference: android.view.View onCreateDialogView()>
<android.app.AppOpsManager.OnOpChangedListener: void onOpChanged(java.lang.String,java.lang.String)>
<android.app.IApplicationThread: void scheduleTranslucentConversionComplete(android.os.IBinder,boolean)>
<com.android.internal.app.ProcessStats: void add(com.android.internal.app.ProcessStats)>
<android.media.AudioService.VolumeStreamState: boolean adjustIndex(int,int)>
<android.nfc.IAppCallback: android.nfc.BeamShareData createBeamShareData()>
<android.media.AudioManager: void requestAudioFocusForCall(int,int)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,boolean,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.opengl.GLES20: void glDeleteBuffers(int,java.nio.IntBuffer)>
<android.hardware.camera2.legacy.GLThreadManager: void waitUntilStarted()>
<android.os.UserManager: boolean isUserAGoat()>
<android.media.tv.TvInputService.Session: void notifyChannelRetuned(android.net.Uri)>
<android.media.SoundPool: void setLoop(int,int)>
<android.service.notification.ZenModeConfig: boolean isValidSleepMode(java.lang.String)>
<android.net.VpnService.Builder: android.net.VpnService.Builder setSession(java.lang.String)>
<android.transition.Scene: void <init>(android.view.ViewGroup,android.view.View)>
<android.graphics.YuvImage: int getWidth()>
<com.android.internal.os.BatteryStatsImpl.Uid.Proc: long getUserTime(int)>
<com.android.internal.os.BatteryStatsImpl.Uid: void updateProcessStateLocked(java.lang.String,int,long)>
<android.renderscript.Byte4: android.renderscript.Byte4 mul(android.renderscript.Byte4,byte)>
<android.media.tv.ITvInputManager: void removeOverlayView(android.os.IBinder,int)>
<android.inputmethodservice.InputMethodService: android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl onCreateInputMethodInterface()>
<android.graphics.drawable.ClipDrawable: boolean setVisible(boolean,boolean)>
<android.os.Bundle: void putBoolean(java.lang.String,boolean)>
<android.app.Fragment: void onViewCreated(android.view.View,android.os.Bundle)>
<android.accounts.AccountManager: boolean addAccountExplicitly(android.accounts.Account,java.lang.String,android.os.Bundle)>
<android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain(int)>
<android.app.ActivityOptions: android.app.ActivityOptions makeCustomAnimation(android.content.Context,int,int,android.os.Handler,android.app.ActivityOptions.OnAnimationStartedListener)>
<android.renderscript.Sampler.Builder: android.renderscript.Sampler create()>
<android.content.SyncAdapterType: void writeToParcel(android.os.Parcel,int)>
<android.graphics.drawable.AnimatedRotateDrawable: boolean getPadding(android.graphics.Rect)>
<android.preference.Preference: android.os.Bundle peekExtras()>
<android.view.ViewGroupOverlay: void add(android.view.View)>
<android.view.Window: android.transition.Transition getReenterTransition()>
<android.app.ApplicationErrorReport.CrashInfo: void writeToParcel(android.os.Parcel,int)>
<android.net.IConnectivityManager: void setDataDependency(int,boolean)>
<android.hardware.display.VirtualDisplay.Callback: void onStopped()>
<android.opengl.GLES31Ext: void glBlendFuncSeparateiEXT(int,int,int,int,int)>
<android.widget.AbsSpinner: void <init>(android.content.Context,android.util.AttributeSet)>
<android.graphics.Typeface: int hashCode()>
<android.renderscript.Short4: android.renderscript.Short4 mul(android.renderscript.Short4,android.renderscript.Short4)>
<android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>
<android.app.admin.IDevicePolicyManager: boolean getCrossProfileCallerIdDisabledForUser(int)>
<android.renderscript.Int2: void <init>(int,int)>
<android.net.WifiLinkQualityInfo: java.lang.String getBssid()>
<android.telephony.CellSignalStrengthLte: void setDefaultValues()>
<android.opengl.GLES11Ext: void glColor4xOES(int,int,int,int)>
<android.bluetooth.IBluetoothHeadset: boolean enableWBS()>
<android.media.MediaCodecList: java.lang.String findEncoderForFormat(android.media.MediaFormat)>
<android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureRequest getRequest()>
<android.app.ApplicationThreadProxy: void setProcessState(int)>
<com.android.internal.widget.DecorToolbar: void setHomeButtonEnabled(boolean)>
<com.android.internal.preference.YesNoPreference: boolean getValue()>
<android.os.BatteryStats: long getWifiSupplStateTime(int,long,int)>
<android.opengl.GLES31Ext: void glGetTexParameterIivEXT(int,int,java.nio.IntBuffer)>
<android.telephony.VoLteServiceState: void <init>(android.os.Parcel)>
<android.os.DropBoxManager.Entry: long getTimeMillis()>
<android.bluetooth.IBluetoothGatt: void beginServiceDeclaration(int,int,int,int,android.os.ParcelUuid,boolean)>
<android.app.ActivityManagerProxy: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>
<android.os.INetworkManagementService: void disableIpv6(java.lang.String)>
<com.android.internal.util.StateMachine: void transitionToHaltingState()>
<android.widget.AdapterViewFlipper: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.bluetooth.IBluetoothHeadsetClient: boolean enterPrivateMode(android.bluetooth.BluetoothDevice,int)>
<android.widget.CalendarView: void setOnDateChangeListener(android.widget.CalendarView.OnDateChangeListener)>
<android.graphics.PixelFormat: boolean formatHasAlpha(int)>
<android.graphics.Outline: void setRect(int,int,int,int)>
<android.content.ContentResolver: boolean isSyncActive(android.accounts.Account,java.lang.String)>
<android.view.inputmethod.InputMethodManager: void focusOut(android.view.View)>
<android.app.ActivityManagerProxy: boolean startNextMatchingActivity(android.os.IBinder,android.content.Intent,android.os.Bundle)>
<android.widget.ScrollView: int getMaxScrollAmount()>
<android.opengl.GLES31Ext: void glCopyImageSubDataEXT(int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)>
<android.text.style.SuggestionRangeSpan: void setBackgroundColor(int)>
<com.android.internal.os.storage.ExternalStorageFormatter: android.os.IBinder onBind(android.content.Intent)>
<android.media.MediaRecorder: android.view.Surface getSurface()>
<com.android.internal.telecom.ITelecomService: boolean handlePinMmi(java.lang.String)>
<com.android.server.net.NetlinkTracker: void addressRemoved(java.lang.String,android.net.LinkAddress)>
<android.media.AudioManager: android.media.IRingtonePlayer getRingtonePlayer()>
<android.bluetooth.BluetoothPan: boolean disconnect(android.bluetooth.BluetoothDevice)>
<android.telecom.Connection: boolean isRingbackRequested()>
<android.telephony.TelephonyManager: boolean putIntAtIndex(android.content.ContentResolver,java.lang.String,int,int)>
<android.filterpacks.imageproc.VignetteFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>
<com.android.internal.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)>
<android.media.IVolumeController: void setLayoutDirection(int)>
<android.media.MediaRouter.RouteGroup: void requestSetVolume(int)>
<android.content.Context: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,int,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<android.hardware.usb.UsbInterface: int getEndpointCount()>
<android.animation.ValueAnimator: boolean canReverse()>
<android.media.audiofx.EnvironmentalReverb: short getDecayHFRatio()>
<android.graphics.drawable.VectorDrawable: int getIntrinsicHeight()>
<android.os.UserManager: boolean hasUserRestriction(java.lang.String,android.os.UserHandle)>
<android.hardware.camera2.params.MeteringRectangle: android.graphics.Point getUpperLeftPoint()>
<android.widget.AbsListView: void smoothScrollToPositionFromTop(int,int)>
<android.database.CursorWindow: int getType(int,int)>
<com.android.internal.widget.ResolverDrawerLayout.LayoutParams: void <init>(android.view.ViewGroup.MarginLayoutParams)>
<android.util.EventLog: int writeEvent(int,long)>
<android.util.Rational: int gcd(int,int)>
<android.media.session.MediaSession.QueueItem: void <init>(android.media.MediaDescription,long)>
<com.android.internal.widget.LockPatternUtilsCache: void setLockPassword(java.lang.String,int)>
<android.hardware.camera2.marshal.Marshaler: int getNativeSize()>
<android.view.KeyEvent: boolean metaStateHasNoModifiers(int)>
<android.view.AccessibilityIterators.AbstractTextSegmentIterator: void initialize(java.lang.String)>
<android.webkit.GeolocationPermissions: android.webkit.GeolocationPermissions getInstance()>
<android.opengl.GLES30: void glGetActiveUniformsiv(int,int,int[],int,int,int[],int)>
<android.renderscript.RenderScriptGL.SurfaceConfig: void setDepth(int,int)>
<android.net.LinkQualityInfo: void initializeFromParcel(android.os.Parcel)>
<android.print.PrintJobInfo.Builder: void setCopies(int)>
<com.google.android.util.AbstractMessageParser.Acronym: void <init>(java.lang.String,java.lang.String)>
<android.text.Editable: android.text.Editable insert(int,java.lang.CharSequence,int,int)>
<android.widget.HeaderViewListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.database.CursorWindow: boolean putNull(int,int)>
<android.app.SearchableInfo: int getSuggestThreshold()>
<android.printservice.PrintJob: java.lang.String getAdvancedStringOption(java.lang.String)>
<android.hardware.Camera.Parameters: int getMaxNumFocusAreas()>
<android.telephony.gsm.GsmCellLocation: int getCid()>
<android.print.PrintAttributes.MediaSize: int getHeightMils()>
<com.android.internal.telecom.ITelecomService: void setSimCallManager(android.telecom.PhoneAccountHandle)>
<android.telephony.CellSignalStrengthCdma: int getAsuLevel()>
<android.net.http.HttpResponseCache: void close()>
<android.content.SyncStatusObserver: void onStatusChanged(int)>
<android.renderscript.Allocation: void ioReceive()>
<android.hardware.camera2.params.HighSpeedVideoConfiguration: int getWidth()>
<android.util.Rational: boolean equals(java.lang.Object)>
<android.telephony.ServiceState: int getDataNetworkType()>
<android.telephony.TelephonyManager: boolean isSimPinEnabled()>
<android.animation.Keyframe: android.animation.TimeInterpolator getInterpolator()>
<android.net.UidRange: android.net.UidRange createForUser(int)>
<com.android.internal.widget.ActionBarContextView: boolean showOverflowMenu()>
<android.webkit.WebSettings: java.lang.String getDefaultTextEncodingName()>
<android.print.PrintJobInfo: void setPrinterId(android.print.PrinterId)>
<android.widget.TextView: void onFocusChanged(boolean,int,android.graphics.Rect)>
<android.filterfw.core.SimpleFrame: void setGenericObjectValue(java.lang.Object)>
<android.view.View: boolean resolveLayoutDirection()>
<android.content.res.AssetFileDescriptor: android.os.Bundle getExtras()>
<android.os.Bundle: void putSerializable(java.lang.String,java.io.Serializable)>
<com.android.internal.telecom.IConnectionServiceAdapter: void onPostDialWait(java.lang.String,java.lang.String)>
<android.appwidget.AppWidgetHostView: void dispatchRestoreInstanceState(android.util.SparseArray)>
<android.os.storage.StorageVolume: boolean isEmulated()>
<android.service.notification.NotificationRankingUpdate: android.os.Bundle getVisibilityOverrides()>
<android.media.AudioAttributes: java.lang.String usageToString()>
<android.view.animation.Transformation: void setClipRect(int,int,int,int)>
<android.net.InterfaceConfiguration: java.lang.String getHardwareAddress()>
<android.os.StrictMode: void noteDiskWrite()>
<android.database.sqlite.SQLiteDatabase: int updateWithOnConflict(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[],int)>
<android.app.job.JobService: boolean onStartJob(android.app.job.JobParameters)>
<android.media.session.MediaSession: void setActive(boolean)>
<com.android.internal.view.menu.MenuBuilder: void setGroupEnabled(int,boolean)>
<android.inputmethodservice.Keyboard.Key: boolean isInside(int,int)>
<android.graphics.drawable.RotateDrawable: float getToDegrees()>
<android.net.http.CertificateChainValidator: android.net.http.SslError doHandshakeAndValidateServerCertificates(android.net.http.HttpsConnection,javax.net.ssl.SSLSocket,java.lang.String)>
<android.os.ServiceManager: void addService(java.lang.String,android.os.IBinder)>
<android.app.backup.RestoreSession: int restorePackage(java.lang.String,android.app.backup.RestoreObserver)>
<android.hardware.camera2.CameraAccessException: void <init>(int,java.lang.Throwable)>
<android.webkit.JsDialogHelper: boolean invokeCallback(android.webkit.WebChromeClient,android.webkit.WebView)>
<android.view.WindowManagerPolicy: boolean checkShowToOwnerOnly(android.view.WindowManager.LayoutParams)>
<android.view.WindowManagerPolicy: void systemReady()>
<android.media.session.MediaController: android.media.session.MediaSession.Token getSessionToken()>
<android.util.AttributeSet: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<android.graphics.YuvImage: void <init>(byte[],int,int,int,int[])>
<android.widget.ExpandableListView.OnChildClickListener: boolean onChildClick(android.widget.ExpandableListView,android.view.View,int,int,long)>
<android.media.WebVttParser: void parse(java.lang.String)>
<android.app.backup.BackupHelperDispatcher: void performRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>
<android.widget.FrameLayout: android.widget.FrameLayout.LayoutParams generateDefaultLayoutParams()>
<android.hardware.camera2.dispatch.InvokeDispatcher: java.lang.Object dispatch(java.lang.reflect.Method,java.lang.Object[])>
<android.widget.Spinner: void setDropDownVerticalOffset(int)>
<android.media.tv.TvInputService.Session: boolean onGenericMotionEvent(android.view.MotionEvent)>
<android.filterfw.core.InputPort: boolean isReady()>
<android.renderscript.FieldPacker: void addBoolean(boolean)>
<android.renderscript.Short4: void add(short)>
<android.media.tv.TvInputService.Session: void notifySessionEvent(java.lang.String,android.os.Bundle)>
<android.net.NetworkStats: android.net.NetworkStats combineValues(android.net.NetworkStats.Entry)>
<com.android.internal.view.IInputMethod: void startInput(com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo)>
<android.content.pm.PackageParser.ActivityIntentInfo: void <init>(android.content.pm.PackageParser.Activity)>
<android.app.backup.BackupDataInputStream: int read(byte[])>
<android.net.nsd.INsdManager: void setEnabled(boolean)>
<android.net.ProxyDataTracker: boolean reconnect()>
<android.os.SELinux: boolean restorecon(java.io.File)>
<com.android.internal.view.IInputMethodClient: void setUsingInputMethod(boolean)>
<android.content.pm.PackageInstaller.SessionCallback: void onActiveChanged(int,boolean)>
<android.net.http.HttpAuthHeader: boolean getStale()>
<android.hardware.soundtrigger.SoundTrigger.KeyphraseRecognitionEvent: java.lang.String toString()>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int,android.graphics.BitmapFactory.Options)>
<android.webkit.WebView: void onScrollChanged(int,int,int,int)>
<android.print.PrinterCapabilitiesInfo.Builder: android.print.PrinterCapabilitiesInfo.Builder setMinMargins(android.print.PrintAttributes.Margins)>
<android.graphics.Region: boolean op(android.graphics.Rect,android.graphics.Region,android.graphics.Region.Op)>
<android.view.View: int getRight()>
<android.os.Process: void setThreadPriority(int)>
<android.media.AsyncPlayer: void stop()>
<android.widget.RemoteViewsAdapter: android.content.Intent getRemoteViewsServiceIntent()>
<android.filterfw.core.GLFrame: android.filterfw.core.GLEnvironment getGLEnvironment()>
<android.content.pm.LabeledIntent: void <init>(java.lang.String,int,int)>
<android.net.TrafficStats: long getTotalRxPackets()>
<android.widget.ScrollView: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>
<android.media.AudioMixPort: android.media.AudioMixPortConfig buildConfig(int,int,int,android.media.AudioGainConfig)>
<android.view.WindowManagerPolicy: boolean hasNavigationBar()>
<android.telephony.SubscriptionManager: boolean isValidSlotId(int)>
<android.media.AudioService: int getMode()>
<android.net.http.DelegatingSSLSession: java.security.cert.Certificate[] getLocalCertificates()>
<android.telephony.TelephonyManager: int getPhoneCount()>
<android.app.SearchDialog.SearchBar: void setSearchDialog(android.app.SearchDialog)>
<android.widget.MediaController.MediaPlayerControl: boolean canSeekForward()>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>
<android.speech.tts.ITextToSpeechService: int synthesizeToFileDescriptor(android.os.IBinder,java.lang.CharSequence,android.os.ParcelFileDescriptor,android.os.Bundle,java.lang.String)>
<android.os.FileUtils: int setPermissions(java.io.File,int,int,int)>
<android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec.Builder setKeyType(java.lang.String)>
<android.hardware.input.InputManager: void setPointerSpeed(android.content.Context,int)>
<android.renderscript.Element: android.renderscript.Element TYPE(android.renderscript.RenderScript)>
<android.app.admin.IDevicePolicyManager: java.lang.String getDeviceOwnerName()>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder setIsAuxiliary(boolean)>
<android.animation.AnimatorSet: void setStartDelay(long)>
<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int)>
<android.preference.RingtonePreference: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.internal.view.menu.MenuBuilder: int findGroupIndex(int)>
<com.android.internal.app.WindowDecorActionBar.TabImpl: void setPosition(int)>
<android.app.Activity: boolean onPreparePanel(int,android.view.View,android.view.Menu)>
<android.renderscript.Byte4: void set(android.renderscript.Byte4)>
<android.media.MediaRouter.UserRouteInfo: void setPlaybackType(int)>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromStream(java.io.InputStream,java.lang.String)>
<android.database.AbstractWindowedCursor: void closeWindow()>
<android.content.res.Resources: java.io.InputStream openRawResource(int)>
<android.telecom.RemoteConference: void separate(android.telecom.RemoteConnection)>
<android.text.method.BaseMovementMethod: boolean scrollLeft(android.widget.TextView,android.text.Spannable,int)>
<android.media.audiofx.Visualizer: int getWaveForm(byte[])>
<android.filterfw.core.Frame: boolean hasNativeAllocation()>
<android.media.TimedText: void <init>(android.os.Parcel)>
<android.app.FragmentBreadCrumbs: void setParentTitle(java.lang.CharSequence,java.lang.CharSequence,android.view.View.OnClickListener)>
<android.app.job.IJobService: void stopJob(android.app.job.JobParameters)>
<android.view.ActionMode.Callback: boolean onCreateActionMode(android.view.ActionMode,android.view.Menu)>
<android.opengl.GLES11: void glGetFixedv(int,int[],int)>
<android.filterpacks.ui.SurfaceTargetFilter: void open(android.filterfw.core.FilterContext)>
<android.view.ActionMode: void setSubtitle(java.lang.CharSequence)>
<android.media.tv.ITvInputSessionCallback: void onTrackSelected(int,java.lang.String)>
<android.renderscript.ScriptIntrinsicConvolve5x5: void forEach(android.renderscript.Allocation)>
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()>
<android.widget.ZoomButtonsController: void setAutoDismissed(boolean)>
<android.graphics.Canvas: boolean clipRegion(android.graphics.Region,android.graphics.Region.Op)>
<android.webkit.WebSettings: boolean getUseWideViewPort()>
<android.media.ExifInterface: boolean getLatLong(float[])>
<android.net.IpPrefix: void <init>(byte[],int)>
<android.net.LinkProperties: boolean removeRoute(android.net.RouteInfo)>
<com.android.internal.widget.ToolbarWidgetWrapper: void setHomeButtonEnabled(boolean)>
<android.util.JsonWriter: android.util.JsonWriter value(java.lang.String)>
<android.renderscript.AllocationAdapter: void setLOD(int)>
<android.net.wifi.WifiInfo: boolean getMeteredHint()>
<android.widget.EditText: void setText(java.lang.CharSequence,android.widget.TextView.BufferType)>
<android.app.backup.FullBackup: void restoreFile(android.os.ParcelFileDescriptor,long,int,long,long,java.io.File)>
<android.widget.TableRow: int getVirtualChildCount()>
<android.view.ViewGroup: void <init>(android.content.Context)>
<android.media.tv.TvTrackInfo: int describeContents()>
<android.nfc.cardemulation.ApduServiceInfo: void writeToParcel(android.os.Parcel,int)>
<android.app.ApplicationThreadProxy: void dumpDbInfo(java.io.FileDescriptor,java.lang.String[])>
<android.os.SELinux: boolean setBooleanValue(java.lang.String,boolean)>
<android.renderscript.Long3: void copyTo(long[],int)>
<android.text.AlteredCharSequence: int length()>
<android.location.GeocoderParams: java.util.Locale getLocale()>
<android.media.effect.FilterGraphEffect: void setParameter(java.lang.String,java.lang.Object)>
<android.os.Looper: void setMessageLogging(android.util.Printer)>
<android.hardware.camera2.legacy.ParameterUtils: java.lang.String stringFromAreaList(java.util.List)>
<android.media.MediaMetadataEditor: void removeEditableKeys()>
<android.content.pm.KeySet: boolean equals(java.lang.Object)>
<android.net.wifi.WifiManager: boolean isDeviceToDeviceRttSupported()>
<android.net.IConnectivityManager: com.android.internal.net.VpnConfig getVpnConfig()>
<android.transition.TransitionSet: void setEpicenterCallback(android.transition.Transition.EpicenterCallback)>
<android.content.ContextWrapper: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>
<android.graphics.drawable.GradientDrawable: void setGradientCenter(float,float)>
<android.widget.AbsSpinner: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>
<com.android.internal.os.BatteryStatsImpl.Uid: int getUid()>
<com.android.server.net.BaseNetworkObserver: void routeRemoved(android.net.RouteInfo)>
<android.renderscript.AllocationAdapter: void readData(float[])>
<android.print.PrinterId: java.lang.String toString()>
<android.os.SELinux: boolean setFSCreateContext(java.lang.String)>
<android.hardware.usb.UsbConfiguration: void writeToParcel(android.os.Parcel,int)>
<android.webkit.WebResourceResponse: void setMimeType(java.lang.String)>
<android.filterfw.core.NativeProgram: void tearDown()>
<android.media.effect.FilterEffect: android.filterfw.core.FilterContext getFilterContext()>
<android.os.PowerManager: boolean isScreenOn()>
<android.app.admin.DevicePolicyManager: boolean isAdminActive(android.content.ComponentName)>
<android.webkit.WebViewProvider.ViewDelegate: boolean shouldDelayChildPressedState()>
<android.graphics.drawable.ClipDrawable: int getOpacity()>
<android.hardware.Sensor: java.lang.String getRequiredPermission()>
<android.text.style.TtsSpan.MoneyBuilder: android.text.style.TtsSpan.MoneyBuilder setCurrency(java.lang.String)>
<android.renderscript.Short3: void sub(android.renderscript.Short3)>
<android.net.wifi.WifiManager.WifiLock: void acquire()>
<android.view.KeyCharacterMap: int getKeyboardType()>
<android.net.TrafficStats: long getMobileRxPackets()>
<android.view.View: void onRestoreInstanceState(android.os.Parcelable)>
<android.net.wifi.p2p.WifiP2pDeviceList: void <init>(android.net.wifi.p2p.WifiP2pDeviceList)>
<android.telecom.RemoteConnection.VideoProvider.Listener: void onReceiveSessionModifyResponse(android.telecom.RemoteConnection.VideoProvider,int,android.telecom.VideoProfile,android.telecom.VideoProfile)>
<android.hardware.hdmi.HdmiPlaybackClient.OneTouchPlayCallback: void onComplete(int)>
<android.inputmethodservice.InputMethodService: void showStatusIcon(int)>
<android.content.pm.VerificationParams: boolean equals(java.lang.Object)>
<android.hardware.hdmi.HdmiPortInfo: boolean isArcSupported()>
<com.android.internal.widget.PasswordEntryKeyboardHelper: void handleBackspace()>
<com.android.internal.os.BatteryStatsImpl: void noteFlashlightOnLocked()>
<android.filterfw.core.MutableFrameFormat: void setTarget(int)>
<android.speech.tts.Voice: void writeToParcel(android.os.Parcel,int)>
<android.view.View: int computeHorizontalScrollExtent()>
<android.database.MergeCursor: void registerDataSetObserver(android.database.DataSetObserver)>
<android.renderscript.Long2: void setAt(int,long)>
<android.speech.tts.TextToSpeech: int playSilentUtterance(long,int,java.lang.String)>
<android.widget.TextView: java.lang.String getPrivateImeOptions()>
<com.android.internal.view.menu.MenuPresenter: void onRestoreInstanceState(android.os.Parcelable)>
<android.view.View: void onCloseSystemDialogs(java.lang.String)>
<android.graphics.BitmapShader: android.graphics.Shader copy()>
<android.gesture.GestureUtils: float[] spatialSampling(android.gesture.Gesture,int)>
<android.os.UpdateLock: void <init>(java.lang.String)>
<com.android.internal.inputmethod.InputMethodUtils: boolean isSystemIme(android.view.inputmethod.InputMethodInfo)>
<android.widget.AbsListView: void onFocusChanged(boolean,int,android.graphics.Rect)>
<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,int,android.media.AudioAttributes,int)>
<android.app.ListActivity: void setListAdapter(android.widget.ListAdapter)>
<android.os.Debug: int getGlobalClassInitTime()>
<android.print.PrintAttributes.Builder: android.print.PrintAttributes build()>
<android.widget.NumberPicker.OnScrollListener: void onScrollStateChange(android.widget.NumberPicker,int)>
<android.app.SearchDialog: void onStart()>
<android.view.inputmethod.InputMethodSubtype: java.lang.String getLocale()>
<android.net.wifi.p2p.WifiP2pManager: void discoverServices(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ActionListener)>
<android.net.wifi.WifiEnterpriseConfig: int getPhase2Method()>
<android.security.AndroidKeyStore: void engineSetKeyEntry(java.lang.String,java.security.Key,char[],java.security.cert.Certificate[])>
<android.media.MediaDrm: byte[] openSession()>
<android.net.LocalSocket: java.io.FileDescriptor getFileDescriptor()>
<android.media.audiofx.AudioEffect: void release()>
<com.android.internal.widget.EditableInputConnection: void <init>(android.widget.TextView)>
<android.widget.Editor.UndoInputFilter: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>
<android.net.StaticIpConfiguration: void clear()>
<android.content.pm.UserInfo: void <init>(int,java.lang.String,java.lang.String,int)>
<android.hardware.camera2.params.MeteringRectangle: android.util.Size getSize()>
<android.net.NetworkTemplate: boolean equals(java.lang.Object)>
<com.android.internal.util.AsyncChannel: android.os.Message sendMessageSynchronously(int,int,int,java.lang.Object)>
<android.view.WindowManagerPolicy: void removeWindowLw(android.view.WindowManagerPolicy.WindowState)>
<android.app.ActivityThread: android.app.LoadedApk getPackageInfo(java.lang.String,android.content.res.CompatibilityInfo,int)>
<android.os.Debug.MemoryInfo: int getOtherSwappedOut(int)>
<android.widget.ScrollBarDrawable: java.lang.String toString()>
<android.filterfw.core.FilterFunction: android.filterfw.core.Frame executeWithArgList(java.lang.Object[])>
<android.content.pm.Signature: void writeToParcel(android.os.Parcel,int)>
<android.net.wifi.WifiManager: void startWps(android.net.wifi.WpsInfo,android.net.wifi.WifiManager.WpsCallback)>
<android.app.ActivityManagerProxy: boolean convertFromTranslucent(android.os.IBinder)>
<android.animation.ValueAnimator: android.animation.ValueAnimator ofArgb(int[])>
<android.view.RenderNode: boolean setElevation(float)>
<android.os.CommonTimeConfig: int setMasterElectionGroupId(long)>
<com.android.internal.app.ProcessStats.ProcessState: void <init>(com.android.internal.app.ProcessStats,java.lang.String,int,int,java.lang.String)>
<android.widget.ActivityChooserModel: void setDefaultActivity(int)>
<android.nfc.INfcAdapter: void resumePolling()>
<android.hardware.location.IFusedLocationHardware: void injectDeviceContext(int)>
<android.os.BatteryStats: void dumpCheckinLocked(android.content.Context,java.io.PrintWriter,int,int)>
<android.content.res.ColorStateList: int getColorForState(int[],int)>
<android.webkit.URLUtil: boolean isJavaScriptUrl(java.lang.String)>
<android.media.tv.TvTrackInfo: int getVideoHeight()>
<com.android.internal.app.WindowDecorActionBar: void onContentScrollStarted()>
<android.hardware.camera2.utils.LongParcelable: int describeContents()>
<android.preference.PreferenceActivity: java.util.List getHeaders()>
<android.os.BatteryStats: int getDischargeAmountScreenOffSinceCharge()>
<android.text.style.CharacterStyle: android.text.style.CharacterStyle getUnderlying()>
<android.print.PageRange: java.lang.String toString()>
<android.media.SubtitleController: void setAnchor(android.media.SubtitleController.Anchor)>
<com.android.internal.inputmethod.InputMethodUtils.InputMethodSettings: boolean isSubtypeSelected()>
<android.opengl.GLES10: void glLightx(int,int,int)>
<android.media.MediaRouter.RouteInfo: int getVolumeMax()>
<android.telephony.ServiceState: void setStateOutOfService()>
<android.media.tv.ITvInputSession: void createOverlayView(android.os.IBinder,android.graphics.Rect)>
<android.speech.srec.MicrophoneInputStream: void <init>(int,int)>
<android.view.WindowContentFrameStats: void writeToParcel(android.os.Parcel,int)>
<android.app.Fragment: android.app.Fragment getParentFragment()>
<android.app.ActivityManager: void startLockTaskMode(int)>
<android.net.nsd.DnsSdTxtRecord: java.lang.String get(java.lang.String)>
<android.location.GpsClock: boolean hasBiasInNs()>
<com.android.internal.app.ResolverActivity: java.lang.CharSequence getTitleForAction(java.lang.String,int)>
<android.app.ActivityManagerProxy: int checkGrantUriPermission(int,java.lang.String,android.net.Uri,int,int)>
<android.media.audiofx.AudioEffect: int getParameter(byte[],byte[])>
<android.media.RemoteControlClient.MetadataEditor: android.media.RemoteControlClient.MetadataEditor putString(int,java.lang.String)>
<android.animation.Keyframe: void setFraction(float)>
<android.hardware.camera2.impl.CameraMetadataNative: boolean isEmpty()>
<android.telephony.PhoneNumberUtils: java.lang.String formatNumber(java.lang.String)>
<com.android.internal.http.multipart.StringPart: void setCharSet(java.lang.String)>
<android.service.notification.NotificationRankingUpdate: java.lang.String[] getOrderedKeys()>
<android.location.Country: int getSource()>
<android.graphics.drawable.VectorDrawable: boolean onStateChange(int[])>
<android.os.storage.StorageManager: java.lang.String[] getVolumePaths()>
<android.view.View: void setRotationX(float)>
<com.android.internal.telephony.GsmAlphabet: int charToGsm(char,boolean)>
<android.util.LogWriter: void <init>(int,java.lang.String,int)>
<android.hardware.Camera.Parameters: java.util.List getMeteringAreas()>
<android.widget.PopupWindow: void setLayoutInScreenEnabled(boolean)>
<android.media.MediaMetadataEditor: android.media.MediaMetadataEditor putObject(int,java.lang.Object)>
<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<com.android.internal.os.BatteryStatsImpl.Uid: com.android.internal.os.BatteryStatsImpl.StopwatchTimer createForegroundActivityTimerLocked()>
<android.view.inputmethod.CompletionInfo: void <init>(long,int,java.lang.CharSequence)>
<android.net.MobileLinkQualityInfo: int getRssi()>
<android.content.IntentSender: boolean equals(java.lang.Object)>
<android.filterfw.core.Frame: android.filterfw.core.FrameFormat getFormat()>
<com.android.internal.app.AlertActivity: void setupAlert()>
<android.transition.Scene: void setExitAction(java.lang.Runnable)>
<android.net.wifi.WifiManager: boolean disableNetwork(int)>
<android.drm.DrmManagerClient: int checkRightsStatus(android.net.Uri,int)>
<android.widget.SpellChecker: boolean haveWordBoundariesChanged(android.text.Editable,int,int,int,int)>
<android.app.Instrumentation: void finish(int,android.os.Bundle)>
<android.hardware.hdmi.HdmiDeviceInfo: void <init>(int,int)>
<android.hardware.camera2.marshal.impl.MarshalQueryableArray: boolean isTypeMappingSupported(android.hardware.camera2.utils.TypeReference,int)>
<android.view.SurfaceView: boolean isFixedSize()>
<android.transition.Transition: java.util.List getTargetTypes()>
<android.widget.TextView: android.text.method.MovementMethod getDefaultMovementMethod()>
<android.database.MatrixCursor: void addRow(java.lang.Object[])>
<android.view.inputmethod.InputMethodManager: void notifyUserAction()>
<android.text.format.DateFormat: boolean hasSeconds(java.lang.CharSequence)>
<android.renderscript.Element: android.renderscript.Element I8_4(android.renderscript.RenderScript)>
<android.widget.ScrollView: void draw(android.graphics.Canvas)>
<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)>
<android.net.http.Headers: void setAcceptRanges(java.lang.String)>
<android.hardware.display.DisplayManager.DisplayListener: void onDisplayRemoved(int)>
<android.net.wifi.WifiSsid: void writeToParcel(android.os.Parcel,int)>
<android.location.LocationManager: void clearTestProviderEnabled(java.lang.String)>
<com.android.internal.app.MediaRouteControllerDialog: boolean onKeyDown(int,android.view.KeyEvent)>
<android.net.wifi.WifiEnterpriseConfig: void setPhase2Method(int)>
<android.service.wallpaper.WallpaperService.Engine: boolean isVisible()>
<android.telephony.TelephonyManager: java.lang.String getIsimImpi()>
<android.view.textservice.SpellCheckerSubtype: void <init>(int,java.lang.String,java.lang.String)>
<android.inputmethodservice.InputMethodService: boolean onExtractTextContextMenuItem(int)>
<android.app.ActivityManagerProxy: void publishService(android.os.IBinder,android.content.Intent,android.os.IBinder)>
<android.view.ViewTreeObserver: void removeOnGlobalLayoutListener(android.view.ViewTreeObserver.OnGlobalLayoutListener)>
<com.android.internal.http.multipart.MultipartEntity: boolean isRepeatable()>
<android.widget.ImageButton: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.LinearLayout: boolean hasDividerBeforeChildAt(int)>
<android.view.Window: void setWindowManager(android.view.WindowManager,android.os.IBinder,java.lang.String)>
<com.android.internal.widget.TextProgressBar: void <init>(android.content.Context,android.util.AttributeSet)>
<android.graphics.Matrix: void mapVectors(float[])>
<android.renderscript.Byte4: void mul(byte)>
<android.renderscript.ProgramRaster.Builder: android.renderscript.ProgramRaster create()>
<android.telecom.Connection: void destroy()>
<android.net.NetworkFactory: void setScoreFilter(int)>
<android.text.SpannableStringBuilder: int nextSpanTransition(int,int,java.lang.Class)>
<android.widget.AutoCompleteTextView: android.widget.Filter getFilter()>
<android.content.RestrictionEntry: java.lang.String getTitle()>
<android.renderscript.Long3: android.renderscript.Long3 add(android.renderscript.Long3,long)>
<android.service.notification.NotificationRankingUpdate: int getFirstAmbientIndex()>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,char[])>
<android.content.pm.IOnAppsChangedListener: void onPackageRemoved(android.os.UserHandle,java.lang.String)>
<android.renderscript.ScriptGroup.Builder: android.renderscript.ScriptGroup.Builder addConnection(android.renderscript.Type,android.renderscript.Script.KernelID,android.renderscript.Script.KernelID)>
<android.widget.TextView: void onSelectionChanged(int,int)>
<android.app.admin.DevicePolicyManager: boolean isProfileOwnerApp(java.lang.String)>
<android.graphics.drawable.LayerDrawable: void setLayoutDirection(int)>
<android.app.DownloadManager: boolean isActiveNetworkExpensive(android.content.Context)>
<android.telecom.TelecomManager: boolean handleMmi(java.lang.String)>
<com.android.internal.widget.ToolbarWidgetWrapper: void setNavigationContentDescription(java.lang.CharSequence)>
<android.content.pm.UserInfo: boolean isGuest()>
<android.security.SystemKeyStore: android.security.SystemKeyStore getInstance()>
<android.printservice.IPrintService: void startPrinterStateTracking(android.print.PrinterId)>
<android.net.IConnectivityManager: android.os.ParcelFileDescriptor establishVpn(com.android.internal.net.VpnConfig)>
<com.android.internal.widget.DrawableHolder: android.animation.ObjectAnimator addAnimTo(long,long,java.lang.String,float,boolean)>
<android.media.audiofx.AcousticEchoCanceler: boolean isAvailable()>
<android.widget.ActivityChooserModel: android.content.pm.ResolveInfo getActivity(int)>
<android.media.projection.MediaProjection: android.media.AudioRecord createAudioRecord(int,int,int,int)>
<com.android.internal.widget.DrawableHolder: float getScaleY()>
<android.hardware.Camera.Parameters: void setFocusMode(java.lang.String)>
<android.content.ContentInsertHandler: void insert(android.content.ContentResolver,java.lang.String)>
<android.telephony.ServiceState: int getCdmaDefaultRoamingIndicator()>
<android.media.AudioGain: int defaultValue()>
<com.android.ims.internal.IImsVideoCallProvider: void sendSessionModifyRequest(android.telecom.VideoProfile)>
<android.app.Notification.WearableExtender: boolean getContentIntentAvailableOffline()>
<android.filterpacks.imageproc.AutoFixFilter: void prepare(android.filterfw.core.FilterContext)>
<android.hardware.Camera.Parameters: java.util.List getFocusAreas()>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase.CursorFactory,int,android.database.DatabaseErrorHandler)>
<android.webkit.CookieManager: boolean hasCookies()>
<android.renderscript.Long2: void div(android.renderscript.Long2)>
<android.hardware.camera2.utils.HashCodeHelpers: int hashCode(int,int,int)>
<android.filterfw.core.ProgramPort: java.lang.String toString()>
<android.hardware.camera2.marshal.Marshaler: android.hardware.camera2.utils.TypeReference getTypeReference()>
<android.net.wifi.IWifiManager: boolean saveConfiguration()>
<android.database.sqlite.SQLiteConnectionPool: void close()>
<android.widget.ImageView: int getMaxWidth()>
<android.opengl.GLES10: void glSampleCoverage(float,boolean)>
<android.util.PrefixPrinter: void println(java.lang.String)>
<android.text.Layout: int getBottomPadding()>
<android.service.textservice.SpellCheckerService.Session: android.view.textservice.SuggestionsInfo[] onGetSuggestionsMultiple(android.view.textservice.TextInfo[],int,boolean)>
<android.app.Notification.Builder: void <init>(android.content.Context)>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase create(android.database.sqlite.SQLiteDatabase.CursorFactory)>
<android.hardware.display.DisplayManager: android.hardware.display.WifiDisplayStatus getWifiDisplayStatus()>
<android.os.BatteryStats: java.util.Map getWakeupReasonStats()>
<android.view.View: boolean toGlobalMotionEvent(android.view.MotionEvent)>
<android.graphics.Point: void offset(int,int)>
<android.app.SearchableInfo: boolean shouldRewriteQueryFromData()>
<android.bluetooth.BluetoothGattCallbackWrapper: void onConfigureMTU(java.lang.String,int,int)>
<android.content.Context: int checkCallingUriPermission(android.net.Uri,int)>
<com.android.internal.widget.ScrollingTabContainerView: void setTabSelected(int)>
<android.graphics.drawable.LayerDrawable: void setOpacity(int)>
<android.graphics.Paint: void setElegantTextHeight(boolean)>
<android.opengl.GLES20: void glVertexAttrib1f(int,float)>
<android.database.IBulkCursor: int requery(android.database.IContentObserver)>
<android.widget.LinearLayout.LayoutParams: java.lang.String debug(java.lang.String)>
<com.android.internal.util.AsyncChannel: void sendMessage(int,java.lang.Object)>
<android.media.session.ISession: void setLaunchPendingIntent(android.app.PendingIntent)>
<android.mtp.MtpStorage: java.lang.String getDescription()>
<android.view.View: void setSoundEffectsEnabled(boolean)>
<android.bluetooth.BluetoothAdapter: int getScanMode()>
<com.android.internal.inputmethod.InputMethodUtils: java.lang.String getStackTrace()>
<android.app.Service: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.widget.HorizontalScrollView: void setOverScrollMode(int)>
<android.widget.CompoundButton: void setOnCheckedChangeListener(android.widget.CompoundButton.OnCheckedChangeListener)>
<android.telephony.cdma.CdmaCellLocation: boolean equals(java.lang.Object)>
<android.graphics.Color: int red(int)>
<android.os.BatteryStats: long getBluetoothStateTime(int,long,int)>
<android.widget.AbsListView: void onDetachedFromWindow()>
<android.media.MediaCodec: void releaseOutputBuffer(int,boolean)>
<android.hardware.usb.UsbDevice: int hashCode()>
<android.graphics.SurfaceTexture: void release()>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,android.util.Property,android.animation.TypeConverter,android.animation.TypeEvaluator,java.lang.Object[])>
<android.provider.Contacts.People: long tryGetMyContactsGroupId(android.content.ContentResolver)>
<android.widget.DatePickerController: int getMaxMonth()>
<android.telecom.Connection.VideoProvider: void onRequestCallDataUsage()>
<android.print.PrintAttributes: void setResolution(android.print.PrintAttributes.Resolution)>
<android.webkit.WebView: void reload()>
<android.view.LayoutInflater: void setFilter(android.view.LayoutInflater.Filter)>
<android.opengl.Matrix: void setRotateM(float[],int,float,float,float,float)>
<com.android.internal.backup.IBackupTransport: android.content.Intent dataManagementIntent()>
<android.media.MiniThumbFile: android.media.MiniThumbFile instance(android.net.Uri)>
<android.app.ActivityManagerProxy: int getRequestedOrientation(android.os.IBinder)>
<android.service.dreams.DreamService: void onDestroy()>
<android.media.MediaRouter.RouteInfo: int getVolumeHandling()>
<android.database.MergeCursor: boolean requery()>
<android.app.FragmentManager: boolean popBackStackImmediate(java.lang.String,int)>
<com.android.internal.os.Zygote: void execShell(java.lang.String)>
<android.graphics.Matrix: boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix.ScaleToFit)>
<android.graphics.drawable.Drawable: int getMinimumWidth()>
<android.filterpacks.base.CallbackFilter: void process(android.filterfw.core.FilterContext)>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQueryWithFactory(android.database.sqlite.SQLiteDatabase.CursorFactory,java.lang.String,java.lang.String[],java.lang.String)>
<android.view.View: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.drm.DrmManagerClient.OnErrorListener: void onError(android.drm.DrmManagerClient,android.drm.DrmErrorEvent)>
<android.bluetooth.IBluetoothHeadsetClient: boolean startVoiceRecognition(android.bluetooth.BluetoothDevice)>
<android.alsa.AlsaCardsParser: void scan()>
<com.android.internal.widget.SubtitleView: void <init>(android.content.Context)>
<android.net.InterfaceConfiguration: void setInterfaceDown()>
<android.app.ActivityManagerProxy: void backgroundResourcesReleased(android.os.IBinder)>
<android.widget.FrameLayout: void <init>(android.content.Context)>
<android.text.style.TtsSpan.FractionBuilder: android.text.style.TtsSpan.FractionBuilder setIntegerPart(long)>
<android.bluetooth.BluetoothGatt: boolean readDescriptor(android.bluetooth.BluetoothGattDescriptor)>
<android.os.Process: long getElapsedCpuTime()>
<android.content.IContentService: boolean getSyncAutomatically(android.accounts.Account,java.lang.String)>
<android.view.animation.RotateAnimation: void initialize(int,int,int,int)>
<android.bluetooth.le.ScanFilter: int describeContents()>
<android.util.LruCache: java.lang.Object remove(java.lang.Object)>
<android.filterpacks.base.RetargetFilter: void process(android.filterfw.core.FilterContext)>
<android.nfc.tech.MifareUltralight: android.nfc.tech.MifareUltralight get(android.nfc.Tag)>
<android.view.View: void setBackgroundColor(int)>
<android.view.Window: boolean shouldCloseOnTouch(android.content.Context,android.view.MotionEvent)>
<com.android.internal.widget.ScrollingTabContainerView: void onMeasure(int,int)>
<android.graphics.Paint: void setAntiAlias(boolean)>
<android.opengl.GLES31: void glDeleteProgramPipelines(int,int[],int)>
<android.hardware.usb.UsbDevice: boolean equals(java.lang.Object)>
<android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setRequiredNetworkType(int)>
<android.net.WebAddress: void setHost(java.lang.String)>
<com.android.internal.widget.RotarySelector: void <init>(android.content.Context)>
<android.inputmethodservice.KeyboardView: void invalidateAllKeys()>
<android.media.tv.TvTrackInfo: int getAudioSampleRate()>
<android.app.Notification.Action.Builder: void <init>(int,java.lang.CharSequence,android.app.PendingIntent)>
<android.text.style.URLSpan: void writeToParcel(android.os.Parcel,int)>
<android.view.View: void playSoundEffect(int)>
<android.view.accessibility.AccessibilityWindowInfo: android.view.accessibility.AccessibilityWindowInfo obtain(android.view.accessibility.AccessibilityWindowInfo)>
<android.widget.ProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.internal.util.FastPrintWriter: void print(char[])>
<android.telephony.PhoneNumberUtils: void formatNanpNumber(android.text.Editable)>
<com.android.internal.telephony.ISub: android.telephony.SubInfoRecord getSubInfoForSubscriber(long)>
<android.inputmethodservice.ExtractEditText: void setExtractedText(android.view.inputmethod.ExtractedText)>
<android.opengl.GLES20: void glUniform4i(int,int,int,int,int)>
<android.animation.LayoutTransition: void showChild(android.view.ViewGroup,android.view.View)>
<android.appwidget.AppWidgetHostView: void updateAppWidgetSize(android.os.Bundle,int,int,int,int)>
<android.opengl.GLES10: void glFogfv(int,java.nio.FloatBuffer)>
<android.webkit.CookieManager: boolean acceptCookie()>
<android.app.QueuedWork: void add(java.lang.Runnable)>
<com.android.internal.os.BatteryStatsImpl: int getDischargeAmountScreenOn()>
<android.text.style.TtsSpan.OrdinalBuilder: android.text.style.TtsSpan.OrdinalBuilder setNumber(java.lang.String)>
<android.service.notification.ZenModeConfig: int describeContents()>
<android.location.LocationManager: void requestSingleUpdate(android.location.Criteria,android.location.LocationListener,android.os.Looper)>
<android.view.Window.Callback: boolean onMenuOpened(int,android.view.Menu)>
<android.view.OrientationEventListener: void <init>(android.content.Context,int)>
<android.view.inputmethod.CursorAnchorInfo: void writeToParcel(android.os.Parcel,int)>
<android.hardware.input.InputManager: void unregisterInputDeviceListener(android.hardware.input.InputManager.InputDeviceListener)>
<android.view.accessibility.AccessibilityNodeInfo: boolean performAction(int)>
<android.media.Image: android.graphics.Rect getCropRect()>
<android.renderscript.ScriptIntrinsicColorMatrix: void setRGBtoYUV()>
<android.renderscript.ProgramFragmentFixedFunction.Builder: android.renderscript.ProgramFragmentFixedFunction.Builder setTexture(android.renderscript.ProgramFragmentFixedFunction.Builder.EnvMode,android.renderscript.ProgramFragmentFixedFunction.Builder.Format,int)>
<android.appwidget.AppWidgetManager: android.appwidget.AppWidgetManager getInstance(android.content.Context)>
<android.widget.Advanceable: void advance()>
<android.view.Display: float[] getSupportedRefreshRates()>
<com.android.internal.view.IInputContext: void setComposingText(java.lang.CharSequence,int)>
<android.text.method.BaseMovementMethod: boolean pageDown(android.widget.TextView,android.text.Spannable)>
<com.google.android.gles_jni.GLImpl: void glBindBuffer(int,int)>
<android.util.JsonReader: java.lang.String nextString()>
<android.telephony.SignalStrength: int getLteRssnr()>
<android.webkit.WebView: void onDetachedFromWindowInternal()>
<android.widget.SlidingDrawer: void open()>
<android.view.View: void setY(float)>
<android.hardware.camera2.utils.SizeAreaComparator: int compare(android.util.Size,android.util.Size)>
<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>
<android.transition.Fade: android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>
<android.app.ActivityManager.RunningAppProcessInfo: int procStateToImportance(int)>
<android.app.admin.DevicePolicyManager: void setRestrictionsProvider(android.content.ComponentName,android.content.ComponentName)>
<android.telecom.ParcelableCall: int getCapabilities()>
<android.content.ContextWrapper: android.content.Context getBaseContext()>
<android.widget.AutoCompleteTextView: void replaceText(java.lang.CharSequence)>
<android.content.pm.PackageParser: void collectManifestDigest(android.content.pm.PackageParser.Package)>
<com.android.internal.telephony.GsmAlphabet: int countGsmSeptetsUsingTables(java.lang.CharSequence,boolean,int,int)>
<android.view.ViewRootImpl: void dumpGfxInfo(int[])>
<com.android.internal.telephony.ISms: boolean isSMSPromptEnabled()>
<android.app.WallpaperManager: void forgetLoadedWallpaper()>
<android.content.pm.ServiceInfo: int describeContents()>
<android.content.Intent: java.lang.String resolveType(android.content.ContentResolver)>
<android.print.PrintDocumentAdapter.LayoutResultCallback: void onLayoutCancelled()>
<android.net.LinkAddress: int getNetworkPrefixLength()>
<android.widget.RemoteViews: void mergeRemoteViews(android.widget.RemoteViews)>
<android.renderscript.RenderScriptGL: void <init>(android.content.Context,android.renderscript.RenderScriptGL.SurfaceConfig)>
<android.net.wifi.IWifiManager: boolean isBatchedScanSupported()>
<android.view.View: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<android.hardware.camera2.legacy.RequestHolder: boolean hasJpegTargets()>
<android.gesture.GestureLibrary: boolean save()>
<android.media.MediaDescription: java.lang.String toString()>
<android.renderscript.FieldPacker: void addI32(int)>
<android.gesture.GestureStore: void setOrientationStyle(int)>
<android.net.wifi.WifiManager: boolean removeNetwork(int)>
<com.android.internal.telecom.IConnectionServiceAdapter: void setVideoProvider(java.lang.String,com.android.internal.telecom.IVideoProvider)>
<android.widget.WrapperListAdapter: android.widget.ListAdapter getWrappedAdapter()>
<android.hardware.camera2.legacy.CameraDeviceState.CameraDeviceStateListener: void onCaptureResult(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.legacy.RequestHolder)>
<android.media.audiofx.Virtualizer: android.media.audiofx.Virtualizer.Settings getProperties()>
<android.widget.Switch: void setThumbDrawable(android.graphics.drawable.Drawable)>
<android.view.WindowCallbackWrapper: boolean onMenuOpened(int,android.view.Menu)>
<android.bluetooth.BluetoothAdapter: void finalize()>
<android.webkit.WebViewClient: void onFormResubmission(android.webkit.WebView,android.os.Message,android.os.Message)>
<android.provider.DocumentsContract: android.net.Uri buildSearchDocumentsUri(java.lang.String,java.lang.String,java.lang.String)>
<android.hardware.location.IGeofenceHardware: boolean registerForMonitorStateChangeCallback(int,android.hardware.location.IGeofenceHardwareMonitorCallback)>
<com.android.internal.statusbar.IStatusBar: void animateCollapsePanels()>
<android.webkit.WebChromeClient: void onCloseWindow(android.webkit.WebView)>
<android.webkit.WebView: void clearFormData()>
<android.app.Notification.BigTextStyle: void addExtras(android.os.Bundle)>
<com.android.internal.widget.SwipeDismissLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<android.media.IMediaRouterService: void setSelectedRoute(android.media.IMediaRouterClient,java.lang.String,boolean)>
<android.view.WindowManagerPolicy.WindowManagerFuncs: void unregisterPointerEventListener(android.view.WindowManagerPolicy.PointerEventListener)>
<android.os.storage.IMountService: int finalizeSecureContainer(java.lang.String)>
<android.net.MobileDataStateTracker: boolean teardown()>
<android.text.method.MetaKeyKeyListener: long handleKeyDown(long,int,android.view.KeyEvent)>
<android.os.BatteryStats.Uid: void noteFullWifiLockAcquiredLocked(long)>
<android.app.Instrumentation: void setInTouchMode(boolean)>
<android.preference.EditTextPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.AbsListView: void onRtlPropertiesChanged(int)>
<android.app.ApplicationThreadProxy: void dumpService(java.io.FileDescriptor,android.os.IBinder,java.lang.String[])>
<android.app.AppOpsManager.OnOpChangedInternalListener: void onOpChanged(int,java.lang.String)>
<com.android.internal.util.TypedProperties: double getDouble(java.lang.String,double)>
<android.view.WindowManagerPolicy: int getInputMethodWindowVisibleHeightLw()>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumSymbols(android.content.ComponentName,int)>
<android.nfc.NdefRecord: void writeToParcel(android.os.Parcel,int)>
<android.text.style.AlignmentSpan: android.text.Layout.Alignment getAlignment()>
<android.hardware.Camera.Parameters: void setGpsLatitude(double)>
<android.filterpacks.imageproc.DocumentaryFilter: void process(android.filterfw.core.FilterContext)>
<android.preference.ListPreference: void setValue(java.lang.String)>
<android.content.pm.PackageParser: void setDisplayMetrics(android.util.DisplayMetrics)>
<android.transition.TransitionManager: void beginDelayedTransition(android.view.ViewGroup,android.transition.Transition)>
<android.location.LocationRequest: android.location.LocationRequest setProvider(java.lang.String)>
<com.android.internal.widget.DecorToolbar: void setLogo(android.graphics.drawable.Drawable)>
<android.os.UEventObserver.UEvent: java.lang.String toString()>
<android.os.BatteryStats: java.lang.String getHistoryTagPoolString(int)>
<android.nfc.INfcAdapter: boolean disableNdefPush()>
<android.widget.Scroller: void fling(int,int,int,int,int,int,int,int)>
<android.os.INetworkManagementService: void removeInterfaceFromNetwork(java.lang.String,int)>
<android.os.CommonTimeConfig: long getMasterElectionGroupId()>
<android.view.accessibility.IAccessibilityInteractionConnection: void performAccessibilityAction(long,int,android.os.Bundle,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long)>
<android.bluetooth.BluetoothGatt: void close()>
<android.telephony.SignalStrength: int getCdmaEcio()>
<android.opengl.GLES30: void glInvalidateFramebuffer(int,int,java.nio.IntBuffer)>
<android.telecom.RemoteConnectionManager: void conferenceRemoteConnections(android.telecom.RemoteConnection,android.telecom.RemoteConnection)>
<android.renderscript.Matrix4f: void loadMultiply(android.renderscript.Matrix4f,android.renderscript.Matrix4f)>
<android.net.wifi.WifiConnectionStatistics: void incrementOrAddUntrusted(java.lang.String,int,int)>
<android.media.MediaMuxer: void setLocation(float,float)>
<android.media.MediaFocusControl: boolean registerRemoteControlDisplay(android.media.IRemoteControlDisplay,int,int)>
<android.text.TextWatcher: void afterTextChanged(android.text.Editable)>
<android.media.SoundPool.Builder: android.media.SoundPool.Builder setAudioAttributes(android.media.AudioAttributes)>
<android.location.LocationListener: void onLocationChanged(android.location.Location)>
<android.app.SearchManager: void startSearch(java.lang.String,boolean,android.content.ComponentName,android.os.Bundle,boolean)>
<android.content.pm.PackageInfo: void writeToParcel(android.os.Parcel,int)>
<android.widget.CursorTreeAdapter: int getGroupCount()>
<android.os.Bundle: java.util.ArrayList getCharSequenceArrayList(java.lang.String)>
<android.app.ActivityManagerProxy: void setDebugApp(java.lang.String,boolean,boolean)>
<android.nfc.NfcAdapter: void enableForegroundNdefPush(android.app.Activity,android.nfc.NdefMessage)>
<android.media.MediaRouter.UserRouteInfo: void setRemoteControlClient(android.media.RemoteControlClient)>
<android.accounts.AccountManagerResponse: void writeToParcel(android.os.Parcel,int)>
<android.filterpacks.imageproc.ImageStitcher: void <init>(java.lang.String)>
<android.view.MenuItem: android.view.MenuItem setAlphabeticShortcut(char)>
<android.os.Parcel: void writeByte(byte)>
<android.content.SharedPreferences: long getLong(java.lang.String,long)>
<com.android.internal.widget.PasswordEntryKeyboardHelper: void onText(java.lang.CharSequence)>
<android.net.NetworkState: void <init>(android.net.NetworkInfo,android.net.LinkProperties,android.net.NetworkCapabilities,java.lang.String,java.lang.String)>
<android.graphics.drawable.InsetDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>
<android.speech.tts.SynthesisRequest: java.lang.String getText()>
<android.os.BinderProxy: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>
<android.app.Notification.Style: void populateTickerView(android.app.Notification)>
<android.nfc.TechListParcel: java.lang.String[][] getTechLists()>
<android.net.NetworkInfo: void <init>(int,int,java.lang.String,java.lang.String)>
<com.android.internal.view.menu.MenuBuilder: int size()>
<android.net.wifi.WifiManager: void pollBatchedScan()>
<android.view.ViewParent: void onNestedScrollAccepted(android.view.View,android.view.View,int)>
<android.net.wifi.WifiManager: boolean isBatchedScanSupported()>
<android.service.textservice.SpellCheckerService.Session: void setInternalISpellCheckerSession(android.service.textservice.SpellCheckerService.InternalISpellCheckerSession)>
<android.view.animation.GridLayoutAnimationController: int getDirection()>
<com.android.internal.view.menu.IconMenuView: void onDetachedFromWindow()>
<android.content.pm.PathPermission: java.lang.String getWritePermission()>
<com.android.internal.widget.multiwaveview.TargetDrawable: void <init>(android.content.res.Resources,int)>
<com.android.internal.app.RestrictionsPinActivity: void performPositiveButtonAction()>
<android.nfc.NfcActivityManager: void setNdefPushContentUri(android.app.Activity,android.net.Uri[])>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setRecycleOnMeasureEnabled(boolean)>
<android.filterfw.core.FilterFunction: android.filterfw.core.FilterContext getContext()>
<android.widget.ScrollView: void <init>(android.content.Context)>
<android.webkit.WebSettings: void setUseWebViewBackgroundForOverscrollBackground(boolean)>
<android.bluetooth.IBluetoothGatt: void writeCharacteristic(int,java.lang.String,int,int,android.os.ParcelUuid,int,android.os.ParcelUuid,int,int,byte[])>
<android.net.NetworkStats: android.net.NetworkStats.Entry getValues(int,android.net.NetworkStats.Entry)>
<android.media.tv.TvView: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>
<android.text.style.TextAppearanceSpan: void <init>(android.os.Parcel)>
<android.app.Fragment.SavedState: int describeContents()>
<android.media.IMediaRouterService: void registerClientAsUser(android.media.IMediaRouterClient,java.lang.String,int)>
<android.net.INetworkPolicyListener: void onUidRulesChanged(int,int)>
<android.telephony.PreciseDataConnectionState: int getDataConnectionState()>
<android.view.ViewParent: void clearChildFocus(android.view.View)>
<com.android.internal.app.WindowDecorActionBar.ActionModeImpl: java.lang.CharSequence getTitle()>
<android.opengl.GLES10: void glLoadMatrixx(java.nio.IntBuffer)>
<com.google.android.gles_jni.GLImpl: void glGetLightfv(int,int,java.nio.FloatBuffer)>
<android.app.usage.TimeSparseArray: int closestIndexOnOrAfter(long)>
<android.telephony.CellSignalStrengthLte: void copyFrom(android.telephony.CellSignalStrengthLte)>
<android.view.View: android.os.Parcelable onSaveInstanceState()>
<android.view.View: void setHovered(boolean)>
<android.security.IKeyChainService: boolean reset()>
<android.filterfw.core.FrameFormat: int getLength()>
<android.app.IActivityManager: boolean startNextMatchingActivity(android.os.IBinder,android.content.Intent,android.os.Bundle)>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator scaleYBy(float)>
<android.renderscript.Allocation: void copy1DRangeFrom(int,int,short[])>
<android.view.WindowManagerPolicy: boolean isScreenOn()>
<android.widget.AdapterViewFlipper: void setFlipInterval(int)>
<android.inputmethodservice.Keyboard.Key: void onReleased(boolean)>
<android.net.http.AndroidHttpClientConnection: void flush()>
<android.hardware.usb.UsbManager: void requestPermission(android.hardware.usb.UsbAccessory,android.app.PendingIntent)>
<android.telephony.TelephonyManager: boolean getSimplifiedNetworkSettingsEnabledForSubscriber(long)>
<android.telephony.VoLteServiceState: void <init>(android.telephony.VoLteServiceState)>
<com.android.internal.view.menu.MenuPopupHelper: boolean isShowing()>
<android.content.DefaultDataHandler: void insert(android.content.ContentResolver,java.lang.String)>
<android.text.TextWatcher: void beforeTextChanged(java.lang.CharSequence,int,int,int)>
<android.app.ApplicationThreadProxy: void updateTimeZone()>
<android.view.View: void clearAccessibilityFocus()>
<android.content.ContentProviderNative: android.os.IBinder asBinder()>
<android.graphics.Paint: void setSubpixelText(boolean)>
<com.android.internal.os.BatteryStatsImpl.Uid: android.util.SparseArray getPidStats()>
<android.content.pm.PackageInstaller: android.content.pm.PackageInstaller.SessionInfo getSessionInfo(int)>
<android.location.Criteria: int getBearingAccuracy()>
<android.location.GpsNavigationMessage: short getSubmessageId()>
<android.telephony.SignalStrength: int describeContents()>
<com.android.internal.view.animation.NativeInterpolatorFactoryHelper: long createCycleInterpolator(float)>
<android.content.pm.PackageParser: android.content.pm.ServiceInfo generateServiceInfo(android.content.pm.PackageParser.Service,int,android.content.pm.PackageUserState,int)>
<android.text.method.MetaKeyKeyListener: int getMetaState(java.lang.CharSequence,android.view.KeyEvent)>
<com.android.net.IProxyService: void setPacFile(java.lang.String)>
<android.content.ContentProvider: java.lang.String getWritePermission()>
<android.opengl.GLES10: void glOrthof(float,float,float,float,float,float)>
<android.webkit.WebView: void onVisibilityChanged(android.view.View,int)>
<android.content.res.AssetManager.AssetInputStream: void finalize()>
<com.android.internal.app.WindowDecorActionBar: void addTab(android.app.ActionBar.Tab,boolean)>
<android.media.MediaExtractor: boolean hasCacheReachedEndOfStream()>
<android.renderscript.Long4: long get(int)>
<android.widget.OverScroller: void setFinalY(int)>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>
<android.service.wallpaper.WallpaperService.Engine: void setFixedSizeAllowed(boolean)>
<android.os.IServiceManager: android.os.IBinder getService(java.lang.String)>
<android.content.pm.PackageParser.Component: void <init>(android.content.pm.PackageParser.Component)>
<android.os.Parcel: double readDouble()>
<android.net.wifi.p2p.WifiP2pDevice: void updateSupplicantDetails(android.net.wifi.p2p.WifiP2pDevice)>
<android.renderscript.Element: android.renderscript.Element RGBA_5551(android.renderscript.RenderScript)>
<android.media.AudioRoutesInfo: void writeToParcel(android.os.Parcel,int)>
<android.widget.TextView: void onWindowFocusChanged(boolean)>
<android.webkit.WebViewProvider: void clearSslPreferences()>
<android.speech.tts.TextToSpeechService: void onDestroy()>
<android.opengl.GLES11Ext: void glWeightPointerOES(int,int,int,java.nio.Buffer)>
<android.net.RssiCurve: java.lang.String toString()>
<android.graphics.drawable.BitmapDrawable: boolean canApplyTheme()>
<android.widget.Spinner: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.internal.os.SamplingProfilerIntegration: void writeZygoteSnapshot()>
<android.content.AsyncTaskLoader: boolean isLoadInBackgroundCanceled()>
<android.net.LocalServerSocket: void close()>
<android.util.TypedValue: java.lang.String toString()>
<android.hardware.camera2.legacy.LegacyMetadataMapper: android.hardware.camera2.CameraCharacteristics createCharacteristics(android.hardware.Camera.Parameters,android.hardware.Camera.CameraInfo)>
<android.media.tv.TvStreamConfig: int getStreamId()>
<android.app.admin.DeviceAdminInfo: android.content.pm.ActivityInfo getActivityInfo()>
<android.opengl.GLES20: boolean glIsRenderbuffer(int)>
<android.content.Intent: void removeExtra(java.lang.String)>
<android.renderscript.Sampler: android.renderscript.Sampler MIRRORED_REPEAT_NEAREST(android.renderscript.RenderScript)>
<android.hardware.camera2.CameraCaptureSession.StateCallback: void onClosed(android.hardware.camera2.CameraCaptureSession)>
<android.view.ActionProvider: android.view.View onCreateActionView()>
<android.app.backup.IFullBackupRestoreObserver: void onRestorePackage(java.lang.String)>
<android.app.FragmentManagerImpl: void dispatchConfigurationChanged(android.content.res.Configuration)>
<android.view.animation.LinearInterpolator: float getInterpolation(float)>
<android.filterfw.core.ShaderProgram: void finalize()>
<android.preference.DialogPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.TabWidget: void onSizeChanged(int,int,int,int)>
<android.widget.MediaController: void show(int)>
<android.media.tv.TvTrackInfo.Builder: android.media.tv.TvTrackInfo build()>
<android.filterpacks.videosrc.MediaSource: void pauseVideo(boolean)>
<android.os.PerformanceCollector: void beginSnapshot(java.lang.String)>
<android.filterpacks.videosink.MediaEncoderFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>
<android.net.wifi.WifiConfiguration: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.app.ProcessStats.ServiceState: boolean isInUse()>
<android.net.INetworkPolicyManager: void removeUidPolicy(int,int)>
<com.android.internal.util.StateMachine: void logv(java.lang.String)>
<android.location.Criteria: void writeToParcel(android.os.Parcel,int)>
<android.text.method.BaseMovementMethod: void initialize(android.widget.TextView,android.text.Spannable)>
<android.media.ImageReader: void <init>(int,int,int,int)>
<com.android.internal.view.menu.BaseMenuPresenter: boolean flagActionItems()>
<android.transition.VisibilityPropagation: void captureValues(android.transition.TransitionValues)>
<android.widget.CalendarView.CalendarViewDelegate: int getSelectedWeekBackgroundColor()>
<android.telephony.CellSignalStrengthGsm: int describeContents()>
<com.android.internal.app.IBatteryStats: void noteBluetoothOn()>
<android.net.http.AndroidHttpClientConnection: void sendRequestEntity(org.apache.http.HttpEntityEnclosingRequest)>
<android.opengl.GLES31Ext: boolean glIsEnablediEXT(int,int)>
<android.telephony.CellIdentityCdma: java.lang.String toString()>
<android.print.IPrinterDiscoveryObserver: void onPrintersRemoved(android.content.pm.ParceledListSlice)>
<android.webkit.WebViewProvider.ViewDelegate: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.bluetooth.IBluetoothGatt: void endServiceDeclaration(int)>
<android.hardware.Camera.Parameters: void setGpsLongitude(double)>
<android.transition.Transition.TransitionListenerAdapter: void onTransitionPause(android.transition.Transition)>
<android.net.ConnectivityManager: boolean requestRouteToHostAddress(int,java.net.InetAddress)>
<android.content.pm.PackageInstaller: void setPermissionsResult(int,boolean)>
<com.android.internal.os.BatteryStatsImpl: long getMobileRadioActiveUnknownTime(int)>
<com.android.internal.view.animation.FallbackLUTInterpolator: long createNativeInterpolator(android.animation.TimeInterpolator,long)>
<android.media.MediaRecorder: void setAudioChannels(int)>
<android.content.ContentValues: boolean containsKey(java.lang.String)>
<android.text.style.SubscriptSpan: int getSpanTypeId()>
<android.database.CursorWrapper: boolean isLast()>
<android.hardware.camera2.impl.CallbackProxies.SessionStateCallbackProxy: void onActive(android.hardware.camera2.CameraCaptureSession)>
<android.graphics.Shader: boolean getLocalMatrix(android.graphics.Matrix)>
<android.os.IUserManager: boolean setRestrictionsChallenge(java.lang.String)>
<android.app.WallpaperManager: boolean hasResourceWallpaper(int)>
<android.webkit.WebResourceResponse: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.util.Map,java.io.InputStream)>
<android.filterpacks.imageproc.GrainFilter: void process(android.filterfw.core.FilterContext)>
<android.util.Pools.SynchronizedPool: boolean release(java.lang.Object)>
<com.android.ims.internal.IImsVideoCallProvider: void requestCallDataUsage()>
<android.content.ContentResolver: android.content.ContentProviderResult[] applyBatch(java.lang.String,java.util.ArrayList)>
<android.text.Selection: boolean moveDown(android.text.Spannable,android.text.Layout)>
<android.app.IApplicationThread: void dumpActivity(java.io.FileDescriptor,android.os.IBinder,java.lang.String,java.lang.String[])>
<android.app.Instrumentation: android.app.Instrumentation.ActivityResult execStartActivityAsCaller(android.content.Context,android.os.IBinder,android.os.IBinder,android.app.Activity,android.content.Intent,int,android.os.Bundle,int)>
<android.bluetooth.IBluetooth: boolean fetchRemoteUuids(android.bluetooth.BluetoothDevice)>
<android.content.Intent: android.content.Intent setTypeAndNormalize(java.lang.String)>
<android.os.INetworkManagementService: void enableNat(java.lang.String,java.lang.String)>
<android.view.View: float getTranslationX()>
<android.telephony.SignalStrength: int getLteRsrp()>
<android.filterpacks.imageproc.DrawRectFilter: void <init>(java.lang.String)>
<android.database.ContentObservable: void dispatchChange(boolean)>
<android.bluetooth.BluetoothAdapter: android.bluetooth.le.BluetoothLeScanner getBluetoothLeScanner()>
<android.filterfw.core.SimpleFrame: void releaseNativeAllocation()>
<android.bluetooth.BluetoothMap: boolean connect(android.bluetooth.BluetoothDevice)>
<android.app.ActivityManagerProxy: android.app.IActivityManager.WaitResult startActivityAndWait(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,int)>
<android.net.NetworkRequest.Builder: android.net.NetworkRequest.Builder setLinkDownstreamBandwidthKbps(int)>
<android.net.IConnectivityManager: void startLegacyVpn(com.android.internal.net.VpnProfile)>
<android.webkit.WebView: void removeJavascriptInterface(java.lang.String)>
<android.widget.RelativeLayout.LayoutParams: int[] getRules(int)>
<android.widget.SpinnerAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>
<android.net.wifi.WifiConfiguration: android.net.IpConfiguration getIpConfiguration()>
<android.renderscript.Long2: void mul(long)>
<android.app.ActivityManager: int addAppTask(android.app.Activity,android.content.Intent,android.app.ActivityManager.TaskDescription,android.graphics.Bitmap)>
<android.telecom.Connection.VideoProvider: void handleCallSessionEvent(int)>
<android.speech.tts.TextToSpeech: java.util.Locale getLanguage()>
<com.android.internal.widget.ResolverDrawerLayout: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>
<android.net.http.LoggingEventHandler: void data(byte[],int)>
<android.telecom.Conference: void onSwap()>
<android.media.MediaFocusControl: void unregisterMediaButtonIntentAsync(android.app.PendingIntent)>
<android.bluetooth.IBluetoothA2dp: void setAvrcpAbsoluteVolume(int)>
<android.text.method.AllCapsTransformationMethod: void <init>(android.content.Context)>
<android.view.inputmethod.CompletionInfo: java.lang.CharSequence getText()>
<android.app.IActivityManager: void unbroadcastIntent(android.app.IApplicationThread,android.content.Intent,int)>
<android.service.notification.StatusBarNotification: java.lang.String getKey()>
<android.telephony.CellSignalStrengthGsm: int getDbm()>
<android.content.pm.FeatureInfo: java.lang.String toString()>
<android.text.style.TtsSpan.DecimalBuilder: android.text.style.TtsSpan.DecimalBuilder setArgumentsFromDouble(double,int,int)>
<android.hardware.hdmi.IHdmiControlService: void addHdmiMhlVendorCommandListener(android.hardware.hdmi.IHdmiMhlVendorCommandListener)>
<android.view.View: int getScrollX()>
<android.widget.NumberPicker.Formatter: java.lang.String format(int)>
<android.view.MotionEvent: void finalize()>
<android.graphics.Bitmap: int describeContents()>
<com.android.server.AppWidgetBackupBridge: void restoreStarting(int)>
<android.print.PageRange: int getSize()>
<android.webkit.WebView: void dumpViewHierarchyWithProperties(java.io.BufferedWriter,int)>
<android.transition.TransitionManager: void setTransition(android.transition.Scene,android.transition.Transition)>
<android.net.wifi.WpsInfo: void writeToParcel(android.os.Parcel,int)>
<android.widget.ListPopupWindow: boolean performItemClick(int)>
<android.widget.ListPopupWindow: android.graphics.drawable.Drawable getBackground()>
<android.widget.RemoteViewsAdapter: void setVisibleRangeHint(int,int)>
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: int getTransactionId()>
<android.renderscript.Double3: void setValues(double,double,double)>
<android.animation.TypeConverter: java.lang.Object convert(java.lang.Object)>
<com.android.internal.os.BatteryStatsImpl: void noteWifiStateLocked(int,java.lang.String)>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setInterpolator(android.animation.TimeInterpolator)>
<com.android.internal.content.PackageHelper: boolean destroySdDir(java.lang.String)>
<android.telephony.SignalStrength: int getGsmAsuLevel()>
<android.os.BinderProxy: boolean unlinkToDeath(android.os.IBinder.DeathRecipient,int)>
<android.view.Display: long getAppVsyncOffsetNanos()>
<android.content.pm.PackageCleanItem: int describeContents()>
<android.graphics.pdf.PdfDocument.PageInfo.Builder: android.graphics.pdf.PdfDocument.PageInfo create()>
<android.content.Context: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<android.view.View: void sendAccessibilityEvent(int)>
<com.android.internal.widget.PasswordEntryKeyboard: boolean setShifted(boolean)>
<android.telephony.TelephonyManager: java.lang.String getCdmaEriText(long)>
<android.app.admin.DevicePolicyManager: void clearDeviceOwnerApp(java.lang.String)>
<android.preference.PreferenceFrameLayout.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<android.media.session.MediaSession.Callback: void onPlay()>
<android.widget.TextView: android.content.res.ColorStateList getTextColors(android.content.Context,android.content.res.TypedArray)>
<android.view.Window: void openPanel(int,android.view.KeyEvent)>
<android.hardware.soundtrigger.SoundTrigger.ModuleProperties: void writeToParcel(android.os.Parcel,int)>
<android.widget.TextView: android.text.method.TransformationMethod getTransformationMethod()>
<android.hardware.hdmi.HdmiDeviceInfo: int idForHardware(int)>
<android.view.Choreographer: long getFrameIntervalNanos()>
<android.inputmethodservice.InputMethodService: void switchInputMethod(java.lang.String)>
<android.app.Fragment: void setSharedElementEnterTransition(android.transition.Transition)>
<android.nfc.tech.NfcBarcode: byte[] getBarcode()>
<android.graphics.pdf.PdfRenderer: void <init>(android.os.ParcelFileDescriptor)>
<android.media.TtmlNode: boolean isActive(long,long)>
<android.filterfw.core.KeyValueMap: float getFloat(java.lang.String)>
<android.hardware.camera2.impl.CameraDeviceImpl: void createCaptureSession(java.util.List,android.hardware.camera2.CameraCaptureSession.StateCallback,android.os.Handler)>
<android.app.ExpandableListActivity: boolean onChildClick(android.widget.ExpandableListView,android.view.View,int,int,long)>
<android.content.ClipData.Item: java.lang.CharSequence coerceToText(android.content.Context)>
<android.net.ProxyInfo: void <init>(android.net.ProxyInfo)>
<android.view.animation.Animation: android.view.animation.Animation clone()>
<android.text.style.LeadingMarginSpan.Standard: void <init>(android.os.Parcel)>
<android.app.Activity: void onNewActivityOptions(android.app.ActivityOptions)>
<android.app.ISearchManager: android.content.ComponentName getAssistIntent(int)>
<android.telephony.CellInfoWcdma: android.telephony.CellInfoWcdma createFromParcelBody(android.os.Parcel)>
<com.android.internal.app.ProcessMap: java.lang.Object get(java.lang.String,int)>
<android.net.wifi.WifiManager: boolean setWifiApConfiguration(android.net.wifi.WifiConfiguration)>
<android.speech.srec.WaveHeader: java.lang.String toString()>
<android.emoji.EmojiFactory: android.graphics.Bitmap getBitmapFromAndroidPua(int)>
<android.gesture.GestureOverlayView: void setGestureStrokeLengthThreshold(float)>
<android.text.style.UnderlineSpan: int getSpanTypeId()>
<android.telephony.PreciseDataConnectionState: int describeContents()>
<android.content.ContentProviderClient: android.content.res.AssetFileDescriptor openTypedAssetFileDescriptor(android.net.Uri,java.lang.String,android.os.Bundle,android.os.CancellationSignal)>
<android.view.ActionMode: android.view.View getCustomView()>
<android.bluetooth.BluetoothAdapter.StateChangeCallbackWrapper: void onBluetoothStateChange(boolean)>
<android.os.SystemService: android.os.SystemService.State getState(java.lang.String)>
<android.content.Intent: java.lang.CharSequence getCharSequenceExtra(java.lang.String)>
<android.preference.Preference: void setIntent(android.content.Intent)>
<android.speech.srec.Recognizer: java.lang.String getConfigDir(java.util.Locale)>
<android.util.AtomicFile: void delete()>
<android.widget.GridLayout: void onViewRemoved(android.view.View)>
<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothSocket createScoSocket()>
<android.view.ViewGroup: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<android.database.sqlite.SqliteWrapper: android.net.Uri insert(android.content.Context,android.content.ContentResolver,android.net.Uri,android.content.ContentValues)>
<android.filterpacks.imageproc.RotateFilter: void process(android.filterfw.core.FilterContext)>
<android.widget.RadioGroup: int getCheckedRadioButtonId()>
<android.preference.RingtonePreference: java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int)>
<android.graphics.drawable.AnimatedRotateDrawable: android.graphics.drawable.Drawable getDrawable()>
<com.android.internal.inputmethod.InputMethodSubtypeSwitchingController: void resetCircularListLocked(android.content.Context)>
<com.android.internal.telecom.IVideoProvider: void sendSessionModifyResponse(android.telecom.VideoProfile)>
<android.location.Address: void setCountryName(java.lang.String)>
<android.os.IPowerManager: void setTemporaryScreenBrightnessSettingOverride(int)>
<android.nfc.IAppCallback: void onNdefPushComplete()>
<android.renderscript.ProgramStore.Builder: android.renderscript.ProgramStore.Builder setDepthFunc(android.renderscript.ProgramStore.DepthFunc)>
<android.os.Debug: long getNativeHeapSize()>
<android.hardware.camera2.CaptureRequest.Key: java.lang.String getName()>
<android.os.Bundle: java.util.ArrayList getStringArrayList(java.lang.String)>
<android.opengl.GLES11: void glTexCoordPointer(int,int,int,int)>
<android.webkit.WebView: boolean canGoBack()>
<android.drm.DrmSupportInfo: boolean equals(java.lang.Object)>
<android.net.http.AndroidHttpClient: org.apache.http.entity.AbstractHttpEntity getCompressedEntity(byte[],android.content.ContentResolver)>
<android.security.KeyChain: android.security.KeyChain.KeyChainConnection bindAsUser(android.content.Context,android.os.UserHandle)>
<android.filterfw.core.Filter: android.filterfw.core.FrameFormat getInputFormat(java.lang.String)>
<android.filterpacks.imageproc.BlackWhiteFilter: void <init>(java.lang.String)>
<android.filterfw.core.Frame: boolean isReadOnly()>
<android.widget.AbsSeekBar: void onRtlPropertiesChanged(int)>
<android.database.sqlite.SQLiteDatabase: void beginTransactionWithListenerNonExclusive(android.database.sqlite.SQLiteTransactionListener)>
<android.os.Bundle: void putIBinder(java.lang.String,android.os.IBinder)>
<android.widget.AppSecurityPermissions.PermissionItemView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.os.INetworkManagementService: void enableIpv6(java.lang.String)>
<android.widget.PopupMenu: android.view.Menu getMenu()>
<android.filterpacks.base.InputStreamSource: void setupPorts()>
<android.content.pm.IPackageInstallerSession: void abandon()>
<android.view.GestureDetector: void <init>(android.content.Context,android.view.GestureDetector.OnGestureListener,android.os.Handler)>
<android.util.SparseIntArray: void put(int,int)>
<android.telephony.SubscriptionManager: int getDefaultSmsPhoneId()>
<android.media.IAudioService: void stopBluetoothSco(android.os.IBinder)>
<android.view.Window.Callback: boolean onMenuItemSelected(int,android.view.MenuItem)>
<android.opengl.GLES11: void glGetClipPlanef(int,float[],int)>
<android.telecom.Connection: void onAbort()>
<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem.OnActionExpandListener)>
<android.text.Layout: int getEllipsisCount(int)>
<android.view.GhostView: void setVisibility(int)>
<android.content.ClipData: void <init>(android.content.ClipData)>
<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getGroupIdLevel1ForSubscriber(long)>
<android.text.TextDirectionHeuristics.TextDirectionAlgorithm: int checkRtl(java.lang.CharSequence,int,int)>
<android.renderscript.Int4: android.renderscript.Int4 mul(android.renderscript.Int4,int)>
<android.util.ExceptionUtils: java.lang.RuntimeException wrap(java.io.IOException)>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setDestinationInExternalFilesDir(android.content.Context,java.lang.String,java.lang.String)>
<android.os.INetworkManagementService: void addLegacyRouteForNetId(int,android.net.RouteInfo,int)>
<android.preference.TwoStatePreference: void setSummaryOn(int)>
<android.webkit.PluginList: void addPlugin(android.webkit.Plugin)>
<android.widget.PopupWindow: void showAtLocation(android.view.View,int,int,int)>
<android.opengl.GLU: int gluProject(float,float,float,float[],int,float[],int,int[],int,float[],int)>
<android.os.UserManager: android.os.Bundle getUserRestrictions()>
<android.service.media.MediaBrowserService.BrowserRoot: java.lang.String getRootId()>
<android.accounts.AccountManager: void removeOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener)>
<android.transition.ChangeClipBounds: void <init>(android.content.Context,android.util.AttributeSet)>
<android.media.IMediaRouterService: void setDiscoveryRequest(android.media.IMediaRouterClient,int,boolean)>
<android.view.accessibility.IAccessibilityManager: void temporaryEnableAccessibilityStateUntilKeyguardRemoved(android.content.ComponentName,boolean)>
<com.android.internal.app.ProcessStats: void reset()>
<android.os.BatteryStats: boolean startIteratingHistoryLocked()>
<android.location.Address: void setFeatureName(java.lang.String)>
<android.os.Message: long getWhen()>
<android.net.wifi.WifiConfiguration: java.lang.String toString()>
<com.google.android.gles_jni.GLImpl: void glFlush()>
<android.content.ContentResolver: void cancelSync(android.net.Uri)>
<com.android.internal.view.menu.ActionMenu: android.content.Context getContext()>
<android.view.View: int getAccessibilityLiveRegion()>
<android.app.SearchManager: android.content.ComponentName getGlobalSearchActivity()>
<android.graphics.drawable.DrawableContainer: void onBoundsChange(android.graphics.Rect)>
<android.renderscript.Sampler: android.renderscript.Sampler.Value getMinification()>
<android.widget.ScrollView: void addView(android.view.View,int)>
<android.app.MediaRouteButton: void jumpDrawablesToCurrentState()>
<android.webkit.WebView: int computeVerticalScrollExtent()>
<android.hardware.hdmi.HdmiRecordListener.TimerStatusData: int getDurationHour()>
<android.app.Instrumentation: void callActivityOnRestart(android.app.Activity)>
<android.widget.AutoCompleteTextView: boolean onKeyUp(int,android.view.KeyEvent)>
<android.graphics.drawable.Drawable.ConstantState: int getChangingConfigurations()>
<android.view.Window: boolean requestFeature(int)>
<com.android.internal.app.ToolbarActionBar: void <init>(android.widget.Toolbar,java.lang.CharSequence,android.view.Window.Callback)>
<android.text.style.ScaleXSpan: float getScaleX()>
<android.webkit.WebView: boolean overlayHorizontalScrollbar()>
<android.widget.Switch: void setTrackResource(int)>
<android.os.BatteryStats: int getPhoneSignalStrengthCount(int,int)>
<android.app.admin.IDevicePolicyManager: void setCrossProfileCallerIdDisabled(android.content.ComponentName,boolean)>
<android.view.Window: boolean superDispatchTouchEvent(android.view.MotionEvent)>
<android.service.notification.ConditionProviderService: void onSubscribe(android.net.Uri)>
<android.app.IApplicationThread: void updateTimeZone()>
<android.view.ViewParent: void recomputeViewAttributes(android.view.View)>
<com.android.internal.app.ToolbarActionBar: void setTitle(java.lang.CharSequence)>
<android.app.AppOpsManager: void startWatchingMode(int,java.lang.String,android.app.AppOpsManager.OnOpChangedListener)>
<android.media.AudioTrack: void setPlaybackPositionUpdateListener(android.media.AudioTrack.OnPlaybackPositionUpdateListener)>
<com.android.internal.os.BatteryStatsImpl: void setBtHeadset(android.bluetooth.BluetoothHeadset)>
<android.webkit.WebView: boolean isPaused()>
<android.app.AppOpsManager: void resetAllModes()>
<android.widget.TextView: void setTextSize(float)>
<android.view.accessibility.AccessibilityNodeInfo: boolean isContentInvalid()>
<android.app.job.JobInfo: boolean isPersisted()>
<android.app.Service: void onTrimMemory(int)>
<android.filterfw.core.FilterContext: android.filterfw.core.GLEnvironment getGLEnvironment()>
<android.media.AudioRecord: int read(java.nio.ByteBuffer,int)>
<android.os.SystemService: boolean isStopped(java.lang.String)>
<android.print.PrinterDiscoverySession: java.util.List getPrinters()>
<android.speech.tts.TextToSpeech: int playEarcon(java.lang.String,int,android.os.Bundle,java.lang.String)>
<android.media.MediaPlayer.OnPreparedListener: void onPrepared(android.media.MediaPlayer)>
<android.filterpacks.base.ObjectSource: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>
<android.print.PrintAttributes.MediaSize: boolean equals(java.lang.Object)>
<android.app.SearchManager: void setOnCancelListener(android.app.SearchManager.OnCancelListener)>
<com.android.ims.internal.IImsUt: void setListener(com.android.ims.internal.IImsUtListener)>
<android.provider.MediaStore.Video.Thumbnails: void cancelThumbnailRequest(android.content.ContentResolver,long,long)>
<android.text.style.IconMarginSpan: void <init>(android.graphics.Bitmap,int)>
<android.opengl.GLES11Ext: void glNormal3xOES(int,int,int)>
<android.opengl.GLES20: void glUniform2fv(int,int,java.nio.FloatBuffer)>
<com.android.server.LocalServices: java.lang.Object getService(java.lang.Class)>
<com.android.internal.policy.IKeyguardExitCallback: void onKeyguardExitResult(boolean)>
<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo: android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo obtain(int,int,int,int,boolean,boolean)>
<android.preference.SeekBarPreference: java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int)>
<android.os.Bundle: void putCharSequenceArrayList(java.lang.String,java.util.ArrayList)>
<android.nfc.NdefRecord: byte[] getId()>
<android.view.View: void notifySubtreeAccessibilityStateChangedIfNeeded()>
<android.net.LinkProperties: android.net.LinkProperties.CompareResult compareAllInterfaceNames(android.net.LinkProperties)>
<android.view.inputmethod.SparseRectFArray.SparseRectFArrayBuilder: void reset()>
<android.hardware.camera2.impl.CameraMetadataNative: void set(android.hardware.camera2.CaptureResult.Key,java.lang.Object)>
<android.media.MediaScanner: void clearMediaPathCache(boolean,boolean)>
<android.hardware.camera2.CaptureRequest: java.lang.Object getTag()>
<android.location.Country: java.lang.String getCountryIso()>
<android.filterpacks.ui.SurfaceRenderFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>
<android.os.Message: void setTarget(android.os.Handler)>
<android.net.wifi.WpsResult: java.lang.String toString()>
<android.view.WindowManagerPolicy.WindowManagerFuncs: void reevaluateStatusBarVisibility()>
<android.widget.ListPopupWindow: int getVerticalOffset()>
<android.view.View: boolean isInTouchMode()>
<android.preference.DialogPreference: void onActivityDestroy()>
<android.webkit.GeolocationPermissions: void getAllowed(java.lang.String,android.webkit.ValueCallback)>
<android.inputmethodservice.InputMethodService: void showWindow(boolean)>
<android.os.Bundle: char getChar(java.lang.String)>
<android.content.pm.Signature: int hashCode()>
<android.net.wifi.IWifiManager: void stopBatchedScan(android.net.wifi.BatchedScanSettings)>
<android.app.Notification.MediaStyle: void populateBigContentView(android.app.Notification)>
<android.net.http.RequestQueue: android.net.http.RequestHandle queueRequest(java.lang.String,android.net.WebAddress,java.lang.String,java.util.Map,android.net.http.EventHandler,java.io.InputStream,int)>
<android.telephony.TelephonyManager: boolean setOperatorBrandOverride(java.lang.String)>
<android.content.res.AssetFileDescriptor: void <init>(android.os.ParcelFileDescriptor,long,long)>
<android.widget.TextView: boolean getLinksClickable()>
<com.android.internal.util.StateMachine: android.os.Message getCurrentMessage()>
<android.app.TabActivity: void onChildTitleChanged(android.app.Activity,java.lang.CharSequence)>
<android.content.pm.PackageParser.Instrumentation: void setPackageName(java.lang.String)>
<android.hardware.camera2.legacy.BurstHolder: java.util.List produceRequestHolders(long)>
<android.filterpacks.imageproc.ImageCombineFilter: android.filterfw.core.Program getShaderProgram(android.filterfw.core.FilterContext)>
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()>
<android.app.Service: int onStartCommand(android.content.Intent,int,int)>
<android.net.MobileLinkQualityInfo: int getCdmaDbm()>
<android.preference.PreferenceActivity: void onActivityResult(int,int,android.content.Intent)>
<android.view.WindowManagerPolicy: int selectAnimationLw(android.view.WindowManagerPolicy.WindowState,int)>
<android.content.pm.PackageParser.Provider: java.lang.String toString()>
<android.view.Choreographer: void setFrameDelay(long)>
<android.widget.CalendarView: void setShowWeekNumber(boolean)>
<android.app.AlarmManager: void setAlarmClock(android.app.AlarmManager.AlarmClockInfo,android.app.PendingIntent)>
<android.app.AppOpsManager.OpEntry: int getDuration()>
<com.android.internal.widget.LockPatternView: void enableInput()>
<android.net.UidRange: int describeContents()>
<android.app.AppOpsManager.OpEntry: int getOp()>
<android.service.notification.Condition: int hashCode()>
<android.service.fingerprint.IFingerprintService: void enroll(android.os.IBinder,long,int)>
<android.util.Size: int hashCode()>
<android.filterpacks.performance.Throughput: float getNanosPerPixel()>
<android.bluetooth.IBluetooth: boolean cancelBondProcess(android.bluetooth.BluetoothDevice)>
<android.view.KeyEvent: boolean hasNoModifiers()>
<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo: android.view.accessibility.AccessibilityNodeInfo.CollectionInfo obtain(android.view.accessibility.AccessibilityNodeInfo.CollectionInfo)>
<android.media.MediaCodecInfo.VideoCapabilities: android.util.Range getSupportedWidths()>
<android.location.GpsStatus: int getTimeToFirstFix()>
<android.filterpacks.imageproc.ToRGBAFilter: void createProgram(android.filterfw.core.FilterContext,android.filterfw.core.FrameFormat)>
<android.graphics.Paint: android.graphics.Paint.Cap getStrokeCap()>
<android.app.Activity: void onRestoreInstanceState(android.os.Bundle)>
<android.widget.Toolbar: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.media.AudioSystem: int createAudioPatch(android.media.AudioPatch[],android.media.AudioPortConfig[],android.media.AudioPortConfig[])>
<android.net.VpnService.Builder: android.net.VpnService.Builder allowBypass()>
<android.webkit.CacheManager.CacheResult: long getExpires()>
<android.renderscript.Int4: void div(int)>
<android.view.KeyEvent: boolean isSystem()>
<android.print.PrintAttributes: boolean isPortrait()>
<android.view.accessibility.AccessibilityNodeInfo.RangeInfo: android.view.accessibility.AccessibilityNodeInfo.RangeInfo obtain(int,float,float,float)>
<android.os.Debug.MemoryInfo: int getTotalPrivateClean()>
<com.android.internal.widget.DecorToolbar: boolean canSplit()>
<android.net.wifi.p2p.WifiP2pWfdInfo: int getMaxThroughput()>
<android.alsa.AlsaDevicesParser.AlsaDeviceRecord: boolean parse(java.lang.String)>
<android.app.ActivityManagerInternal: int startIsolatedProcess(java.lang.String,java.lang.String[],java.lang.String,java.lang.String,int,java.lang.Runnable)>
<android.hardware.camera2.CaptureResult: int getSequenceId()>
<android.printservice.IPrintServiceClient: boolean setPrintJobTag(android.print.PrintJobId,java.lang.String)>
<android.view.animation.Transformation: void toShortString(java.lang.StringBuilder)>
<android.animation.ObjectAnimator: java.lang.String getPropertyName()>
<android.telephony.SubscriptionManager: int setDisplayName(java.lang.String,long,long)>
<android.net.WifiLinkQualityInfo: android.net.WifiLinkQualityInfo createFromParcelBody(android.os.Parcel)>
<android.widget.RemoteViews: void showPrevious(int)>
<android.graphics.drawable.ShapeDrawable: void draw(android.graphics.Canvas)>
<android.app.backup.BackupTransport: android.app.backup.RestoreDescription nextRestorePackage()>
<android.widget.ToggleButton: void <init>(android.content.Context)>
<android.telecom.InCallService.VideoCall.Listener: void onSessionModifyResponseReceived(int,android.telecom.VideoProfile,android.telecom.VideoProfile)>
<com.android.internal.util.MemInfoReader: long getTotalSize()>
<android.graphics.drawable.AnimatedVectorDrawable: void setColorFilter(android.graphics.ColorFilter)>
<android.net.http.DelegatingSSLSession: java.security.cert.Certificate[] getPeerCertificates()>
<android.text.TextUtils.SimpleStringSplitter: void remove()>
<com.android.internal.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)>
<android.telephony.SubscriptionManager: java.util.List getActiveSubInfoList()>
<android.view.inputmethod.InputConnection: boolean finishComposingText()>
<android.filterfw.core.FilterGraph: void beginProcessing()>
<android.os.BatteryStats.Uid.Wakelock: android.os.BatteryStats.Timer getWakeTime(int)>
<android.bluetooth.BluetoothAdapter: boolean getProfileProxy(android.content.Context,android.bluetooth.BluetoothProfile.ServiceListener,int)>
<com.google.android.gles_jni.GLImpl: void glGetLightxv(int,int,java.nio.IntBuffer)>
<android.content.pm.PackageInstaller: java.util.List getMySessions()>
<android.content.pm.PackageInstaller.Session: void abandon()>
<android.content.pm.ConfigurationInfo: int describeContents()>
<android.text.BoringLayout: android.text.BoringLayout.Metrics isBoring(java.lang.CharSequence,android.text.TextPaint,android.text.TextDirectionHeuristic)>
<android.nfc.tech.NfcF: byte[] getManufacturer()>
<android.app.admin.IDevicePolicyManager: int getPasswordMinimumLowerCase(android.content.ComponentName,int)>
<android.graphics.Typeface: android.graphics.Typeface createFromAsset(android.content.res.AssetManager,java.lang.String)>
<android.renderscript.Matrix3f: void translate(float,float)>
<android.view.View: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<android.app.Notification: boolean isValid()>
<com.android.internal.widget.AccessibleDateAnimator: void <init>(android.content.Context,android.util.AttributeSet)>
<android.os.Process.ZygoteState: void close()>
<android.view.View: int getPaddingTop()>
<android.telephony.SignalStrength: android.telephony.SignalStrength newFromBundle(android.os.Bundle)>
<android.nfc.tech.NfcA: int getTimeout()>
<android.app.Notification.MediaStyle: android.app.Notification.MediaStyle setMediaSession(android.media.session.MediaSession.Token)>
<android.app.ActivityGroup: android.app.LocalActivityManager getLocalActivityManager()>
<com.android.internal.view.IInputMethod: void createSession(android.view.InputChannel,com.android.internal.view.IInputSessionCallback)>
<android.view.PointerIcon: void writeToParcel(android.os.Parcel,int)>
<android.app.ApplicationThreadProxy: void scheduleServiceArgs(android.os.IBinder,boolean,int,int,android.content.Intent)>
<android.view.VelocityTracker.Estimator: float getYCoeff(int)>
<android.location.GpsNavigationMessage: short getMessageId()>
<android.view.InputEventConsistencyVerifier: void <init>(java.lang.Object,int,java.lang.String)>
<android.widget.TimePicker.TimePickerDelegate: void setEnabled(boolean)>
<android.opengl.GLES30: void glWaitSync(long,int,long)>
<android.renderscript.Script: void forEach(int,android.renderscript.Allocation[],android.renderscript.Allocation,android.renderscript.FieldPacker)>
<android.app.IApplicationThread: void dumpHeap(boolean,java.lang.String,android.os.ParcelFileDescriptor)>
<com.android.internal.os.BatteryStatsImpl.Uid: com.android.internal.os.BatteryStatsImpl.Uid.Pkg.Serv getServiceStatsLocked(java.lang.String,java.lang.String)>
<android.service.dreams.DreamManagerInternal: void startDream(boolean)>
<android.renderscript.Short4: void sub(short)>
<com.android.internal.app.ToolbarActionBar: int getNavigationItemCount()>
<com.android.internal.widget.LockPatternUtils: boolean isCredentialRequiredToDecrypt(boolean)>
<android.view.View: android.os.Handler getHandler()>
<android.nfc.NfcAdapter: void enableForegroundDispatch(android.app.Activity,android.app.PendingIntent,android.content.IntentFilter[],java.lang.String[][])>
<android.webkit.WebView: void onFinishTemporaryDetach()>
<android.widget.Spinner: android.graphics.drawable.Drawable getPopupBackground()>
<android.telephony.ServiceState: java.lang.String getOperatorAlphaLong()>
<com.android.ims.internal.IImsCallSessionListener: void callSessionStarted(com.android.ims.internal.IImsCallSession,com.android.ims.ImsCallProfile)>
<android.view.View: void setHapticFeedbackEnabled(boolean)>
<android.net.NetworkTemplate: java.lang.String toString()>
<android.view.ViewRootImpl: void onNestedPreScroll(android.view.View,int,int,int[])>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase.CursorFactory)>
<com.android.internal.widget.ILockSettings: boolean checkPassword(java.lang.String,int)>
<android.gesture.Prediction: java.lang.String toString()>
<com.android.internal.view.menu.ListMenuPresenter: void onRestoreInstanceState(android.os.Parcelable)>
<android.view.ViewTreeObserver: void addOnTouchModeChangeListener(android.view.ViewTreeObserver.OnTouchModeChangeListener)>
<android.content.pm.PackageManager: java.util.List getInstalledPackages(int)>
<com.android.internal.view.menu.MenuPopupHelper: boolean tryShow()>
<com.android.internal.util.XmlUtils: android.graphics.Bitmap readBitmapAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>
<android.bluetooth.BluetoothGatt: boolean requestMtu(int)>
<android.speech.tts.TextToSpeechService.UtteranceProgressDispatcher: void dispatchOnStart()>
<android.util.MathUtils: float random(float,float)>
<android.database.CursorWindow: int getNumRows()>
<android.renderscript.ProgramVertexFixedFunction.Builder: android.renderscript.ProgramVertexFixedFunction.Builder setTextureMatrixEnable(boolean)>
<android.widget.DatePicker: boolean isEnabled()>
<android.widget.CompoundButton: void drawableHotspotChanged(float,float)>
<android.telephony.CellLocation: boolean isEmpty()>
<android.app.ActivityManager: boolean removeTask(int,int)>
<com.android.internal.widget.ActionBarView: void setDropdownSelectedPosition(int)>
<android.media.AudioFormat: int getPropertySetMask()>
<android.hardware.camera2.legacy.RequestThreadManager.FpsCounter: double checkFps()>
<android.view.Gravity: void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int)>
<android.hardware.camera2.utils.HashCodeHelpers: int hashCode(java.lang.Object)>
<android.app.ActivityManager: boolean isLowRamDeviceStatic()>
<com.android.internal.view.StandaloneActionMode: void onCloseSubMenu(com.android.internal.view.menu.SubMenuBuilder)>
<android.nfc.INfcTag: android.nfc.NdefMessage ndefRead(int)>
<android.database.MergeCursor: void <init>(android.database.Cursor[])>
<android.content.res.TypedArray: android.content.res.ColorStateList getColorStateList(int)>
<android.os.BatteryStats: long getLowPowerModeEnabledTime(long,int)>
<android.bluetooth.BluetoothManager: int getConnectionState(android.bluetooth.BluetoothDevice,int)>
<com.android.internal.telecom.IInCallAdapter: void turnOffProximitySensor(boolean)>
<android.location.GpsClock: boolean hasDriftUncertaintyInNsPerSec()>
<android.view.textservice.SentenceSuggestionsInfo: int getLengthAt(int)>
<android.animation.ValueAnimator: java.lang.Object getAnimatedValue()>
<android.database.CursorWindow: boolean isString(int,int)>
<android.content.pm.UserInfo: boolean isAdmin()>
<android.view.View: void resetPaddingToInitialValues()>
<android.view.ViewOverlay: void add(android.graphics.drawable.Drawable)>
<android.provider.MediaStore.Files: android.net.Uri getContentUri(java.lang.String)>
<android.location.GpsMeasurement: void resetBitNumber()>
<android.net.UrlQuerySanitizer: java.util.Set getParameterSet()>
<android.app.admin.IDevicePolicyManager: int getCurrentFailedPasswordAttempts(int)>
<android.widget.AbsSeekBar: void drawableStateChanged()>
<android.widget.ScrollView: void setSmoothScrollingEnabled(boolean)>
<android.renderscript.Long2: void add(long)>
<android.ddm.DdmHandleThread: void connected()>
<android.widget.TextView: void setLinksClickable(boolean)>
<android.app.admin.DevicePolicyManager: boolean getCameraDisabled(android.content.ComponentName,int)>
<android.app.Application: void registerOnProvideAssistDataListener(android.app.Application.OnProvideAssistDataListener)>
<android.app.ProgressDialog: void onStop()>
<com.android.internal.os.RuntimeInit: void main(java.lang.String[])>
<android.filterfw.core.FilterSurfaceView: void surfaceCreated(android.view.SurfaceHolder)>
<android.bluetooth.IBluetoothGattServerCallback: void onScanResult(java.lang.String,int,byte[])>
<android.media.IAudioService: void setRemoteStreamVolume(int)>
<android.app.Fragment: boolean getRetainInstance()>
<android.webkit.WebViewProvider: void freeMemory()>
<android.app.LoadedApk: android.content.IIntentReceiver forgetReceiverDispatcher(android.content.Context,android.content.BroadcastReceiver)>
<com.android.internal.os.BatteryStatsImpl: void readHistoryDelta(android.os.Parcel,android.os.BatteryStats.HistoryItem)>
<android.os.Process: void setThreadPriority(int,int)>
<android.opengl.ETC1: int getWidth(java.nio.Buffer)>
<android.renderscript.Matrix4f: void loadOrtho(float,float,float,float,float,float)>
<android.app.admin.DevicePolicyManager: boolean getCrossProfileCallerIdDisabled(android.os.UserHandle)>
<android.media.MediaFormat: void setFeatureEnabled(java.lang.String,boolean)>
<android.net.NetworkUtils: java.net.InetAddress numericToInetAddress(java.lang.String)>
<android.media.ClosedCaptionWidget: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.app.SearchManager: android.database.Cursor getSuggestions(android.app.SearchableInfo,java.lang.String,int)>
<android.media.AudioService.VolumeController: void postMasterVolumeChanged(int)>
<android.renderscript.Short2: android.renderscript.Short2 div(android.renderscript.Short2,short)>
<android.net.http.RequestQueue: android.net.http.Request getRequest(org.apache.http.HttpHost)>
<com.android.internal.os.BatteryStatsImpl: void setRadioScanningTimeout(long)>
<android.graphics.drawable.ColorDrawable: void setColor(int)>
<com.android.internal.widget.ActionBarContainer: void <init>(android.content.Context)>
<com.android.internal.widget.ActionBarView: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.hardware.usb.UsbManager: java.lang.String getDefaultFunction()>
<android.widget.ImageView: android.content.res.ColorStateList getImageTintList()>
<android.net.IConnectivityManager: int checkMobileProvisioning(int)>
<android.app.LoadedApk: android.content.res.Resources getResources(android.app.ActivityThread)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,double)>
<android.hardware.display.DisplayManagerInternal.DisplayPowerCallbacks: void releaseSuspendBlocker()>
<android.view.ViewParent: boolean isLayoutRequested()>
<android.widget.AnalogClock: void onDraw(android.graphics.Canvas)>
<android.widget.TwoLineListItem: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.provider.Settings.Secure: boolean isLocationProviderEnabled(android.content.ContentResolver,java.lang.String)>
<android.provider.ContactsContract.CommonDataKinds.Relation: int getTypeLabelResource(int)>
<android.content.pm.PackageManager: void setApplicationEnabledSetting(java.lang.String,int,int)>
<com.android.internal.widget.ActionBarView: void setHomeButtonEnabled(boolean)>
<android.opengl.GLES31: void glProgramUniformMatrix4fv(int,int,int,boolean,float[],int)>
<android.drm.DrmManagerClient.OnEventListener: void onEvent(android.drm.DrmManagerClient,android.drm.DrmEvent)>
<android.widget.CalendarView.CalendarViewDelegate: int getUnfocusedMonthDateColor()>
<android.filterfw.core.FilterPort: boolean isAttached()>
<android.os.Parcel: float readFloat()>
<android.bluetooth.le.BluetoothLeScanner: void startTruncatedScan(java.util.List,android.bluetooth.le.ScanSettings,android.bluetooth.le.ScanCallback)>
<com.android.internal.widget.multiwaveview.PointCloud.WaveManager: float getRadius()>
<android.widget.CalendarView.CalendarViewDelegate: void setMinDate(long)>
<android.widget.GridLayout: void onSetLayoutParams(android.view.View,android.view.ViewGroup.LayoutParams)>
<android.location.Location: double getAltitude()>
<android.nfc.NfcAdapter: boolean removeNfcUnlockHandler(android.nfc.NfcAdapter.NfcUnlockHandler)>
<android.hardware.camera2.CameraDevice: android.hardware.camera2.CaptureRequest.Builder createCaptureRequest(int)>
<android.text.method.ScrollingMovementMethod: android.text.method.MovementMethod getInstance()>
<android.print.IPrintSpooler: void setClient(android.print.IPrintSpoolerClient)>
<android.media.Ringtone: void setStreamType(int)>
<android.app.ActionBar.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>
<android.service.voice.AlwaysOnHotwordDetector: boolean stopRecognition()>
<com.android.internal.util.LocalLog: void <init>(java.lang.String)>
<com.android.internal.http.multipart.FilePartSource: void <init>(java.io.File)>
<android.renderscript.Int4: void set(android.renderscript.Int4)>
<android.media.effect.Effect: void apply(int,int,int,int)>
<android.hardware.camera2.utils.ListUtils: boolean listContains(java.util.List,java.lang.Object)>
<com.android.internal.view.menu.ActionMenuItemView: com.android.internal.view.menu.MenuItemImpl getItemData()>
<android.opengl.GLES30: boolean glIsQuery(int)>
<com.android.internal.view.menu.ActionMenuItemView: void setPopupCallback(com.android.internal.view.menu.ActionMenuItemView.PopupCallback)>
<android.media.MediaCodecInfo.VideoCapabilities: android.util.Range getBlockCountRange()>
<android.view.accessibility.AccessibilityNodeInfo: boolean refresh(boolean)>
<android.app.admin.DevicePolicyManager: java.lang.String[] getAccountTypesWithManagementDisabledAsUser(int)>
<android.net.DhcpResults: boolean setServerAddress(java.lang.String)>
<android.webkit.WebSettings: int getDefaultFixedFontSize()>
<com.android.internal.widget.PasswordEntryKeyboard: void <init>(android.content.Context,int,int,int,int)>
<android.util.LongSparseLongArray: void append(long,long)>
<android.widget.AbsListView: android.util.SparseBooleanArray getCheckedItemPositions()>
<com.android.internal.statusbar.IStatusBar: void showRecentApps(boolean)>
<android.content.SyncInfo: int describeContents()>
<android.media.MediaFocusControl: void unregisterAudioFocusClient(java.lang.String)>
<android.preference.PreferenceActivity: android.preference.Preference findPreference(java.lang.CharSequence)>
<com.android.internal.widget.IRemoteViewsFactory: void onDestroy(android.content.Intent)>
<android.widget.TextView: boolean onPreDraw()>
<android.app.Activity: android.app.ActionBar getActionBar()>
<android.app.ActivityManager.TaskDescription: android.graphics.Bitmap getIcon()>
<android.os.IUserManager: void setUserRestrictions(android.os.Bundle,int)>
<android.location.GpsMeasurement: void setPseudorangeInMeters(double)>
<com.android.internal.app.ChooserActivity: void onCreate(android.os.Bundle)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(android.util.Property,android.animation.TypeConverter,android.graphics.Path)>
<com.android.internal.widget.AbsActionBarView.VisibilityAnimListener: void onAnimationCancel(android.animation.Animator)>
<android.renderscript.ProgramRaster: android.renderscript.ProgramRaster CULL_FRONT(android.renderscript.RenderScript)>
<android.animation.AnimatorInflater: android.animation.Animator loadAnimator(android.content.res.Resources,android.content.res.Resources.Theme,int)>
<android.database.sqlite.SQLiteDatabase: long replaceOrThrow(java.lang.String,java.lang.String,android.content.ContentValues)>
<android.widget.ProgressBar: void setSecondaryProgressTintList(android.content.res.ColorStateList)>
<android.transition.Visibility: android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>
<com.android.internal.widget.ActionBarOverlayLayout: boolean hasIcon()>
<android.renderscript.Int4: int dotProduct(android.renderscript.Int4)>
<com.android.internal.view.menu.MenuBuilder: void setCurrentMenuInfo(android.view.ContextMenu.ContextMenuInfo)>
<android.renderscript.Float2: void set(android.renderscript.Float2)>
<com.android.internal.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(com.android.internal.widget.ActionBarOverlayLayout.ActionBarVisibilityCallback)>
<android.view.animation.Transformation: boolean hasClipRect()>
<android.util.Spline: float interpolate(float)>
<android.webkit.WebViewProvider.ViewDelegate: boolean setFrame(int,int,int,int)>
<android.widget.BaseExpandableListAdapter: void onGroupExpanded(int)>
<android.app.IActivityManager: void startLockTaskModeOnCurrent()>
<android.media.MediaRouter.RouteInfo: void requestSetVolume(int)>
<android.app.ActivityManager: void getMyMemoryState(android.app.ActivityManager.RunningAppProcessInfo)>
<android.content.Context: int getWallpaperDesiredMinimumWidth()>
<android.view.Menu: android.view.MenuItem add(int)>
<android.filterpacks.base.FrameStore: void setupPorts()>
<com.android.internal.view.IInputMethodClient: void setUserActionNotificationSequenceNumber(int)>
<android.provider.DocumentsContract: android.net.Uri buildRootsUri(java.lang.String)>
<android.filterfw.core.FilterFunction: void setInputValue(java.lang.String,java.lang.Object)>
<com.android.internal.content.PackageHelper: boolean resizeSdDir(long,java.lang.String,java.lang.String)>
<android.app.AlarmManager: void set(int,long,android.app.PendingIntent)>
<android.text.method.QwertyKeyListener: android.text.method.QwertyKeyListener getInstance(boolean,android.text.method.TextKeyListener.Capitalize)>
<android.text.method.MultiTapKeyListener: int getInputType()>
<android.net.TrafficStats: long getRxBytes(java.lang.String)>
<android.filterpacks.imageproc.CropFilter: void process(android.filterfw.core.FilterContext)>
<android.net.LinkProperties: boolean addStackedLink(android.net.LinkProperties)>
<android.appwidget.AppWidgetManager: java.util.List getInstalledProvidersForProfile(int,android.os.UserHandle)>
<android.net.IConnectivityManager: android.net.LinkQualityInfo[] getAllLinkQualityInfo()>
<android.app.AppOpsManager: int opToSwitch(int)>
<android.net.LinkProperties: boolean isValidMtu(int,boolean)>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder permitAll()>
<android.view.animation.AnticipateInterpolator: float getInterpolation(float)>
<android.graphics.drawable.shapes.ArcShape: void <init>(float,float)>
<android.view.KeyCharacterMap: void finalize()>
<android.preference.PreferenceFrameLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<android.database.CursorWindow: void clear()>
<com.android.internal.util.ArrayUtils: long total(long[])>
<android.graphics.drawable.AnimatedVectorDrawable: void onBoundsChange(android.graphics.Rect)>
<android.telecom.Connection: android.telecom.StatusHints getStatusHints()>
<android.app.Notification.Action: android.app.Notification.Action clone()>
<android.os.NullVibrator: void cancel()>
<android.animation.AnimatorSet.Builder: android.animation.AnimatorSet.Builder after(android.animation.Animator)>
<android.content.pm.MacAuthenticatedInputStream: boolean isTagEqual(byte[])>
<com.android.internal.widget.AbsActionBarView: boolean hideOverflowMenu()>
<android.graphics.LargeBitmap: boolean isRecycled()>
<android.view.View: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.app.ResourcesManager: void flushDisplayMetricsLocked()>
<android.media.IAudioService: void setBluetoothScoOn(boolean)>
<android.os.Parcel: void readStringArray(java.lang.String[])>
<android.net.BaseNetworkStateTracker: void <init>(int)>
<android.util.LruCache: int evictionCount()>
<android.provider.MediaStore.Files: android.net.Uri getContentUri(java.lang.String,long)>
<android.text.BoringLayout: int getBottomPadding()>
<android.media.MediaPlayer.TrackInfo: int describeContents()>
<android.net.WebAddress: int getPort()>
<android.security.IKeyChainService: java.util.List getCaCertificateChainAliases(java.lang.String,boolean)>
<android.transition.ChangeTransform: void captureEndValues(android.transition.TransitionValues)>
<android.animation.StateListAnimator: android.view.View getTarget()>
<android.app.AlertDialog.Builder: void <init>(android.content.Context)>
<android.app.Dialog: void setOnDismissListener(android.content.DialogInterface.OnDismissListener)>
<android.hardware.camera2.CaptureRequest: int describeContents()>
<android.transition.Transition: java.lang.String toString()>
<android.telephony.TelephonyManager: void setTelephonyProperty(java.lang.String,long,java.lang.String)>
<android.graphics.Paint: void setFakeBoldText(boolean)>
<android.animation.Animator: android.animation.Animator setDuration(long)>
<android.os.INetworkManagementService: void unregisterObserver(android.net.INetworkManagementEventObserver)>
<android.location.GpsClock: void resetBiasInNs()>
<com.android.internal.os.HandlerCaller: void sendMessage(android.os.Message)>
<android.media.MediaCodec.Callback: void onInputBufferAvailable(android.media.MediaCodec,int)>
<android.os.storage.IMountService: java.lang.String[] getSecureContainerList()>
<com.android.internal.app.WindowDecorActionBar.ActionModeImpl: void setTitleOptionalHint(boolean)>
<android.widget.VideoView: boolean canSeekBackward()>
<android.net.ScoredNetwork: void <init>(android.net.NetworkKey,android.net.RssiCurve)>
<android.bluetooth.BluetoothAudioConfig: void <init>(int,int,int)>
<com.android.internal.database.SortCursor: void deactivate()>
<android.view.WindowId.FocusObserver: void onFocusLost(android.view.WindowId)>
<android.media.AudioAttributes.Builder: android.media.AudioAttributes.Builder setInternalLegacyStreamType(int)>
<com.android.internal.widget.ActionBarView: int getDropdownSelectedPosition()>
<android.transition.ChangeImageTransform: void captureStartValues(android.transition.TransitionValues)>
<android.opengl.GLES20: void glUniform1i(int,int)>
<android.media.IVolumeController: void masterVolumeChanged(int)>
<android.ddm.DdmHandleProfiling: org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)>
<android.view.ViewGroup.MarginLayoutParams: void setMarginStart(int)>
<android.widget.ExpandableListView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.app.Dialog: void setCancelable(boolean)>
<android.net.nsd.NsdServiceInfo: java.net.InetAddress getHost()>
<com.google.android.gles_jni.GLImpl: void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)>
<android.widget.ActivityChooserModel.HistoricalRecord: void <init>(android.content.ComponentName,long,float)>
<com.android.internal.app.IMediaContainerService: android.content.res.ObbInfo getObbInfo(java.lang.String)>
<android.filterfw.core.SyncRunner: java.lang.Exception getError()>
<android.animation.Animator: void pause()>
<android.opengl.GLES31: void glGetMultisamplefv(int,int,float[],int)>
<android.media.tv.TvView.TvInputCallback: void onContentAllowed(java.lang.String)>
<android.net.wifi.RttManager.ParcelableRttParams: void writeToParcel(android.os.Parcel,int)>
<android.os.BatteryStats.HistoryItem: void setTo(long,byte,android.os.BatteryStats.HistoryItem)>
<android.widget.RemoteViews: void setDrawableParameters(int,boolean,int,int,android.graphics.PorterDuff.Mode,int)>
<android.text.TextUtils: int indexOf(java.lang.CharSequence,java.lang.CharSequence,int)>
<android.telecom.InCallAdapter: void phoneAccountSelected(java.lang.String,android.telecom.PhoneAccountHandle)>
<android.content.ContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver,boolean,int)>
<android.view.WindowLeaked: void <init>(java.lang.String)>
<android.app.ActivityManagerProxy: void releaseSomeActivities(android.app.IApplicationThread)>
<android.service.notification.NotificationListenerService: void onNotificationPosted(android.service.notification.StatusBarNotification,android.service.notification.NotificationListenerService.RankingMap)>
<android.filterfw.geometry.Rectangle: void <init>(android.filterfw.geometry.Point,android.filterfw.geometry.Point)>
<android.hardware.input.InputManager: android.hardware.input.TouchCalibration getTouchCalibration(java.lang.String,int)>
<android.view.TextureView: void destroyHardwareResources()>
<android.widget.Toolbar: android.widget.Toolbar.LayoutParams generateDefaultLayoutParams()>
<android.preference.Preference: boolean hasKey()>
<android.media.AudioManager: void setVolumeController(android.media.IVolumeController)>
<android.hardware.input.InputDeviceIdentifier: int getVendorId()>
<android.telephony.PreciseDataConnectionState: java.lang.String toString()>
<android.webkit.WebHistoryItem: android.webkit.WebHistoryItem clone()>
<android.net.NetworkStatsHistory: int estimateResizeBuckets(long)>
<android.os.Debug.MemoryInfo: int getTotalUss()>
<android.os.Debug: void resetGlobalFreedSize()>
<android.webkit.WebIconDatabase: void releaseIconForPageUrl(java.lang.String)>
<com.android.internal.util.XmlUtils: int readIntAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>
<android.widget.CalendarView.CalendarViewDelegate: void setWeekSeparatorLineColor(int)>
<android.hardware.hdmi.IHdmiControlService: boolean getSystemAudioMode()>
<android.graphics.Interpolator: void <init>(int)>
<android.filterfw.core.NativeFrame: void setDataFromFrame(android.filterfw.core.Frame)>
<android.location.GpsMeasurement: void setDopplerShiftInHz(double)>
<android.view.View: boolean canHaveDisplayList()>
<android.drm.DrmRights: java.lang.String getMimeType()>
<android.widget.Toolbar: void collapseActionView()>
<android.view.ViewGroup: void damageChild(android.view.View,android.graphics.Rect)>
<com.android.internal.app.IBatteryStats: void noteWifiScanStopped(int)>
<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable)>
<android.inputmethodservice.InputMethodService: void onBindInput()>
<android.mtp.MtpStorage: int getStorageId()>
<android.database.sqlite.SQLiteConnectionPool: void collectDbStats(java.util.ArrayList)>
<android.app.Fragment: android.app.FragmentManager getChildFragmentManager()>
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>
<com.android.internal.app.WindowDecorActionBar: void dispatchMenuVisibilityChanged(boolean)>
<android.filterfw.core.Frame: android.filterfw.core.Frame retain()>
<android.app.AppOpsManager: void setMode(int,int,java.lang.String,int)>
<android.widget.CheckedTextView: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<android.os.SELinux: boolean restorecon(java.lang.String)>
<android.hardware.location.IGeofenceHardwareCallback: void onGeofenceResume(int,int)>
<com.android.internal.util.AsyncService: com.android.internal.util.AsyncService.AsyncServiceInfo createHandler()>
<android.media.audiofx.AudioEffect: int command(int,byte[],byte[])>
<android.view.accessibility.AccessibilityNodeInfo: boolean isMultiLine()>
<android.filterfw.core.NativeFrame: void releaseNativeAllocation()>
<android.hardware.camera2.ICameraDeviceCallbacks: void onResultReceived(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CaptureResultExtras)>
<android.webkit.FindActionModeCallback: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)>
<android.app.ActionBar: int getHeight()>
<android.os.Debug.MemoryInfo: int getOtherPrivateClean(int)>
<android.preference.PreferenceManager: java.lang.String getSharedPreferencesName()>
<android.widget.ExpandableListView: boolean isGroupExpanded(int)>
<android.view.SurfaceView: void setWindowType(int)>
<android.graphics.drawable.InsetDrawable: boolean onLevelChange(int)>
<android.bluetooth.BluetoothMasInstance: void writeToParcel(android.os.Parcel,int)>
<android.app.IActivityManager: java.lang.String getCallingPackage(android.os.IBinder)>
<android.net.wifi.WifiInfo: void setNetworkId(int)>
<android.graphics.drawable.GradientDrawable: void setColor(int)>
<android.filterpacks.imageproc.FillLightFilter: void initProgram(android.filterfw.core.FilterContext,int)>
<android.util.ArraySet: java.lang.Object valueAt(int)>
<android.util.LongArray: void remove(int)>
<android.app.ListFragment: void onDestroyView()>
<android.media.AudioManager: void playSoundEffect(int)>
<android.widget.ScrollView: void onNestedScrollAccepted(android.view.View,android.view.View,int)>
<android.widget.FrameLayout: boolean shouldDelayChildPressedState()>
<android.transition.Slide: int getSlideEdge()>
<android.media.Metadata: int getInt(int)>
<android.media.MediaMuxer: int addTrack(android.media.MediaFormat)>
<android.net.MobileLinkQualityInfo: void setEvdoDbm(int)>
<android.view.WindowManagerPolicy: void notifyActivityDrawnForKeyguardLw()>
<android.widget.NumberPicker: float getTopFadingEdgeStrength()>
<com.google.android.gles_jni.GLImpl: boolean glIsFramebufferOES(int)>
<com.android.internal.widget.multiwaveview.PointCloud: void <init>(android.graphics.drawable.Drawable)>
<android.telephony.CellInfoCdma: int hashCode()>
<android.os.INetworkManagementService: void unregisterNetworkActivityListener(android.os.INetworkActivityListener)>
<android.media.MediaPlayer.OnSeekCompleteListener: void onSeekComplete(android.media.MediaPlayer)>
<android.webkit.WebChromeClient.FileChooserParams: boolean isCaptureEnabled()>
<android.net.http.Headers: void setXPermittedCrossDomainPolicies(java.lang.String)>
<android.util.EventLog.Event: int getTag()>
<android.opengl.GLES31: void glVertexAttribBinding(int,int)>
<android.widget.FrameLayout: void drawableStateChanged()>
<android.view.View: int computeHorizontalScrollOffset()>
<com.android.internal.preference.YesNoPreference: android.os.Parcelable onSaveInstanceState()>
<android.net.http.RequestQueue: org.apache.http.HttpHost getProxyHost()>
<android.widget.AbsoluteLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.renderscript.ScriptIntrinsicConvolve3x3: android.renderscript.Script.FieldID getFieldID_Input()>
<com.android.internal.telephony.IPhoneStateListener: void onCellLocationChanged(android.os.Bundle)>
<com.android.internal.widget.PointerLocationView: void setPrintCoords(boolean)>
<com.android.internal.widget.ScrollingTabContainerView: void removeAllTabs()>
<com.android.internal.policy.IFaceLockCallback: void cancel()>
<android.view.DisplayAdjustments: int hashCode()>
<com.google.android.util.AbstractMessageParser.Video: boolean isMedia()>
<android.print.IPrintManager: void addPrintJobStateChangeListener(android.print.IPrintJobStateChangeListener,int,int)>
<android.media.MediaDescription.Builder: android.media.MediaDescription.Builder setDescription(java.lang.CharSequence)>
<android.view.WindowManagerGlobal: android.view.WindowManagerGlobal getInstance()>
<android.media.MediaPlayer.TrackInfo: java.lang.String toString()>
<android.renderscript.Byte2: android.renderscript.Byte2 div(android.renderscript.Byte2,android.renderscript.Byte2)>
<android.media.session.MediaSession.CallbackStub: void onMediaButton(android.content.Intent,int,android.os.ResultReceiver)>
<android.widget.DatePicker.DatePickerDelegate: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.android.internal.app.AlertController.RecycleListView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.app.Dialog: boolean onPreparePanel(int,android.view.View,android.view.Menu)>
<android.content.IClipboard: android.content.ClipDescription getPrimaryClipDescription(java.lang.String)>
<android.inputmethodservice.ExtractEditText: void replaceText_internal(int,int,java.lang.CharSequence)>
<android.content.pm.PackageUserState: void <init>(android.content.pm.PackageUserState)>
<android.view.inputmethod.InputMethodInfo: android.content.pm.ServiceInfo getServiceInfo()>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator x(float)>
<android.opengl.EGL14: boolean eglTerminate(android.opengl.EGLDisplay)>
<com.android.internal.view.IInputContextCallback: void setTextAfterCursor(java.lang.CharSequence,int)>
<com.android.ims.internal.IImsService: void setRegistrationListener(int,com.android.ims.internal.IImsRegistrationListener)>
<android.view.FrameStats: long getRefreshPeriodNano()>
<android.view.SurfaceControl: boolean setActiveConfig(android.os.IBinder,int)>
<android.app.ActivityOptions: java.lang.String getPackageName()>
<android.media.MediaRouter.UserRouteInfo: void setVolume(int)>
<com.android.internal.os.BatteryStatsImpl.Uid: int getMobileRadioActiveCount(int)>
<android.hardware.camera2.utils.BinderHolder: void readFromParcel(android.os.Parcel)>
<android.net.NetworkState: int describeContents()>
<android.webkit.WebChromeClient: boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult)>
<android.view.accessibility.IAccessibilityInteractionConnectionCallback: void setFindAccessibilityNodeInfoResult(android.view.accessibility.AccessibilityNodeInfo,int)>
<android.os.PersistableBundle: void <init>(int)>
<android.content.CursorLoader: void <init>(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.widget.TextView: void onRestoreInstanceState(android.os.Parcelable)>
<android.text.BoringLayout: int getEllipsisCount(int)>
<android.graphics.Canvas: void scale(float,float,float,float)>
<android.util.MathUtils: float max(float,float)>
<com.android.internal.os.AtomicFile: void finishWrite(java.io.FileOutputStream)>
<android.net.wifi.p2p.WifiP2pManager: void <init>(android.net.wifi.p2p.IWifiP2pManager)>
<android.graphics.drawable.DrawableContainer: int getMinimumWidth()>
<android.view.InputEvent: long getEventTime()>
<android.renderscript.RenderScriptGL: void bindProgramFragment(android.renderscript.ProgramFragment)>
<android.view.SubMenu: android.view.SubMenu setHeaderTitle(int)>
<android.net.IConnectivityManager: android.net.NetworkRequest pendingRequestForNetwork(android.net.NetworkCapabilities,android.app.PendingIntent)>
<android.view.KeyEvent: boolean isSymPressed()>
<android.content.ClipboardManager: boolean hasPrimaryClip()>
<android.text.TextUtils: java.lang.CharSequence join(java.lang.Iterable)>
<android.os.Handler: boolean sendEmptyMessageDelayed(int,long)>
<android.hardware.camera2.CameraCaptureSession.CaptureCallback: void onCaptureStarted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,long,long)>
<android.graphics.Camera: float getLocationZ()>
<android.view.TextureView: boolean isAvailable()>
<android.hardware.SensorManager: boolean remapCoordinateSystem(float[],int,int,float[])>
<android.media.audiopolicy.AudioPolicy.Builder: android.media.audiopolicy.AudioPolicy build()>
<android.content.pm.IPackageInstaller: void updateSessionAppIcon(int,android.graphics.Bitmap)>
<com.google.android.gles_jni.EGLImpl: boolean eglGetConfigs(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[],int,int[])>
<android.renderscript.ProgramVertex: android.renderscript.Element getInput(int)>
<android.webkit.SslErrorHandler: void proceed()>
<android.view.accessibility.AccessibilityNodeInfo: void setText(java.lang.CharSequence)>
<android.net.TrafficStats: long getTxPackets(java.lang.String)>
<android.content.pm.LimitedLengthInputStream: int read(byte[],int,int)>
<android.graphics.drawable.AnimatedRotateDrawable: void invalidateDrawable(android.graphics.drawable.Drawable)>
<android.app.Service: void onStart(android.content.Intent,int)>
<android.content.BroadcastReceiver.PendingResult: boolean getAbortBroadcast()>
<android.content.BroadcastReceiver: void setPendingResult(android.content.BroadcastReceiver.PendingResult)>
<android.hardware.camera2.marshal.impl.MarshalQueryableString: boolean isTypeMappingSupported(android.hardware.camera2.utils.TypeReference,int)>
<android.transition.TransitionManager: void go(android.transition.Scene)>
<android.animation.LayoutTransition: boolean isChangingLayout()>
<android.view.View: boolean isEnabled()>
<android.content.Intent: void prepareToLeaveProcess()>
<android.view.WindowManagerPolicy: void setSafeMode(boolean)>
<android.filterpacks.imageproc.FillLightFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>
<android.widget.AutoCompleteTextView: int getDropDownVerticalOffset()>
<android.appwidget.AppWidgetManager: void updateAppWidgetOptions(int,android.os.Bundle)>
<android.gesture.GestureOverlayView: void setUncertainGestureColor(int)>
<android.view.WindowManagerPolicy: void dismissKeyguardLw()>
<android.graphics.drawable.BitmapDrawable: void <init>(android.graphics.Bitmap)>
<android.webkit.WebView: android.webkit.WebBackForwardList restoreState(android.os.Bundle)>
<android.telephony.CellSignalStrengthCdma: boolean equals(java.lang.Object)>
<com.android.internal.view.menu.SubMenuBuilder: android.view.SubMenu setIcon(int)>
<android.net.http.Headers: java.lang.String getLastModified()>
<android.media.IMediaRouterService: void requestSetVolume(android.media.IMediaRouterClient,java.lang.String,int)>
<android.widget.AbsSeekBar: void jumpDrawablesToCurrentState()>
<com.android.internal.http.multipart.Part: void sendParts(java.io.OutputStream,com.android.internal.http.multipart.Part[],byte[])>
<com.android.internal.widget.LockPatternView: void onMeasure(int,int)>
<android.app.admin.IDevicePolicyManager: void setMaximumFailedPasswordsForWipe(android.content.ComponentName,int,int)>
<android.net.wifi.WifiScanner: void startTrackingWifiChange(android.net.wifi.WifiScanner.WifiChangeListener)>
<android.media.effect.FilterGraphEffect: void release()>
<android.preference.SeekBarDialogPreference: android.widget.SeekBar getSeekBar(android.view.View)>
<android.widget.NumberPicker: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.bluetooth.le.ScanResult: long getTimestampNanos()>
<android.content.ContentValues: java.lang.String toString()>
<android.gesture.GestureStore: void removeGesture(java.lang.String,android.gesture.Gesture)>
<android.view.InputEventSender: void <init>(android.view.InputChannel,android.os.Looper)>
<android.security.AndroidKeyStore: java.security.Key engineGetKey(java.lang.String,char[])>
<android.media.audiofx.AudioEffect: android.media.audiofx.AudioEffect.Descriptor[] queryPreProcessings(int)>
<android.graphics.Rect: boolean contains(int,int)>
<android.hardware.hdmi.HdmiRecordSources: android.hardware.hdmi.HdmiRecordSources.AnalogueServiceSource ofAnalogue(int,int,int)>
<android.provider.SearchIndexablesProvider: android.database.Cursor queryXmlResources(java.lang.String[])>
<android.preference.MultiSelectListPreference: void setValues(java.util.Set)>
<android.database.AbstractCursor: int getInt(int)>
<android.media.AudioService.VolumeController: void setLayoutDirection(int)>
<android.filterfw.core.MutableFrameFormat: void setDimensionCount(int)>
<android.content.res.Resources: android.content.res.ColorStateList getColorStateList(int)>
<android.widget.SearchView.SearchAutoComplete: void <init>(android.content.Context,android.util.AttributeSet)>
<android.app.LoaderManagerImpl: boolean hasRunningLoaders()>
<com.android.internal.telephony.ISms: boolean enableCellBroadcastForSubscriber(long,int)>
<com.android.ims.ImsCallProfile: void setCallExtraInt(java.lang.String,int)>
<android.app.IActivityManager: android.app.PendingIntent getRunningServiceControlPanel(android.content.ComponentName)>
<android.net.wifi.WifiInfo: java.lang.String toString()>
<android.widget.MultiAutoCompleteTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.database.DatabaseUtils: void cursorLongToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>
<android.graphics.Paint: int getTextWidths(char[],int,int,float[])>
<com.android.internal.app.PlatLogoActivity: void onCreate(android.os.Bundle)>
<android.view.accessibility.CaptioningManager.CaptionStyle: android.view.accessibility.CaptioningManager.CaptionStyle applyStyle(android.view.accessibility.CaptioningManager.CaptionStyle)>
<android.net.NetworkStats: android.net.NetworkStats addValues(android.net.NetworkStats.Entry)>
<android.os.BaseBundle: int size()>
<android.net.LocalServerSocket: void <init>(java.lang.String)>
<android.hardware.camera2.DngCreator: void writeImage(java.io.OutputStream,android.media.Image)>
<android.net.wifi.IWifiManager: void disconnect()>
<android.widget.TimePicker: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.database.DatabaseUtils.InsertHelper: long execute()>
<android.widget.TabHost.TabSpec: android.widget.TabHost.TabSpec setContent(android.content.Intent)>
<android.view.inputmethod.CompletionInfo: int getPosition()>
<com.android.internal.os.BatteryStatsImpl: void noteStopWakeFromSourceLocked(android.os.WorkSource,int,java.lang.String,java.lang.String,int)>
<android.view.ViewGroup: boolean isLayoutSuppressed()>
<android.media.audiofx.Virtualizer.Settings: void <init>(java.lang.String)>
<android.os.Debug: long getPss(int,long[])>
<android.widget.TextView: void setHighlightColor(int)>
<android.database.DatabaseUtils: java.lang.String getCollationKey(java.lang.String)>
<android.os.PowerManager.WakeLock: void setTag(java.lang.String)>
<com.android.ims.ImsCallProfile: int presentationToOIR(int)>
<android.telephony.SubscriptionManager: android.telephony.SubInfoRecord getDefaultDataSubInfo()>
<com.android.internal.policy.IKeyguardService: boolean isDismissable()>
<android.media.SubtitleController.Anchor: android.os.Looper getSubtitleLooper()>
<android.util.AttributeSet: int getAttributeCount()>
<android.app.ActivityManagerProxy: void releasePersistableUriPermission(android.net.Uri,int,int)>
<android.widget.PopupWindow: void setAnimationStyle(int)>
<android.renderscript.ScriptIntrinsicBlend: void forEachSrcIn(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>
<android.app.ApplicationErrorReport.CrashInfo: void dump(android.util.Printer,java.lang.String)>
<android.app.Activity: boolean requestVisibleBehind(boolean)>
<android.webkit.WebView: void onPause()>
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothServerSocket listenUsingRfcommOn(int)>
<android.text.TextUtils: int indexOf(java.lang.CharSequence,java.lang.CharSequence)>
<android.widget.GridLayout.Spec: boolean equals(java.lang.Object)>
<android.security.IKeystoreService: int reset_uid(int)>
<android.database.AbstractCursor: boolean onMove(int,int)>
<android.opengl.GLES10: void glMaterialf(int,int,float)>
<android.os.ParcelFileDescriptor: void <init>(java.io.FileDescriptor)>
<android.location.FusedBatchOptions: int getFlags()>
<android.view.MenuItem: int getGroupId()>
<android.renderscript.ScriptIntrinsicResize: void forEach_bicubic(android.renderscript.Allocation)>
<android.content.pm.ResolveInfo: void dump(android.util.Printer,java.lang.String)>
<android.app.UiAutomationConnection: void shutdown()>
<android.widget.CompoundButton: void onDraw(android.graphics.Canvas)>
<android.app.UiModeManager: void setNightMode(int)>
<android.app.ActionBar: void removeAllTabs()>
<android.view.ViewRootImpl: void dispatchInputEvent(android.view.InputEvent,android.view.InputEventReceiver)>
<android.graphics.Typeface: boolean isBold()>
<android.renderscript.AllocationAdapter: android.renderscript.AllocationAdapter create2D(android.renderscript.RenderScript,android.renderscript.Allocation)>
<android.widget.GridView: void layoutChildren()>
<android.view.PointerIcon: android.view.PointerIcon getDefaultIcon(android.content.Context)>
<com.android.internal.view.RotationPolicy: boolean isRotationLocked(android.content.Context)>
<android.widget.ListPopupWindow: boolean isInputMethodNotNeeded()>
<android.net.http.Headers: java.lang.String getEtag()>
<android.media.SubtitleData: byte[] getData()>
<android.text.style.ImageSpan: void <init>(android.content.Context,android.graphics.Bitmap)>
<android.app.ActivityManager: void forceStopPackage(java.lang.String)>
<android.opengl.GLES31Ext: void glGetSamplerParameterIuivEXT(int,int,int[],int)>
<android.app.AlarmManager: void cancel(android.app.PendingIntent)>
<android.filterfw.core.NativeProgram: void setHostValue(java.lang.String,java.lang.Object)>
<android.hardware.location.GeofenceHardwareMonitorCallback: void onMonitoringSystemChange(android.hardware.location.GeofenceHardwareMonitorEvent)>
<android.content.Loader: boolean isAbandoned()>
<com.android.internal.telephony.ISms: java.lang.String getImsSmsFormat()>
<android.bluetooth.BluetoothAdapter: java.util.Set getBondedDevices()>
<android.os.Environment: java.io.File getOemDirectory()>
<android.view.ViewDebug: void startRecyclerTracing(java.lang.String,android.view.View)>
<android.webkit.WebViewProvider: int getVisibleTitleHeight()>
<android.view.ViewStub: void draw(android.graphics.Canvas)>
<android.bluetooth.le.AdvertiseSettings: int getTimeout()>
<android.app.SearchableInfo: android.content.Context getProviderContext(android.content.Context,android.content.Context)>
<android.view.Window: void setSharedElementsUseOverlay(boolean)>
<android.net.wifi.RttManager.RttListener: void onAborted()>
<android.inputmethodservice.SoftInputWindow: void onWindowFocusChanged(boolean)>
<android.hardware.input.TouchCalibration: int hashCode()>
<android.text.style.ImageSpan: void <init>(android.graphics.drawable.Drawable,int)>
<android.app.IApplicationThread: void updatePackageCompatibilityInfo(java.lang.String,android.content.res.CompatibilityInfo)>
<android.graphics.NinePatch: java.lang.String getName()>
<android.widget.TextView: void onLayout(boolean,int,int,int,int)>
<android.hardware.Camera: void setPreviewCallback(android.hardware.Camera.PreviewCallback)>
<android.media.TtmlRenderingWidget: void setActiveCues(java.util.Vector)>
<android.app.admin.IDevicePolicyManager: void setUserRestriction(android.content.ComponentName,java.lang.String,boolean)>
<android.bluetooth.BluetoothUuid: boolean isAdvAudioDist(android.os.ParcelUuid)>
<com.android.internal.widget.LockPatternUtils: long setLockoutAttemptDeadline()>
<android.preference.ListPreference: java.lang.String getValue()>
<android.hardware.camera2.marshal.impl.MarshalQueryableStreamConfigurationDuration: android.hardware.camera2.marshal.Marshaler createMarshaler(android.hardware.camera2.utils.TypeReference,int)>
<android.content.pm.PackageParser: void closeQuietly(java.util.jar.StrictJarFile)>
<android.renderscript.ScriptIntrinsicResize: android.renderscript.Script.KernelID getKernelID_bicubic()>
<com.android.internal.view.IInputMethodSession: void updateCursor(android.graphics.Rect)>
<android.content.pm.VerificationParams: int hashCode()>
<android.net.wifi.IWifiManager: void addToBlacklist(java.lang.String)>
<android.filterpacks.imageproc.CropRectFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>
<android.os.CommonClock: void setTimelineChangedListener(android.os.CommonClock.OnTimelineChangedListener)>
<android.media.AudioRecord.OnRecordPositionUpdateListener: void onPeriodicNotification(android.media.AudioRecord)>
<android.text.Layout: boolean isSpanned()>
<android.net.wifi.BatchedScanResult: void <init>(android.net.wifi.BatchedScanResult)>
<android.database.CursorWrapper: boolean getWantsAllOnMoveCalls()>
<com.android.internal.app.IBatteryStats: void noteFullWifiLockAcquired(int)>
<android.drm.DrmManagerClient: int processDrmInfo(android.drm.DrmInfo)>
<android.view.KeyCharacterMap: char getDisplayLabel(int)>
<android.telephony.ServiceState: int getVoiceRegState()>
<android.telephony.CellIdentityGsm: int getMcc()>
<android.provider.ContactsContract.Contacts: java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri,boolean)>
<android.os.ConditionVariable: void close()>
<android.media.AudioService: android.media.IRingtonePlayer getRingtonePlayer()>
<android.print.PrinterCapabilitiesInfo: int hashCode()>
<android.content.SyncRequest: boolean isPeriodic()>
<android.app.IActivityManager: void stopLockTaskModeOnCurrent()>
<android.media.tv.ITvInputHardware: void overrideAudioSink(int,java.lang.String,int,int,int)>
<android.net.wifi.WifiInfo: void reset()>
<android.nfc.NfcManager: android.nfc.NfcAdapter getDefaultAdapter()>
<android.filterpacks.imageproc.ToPackedGrayFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<android.os.FileObserver: void stopWatching()>
<android.net.wifi.WifiInfo: void setMacAddress(java.lang.String)>
<android.os.Parcelable.Creator: java.lang.Object createFromParcel(android.os.Parcel)>
<com.android.ims.internal.IImsCallSessionListener: void callSessionHoldFailed(com.android.ims.internal.IImsCallSession,com.android.ims.ImsReasonInfo)>
<android.app.admin.DeviceAdminInfo: boolean isVisible()>
<android.widget.Spinner: void setDropDownWidth(int)>
<android.transition.Transition: android.transition.Transition excludeTarget(java.lang.String,boolean)>
<android.text.style.BulletSpan: int describeContents()>
<android.service.voice.AlwaysOnHotwordDetector: android.content.Intent createReEnrollIntent()>
<android.graphics.Path: boolean op(android.graphics.Path,android.graphics.Path.Op)>
<android.view.View: void resetResolvedPadding()>
<android.net.NetworkScoreManager: java.lang.String getActiveScorerPackage()>
<android.graphics.Insets: android.graphics.Insets of(android.graphics.Rect)>
<android.media.MediaScannerConnection: void connect()>
<com.android.ims.internal.IImsCallSessionListener: void callSessionUssdMessageReceived(com.android.ims.internal.IImsCallSession,int,java.lang.String)>
<android.widget.PopupWindow: int getSoftInputMode()>
<android.widget.ZoomButtonsController: android.view.ViewGroup getContainer()>
<android.app.Activity: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>
<android.content.pm.PackageInstaller.SessionInfo: float getProgress()>
<android.telecom.InCallAdapter: void mergeConference(java.lang.String)>
<android.media.projection.MediaProjectionManager.Callback: void onStart(android.media.projection.MediaProjectionInfo)>
<android.hardware.input.InputDeviceIdentifier: void writeToParcel(android.os.Parcel,int)>
<android.widget.RelativeLayout.LayoutParams: int[] getRules()>
<android.os.INetworkManagementService: void setInterfaceUp(java.lang.String)>
<android.opengl.GLES20: void glFramebufferRenderbuffer(int,int,int,int)>
<android.bluetooth.IBluetoothA2dpSink: java.util.List getConnectedDevices()>
<com.google.android.gles_jni.GLImpl: void glDrawTexivOES(java.nio.IntBuffer)>
<android.graphics.Rect: java.lang.String toShortString()>
<android.view.Surface: android.graphics.Canvas lockCanvas(android.graphics.Rect)>
<android.service.dreams.DreamService: android.view.View findViewById(int)>
<android.print.PrintDocumentInfo.Builder: android.print.PrintDocumentInfo.Builder setContentType(int)>
<android.media.MiniThumbFile: long getMagic(long)>
<android.os.storage.StorageVolume: java.io.File getPathFile()>
<android.app.PendingIntent: int hashCode()>
<android.view.Window: int getVolumeControlStream()>
<android.os.Parcel: byte[] marshall()>
<android.net.NetworkScoreManager: boolean updateScores(android.net.ScoredNetwork[])>
<android.media.tv.TvView.TvInputCallback: void onVideoAvailable(java.lang.String)>
<android.util.ArraySet: void ensureCapacity(int)>
<android.content.pm.ComponentInfo: void dumpBack(android.util.Printer,java.lang.String)>
<android.net.wifi.WifiScanner: void configureWifiChange(android.net.wifi.WifiScanner.WifiChangeSettings)>
<android.bluetooth.BluetoothClass: void <init>(int)>
<android.widget.RemoteViews: void showNext(int)>
<android.renderscript.ScriptIntrinsicColorMatrix: void forEach(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>
<android.widget.RemoteViewsListAdapter: boolean hasStableIds()>
<com.google.android.gles_jni.GLImpl: void glShadeModel(int)>
<android.os.Handler: boolean postAtFrontOfQueue(java.lang.Runnable)>
<android.view.animation.BounceInterpolator: float getInterpolation(float)>
<android.view.SurfaceControl.PhysicalDisplayInfo: boolean equals(android.view.SurfaceControl.PhysicalDisplayInfo)>
<com.android.internal.widget.LockPatternUtils: boolean isSecure()>
<android.hardware.soundtrigger.KeyphraseMetadata: boolean supportsLocale(java.util.Locale)>
<android.content.res.AssetManager: android.content.res.AssetFileDescriptor openFd(java.lang.String)>
<android.view.ViewGroup: void clearChildFocus(android.view.View)>
<android.hardware.hdmi.HdmiRecordSources: android.hardware.hdmi.HdmiRecordSources.DigitalServiceSource ofDvb(int,android.hardware.hdmi.HdmiRecordSources.DvbData)>
<com.android.ims.internal.IImsService: int open(int,android.app.PendingIntent,com.android.ims.internal.IImsRegistrationListener)>
<android.telephony.NeighboringCellInfo: int describeContents()>
<android.opengl.GLES11Ext: void glGetFixedvOES(int,int[],int)>
<android.telephony.gsm.GsmCellLocation: boolean isEmpty()>
<android.widget.AutoCompleteTextView: boolean isDropDownDismissedOnCompletion()>
<android.renderscript.Short4: void add(android.renderscript.Short4)>
<android.content.RestrictionEntry: void setIntValue(int)>
<android.net.MobileLinkQualityInfo: int getMobileNetworkType()>
<android.nfc.INfcTag: android.nfc.Tag rediscover(int)>
<android.widget.RadioButton: void <init>(android.content.Context,android.util.AttributeSet)>
<android.telephony.cdma.CdmaCellLocation: void fillInNotifierBundle(android.os.Bundle)>
<android.filterpacks.imageproc.ImageSlicer: void process(android.filterfw.core.FilterContext)>
<android.telephony.SubscriptionManager: android.telephony.SubInfoRecord getDefaultVoiceSubInfo()>
<android.view.MotionEvent: float getPressure(int)>
<android.security.KeyStore: java.lang.String[] saw(java.lang.String,int)>
<com.google.android.gles_jni.GLImpl: void glTexParameterf(int,int,float)>
<android.widget.TimePicker: boolean is24HourView()>
<android.widget.Spinner: void onLayout(boolean,int,int,int,int)>
<com.android.internal.telephony.ISms: boolean disableCellBroadcastRangeForSubscriber(long,int,int)>
<android.app.backup.IBackupManager: void fullBackup(android.os.ParcelFileDescriptor,boolean,boolean,boolean,boolean,boolean,boolean,boolean,java.lang.String[])>
<android.net.RssiCurve: void writeToParcel(android.os.Parcel,int)>
<android.widget.AutoCompleteTextView: int getListSelection()>
<android.widget.ZoomButton: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.app.ActivityManager: int getCurrentUser()>
<android.speech.tts.SynthesisRequest: void <init>(java.lang.CharSequence,android.os.Bundle)>
<android.filterfw.core.SyncRunner: void run()>
<android.hardware.camera2.utils.ParamsUtils: java.lang.Object getOrDefault(android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureRequest.Key,java.lang.Object)>
<android.media.MediaInserter: void insert(android.net.Uri,android.content.ContentValues)>
<android.content.pm.ProviderInfo: java.lang.String toString()>
<android.view.FrameStats: long getStartTimeNano()>
<android.content.DefaultDataHandler: void endPrefixMapping(java.lang.String)>
<android.net.wifi.WifiInfo: boolean is24GHz()>
<android.graphics.Canvas: int saveLayer(android.graphics.RectF,android.graphics.Paint)>
<android.view.SurfaceControl: void setDisplaySurface(android.os.IBinder,android.view.Surface)>
<android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()>
<android.os.Process: void setThreadScheduler(int,int,int)>
<android.content.pm.PackageManager: int getPackageUid(java.lang.String,int)>
<android.util.LruCache: java.lang.Object create(java.lang.Object)>
<android.telecom.Connection.VideoProvider: void receiveSessionModifyResponse(int,android.telecom.VideoProfile,android.telecom.VideoProfile)>
<android.media.MediaPlayer: void addTimedTextSource(java.lang.String,java.lang.String)>
<android.app.LoaderManagerImpl: android.content.Loader initLoader(int,android.os.Bundle,android.app.LoaderManager.LoaderCallbacks)>
<android.graphics.drawable.LayerDrawable: void setLayerInset(int,int,int,int,int)>
<android.media.MediaScannerConnection.MediaScannerConnectionClient: void onMediaScannerConnected()>
<android.renderscript.Allocation: void copyFromUnchecked(float[])>
<android.filterpacks.imageproc.FixedRotationFilter: void <init>(java.lang.String)>
<android.text.method.TimeKeyListener: int getInputType()>
<android.hardware.Camera.Parameters: void setPictureFormat(int)>
<android.os.Parcel: void writeStringArray(java.lang.String[])>
<android.transition.ChangeTransform: java.lang.String[] getTransitionProperties()>
<android.accessibilityservice.AccessibilityServiceInfo: boolean getCanRetrieveWindowContent()>
<android.app.Fragment: boolean getUserVisibleHint()>
<com.google.android.gles_jni.GLImpl: void glScalex(int,int,int)>
<android.location.Geofence: int describeContents()>
<android.content.UndoManager: void suggestUndoLabel(java.lang.CharSequence)>
<android.media.tv.ITvInputManager: java.util.List getTvContentRatingSystemList(int)>
<android.widget.RemoteViews: void <init>(android.os.Parcel)>
<android.app.ApplicationErrorReport.RunningServiceInfo: void dump(android.util.Printer,java.lang.String)>
<android.hardware.camera2.impl.CameraDeviceImpl: int capture(android.hardware.camera2.CaptureRequest,android.hardware.camera2.impl.CameraDeviceImpl.CaptureCallback,android.os.Handler)>
<android.app.ActivityManagerProxy: void unbindFinished(android.os.IBinder,android.content.Intent,boolean)>
<android.view.View: int getScrollBarDefaultDelayBeforeFade()>
<android.database.IContentObserver: void onChange(boolean,android.net.Uri,int)>
<android.security.IKeyChainService: boolean deleteCaCertificate(java.lang.String)>
<android.hardware.Camera.Parameters: java.lang.String get(java.lang.String)>
<android.nfc.cardemulation.AidGroup: android.nfc.cardemulation.AidGroup createFromXml(org.xmlpull.v1.XmlPullParser)>
<android.opengl.GLES11: void glTexParameterxv(int,int,java.nio.IntBuffer)>
<android.media.MediaMetadata: boolean containsKey(java.lang.String)>
<android.content.pm.PackageParser: android.content.pm.ApplicationInfo generateApplicationInfo(android.content.pm.PackageParser.Package,int,android.content.pm.PackageUserState,int)>
<com.google.android.util.AbstractMessageParser.Token: java.util.List getInfo()>
<android.telephony.CellSignalStrengthWcdma: void <init>(int,int)>
<com.android.internal.telephony.ITelephonyRegistry: void notifyCallForwardingChangedForSubscriber(long,boolean)>
<android.graphics.RectF: void offsetTo(float,float)>
<android.widget.AdapterViewAnimator: void setInAnimation(android.content.Context,int)>
<android.content.pm.PackageStats: int describeContents()>
<android.database.sqlite.SQLiteGlobal: int releaseMemory()>
<android.opengl.GLES30: void glGetVertexAttribIiv(int,int,java.nio.IntBuffer)>
<android.app.IActivityManager: void cancelIntentSender(android.content.IIntentSender)>
<android.app.admin.IDevicePolicyManager: void setProfileEnabled(android.content.ComponentName)>
<android.database.ContentObserver: void onChange(boolean,android.net.Uri,int)>
<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int)>
<android.database.IBulkCursor: android.os.Bundle getExtras()>
<android.net.wifi.WifiConfiguration: android.net.IpConfiguration.ProxySettings getProxySettings()>
<android.app.backup.IRestoreSession: int restoreAll(long,android.app.backup.IRestoreObserver)>
<android.telecom.Conference: void <init>(android.telecom.PhoneAccountHandle)>
<android.filterfw.core.Filter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>
<android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>
<android.content.pm.PackageParser.Permission: void setPackageName(java.lang.String)>
<android.telephony.cdma.CdmaSmsCbProgramData: int getOperation()>
<com.android.internal.os.BatteryStatsImpl: void writeAsyncLocked()>
<android.content.pm.VerifierDeviceIdentity: android.content.pm.VerifierDeviceIdentity generate()>
<android.media.RemoteControlClient: void <init>(android.app.PendingIntent,android.os.Looper)>
<android.hardware.hdmi.HdmiPortInfo: java.lang.String toString()>
<com.google.android.gles_jni.GLImpl: void glPolygonOffsetx(int,int)>
<android.app.backup.BackupTransport: long requestBackupTime()>
<android.view.ViewGroup: void updateViewLayout(android.view.View,android.view.ViewGroup.LayoutParams)>
<android.widget.RelativeLayout: void onLayout(boolean,int,int,int,int)>
<android.app.LoadedApk: java.lang.String getPackageName()>
<android.os.BatteryStats.Uid: int getUserActivityCount(int,int)>
<android.app.admin.IDevicePolicyManager: boolean isMasterVolumeMuted(android.content.ComponentName)>
<android.preference.Preference: int compareTo(android.preference.Preference)>
<android.content.DialogInterface: void dismiss()>
<android.widget.SeekBar: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.app.Activity: boolean startActivityIfNeeded(android.content.Intent,int)>
<com.android.internal.widget.FaceUnlockView: void <init>(android.content.Context)>
<android.location.GpsMeasurement: boolean hasCarrierFrequencyInHz()>
<android.widget.SlidingDrawer: boolean onTouchEvent(android.view.MotionEvent)>
<android.net.NetworkCapabilities: boolean hasTransport(int)>
<android.widget.AbsListView: void setSelector(android.graphics.drawable.Drawable)>
<android.app.SearchableInfo: int getVoiceLanguageId()>
<android.view.RenderNode: boolean setHasOverlappingRendering(boolean)>
<android.media.tv.TvView.TvInputCallback: void onVideoSizeChanged(java.lang.String,int,int)>
<android.app.Fragment: void setUserVisibleHint(boolean)>
<android.opengl.GLUtils: void texSubImage2D(int,int,int,int,android.graphics.Bitmap,int,int)>
<android.graphics.FontFamily: boolean addFontFromAsset(android.content.res.AssetManager,java.lang.String)>
<android.opengl.GLES20: void glVertexAttrib2fv(int,java.nio.FloatBuffer)>
<android.os.INetworkManagementService: boolean getIpForwardingEnabled()>
<android.util.Range: android.util.Range create(java.lang.Comparable,java.lang.Comparable)>
<android.net.http.SslError: java.lang.String toString()>
<android.widget.QuickContactBadge: void <init>(android.content.Context)>
<android.telephony.TelephonyManager: java.lang.String getIsimChallengeResponse(java.lang.String)>
<android.text.Layout: boolean isLevelBoundary(int)>
<android.text.style.TypefaceSpan: java.lang.String getFamily()>
<android.accounts.AccountManager: android.accounts.Account[] getAccountsByTypeAsUser(java.lang.String,android.os.UserHandle)>
<android.media.AudioService.VolumeStreamState: void applyAllVolumes()>
<android.content.pm.ILauncherApps: java.util.List getLauncherActivities(java.lang.String,android.os.UserHandle)>
<android.graphics.Paint: int breakText(java.lang.String,boolean,float,float[])>
<android.view.Window: android.view.LayoutInflater getLayoutInflater()>
<android.os.Looper: android.os.Looper getMainLooper()>
<android.net.http.RequestHandle: void processRequest()>
<android.app.ResourcesManager: android.util.DisplayMetrics getDisplayMetricsLocked(int)>
<android.util.ArrayMap: int size()>
<android.webkit.WebStorage.QuotaUpdater: void updateQuota(long)>
<android.os.Process: void sendSignalQuiet(int,int)>
<android.net.LinkAddress: void writeToParcel(android.os.Parcel,int)>
<android.renderscript.Allocation: android.renderscript.Allocation createCubemapFromCubeFaces(android.renderscript.RenderScript,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap)>
<com.android.internal.view.menu.ListMenuItemView: void setCheckable(boolean)>
<com.android.internal.widget.SubtitleView: void setTypeface(android.graphics.Typeface)>
<android.view.ContextMenu: android.view.ContextMenu setHeaderIcon(android.graphics.drawable.Drawable)>
<android.widget.PopupWindow: void showAsDropDown(android.view.View,int,int)>
<android.view.GraphicBuffer: int getFormat()>
<android.accessibilityservice.AccessibilityService.Callbacks: void onInterrupt()>
<android.content.res.Resources: android.content.res.CompatibilityInfo getCompatibilityInfo()>
<android.location.LocationManager: void removeGpsNavigationMessageListener(android.location.GpsNavigationMessageEvent.Listener)>
<android.view.Surface: boolean isConsumerRunningBehind()>
<android.preference.PreferenceActivity: void startPreferencePanel(java.lang.String,android.os.Bundle,int,java.lang.CharSequence,android.app.Fragment,int)>
<android.hardware.Camera.Parameters: int getMaxNumMeteringAreas()>
<android.opengl.GLES30: void glPauseTransformFeedback()>
<android.view.MotionEvent: long getHistoricalEventTime(int)>
<android.app.ApplicationErrorReport.BatteryInfo: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.util.FastPrintWriter: void <init>(java.io.Writer,boolean)>
<android.accounts.GrantCredentialsPermissionActivity: void setAccountAuthenticatorResult(android.os.Bundle)>
<android.bluetooth.IBluetoothManager: void unregisterAdapter(android.bluetooth.IBluetoothManagerCallback)>
<android.view.View: int getAccessibilitySelectionStart()>
<android.app.ActivityManagerProxy: void performIdleMaintenance()>
<android.webkit.WebViewProvider: android.webkit.WebBackForwardList saveState(android.os.Bundle)>
<android.view.textservice.SpellCheckerSubtype: java.lang.String getLocale()>
<android.preference.ListPreference: int findIndexOfValue(java.lang.String)>
<android.webkit.WebViewFactoryProvider.Statics: android.net.Uri[] parseFileChooserResult(int,android.content.Intent)>
<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long)>
<android.text.Layout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,android.text.TextDirectionHeuristic,float,float)>
<android.graphics.Matrix: boolean setConcat(android.graphics.Matrix,android.graphics.Matrix)>
<android.bluetooth.BluetoothUuid: android.os.ParcelUuid parseUuidFrom(byte[])>
<android.text.style.SpellCheckSpan: int describeContents()>
<android.net.NetworkStats: android.net.NetworkStats groupedByIface()>
<android.app.Activity: void reportFullyDrawn()>
<android.app.admin.DevicePolicyManager: void setPasswordMinimumNonLetter(android.content.ComponentName,int)>
<android.util.LogWriter: void close()>
<android.content.ContentProvider: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String)>
<android.webkit.WebSettings: void setRenderPriority(android.webkit.WebSettings.RenderPriority)>
<android.view.Window: android.view.View getCurrentFocus()>
<android.opengl.GLES30: void glUniformMatrix4x3fv(int,int,boolean,java.nio.FloatBuffer)>
<android.telephony.CellInfoCdma: int describeContents()>
<android.widget.TextView: void onDraw(android.graphics.Canvas)>
<com.android.internal.view.menu.MenuItemImpl: char getNumericShortcut()>
<android.view.Window: void addPrivateFlags(int)>
<android.os.Debug: void startMethodTracing(java.lang.String,int)>
<android.app.ActivityManager.TaskDescription: void setLabel(java.lang.String)>
<com.android.internal.app.ChooserActivity: android.content.Intent getReplacementIntent(java.lang.String,android.content.Intent)>
<com.android.internal.util.NotificationColorUtil: java.lang.CharSequence invertCharSequenceColors(java.lang.CharSequence)>
<com.google.android.gles_jni.GLImpl: void glDrawTexfvOES(float[],int)>
<android.opengl.GLES20: void glGetActiveUniform(int,int,int,int[],int,int[],int,int[],int,byte[],int)>
<android.net.wifi.BatchedScanSettings: boolean isInvalid()>
<com.android.internal.util.TypedProperties: java.lang.String getString(java.lang.String)>
<android.os.RemoteException: java.lang.RuntimeException rethrowAsRuntimeException()>
<android.opengl.ETC1: int getHeight(java.nio.Buffer)>
<android.app.ActivityManagerProxy: android.os.Bundle getAssistContextExtras(int)>
<android.widget.AutoCompleteTextView: boolean isPopupShowing()>
<com.android.internal.app.IntentForwarderActivity: void onCreate(android.os.Bundle)>
<com.android.internal.view.IInputConnectionWrapper: void finishComposingText()>
<android.app.DialogFragment: void setCancelable(boolean)>
<android.net.nsd.NsdServiceInfo: void writeToParcel(android.os.Parcel,int)>
<android.opengl.GLSurfaceView: void setEGLConfigChooser(int,int,int,int,int,int)>
<android.widget.CalendarView: void setEnabled(boolean)>
<com.android.internal.statusbar.IStatusBar: void hideRecentApps(boolean,boolean)>
<android.media.ExifInterface: long getGpsDateTime()>
<android.view.View: java.lang.String debugIndent(int)>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getUrlLegal()>
<android.renderscript.Byte4: void add(android.renderscript.Byte4)>
<android.app.Instrumentation: void removeMonitor(android.app.Instrumentation.ActivityMonitor)>
<android.service.notification.StatusBarNotification: int getUserId()>
<android.provider.DocumentsProvider: android.content.res.AssetFileDescriptor openTypedAssetFile(android.net.Uri,java.lang.String,android.os.Bundle)>
<android.opengl.GLES20: void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.widget.ImageButton: void <init>(android.content.Context)>
<android.content.ContentResolver: android.content.ContentProviderClient acquireContentProviderClient(android.net.Uri)>
<android.speech.tts.SynthesisCallback: boolean hasFinished()>
<android.os.Debug: void resetThreadExternalAllocCount()>
<com.android.internal.view.BaseIWindow: void windowFocusChanged(boolean,boolean)>
<android.widget.ActivityChooserView: void onLayout(boolean,int,int,int,int)>
<android.graphics.drawable.StateListDrawable: boolean isStateful()>
<android.hardware.camera2.impl.CameraMetadataNative.Key: int getTag()>
<android.database.DatabaseUtils: java.lang.String stringForQuery(android.database.sqlite.SQLiteStatement,java.lang.String[])>
<android.webkit.WebSettings: void setEnableSmoothTransition(boolean)>
<android.view.WindowManagerPolicy: int getConfigDisplayWidth(int,int,int)>
<android.view.View: void setAlpha(float)>
<android.view.SurfaceControl: void release()>
<android.view.inputmethod.InputMethodSubtype: void <init>(int,int,java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>
<android.preference.MultiSelectListPreference: void onPrepareDialogBuilder(android.app.AlertDialog.Builder)>
<com.android.internal.widget.AutoScrollHelper: boolean isExclusive()>
<android.printservice.PrintServiceInfo: boolean equals(java.lang.Object)>
<android.view.InputEventReceiver: void onBatchedInputEventPending()>
<android.telephony.PhoneNumberUtils: boolean isVoiceMailNumber(long,java.lang.String)>
<android.renderscript.Mesh.TriangleMeshBuilder: android.renderscript.Mesh.TriangleMeshBuilder addVertex(float,float)>
<android.app.IActivityManager: void hang(android.os.IBinder,boolean)>
<com.android.internal.widget.ActionBarOverlayLayout.LayoutParams: void <init>(int,int)>
<android.widget.ArrayAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<com.android.internal.util.ProcFileReader: java.lang.String nextString()>
<android.widget.TabWidget: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.net.RouteInfo: int getType()>
<android.content.ContextWrapper: java.lang.String getPackageCodePath()>
<android.service.media.MediaBrowserService.BrowserRoot: void <init>(java.lang.String,android.os.Bundle)>
<android.text.format.DateFormat: java.lang.String getBestDateTimePattern(java.util.Locale,java.lang.String)>
<android.view.Window: android.transition.TransitionManager getTransitionManager()>
<android.view.WindowManagerPolicy: int finishPostLayoutPolicyLw()>
<android.widget.TimePicker.TimePickerDelegate: void onConfigurationChanged(android.content.res.Configuration)>
<android.text.format.Time: boolean parse(java.lang.String)>
<android.content.ContentProvider: java.lang.String getType(android.net.Uri)>
<android.media.RemoteControlClient.MetadataEditor: void apply()>
<android.location.GpsMeasurement: void setLossOfLock(byte)>
<android.os.CommonTimeConfig: int setAutoDisable(boolean)>
<android.text.DynamicLayout: int getEllipsisStart(int)>
<android.widget.VideoView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.widget.ViewSwitcher: void <init>(android.content.Context,android.util.AttributeSet)>
<android.app.IActivityManager: void serviceDoneExecuting(android.os.IBinder,int,int,int)>
<android.app.ActionBar.Tab: java.lang.CharSequence getContentDescription()>
<android.view.ViewDebug: void startHierarchyTracing(java.lang.String,android.view.View)>
<android.bluetooth.BluetoothPan: void setBluetoothTethering(boolean)>
<android.nfc.INfcCardEmulation: boolean registerAidGroupForService(int,android.content.ComponentName,android.nfc.cardemulation.AidGroup)>
<android.provider.DocumentsContract: android.net.Uri setManageMode(android.net.Uri)>
<android.widget.ActivityChooserModel.ActivityResolveInfo: java.lang.String toString()>
<android.media.AudioFormat: java.lang.String toString()>
<android.net.LocalSocket: void setFileDescriptorsForSend(java.io.FileDescriptor[])>
<android.bluetooth.IBluetoothHeadset: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.media.MediaRouter.RouteGroup: void setIconDrawable(android.graphics.drawable.Drawable)>
<android.opengl.GLES11: void glTexEnvi(int,int,int)>
<android.mtp.MtpDevice: void finalize()>
<android.view.ViewGroup: void dispatchGetDisplayList()>
<android.renderscript.Script: void forEach(int,android.renderscript.Allocation[],android.renderscript.Allocation,android.renderscript.FieldPacker,android.renderscript.Script.LaunchOptions)>
<android.widget.HorizontalScrollView: boolean isSmoothScrollingEnabled()>
<android.renderscript.Element: android.renderscript.Element I8_3(android.renderscript.RenderScript)>
<android.app.UiAutomationConnection: void clearWindowAnimationFrameStats()>
<android.database.sqlite.SQLiteProgram: void bindLong(int,long)>
<android.nfc.NdefMessage: android.nfc.NdefRecord[] getRecords()>
<android.os.Process: int myUid()>
<android.view.IInputFilter: void install(android.view.IInputFilterHost)>
<android.content.Intent: void setAllowFds(boolean)>
<android.app.Activity: void convertFromTranslucent()>
<android.filterfw.core.FilterSurfaceView: void <init>(android.content.Context)>
<android.printservice.IPrintService: void setClient(android.printservice.IPrintServiceClient)>
<android.widget.DatePickerController: void onYearSelected(int)>
<android.hardware.Camera: void addRawImageCallbackBuffer(byte[])>
<android.telecom.ParcelableConnection: com.android.internal.telecom.IVideoProvider getVideoProvider()>
<android.app.Notification.Builder: android.app.Notification.Builder setContent(android.widget.RemoteViews)>
<android.media.WebVttParser: void yieldCue()>
<android.text.format.Time: void <init>(android.text.format.Time)>
<android.view.PointerIcon: float getHotSpotY()>
<android.net.TrafficStats: void setThreadStatsTag(int)>
<android.hardware.input.KeyboardLayout: void writeToParcel(android.os.Parcel,int)>
<android.location.GpsClock: long getTimeInNs()>
<android.app.FragmentManagerImpl: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender clearActions()>
<android.app.IApplicationThread: void setCoreSettings(android.os.Bundle)>
<android.media.tv.ITvInputHardware: boolean setSurface(android.view.Surface,android.media.tv.TvStreamConfig)>
<android.speech.tts.TextToSpeech: int setEngineByPackageName(java.lang.String)>
<android.telecom.DisconnectCause: void writeToParcel(android.os.Parcel,int)>
<android.hardware.location.GeofenceHardware: boolean addGeofence(int,int,android.hardware.location.GeofenceHardwareRequest,android.hardware.location.GeofenceHardwareCallback)>
<android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveService(android.content.Intent,int)>
<android.webkit.WebView: void onDraw(android.graphics.Canvas)>
<android.app.IApplicationThread: void processInBackground()>
<android.view.MenuItem: android.view.MenuItem setIntent(android.content.Intent)>
<android.provider.ContactsContract.ProfileSyncState: android.content.ContentProviderOperation newSetOperation(android.accounts.Account,byte[])>
<android.widget.NumberPicker: void scrollBy(int,int)>
<android.media.tv.ITvInputSession: void release()>
<android.webkit.FindActionModeCallback: void updateMatchCount(int,int,boolean)>
<android.os.Bundle: void putStringArrayList(java.lang.String,java.util.ArrayList)>
<android.view.ViewRootImpl: boolean canResolveLayoutDirection()>
<android.content.ContentResolver: boolean getSyncAutomaticallyAsUser(android.accounts.Account,java.lang.String,int)>
<android.app.admin.DeviceAdminInfo: boolean usesPolicy(int)>
<android.util.LruCache: int size()>
<android.os.Debug.MemoryInfo: int getTotalSharedClean()>
<android.speech.tts.TextToSpeech: int setOnUtteranceProgressListener(android.speech.tts.UtteranceProgressListener)>
<android.util.ArrayMap: void ensureCapacity(int)>
<android.view.accessibility.AccessibilityNodeInfo: long getChildId(int)>
<android.database.sqlite.SQLiteProgram: void bindBlob(int,byte[])>
<android.content.RestrictionEntry: java.lang.String getDescription()>
<android.os.storage.IMountService: int verifyEncryptionPassword(java.lang.String)>
<android.media.AudioService: void setBluetoothA2dpOn(boolean)>
<android.opengl.GLES10: void glActiveTexture(int)>
<android.filterfw.core.FilterContext: void tearDown()>
<com.android.internal.os.BatteryStatsImpl: void noteFullWifiLockReleasedLocked(int)>
<android.os.CommonClock: int getState()>
<android.view.inputmethod.InputMethodManager: void setInputMethodAndSubtype(android.os.IBinder,java.lang.String,android.view.inputmethod.InputMethodSubtype)>
<android.hardware.Camera.Parameters: void setVideoStabilization(boolean)>
<android.animation.Animator: void removeAllListeners()>
<android.security.KeyStore: boolean syncUid(int,int)>
<com.android.internal.view.menu.MenuBuilder: void setShortcutsVisible(boolean)>
<android.app.UiAutomationConnection: boolean injectInputEvent(android.view.InputEvent,boolean)>
<android.widget.ProgressBar: void setSecondaryProgressTintMode(android.graphics.PorterDuff.Mode)>
<com.android.internal.net.VpnProfile: void writeToParcel(android.os.Parcel,int)>
<android.speech.IRecognitionListener: void onError(int)>
<android.hardware.display.WifiDisplay: boolean isAvailable()>
<android.hardware.display.WifiDisplay: java.lang.String getFriendlyDisplayName()>
<android.app.Fragment: java.lang.String getString(int)>
<android.text.method.MovementMethod: boolean onTrackballEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>
<android.view.ViewTreeObserver.OnTouchModeChangeListener: void onTouchModeChanged(boolean)>
<android.graphics.Rect: boolean isEmpty()>
<android.view.Window: android.transition.Transition getSharedElementReenterTransition()>
<android.util.Base64OutputStream: void write(int)>
<android.renderscript.Matrix4f: boolean inverseTranspose()>
<android.text.Html.TagHandler: void handleTag(boolean,java.lang.String,android.text.Editable,org.xml.sax.XMLReader)>
<android.widget.TabWidget: void childDrawableStateChanged(android.view.View)>
<android.net.NetworkFactory: void startNetwork()>
<android.opengl.Matrix: void setRotateEulerM(float[],int,float,float,float)>
<com.android.internal.util.StateMachine: void setDbg(boolean)>
<com.android.internal.app.MediaRouteControllerDialogFragment: com.android.internal.app.MediaRouteControllerDialog onCreateControllerDialog(android.content.Context,android.os.Bundle)>
<android.opengl.GLES11Ext: void glTexGenfvOES(int,int,float[],int)>
<android.content.BroadcastReceiver.PendingResult: void setResultData(java.lang.String)>
<android.hardware.camera2.CaptureFailure: android.hardware.camera2.CaptureRequest getRequest()>
<android.widget.Gallery: boolean getChildStaticTransformation(android.view.View,android.view.animation.Transformation)>
<android.widget.RadialTimePickerView: void setInputEnabled(boolean)>
<android.net.IConnectivityManager: android.net.LinkProperties getLinkProperties(android.net.Network)>
<com.android.internal.widget.ActionBarOverlayLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<android.filterpacks.videosrc.CameraSource: void setCameraParameters(android.hardware.Camera.Parameters)>
<android.widget.Checkable: void toggle()>
<android.os.PowerManager: int getMinimumScreenBrightnessSetting()>
<android.net.TrafficStats: void clearThreadStatsTag()>
<android.content.ContextWrapper: android.content.Context createPackageContextAsUser(java.lang.String,int,android.os.UserHandle)>
<android.webkit.WebChromeClient: void setupAutoFill(android.os.Message)>
<android.location.GpsClock: double getTimeUncertaintyInNs()>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setOnKeyListener(android.content.DialogInterface.OnKeyListener)>
<android.view.View: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)>
<android.renderscript.Byte3: void mul(android.renderscript.Byte3)>
<android.text.format.DateUtils: java.lang.CharSequence formatSameDayTime(long,long,int,int)>
<com.android.internal.util.ProcFileReader: void <init>(java.io.InputStream)>
<android.util.AttributeSet: int getAttributeListValue(java.lang.String,java.lang.String,java.lang.String[],int)>
<android.net.ProxyInfo: boolean equals(java.lang.Object)>
<android.widget.ScrollBarDrawable: void setHorizontalTrackDrawable(android.graphics.drawable.Drawable)>
<android.view.inputmethod.ExtractedText: void writeToParcel(android.os.Parcel,int)>
<android.content.res.ResourcesKey: void <init>(java.lang.String,int,android.content.res.Configuration,float,android.os.IBinder)>
<android.mtp.MtpDeviceInfo: java.lang.String getManufacturer()>
<android.opengl.GLES30: java.lang.String glGetTransformFeedbackVarying(int,int,int[],int,int[],int)>
<android.os.StatFs: long getFreeBytes()>
<android.bluetooth.BluetoothGattCallbackWrapper: void onSearchComplete(java.lang.String,int)>
<android.content.UndoManager: int countUndos(android.content.UndoOwner[])>
<android.app.backup.IRestoreObserver: void restoreStarting(int)>
<android.net.ProxyInfo: void <init>(java.lang.String)>
<android.view.WindowManagerPolicy.WindowState: boolean isVoiceInteraction()>
<android.view.LayoutInflater: android.view.View createView(java.lang.String,java.lang.String,android.util.AttributeSet)>
<android.hardware.location.GeofenceHardwareMonitorEvent: void <init>(int,int,int,android.location.Location)>
<android.os.FileBridge.FileBridgeOutputStream: void write(byte[],int,int)>
<android.webkit.WebResourceResponse: java.io.InputStream getData()>
<android.widget.ListPopupWindow: void setHorizontalOffset(int)>
<android.net.LinkAddress: int hashCode()>
<android.widget.CursorTreeAdapter: void notifyDataSetChanged()>
<android.net.NetworkScorerAppManager.NetworkScorerAppData: void <init>(java.lang.String,java.lang.CharSequence,java.lang.String)>
<com.android.internal.util.TypedProperties: int getStringInfo(java.lang.String)>
<android.opengl.GLES31: void glVertexAttribIFormat(int,int,int,int)>
<android.location.GpsMeasurement: void resetAzimuthInDeg()>
<com.android.internal.telephony.CallerInfoAsyncQuery: void addQueryListener(int,com.android.internal.telephony.CallerInfoAsyncQuery.OnQueryCompleteListener,java.lang.Object)>
<android.os.Debug: int getThreadExternalAllocCount()>
<android.database.Cursor: java.lang.String getColumnName(int)>
<android.media.MediaMetadataEditor: void apply()>
<android.view.animation.LayoutAnimationController: android.view.animation.Animation getAnimation()>
<android.preference.Preference: boolean callChangeListener(java.lang.Object)>
<android.app.ActionBar: void setDisplayShowHomeEnabled(boolean)>
<android.view.animation.LayoutAnimationController: void setOrder(int)>
<android.media.MediaMetadata: java.lang.String getKeyFromMetadataEditorKey(int)>
<android.content.RestrictionEntry: void setDescription(java.lang.String)>
<android.widget.CalendarView: boolean isEnabled()>
<android.location.GpsMeasurement: boolean hasPseudorangeInMeters()>
<android.content.AbstractThreadedSyncAdapter: android.content.Context getContext()>
<android.net.wifi.p2p.WifiP2pInfo: int describeContents()>
<android.filterfw.core.OutputPort: boolean filterMustClose()>
<android.widget.AbsListView: float getTopFadingEdgeStrength()>
<android.graphics.drawable.AnimatedVectorDrawable: void setTintMode(android.graphics.PorterDuff.Mode)>
<android.renderscript.Script.FieldBase: android.renderscript.Type getType()>
<android.app.Fragment: android.transition.Transition getReturnTransition()>
<com.android.internal.view.IInputMethodClient: void onUnbindMethod(int)>
<com.android.internal.widget.DecorToolbar: void setSplitView(android.view.ViewGroup)>
<android.view.WindowInsets: int getStableInsetRight()>
<android.filterfw.core.SyncRunner: int step()>
<com.google.android.gles_jni.GLImpl: void glDrawTexiOES(int,int,int,int,int)>
<com.android.internal.view.BaseIWindow: void dispatchAppVisibility(boolean)>
<android.app.FragmentBreadCrumbs: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.bluetooth.IBluetoothGatt: void readDescriptor(int,java.lang.String,int,int,android.os.ParcelUuid,int,android.os.ParcelUuid,int,android.os.ParcelUuid,int)>
<android.widget.SectionIndexer: int getPositionForSection(int)>
<android.text.method.BaseMovementMethod: boolean onKeyUp(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>
<android.renderscript.RenderScriptGL.SurfaceConfig: void setSamples(int,int,float)>
<com.android.internal.os.BatteryStatsImpl: boolean getIsOnBattery()>
<android.renderscript.RenderScriptGL: int getWidth()>
<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo: boolean isSelected()>
<android.content.pm.PackageParser.ActivityIntentInfo: java.lang.String toString()>
<android.app.admin.DevicePolicyManager: void clearUserRestriction(android.content.ComponentName,java.lang.String)>
<android.media.AudioService: void setSpeakerphoneOn(boolean)>
<com.google.android.gles_jni.GLImpl: void glLightModelfv(int,float[],int)>
<android.media.tv.ITvInputClient: void onContentBlocked(java.lang.String,int)>
<com.android.internal.app.ToolbarActionBar: void selectTab(android.app.ActionBar.Tab)>
<android.accessibilityservice.AccessibilityService.IAccessibilityServiceClientWrapper: void clearAccessibilityCache()>
<android.provider.Settings.Global: float getFloat(android.content.ContentResolver,java.lang.String)>
<android.widget.TextView: void setText(int)>
<com.google.android.util.AbstractMessageParser.YouTubeVideo: java.lang.String getRssUrl(java.lang.String)>
<android.app.IApplicationThread: void scheduleReceiver(android.content.Intent,android.content.pm.ActivityInfo,android.content.res.CompatibilityInfo,int,java.lang.String,android.os.Bundle,boolean,int,int)>
<android.view.ViewGroup: boolean dispatchTouchEvent(android.view.MotionEvent)>
<android.widget.SlidingDrawer: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.inputmethodservice.InputMethodService: android.view.LayoutInflater getLayoutInflater()>
<android.os.BaseBundle: java.lang.String getPairValue()>
<android.view.KeyEvent: void setTainted(boolean)>
<android.webkit.CacheManager: android.webkit.CacheManager.CacheResult getCacheFile(java.lang.String,java.util.Map)>
<android.view.animation.Animation: void setBackgroundColor(int)>
<android.app.Instrumentation: void startProfiling()>
<android.widget.ListPopupWindow: void setOnItemClickListener(android.widget.AdapterView.OnItemClickListener)>
<android.content.res.Resources: java.lang.String getResourceEntryName(int)>
<android.graphics.BitmapRegionDecoder: android.graphics.BitmapRegionDecoder newInstance(byte[],int,int,boolean)>
<android.bluetooth.IBluetooth: boolean isMultiAdvertisementSupported()>
<android.content.ContentProviderResult: void <init>(android.os.Parcel)>
<android.hardware.hdmi.HdmiClient: void addVendorCommandListener(android.hardware.hdmi.HdmiControlManager.VendorCommandListener)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,byte)>
<android.view.accessibility.AccessibilityWindowInfo: void getBoundsInScreen(android.graphics.Rect)>
<android.os.Debug: void resetGlobalClassInitTime()>
<android.text.style.ScaleXSpan: void <init>(android.os.Parcel)>
<android.database.sqlite.SQLiteProgram: void onAllReferencesReleased()>
<android.app.SearchableInfo: int getIconId()>
<android.view.ViewGroup: void debug(int)>
<android.telephony.ServiceState: int getCdmaEriIconIndex()>
<android.graphics.drawable.Drawable: void setFilterBitmap(boolean)>
<android.renderscript.Double3: void add(double)>
<android.renderscript.Allocation: android.renderscript.Type getType()>
<android.text.style.IconMarginSpan: int getLeadingMargin(boolean)>
<android.util.SparseArray: java.lang.Object get(int,java.lang.Object)>
<android.database.MergeCursor: boolean onMove(int,int)>
<android.telephony.gsm.GsmCellLocation: int getPsc()>
<android.media.tv.TvInputService.HardwareSession: java.lang.String getHardwareInputId()>
<android.net.TrafficStats: long getMobileTcpRxPackets()>
<android.os.INetworkManagementService: void attachPppd(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.media.projection.MediaProjection: android.hardware.display.VirtualDisplay createVirtualDisplay(java.lang.String,int,int,int,int,android.view.Surface,android.hardware.display.VirtualDisplay.Callback,android.os.Handler)>
<android.app.NotificationManager: void cancel(java.lang.String,int)>
<android.widget.DialerFilter: void setDigitsWatcher(android.text.TextWatcher)>
<android.opengl.GLES20: int glCreateProgram()>
<android.media.WebVttParser: void eos()>
<android.renderscript.FieldPacker: android.renderscript.Float2 subFloat2()>
<android.telecom.DisconnectCause: void <init>(int,java.lang.String)>
<android.content.pm.ILauncherApps: boolean isPackageEnabled(java.lang.String,android.os.UserHandle)>
<android.os.Environment: java.io.File getSecureDataDirectory()>
<android.text.Layout: int getLineCount()>
<com.android.internal.widget.AbsActionBarView.VisibilityAnimListener: void onAnimationRepeat(android.animation.Animator)>
<android.printservice.PrintJob: boolean isBlocked()>
<android.renderscript.Matrix4f: boolean inverse()>
<android.print.PrintDocumentAdapter: void onFinish()>
<android.media.tv.TvInputHardwareInfo.Builder: android.media.tv.TvInputHardwareInfo.Builder deviceId(int)>
<android.app.ActivityManagerProxy: android.app.IActivityContainer createActivityContainer(android.os.IBinder,android.app.IActivityContainerCallback)>
<android.view.View: void invalidate(android.graphics.Rect)>
<android.transition.Visibility: boolean isVisible(android.transition.TransitionValues)>
<android.renderscript.Matrix4f: float[] getArray()>
<android.widget.NumberPicker: void setOnScrollListener(android.widget.NumberPicker.OnScrollListener)>
<android.view.accessibility.AccessibilityRecord: int getScrollX()>
<android.animation.Animator.AnimatorListener: void onAnimationCancel(android.animation.Animator)>
<android.telecom.Conference.Listener: void onConnectionRemoved(android.telecom.Conference,android.telecom.Connection)>
<com.android.internal.widget.LockPatternUtils: boolean isSafeModeEnabled()>
<android.view.View: android.view.View inflate(android.content.Context,int,android.view.ViewGroup)>
<android.widget.RemoteViews: int estimateMemoryUsage()>
<android.widget.AbsListView: void onNestedScrollAccepted(android.view.View,android.view.View,int)>
<android.app.Dialog: boolean onCreateOptionsMenu(android.view.Menu)>
<android.widget.EditText: boolean getDefaultEditable()>
<android.opengl.GLES11Ext: void glGetTexGenxvOES(int,int,int[],int)>
<android.app.IActivityController: int appEarlyNotResponding(java.lang.String,int,java.lang.String)>
<android.media.MediaScannerConnection: void disconnect()>
<android.os.Parcel: android.os.IBinder readStrongBinder()>
<com.android.internal.view.IInputMethodManager: void removeClient(com.android.internal.view.IInputMethodClient)>
<android.telephony.TelephonyManager: void <init>(android.content.Context)>
<com.android.ims.internal.IImsVideoCallProvider: void sendSessionModifyResponse(android.telecom.VideoProfile)>
<com.android.internal.os.BatteryStatsHelper: android.content.Intent getBatteryBroadcast()>
<android.hardware.SensorListener: void onAccuracyChanged(int,int)>
<android.opengl.GLES20: void glDepthFunc(int)>
<android.widget.AbsListView: void setOnScrollListener(android.widget.AbsListView.OnScrollListener)>
<android.text.style.BackgroundColorSpan: void writeToParcel(android.os.Parcel,int)>
<android.app.ActivityManagerProxy: void unregisterReceiver(android.content.IIntentReceiver)>
<android.app.ActivityManagerProxy: android.content.pm.ParceledListSlice getPersistedUriPermissions(java.lang.String,boolean)>
<android.widget.TextView: boolean isSuggestionsEnabled()>
<android.media.MediaCodecInfo.AudioCapabilities: boolean supportsFormat(android.media.MediaFormat)>
<android.widget.RelativeLayout: void onMeasure(int,int)>
<android.hardware.display.WifiDisplay: void <init>(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean)>
<com.android.internal.view.menu.ExpandedMenuView: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<android.graphics.Matrix: void <init>(android.graphics.Matrix)>
<com.android.ims.internal.IImsVideoCallCallback: void handleCallSessionEvent(int)>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.util.DisplayMetrics,int[],int,int,int,int,android.graphics.Bitmap.Config)>
<com.android.internal.widget.PointerLocationView: boolean onKeyDown(int,android.view.KeyEvent)>
<android.view.MotionEvent: float getY()>
<android.view.SurfaceView: void setZOrderMediaOverlay(boolean)>
<android.net.wifi.WifiScanner.BssidListener: void onFound(android.net.wifi.ScanResult[])>
<android.webkit.WebViewProvider.ViewDelegate: void onWindowVisibilityChanged(int)>
<android.graphics.drawable.RippleDrawable: boolean setVisible(boolean,boolean)>
<android.inputmethodservice.KeyboardView: void onDraw(android.graphics.Canvas)>
<android.graphics.drawable.RippleDrawable: boolean setDrawableByLayerId(int,android.graphics.drawable.Drawable)>
<android.hardware.camera2.legacy.RequestHolder: int getSubsequeceId()>
<android.graphics.NinePatch: android.graphics.Region getTransparentRegion(android.graphics.Rect)>
<android.opengl.GLES20: void glGenFramebuffers(int,java.nio.IntBuffer)>
<android.filterpacks.text.StringLogger: void setupPorts()>
<android.content.res.Resources: void finishPreloading()>
<com.android.internal.backup.LocalTransport: int initializeDevice()>
<android.graphics.NinePatch: void <init>(android.graphics.Bitmap,byte[])>
<android.app.ApplicationThreadProxy: void updateTimePrefs(boolean)>
<android.location.LocationManager: void removeGpsStatusListener(android.location.GpsStatus.Listener)>
<com.android.internal.widget.DrawableHolder: void setY(float)>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResourceStream(android.content.res.Resources,android.util.TypedValue,java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory.Options)>
<android.media.session.ISessionManager: android.media.session.ISession createSession(java.lang.String,android.media.session.ISessionCallback,java.lang.String,int)>
<android.view.animation.DecelerateInterpolator: float getInterpolation(float)>
<android.view.ViewTreeObserver.InternalInsetsInfo: boolean equals(java.lang.Object)>
<com.android.internal.app.WindowDecorActionBar.ActionModeImpl: boolean onSubMenuSelected(com.android.internal.view.menu.SubMenuBuilder)>
<android.hardware.SensorManager: float[] getOrientation(float[],float[])>
<android.text.method.ScrollingMovementMethod: boolean home(android.widget.TextView,android.text.Spannable)>
<android.filterpacks.imageproc.ImageEncoder: void process(android.filterfw.core.FilterContext)>
<com.android.internal.telephony.ISms: void setPremiumSmsPermission(java.lang.String,int)>
<android.text.Annotation: java.lang.String getValue()>
<android.service.wallpaper.IWallpaperConnection: void attachEngine(android.service.wallpaper.IWallpaperEngine)>
<android.net.wifi.p2p.WifiP2pGroupList: java.lang.String toString()>
<com.android.internal.telephony.ISms: boolean updateMessageOnIccEf(java.lang.String,int,int,byte[])>
<android.net.nsd.NsdServiceInfo: void setServiceName(java.lang.String)>
<android.nfc.tech.NdefFormatable: android.nfc.tech.NdefFormatable get(android.nfc.Tag)>
<android.app.ActivityOptions: android.app.ActivityOptions makeThumbnailAspectScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int,int,int,android.app.ActivityOptions.OnAnimationStartedListener)>
<android.app.Dialog: void onRestoreInstanceState(android.os.Bundle)>
<android.bluetooth.BluetoothMasInstance: void <init>(int,java.lang.String,int,int)>
<android.media.AudioPortConfig: int samplingRate()>
<android.app.ApplicationThreadNative: android.os.IBinder asBinder()>
<android.view.inputmethod.CorrectionInfo: int describeContents()>
<com.android.internal.util.AsyncChannel: void replyToMessage(android.os.Message,int,int,int,java.lang.Object)>
<com.android.internal.util.XmlUtils: void writeLongArrayXml(long[],java.lang.String,org.xmlpull.v1.XmlSerializer)>
<android.view.RenderNodeAnimator: void setTarget(android.view.View)>
<android.opengl.GLES31: void glProgramUniform4f(int,int,float,float,float,float)>
<android.app.ActivityManagerProxy: android.content.ComponentName getCallingActivity(android.os.IBinder)>
<android.telephony.TelephonyManager: int getLteOnCdmaMode(long)>
<android.widget.AbsListView: void setDrawSelectorOnTop(boolean)>
<android.inputmethodservice.InputMethodService: boolean onKeyLongPress(int,android.view.KeyEvent)>
<android.content.res.Configuration: boolean isLayoutSizeAtLeast(int)>
<android.app.ActivityManagerProxy: java.util.List getRunningExternalApplications()>
<android.sax.Element: android.sax.Element requireChild(java.lang.String,java.lang.String)>
<android.widget.SeekBar: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.internal.app.AlertController.AlertParams.OnPrepareListViewListener: void onPrepareListView(android.widget.ListView)>
<android.os.BatteryStats: void finishIteratingOldHistoryLocked()>
<android.app.backup.BackupManager: boolean isBackupEnabled()>
<android.renderscript.Matrix3f: float get(int,int)>
<android.hardware.camera2.dispatch.DuckTypingDispatcher: void <init>(android.hardware.camera2.dispatch.Dispatchable,java.lang.Class)>
<android.widget.OverScroller: void <init>(android.content.Context,android.view.animation.Interpolator,float,float)>
<android.app.ProgressDialog: void setProgressPercentFormat(java.text.NumberFormat)>
<android.view.FocusFinderHelper: boolean isCandidate(android.graphics.Rect,android.graphics.Rect,int)>
<android.renderscript.Double2: void div(android.renderscript.Double2)>
<android.telecom.RemoteConnection.VideoProvider: void removeListener(android.telecom.RemoteConnection.VideoProvider.Listener)>
<android.bluetooth.BluetoothAdapter: boolean startDiscovery()>
<android.media.IVolumeController: void dismiss()>
<android.app.Fragment: void setEnterSharedElementCallback(android.app.SharedElementCallback)>
<android.app.Activity: void setProgressBarIndeterminate(boolean)>
<android.app.ActivityManagerProxy: void addPackageDependency(java.lang.String)>
<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<android.app.DownloadManager: android.net.Uri getUriForDownloadedFile(long)>
<android.widget.Filterable: android.widget.Filter getFilter()>
<android.widget.Toolbar: void inflateMenu(int)>
<android.widget.ListPopupWindow: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<com.android.internal.os.BatteryStatsImpl: void commitCurrentHistoryBatchLocked()>
<android.drm.DrmUtils.ExtendedMetadataParser: java.util.Iterator iterator()>
<android.app.Activity: void setFeatureDrawableUri(int,android.net.Uri)>
<android.net.DnsPinger: java.util.List getDnsList()>
<android.media.MediaRouter.UserRouteInfo: void setName(int)>
<android.inputmethodservice.InputMethodService: void onExtractedSetSpan(java.lang.Object,int,int,int)>
<android.media.IAudioService: void setWiredDeviceConnectionState(int,int,java.lang.String)>
<android.app.admin.DevicePolicyManager: void uninstallAllUserCaCerts(android.content.ComponentName)>
<android.view.WindowManagerPolicy: void setCurrentOrientationLw(int)>
<android.media.AudioService: boolean shouldVibrate(int)>
<android.net.wifi.p2p.WifiP2pGroupList: java.lang.String getOwnerAddr(int)>
<android.telecom.Connection.Listener: void onRingbackRequested(android.telecom.Connection,boolean)>
<android.opengl.GLES31: java.lang.String glGetProgramPipelineInfoLog(int)>
<android.print.IPrintSpooler: void writePrintJobData(android.os.ParcelFileDescriptor,android.print.PrintJobId)>
<android.net.nsd.INsdManager: android.os.Messenger getMessenger()>
<android.renderscript.RSSurfaceView: void surfaceDestroyed(android.view.SurfaceHolder)>
<android.preference.ListPreference: void setEntries(java.lang.CharSequence[])>
<android.app.Application: void registerActivityLifecycleCallbacks(android.app.Application.ActivityLifecycleCallbacks)>
<android.view.animation.Transformation: android.graphics.Rect getClipRect()>
<android.app.ProgressDialog: void incrementProgressBy(int)>
<android.view.ViewGroup: boolean hasFocus()>
<android.graphics.Canvas: void drawRGB(int,int,int)>
<android.net.LinkProperties: boolean isIdenticalMtu(android.net.LinkProperties)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setSingleChoiceItems(int,int,android.content.DialogInterface.OnClickListener)>
<android.inputmethodservice.InputMethodService.InputMethodSessionImpl: void updateExtractedText(int,android.view.inputmethod.ExtractedText)>
<android.webkit.CacheManager: void saveCacheFile(java.lang.String,android.webkit.CacheManager.CacheResult)>
<com.android.internal.widget.multiwaveview.GlowPadView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.internal.telecom.IConnectionServiceAdapter: void setIsVoipAudioMode(java.lang.String,boolean)>
<android.widget.NumberPicker: int computeVerticalScrollExtent()>
<android.media.MediaScannerClient: void setMimeType(java.lang.String)>
<android.widget.AutoCompleteTextView: android.widget.AdapterView.OnItemSelectedListener getItemSelectedListener()>
<android.gesture.GestureStroke: void clearPath()>
<android.content.ContentProviderClient: boolean release()>
<android.filterpacks.ui.SurfaceRenderFilter: void close(android.filterfw.core.FilterContext)>
<android.media.WebVttRenderingWidget: void setVisible(boolean)>
<com.android.internal.telecom.ITelecomService: int getAllPhoneAccountsCount()>
<android.widget.Toolbar: boolean showOverflowMenu()>
<android.app.admin.DevicePolicyManager: boolean isApplicationHidden(android.content.ComponentName,java.lang.String)>
<android.widget.AbsListView.SelectionBoundsAdjuster: void adjustListItemSelectionBounds(android.graphics.Rect)>
<android.view.animation.AccelerateInterpolator: void <init>(android.content.res.Resources,android.content.res.Resources.Theme,android.util.AttributeSet)>
<android.content.ClipDescription: java.lang.CharSequence getLabel()>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofInt(java.lang.Object,android.util.Property,int[])>
<android.hardware.Camera.Parameters: java.util.List getSupportedFocusModes()>
<com.android.ims.internal.IImsCallSessionListener: void callSessionRemoveParticipantsRequestFailed(com.android.ims.internal.IImsCallSession,com.android.ims.ImsReasonInfo)>
<android.renderscript.Sampler: android.renderscript.Sampler CLAMP_LINEAR_MIP_LINEAR(android.renderscript.RenderScript)>
<android.net.BaseNetworkStateTracker: android.net.NetworkInfo getNetworkInfo()>
<android.view.SurfaceControl: void closeTransaction()>
<android.os.storage.StorageVolume: void dump(com.android.internal.util.IndentingPrintWriter)>
<android.hardware.camera2.marshal.Marshaler: void marshal(java.lang.Object,java.nio.ByteBuffer)>
<android.media.session.ISessionManager: void setRemoteVolumeController(android.media.IRemoteVolumeController)>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setUpdateListener(android.animation.ValueAnimator.AnimatorUpdateListener)>
<android.view.MotionEvent: void writeToParcel(android.os.Parcel,int)>
<android.renderscript.Element: android.renderscript.Element I64_3(android.renderscript.RenderScript)>
<android.text.AndroidCharacter: int getEastAsianWidth(char)>
<com.android.internal.util.BitwiseOutputStream: void <init>(int)>
<android.text.TextDirectionHeuristic: boolean isRtl(java.lang.CharSequence,int,int)>
<android.os.ConditionVariable: void <init>(boolean)>
<android.filterfw.core.FilterContext.OnFrameReceivedListener: void onFrameReceived(android.filterfw.core.Filter,android.filterfw.core.Frame,java.lang.Object)>
<android.hardware.hdmi.HdmiControlManager: android.hardware.hdmi.HdmiPlaybackClient getPlaybackClient()>
<android.inputmethodservice.ExtractEditText: boolean performClick()>
<com.android.internal.app.LocalePicker: void setLocaleSelectionListener(com.android.internal.app.LocalePicker.LocaleSelectionListener)>
<android.nfc.INfcTag: int ndefMakeReadOnly(int)>
<android.view.InputDevice: int getVendorId()>
<android.view.WindowManagerPolicy: boolean validateRotationAnimationLw(int,int,boolean)>
<android.opengl.GLES20: boolean glIsProgram(int)>
<android.widget.GridLayout.LayoutParams: void <init>(android.view.ViewGroup.MarginLayoutParams)>
<android.content.UndoManager: void setUndoLabel(java.lang.CharSequence)>
<android.opengl.GLES31: void glProgramUniformMatrix3x4fv(int,int,int,boolean,float[],int)>
<android.appwidget.AppWidgetManager: boolean bindAppWidgetIdIfAllowed(int,android.content.ComponentName,android.os.Bundle)>
<android.filterpacks.videosrc.CameraSource: void setupPorts()>
<android.opengl.GLES20: void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer)>
<android.content.ContentProviderProxy: int bulkInsert(java.lang.String,android.net.Uri,android.content.ContentValues[])>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: void <init>(int,int,android.net.wifi.p2p.WifiP2pDevice,byte[])>
<android.renderscript.FieldPacker: short subI16()>
<android.renderscript.ProgramVertexFixedFunction.Constants: void setTexture(android.renderscript.Matrix4f)>
<android.nfc.NdefRecord: android.nfc.NdefRecord createTextRecord(java.lang.String,java.lang.String)>
<android.content.Intent.ShortcutIconResource: int describeContents()>
<android.net.NetworkUtils: int bindSocketToNetwork(int,int)>
<android.text.Layout: boolean shouldClampCursor(int)>
<android.widget.TableRow.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.ActionMenuPresenter: android.os.Parcelable onSaveInstanceState()>
<android.database.sqlite.SQLiteDirectCursorDriver: java.lang.String toString()>
<android.content.SyncRequest.Builder: android.content.SyncRequest.Builder setDisallowMetered(boolean)>
<android.view.WindowInsets: boolean isRound()>
<android.hardware.hdmi.IHdmiMhlVendorCommandListener: void onReceived(int,int,int,byte[])>
<android.app.admin.IDevicePolicyManager: void setActiveAdmin(android.content.ComponentName,boolean,int)>
<android.widget.RemoteViews: void setOnClickPendingIntent(int,android.app.PendingIntent)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>
<android.net.UrlQuerySanitizer: void setPreferFirstRepeatedParameter(boolean)>
<android.telephony.DataConnectionRealTimeInfo: java.lang.String toString()>
<com.android.internal.app.ToolbarActionBar: void setCustomView(int)>
<android.widget.ExpandableListView: void setIndicatorBounds(int,int)>
<android.filterfw.core.Frame: void setDataFromFrame(android.filterfw.core.Frame)>
<android.filterpacks.base.GLTextureSource: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>
<android.widget.OverScroller: void notifyHorizontalEdgeReached(int,int,int)>
<android.util.LocalLog: void <init>(int)>
<com.android.internal.widget.SwipeDismissLayout: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<android.hardware.hdmi.IHdmiControlService: void removeHotplugEventListener(android.hardware.hdmi.IHdmiHotplugEventListener)>
<android.telecom.TelecomManager: android.telecom.PhoneAccountHandle getSimCallManager()>
<android.view.accessibility.IAccessibilityManager: boolean sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent,int)>
<android.app.PendingIntent: android.app.PendingIntent readPendingIntentOrNullFromParcel(android.os.Parcel)>
<android.widget.NumberPicker: void setValue(int)>
<android.speech.tts.TextToSpeech: int stop()>
<android.content.UndoManager: int forgetUndos(android.content.UndoOwner[],int)>
<com.google.android.gles_jni.GLImpl: void glTranslatex(int,int,int)>
<android.hardware.camera2.params.RggbChannelVector: float getRed()>
<android.content.SyncActivityTooManyDeletes: void onCreate(android.os.Bundle)>
<android.webkit.CookieManager: boolean allowFileSchemeCookies()>
<android.widget.TextView: void setMaxLines(int)>
<android.opengl.GLU: void gluOrtho2D(javax.microedition.khronos.opengles.GL10,float,float,float,float)>
<android.net.ConnectivityManager: boolean setProcessDefaultNetworkForHostResolution(android.net.Network)>
<android.net.Network: void bindSocket(java.net.Socket)>
<android.view.ViewRootImpl: void requestUpdateConfiguration(android.content.res.Configuration)>
<android.print.PrinterId: int hashCode()>
<android.app.ActivityManagerProxy: void setImmersive(android.os.IBinder,boolean)>
<android.view.View: int getRightPaddingOffset()>
<android.content.ContextWrapper: void unbindService(android.content.ServiceConnection)>
<android.app.admin.DevicePolicyManager: boolean getScreenCaptureDisabled(android.content.ComponentName,int)>
<android.text.TextUtils: java.lang.CharSequence stringOrSpannedString(java.lang.CharSequence)>
<android.opengl.GLES11Ext: void glMultiTexCoord4xOES(int,int,int,int,int)>
<android.util.SparseLongArray: int keyAt(int)>
<com.android.internal.util.StateMachine: void removeMessages(int)>
<android.os.SELinux: java.lang.String getContext()>
<com.android.internal.util.XmlUtils: int parseUnsignedIntAttribute(java.lang.CharSequence)>
<android.net.ConnectivityManager.NetworkCallback: void onAvailable(android.net.Network)>
<android.accounts.IAccountManager: void renameAccount(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String)>
<android.location.GpsNavigationMessage: byte getType()>
<android.graphics.Camera: void translate(float,float,float)>
<android.nfc.NfcActivityManager: void onActivityStarted(android.app.Activity)>
<android.preference.SeekBarPreference: void setMax(int)>
<android.animation.Keyframe: void setValue(java.lang.Object)>
<android.opengl.GLES11Ext: void glDrawTexxOES(int,int,int,int,int)>
<android.view.Display: int getState()>
<android.content.pm.ContainerEncryptionParams: java.lang.String getMacAlgorithm()>
<android.widget.Scroller: int getDuration()>
<android.media.MediaMetadataEditor: int[] getEditableKeys()>
<com.android.internal.view.IInputContext: void getCursorCapsMode(int,int,com.android.internal.view.IInputContextCallback)>
<android.view.View: void postInvalidateOnAnimation(int,int,int,int)>
<android.text.method.BaseMovementMethod: boolean up(android.widget.TextView,android.text.Spannable)>
<android.graphics.drawable.LayerDrawable: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>
<android.media.MediaExtractor: void unselectTrack(int)>
<android.filterpacks.base.ObjectSource: void tearDown(android.filterfw.core.FilterContext)>
<android.media.MediaRouter.Callback: void onRouteGrouped(android.media.MediaRouter,android.media.MediaRouter.RouteInfo,android.media.MediaRouter.RouteGroup,int)>
<android.widget.ExpandableListView: android.os.Parcelable onSaveInstanceState()>
<android.view.MotionEvent: void setDownTime(long)>
<android.widget.Gallery: void onFocusChanged(boolean,int,android.graphics.Rect)>
<android.widget.TimePicker: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.os.Debug.MemoryInfo: int getTotalPss()>
<android.telephony.PhoneNumberUtils: java.lang.String toCallerIDMinMatch(java.lang.String)>
<android.bluetooth.BluetoothDevice: boolean isConnected()>
<android.os.CommonTimeConfig: java.net.InetSocketAddress getMasterElectionEndpoint()>
<android.text.format.Formatter: java.lang.String formatFileSize(android.content.Context,long)>
<android.app.FragmentManager: android.app.Fragment.SavedState saveFragmentInstanceState(android.app.Fragment)>
<android.content.ClipData: void fixUrisLight(int)>
<android.content.res.ColorStateList: int getDefaultColor()>
<android.filterfw.core.FrameManager: android.filterfw.core.Frame duplicateFrame(android.filterfw.core.Frame)>
<android.net.VpnService.Builder: android.net.VpnService.Builder setBlocking(boolean)>
<android.hardware.camera2.legacy.LegacyResultMapper: android.hardware.camera2.impl.CameraMetadataNative cachedConvertResultMetadata(android.hardware.camera2.legacy.LegacyRequest,long)>
<android.app.ActionBar.Tab: int getPosition()>
<android.os.RecoverySystem: void rebootWipeUserData(android.content.Context,java.lang.String)>
<android.widget.HorizontalScrollView: void <init>(android.content.Context)>
<android.text.method.ArrowKeyMovementMethod: void onTakeFocus(android.widget.TextView,android.text.Spannable,int)>
<android.printservice.IPrintService: void onPrintJobQueued(android.print.PrintJobInfo)>
<android.telephony.TelephonyManager: boolean isNetworkRoaming()>
<android.accounts.IAccountAuthenticatorResponse: void onResult(android.os.Bundle)>
<android.view.animation.AnticipateOvershootInterpolator: void <init>(float)>
<android.content.IntentFilter: java.lang.String getDataScheme(int)>
<android.view.ViewGroup: void detachViewFromParent(android.view.View)>
<android.hardware.camera2.marshal.impl.MarshalQueryableColorSpaceTransform: boolean isTypeMappingSupported(android.hardware.camera2.utils.TypeReference,int)>
<android.widget.AdapterView: java.lang.Object getSelectedItem()>
<android.location.GpsNavigationMessage: void reset()>
<android.opengl.EGLObjectHandle: void <init>(int)>
<android.hardware.ConsumerIrManager: android.hardware.ConsumerIrManager.CarrierFrequencyRange[] getCarrierFrequencies()>
<android.hardware.Camera.Parameters: java.util.List getSupportedPreviewFormats()>
<android.view.View: void requestLayout()>
<android.graphics.Canvas: boolean isRecordingFor(java.lang.Object)>
<com.android.internal.os.SamplingProfilerIntegration: boolean isEnabled()>
<android.service.dreams.Sandman: boolean shouldStartDockApp(android.content.Context,android.content.Intent)>
<android.webkit.WebSettings: void setFixedFontFamily(java.lang.String)>
<android.telephony.SignalStrength: int getDbm()>
<android.view.WindowManagerPolicy: boolean isKeyguardDrawnLw()>
<com.android.internal.widget.LockPatternView: boolean isTactileFeedbackEnabled()>
<android.net.wifi.WifiManager.ActionListener: void onFailure(int)>
<android.opengl.GLSurfaceView: void setRenderer(android.opengl.GLSurfaceView.Renderer)>
<android.database.AbstractCursor: boolean isFieldUpdated(int)>
<android.view.KeyEvent: boolean isLongPress()>
<android.app.JobSchedulerImpl: void cancel(int)>
<android.widget.RemoteViews: void setBitmap(int,java.lang.String,android.graphics.Bitmap)>
<com.android.internal.backup.IBackupTransport: java.lang.String dataManagementLabel()>
<android.view.WindowCallbackWrapper: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>
<android.media.AudioDevice: int convertInternalDeviceToDeviceType(int)>
<android.util.FastImmutableArraySet: int size()>
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()>
<android.media.AudioDevicePort: java.lang.String address()>
<android.os.UserManager: int getUserSerialNumber(int)>
<android.util.AttributeSet: float getAttributeFloatValue(int,float)>
<android.hardware.Camera.Parameters: int getJpegQuality()>
<com.android.internal.inputmethod.InputMethodUtils: android.view.inputmethod.InputMethodInfo getMostApplicableDefaultIME(java.util.List)>
<com.android.internal.telephony.IMms: boolean archiveStoredConversation(java.lang.String,long,boolean)>
<android.net.VpnService: boolean protect(int)>
<android.graphics.drawable.ShapeDrawable: android.graphics.Paint getPaint()>
<android.os.Environment.UserEnvironment: java.io.File[] buildExternalStoragePublicDirs(java.lang.String)>
<android.os.RemoteCallback: int hashCode()>
<android.telephony.CellSignalStrengthGsm: void copyFrom(android.telephony.CellSignalStrengthGsm)>
<android.widget.ExpandableListView: void dispatchDraw(android.graphics.Canvas)>
<android.net.IConnectivityManager: boolean requestRouteToHostAddress(int,byte[])>
<android.content.IntentFilter: int countCategories()>
<android.location.Criteria: void setAccuracy(int)>
<android.preference.PreferenceFragment: void addPreferencesFromResource(int)>
<android.hardware.camera2.CaptureRequest: java.lang.Object getProtected(android.hardware.camera2.CaptureRequest.Key)>
<android.widget.ZoomButtonsController: void setZoomSpeed(long)>
<android.renderscript.Matrix3f: void loadRotate(float,float,float,float)>
<android.telecom.Call: void hold()>
<android.speech.tts.TextToSpeechService: int onIsValidVoiceName(java.lang.String)>
<android.util.Range: android.util.Range extend(android.util.Range)>
<android.app.Activity.TranslucentConversionListener: void onTranslucentConversionComplete(boolean)>
<android.os.Handler: void removeMessages(int,java.lang.Object)>
<android.media.session.MediaSession.QueueItem: android.media.MediaDescription getDescription()>
<android.os.Parcel: void readByteArray(byte[])>
<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long,long,long,int)>
<android.view.ViewGroup.MarginLayoutParams: void <init>(android.view.ViewGroup.MarginLayoutParams)>
<android.media.MediaCodec: android.media.MediaFormat getOutputFormat(int)>
<android.widget.ListView: void smoothScrollByOffset(int)>
<android.telephony.PhoneStateListener: void onPreciseCallStateChanged(android.telephony.PreciseCallState)>
<com.android.internal.widget.ToolbarWidgetWrapper: boolean isOverflowMenuShowing()>
<com.android.internal.util.TypedProperties: byte getByte(java.lang.String)>
<android.view.textservice.SuggestionsInfo: void <init>(int,java.lang.String[])>
<android.hardware.Camera.Parameters: int getJpegThumbnailQuality()>
<android.renderscript.Double2: int length()>
<android.widget.SimpleAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.hardware.hdmi.IHdmiControlService: void addVendorCommandListener(android.hardware.hdmi.IHdmiVendorCommandListener,int)>
<android.os.Registrant: android.os.Message messageForRegistrant()>
<android.view.InputEvent: boolean isFromSource(int)>
<android.app.Instrumentation: void callActivityOnSaveInstanceState(android.app.Activity,android.os.Bundle,android.os.PersistableBundle)>
<android.view.KeyEvent.DispatcherState: void reset(java.lang.Object)>
<com.android.internal.app.MediaRouteChooserDialog: void <init>(android.content.Context,int)>
<com.android.internal.util.ProcFileReader: void <init>(java.io.InputStream,int)>
<android.bluetooth.le.ScanFilter: boolean equals(java.lang.Object)>
<android.util.ArrayMap: void putAll(android.util.ArrayMap)>
<android.nfc.INfcTag: boolean getExtendedLengthApdusSupported()>
<android.hardware.ConsumerIrManager: void transmit(int,int[])>
<android.view.DisplayAdjustments: void <init>(android.content.res.CompatibilityInfo,android.os.IBinder)>
<android.view.MenuItem: android.view.View getActionView()>
<android.widget.RemoteViews: void removeAllViews(int)>
<android.os.BatteryManagerInternal: boolean getBatteryLevelLow()>
<android.app.Activity: void setSecondaryProgress(int)>
<android.os.UserManager: boolean hasRestrictionsChallenge()>
<android.widget.ExpandableListAdapter: java.lang.Object getGroup(int)>
<android.ddm.DdmHandleNativeHeap: void connected()>
<android.app.Notification.WearableExtender: android.graphics.Bitmap getBackground()>
<android.app.MediaRouteButton: void setExtendedSettingsClickListener(android.view.View.OnClickListener)>
<android.util.Range: android.util.Range extend(java.lang.Comparable,java.lang.Comparable)>
<android.widget.PopupWindow: void update(int,int,int,int)>
<android.preference.PreferenceCategory: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>
<android.print.IPrintSpoolerCallbacks: void onCancelPrintJobResult(boolean,int)>
<android.media.MediaDrm.CertificateRequest: byte[] getData()>
<android.telephony.ServiceState: int hashCode()>
<android.util.MonthDisplayHelper: int[] getDigitsForRow(int)>
<android.content.pm.ContainerEncryptionParams: void writeToParcel(android.os.Parcel,int)>
<android.os.SELinux: java.lang.String getPeerContext(java.io.FileDescriptor)>
<com.android.internal.widget.DrawableHolder: void <init>(android.graphics.drawable.BitmapDrawable,float,float)>
<android.graphics.Canvas: void drawArc(float,float,float,float,float,float,boolean,android.graphics.Paint)>
<android.view.WindowManagerPolicy: void keepScreenOnStartedLw()>
<android.os.Environment: java.lang.String getStorageState(java.io.File)>
<android.widget.ListView: void addFooterView(android.view.View,java.lang.Object,boolean)>
<android.widget.SlidingDrawer: android.view.View getContent()>
<android.view.View: boolean isPressed()>
<android.net.NetworkStats: int[] getUniqueUids()>
<android.app.admin.DevicePolicyManager: boolean isMasterVolumeMuted(android.content.ComponentName)>
<android.hardware.hdmi.IHdmiRecordListener: void onClearTimerRecordingResult(int)>
<android.opengl.GLES11Ext: void glGetClipPlanexOES(int,java.nio.IntBuffer)>
<android.view.inputmethod.InputMethod: void unbindInput()>
<android.net.http.AndroidHttpClientConnection: java.net.InetAddress getRemoteAddress()>
<android.app.job.JobInfo: long getMaxExecutionDelayMillis()>
<android.media.session.MediaSession.Token: int hashCode()>
<android.graphics.PorterDuffColorFilter: boolean equals(java.lang.Object)>
<com.android.internal.view.menu.MenuItemImpl: android.graphics.drawable.Drawable getIcon()>
<android.transition.TransitionSet: android.transition.Transition excludeTarget(java.lang.Class,boolean)>
<android.widget.Scroller: void <init>(android.content.Context,android.view.animation.Interpolator,boolean)>
<android.speech.tts.TtsEngines: java.lang.String getHighestRankedEngineName()>
<android.preference.VolumePreference: void setStreamType(int)>
<android.media.AudioService: boolean isBluetoothA2dpOn()>
<android.preference.DialogPreference: void setNegativeButtonText(java.lang.CharSequence)>
<android.widget.ExpandableListView: int getPackedPositionType(long)>
<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setVisible(boolean)>
<android.view.MagnificationSpec: void clear()>
<android.view.View.OnLayoutChangeListener: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)>
<android.animation.ValueAnimator: void endAnimation(android.animation.ValueAnimator.AnimationHandler)>
<android.media.tv.TvInputInfo: android.graphics.drawable.Drawable loadIcon(android.content.Context)>
<android.app.backup.RestoreDescription: void writeToParcel(android.os.Parcel,int)>
<android.app.admin.IDevicePolicyManager: int getPasswordQuality(android.content.ComponentName,int)>
<android.widget.SimpleCursorAdapter.CursorToStringConverter: java.lang.CharSequence convertToString(android.database.Cursor)>
<android.widget.AbsSeekBar: boolean onKeyDown(int,android.view.KeyEvent)>
<android.telecom.Call: android.telecom.Call getParent()>
<android.filterpacks.imageproc.ToRGBFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<android.app.IActivityManager: void keyguardWaitingForActivityDrawn()>
<com.google.android.gles_jni.GLImpl: void glHint(int,int)>
<android.os.MemoryFile: void <init>(java.lang.String,int)>
<android.preference.SeekBarVolumizer.Callback: void onSampleStarting(android.preference.SeekBarVolumizer)>
<android.graphics.Canvas: void drawPaint(android.graphics.Paint)>
<android.provider.Downloads.Impl: boolean isStatusInformational(int)>
<android.view.Window: void setCloseOnTouchOutsideIfNotSet(boolean)>
<android.telephony.cdma.CdmaSmsCbProgramData: void writeToParcel(android.os.Parcel,int)>
<android.bluetooth.BluetoothGatt: void abortReliableWrite()>
<com.android.internal.widget.DrawableHolder: void onAnimationStart(android.animation.Animator)>
<android.hardware.hdmi.HdmiTvClient: void setSystemAudioVolume(int,int,int)>
<android.widget.TextSwitcher: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.service.notification.NotificationListenerService.Ranking: boolean matchesInterruptionFilter()>
<android.app.ActivityOptions: android.os.IRemoteCallback getOnAnimationStartListener()>
<com.google.android.gles_jni.GLImpl: void glGetClipPlanex(int,int[],int)>
<android.view.ViewTreeObserver: void removeGlobalOnLayoutListener(android.view.ViewTreeObserver.OnGlobalLayoutListener)>
<android.widget.TextView: void onTextChanged(java.lang.CharSequence,int,int,int)>
<com.android.internal.widget.LockPatternUtils: int computePasswordQuality(java.lang.String)>
<android.content.pm.XmlSerializerAndParser: java.lang.Object createFromXml(org.xmlpull.v1.XmlPullParser)>
<android.app.Notification.Builder: android.app.Notification.Builder addPerson(java.lang.String)>
<android.preference.ListPreference: void setEntryValues(java.lang.CharSequence[])>
<android.telecom.RemoteConference: void playDtmfTone(char)>
<android.media.MediaPlayer: void start()>
<android.filterpacks.imageproc.SepiaFilter: void <init>(java.lang.String)>
<android.app.Dialog: boolean isShowing()>
<android.renderscript.Script: void invoke(int,android.renderscript.FieldPacker)>
<android.hardware.Camera.Parameters: void setJpegThumbnailSize(int,int)>
<android.media.tv.ITvInputService: void notifyHdmiDeviceRemoved(android.hardware.hdmi.HdmiDeviceInfo)>
<com.android.internal.os.BatteryStatsImpl: void noteWifiScanStartedLocked(int)>
<com.android.internal.app.ProcessStats.ServiceState: void setExecuting(boolean,int,long)>
<android.graphics.drawable.LayerDrawable: boolean isProjected()>
<android.media.session.ISessionController: void rate(android.media.Rating)>
<android.telecom.TelecomManager: int getCallState()>
<android.location.Location: void setElapsedRealtimeNanos(long)>
<android.view.ViewRootImpl: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>
<android.opengl.GLES10: void glPolygonOffset(float,float)>
<android.content.Intent: android.content.Intent setFlags(int)>
<android.widget.BaseAdapter: boolean areAllItemsEnabled()>
<android.content.SyncAdapterType: boolean equals(java.lang.Object)>
<com.android.internal.os.BatteryStatsHelper: java.util.List getMobilemsppList()>
<android.widget.AdapterView: void setSelection(int)>
<com.google.android.collect.Sets: java.util.HashSet newHashSet(java.lang.Object[])>
<android.speech.RecognitionListener: void onEndOfSpeech()>
<android.hardware.Camera.Parameters: java.util.List getSupportedPreviewFpsRange()>
<com.android.internal.os.BatteryStatsImpl.StopwatchTimer: void onTimeStopped(long,long,long)>
<android.media.session.ISessionControllerCallback: void onQueueTitleChanged(java.lang.CharSequence)>
<android.bluetooth.BluetoothAdapter: boolean setScanMode(int)>
<android.renderscript.Short4: void <init>(short)>
<android.content.Context: void unbindService(android.content.ServiceConnection)>
<android.webkit.WebChromeClient: boolean onJsBeforeUnload(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult)>
<android.widget.CursorAdapter: android.widget.FilterQueryProvider getFilterQueryProvider()>
<android.service.voice.VoiceInteractionSession: void hideWindow()>
<com.google.android.util.AbstractMessageParser.Photo: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.media.tv.ITvInputManager: boolean isRatingBlocked(java.lang.String,int)>
<android.content.pm.PackageManager: java.lang.String deleteStatusToString(int)>
<android.widget.ImageView: void onDraw(android.graphics.Canvas)>
<android.gesture.GestureOverlayView.OnGestureListener: void onGestureEnded(android.gesture.GestureOverlayView,android.view.MotionEvent)>
<com.android.internal.view.menu.MenuPopupHelper: boolean collapseItemActionView(com.android.internal.view.menu.MenuBuilder,com.android.internal.view.menu.MenuItemImpl)>
<android.widget.TableLayout: void requestLayout()>
<android.graphics.PorterDuffColorFilter: void <init>(int,android.graphics.PorterDuff.Mode)>
<com.android.internal.view.menu.ActionMenuItemView: void setItemInvoker(com.android.internal.view.menu.MenuBuilder.ItemInvoker)>
<android.media.tv.TvInputManager.Session: void sendAppPrivateCommand(java.lang.String,android.os.Bundle)>
<android.view.View: int getBottomPaddingOffset()>
<android.content.pm.UserInfo: void writeToParcel(android.os.Parcel,int)>
<android.app.Fragment: void startActivityForResult(android.content.Intent,int)>
<android.text.method.ArrowKeyMovementMethod: void initialize(android.widget.TextView,android.text.Spannable)>
<android.transition.PatternPathMotion: void <init>(android.graphics.Path)>
<android.view.inputmethod.InputMethodManager: java.util.List getInputMethodList()>
<android.view.textservice.SentenceSuggestionsInfo: void <init>(android.os.Parcel)>
<android.content.Intent: void <init>(android.os.Parcel)>
<android.webkit.WebView: boolean shouldDelayChildPressedState()>
<android.app.backup.BackupManager: java.lang.String getCurrentTransport()>
<android.widget.AbsListView: void clearTextFilter()>
<android.hardware.camera2.legacy.RequestHolder: boolean hasPreviewTargets()>
<android.database.AbstractCursor: void deactivate()>
<android.graphics.ColorMatrix: void setYUV2RGB()>
<android.app.IActivityManager: void crashApplication(int,int,java.lang.String,java.lang.String)>
<android.text.style.EasyEditSpan: int describeContents()>
<android.hardware.camera2.legacy.ParameterUtils: android.util.Size[] convertSizeListToArray(java.util.List)>
<android.bluetooth.BluetoothDevice: void writeToParcel(android.os.Parcel,int)>
<android.text.BidiFormatter: java.lang.String markAfter(java.lang.String,android.text.TextDirectionHeuristic)>
<android.view.Window: void setBackgroundDrawableResource(int)>
<android.media.MediaFocusControl: void remoteControlDisplayUsesBitmapSize(android.media.IRemoteControlDisplay,int,int)>
<com.android.ims.ImsConferenceState: void writeToParcel(android.os.Parcel,int)>
<android.view.accessibility.AccessibilityNodeInfo: int getLiveRegion()>
<android.filterfw.core.GLFrame: android.graphics.Bitmap getBitmap()>
<android.renderscript.Allocation.OnBufferAvailableListener: void onBufferAvailable(android.renderscript.Allocation)>
<android.app.Instrumentation: android.app.Activity waitForMonitorWithTimeout(android.app.Instrumentation.ActivityMonitor,long)>
<android.telecom.Conference: void setActive()>
<android.bluetooth.BluetoothGattCallbackWrapper: void onFoundOrLost(boolean,android.bluetooth.le.ScanResult)>
<android.net.MobileDataStateTracker: boolean isDefaultRouteSet()>
<android.net.IConnectivityManager: void reportBadNetwork(android.net.Network)>
<com.android.internal.os.BatteryStatsImpl: long getAwakeTimeBattery()>
<android.renderscript.Short2: void mod(short)>
<android.bluetooth.BluetoothA2dpSink: void finalize()>
<android.view.WindowManagerPolicy: int getConfigDisplayHeight(int,int,int)>
<android.content.res.AssetManager: java.io.InputStream openNonAsset(java.lang.String,int)>
<com.android.internal.widget.ActionBarOverlayLayout.ActionBarVisibilityCallback: void onContentScrollStarted()>
<android.os.BatteryStats: int getWifiSupplStateCount(int,int)>
<android.opengl.GLES31Ext: void glPopDebugGroupKHR()>
<android.media.RingtoneManager: android.net.Uri getDefaultUri(int)>
<android.widget.RadialTimePickerView: void setCurrentItemShowing(int,boolean)>
<com.android.internal.view.menu.MenuPresenter: com.android.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)>
<android.hardware.display.IDisplayManager: int createVirtualDisplay(android.hardware.display.IVirtualDisplayCallback,android.media.projection.IMediaProjection,java.lang.String,java.lang.String,int,int,int,android.view.Surface,int)>
<android.media.tv.TvContract: android.net.Uri buildChannelUri(long)>
<android.os.Parcel: float[] createFloatArray()>
<android.net.NetworkPolicy: boolean hasCycle()>
<android.renderscript.Element: android.renderscript.Element MESH(android.renderscript.RenderScript)>
<android.graphics.drawable.RotateDrawable: boolean onStateChange(int[])>
<com.android.internal.http.multipart.MultipartEntity: void <init>(com.android.internal.http.multipart.Part[],org.apache.http.params.HttpParams)>
<android.media.AudioFormat: int convertNativeChannelMaskToOutMask(int)>
<android.location.LocationProvider: boolean propertiesMeetCriteria(java.lang.String,com.android.internal.location.ProviderProperties,android.location.Criteria)>
<android.app.FragmentManagerState: void <init>(android.os.Parcel)>
<android.content.UndoOwner: java.lang.String getTag()>
<android.view.DisplayEventReceiver: void scheduleVsync()>
<android.view.Display: int getFlags()>
<android.inputmethodservice.SoftInputWindow: void <init>(android.content.Context,java.lang.String,int,android.inputmethodservice.SoftInputWindow.Callback,android.view.KeyEvent.Callback,android.view.KeyEvent.DispatcherState,int,int,boolean)>
<android.app.ActionBar: void setHomeButtonEnabled(boolean)>
<android.net.BaseNetworkStateTracker: android.net.NetworkCapabilities getNetworkCapabilities()>
<android.app.Notification.Builder: android.app.Notification.Builder setTicker(java.lang.CharSequence)>
<android.text.SpannableStringBuilder: int length()>
<android.app.Service: void startForeground(int,android.app.Notification)>
<com.android.internal.view.StandaloneActionMode: void invalidate()>
<android.net.SamplingDataTracker: void stopSampling(android.net.SamplingDataTracker.SamplingSnapshot)>
<android.provider.MediaStore.Audio.Playlists.Members: android.net.Uri getContentUri(java.lang.String,long)>
<android.view.DisplayInfo: void getAppMetrics(android.util.DisplayMetrics)>
<android.media.session.PlaybackState: long getActiveQueueItemId()>
<android.view.textservice.TextServicesManager: android.view.textservice.SpellCheckerInfo[] getEnabledSpellCheckers()>
<android.security.Credentials: void unlock(android.content.Context)>
<com.android.internal.view.menu.ListMenuItemView: void onFinishInflate()>
<android.appwidget.AppWidgetHostView: void dispatchSaveInstanceState(android.util.SparseArray)>
<android.hardware.Camera: void getCameraInfo(int,android.hardware.Camera.CameraInfo)>
<com.android.ims.internal.IImsCallSession: void merge()>
<com.android.internal.os.BatteryStatsImpl: long computeUptime(long,int)>
<com.google.android.gles_jni.GLImpl: void glGetLightfv(int,int,float[],int)>
<android.telephony.NeighboringCellInfo: int getLac()>
<android.widget.TableLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<android.net.wifi.p2p.WifiP2pWfdInfo: int describeContents()>
<android.os.CommonClock: java.net.InetSocketAddress getMasterAddr()>
<com.android.internal.app.WindowDecorActionBar: void setDefaultDisplayHomeAsUpEnabled(boolean)>
<android.opengl.GLES20: void glUniform4iv(int,int,java.nio.IntBuffer)>
<android.app.backup.BackupTransport: int sendBackupData(int)>
<android.widget.LinearLayout: android.widget.LinearLayout.LayoutParams generateDefaultLayoutParams()>
<com.android.internal.view.animation.NativeInterpolatorFactoryHelper: long createDecelerateInterpolator(float)>
<android.telephony.CellSignalStrength: int getLevel()>
<android.service.persistentdata.PersistentDataBlockManager: int getDataBlockSize()>
<android.opengl.GLES20: void glVertexAttrib1fv(int,float[],int)>
<android.app.backup.BackupAgent: void attach(android.content.Context)>
<android.view.animation.LayoutAnimationController: float getDelay()>
<android.content.Context: java.io.File getObbDir()>
<android.net.NetworkCapabilities: boolean satisfiedByNetworkCapabilities(android.net.NetworkCapabilities)>
<com.google.android.gles_jni.GLImpl: void glVertexPointer(int,int,int,java.nio.Buffer)>
<android.filterfw.core.SerializedFrame: void setGenericObjectValue(java.lang.Object)>
<android.view.inputmethod.InputMethodInfo: boolean supportsSwitchingToNextInputMethod()>
<android.graphics.drawable.Drawable: void setHotspotBounds(int,int,int,int)>
<android.graphics.Typeface: android.graphics.Typeface createFromFile(java.io.File)>
<android.app.UiAutomation: android.view.accessibility.AccessibilityNodeInfo getRootInActiveWindow()>
<android.renderscript.Allocation: void copyTo(byte[])>
<android.view.View: void resetResolvedTextDirection()>
<android.media.MediaCodec: void flush()>
<android.widget.Switch: android.graphics.drawable.Drawable getTrackDrawable()>
<android.transition.TransitionUtils.MatrixEvaluator: android.graphics.Matrix evaluate(float,android.graphics.Matrix,android.graphics.Matrix)>
<android.view.IWindowFocusObserver: void focusGained(android.os.IBinder)>
<android.app.IActivityManager: boolean willActivityBeVisible(android.os.IBinder)>
<android.nfc.NdefRecord: byte[] toByteArray()>
<android.widget.SearchView: void setImeOptions(int)>
<com.android.internal.util.ArrayUtils: boolean contains(java.util.ArrayList,java.lang.Object)>
<android.content.ContentValues: void put(java.lang.String,java.lang.Double)>
<android.content.ComponentName: java.lang.String getPackageName()>
<android.util.Base64InputStream: void mark(int)>
<android.content.RestrictionEntry: void writeToParcel(android.os.Parcel,int)>
<android.net.NetworkPolicyManager: void removeUidPolicy(int,int)>
<android.hardware.location.ActivityRecognitionHardware: boolean enableActivityEvent(java.lang.String,int,long)>
<android.widget.TableRow.LayoutParams: void <init>(int)>
<android.bluetooth.BluetoothDevice: int getPhonebookAccessPermission()>
<com.android.internal.widget.ResolverDrawerLayout: void onNestedScrollAccepted(android.view.View,android.view.View,int)>
<android.nfc.INfcAdapter: void dispatch(android.nfc.Tag)>
<android.app.IActivityManager: void backgroundResourcesReleased(android.os.IBinder)>
<android.provider.Settings.Secure: boolean putFloatForUser(android.content.ContentResolver,java.lang.String,float,int)>
<android.text.util.Linkify: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String)>
<android.app.Activity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)>
<android.text.BoringLayout: android.text.BoringLayout make(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,android.text.BoringLayout.Metrics,boolean,android.text.TextUtils.TruncateAt,int)>
<android.bluetooth.BluetoothGattCallback: void onDescriptorRead(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattDescriptor,int)>
<android.os.UserManager: boolean isManagedProfile()>
<android.preference.DialogPreference: void onRestoreInstanceState(android.os.Parcelable)>
<android.widget.GridView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.util.Slog: int v(java.lang.String,java.lang.String,java.lang.Throwable)>
<android.media.SoundPool.SoundPoolDelegate: void setPriority(int,int)>
<android.net.NetworkAgent: void log(java.lang.String)>
<android.view.SurfaceView: android.view.SurfaceHolder getHolder()>
<android.media.SubtitleData: long getStartTimeUs()>
<android.app.ActivityManagerProxy: java.util.List getRecentTasks(int,int,int)>
<android.media.ToneGenerator: void finalize()>
<android.media.ImageReader: android.view.Surface getSurface()>
<android.filterpacks.imageproc.SepiaFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<android.os.INetworkManagementService: android.net.NetworkStats getNetworkStatsSummaryXt()>
<android.graphics.drawable.VectorDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>
<android.transition.ChangeTransform: android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)>
<android.opengl.GLES30: void glSamplerParameteriv(int,int,int[],int)>
<android.content.pm.PackageParser.NewPermissionInfo: void <init>(java.lang.String,int,int)>
<android.view.accessibility.AccessibilityRecord: void setScrollX(int)>
<android.widget.TextView: void setSingleLine()>
<android.view.animation.AnimationSet: boolean willChangeTransformationMatrix()>
<android.telecom.RemoteConnection.Callback: void onRingbackRequested(android.telecom.RemoteConnection,boolean)>
<android.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>
<android.media.session.MediaController.Callback: void onSessionEvent(java.lang.String,android.os.Bundle)>
<android.widget.DateTimeView: void setTime(long)>
<android.content.pm.ProviderInfo: int describeContents()>
<android.view.accessibility.AccessibilityNodeInfo: void setLabeledBy(android.view.View,int)>
<com.android.internal.view.animation.NativeInterpolatorFactoryHelper: long createAnticipateInterpolator(float)>
<android.telephony.CellLocation: android.telephony.CellLocation newFromBundle(android.os.Bundle)>
<android.os.ParcelUuid: android.os.ParcelUuid fromString(java.lang.String)>
<android.view.ViewGroup: void makeOptionalFitsSystemWindows()>
<com.android.ims.ImsCallProfile: int describeContents()>
<android.view.MotionEvent: float getToolMinor(int)>
<android.opengl.GLES30: void glVertexAttribI4iv(int,int[],int)>
<android.app.AlertDialog: void setCustomTitle(android.view.View)>
<com.android.internal.os.BatteryStatsImpl.Uid: void noteAudioTurnedOnLocked(long)>
<android.telecom.ConnectionRequest: void <init>(android.telecom.PhoneAccountHandle,android.net.Uri,android.os.Bundle)>
<android.webkit.WebView: boolean pageDown(boolean)>
<android.app.SearchDialog: void setWorking(boolean)>
<android.graphics.drawable.StateListDrawable: android.graphics.drawable.Drawable getStateDrawable(int)>
<com.android.internal.view.menu.ActionMenuItem: boolean collapseActionView()>
<android.app.QueuedWork: void waitToFinish()>
<android.preference.TwoStatePreference: boolean shouldDisableDependents()>
<android.app.Fragment: boolean getAllowReturnTransitionOverlap()>
<android.media.SoundPool: int play(int,float,float,int,int,float)>
<android.text.DynamicLayout: int getLineDescent(int)>
<android.telephony.PreciseCallState: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.widget.ILockSettings: void registerObserver(com.android.internal.widget.ILockSettingsObserver)>
<com.android.internal.os.BatteryStatsImpl: long getNetworkActivityPackets(int,int)>
<android.net.wifi.p2p.WifiP2pInfo: void <init>(android.net.wifi.p2p.WifiP2pInfo)>
<android.opengl.GLES30: boolean glUnmapBuffer(int)>
<android.opengl.GLES20: void glDrawElements(int,int,int,int)>
<android.os.ParcelableParcel: android.os.Parcel getParcel()>
<android.content.pm.PackageParser.Component: void <init>(android.content.pm.PackageParser.ParsePackageItemArgs,android.content.pm.PackageItemInfo)>
<android.widget.DatePicker: void setSpinnersShown(boolean)>
<android.preference.PreferenceFragment: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>
<com.android.internal.os.BatteryStatsImpl: void noteResetAudioLocked()>
<android.app.Activity: void onBackgroundVisibleBehindChanged(boolean)>
<android.graphics.Bitmap: void setHasAlpha(boolean)>
<android.filterpacks.videosrc.SurfaceTextureSource: void setupPorts()>
<android.hardware.camera2.params.StreamConfigurationDuration: long getDuration()>
<android.graphics.RectF: void sort()>
<android.preference.Preference: long getPersistedLong(long)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setView(int)>
<android.text.method.KeyListener: boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent)>
<android.widget.Toolbar: void setLogo(int)>
<android.content.BroadcastReceiver: void clearAbortBroadcast()>
<android.view.KeyCharacterMap: char getNumber(int)>
<android.os.StatFs: int getBlockSize()>
<android.webkit.WebView: void evaluateJavascript(java.lang.String,android.webkit.ValueCallback)>
<android.widget.ScrollView: boolean pageScroll(int)>
<android.app.VoiceInteractor.AbortVoiceRequest: void <init>(java.lang.CharSequence,android.os.Bundle)>
<android.app.ActionBar: android.view.ActionMode startActionMode(android.view.ActionMode.Callback)>
<android.text.Html.ImageGetter: android.graphics.drawable.Drawable getDrawable(java.lang.String)>
<android.net.ConnectivityManager: android.net.Network getProcessDefaultNetwork()>
<android.widget.CheckedTextView: void onRtlPropertiesChanged(int)>
<android.content.ClipData: void prepareToLeaveProcess()>
<com.android.internal.app.ToolbarActionBar: int getHeight()>
<android.graphics.drawable.GradientDrawable: int getIntrinsicWidth()>
<android.content.ContentResolver: android.net.Uri uncanonicalize(android.net.Uri)>
<com.android.internal.os.BatteryStatsImpl: long getWifiStateTime(int,long,int)>
<android.media.projection.MediaProjectionInfo: void <init>(android.os.Parcel)>
<android.net.wifi.p2p.WifiP2pGroup: void setInterface(java.lang.String)>
<android.provider.BrowserContract.Settings: void setSyncEnabled(android.content.Context,boolean)>
<android.media.tv.TvView.TvInputCallback: void onChannelRetuned(java.lang.String,android.net.Uri)>
<android.preference.Preference: int getWidgetLayoutResource()>
<android.hardware.location.IFusedLocationHardware: void stopBatching(int)>
<android.printservice.PrinterDiscoverySession: void onStopPrinterDiscovery()>
<android.telephony.CellInfoCdma: void writeToParcel(android.os.Parcel,int)>
<android.util.ArraySet: int size()>
<android.graphics.Matrix: void reset()>
<android.webkit.CacheManager.CacheResult: int getHttpStatusCode()>
<android.graphics.PathMeasure: boolean getPosTan(float,float[],float[])>
<android.app.ActivityManagerProxy: void cancelIntentSender(android.content.IIntentSender)>
<android.net.NetworkStatsHistory: android.net.NetworkStatsHistory.Entry getValues(int,android.net.NetworkStatsHistory.Entry)>
<com.android.internal.widget.DecorToolbar: boolean isOverflowMenuShowing()>
<android.preference.SwitchPreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.telephony.CellSignalStrengthGsm: void setDefaultValues()>
<android.opengl.GLES11Ext: void glTexEnvxvOES(int,int,java.nio.IntBuffer)>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder penaltyDeath()>
<android.filterfw.core.InputPort: boolean acceptsFrame()>
<android.widget.TextView: int getFadeTop(boolean)>
<android.app.ActivityManagerProxy: void finishHeavyWeightApp()>
<android.graphics.drawable.DrawableContainer: int getMinimumHeight()>
<android.hardware.camera2.CameraManager: void unregisterAvailabilityCallback(android.hardware.camera2.CameraManager.AvailabilityCallback)>
<android.hardware.camera2.legacy.LegacyCameraDevice: void waitUntilIdle()>
<android.widget.DatePickerController: int getMaxYear()>
<android.content.ContentProviderNative: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<android.hardware.hdmi.HdmiRecordSources.AnalogueServiceSource: int extraParamToByteArray(byte[],int)>
<android.telecom.RemoteConnection: android.net.Uri getAddress()>
<android.location.GeocoderParams: java.lang.String getClientPackage()>
<android.graphics.Path: void transform(android.graphics.Matrix)>
<android.content.IRestrictionsManager: android.os.Bundle getApplicationRestrictions(java.lang.String)>
<android.view.animation.Animation: void applyTransformation(float,android.view.animation.Transformation)>
<android.net.RouteInfo: java.net.InetAddress getGateway()>
<android.ddm.DdmHandleAppName: void setAppName(java.lang.String,int)>
<android.util.ArrayMap: boolean retainAll(java.util.Collection)>
<com.android.internal.inputmethod.InputMethodSubtypeSwitchingController.ControllerImpl: void onUserActionLocked(android.view.inputmethod.InputMethodInfo,android.view.inputmethod.InputMethodSubtype)>
<android.view.ViewConfiguration: int getMinimumFlingVelocity()>
<android.text.StaticLayout: int getEllipsisStart(int)>
<android.provider.CalendarContract.CalendarAlerts: boolean alarmExists(android.content.ContentResolver,long,long,long)>
<android.graphics.Canvas: boolean clipRect(float,float,float,float)>
<android.widget.SlidingDrawer: void close()>
<android.app.WallpaperInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)>
<android.view.View: void setTextDirection(int)>
<android.bluetooth.BluetoothGattCharacteristic: int getInstanceId()>
<android.app.ActivityManager: int checkUidPermission(java.lang.String,int)>
<android.hardware.camera2.legacy.ParameterUtils.WeightedRectangle: android.hardware.camera2.params.MeteringRectangle toMetering()>
<android.preference.PreferenceActivity: void onStop()>
<android.accounts.IAccountAuthenticator: void confirmCredentials(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,android.os.Bundle)>
<android.provider.Settings.System: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>
<android.graphics.Canvas: void drawColor(int)>
<android.text.AndroidCharacter: char getMirror(char)>
<android.mtp.MtpDeviceInfo: java.lang.String getVersion()>
<android.preference.PreferenceFragment: void onActivityCreated(android.os.Bundle)>
<android.text.style.TtsSpan.DecimalBuilder: void <init>(double,int,int)>
<android.filterfw.core.Program: java.lang.Object getHostValue(java.lang.String)>
<android.database.BulkCursorToCursorAdaptor: void close()>
<android.app.Service: boolean onUnbind(android.content.Intent)>
<android.view.animation.Animation: void detach()>
<android.widget.TextClock: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.filterpacks.base.FrameFetch: void process(android.filterfw.core.FilterContext)>
<android.os.ParcelFileDescriptor.AutoCloseOutputStream: void <init>(android.os.ParcelFileDescriptor)>
<android.net.NetworkStateTracker: void startSampling(android.net.SamplingDataTracker.SamplingSnapshot)>
<android.filterpacks.ui.SurfaceTargetFilter: void tearDown(android.filterfw.core.FilterContext)>
<android.view.Surface: void copyFrom(android.view.SurfaceControl)>
<android.opengl.GLES10: void glRotatex(int,int,int,int)>
<android.renderscript.Matrix4f: void loadRotate(float,float,float,float)>
<android.widget.RemoteViews: void setImageViewBitmap(int,android.graphics.Bitmap)>
<android.service.restrictions.RestrictionsReceiver: void onRequestPermission(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.os.PersistableBundle)>
<android.text.style.DynamicDrawableSpan: android.graphics.drawable.Drawable getDrawable()>
<android.service.wallpaper.IWallpaperEngine: void destroy()>
<android.opengl.ETC1Util: android.opengl.ETC1Util.ETC1Texture createTexture(java.io.InputStream)>
<com.android.internal.widget.EditableInputConnection: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)>
<android.os.storage.StorageManager: void registerListener(android.os.storage.StorageEventListener)>
<android.media.MediaRouter.RouteCategory: java.lang.CharSequence getName()>
<android.content.pm.FeatureInfo: void <init>(android.content.pm.FeatureInfo)>
<android.opengl.GLES20: void glPixelStorei(int,int)>
<android.graphics.drawable.StateListDrawable: int getStateDrawableIndex(int[])>
<android.view.View: void onDraw(android.graphics.Canvas)>
<android.opengl.GLES10: void glFogx(int,int)>
<android.view.accessibility.AccessibilityRecord: void setToIndex(int)>
<android.graphics.drawable.DrawableContainer: void draw(android.graphics.Canvas)>
<android.media.audiofx.AudioEffect: boolean hasControl()>
<android.widget.TextView: void setSelectAllOnFocus(boolean)>
<android.media.tv.TvInputManager: android.media.tv.TvInputInfo getTvInputInfo(java.lang.String)>
<android.transition.Visibility: android.animation.Animator onAppear(android.view.ViewGroup,android.transition.TransitionValues,int,android.transition.TransitionValues,int)>
<com.android.internal.view.menu.MenuBuilder.Callback: boolean onMenuItemSelected(com.android.internal.view.menu.MenuBuilder,android.view.MenuItem)>
<android.bluetooth.BluetoothMap: boolean doesClassMatchSink(android.bluetooth.BluetoothClass)>
<android.net.wifi.WifiManager: boolean isPasspointSupported()>
<android.media.session.ISessionCallback: void onNext()>
<android.os.storage.IMountService: boolean isObbMounted(java.lang.String)>
<android.animation.ValueAnimator.AnimatorUpdateListener: void onAnimationUpdate(android.animation.ValueAnimator)>
<android.webkit.JsResult: void cancel()>
<android.media.tv.TvContract: android.net.Uri buildChannelLogoUri(android.net.Uri)>
<android.widget.ImageView: void <init>(android.content.Context)>
<android.os.RemoteCallbackList: boolean register(android.os.IInterface,java.lang.Object)>
<android.util.SparseBooleanArray: void delete(int)>
<android.view.ActionProvider: boolean onPerformDefaultAction()>
<android.bluetooth.BluetoothMasInstance: int describeContents()>
<android.preference.DialogPreference: java.lang.CharSequence getNegativeButtonText()>
<android.widget.AbsSeekBar: void setThumb(android.graphics.drawable.Drawable)>
<android.app.Activity: android.view.MenuInflater getMenuInflater()>
<android.view.ViewConfiguration: long getDeviceGlobalActionKeyTimeout()>
<android.content.pm.PackageManager: java.util.List queryIntentServices(android.content.Intent,int)>
<android.media.MediaPlayer.TrackInfo: java.lang.String getLanguage()>
<android.filterfw.geometry.Point: void <init>(float,float)>
<android.ddm.DdmHandleAppName: java.lang.String getAppName()>
<android.filterpacks.videoproc.BackDropperFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>
<android.security.KeyStoreParameter.Builder: void <init>(android.content.Context)>
<android.content.UriPermission: java.lang.String toString()>
<android.renderscript.ScriptIntrinsicBlend: void forEachSrcIn(android.renderscript.Allocation,android.renderscript.Allocation)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofMultiFloat(java.lang.Object,java.lang.String,android.graphics.Path)>
<android.util.Base64InputStream: void <init>(java.io.InputStream,int,boolean)>
<android.view.RenderNodeAnimator: android.view.RenderNodeAnimator setDuration(long)>
<android.filterpacks.ui.SurfaceTargetFilter: void setupPorts()>
<com.android.ims.internal.IImsVideoCallProvider: void setCallback(com.android.ims.internal.IImsVideoCallCallback)>
<android.text.method.BaseMovementMethod: boolean scrollLineEnd(android.widget.TextView,android.text.Spannable)>
<android.provider.ContactsContract.CommonDataKinds.Phone: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>
<android.widget.ActionMenuView: boolean isOverflowReserved()>
<android.text.SpannableStringBuilder: void setFilters(android.text.InputFilter[])>
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>
<android.app.Fragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>
<android.view.ViewGroup: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>
<android.widget.Chronometer: void setBase(long)>
<android.filterpacks.videosrc.MediaSource: void <init>(java.lang.String)>
<android.transition.Transition: void createAnimators(android.view.ViewGroup,android.transition.TransitionValuesMaps,android.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList)>
<com.android.internal.policy.IFaceLockCallback: void pokeWakelock(int)>
<android.security.IKeystoreService: int generate(java.lang.String,int,int,int,int,byte[][])>
<com.android.ims.internal.IImsCallSessionListener: void callSessionConferenceExtendReceived(com.android.ims.internal.IImsCallSession,com.android.ims.internal.IImsCallSession,com.android.ims.ImsCallProfile)>
<android.gesture.Gesture: void addStroke(android.gesture.GestureStroke)>
<android.media.tv.TvView: void setMain()>
<android.util.Rational: boolean isFinite()>
<android.content.pm.PackageParser.Component: void <init>(android.content.pm.PackageParser.ParseComponentArgs,android.content.pm.ComponentInfo)>
<android.net.SamplingDataTracker: long getSampledPacketErrorCount()>
<android.media.session.MediaSession: android.media.session.MediaSession.Token getSessionToken()>
<android.hardware.display.DisplayManagerInternal: boolean requestPowerState(android.hardware.display.DisplayManagerInternal.DisplayPowerRequest,boolean)>
<android.provider.Contacts.Presence: void setPresenceIcon(android.widget.ImageView,int)>
<android.database.CursorWrapper: void unregisterDataSetObserver(android.database.DataSetObserver)>
<android.media.session.MediaController: java.lang.String getTag()>
<android.net.http.HttpResponseCache: int getNetworkCount()>
<android.hardware.display.DisplayManagerInternal.DisplayPowerCallbacks: void onDisplayStateChange(int)>
<android.opengl.GLES30: void glGetQueryiv(int,int,int[],int)>
<android.view.MotionEvent: float getTouchMajor(int)>
<com.android.internal.widget.ILockSettings: java.lang.String getString(java.lang.String,java.lang.String,int)>
<android.mtp.MtpObjectInfo: int getThumbFormat()>
<android.graphics.FontFamily: void finalize()>
<com.android.internal.util.ProcFileReader: void finishLine()>
<android.app.ActivityOptions: void abort(android.os.Bundle)>
<com.android.internal.http.multipart.Part: long getLengthOfParts(com.android.internal.http.multipart.Part[],byte[])>
<android.print.PrintAttributes: int hashCode()>
<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getIsimIst()>
<android.widget.TextView: int getLeftPaddingOffset()>
<com.android.internal.util.ArrayUtils: java.lang.Object[] removeElement(java.lang.Class,java.lang.Object[],java.lang.Object)>
<android.app.AppGlobals: android.content.pm.IPackageManager getPackageManager()>
<com.android.internal.widget.ActionBarView: void onDetachedFromWindow()>
<android.bluetooth.BluetoothAdapter: boolean isEnabled()>
<com.android.internal.app.IVoiceInteractionManagerService: void startSession(android.service.voice.IVoiceInteractionService,android.os.Bundle)>
<android.view.InputFilter: void uninstall()>
<android.app.ActivityManager: int getMaxRecentTasksStatic()>
<android.graphics.drawable.ShapeDrawable: void setPadding(android.graphics.Rect)>
<android.net.wifi.WifiManager: java.lang.String getConfigFile()>
<android.preference.SeekBarDialogPreference: void createActionButtons()>
<android.gesture.GestureOverlayView: void setGestureColor(int)>
<android.database.sqlite.SQLiteConnection: int getConnectionId()>
<android.net.IConnectivityManager: java.lang.String[] getTetherableIfaces()>
<android.app.ActivityManager.StackInfo: void readFromParcel(android.os.Parcel)>
<android.widget.AdapterView: void setOnItemClickListener(android.widget.AdapterView.OnItemClickListener)>
<android.view.ViewGroup: void recomputeViewAttributes(android.view.View)>
<android.content.SearchRecentSuggestionsProvider: boolean onCreate()>
<android.renderscript.Float4: android.renderscript.Float4 mul(android.renderscript.Float4,float)>
<android.text.SpannableStringBuilder: int hashCode()>
<android.widget.ImageView: void onDetachedFromWindow()>
<android.os.UserManager: int checkRestrictionsChallenge(java.lang.String)>
<android.view.View: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>
<android.renderscript.Script.LaunchOptions: android.renderscript.Script.LaunchOptions setX(int,int)>
<android.media.RemoteController: boolean sendMediaKeyEvent(android.view.KeyEvent)>
<android.hardware.usb.UsbDeviceConnection: boolean claimInterface(android.hardware.usb.UsbInterface,boolean)>
<com.android.internal.telecom.IInCallAdapter: void setAudioRoute(int)>
<android.view.WindowManagerPolicy: void init(android.content.Context,android.view.IWindowManager,android.view.WindowManagerPolicy.WindowManagerFuncs)>
<com.android.internal.app.MediaRouteControllerDialog: android.media.MediaRouter.RouteInfo getRoute()>
<android.media.MediaRouter: void addUserRoute(android.media.MediaRouter.UserRouteInfo)>
<android.bluetooth.BluetoothDevice: java.lang.String toString()>
<com.android.internal.view.menu.MenuBuilder: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>
<android.hardware.usb.UsbManager: android.os.ParcelFileDescriptor openAccessory(android.hardware.usb.UsbAccessory)>
<android.view.View: boolean performHapticFeedback(int)>
<android.location.GpsMeasurement: void resetCodePhaseInChips()>
<com.android.internal.inputmethod.InputMethodUtils: boolean isValidSubtypeId(android.view.inputmethod.InputMethodInfo,int)>
<android.telecom.Connection: void onAnswer()>
<android.preference.SeekBarVolumizer: boolean isSamplePlaying()>
<android.content.Context: android.content.ContentResolver getContentResolver()>
<android.hardware.input.InputManager: java.lang.String[] getKeyboardLayoutsForInputDevice(android.hardware.input.InputDeviceIdentifier)>
<android.view.accessibility.CaptioningManager.CaptionStyle: boolean hasWindowColor()>
<com.android.internal.app.ToolbarActionBar: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<com.android.internal.policy.IKeyguardShowCallback: void onShown(android.os.IBinder)>
<android.app.ActivityManagerProxy: int getProcessLimit()>
<android.view.inputmethod.CompletionInfo: long getId()>
<android.widget.TabHost: void onTouchModeChanged(boolean)>
<android.animation.PropertyValuesHolder: void setIntValues(int[])>
<android.view.View: int getRawLayoutDirection()>
<android.media.MediaCrypto: boolean requiresSecureDecoderComponent(java.lang.String)>
<android.net.IConnectivityManager: android.net.NetworkInfo getNetworkInfoForNetwork(android.net.Network)>
<android.media.Image: int getHeight()>
<com.android.ims.internal.IImsCallSessionListener: void callSessionUpdateReceived(com.android.ims.internal.IImsCallSession,com.android.ims.ImsCallProfile)>
<android.widget.ScrollView: boolean onNestedFling(android.view.View,float,float,boolean)>
<android.view.inputmethod.InputMethodManager: void viewClicked(android.view.View)>
<android.location.IGeofenceProvider: void setGeofenceHardware(android.hardware.location.IGeofenceHardware)>
<android.service.dreams.DreamService: boolean canDoze()>
<android.content.AsyncQueryHandler: void <init>(android.content.ContentResolver)>
<android.widget.TextView: int length()>
<android.media.session.ISessionManager: void dispatchMediaKeyEvent(android.view.KeyEvent,boolean)>
<android.nfc.TransceiveResult: int describeContents()>
<android.view.ViewRootImpl: void requestDisallowInterceptTouchEvent(boolean)>
<android.transition.Transition: android.transition.Transition excludeChildren(android.view.View,boolean)>
<android.app.VoiceInteractor.Request: void cancel()>
<android.telephony.CellInfo: int describeContents()>
<android.media.session.ISession: void sendEvent(java.lang.String,android.os.Bundle)>
<android.app.SearchManager: android.content.ComponentName getWebSearchActivity()>
<com.android.ims.internal.IImsService: boolean isConnected(int,int,int)>
<com.google.android.gles_jni.GLImpl: boolean glIsBuffer(int)>
<android.net.wifi.p2p.WifiP2pWfdInfo: int getDeviceType()>
<android.accessibilityservice.IAccessibilityServiceClient: void onGesture(int)>
<android.net.wifi.ScanResult: void <init>(android.net.wifi.WifiSsid,java.lang.String,java.lang.String,int,int,long)>
<android.service.voice.VoiceInteractionService: void onShutdown()>
<android.widget.ActionMenuView: void onLayout(boolean,int,int,int,int)>
<android.text.format.Time: long setJulianDay(int)>
<com.google.android.gles_jni.GLImpl: void glDeleteRenderbuffersOES(int,int[],int)>
<android.content.SyncResult: boolean hasHardError()>
<com.android.internal.widget.ResolverDrawerLayout: boolean isCollapsed()>
<android.widget.TabHost: android.widget.TabHost.TabSpec newTabSpec(java.lang.String)>
<android.media.MediaPlayer: void setDataSource(java.io.FileDescriptor)>
<android.os.Parcel: void writeDouble(double)>
<android.content.ComponentName: boolean equals(java.lang.Object)>
<android.filterpacks.text.ToUpperCase: void <init>(java.lang.String)>
<com.android.internal.view.menu.ActionMenu: boolean performShortcut(int,android.view.KeyEvent,int)>
<android.app.admin.DevicePolicyManager: boolean setPermittedAccessibilityServices(android.content.ComponentName,java.util.List)>
<android.renderscript.ScriptIntrinsicConvolve3x3: void setInput(android.renderscript.Allocation)>
<android.graphics.Rect: void printShortString(java.io.PrintWriter)>
<com.android.internal.os.AtomicFile: boolean exists()>
<android.content.ContentProviderClient: android.net.Uri canonicalize(android.net.Uri)>
<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>
<android.media.session.PlaybackState.CustomAction.Builder: void <init>(java.lang.String,java.lang.CharSequence,int)>
<android.os.Debug: void dumpNativeHeap(java.io.FileDescriptor)>
<android.widget.HeterogeneousExpandableList: int getGroupTypeCount()>
<android.view.inputmethod.InputMethodSubtype: int hashCode()>
<com.android.internal.app.IBatteryStats: void noteNetworkStatsEnabled()>
<android.renderscript.ProgramStore: android.renderscript.ProgramStore.BlendSrcFunc getBlendSrcFunc()>
<android.webkit.CookieManager: void setAcceptCookie(boolean)>
<android.os.ResultReceiver: void onReceiveResult(int,android.os.Bundle)>
<android.app.TaskStackBuilder: void startActivities()>
<com.android.internal.view.IInputMethodManager: void setInputMethodAndSubtype(android.os.IBinder,java.lang.String,android.view.inputmethod.InputMethodSubtype)>
<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator getOutAnimation()>
<android.hardware.camera2.CaptureRequest.Builder: void setTag(java.lang.Object)>
<android.filterfw.core.SerializedFrame: android.graphics.Bitmap getBitmap()>
<android.app.Service: void onLowMemory()>
<android.opengl.GLES11: void glTexEnviv(int,int,java.nio.IntBuffer)>
<android.opengl.GLSurfaceView: void setDebugFlags(int)>
<android.media.audiofx.EnvironmentalReverb: void setProperties(android.media.audiofx.EnvironmentalReverb.Settings)>
<android.net.NetworkStatsHistory: android.net.NetworkStatsHistory.Entry getValues(long,long,long,android.net.NetworkStatsHistory.Entry)>
<com.android.internal.os.BatteryStatsImpl: void noteJobStartLocked(java.lang.String,int)>
<android.app.ActivityManagerProxy: void setPackageScreenCompatMode(java.lang.String,int)>
<android.app.LocalActivityManager: void <init>(android.app.Activity,boolean)>
<android.widget.AbsoluteLayout: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.view.inputmethod.InputMethodSubtype: boolean equals(java.lang.Object)>
<android.opengl.GLES31: void glProgramUniform1fv(int,int,int,java.nio.FloatBuffer)>
<android.hardware.soundtrigger.SoundTrigger.SoundModelEvent: int describeContents()>
<android.view.View: void dispatchSetSelected(boolean)>
<android.location.GpsMeasurement: double getDopplerShiftUncertaintyInHz()>
<android.opengl.GLES10: void glTexParameterx(int,int,int)>
<com.android.internal.widget.SwipeDismissLayout.OnSwipeProgressChangedListener: void onSwipeCancelled(com.android.internal.widget.SwipeDismissLayout)>
<android.widget.SeekBar: void <init>(android.content.Context)>
<android.util.SparseLongArray: void delete(int)>
<android.view.animation.AccelerateInterpolator: void <init>(float)>
<android.location.GpsNavigationMessageEvent: java.lang.String toString()>
<android.hardware.hdmi.IHdmiControlService: int[] getSupportedTypes()>
<android.media.session.MediaSession.Token: int describeContents()>
<android.view.Window: void togglePanel(int,android.view.KeyEvent)>
<android.hardware.usb.UsbDevice: int getProductId()>
<android.widget.CheckedTextView: void setCheckMarkTintMode(android.graphics.PorterDuff.Mode)>
<android.content.pm.ContainerEncryptionParams: java.security.spec.AlgorithmParameterSpec getMacSpec()>
<android.content.IContentService: void removePeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle)>
<android.webkit.WebResourceRequest: java.util.Map getRequestHeaders()>
<android.location.LocationManager: boolean addGpsStatusListener(android.location.GpsStatus.Listener)>
<android.view.inputmethod.InputMethodManager: boolean switchToLastInputMethod(android.os.IBinder)>
<android.content.DefaultDataHandler: void skippedEntity(java.lang.String)>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeResource(android.content.res.Resources,int)>
<android.database.sqlite.SQLiteConnection: boolean isPrimaryConnection()>
<android.preference.PreferenceScreen: android.widget.ListAdapter onCreateRootAdapter()>
<android.printservice.PrinterDiscoverySession: void onStartPrinterDiscovery(java.util.List)>
<android.filterfw.core.GLFrame: void setViewport(int,int,int,int)>
<android.view.ViewRootImpl: void dispatchUnhandledInputEvent(android.view.InputEvent)>
<com.android.internal.widget.DecorToolbar: void setNavigationContentDescription(java.lang.CharSequence)>
<android.widget.Toolbar: void setMenuCallbacks(com.android.internal.view.menu.MenuPresenter.Callback,com.android.internal.view.menu.MenuBuilder.Callback)>
<android.media.MediaCodecInfo.EncoderCapabilities: android.util.Range getQualityRange()>
<android.app.backup.IFullBackupRestoreObserver: void onEndBackup()>
<com.android.internal.view.IInputConnectionWrapper: void setComposingText(java.lang.CharSequence,int)>
<android.media.effect.EffectFactory: android.media.effect.Effect createEffect(java.lang.String)>
<android.telecom.StatusHints: java.lang.CharSequence getLabel()>
<android.widget.CalendarView: void setFirstDayOfWeek(int)>
<android.app.FragmentTransaction: int commit()>
<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageOOOO(int,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>
<android.widget.DatePicker: void setEnabled(boolean)>
<com.android.internal.widget.ILockSettings: void setString(java.lang.String,java.lang.String,int)>
<android.webkit.WebViewProvider: java.lang.String getOriginalUrl()>
<android.database.BulkCursorProxy: void <init>(android.os.IBinder)>
<android.widget.CalendarView.CalendarViewDelegate: void setSelectedDateVerticalBar(int)>
<android.provider.ContactsContract.CommonDataKinds.StructuredPostal: int getTypeLabelResource(int)>
<android.print.PrinterCapabilitiesInfo: void writeToParcel(android.os.Parcel,int)>
<android.view.ViewGroup: void setClipToPadding(boolean)>
<android.telephony.SignalStrength: void setGsm(boolean)>
<android.app.Dialog: void onAttachedToWindow()>
<android.util.SparseIntArray: int size()>
<android.view.WindowManagerPolicy: void notifyLidSwitchChanged(long,boolean)>
<android.view.accessibility.AccessibilityNodeInfo: void setTextSelection(int,int)>
<android.app.trust.ITrustManager: void reportUnlockAttempt(boolean,int)>
<android.view.inputmethod.CompletionInfo: int describeContents()>
<android.net.ScoredNetwork: boolean equals(java.lang.Object)>
<android.telephony.TelephonyManager: int getCdmaEriIconIndex()>
<com.android.internal.view.StandaloneActionMode: void onCloseMenu(com.android.internal.view.menu.MenuBuilder,boolean)>
<android.security.KeyStore: boolean contains(java.lang.String)>
<android.preference.MultiCheckPreference: void <init>(android.content.Context,android.util.AttributeSet)>
<android.renderscript.Long2: long elementSum()>
<android.bluetooth.IBluetoothHeadset: boolean stopVoiceRecognition(android.bluetooth.BluetoothDevice)>
<android.hardware.camera2.dispatch.Dispatchable: java.lang.Object dispatch(java.lang.reflect.Method,java.lang.Object[])>
<android.view.IWindow: void closeSystemDialogs(java.lang.String)>
<android.media.MediaDescription.Builder: android.media.MediaDescription build()>
<android.media.MediaCodec: java.nio.ByteBuffer[] getInputBuffers()>
<android.app.IUiAutomationConnection: void disconnect()>
<android.media.AudioManager: void registerMediaButtonIntent(android.app.PendingIntent,android.content.ComponentName)>
<android.graphics.drawable.RotateDrawable: void setPivotXRelative(boolean)>
<android.renderscript.Element: android.renderscript.Element PROGRAM_STORE(android.renderscript.RenderScript)>
<android.transition.Scene: void <init>(android.view.ViewGroup)>
<android.hardware.camera2.impl.CallbackProxies.SessionStateCallbackProxy: void <init>(android.hardware.camera2.dispatch.Dispatchable)>
<android.app.LocalActivityManager: java.lang.String getCurrentId()>
<android.net.Uri.Builder: android.net.Uri.Builder opaquePart(java.lang.String)>
<android.print.PrintFileDocumentAdapter: void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter.LayoutResultCallback,android.os.Bundle)>
<com.android.internal.widget.DecorToolbar: void setCollapsible(boolean)>
<android.nfc.cardemulation.ApduServiceInfo: int getUid()>
<android.filterfw.core.GLFrame: void onFrameFetch()>
<android.database.DataSetObserver: void onInvalidated()>
<android.widget.ListView: int getDividerHeight()>
<android.os.StrictMode.ThreadPolicy.Builder: void <init>(android.os.StrictMode.ThreadPolicy)>
<android.net.wifi.p2p.WifiP2pDeviceList: boolean isGroupOwner(java.lang.String)>
<android.opengl.GLES30: void glBindSampler(int,int)>
<com.android.internal.app.WindowDecorActionBar.TabImpl: int getPosition()>
<android.bluetooth.IBluetoothGatt: void addCharacteristic(int,android.os.ParcelUuid,int,int)>
<android.view.inputmethod.BaseInputConnection: boolean requestCursorUpdates(int)>
<android.renderscript.Float2: android.renderscript.Float2 add(android.renderscript.Float2,float)>
<android.view.inputmethod.SparseRectFArray: int hashCode()>
<android.hardware.display.WifiDisplay: java.lang.String getDeviceAddress()>
<android.database.AbstractCursor: void finalize()>
<android.preference.PreferenceActivity: void onCreate(android.os.Bundle)>
<com.android.internal.view.BaseSurfaceHolder: int getRequestedWidth()>
<android.app.Activity: void setVisible(boolean)>
<android.view.WindowManagerPolicy.WindowState: android.graphics.Rect getDisplayFrameLw()>
<android.content.ContentResolver: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)>
<android.transition.Transition: android.transition.Transition excludeTarget(android.view.View,boolean)>
<android.text.style.TtsSpan: android.os.PersistableBundle getArgs()>
<android.opengl.GLSurfaceView.EGLContextFactory: void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext)>
<android.graphics.drawable.LayerDrawable: int getIntrinsicHeight()>
<android.media.audiofx.Visualizer.OnServerDiedListener: void onServerDied()>
<com.android.server.net.DnsServerRepository: void setDnsServersOn(android.net.LinkProperties)>
<android.app.IApplicationThread: void dumpDbInfo(java.io.FileDescriptor,java.lang.String[])>
<android.sax.Element: android.sax.Element requireChild(java.lang.String)>
<android.hardware.camera2.CameraCharacteristics: java.lang.Class getKeyClass()>
<android.text.method.ScrollingMovementMethod: boolean lineStart(android.widget.TextView,android.text.Spannable)>
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothServerSocket listenUsingScoOn()>
<android.os.storage.IMountService: void unmountVolume(java.lang.String,boolean,boolean)>
<android.speech.tts.TextToSpeech: int playEarcon(java.lang.String,int,java.util.HashMap)>
<android.renderscript.Script: void setVar(int,android.renderscript.FieldPacker,android.renderscript.Element,int[])>
<android.widget.RelativeLayout: void <init>(android.content.Context)>
<android.hardware.camera2.ICameraDeviceCallbacks: void onDeviceError(int,android.hardware.camera2.impl.CaptureResultExtras)>
<android.hardware.camera2.impl.CameraDeviceImpl: void finalize()>
<com.android.internal.util.FastPrintWriter: void clearError()>
<android.media.MediaPlayer: void setOnTimedTextListener(android.media.MediaPlayer.OnTimedTextListener)>
<android.app.DialogFragment: void onDestroyView()>
<android.webkit.PluginData: java.util.Map getHeaders()>
<com.android.internal.widget.multiwaveview.GlowPadView.OnTriggerListener: void onGrabbedStateChange(android.view.View,int)>
<android.widget.HorizontalScrollView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.RemoteViewsAdapter: void saveRemoteViewsCache()>
<android.view.accessibility.AccessibilityWindowInfo: java.lang.String toString()>
<com.android.internal.app.ProcessStats: void dumpLocked(java.io.PrintWriter,java.lang.String,long,boolean,boolean,boolean)>
<android.text.method.ArrowKeyMovementMethod: android.text.method.MovementMethod getInstance()>
<android.media.AudioFormat: int getSampleRate()>
<android.telecom.RemoteConference.Callback: void onConnectionRemoved(android.telecom.RemoteConference,android.telecom.RemoteConnection)>
<android.widget.SimpleCursorAdapter: void setViewText(android.widget.TextView,java.lang.String)>
<android.webkit.WebViewProvider: void clearFormData()>
<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])>
<android.telephony.TelephonyManager: int getPhoneType()>
<android.view.SurfaceHolder: boolean isCreating()>
<android.media.session.ISessionCallback: void onPause()>
<com.android.internal.view.menu.BaseMenuPresenter: boolean expandItemActionView(com.android.internal.view.menu.MenuBuilder,com.android.internal.view.menu.MenuItemImpl)>
<android.hardware.display.IDisplayManager: void registerCallback(android.hardware.display.IDisplayManagerCallback)>
<com.android.internal.app.LocalePicker: void updateLocale(java.util.Locale)>
<android.preference.PreferenceGroupAdapter: int getViewTypeCount()>
<android.view.IInputFilter: void uninstall()>
<android.opengl.GLES31: void glDrawArraysIndirect(int,long)>
<android.media.MediaPlayer.OnErrorListener: boolean onError(android.media.MediaPlayer,int,int)>
<android.ddm.DdmHandleExit: void disconnected()>
<android.database.sqlite.SQLiteDatabase: boolean isDbLockedByCurrentThread()>
<android.hardware.camera2.DngCreator: android.hardware.camera2.DngCreator setOrientation(int)>
<android.app.ActivityManagerProxy: android.app.PendingIntent getRunningServiceControlPanel(android.content.ComponentName)>
<android.widget.MultiAutoCompleteTextView: boolean enoughToFilter()>
<android.os.CommonTimeConfig: int setPanicThreshold(int)>
<android.location.Country: void <init>(android.location.Country)>
<android.net.http.AndroidHttpClient: org.apache.http.conn.ClientConnectionManager getConnectionManager()>
<android.telecom.RemoteConnection.VideoProvider: void requestCameraCapabilities()>
<android.media.MediaRouterClientState.RouteInfo: void writeToParcel(android.os.Parcel,int)>
<android.renderscript.ProgramStore: boolean isColorMaskBlueEnabled()>
<com.android.internal.app.LocalePicker.LocaleInfo: java.lang.String toString()>
<android.graphics.YuvImage: int[] getStrides()>
<android.renderscript.BaseObj: void setName(java.lang.String)>
<com.android.internal.view.IInputConnectionWrapper: void endBatchEdit()>
<android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)>
<android.telephony.SignalStrength: android.telephony.SignalStrength makeSignalStrengthFromRilParcel(android.os.Parcel)>
<android.widget.ImageView: void setColorFilter(int)>
<android.preference.DialogPreference: void setDialogLayoutResource(int)>
<android.view.accessibility.AccessibilityEvent: long getEventTime()>
<android.widget.AbsListView: void onAttachedToWindow()>
<android.widget.AdapterView: void removeAllViews()>
<android.view.inputmethod.CursorAnchorInfo: java.lang.String toString()>
<android.net.LocalSocket: void shutdownOutput()>
<android.content.res.AssetManager.AssetInputStream: void reset()>
<com.google.android.util.AbstractMessageParser.Html: void <init>(java.lang.String,java.lang.String)>
<android.widget.OverScroller: boolean isScrollingInDirection(float,float)>
<android.inputmethodservice.KeyboardView: void setOnKeyboardActionListener(android.inputmethodservice.KeyboardView.OnKeyboardActionListener)>
<android.location.GpsClock: void setTimeUncertaintyInNs(double)>
<android.media.audiopolicy.AudioMix.Builder: android.media.audiopolicy.AudioMix.Builder setRouteFlags(int)>
<android.webkit.WebSettings: boolean getLoadWithOverviewMode()>
<android.content.res.AssetFileDescriptor.AutoCloseInputStream: void <init>(android.content.res.AssetFileDescriptor)>
<com.android.internal.content.PackageHelper: boolean isContainerMounted(java.lang.String)>
<android.media.MediaPlayer: void invoke(android.os.Parcel,android.os.Parcel)>
<android.appwidget.AppWidgetManager: boolean hasBindAppWidgetPermission(java.lang.String,int)>
<android.hardware.camera2.legacy.CameraDeviceState: boolean setCaptureStart(android.hardware.camera2.legacy.RequestHolder,long,int)>
<android.content.IClipboard: android.content.ClipData getPrimaryClip(java.lang.String)>
<android.content.SyncInfo: void <init>(android.content.SyncInfo)>
<android.graphics.drawable.InsetDrawable: android.graphics.Insets getOpticalInsets()>
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setAlphabeticShortcut(char)>
<android.text.method.WordIterator: void setCharSequence(java.lang.CharSequence,int,int)>
<android.telephony.CellInfoGsm: void setCellIdentity(android.telephony.CellIdentityGsm)>
<android.bluetooth.IBluetoothGatt: void addIncludedService(int,int,int,android.os.ParcelUuid)>
<android.webkit.WebView: void refreshPlugins(boolean)>
<android.renderscript.Element: android.renderscript.Element U64_4(android.renderscript.RenderScript)>
<android.widget.ZoomButton: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.telephony.CellSignalStrength: int getDbm()>
<android.widget.AbsListView.LayoutParams: void <init>(int,int)>
<android.hardware.camera2.params.HighSpeedVideoConfiguration: int getFpsMin()>
<android.print.PrintJob: boolean isCancelled()>
<android.filterfw.core.OutputPort: boolean isConnected()>
<android.widget.ListPopupWindow: void setContentWidth(int)>
<android.text.TextUtils: boolean isGraphic(char)>
<android.filterfw.core.ShaderProgram: android.filterfw.core.GLEnvironment getGLEnvironment()>
<com.android.internal.location.ProviderRequest: int describeContents()>
<android.drm.DrmEvent: void <init>(int,int,java.lang.String,java.util.HashMap)>
<android.app.IActivityManager: void stopAppSwitches()>
<com.android.internal.widget.PasswordEntryKeyboardView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.service.notification.ZenModeConfig: void writeToParcel(android.os.Parcel,int)>
<android.hardware.soundtrigger.SoundTrigger.KeyphraseSoundModel: void writeToParcel(android.os.Parcel,int)>
<android.media.AudioTrack.OnPlaybackPositionUpdateListener: void onPeriodicNotification(android.media.AudioTrack)>
<android.content.ContextWrapper: java.io.File getExternalFilesDir(java.lang.String)>
<android.media.MediaInserter: void insertwithPriority(android.net.Uri,android.content.ContentValues)>
<android.widget.TextView: int getPaintFlags()>
<android.app.trust.ITrustManager: void registerTrustListener(android.app.trust.ITrustListener)>
<android.net.TrafficStats: void startDataProfiling(android.content.Context)>
<android.view.ViewGroup: boolean isTransformedTouchPointInView(float,float,android.view.View,android.graphics.PointF)>
<android.animation.ValueAnimator: float getDurationScale()>
<android.filterpacks.imageproc.ToRGBFilter: void setupPorts()>
<android.app.FragmentManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.graphics.Rect: void set(int,int,int,int)>
<android.content.Loader: boolean takeContentChanged()>
<android.os.BatteryProperties: void set(android.os.BatteryProperties)>
<android.app.Dialog: void onWindowDismissed()>
<com.android.internal.view.menu.MenuItemImpl: int getItemId()>
<com.android.internal.policy.IKeyguardService: void verifyUnlock(com.android.internal.policy.IKeyguardExitCallback)>
<android.view.LayoutInflater: android.view.LayoutInflater.Filter getFilter()>
<android.service.fingerprint.IFingerprintService: void enrollCancel(android.os.IBinder,int)>
<android.transition.Transition: android.transition.Transition excludeTarget(int,boolean)>
<com.google.android.util.AbstractMessageParser.Photo: java.lang.String getAlbum()>
<android.os.BaseBundle: long getLong(java.lang.String)>
<android.service.wallpaper.WallpaperService: void onDestroy()>
<android.content.pm.PermissionInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)>
<android.view.KeyCharacterMap.FallbackAction: void recycle()>
<android.net.LinkProperties: boolean isIdenticalHttpProxy(android.net.LinkProperties)>
<android.opengl.GLES30: void glInvalidateSubFramebuffer(int,int,java.nio.IntBuffer,int,int,int,int)>
<android.webkit.WebView.WebViewTransport: android.webkit.WebView getWebView()>
<android.net.IConnectivityManager: boolean prepareVpn(java.lang.String,java.lang.String)>
<android.content.ContextWrapper: java.io.FileInputStream openFileInput(java.lang.String)>
<com.android.internal.app.WindowDecorActionBar.ActionModeImpl: android.view.View getCustomView()>
<android.telecom.InCallService.VideoCall: void setDeviceOrientation(int)>
<android.net.wifi.IWifiManager: boolean isDualBandSupported()>
<android.hardware.soundtrigger.SoundTrigger.Keyphrase: java.lang.String toString()>
<android.preference.Preference: java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int)>
<android.media.MediaExtractor: void selectTrack(int)>
<android.bluetooth.BluetoothHeadsetClientCall: void setState(int)>
<com.android.internal.widget.PasswordEntryKeyboardHelper: void onKey(int,int[])>
<android.hardware.camera2.impl.CameraDeviceImpl.CaptureCallback: void onCaptureFailed(android.hardware.camera2.CameraDevice,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureFailure)>
<android.graphics.Paint.FontMetricsInt: java.lang.String toString()>
<android.opengl.GLES10: void glMultMatrixf(float[],int)>
<android.widget.QuickContactBadge: void <init>(android.content.Context,android.util.AttributeSet)>
<com.google.android.gles_jni.GLImpl: void glDepthMask(boolean)>
<android.widget.PopupMenu: void inflate(int)>
<android.text.Spannable.Factory: android.text.Spannable newSpannable(java.lang.CharSequence)>
<android.hardware.camera2.impl.CameraCaptureSessionImpl: void finalize()>
<android.widget.TextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.hardware.hdmi.HdmiPortInfo: int getId()>
<android.hardware.location.GeofenceHardwareRequestParcelable: java.lang.String toString()>
<android.text.TextUtils: boolean isPrintableAscii(char)>
<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object get(android.hardware.camera2.CaptureRequest.Key)>
<com.android.internal.view.IInputMethodManager: void setAdditionalInputMethodSubtypes(java.lang.String,android.view.inputmethod.InputMethodSubtype[])>
<android.view.ViewConfiguration: int getMaximumDrawingCacheSize()>
<android.telecom.RemoteConnection: int getCallCapabilities()>
<com.android.internal.telephony.ITelephonyRegistry: void notifyPreciseDataConnectionFailed(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.media.audiofx.BassBoost: short getRoundedStrength()>
<android.net.ProxyDataTracker: java.lang.String getTcpBufferSizesPropName()>
<android.media.Image.Plane: int getPixelStride()>
<com.android.internal.util.FastXmlSerializer: void docdecl(java.lang.String)>
<com.android.internal.util.HexDump: java.lang.String toHexString(byte[])>
<android.media.tv.TvInputManager: void addBlockedRating(android.media.tv.TvContentRating)>
<android.renderscript.Double2: android.renderscript.Double2 div(android.renderscript.Double2,android.renderscript.Double2)>
<android.telephony.TelephonyManager: java.lang.String getVoiceMailAlphaTag(long)>
<com.android.internal.app.WindowDecorActionBar.TabImpl: android.app.ActionBar.TabListener getCallback()>
<com.android.internal.os.BatteryStatsHelper: byte[] readFully(java.io.FileInputStream)>
<android.view.animation.LayoutAnimationController: void <init>(android.content.Context,android.util.AttributeSet)>
<android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain(android.view.accessibility.AccessibilityEvent)>
<com.android.internal.net.NetworkStatsFactory: android.net.NetworkStats readNetworkStatsSummaryXt()>
<android.app.Dialog: void setContentView(android.view.View,android.view.ViewGroup.LayoutParams)>
<com.google.android.gles_jni.EGLImpl: int eglGetError()>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.IBinder)>
<android.animation.ValueAnimator: void setCurrentPlayTime(long)>
<com.android.internal.view.RotationPolicy: void setRotationLockForAccessibility(android.content.Context,boolean)>
<android.nfc.INfcTag: int getTimeout(int)>
<android.view.TouchDelegate: void <init>(android.graphics.Rect,android.view.View)>
<android.database.sqlite.SQLiteBindOrColumnIndexOutOfRangeException: void <init>(java.lang.String)>
<com.google.android.gles_jni.GLImpl: void glMultiTexCoord4x(int,int,int,int,int)>
<com.android.internal.os.BatteryStatsImpl.SamplingTimer: void updateCurrentReportedTotalTime(long)>
<android.os.UserManager: boolean removeUser(int)>
<android.bluetooth.IBluetoothHeadsetPhone: boolean queryPhoneState()>
<android.app.ActivityOptions: int getStartY()>
<android.content.AsyncQueryHandler: void onInsertComplete(int,java.lang.Object,android.net.Uri)>
<android.net.ProxyInfo: android.net.ProxyInfo buildPacProxy(android.net.Uri)>
<android.widget.GridView: void onMeasure(int,int)>
<android.media.effect.Effect: void setParameter(java.lang.String,java.lang.Object)>
<android.renderscript.ScriptIntrinsicResize: void setInput(android.renderscript.Allocation)>
<android.filterfw.core.Frame: android.filterfw.core.Frame release()>
<android.renderscript.AllocationAdapter: void subData(int,android.renderscript.FieldPacker)>
<android.opengl.GLES20: void glDeleteShader(int)>
<android.bluetooth.BluetoothAdapter: int getDiscoverableTimeout()>
<com.android.internal.view.RotationPolicy: void registerRotationPolicyListener(android.content.Context,com.android.internal.view.RotationPolicy.RotationPolicyListener)>
<android.view.Display: java.lang.String stateToString(int)>
<android.renderscript.ScriptIntrinsicYuvToRGB: android.renderscript.Script.FieldID getFieldID_Input()>
<android.filterfw.core.OutputPort: android.filterfw.core.Filter getTargetFilter()>
<com.android.internal.view.StandaloneActionMode: boolean isTitleOptional()>
<android.view.ViewGroup: void bringChildToFront(android.view.View)>
<com.android.internal.app.ToolbarActionBar: boolean openOptionsMenu()>
<android.view.ViewRootImpl: void registerAnimatingRenderNode(android.view.RenderNode)>
<android.bluetooth.IBluetooth: boolean setRemoteAlias(android.bluetooth.BluetoothDevice,java.lang.String)>
<android.app.SearchManager: void setOnDismissListener(android.app.SearchManager.OnDismissListener)>
<android.content.IntentFilter: int match(android.content.ContentResolver,android.content.Intent,boolean,java.lang.String)>
<com.google.android.gles_jni.GLImpl: void glClear(int)>
<android.media.session.MediaSession.CallbackStub: void onPlay()>
<android.opengl.GLES20: java.lang.String glGetProgramInfoLog(int)>
<android.bluetooth.IBluetoothGatt: void beginReliableWrite(int,java.lang.String)>
<android.opengl.GLES11Ext: void glBlendEquationOES(int)>
<android.database.sqlite.SQLiteCursor: void close()>
<android.widget.Filter.FilterListener: void onFilterComplete(int)>
<com.android.internal.os.BatteryStatsImpl: void setCallback(com.android.internal.os.BatteryStatsImpl.BatteryCallback)>
<android.net.IConnectivityManager: int setUsbTethering(boolean)>
<android.filterfw.geometry.Quad: boolean IsInUnitRange()>
<android.widget.ExpandableListView.OnGroupCollapseListener: void onGroupCollapse(int)>
<com.android.internal.statusbar.StatusBarIcon: void <init>(android.os.Parcel)>
<android.widget.ActivityChooserModel: int getHistorySize()>
<android.util.TrustedTime: long getCacheAge()>
<android.os.PowerManagerInternal.LowPowerModeListener: void onLowPowerModeChanged(boolean)>
<android.opengl.GLES31Ext: android.opengl.GLES31Ext.DebugProcKHR glGetDebugMessageCallbackKHR()>
<android.speech.tts.TextToSpeech.OnUtteranceCompletedListener: void onUtteranceCompleted(java.lang.String)>
<android.media.tv.TvInputManager: void registerCallback(android.media.tv.TvInputManager.TvInputCallback,android.os.Handler)>
<android.opengl.GLES10: void glColor4f(float,float,float,float)>
<android.print.PrinterCapabilitiesInfo: java.util.List getResolutions()>
<android.location.LocationProvider: int getPowerRequirement()>
<android.renderscript.Long3: long dotProduct(android.renderscript.Long3,android.renderscript.Long3)>
<android.view.animation.Animation: long getStartOffset()>
<android.util.FloatMath: float exp(float)>
<android.app.IApplicationThread: void scheduleNewIntent(java.util.List,android.os.IBinder)>
<android.app.Activity: android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<com.android.internal.view.menu.SubMenuBuilder: void setShortcutsVisible(boolean)>
<android.widget.CalendarView: void setFocusedMonthDateColor(int)>
<android.widget.SlidingDrawer.OnDrawerOpenListener: void onDrawerOpened()>
<android.security.AndroidKeyPairGenerator: java.security.KeyPair generateKeyPair()>
<android.opengl.GLES20: void glGenerateMipmap(int)>
<android.widget.GridLayout: void setAlignmentMode(int)>
<android.bluetooth.BluetoothProfile: int getConnectionState(android.bluetooth.BluetoothDevice)>
<com.android.internal.telecom.IConnectionService: void unhold(java.lang.String)>
<android.renderscript.Mesh: android.renderscript.Allocation getIndexSetAllocation(int)>
<android.view.WindowManager.LayoutParams: java.lang.String debug(java.lang.String)>
<android.database.CursorWindow: java.lang.String toString()>
<android.database.DatabaseUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>
<android.net.http.HttpAuthHeader: java.lang.String getOpaque()>
<android.app.UiAutomation: void disconnect()>
<android.preference.PreferenceActivity: android.widget.Button getNextButton()>
<android.widget.ProgressBar: android.content.res.ColorStateList getProgressBackgroundTintList()>
<android.hardware.camera2.utils.SizeAreaComparator: android.util.Size findLargestByArea(java.util.List)>
<android.media.AudioTrack: int attachAuxEffect(int)>
<android.content.Intent: void toShortString(java.lang.StringBuilder,boolean,boolean,boolean,boolean)>
<android.net.wifi.WifiEnterpriseConfig: void setFieldValue(java.lang.String,java.lang.String,java.lang.String)>
<android.hardware.location.GeofenceHardware: int[] getMonitoringTypes()>
<android.media.AudioManager: int releaseAudioPatch(android.media.AudioPatch)>
<android.media.Tokenizer.OnTokenListener: void onData(java.lang.String)>
<android.hardware.camera2.params.HighSpeedVideoConfiguration: boolean equals(java.lang.Object)>
<android.renderscript.Double2: android.renderscript.Double2 add(android.renderscript.Double2,double)>
<android.transition.Visibility: java.lang.String[] getTransitionProperties()>
<android.filterfw.core.FilterPort: boolean filterMustClose()>
<com.android.internal.view.menu.ActionMenuItem: boolean isChecked()>
<android.content.SyncAdapterType: void <init>(java.lang.String,java.lang.String,boolean,boolean)>
<com.android.internal.telecom.IInCallService: void bringToForeground(boolean)>
<android.util.TypedValue: java.lang.String coerceToString(int,int)>
<android.telephony.TelephonyManager: java.lang.String getSimOperatorName()>
<android.view.View: float getRightFadingEdgeStrength()>
<android.content.ComponentName: void printShortString(java.io.PrintWriter,java.lang.String,java.lang.String)>
<android.bluetooth.IBluetooth: boolean startDiscovery()>
<com.android.internal.os.BatteryStatsImpl: void resetAllStatsCmdLocked()>
<android.telecom.ParcelableConnection: android.telecom.DisconnectCause getDisconnectCause()>
<android.os.RecoverySystem: void rebootWipeUserData(android.content.Context,boolean,java.lang.String)>
<android.preference.DialogPreference: android.app.Dialog getDialog()>
<android.media.browse.MediaBrowser.ConnectionCallback: void onConnected()>
<android.renderscript.ScriptIntrinsicBlur: void forEach(android.renderscript.Allocation)>
<android.app.Fragment: void startActivityForResult(android.content.Intent,int,android.os.Bundle)>
<android.widget.ProgressBar: void onAttachedToWindow()>
<android.hardware.usb.UsbDevice: android.hardware.usb.UsbInterface getInterface(int)>
<android.content.pm.ApplicationInfo: void setSplitResourcePaths(java.lang.String[])>
<android.util.MalformedJsonException: void <init>(java.lang.String)>
<android.location.LocationRequest: boolean getHideFromAppOps()>
<android.hardware.hdmi.IHdmiControlService: void stopOneTouchRecord(int)>
<android.os.RemoteCallback: int describeContents()>
<android.hardware.hdmi.HdmiHotplugEvent: void writeToParcel(android.os.Parcel,int)>
<android.media.tv.ITvInputSessionWrapper: void relayoutOverlayView(android.graphics.Rect)>
<com.android.internal.os.BatteryStatsImpl.Uid: void noteStopJobLocked(java.lang.String,long)>
<android.view.SurfaceView: boolean gatherTransparentRegion(android.graphics.Region)>
<android.media.IRemoteControlClient: void setBitmapSizeForDisplay(android.media.IRemoteControlDisplay,int,int)>
<android.widget.VideoView: boolean canPause()>
<android.graphics.Path: boolean op(android.graphics.Path,android.graphics.Path,android.graphics.Path.Op)>
<android.widget.QuickContactBadge: void drawableHotspotChanged(float,float)>
<android.net.wifi.BatchedScanSettings: void <init>(android.net.wifi.BatchedScanSettings)>
<android.telephony.CellIdentityGsm: int getLac()>
<android.app.IAlarmManager: android.app.AlarmManager.AlarmClockInfo getNextAlarmClock(int)>
<android.net.ConnectivityManager: java.lang.String[] getTetherableWifiRegexs()>
<android.service.voice.IVoiceInteractionService: void soundModelsChanged()>
<android.renderscript.Double2: android.renderscript.Double2 div(android.renderscript.Double2,double)>
<android.app.SearchDialog: void onStop()>
<android.view.ActionProvider: void refreshVisibility()>
<android.graphics.drawable.AnimatedVectorDrawable: boolean onStateChange(int[])>
<android.os.WorkSource: void writeToParcel(android.os.Parcel,int)>
<android.telecom.ConnectionService: boolean containsConference(android.telecom.Conference)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,float)>
<android.util.LruCache: void <init>(int)>
<android.os.StrictMode: android.os.StrictMode.ThreadPolicy allowThreadDiskReads()>
<android.os.IPowerManager: void updateWakeLockUids(android.os.IBinder,int[])>
<android.opengl.GLES10: void glLightModelfv(int,java.nio.FloatBuffer)>
<android.view.accessibility.AccessibilityManager: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.app.FragmentManager.BackStackEntry: java.lang.CharSequence getBreadCrumbTitle()>
<android.bluetooth.BluetoothPan: void finalize()>
<android.speech.tts.ITextToSpeechService: java.lang.String getDefaultVoiceNameFor(java.lang.String,java.lang.String,java.lang.String)>
<android.renderscript.FieldPacker: void addU32(long)>
<android.nfc.TransceiveResult: void writeToParcel(android.os.Parcel,int)>
<android.view.RenderNodeAnimator: boolean isStarted()>
<android.appwidget.AppWidgetManager: int[] getAppWidgetIds(android.content.ComponentName)>
<android.drm.DrmManagerClient: void <init>(android.content.Context)>
<android.graphics.LayerRasterizer: void addLayer(android.graphics.Paint,float,float)>
<android.filterpacks.imageproc.TintFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>
<android.telephony.TelephonyManager: boolean isDataConnectivityPossible()>
<android.alsa.AlsaCardsParser: void Log()>
<android.widget.DatePicker: int getYear()>
<android.print.PrintJobInfo: android.print.PrintAttributes getAttributes()>
<android.widget.AbsListView: void addTouchables(java.util.ArrayList)>
<android.content.res.AssetManager: android.content.res.AssetManager getSystem()>
<com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>
<android.telephony.CellIdentityGsm: int getMnc()>
<android.net.ConnectivityManager.OnNetworkActiveListener: void onNetworkActive()>
<android.app.ActivityManagerProxy: void revokeUriPermission(android.app.IApplicationThread,android.net.Uri,int,int)>
<com.android.internal.telephony.IMms: void setAutoPersisting(java.lang.String,boolean)>
<com.android.internal.view.menu.IconMenuItemView: boolean prefersCondensedTitle()>
<android.provider.SearchIndexablesProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy build()>
<android.appwidget.AppWidgetProvider: void onRestored(android.content.Context,int[],int[])>
<android.app.Notification: void lightenPayload()>
<android.widget.TextView: int getTotalPaddingLeft()>
<android.view.animation.AnimationSet: boolean hasAlpha()>
<android.bluetooth.le.ScanFilter: java.lang.String getDeviceName()>
<android.nfc.NfcAdapter: int getAdapterState()>
<android.transition.Transition: void start()>
<android.content.Intent: int filterHashCode()>
<android.telecom.ParcelableCall: void writeToParcel(android.os.Parcel,int)>
<android.widget.Switch: boolean getShowText()>
<android.renderscript.RSSurfaceView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.RadialTimePickerView: int getCurrentItemShowing()>
<android.speech.RecognitionListener: void onEvent(int,android.os.Bundle)>
<com.android.internal.app.ToolbarActionBar: void setDisplayUseLogoEnabled(boolean)>
<android.app.admin.DevicePolicyManager: void setPasswordQuality(android.content.ComponentName,int)>
<android.print.PrintJobInfo: void setCopies(int)>
<android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setServiceUuid(android.os.ParcelUuid,android.os.ParcelUuid)>
<android.net.Network: boolean equals(java.lang.Object)>
<android.renderscript.Mesh: android.renderscript.Mesh.Primitive getPrimitive(int)>
<android.app.Notification.MediaStyle: void restoreFromExtras(android.os.Bundle)>
<com.android.internal.os.BatteryStatsImpl.Uid: long getVideoTurnedOnTime(long,int)>
<android.net.MobileLinkQualityInfo: int getLteRsrq()>
<android.graphics.Matrix: void setScale(float,float,float,float)>
<android.media.IMediaHTTPService: android.media.IMediaHTTPConnection makeHTTPConnection()>
<android.view.InputFilter: void onUninstalled()>
<android.bluetooth.BluetoothA2dp: boolean setPriority(android.bluetooth.BluetoothDevice,int)>
<android.view.ViewGroup: void onDetachedFromWindow()>
<android.app.SearchableInfo: android.content.ComponentName getSearchActivity()>
<android.content.res.AssetManager: void setLocale(java.lang.String)>
<android.hardware.usb.UsbRequest: void close()>
<android.net.NetworkStateTracker: android.net.LinkQualityInfo getLinkQualityInfo()>
<android.media.AudioManager: void disableSafeMediaVolume()>
<android.renderscript.Type: int getZ()>
<android.os.INetworkManagementService: void removeInterfaceFromLocalNetwork(java.lang.String)>
<android.media.MediaRouter.RouteInfo: int getPlaybackStream()>
<android.media.MediaPlayer: void attachAuxEffect(int)>
<android.filterfw.core.GLFrame: void reset(android.filterfw.core.FrameFormat)>
<android.app.AppOpsManager.PackageOps: int describeContents()>
<android.content.Intent: android.content.Intent getIntentOld(java.lang.String)>
<com.android.internal.util.FastXmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>
<android.transition.Transition: java.lang.String[] getTransitionProperties()>
<com.android.internal.widget.ActionBarContainer: void setTabContainer(com.android.internal.widget.ScrollingTabContainerView)>
<android.os.BatteryStats.Timer: long getTotalTimeLocked(long,int)>
<android.os.BatteryStats.Uid: void noteWifiBatchedScanStartedLocked(int,long)>
<android.webkit.WebViewProvider: boolean pageUp(boolean)>
<android.app.AlertDialog.Builder: android.content.Context getContext()>
<android.telephony.TelephonyManager: void setImsRegistrationState(boolean)>
<android.service.voice.VoiceInteractionSession: boolean[] onGetSupportedCommands(android.service.voice.VoiceInteractionSession.Caller,java.lang.String[])>
<android.nfc.tech.IsoDep: int getTimeout()>
<android.transition.Scene: android.view.ViewGroup getSceneRoot()>
<android.net.NetworkStats: android.net.NetworkStats subtract(android.net.NetworkStats,android.net.NetworkStats,android.net.NetworkStats.NonMonotonicObserver,java.lang.Object,android.net.NetworkStats)>
<android.service.notification.ZenModeConfig: android.service.notification.Condition toTimeCondition(int)>
<android.view.ContextMenu: android.view.ContextMenu setHeaderView(android.view.View)>
<android.app.admin.DevicePolicyManager: void removeActiveAdmin(android.content.ComponentName)>
<android.app.ActivityManager.StackInfo: java.lang.String toString(java.lang.String)>
<android.graphics.Paint: float measureText(java.lang.CharSequence,int,int)>
<android.app.Instrumentation: void callActivityOnResume(android.app.Activity)>
<android.content.pm.ComponentInfo: android.content.pm.ApplicationInfo getApplicationInfo()>
<android.filterfw.core.SerializedFrame: float[] getFloats()>
<android.net.ConnectivityManager: int startUsingNetworkFeature(int,java.lang.String)>
<android.hardware.hdmi.HdmiHotplugEvent: int describeContents()>
<com.android.internal.app.LocalePicker.LocaleInfo: void <init>(java.lang.String,java.util.Locale)>
<android.content.ContextWrapper: boolean stopServiceAsUser(android.content.Intent,android.os.UserHandle)>
<android.view.View: void onSizeChanged(int,int,int,int)>
<android.widget.Gallery: int computeHorizontalScrollOffset()>
<android.view.accessibility.AccessibilityEvent: int getRecordCount()>
<com.android.internal.widget.ScrollingTabContainerView.VisibilityAnimListener: com.android.internal.widget.ScrollingTabContainerView.VisibilityAnimListener withFinalVisibility(int)>
<android.widget.VideoView: boolean canSeekForward()>
<android.app.IActivityManager: int getTaskForActivity(android.os.IBinder,boolean)>
<android.service.dreams.DreamService: android.view.Window getWindow()>
<android.net.http.Headers: void setLocation(java.lang.String)>
<com.android.internal.view.menu.MenuPopupHelper: android.os.Parcelable onSaveInstanceState()>
<com.android.internal.view.IInputContext: void getExtractedText(android.view.inputmethod.ExtractedTextRequest,int,int,com.android.internal.view.IInputContextCallback)>
<android.telephony.TelephonyManager: boolean setRadioPower(boolean)>
<android.opengl.GLES20: void glGetVertexAttribfv(int,int,float[],int)>
<android.net.LocalSocket: void connect(android.net.LocalSocketAddress)>
<android.animation.AnimatorSet: android.animation.AnimatorSet.Builder play(android.animation.Animator)>
<android.media.Image: int getWidth()>
<android.widget.RelativeLayout: void setGravity(int)>
<android.app.IActivityManager: void setRequestedOrientation(android.os.IBinder,int)>
<android.widget.TextView: void setMaxEms(int)>
<android.widget.CompoundButton: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.renderscript.Type: android.renderscript.Type createX(android.renderscript.RenderScript,android.renderscript.Element,int)>
<android.drm.DrmManagerClient.OnInfoListener: void onInfo(android.drm.DrmManagerClient,android.drm.DrmInfoEvent)>
<android.sax.Element: void setEndTextElementListener(android.sax.EndTextElementListener)>
<android.filterfw.core.FrameFormat: int getBaseType()>
<android.view.accessibility.IAccessibilityManager: int addAccessibilityInteractionConnection(android.view.IWindow,android.view.accessibility.IAccessibilityInteractionConnection,int)>
<android.filterfw.core.FrameFormat: java.lang.String toString()>
<android.view.View: android.view.View focusSearch(int)>
<android.view.accessibility.AccessibilityNodeInfo: void writeToParcel(android.os.Parcel,int)>
<android.provider.Browser: void updateVisitedHistory(android.content.ContentResolver,java.lang.String,boolean)>
<android.app.admin.DevicePolicyManager: int getPasswordHistoryLength(android.content.ComponentName)>
<android.net.ScoredNetwork: int hashCode()>
<com.android.internal.app.WindowDecorActionBar: void setDisplayShowHomeEnabled(boolean)>
<android.webkit.PermissionRequest: java.lang.String[] getResources()>
<android.os.Bundle: void <init>(android.os.PersistableBundle)>
<android.print.PrintDocumentInfo: java.lang.String toString()>
<android.media.audiopolicy.AudioMixingRule.Builder: android.media.audiopolicy.AudioMixingRule.Builder addRule(android.media.AudioAttributes,int)>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getAmpAndSpaceLegal()>
<android.view.Window: void addContentView(android.view.View,android.view.ViewGroup.LayoutParams)>
<android.widget.AnalogClock: void onMeasure(int,int)>
<android.app.IActivityManager: int getRequestedOrientation(android.os.IBinder)>
<android.view.GraphicBuffer: android.graphics.Canvas lockCanvas(android.graphics.Rect)>
<android.location.Location: void removeAltitude()>
<android.bluetooth.IBluetoothHeadset: boolean acceptIncomingConnect(android.bluetooth.BluetoothDevice)>
<android.view.accessibility.AccessibilityWindowInfo: boolean equals(java.lang.Object)>
<com.android.ims.ImsCallProfile: int OIRToPresentation(int)>
<android.content.Loader: void onStopLoading()>
<android.widget.QuickContactBadge: void onDraw(android.graphics.Canvas)>
<com.android.ims.ImsCallProfile: boolean getCallExtraBoolean(java.lang.String)>
<android.preference.Preference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.content.ActivityNotFoundException: void <init>(java.lang.String)>
<android.content.ContentProvider: android.database.Cursor rejectQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>
<com.android.internal.util.IndentingPrintWriter: void write(char[],int,int)>
<android.renderscript.Float4: int length()>
<android.app.DialogFragment: int show(android.app.FragmentTransaction,java.lang.String)>
<android.media.AudioTrack: int setVolume(float)>
<android.net.LocalSocketAddress: android.net.LocalSocketAddress.Namespace getNamespace()>
<com.android.internal.widget.LockPatternUtilsCache: boolean checkPassword(java.lang.String,int)>
<android.widget.TextView: java.lang.CharSequence getHint()>
<android.graphics.Matrix: boolean isIdentity()>
<android.media.tv.TvInputManager: void releaseTvInputHardware(int,android.media.tv.TvInputManager.Hardware)>
<android.telephony.CellSignalStrengthLte: void initialize(int,int,int,int,int,int)>
<android.telephony.CellInfo: boolean equals(java.lang.Object)>
<android.os.BatteryStats: int getDischargeCurrentLevel()>
<com.android.internal.view.menu.ActionMenu: boolean performIdentifierAction(int,int)>
<android.view.View: void invalidate(int,int,int,int)>
<android.graphics.ColorMatrix: void setRotate(int,float)>
<android.database.sqlite.SQLiteCursorDriver: void cursorClosed()>
<android.nfc.tech.MifareClassic: byte[] transceive(byte[])>
<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable mutate()>
<android.app.IActivityManager: int getProcessLimit()>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>
<android.app.backup.IBackupManager: java.lang.String[] listAllTransports()>
<android.location.GpsMeasurement: short getTimeFromLastBitInMs()>
<android.graphics.Region: void writeToParcel(android.os.Parcel,int)>
<android.text.TextUtils.EllipsizeCallback: void ellipsized(int,int)>
<android.graphics.drawable.Drawable: android.graphics.Rect getDirtyBounds()>
<android.view.View: boolean post(java.lang.Runnable)>
<android.database.sqlite.SQLiteCursorDriver: void setBindArguments(java.lang.String[])>
<android.os.UserManager: boolean isGuestUser()>
<android.telecom.Log: void v(java.lang.String,java.lang.String,java.lang.Object[])>
<com.android.internal.telephony.IPhoneStateListener: void onCallForwardingIndicatorChanged(boolean)>
<android.os.Process: boolean readProcFile(java.lang.String,int[],java.lang.String[],long[],float[])>
<android.view.View: void resetResolvedLayoutDirection()>
<android.widget.ProgressBar: void onDetachedFromWindow()>
<android.content.res.CompatibilityInfo: java.lang.String toString()>
<android.inputmethodservice.InputMethodService: void onFinishInputView(boolean)>
<android.preference.RingtonePreference: boolean getShowSilent()>
<android.bluetooth.BluetoothHeadsetClient: java.util.List getConnectedDevices()>
<android.app.admin.IDevicePolicyManager: boolean removeCrossProfileWidgetProvider(android.content.ComponentName,java.lang.String)>
<android.media.IAudioService: int getMasterStreamType()>
<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageIIO(int,int,int,java.lang.Object)>
<android.security.SystemKeyStore: byte[] retrieveKey(java.lang.String)>
<android.webkit.WebViewProvider: void setPictureListener(android.webkit.WebView.PictureListener)>
<android.net.http.LoggingEventHandler: void status(int,int,int,java.lang.String)>
<com.android.internal.util.FastMath: int round(float)>
<android.app.SearchableInfo: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.view.menu.MenuPopupHelper: boolean onSubMenuSelected(com.android.internal.view.menu.SubMenuBuilder)>
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: int describeContents()>
<android.media.RemoteDisplay: android.media.RemoteDisplay listen(java.lang.String,android.media.RemoteDisplay.Listener,android.os.Handler)>
<android.app.Activity: void setVolumeControlStream(int)>
<android.app.backup.BackupDataOutput: void setKeyPrefix(java.lang.String)>
<com.android.internal.os.BatteryStatsImpl.Uid.Wakelock: com.android.internal.os.BatteryStatsImpl.Timer getWakeTime(int)>
<android.view.MotionEvent: java.lang.String actionToString(int)>
<com.google.android.gles_jni.GLImpl: void glFinish()>
<android.service.voice.VoiceInteractionSession: void onConfirm(android.service.voice.VoiceInteractionSession.Caller,android.service.voice.VoiceInteractionSession.Request,java.lang.CharSequence,android.os.Bundle)>
<android.hardware.camera2.CameraMetadata: java.lang.Class getKeyClass()>
<android.database.DatabaseUtils: java.lang.String concatenateWhere(java.lang.String,java.lang.String)>
<android.webkit.WebStorage.Origin: void <init>(java.lang.String,long,long)>
<android.app.ListActivity: void onContentChanged()>
<android.hardware.usb.UsbInterface: android.hardware.usb.UsbEndpoint getEndpoint(int)>
<android.media.IAudioService: int getStreamVolume(int)>
<android.ddm.DdmHandleExit: org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)>
<com.android.internal.os.BatteryStatsImpl: void writeToParcel(android.os.Parcel,int)>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDSrc()>
<android.graphics.Canvas: int save(int)>
<android.os.UserManager: android.content.pm.UserInfo createSecondaryUser(java.lang.String,int)>
<android.app.Dialog: void setVolumeControlStream(int)>
<android.os.Parcel: java.lang.Object[] readTypedArray(android.os.Parcelable.Creator)>
<android.telecom.RemoteConference.Callback: void onCapabilitiesChanged(android.telecom.RemoteConference,int)>
<android.widget.ToggleButton: void setChecked(boolean)>
<com.android.internal.widget.DecorToolbar: boolean isOverflowMenuShowPending()>
<android.database.BulkCursorProxy: int requery(android.database.IContentObserver)>
<android.content.res.AssetFileDescriptor.AutoCloseInputStream: void mark(int)>
<android.graphics.Path: float[] approximate(float)>
<android.opengl.GLES20: void glBufferData(int,int,java.nio.Buffer,int)>
<android.graphics.ColorMatrix: void setSaturation(float)>
<com.google.android.collect.Lists: java.util.ArrayList newArrayList()>
<android.nfc.Tag: void setTechnologyDisconnected()>
<android.net.MobileDataStateTracker: boolean isAvailable()>
<android.content.pm.PackageManager: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int)>
<android.preference.Preference: boolean shouldCommit()>
<android.os.UserHandle: int myUserId()>
<android.webkit.ClientCertRequest: void proceed(java.security.PrivateKey,java.security.cert.X509Certificate[])>
<android.renderscript.ProgramFragmentFixedFunction.Builder: void <init>(android.renderscript.RenderScript)>
<android.app.JobSchedulerImpl: void cancelAll()>
<android.media.session.ISession: void setQueue(android.content.pm.ParceledListSlice)>
<android.graphics.RectF: float centerX()>
<android.app.IAppTask: int startActivity(android.os.IBinder,java.lang.String,android.content.Intent,java.lang.String,android.os.Bundle)>
<android.filterfw.core.GLFrame: int getFboId()>
<android.filterpacks.imageproc.AutoFixFilter: void <init>(java.lang.String)>
<android.content.res.Configuration: void setTo(android.content.res.Configuration)>
<android.view.accessibility.AccessibilityManager: boolean removeTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager.TouchExplorationStateChangeListener)>
<com.android.internal.os.BatteryStatsImpl.Uid: void noteWifiBatchedScanStartedLocked(int,long)>
<android.util.TimedRemoteCaller: void <init>(long)>
<android.net.http.RequestFeeder: android.net.http.Request getRequest()>
<android.preference.Preference: android.graphics.drawable.Drawable getIcon()>
<android.util.TrustedTime: boolean hasCache()>
<android.bluetooth.le.ScanFilter: java.lang.String getDeviceAddress()>
<com.android.internal.http.multipart.FilePart: void <init>(java.lang.String,com.android.internal.http.multipart.PartSource)>
<android.app.admin.DevicePolicyManager: void setAutoTimeRequired(android.content.ComponentName,boolean)>
<com.android.internal.os.HandlerCaller: boolean hasMessages(int)>
<android.opengl.GLES20: void glGetProgramiv(int,int,int[],int)>
<android.content.Context: java.io.File getNoBackupFilesDir()>
<android.content.pm.PackageManager: int getUidForSharedUser(java.lang.String)>
<android.media.session.MediaSession: void <init>(android.content.Context,java.lang.String)>
<android.webkit.WebViewProvider: android.print.PrintDocumentAdapter createPrintDocumentAdapter(java.lang.String)>
<android.webkit.WebBackForwardList: android.webkit.WebBackForwardList clone()>
<android.nfc.INfcCardEmulation: android.nfc.cardemulation.AidGroup getAidGroupForService(int,android.content.ComponentName,java.lang.String)>
<android.webkit.WebBackForwardList: android.webkit.WebHistoryItem getCurrentItem()>
<android.widget.RadialTimePickerView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.os.UserManager: int getUserHandle()>
<android.media.AudioSystem: boolean isStreamActiveRemotely(int,int)>
<android.content.ContentProvider: int getUserIdFromAuthority(java.lang.String,int)>
<android.graphics.drawable.Drawable.ConstantState: android.graphics.drawable.Drawable newDrawable(android.content.res.Resources)>
<com.android.internal.view.IInputMethodManager: boolean shouldOfferSwitchingToNextInputMethod(android.os.IBinder)>
<android.view.ViewDebug.ViewOperation: java.lang.Object[] pre()>
<android.telephony.CellSignalStrengthCdma: void setDefaultValues()>
<android.graphics.NinePatch: void finalize()>
<android.drm.DrmOutputStream: void finish()>
<android.speech.tts.ITextToSpeechService: int stop(android.os.IBinder)>
<android.app.admin.IDevicePolicyManager: void setKeyguardDisabledFeatures(android.content.ComponentName,int,int)>
<com.google.android.gles_jni.EGLImpl: boolean eglReleaseThread()>
<android.speech.tts.SynthesisRequest: java.lang.String getLanguage()>
<android.renderscript.Double4: void mul(double)>
<android.media.effect.effects.ColorTemperatureEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>
<com.android.internal.location.GpsNetInitiatedHandler: void setInEmergency(boolean)>
<android.security.KeyPairGeneratorSpec: java.util.Date getEndDate()>
<android.filterpacks.performance.Throughput: int getPeriodFrameCount()>
<android.security.KeyChainException: void <init>(java.lang.String,java.lang.Throwable)>
<android.webkit.WebView.FindListener: void onFindResultReceived(int,int,boolean)>
<android.view.ViewTreeObserver: void dispatchOnGlobalLayout()>
<com.android.internal.telephony.ITelephonyRegistry: void notifyPreciseCallState(int,int,int)>
<android.media.AudioSystem: float getMasterVolume()>
<android.content.Context: int checkCallingPermission(java.lang.String)>
<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>
<android.hardware.input.InputManager: int getPointerSpeed(android.content.Context)>
<android.view.KeyEvent: android.view.KeyEvent obtain(long,long,int,int,int,int,int,int,int,int,java.lang.String)>
<android.print.PrintJob: boolean isFailed()>
<android.bluetooth.BluetoothGattCallback: void onCharacteristicChanged(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic)>
<android.gesture.GesturePoint: java.lang.Object clone()>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getActivityBanner(android.content.Intent)>
<android.preference.PreferenceFragment: void onDestroy()>
<android.widget.ScrollBarDrawable: void setAlwaysDrawVerticalTrack(boolean)>
<android.net.wifi.WifiScanner: android.net.wifi.ScanResult[] getScanResults()>
<android.net.http.AndroidHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)>
<android.hardware.hdmi.HdmiTvClient.SelectCallback: void onComplete(int)>
<android.view.View: void resolvePadding()>
<android.view.textservice.SuggestionsInfo: java.lang.String getSuggestionAt(int)>
<com.android.internal.view.menu.MenuBuilder: void close(boolean)>
<android.media.Ringtone: boolean isPlaying()>
<com.android.internal.util.FastXmlSerializer: void setOutput(java.io.OutputStream,java.lang.String)>
<android.inputmethodservice.InputMethodService.InputMethodImpl: void hideSoftInput(int,android.os.ResultReceiver)>
<android.net.IpConfiguration: int hashCode()>
<android.hardware.location.ActivityRecognitionEvent: long getTimestampNs()>
<android.view.KeyEvent: boolean dispatch(android.view.KeyEvent.Callback,android.view.KeyEvent.DispatcherState,java.lang.Object)>
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setNumericShortcut(char)>
<com.android.internal.util.AsyncChannel: void connect(android.content.Context,android.os.Handler,java.lang.Class)>
<android.os.BatteryStats.Uid.Proc: long getForegroundTime(int)>
<android.printservice.PrinterDiscoverySession: void onValidatePrinters(java.util.List)>
<android.widget.AbsSpinner: android.widget.SpinnerAdapter getAdapter()>
<android.speech.tts.SynthesisCallback: int start(int,int,int)>
<android.content.res.AssetManager: java.io.InputStream open(java.lang.String,int)>
<android.hardware.camera2.params.LensShadingMap: int hashCode()>
<com.android.internal.net.NetworkStatsFactory: void noteStackedIface(java.lang.String,java.lang.String)>
<android.media.SubtitleController: android.media.SubtitleTrack getSelectedTrack()>
<com.android.internal.os.BatteryStatsImpl.Uid: long getWifiScanTime(long,int)>
<android.widget.GridLayout: boolean isRowOrderPreserved()>
<android.text.style.TtsSpan.FractionBuilder: android.text.style.TtsSpan.FractionBuilder setDenominator(long)>
<android.webkit.WebViewProvider: java.lang.String getTouchIconUrl()>
<android.content.ContextWrapper: android.content.res.AssetManager getAssets()>
<android.media.MediaFormat: java.nio.ByteBuffer getByteBuffer(java.lang.String)>
<android.hardware.camera2.params.StreamConfigurationMap: boolean isOutputSupportedFor(int)>
<android.database.MatrixCursor: boolean isNull(int)>
<android.view.Choreographer: long getFrameTimeNanos()>
<android.renderscript.ProgramRaster.Builder: android.renderscript.ProgramRaster.Builder setPointSpriteEnabled(boolean)>
<android.hardware.usb.UsbEndpoint: int describeContents()>
<android.app.FragmentManagerImpl: void dispatchDestroy()>
<android.text.style.StyleSpan: void updateMeasureState(android.text.TextPaint)>
<android.text.style.BulletSpan: void <init>(int,int)>
<android.renderscript.Allocation: android.renderscript.Allocation createTyped(android.renderscript.RenderScript,android.renderscript.Type)>
<android.view.TextureView: android.view.TextureView.SurfaceTextureListener getSurfaceTextureListener()>
<android.media.IRemoteControlClient: void seekTo(int,long)>
<android.content.ContentProvider: void setWritePermission(java.lang.String)>
<com.android.internal.view.menu.IconMenuItemView: void initialize(com.android.internal.view.menu.MenuItemImpl,int)>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap.Config)>
<com.google.android.gles_jni.EGLImpl: javax.microedition.khronos.egl.EGLContext eglGetCurrentContext()>
<android.os.Parcel: char[] createCharArray()>
<android.graphics.Path: void quadTo(float,float,float,float)>
<android.bluetooth.le.ScanFilter: android.os.ParcelUuid getServiceDataUuid()>
<android.webkit.WebSettings: boolean getSaveFormData()>
<com.android.internal.widget.ScrollingTabContainerView: void animateToTab(int)>
<android.util.AtomicFile: void truncate()>
<android.app.SearchDialog.SearchBar: void <init>(android.content.Context,android.util.AttributeSet)>
<android.util.Size: int getWidth()>
<android.view.ViewParent: void invalidateChild(android.view.View,android.graphics.Rect)>
<com.android.internal.os.AtomicFile: void truncate()>
<android.view.ViewParent: boolean showContextMenuForChild(android.view.View)>
<com.google.android.gles_jni.GLImpl: int glQueryMatrixxOES(int[],int,int[],int)>
<android.net.SamplingDataTracker: long getSampledPacketCount(android.net.SamplingDataTracker.SamplingSnapshot,android.net.SamplingDataTracker.SamplingSnapshot)>
<com.google.android.gles_jni.GLImpl: void glDisable(int)>
<android.util.MonthDisplayHelper: int getOffset()>
<android.text.method.BaseKeyListener: boolean forwardDelete(android.view.View,android.text.Editable,int,android.view.KeyEvent)>
<android.renderscript.ScriptIntrinsicBlend: void forEachSrcOut(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>
<android.renderscript.Short3: void add(android.renderscript.Short3)>
<android.view.View: void setSystemUiVisibility(int)>
<android.view.RenderNodeAnimator: android.animation.Animator clone()>
<android.app.Dialog: android.app.Activity getOwnerActivity()>
<com.google.android.util.AbstractMessageParser.YouTubeVideo: com.google.android.util.AbstractMessageParser.YouTubeVideo matchURL(java.lang.String,java.lang.String)>
<android.view.KeyEvent: boolean hasModifiers(int)>
<android.renderscript.FieldPacker: void addMatrix(android.renderscript.Matrix2f)>
<android.content.pm.ActivityInfo: int describeContents()>
<android.os.Bundle: android.util.SparseArray getSparseParcelableArray(java.lang.String)>
<com.android.ims.ImsStreamMediaProfile: void <init>(int,int,int,int)>
<com.android.internal.util.XmlUtils: int[] readThisIntArrayXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[])>
<android.widget.NumberPicker: void <init>(android.content.Context,android.util.AttributeSet)>
<android.hardware.location.IGeofenceHardwareCallback: void onGeofenceRemove(int,int)>
<android.net.wifi.WifiEnterpriseConfig: void setClientCertificateAlias(java.lang.String)>
<android.webkit.WebView: int getVisibleTitleHeight()>
<com.android.internal.widget.DecorToolbar: void initIndeterminateProgress()>
<android.database.sqlite.SQLiteSession: void prepare(java.lang.String,int,android.os.CancellationSignal,android.database.sqlite.SQLiteStatementInfo)>
<android.media.MediaDrm: boolean isCryptoSchemeSupported(java.util.UUID)>
<android.hardware.usb.UsbDevice: void writeToParcel(android.os.Parcel,int)>
<android.util.ArrayMap: java.util.Collection values()>
<android.net.BaseNetworkStateTracker: void startMonitoring(android.content.Context,android.os.Handler)>
<android.telecom.Connection: void setInitializing()>
<android.filterfw.core.GLFrame: void setViewport(android.graphics.Rect)>
<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>
<android.net.InterfaceConfiguration: void setFlag(java.lang.String)>
<android.hardware.Sensor: float getMaximumRange()>
<android.app.ActionBar: void hide()>
<com.android.internal.view.menu.ExpandedMenuView: void onDetachedFromWindow()>
<android.util.LongSparseLongArray: long valueAt(int)>
<android.inputmethodservice.SoftInputWindow: int getGravity()>
<android.database.sqlite.SQLiteOpenHelper: void onConfigure(android.database.sqlite.SQLiteDatabase)>
<com.android.internal.view.menu.ActionMenuItem: java.lang.CharSequence getTitle()>
<android.os.FileBridge: void setTargetFile(java.io.FileDescriptor)>
<android.widget.DatePicker: void <init>(android.content.Context)>
<android.app.IActivityManager: void moveTaskToStack(int,int,boolean)>
<android.view.IInputFilter: void filterInputEvent(android.view.InputEvent,int)>
<android.view.HardwareCanvas: int callDrawGLFunction(long)>
<android.bluetooth.BluetoothGattCharacteristic: boolean addDescriptor(android.bluetooth.BluetoothGattDescriptor)>
<android.text.method.MovementMethod: boolean onKeyUp(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>
<android.net.TrafficStats: long getTotalTxBytes()>
<android.net.wifi.WifiManager: void forget(int,android.net.wifi.WifiManager.ActionListener)>
<android.content.res.Configuration: java.lang.String localeToResourceQualifier(java.util.Locale)>
<android.opengl.GLES11: void glGetLightxv(int,int,java.nio.IntBuffer)>
<com.android.internal.http.multipart.FilePartSource: java.io.InputStream createInputStream()>
<com.android.internal.os.BatteryStatsImpl: int getHistoryTotalSize()>
<android.graphics.drawable.PictureDrawable: void setColorFilter(android.graphics.ColorFilter)>
<android.service.notification.Condition: java.lang.String toString()>
<android.webkit.WebSettings: void setTextSize(android.webkit.WebSettings.TextSize)>
<android.widget.Button: void <init>(android.content.Context)>
<android.net.NetworkState: void writeToParcel(android.os.Parcel,int)>
<android.app.Instrumentation.ActivityMonitor: void <init>(java.lang.String,android.app.Instrumentation.ActivityResult,boolean)>
<android.os.storage.IMountService: int createSecureContainer(java.lang.String,int,java.lang.String,java.lang.String,int,boolean)>
<android.drm.DrmManagerClient: boolean canHandle(android.net.Uri,java.lang.String)>
<android.renderscript.Double4: android.renderscript.Double4 add(android.renderscript.Double4,android.renderscript.Double4)>
<com.android.internal.app.ToolbarActionBar: void setNavigationMode(int)>
<android.preference.TwoStatePreference: android.os.Parcelable onSaveInstanceState()>
<android.net.http.HttpAuthHeader: java.lang.String getUsername()>
<android.content.res.AssetFileDescriptor: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.widget.LockPatternView: void clearPattern()>
<android.preference.TwoStatePreference: void setChecked(boolean)>
<android.content.ContentProviderOperation: boolean isWriteOperation()>
<android.bluetooth.BluetoothHeadsetClientCall: void <init>(int,int,java.lang.String,boolean,boolean)>
<com.android.ims.internal.IImsService: com.android.ims.internal.IImsUt getUtInterface(int)>
<android.view.accessibility.AccessibilityRecord: android.view.accessibility.AccessibilityRecord obtain(android.view.accessibility.AccessibilityRecord)>
<android.widget.SearchView: void setOnCloseListener(android.widget.SearchView.OnCloseListener)>
<android.media.AudioManager: boolean isOutputDevice(int)>
<android.content.res.AssetManager.AssetInputStream: long skip(long)>
<android.service.notification.IStatusBarNotificationHolder: android.service.notification.StatusBarNotification get()>
<android.os.BatteryStats: java.util.Map getKernelWakelockStats()>
<android.view.Choreographer: long getFrameTime()>
<android.view.accessibility.AccessibilityNodeInfo: boolean performAction(int,android.os.Bundle)>
<android.renderscript.Long2: void set(android.renderscript.Long2)>
<android.widget.ActivityChooserModel: void finalize()>
<android.view.animation.AnticipateInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.internal.view.menu.IconMenuPresenter: void <init>(android.content.Context)>
<android.app.IActivityManager: int addAppTask(android.os.IBinder,android.content.Intent,android.app.ActivityManager.TaskDescription,android.graphics.Bitmap)>
<android.filterfw.core.NativeBuffer: android.filterfw.core.NativeBuffer release()>
<com.android.internal.os.BatteryStatsImpl.Uid: void noteVibratorOffLocked()>
<android.animation.Animator.AnimatorPauseListener: void onAnimationResume(android.animation.Animator)>
<android.content.res.AssetManager.AssetInputStream: int read()>
<android.print.IPrintSpoolerClient: void onPrintJobStateChanged(android.print.PrintJobInfo)>
<android.provider.SyncStateContract.Helpers: android.util.Pair getWithUri(android.content.ContentProviderClient,android.net.Uri,android.accounts.Account)>
<android.content.pm.PackageInstaller.SessionParams: void setReferrerUri(android.net.Uri)>
<com.android.internal.util.VirtualRefBasePtr: void finalize()>
<android.service.wallpaper.WallpaperService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.database.CursorWrapper: void registerContentObserver(android.database.ContentObserver)>
<android.os.INetworkManagementService: void setFirewallEgressSourceRule(java.lang.String,boolean)>
<android.media.AudioPortConfig: android.media.AudioGainConfig gain()>
<android.media.AudioService: boolean isStreamMute(int)>
<android.view.accessibility.AccessibilityNodeInfo: void addAction(android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction)>
<com.android.internal.os.ZygoteInit.MethodAndArgsCaller: void run()>
<android.app.LoadedApk: java.lang.String getDataDir()>
<android.bluetooth.BluetoothHealth: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.app.Fragment: int getId()>
<android.app.backup.RestoreDescription: int describeContents()>
<android.net.http.LoggingEventHandler: void headers(android.net.http.Headers)>
<android.widget.AdapterViewAnimator: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.media.AudioFormat: boolean isEncodingLinearPcm(int)>
<android.hardware.Camera.Area: void <init>(android.graphics.Rect,int)>
<android.widget.SearchView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.net.NetworkFactory: void register()>
<android.widget.ExpandableListAdapter: long getCombinedGroupId(long)>
<android.app.admin.DeviceAdminInfo: java.lang.String getReceiverName()>
<android.util.Range: android.util.Range extend(java.lang.Comparable)>
<android.webkit.WebSettings: android.webkit.WebSettings.PluginState getPluginState()>
<android.database.sqlite.SQLiteDatabase: java.lang.String toString()>
<android.content.ContentResolver: boolean releaseProvider(android.content.IContentProvider)>
<android.view.MotionEvent: int findPointerIndex(int)>
<android.telecom.RemoteConnection: void setAudioState(android.telecom.AudioState)>
<android.filterpacks.imageproc.RotateFilter: void <init>(java.lang.String)>
<android.view.View: void getBoundsOnScreen(android.graphics.Rect)>
<android.bluetooth.BluetoothGattCharacteristic: java.lang.String getStringValue(int)>
<android.net.http.DelegatingSSLSession: int getApplicationBufferSize()>
<com.android.internal.policy.IKeyguardService: boolean isShowingAndNotOccluded()>
<android.database.sqlite.SQLiteDatabase: void addCustomFunction(java.lang.String,int,android.database.sqlite.SQLiteDatabase.CustomFunction)>
<android.renderscript.RSTextureView: android.renderscript.RenderScriptGL createRenderScriptGL(android.renderscript.RenderScriptGL.SurfaceConfig)>
<android.hardware.camera2.marshal.impl.MarshalQueryableReprocessFormatsMap: android.hardware.camera2.marshal.Marshaler createMarshaler(android.hardware.camera2.utils.TypeReference,int)>
<android.os.CountDownTimer: void cancel()>
<com.android.internal.os.BatteryStatsImpl: int getCpuSpeedSteps()>
<android.media.effect.effects.GrayscaleEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>
<android.view.WindowManagerPolicy: void showRecentApps()>
<android.media.ExifInterface: int getAttributeInt(java.lang.String,int)>
<com.android.internal.view.animation.FallbackLUTInterpolator: float getInterpolation(float)>
<android.opengl.GLES20: void glTexParameterfv(int,int,float[],int)>
<android.hardware.hdmi.IHdmiControlService: void sendVendorCommand(int,int,byte[],boolean)>
<android.view.View: void findNamedViews(java.util.Map)>
<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorListener)>
<android.renderscript.Byte3: void set(android.renderscript.Byte3)>
<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodClient getClient()>
<android.net.MobileDataStateTracker: void supplyMessenger(android.os.Messenger)>
<android.opengl.GLES30: void glUniformMatrix2x3fv(int,int,boolean,java.nio.FloatBuffer)>
<android.database.sqlite.SQLiteCursor: android.database.sqlite.SQLiteDatabase getDatabase()>
<android.app.admin.DevicePolicyManager: boolean getCrossProfileCallerIdDisabled(android.content.ComponentName)>
<android.renderscript.Long3: void div(android.renderscript.Long3)>
<android.graphics.Point: void negate()>
<android.hardware.display.WifiDisplayStatus: void writeToParcel(android.os.Parcel,int)>
<android.hardware.camera2.impl.CameraMetadataNative: android.hardware.camera2.impl.CameraMetadataNative move(android.hardware.camera2.impl.CameraMetadataNative)>
<android.filterfw.geometry.Rectangle: android.filterfw.geometry.Point center()>
<android.os.BatteryStats.Uid: java.util.Map getPackageStats()>
<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>
<android.animation.LayoutTransition: void addTransitionListener(android.animation.LayoutTransition.TransitionListener)>
<android.renderscript.Byte2: byte elementSum()>
<android.graphics.drawable.ShapeDrawable: android.graphics.drawable.shapes.Shape getShape()>
<android.media.audiofx.Virtualizer: void <init>(int,int)>
<android.inputmethodservice.InputMethodService: void onUpdateCursor(android.graphics.Rect)>
<android.app.AppOpsManager: void startWatchingMode(java.lang.String,java.lang.String,android.app.AppOpsManager.OnOpChangedListener)>
<android.media.RemoteControlClient.MetadataEditor: android.media.RemoteControlClient.MetadataEditor putObject(int,java.lang.Object)>
<android.os.ServiceManagerNative: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<android.filterfw.core.GLFrame: java.lang.String toString()>
<android.util.Rational: boolean isNaN()>
<android.view.View: float getRotation()>
<android.view.View: float getBottomFadingEdgeStrength()>
<android.webkit.WebViewFactoryProvider: android.webkit.WebViewProvider createWebView(android.webkit.WebView,android.webkit.WebView.PrivateAccess)>
<com.android.internal.util.FastXmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>
<android.webkit.WebViewProvider: void resumeTimers()>
<com.android.ims.internal.IImsVideoCallCallback: void changePeerDimensions(int,int)>
<android.database.DatabaseUtils: int getTypeOfObject(java.lang.Object)>
<android.hardware.camera2.dispatch.HandlerDispatcher: java.lang.Object dispatch(java.lang.reflect.Method,java.lang.Object[])>
<android.content.pm.ContainerEncryptionParams: byte[] getMacTag()>
<com.android.internal.widget.FaceUnlockView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.app.IActivityManager: android.content.ComponentName getCallingActivity(android.os.IBinder)>
<android.view.KeyEvent: char getNumber()>
<android.media.MediaExtractor: int readSampleData(java.nio.ByteBuffer,int)>
<android.media.session.PlaybackState.Builder: android.media.session.PlaybackState.Builder setState(int,long,float,long)>
<android.filterpacks.imageproc.ToPackedGrayFilter: void setupPorts()>
<android.media.browse.MediaBrowser: void connect()>
<android.content.pm.PathPermission: java.lang.String getReadPermission()>
<android.media.session.MediaSession.Callback: void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)>
<android.hardware.camera2.impl.CameraDeviceImpl.StateCallbackKK: void onIdle(android.hardware.camera2.CameraDevice)>
<com.android.internal.view.menu.MenuDialogHelper: void setPresenterCallback(com.android.internal.view.menu.MenuPresenter.Callback)>
<android.hardware.hdmi.HdmiRecordSources.DigitalChannelData: android.hardware.hdmi.HdmiRecordSources.DigitalChannelData ofOneNumber(int)>
<android.util.Slog: int wtf(java.lang.String,java.lang.String)>
<android.view.InputDevice: boolean isFullKeyboard()>
<android.view.View: boolean canScrollVertically(int)>
<android.renderscript.ProgramVertexFixedFunction.Constants: void setProjection(android.renderscript.Matrix4f)>
<android.drm.DrmInfoRequest: java.util.Iterator iterator()>
<android.view.View: android.content.res.Resources getResources()>
<android.hardware.hdmi.IHdmiControlService: void removeSystemAudioModeChangeListener(android.hardware.hdmi.IHdmiSystemAudioModeChangeListener)>
<android.content.pm.LauncherApps: void <init>(android.content.Context,android.content.pm.ILauncherApps)>
<android.view.IWindow: void windowFocusChanged(boolean,boolean)>
<android.opengl.GLES10: void glLoadMatrixf(float[],int)>
<android.telephony.PhoneNumberUtils: boolean compareStrictly(java.lang.String,java.lang.String,boolean)>
<android.widget.ZoomControls: void hide()>
<android.app.UiAutomation: android.view.WindowContentFrameStats getWindowContentFrameStats(int)>
<android.bluetooth.BluetoothUuid: boolean isPanu(android.os.ParcelUuid)>
<android.view.View: void dispatchWindowFocusChanged(boolean)>
<com.android.internal.app.ProcessStats: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.app.LocalePicker: android.widget.ArrayAdapter constructAdapter(android.content.Context,int,int)>
<android.filterfw.core.StreamPort: boolean hasFrame()>
<android.provider.VoicemailContract.Voicemails: android.net.Uri buildSourceUri(java.lang.String)>
<android.hardware.camera2.dispatch.MethodNameInvoker: void <init>(android.hardware.camera2.dispatch.Dispatchable,java.lang.Class)>
<android.graphics.drawable.shapes.PathShape: void onResize(float,float)>
<android.content.SharedPreferences: void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener)>
<com.android.internal.telecom.IInCallAdapter: void conference(java.lang.String,java.lang.String)>
<android.provider.Settings.Global: boolean putInt(android.content.ContentResolver,java.lang.String,int)>
<android.view.View: float getRotationX()>
<android.graphics.drawable.ScaleDrawable: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>
<android.widget.AbsListView: void setFastScrollEnabled(boolean)>
<android.nfc.tech.MifareClassic: void transfer(int)>
<android.widget.ListView: boolean removeHeaderView(android.view.View)>
<android.os.RemoteException: void <init>(java.lang.String)>
<android.media.MediaRouter: android.media.MediaRouter.UserRouteInfo createUserRoute(android.media.MediaRouter.RouteCategory)>
<android.content.pm.ComponentInfo: int getLogoResource()>
<android.text.AndroidCharacter: boolean mirror(char[],int,int)>
<android.widget.AbsListView: void onMeasure(int,int)>
<android.graphics.RectF: java.lang.String toString()>
<android.hardware.camera2.DngCreator: android.hardware.camera2.DngCreator setThumbnail(android.graphics.Bitmap)>
<android.hardware.display.IVirtualDisplayCallback: void onStopped()>
<android.content.RestrictionEntry: void setChoiceEntries(java.lang.String[])>
<android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>
<android.renderscript.Int4: void <init>(int)>
<android.view.WindowManagerInternal: void requestTraversalFromDisplayManager()>
<android.widget.ListView: void smoothScrollToPosition(int)>
<android.view.View.OnLongClickListener: boolean onLongClick(android.view.View)>
<android.content.pm.LauncherApps: boolean isPackageEnabled(java.lang.String,android.os.UserHandle)>
<com.android.internal.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderView(android.view.View)>
<android.database.sqlite.SQLiteCursorDriver: void cursorRequeried(android.database.Cursor)>
<android.media.AudioSystem: int initStreamVolume(int,int,int)>
<android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityRecord getRecord(int)>
<android.graphics.Canvas: int saveLayer(float,float,float,float,android.graphics.Paint,int)>
<android.filterfw.core.FilterFactory: android.filterfw.core.FilterFactory sharedFactory()>
<android.widget.Toolbar: void <init>(android.content.Context,android.util.AttributeSet)>
<android.net.RouteInfo: android.net.RouteInfo makeHostRoute(java.net.InetAddress,java.lang.String)>
<android.widget.ImageView: void onRtlPropertiesChanged(int)>
<android.widget.RemoteViewsService.RemoteViewsFactory: android.widget.RemoteViews getLoadingView()>
<android.media.MediaDrm: void releaseSecureStops(byte[])>
<android.database.Cursor: java.lang.String getString(int)>
<android.media.IAudioService: boolean registerRemoteControlDisplay(android.media.IRemoteControlDisplay,int,int)>
<android.database.CursorWindow: byte[] getBlob(int,int)>
<android.webkit.WebResourceResponse: void setStatusCodeAndReasonPhrase(int,java.lang.String)>
<android.media.effect.effects.DuotoneEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>
<com.android.internal.backup.LocalTransport: int abortFullRestore()>
<android.text.util.Linkify: boolean addLinks(android.text.Spannable,int)>
<android.webkit.WebViewClient: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,java.lang.String)>
<android.media.audiofx.AudioEffect: int getParameter(int[],short[])>
<android.security.KeyStore: boolean reset()>
<android.text.style.MetricAffectingSpan: void updateMeasureState(android.text.TextPaint)>
<android.media.session.MediaSession: boolean isActive()>
<android.media.IAudioService: android.media.AudioRoutesInfo startWatchingRoutes(android.media.IAudioRoutesObserver)>
<android.hardware.hdmi.IHdmiControlService: void setInputChangeListener(android.hardware.hdmi.IHdmiInputChangeListener)>
<android.net.NetworkPolicyManager: void registerListener(android.net.INetworkPolicyListener)>
<android.content.ContentResolver: java.lang.String syncErrorToString(int)>
<android.media.session.ISessionController: void fastForward()>
<android.os.DropBoxManager: android.os.DropBoxManager.Entry getNextEntry(java.lang.String,long)>
<android.opengl.GLES11Ext: void glDrawTexiOES(int,int,int,int,int)>
<android.content.pm.ServiceInfo: void dump(android.util.Printer,java.lang.String)>
<android.view.ActionMode: void setCustomView(android.view.View)>
<android.nfc.tech.IsoDep: void <init>(android.nfc.Tag)>
<android.renderscript.Float2: float elementSum()>
<android.app.Activity: boolean dispatchTouchEvent(android.view.MotionEvent)>
<android.nfc.Tag: android.nfc.Tag rediscover()>
<com.android.internal.view.menu.SubMenuBuilder: boolean expandItemActionView(com.android.internal.view.menu.MenuItemImpl)>
<android.hardware.camera2.CaptureResult: android.hardware.camera2.impl.CameraMetadataNative getNativeCopy()>
<android.app.ActivityThread: android.app.ActivityThread.ActivityClientRecord performResumeActivity(android.os.IBinder,boolean)>
<android.service.notification.INotificationListener: void onListenerConnected(android.service.notification.NotificationRankingUpdate)>
<android.filterpacks.imageproc.GrainFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>
<android.media.IAudioService: void setSpeakerphoneOn(boolean)>
<android.view.DisplayEventReceiver: void finalize()>
<android.os.INetworkManagementService: void addIdleTimer(java.lang.String,int,int)>
<android.net.IConnectivityManager: android.net.Network[] getAllNetworks()>
<android.widget.Filter: java.lang.CharSequence convertResultToString(java.lang.Object)>
<android.webkit.WebViewProvider.ScrollDelegate: int computeVerticalScrollExtent()>
<android.media.RingtoneManager: boolean getStopPreviousRingtone()>
<android.widget.ImageView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.os.PowerManagerInternal: void setDozeOverrideFromDreamManager(int,int)>
<android.text.style.RasterizerSpan: void updateDrawState(android.text.TextPaint)>
<com.android.internal.textservice.ITextServicesSessionListener: void onServiceConnected(com.android.internal.textservice.ISpellCheckerSession)>
<android.net.RouteInfo: android.net.IpPrefix getDestination()>
<android.content.pm.ResolveInfo: int describeContents()>
<android.util.Base64InputStream: void <init>(java.io.InputStream,int)>
<android.view.FocusFinderHelper: boolean beamsOverlap(int,android.graphics.Rect,android.graphics.Rect)>
<android.widget.AbsListView: void dispatchDraw(android.graphics.Canvas)>
<android.app.ProgressDialog: void setProgressDrawable(android.graphics.drawable.Drawable)>
<android.app.ActionBar: boolean isShowing()>
<com.android.ims.internal.IImsCallSessionListener: void callSessionHoldReceived(com.android.ims.internal.IImsCallSession,com.android.ims.ImsCallProfile)>
<android.widget.AbsListView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.media.audiofx.Equalizer: short getBand(int)>
<android.view.WindowManagerPolicy: void getContentRectLw(android.graphics.Rect)>
<android.media.session.MediaController.TransportControls: void playFromMediaId(java.lang.String,android.os.Bundle)>
<android.widget.TextView: void setInputExtras(int)>
<android.preference.Preference: void setSummary(java.lang.CharSequence)>
<android.content.AsyncTaskLoader: java.lang.Object loadInBackground()>
<android.content.res.Resources: java.lang.CharSequence getText(int)>
<android.app.ActivityManager: java.util.List getRunningServices(int)>
<android.preference.PreferenceManager: int getSharedPreferencesMode()>
<android.os.BatteryStats.HistoryItem: void <init>(long,android.os.Parcel)>
<com.android.internal.net.VpnConfig: void addLegacyAddresses(java.lang.String)>
<android.view.textservice.SentenceSuggestionsInfo: void <init>(android.view.textservice.SuggestionsInfo[],int[],int[])>
<com.google.android.util.AbstractMessageParser.Acronym: boolean isHtml()>
<com.android.internal.widget.multiwaveview.TargetDrawable: void draw(android.graphics.Canvas)>
<android.opengl.GLES11: void glGetLightxv(int,int,int[],int)>
<android.print.PrinterCapabilitiesInfo: int describeContents()>
<android.webkit.WebSettings: void setFantasyFontFamily(java.lang.String)>
<android.renderscript.Matrix4f: void multiply(android.renderscript.Matrix4f)>
<android.bluetooth.IBluetoothHeadset: void clccResponse(int,int,int,int,boolean,java.lang.String,int)>
<android.renderscript.ScriptIntrinsicColorMatrix: void setAdd(android.renderscript.Float4)>
<android.graphics.Region: boolean quickReject(android.graphics.Region)>
<com.android.internal.telecom.ITelecomService: boolean isTtySupported()>
<android.nfc.NfcActivityManager: void enableReaderMode(android.app.Activity,android.nfc.NfcAdapter.ReaderCallback,int,android.os.Bundle)>
<android.hardware.Sensor: java.lang.String getStringType()>
<android.hardware.camera2.legacy.RequestThreadManager: long flush()>
<android.view.accessibility.AccessibilityRecord: void setChecked(boolean)>
<android.util.NtpTrustedTime: long currentTimeMillis()>
<android.view.SoundEffectConstants: int getContantForFocusDirection(int)>
<android.telecom.RemoteConnection.Callback: void onConferenceChanged(android.telecom.RemoteConnection,android.telecom.RemoteConference)>
<android.service.media.MediaBrowserService: void notifyChildrenChanged(java.lang.String)>
<com.android.internal.os.BatteryStatsHelper: void storeState()>
<android.graphics.drawable.Animatable: void start()>
<com.android.internal.os.BatteryStatsImpl: int getDischargeStartLevel()>
<android.view.View: void setNextFocusForwardId(int)>
<com.android.internal.widget.ActionBarContextView: boolean isOverflowMenuShowing()>
<android.widget.VideoView: void onAttachedToWindow()>
<android.content.Context: void sendBroadcast(android.content.Intent,java.lang.String,int)>
<android.telephony.TelephonyManager: void setLine1NumberForDisplayForSubscriber(long,java.lang.String,java.lang.String)>
<com.android.internal.app.IAppOpsService: void setMode(int,int,java.lang.String,int)>
<android.media.MediaCodec: void queueSecureInputBuffer(int,int,android.media.MediaCodec.CryptoInfo,long,int)>
<android.service.voice.IVoiceInteractionSession: void taskFinished(android.content.Intent,int)>
<android.accessibilityservice.AccessibilityService.IAccessibilityServiceClientWrapper: void onInterrupt()>
<android.net.NetworkTemplate: android.net.NetworkTemplate buildTemplateWifi()>
<android.renderscript.Allocation: void copy2DRangeFrom(int,int,int,int,short[])>
<android.media.RemoteController.MetadataEditor: void apply()>
<com.android.internal.app.MediaRouteChooserDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
<android.graphics.drawable.GradientDrawable: void setAlpha(int)>
<android.graphics.drawable.ScaleDrawable: void setTintList(android.content.res.ColorStateList)>
<android.os.ParcelFileDescriptor: boolean canDetectErrors()>
<android.renderscript.ScriptIntrinsicColorMatrix: void forEach(android.renderscript.Allocation,android.renderscript.Allocation)>
<android.content.Intent: void <init>(java.lang.String)>
<android.view.textservice.SpellCheckerSubtype: java.lang.String getExtraValueOf(java.lang.String)>
<android.text.style.ScaleXSpan: int describeContents()>
<android.view.ViewConfiguration: int getScaledOverscrollDistance()>
<android.media.session.PlaybackState.Builder: android.media.session.PlaybackState.Builder addCustomAction(java.lang.String,java.lang.String,int)>
<android.filterfw.core.FilterSurfaceView: android.filterfw.core.GLEnvironment getGLEnv()>
<android.widget.Spinner: int getGravity()>
<android.media.audiofx.EnvironmentalReverb: int getDecayTime()>
<android.content.Context: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase.CursorFactory)>
<android.widget.TextView: void setScroller(android.widget.Scroller)>
<android.view.View: int getPaddingStart()>
<com.android.internal.util.FastPrintWriter: void <init>(java.io.OutputStream)>
<android.os.TokenWatcher: void <init>(android.os.Handler,java.lang.String)>
<android.graphics.drawable.BitmapDrawable: void setAntiAlias(boolean)>
<android.widget.ActionMenuPresenter: void updateMenuView(boolean)>
<android.preference.Preference: void onPrepareForRemoval()>
<android.view.Display: void <init>(android.hardware.display.DisplayManagerGlobal,int,android.view.DisplayInfo,android.view.DisplayAdjustments)>
<com.android.internal.util.HexDump: java.lang.String dumpHexString(byte[],int,int)>
<android.renderscript.Int2: android.renderscript.Int2 mod(android.renderscript.Int2,int)>
<android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>
<android.view.InputDevice: android.view.InputDevice.MotionRange getMotionRange(int,int)>
<android.app.FragmentManagerImpl: int allocBackStackIndex(android.app.BackStackRecord)>
<android.media.tv.TvInputInfo: int getType()>
<com.android.internal.telephony.ISub: long getDefaultSmsSubId()>
<com.android.internal.view.IInputContext: void commitCorrection(android.view.inputmethod.CorrectionInfo)>
<android.widget.CursorTreeAdapter: android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup)>
<android.graphics.Region: boolean isComplex()>
<android.net.NetworkPolicyManager: void setRestrictBackground(boolean)>
<com.android.internal.os.TransferPipe: void go(java.io.FileDescriptor)>
<android.view.inputmethod.InputMethodManager: void toggleSoftInput(int,int)>
<android.renderscript.Script.FieldBase: android.renderscript.Allocation getAllocation()>
<android.view.accessibility.AccessibilityNodeInfo: void setMovementGranularities(int)>
<android.bluetooth.BluetoothHealthAppConfiguration: java.lang.String toString()>
<android.renderscript.Script.LaunchOptions: int getYStart()>
<android.telecom.Conference: android.telecom.Conference addListener(android.telecom.Conference.Listener)>
<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityWindowInfo getWindow(int,int)>
<android.inputmethodservice.Keyboard: java.util.List getModifierKeys()>
<android.graphics.Rect: void inset(int,int)>
<android.opengl.GLES11: void glClipPlanef(int,java.nio.FloatBuffer)>
<android.content.ContentProviderProxy: int update(java.lang.String,android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<android.os.StatFs: long getFreeBlocksLong()>
<android.view.MotionEvent: float getRawY()>
<android.provider.MediaStore.Files: android.net.Uri getMtpObjectsUri(java.lang.String,long)>
<android.hardware.Camera.Parameters: void setAntibanding(java.lang.String)>
<android.widget.Toast: int getYOffset()>
<android.opengl.GLES11: void glPointParameterfv(int,java.nio.FloatBuffer)>
<android.widget.RadioGroup.LayoutParams: void setBaseAttributes(android.content.res.TypedArray,int,int)>
<android.text.TextUtils: int getTrimmedLength(java.lang.CharSequence)>
<android.gesture.GestureOverlayView: boolean isEventsInterceptionEnabled()>
<com.android.internal.util.XmlUtils: float readFloatAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>
<android.service.dreams.DreamService: boolean onMenuOpened(int,android.view.Menu)>
<android.location.GpsMeasurement: double getTimeOffsetInNs()>
<android.view.WindowInsets: boolean hasStableInsets()>
<android.filterpacks.ui.SurfaceRenderFilter: void updateRenderMode()>
<android.widget.HorizontalScrollView: int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect)>
<android.telephony.TelephonyManager: java.lang.String getSimOperatorName(long)>
<android.opengl.GLES31Ext: int glGetDebugMessageLogKHR(int,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.ByteBuffer)>
<android.filterpacks.imageproc.AlphaBlendFilter: void <init>(java.lang.String)>
<com.android.internal.widget.LockPatternUtils: void saveLockPassword(java.lang.String,int,boolean)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setOnCancelListener(android.content.DialogInterface.OnCancelListener)>
<android.util.SparseLongArray: java.lang.String toString()>
<android.net.INetworkStatsSession: android.net.NetworkStats getSummaryForAllUid(android.net.NetworkTemplate,long,long,boolean)>
<android.app.UiAutomation: void setOnAccessibilityEventListener(android.app.UiAutomation.OnAccessibilityEventListener)>
<com.google.android.gles_jni.GLImpl: void glPointParameterx(int,int)>
<android.net.wifi.WifiManager: boolean stopWifi()>
<android.opengl.GLES31Ext: void glSamplerParameterIivEXT(int,int,int[],int)>
<android.view.Display: void getMetrics(android.util.DisplayMetrics)>
<android.app.Dialog: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>
<com.android.server.net.NetlinkTracker: void routeUpdated(android.net.RouteInfo)>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: boolean isConstantSize()>
<android.renderscript.ScriptIntrinsic3DLUT: void forEach(android.renderscript.Allocation,android.renderscript.Allocation)>
<android.widget.Switch: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<android.widget.ListView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.text.util.Rfc822Tokenizer: void tokenize(java.lang.CharSequence,java.util.Collection)>
<com.android.internal.os.BatteryStatsImpl.Counter: int getCountLocked(int)>
<android.app.Activity: void onProvideAssistData(android.os.Bundle)>
<com.android.internal.view.menu.MenuDialogHelper: void show(android.os.IBinder)>
<android.view.InputQueue: void dispose(boolean)>
<android.os.Parcel: void writePersistableBundle(android.os.PersistableBundle)>
<android.view.View: void onFocusChanged(boolean,int,android.graphics.Rect)>
<android.media.AudioManager: void setStreamVolume(int,int,int)>
<android.content.ContextWrapper: java.io.File[] getExternalCacheDirs()>
<android.view.InputEventReceiver: void <init>(android.view.InputChannel,android.os.Looper)>
<android.net.wifi.p2p.WifiP2pDeviceList: android.net.wifi.p2p.WifiP2pDevice get(java.lang.String)>
<android.opengl.GLES31: void glProgramUniform2iv(int,int,int,java.nio.IntBuffer)>
<android.app.SearchableInfo: boolean shouldRewriteQueryFromText()>
<android.telephony.TelephonyManager: int getVoiceNetworkType()>
<android.widget.CalendarView.CalendarViewDelegate: int getFirstDayOfWeek()>
<android.content.ComponentName: java.lang.String toString()>
<android.content.Context: java.io.File getCacheDir()>
<android.media.tv.TvStreamConfig: void writeToParcel(android.os.Parcel,int)>
<android.view.InputDevice.MotionRange: float getResolution()>
<android.telecom.ParcelableConnection: android.telecom.PhoneAccountHandle getPhoneAccount()>
<android.gesture.GestureOverlayView: void removeAllOnGesturePerformedListeners()>
<android.widget.Toolbar: boolean onTouchEvent(android.view.MotionEvent)>
<android.app.ApplicationThreadProxy: void <init>(android.os.IBinder)>
<com.android.internal.widget.multiwaveview.GlowPadView: int getScaledSuggestedMinimumHeight()>
<android.accessibilityservice.IAccessibilityServiceConnection: boolean findAccessibilityNodeInfoByAccessibilityId(int,long,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,long)>
<android.graphics.drawable.ColorDrawable: void draw(android.graphics.Canvas)>
<android.media.session.PlaybackState: long getLastPositionUpdateTime()>
<android.view.GestureDetector.OnGestureListener: void onLongPress(android.view.MotionEvent)>
<android.bluetooth.BluetoothGatt: java.util.List getConnectedDevices()>
<android.widget.AbsListView: boolean onKeyUp(int,android.view.KeyEvent)>
<android.app.ActivityOptions: android.app.ActivityOptions makeCustomAnimation(android.content.Context,int,int)>
<android.print.PrintJob: int hashCode()>
<android.media.audiofx.EnvironmentalReverb: short getDensity()>
<android.telephony.PhoneNumberUtils: java.lang.String getUsernameFromUriNumber(java.lang.String)>
<android.renderscript.Int2: void copyTo(int[],int)>
<android.net.http.AndroidHttpClient: android.net.http.AndroidHttpClient newInstance(java.lang.String)>
<android.opengl.GLES20: void glGetBooleanv(int,java.nio.IntBuffer)>
<android.hardware.soundtrigger.SoundTrigger.ConfidenceLevel: java.lang.String toString()>
<android.net.http.LoggingEventHandler: void requestSent()>
<android.opengl.GLES11Ext: void glClearDepthxOES(int)>
<android.graphics.pdf.PdfDocument.PageInfo: int getPageNumber()>
<android.app.Activity: java.lang.Object onRetainNonConfigurationInstance()>
<android.webkit.WebViewClient: void onReceivedClientCertRequest(android.webkit.WebView,android.webkit.ClientCertRequest)>
<android.view.WindowManager.LayoutParams: int copyFrom(android.view.WindowManager.LayoutParams)>
<android.app.Activity: void stopManagingCursor(android.database.Cursor)>
<android.content.res.Resources: void getValueForDensity(int,int,android.util.TypedValue,boolean)>
<android.filterpacks.base.FrameBranch: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<android.graphics.pdf.PdfRenderer.Page: void finalize()>
<android.view.ScaleGestureDetector: float getPreviousSpanY()>
<com.android.internal.os.BatteryStatsImpl.Uid: void noteStopSyncLocked(java.lang.String,long)>
<android.view.ViewGroup: void setLayoutMode(int)>
<android.view.inputmethod.InputConnectionWrapper: boolean finishComposingText()>
<android.widget.ActionMenuView.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<android.content.pm.FeatureGroupInfo: int describeContents()>
<android.widget.HorizontalScrollView: void draw(android.graphics.Canvas)>
<android.media.session.ISessionControllerCallback: void onQueueChanged(android.content.pm.ParceledListSlice)>
<com.android.internal.widget.SubtitleView: void setForegroundColor(int)>
<android.app.ActionBar: void addOnMenuVisibilityListener(android.app.ActionBar.OnMenuVisibilityListener)>
<com.android.internal.inputmethod.InputMethodSubtypeSwitchingController.ControllerImpl: com.android.internal.inputmethod.InputMethodSubtypeSwitchingController.ImeSubtypeListItem getNextInputMethod(boolean,android.view.inputmethod.InputMethodInfo,android.view.inputmethod.InputMethodSubtype)>
<android.opengl.GLES31Ext: void glTexBufferEXT(int,int,int)>
<android.media.WebVttRenderingWidget: void setOnChangedListener(android.media.SubtitleTrack.RenderingWidget.OnChangedListener)>
<android.bluetooth.IBluetooth: void unregisterCallback(android.bluetooth.IBluetoothCallback)>
<android.app.Activity: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.net.NetworkPolicy: void writeToParcel(android.os.Parcel,int)>
<android.provider.DocumentsProvider: android.database.Cursor queryChildDocumentsForManage(java.lang.String,java.lang.String[],java.lang.String)>
<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo: int getSelectionMode()>
<android.widget.AbsSeekBar: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.media.session.MediaSessionLegacyHelper: android.os.Bundle getOldMetadata(android.media.MediaMetadata,int,int)>
<android.text.method.MetaKeyKeyListener: long adjustMetaAfterKeypress(long)>
<android.widget.RatingBar: float getRating()>
<android.app.AppOpsManager: int checkOp(int,int,java.lang.String)>
<android.media.MediaRouter.SimpleCallback: void onRouteUngrouped(android.media.MediaRouter,android.media.MediaRouter.RouteInfo,android.media.MediaRouter.RouteGroup)>
<android.content.res.TypedArray: int getIndexCount()>
<android.hardware.usb.UsbAccessory: void <init>(java.lang.String[])>
<android.provider.SearchIndexablesProvider: android.database.Cursor queryNonIndexableKeys(java.lang.String[])>
<com.android.internal.view.menu.MenuBuilder: android.view.MenuItem add(java.lang.CharSequence)>
<android.renderscript.Int2: android.renderscript.Int2 mul(android.renderscript.Int2,int)>
<android.media.MediaPlayer: void setOnErrorListener(android.media.MediaPlayer.OnErrorListener)>
<android.location.GpsClock: void writeToParcel(android.os.Parcel,int)>
<android.telephony.TelephonyManager: java.lang.String getMmsUserAgent()>
<android.text.style.DynamicDrawableSpan: void draw(android.graphics.Canvas,java.lang.CharSequence,int,int,float,int,int,int,android.graphics.Paint)>
<android.view.MotionEvent: float getSize(int)>
<android.hardware.soundtrigger.SoundTrigger: int listModules(java.util.ArrayList)>
<android.widget.DatePicker.DatePickerDelegate: void setSpinnersShown(boolean)>
<android.webkit.WebView: void onChildViewRemoved(android.view.View,android.view.View)>
<android.net.wifi.WifiScanner.HotlistSettings: int describeContents()>
<android.view.DisplayInfo: int getNaturalHeight()>
<android.hardware.hdmi.HdmiControlManager: void <init>(android.hardware.hdmi.IHdmiControlService)>
<com.android.internal.http.multipart.Part: long lengthOfData()>
<android.animation.AnimatorListenerAdapter: void onAnimationCancel(android.animation.Animator)>
<com.android.internal.widget.ActionBarContainer: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode.Callback)>
<android.widget.TextView: boolean didTouchFocusSelect()>
<android.hardware.Camera.Parameters: int getPreviewFormat()>
<android.preference.Preference: void setLayoutResource(int)>
<android.view.View: boolean pointInView(float,float,float)>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: android.graphics.drawable.Drawable getChild(int)>
<android.widget.AbsoluteLayout.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<android.media.MediaFile: java.lang.String getMimeTypeForFormatCode(int)>
<android.appwidget.AppWidgetHostView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.view.MenuItem: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem.OnActionExpandListener)>
<android.filterfw.core.Frame: android.graphics.Bitmap convertBitmapToRGBA(android.graphics.Bitmap)>
<android.widget.ListView: void setItemsCanFocus(boolean)>
<android.hardware.camera2.params.RggbChannelVector: float getComponent(int)>
<android.net.wifi.WifiInfo: void setLinkSpeed(int)>
<com.android.internal.view.menu.ListMenuItemView: boolean showsIcon()>
<android.provider.Settings.Secure: float getFloat(android.content.ContentResolver,java.lang.String,float)>
<com.android.internal.os.BatteryStatsImpl: void <init>(android.os.Parcel)>
<android.view.ViewGroup: void offsetChildrenTopAndBottom(int)>
<android.graphics.drawable.ScaleDrawable: void <init>(android.graphics.drawable.Drawable,int,float,float)>
<android.widget.AbsListView: void drawableStateChanged()>
<android.appwidget.AppWidgetManager: void setBindAppWidgetPermission(java.lang.String,boolean)>
<android.opengl.GLES11: void glClipPlanex(int,java.nio.IntBuffer)>
<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageI(int,int)>
<android.media.AudioSystem: int listAudioPatches(java.util.ArrayList,int[])>
<com.android.internal.os.BatteryStatsImpl: int getBluetoothStateCount(int,int)>
<android.widget.TextView: void setTypeface(android.graphics.Typeface,int)>
<android.bluetooth.IBluetoothManager: boolean disable(boolean)>
<android.preference.PreferenceFragment.OnPreferenceStartFragmentCallback: boolean onPreferenceStartFragment(android.preference.PreferenceFragment,android.preference.Preference)>
<android.opengl.GLES10: void glBindTexture(int,int)>
<android.opengl.GLES31: void glMemoryBarrierByRegion(int)>
<android.view.MenuItem.OnMenuItemClickListener: boolean onMenuItemClick(android.view.MenuItem)>
<android.widget.ResourceCursorAdapter: void setViewResource(int)>
<android.preference.PreferenceScreen: android.os.Parcelable onSaveInstanceState()>
<com.android.internal.widget.SlidingTab: void <init>(android.content.Context)>
<android.app.admin.DevicePolicyManager: void setScreenCaptureDisabled(android.content.ComponentName,boolean)>
<android.widget.SimpleExpandableListAdapter: android.view.View newChildView(boolean,android.view.ViewGroup)>
<com.android.internal.content.PackageMonitor: void unregister()>
<android.renderscript.Long4: android.renderscript.Long4 mod(android.renderscript.Long4,long)>
<android.app.Application.ActivityLifecycleCallbacks: void onActivityStarted(android.app.Activity)>
<android.mtp.MtpDevice: boolean deleteObject(int)>
<android.text.method.MultiTapKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>
<android.hardware.camera2.legacy.ParameterUtils.MeteringData: void <init>(android.hardware.Camera.Area,android.graphics.Rect,android.graphics.Rect)>
<android.widget.DatePicker.DatePickerDelegate: int getMonth()>
<android.renderscript.Short4: void <init>(android.renderscript.Short4)>
<android.net.NetworkStatsHistory: void recordData(long,long,long,long)>
<android.bluetooth.BluetoothA2dp: java.util.List getConnectedDevices()>
<android.app.admin.DevicePolicyManager: void addPersistentPreferredActivity(android.content.ComponentName,android.content.IntentFilter,android.content.ComponentName)>
<android.filterpacks.imageproc.RedEyeFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.widget.RatingBar: void setMax(int)>
<android.net.wifi.ScanSettings: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.widget.ToolbarWidgetWrapper: boolean hasExpandedActionView()>
<android.view.GhostView: void onDetachedFromWindow()>
<android.text.style.TtsSpan.TelephoneBuilder: android.text.style.TtsSpan.TelephoneBuilder setCountryCode(java.lang.String)>
<android.view.accessibility.AccessibilityRecord: void setConnectionId(int)>
<android.webkit.WebStorage.Origin: java.lang.String getOrigin()>
<android.media.IAudioService: boolean isBluetoothScoOn()>
<android.os.UserManager: boolean isUserRunningOrStopping(android.os.UserHandle)>
<android.webkit.WebView: void setPictureListener(android.webkit.WebView.PictureListener)>
<android.media.AudioSystem: int setStreamVolumeIndex(int,int,int)>
<com.android.internal.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)>
<android.hardware.camera2.marshal.impl.MarshalQueryableRggbChannelVector: android.hardware.camera2.marshal.Marshaler createMarshaler(android.hardware.camera2.utils.TypeReference,int)>
<android.graphics.drawable.AnimatedRotateDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>
<android.os.Bundle: android.util.Size getSize(java.lang.String)>
<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getMsisdn()>
<com.android.internal.util.FastXmlSerializer: java.lang.String getName()>
<android.content.pm.VerifierDeviceIdentity: android.content.pm.VerifierDeviceIdentity parse(java.lang.String)>
<com.android.internal.view.InputConnectionWrapper: boolean commitCompletion(android.view.inputmethod.CompletionInfo)>
<android.media.MediaPlayer: int setMetadataFilter(java.util.Set,java.util.Set)>
<android.view.inputmethod.InputMethodInfo: java.lang.String getPackageName()>
<android.app.Instrumentation: boolean invokeMenuActionSync(android.app.Activity,int,int)>
<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence)>
<android.widget.ListPopupWindow: void setOnDismissListener(android.widget.PopupWindow.OnDismissListener)>
<android.app.Activity: void setContentView(int)>
<android.database.sqlite.SQLiteSession: void endTransaction(android.os.CancellationSignal)>
<android.media.MediaRouterClientState.RouteInfo: void <init>(android.media.MediaRouterClientState.RouteInfo)>
<android.os.HandlerThread: void run()>
<android.renderscript.ProgramRaster.Builder: void <init>(android.renderscript.RenderScript)>
<android.content.res.AssetManager: boolean isUpToDate()>
<android.widget.AbsSpinner: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.appwidget.AppWidgetHost: void deleteHost()>
<android.filterpacks.ui.SurfaceRenderFilter: void surfaceDestroyed(android.view.SurfaceHolder)>
<android.app.TaskStackBuilder: int getIntentCount()>
<android.view.GestureDetector.OnGestureListener: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>
<android.view.ActionMode: java.lang.CharSequence getSubtitle()>
<com.android.internal.telecom.IConnectionServiceAdapter: void setRingbackRequested(java.lang.String,boolean)>
<android.text.style.MetricAffectingSpan: android.text.style.MetricAffectingSpan getUnderlying()>
<android.view.MotionEvent: float getXPrecision()>
<android.provider.DocumentsContract: java.lang.String getRootId(android.net.Uri)>
<android.view.ViewRootImpl: boolean isTextAlignmentResolved()>
<android.widget.RadialTimePickerView: void swapAmPm()>
<android.app.backup.BackupDataInput: int getDataSize()>
<android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener: void onGetSentenceSuggestions(android.view.textservice.SentenceSuggestionsInfo[])>
<android.app.ActivityManagerProxy: boolean isIntentSenderTargetedToPackage(android.content.IIntentSender)>
<android.nfc.tech.Ndef: android.nfc.NdefMessage getNdefMessage()>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,java.lang.String,android.animation.TypeEvaluator,java.lang.Object[])>
<android.security.KeyStoreParameter: boolean isEncryptionRequired()>
<android.hardware.Camera.Parameters: java.lang.String flatten()>
<android.location.Criteria: int getHorizontalAccuracy()>
<android.util.ArraySet: boolean contains(java.lang.Object)>
<com.android.internal.widget.ActionBarContextView: void setTitleOptional(boolean)>
<android.hardware.hdmi.IHdmiControlService: void setProhibitMode(boolean)>
<android.content.ClipData.Item: void <init>(java.lang.CharSequence)>
<android.media.browse.MediaBrowser: void subscribe(java.lang.String,android.media.browse.MediaBrowser.SubscriptionCallback)>
<android.widget.GridLayout: int getRowCount()>
<android.text.method.BaseKeyListener: boolean backspace(android.view.View,android.text.Editable,int,android.view.KeyEvent)>
<android.view.View: android.view.View findFocus()>
<android.media.TimedText.Karaoke: void <init>(int,int,int,int)>
<android.view.animation.AnimationSet: void setStartOffset(long)>
<com.android.internal.policy.IKeyguardService: void onScreenTurnedOff(int)>
<android.app.ActivityManager: boolean isHighEndGfx()>
<android.view.InputDevice: int getSources()>
<android.net.wifi.WifiEnterpriseConfig: java.lang.String getClientCertificateAlias()>
<android.os.BatteryStats: long getGlobalWifiRunningTime(long,int)>
<android.hardware.camera2.TotalCaptureResult: void <init>(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.CaptureRequest,android.hardware.camera2.impl.CaptureResultExtras,java.util.List)>
<android.renderscript.Short4: short length()>
<com.android.internal.widget.ToolbarWidgetWrapper: void setMenuPrepared()>
<android.widget.RemoteViews: android.view.View apply(android.content.Context,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>
<com.android.internal.util.StateMachine.LogRec: com.android.internal.util.IState getOriginalState()>
<android.widget.Gallery: boolean onKeyUp(int,android.view.KeyEvent)>
<android.opengl.GLES20: void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)>
<android.webkit.WebView: void setNetworkAvailable(boolean)>
<android.os.RemoteCallbackList: int beginBroadcast()>
<android.widget.TimePicker: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.widget.SimpleAdapter: void <init>(android.content.Context,java.util.List,int,java.lang.String[],int[])>
<android.app.IActivityManager: java.util.List getRunningAppProcesses()>
<android.media.MediaPlayer: void setScreenOnWhilePlaying(boolean)>
<com.android.internal.util.AsyncService: void onDestroy()>
<com.android.internal.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)>
<android.content.RestrictionsManager: android.content.Intent createLocalApprovalIntent()>
<android.hardware.Camera.Parameters: java.util.List getSupportedPictureFormats()>
<android.view.inputmethod.InputMethodSession: void finishInput()>
<android.renderscript.Long3: void <init>(long,long,long)>
<android.webkit.CookieManager: java.lang.String getCookie(android.net.WebAddress)>
<android.net.INetworkPolicyListener: void onRestrictBackgroundChanged(boolean)>
<android.preference.SeekBarVolumizer: void setSeekBar(android.widget.SeekBar)>
<com.android.internal.telecom.IConnectionServiceAdapter: void setDisconnected(java.lang.String,android.telecom.DisconnectCause)>
<android.widget.ImageView: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.telephony.SignalStrength: int getGsmBitErrorRate()>
<android.preference.ListPreference: java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int)>
<android.view.View: void dispatchDisplayHint(int)>
<android.hardware.hdmi.HdmiPortInfo: boolean isMhlSupported()>
<com.android.ims.internal.IImsVideoCallProvider: void setPreviewSurface(android.view.Surface)>
<android.net.http.HttpAuthHeader: java.lang.String getQop()>
<android.webkit.CacheManager.CacheResult: java.lang.String getContentDisposition()>
<android.renderscript.Byte3: android.renderscript.Byte3 sub(android.renderscript.Byte3,android.renderscript.Byte3)>
<android.opengl.GLES11Ext: void glTexParameterxvOES(int,int,java.nio.IntBuffer)>
<android.graphics.Rect: void union(int,int)>
<android.media.session.MediaSession.CallbackStub: void onRewind()>
<android.widget.EditText: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.view.SurfaceView: void onWindowVisibilityChanged(int)>
<android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>
<android.net.LinkAddress: int describeContents()>
<android.print.PrintAttributes.Builder: android.print.PrintAttributes.Builder setResolution(android.print.PrintAttributes.Resolution)>
<android.media.session.ISession: void setQueueTitle(java.lang.CharSequence)>
<com.android.internal.os.BatteryStatsImpl: int getMobileRadioActiveCount(int)>
<android.app.IActivityManager: void unregisterReceiver(android.content.IIntentReceiver)>
<android.app.FragmentManagerImpl: boolean popBackStackImmediate(int,int)>
<android.view.RenderNode: boolean setLayerType(int)>
<com.google.android.gles_jni.GLImpl: void glGetIntegerv(int,int[],int)>
<android.media.SubtitleController.Anchor: void setSubtitleWidget(android.media.SubtitleTrack.RenderingWidget)>
<android.os.Debug: void changeDebugPort(int)>
<android.app.admin.DeviceAdminReceiver: void onLockTaskModeEntering(android.content.Context,android.content.Intent,java.lang.String)>
<android.database.sqlite.SqliteWrapper: void checkSQLiteException(android.content.Context,android.database.sqlite.SQLiteException)>
<android.widget.ShareActionProvider.OnShareTargetSelectedListener: boolean onShareTargetSelected(android.widget.ShareActionProvider,android.content.Intent)>
<android.database.BulkCursorProxy: void onMove(int)>
<android.os.IMessenger: void send(android.os.Message)>
<android.renderscript.Int3: void <init>(int)>
<android.location.Address: void <init>(java.util.Locale)>
<android.renderscript.FieldPacker: void addMatrix(android.renderscript.Matrix3f)>
<android.view.SurfaceHolder: void setFormat(int)>
<android.location.GpsMeasurement: void set(android.location.GpsMeasurement)>
<com.android.internal.widget.LockPatternView: void onDraw(android.graphics.Canvas)>
<android.opengl.GLES11Ext: void glDeleteFramebuffersOES(int,java.nio.IntBuffer)>
<android.hardware.camera2.CaptureFailure: int getSequenceId()>
<com.android.internal.util.FastPrintWriter: void println(char)>
<android.app.Activity: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)>
<android.view.KeyEvent: android.view.KeyEvent obtain(android.view.KeyEvent)>
<android.app.AppOpsManager: int noteOpNoThrow(java.lang.String,int,java.lang.String)>
<android.app.AlarmManager: android.app.AlarmManager.AlarmClockInfo getNextAlarmClock(int)>
<com.android.internal.os.BatteryStatsImpl.Uid: com.android.internal.os.BatteryStatsImpl.StopwatchTimer getSensorTimerLocked(int,boolean)>
<com.android.internal.os.BatteryStatsImpl.SamplingTimer: void addCurrentReportedCount(int)>
<android.graphics.drawable.Drawable.ConstantState: boolean canApplyTheme()>
<android.view.WindowInsets: android.view.WindowInsets replaceSystemWindowInsets(int,int,int,int)>
<android.renderscript.Script: float getVarF(int)>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String getTables()>
<android.view.ViewParent: void requestTransparentRegion(android.view.View)>
<android.os.Vibrator: void vibrate(long[],int)>
<android.widget.AbsoluteLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<android.webkit.WebViewProvider: boolean restorePicture(android.os.Bundle,java.io.File)>
<android.graphics.drawable.AnimationDrawable: void run()>
<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageII(int,int,int)>
<android.opengl.GLES20: void glBindAttribLocation(int,int,java.lang.String)>
<android.widget.TableRow: void <init>(android.content.Context)>
<android.telephony.CellIdentityWcdma: int getMcc()>
<android.preference.VolumePreference: void onActivityStop()>
<android.app.Presentation: void <init>(android.content.Context,android.view.Display,int)>
<android.webkit.WebViewFragment: void onDestroyView()>
<android.view.accessibility.AccessibilityManager: boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager.AccessibilityStateChangeListener)>
<android.graphics.drawable.LayerDrawable: void setColorFilter(android.graphics.ColorFilter)>
<android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>
<android.hardware.soundtrigger.KeyphraseEnrollmentInfo: void <init>(android.content.pm.PackageManager)>
<android.telecom.ParcelableCall: java.util.List getConferenceableCallIds()>
<android.app.ApplicationThreadProxy: android.os.IBinder asBinder()>
<android.view.View: boolean isHorizontalScrollBarEnabled()>
<android.view.InputQueue.FinishedInputEventCallback: void onFinishedInputEvent(java.lang.Object,boolean)>
<android.app.IActivityManager: boolean unbindService(android.app.IServiceConnection)>
<android.media.Rating: java.lang.String toString()>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: int getDnsType()>
<android.speech.tts.TextToSpeech: int synthesizeToFile(java.lang.CharSequence,android.os.Bundle,java.io.File,java.lang.String)>
<android.content.Context: void enforceCallingUriPermission(android.net.Uri,int,java.lang.String)>
<android.hardware.camera2.CaptureResult: java.lang.Object getProtected(android.hardware.camera2.CaptureResult.Key)>
<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>
<android.widget.ActionMenuView: void setMenuCallbacks(com.android.internal.view.menu.MenuPresenter.Callback,com.android.internal.view.menu.MenuBuilder.Callback)>
<android.telephony.CellIdentityWcdma: void writeToParcel(android.os.Parcel,int)>
<android.net.NetworkStats: android.net.NetworkStats.Entry getTotal(android.net.NetworkStats.Entry,int)>
<android.view.View: void dispatchVisibilityChanged(android.view.View,int)>
<com.android.internal.app.WindowDecorActionBar: int getSelectedNavigationIndex()>
<android.telecom.Log: void wtf(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Object[])>
<android.widget.BaseAdapter: boolean hasStableIds()>
<com.android.internal.app.WindowDecorActionBar: void onConfigurationChanged(android.content.res.Configuration)>
<android.opengl.GLES30: void glDeleteVertexArrays(int,int[],int)>
<com.android.internal.util.FastXmlSerializer: java.lang.String getPrefix(java.lang.String,boolean)>
<com.android.server.net.DnsServerEntry: void <init>(java.net.InetAddress,long)>
<android.view.accessibility.AccessibilityNodeInfo: boolean isSelected()>
<android.opengl.GLES30: void glFramebufferTextureLayer(int,int,int,int,int)>
<android.filterpacks.text.ToUpperCase: void setupPorts()>
<android.widget.HorizontalScrollView: void onLayout(boolean,int,int,int,int)>
<android.hardware.camera2.impl.CallbackProxies.DeviceCaptureCallbackProxy: void <init>(android.hardware.camera2.dispatch.Dispatchable)>
<android.webkit.WebChromeClient: void onProgressChanged(android.webkit.WebView,int)>
<android.view.RenderNode: float getRotationX()>
<android.renderscript.Element: android.renderscript.Element BOOLEAN(android.renderscript.RenderScript)>
<android.filterfw.GraphEnvironment: void <init>(android.filterfw.core.FrameManager,android.filterfw.io.GraphReader)>
<android.hardware.usb.UsbAccessory: java.lang.String getSerial()>
<android.filterfw.core.CachedFrameManager: void clearCache()>
<android.mtp.MtpServer: void sendObjectAdded(int)>
<android.widget.ViewFlipper: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.android.internal.widget.ToolbarWidgetWrapper: void setSplitWhenNarrow(boolean)>
<android.database.MatrixCursor: double getDouble(int)>
<android.media.browse.MediaBrowser: android.media.session.MediaSession.Token getSessionToken()>
<android.content.ContextWrapper: int checkCallingPermission(java.lang.String)>
<com.android.internal.telephony.IPhoneStateListener: void onServiceStateChanged(android.telephony.ServiceState)>
<android.print.PrintJobInfo: void setDocumentInfo(android.print.PrintDocumentInfo)>
<android.renderscript.Int3: android.renderscript.Int3 mod(android.renderscript.Int3,android.renderscript.Int3)>
<android.net.UrlQuerySanitizer: void registerParameters(java.lang.String[],android.net.UrlQuerySanitizer.ValueSanitizer)>
<android.content.Intent: void setExtrasClassLoader(java.lang.ClassLoader)>
<android.graphics.RectF: void roundOut(android.graphics.Rect)>
<android.media.MediaFormat: boolean containsKey(java.lang.String)>
<com.android.internal.os.BatteryStatsHelper: int getStatsType()>
<android.media.MediaMetadataEditor: android.media.MediaMetadataEditor putString(int,java.lang.String)>
<android.widget.TabWidget: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.telephony.TelephonyManager: void updateServiceLocation()>
<android.app.ActivityManager.ProcessErrorStateInfo: int describeContents()>
<android.widget.SimpleExpandableListAdapter: void <init>(android.content.Context,java.util.List,int,int,java.lang.String[],int[],java.util.List,int,java.lang.String[],int[])>
<com.android.internal.telephony.ITelephonyRegistry: void notifyCellInfo(java.util.List)>
<android.os.storage.StorageManager: long getStorageLowBytes(java.io.File)>
<android.view.ViewRootImpl: void debug()>
<com.android.internal.telephony.IWapPushManager: boolean updatePackage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,boolean,boolean)>
<android.renderscript.ScriptIntrinsicBlend: void forEachSrcAtop(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>
<android.widget.EdgeEffect: boolean draw(android.graphics.Canvas)>
<android.widget.RadioButton: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.view.ViewTreeObserver: boolean isAlive()>
<android.preference.EditTextPreference: void <init>(android.content.Context,android.util.AttributeSet)>
<android.app.backup.BackupDataOutput: int writeEntityHeader(java.lang.String,int)>
<android.database.CrossProcessCursorWrapper: boolean onMove(int,int)>
<android.widget.RadialTimePickerView: void setCurrentMinute(int)>
<android.graphics.drawable.BitmapDrawable: void setTintMode(android.graphics.PorterDuff.Mode)>
<android.media.effect.effects.FisheyeEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>
<android.app.admin.IDevicePolicyManager: java.util.List getPermittedInputMethods(android.content.ComponentName)>
<android.view.MenuItem: android.view.MenuItem setTitle(int)>
<android.text.Layout: int getLineVisibleEnd(int)>
<android.content.SyncStats: void writeToParcel(android.os.Parcel,int)>
<android.util.SparseArray: void put(int,java.lang.Object)>
<android.app.LoaderManager: android.content.Loader initLoader(int,android.os.Bundle,android.app.LoaderManager.LoaderCallbacks)>
<android.view.accessibility.AccessibilityNodeInfo: boolean removeChild(android.view.View)>
<com.android.internal.view.menu.ActionMenuItemView: boolean needsDividerAfter()>
<android.bluetooth.BluetoothHeadsetClient: int getAudioState(android.bluetooth.BluetoothDevice)>
<com.android.internal.inputmethod.InputMethodSubtypeSwitchingController.ImeSubtypeListItem: java.lang.String toString()>
<android.app.AlarmManager.AlarmClockInfo: int describeContents()>
<android.bluetooth.le.ScanCallback: void onScanResult(int,android.bluetooth.le.ScanResult)>
<android.opengl.EGL14: int eglGetError()>
<android.telephony.CellIdentityGsm: int describeContents()>
<android.text.method.BaseMovementMethod: boolean scrollRight(android.widget.TextView,android.text.Spannable,int)>
<android.provider.Settings: java.lang.String getGTalkDeviceId(long)>
<android.media.session.MediaSession.QueueItem: java.lang.String toString()>
<android.os.INetworkManagementService: android.net.RouteInfo[] getRoutes(java.lang.String)>
<android.util.LongArray: int size()>
<android.text.format.DateUtils: java.lang.String formatDateRange(android.content.Context,long,long,int)>
<android.webkit.WebSettings: void setAllowFileAccessFromFileURLs(boolean)>
<com.android.internal.statusbar.StatusBarIcon: com.android.internal.statusbar.StatusBarIcon clone()>
<android.content.Intent: android.content.ComponentName resolveSystemService(android.content.pm.PackageManager,int)>
<android.graphics.Region: java.lang.String toString()>
<android.app.UiAutomation: void waitForIdle(long,long)>
<android.os.Debug.MemoryInfo: int getTotalSwappedOut()>
<android.view.textservice.SpellCheckerSubtype: boolean equals(java.lang.Object)>
<android.widget.Scroller: int getCurrX()>
<android.media.AudioSystem: int getOutputLatency(int)>
<android.bluetooth.BluetoothGatt: boolean connect()>
<android.widget.SeekBar: void setOnSeekBarChangeListener(android.widget.SeekBar.OnSeekBarChangeListener)>
<android.os.StrictMode: android.os.StrictMode.Span enterCriticalSpan(java.lang.String)>
<android.media.AudioDevice: int getDeviceType()>
<android.text.method.BaseMovementMethod: boolean scrollPageDown(android.widget.TextView,android.text.Spannable)>
<android.net.NetworkStats: int size()>
<android.view.WindowManagerPolicy: void layoutWindowLw(android.view.WindowManagerPolicy.WindowState,android.view.WindowManagerPolicy.WindowState)>
<android.location.LocationProvider: int getAccuracy()>
<android.hardware.camera2.impl.CameraDeviceImpl.FrameNumberTracker: void updateTracker(long,android.hardware.camera2.CaptureResult,boolean)>
<android.view.KeyEvent: boolean isMediaKey(int)>
<android.speech.tts.TextToSpeech: int setVoice(android.speech.tts.Voice)>
<android.widget.Switch: void setTextOff(java.lang.CharSequence)>
<android.bluetooth.BluetoothAudioConfig: int getAudioFormat()>
<android.drm.DrmOutputStream: void write(int)>
<android.media.Rating: float getStarRating()>
<android.widget.TabHost.TabSpec: android.widget.TabHost.TabSpec setIndicator(android.view.View)>
<android.opengl.GLES11: void glGetTexParameterfv(int,int,float[],int)>
<android.media.session.ISessionController: android.os.Bundle getExtras()>
<android.telephony.NeighboringCellInfo: int getCid()>
<android.net.http.AndroidHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>
<android.preference.SeekBarPreference: void onStartTrackingTouch(android.widget.SeekBar)>
<android.view.View: boolean callOnClick()>
<android.net.wifi.IWifiManager: void updateWifiLockWorkSource(android.os.IBinder,android.os.WorkSource)>
<android.app.Activity: void onNewIntent(android.content.Intent)>
<android.media.AudioService: void setBluetoothA2dpOnInt(boolean)>
<android.os.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>
<com.android.internal.view.menu.IconMenuItemView: void setCheckable(boolean)>
<android.bluetooth.IBluetoothHeadset: boolean stopScoUsingVirtualVoiceCall(android.bluetooth.BluetoothDevice)>
<android.content.ComponentName: void <init>(android.content.Context,java.lang.String)>
<android.content.ContentProviderProxy: android.net.Uri uncanonicalize(java.lang.String,android.net.Uri)>
<android.graphics.drawable.GradientDrawable: void setShape(int)>
<android.media.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtTime(long,int)>
<com.android.internal.telecom.IConnectionService: void disconnect(java.lang.String)>
<android.database.Cursor: boolean requery()>
<android.net.wifi.p2p.WifiP2pManager: android.net.wifi.p2p.WifiP2pManager.Channel initializeInternal(android.content.Context,android.os.Looper,android.net.wifi.p2p.WifiP2pManager.ChannelListener)>
<android.renderscript.Long3: android.renderscript.Long3 sub(android.renderscript.Long3,long)>
<android.net.INetworkPolicyManager: void setNetworkPolicies(android.net.NetworkPolicy[])>
<android.graphics.TemporaryBuffer: char[] obtain(int)>
<android.opengl.GLES30: void glUniform3uiv(int,int,int[],int)>
<com.android.internal.util.AsyncChannel: int connectSync(android.content.Context,android.os.Handler,android.os.Handler)>
<com.android.internal.view.menu.MenuPopupHelper: void initForMenu(android.content.Context,com.android.internal.view.menu.MenuBuilder)>
<android.hardware.camera2.params.StreamConfigurationMap: boolean isOutputSupportedFor(android.view.Surface)>
<android.hardware.hdmi.HdmiRecordListener.TimerStatusData: boolean isOverlapped()>
<android.media.AudioDevice: java.lang.String getAddress()>
<android.hardware.camera2.impl.CameraDeviceImpl.CaptureCallback: void onCaptureStarted(android.hardware.camera2.CameraDevice,android.hardware.camera2.CaptureRequest,long,long)>
<android.content.ContentResolver: android.content.IContentProvider acquireUnstableProvider(android.net.Uri)>
<android.accounts.AccountAuthenticatorResponse: void onRequestContinued()>
<android.util.AttributeSet: int getIdAttributeResourceValue(int)>
<com.android.internal.widget.DialogTitle: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.renderscript.Float4: android.renderscript.Float4 sub(android.renderscript.Float4,android.renderscript.Float4)>
<android.app.ApplicationThreadProxy: void dumpMemInfo(java.io.FileDescriptor,android.os.Debug.MemoryInfo,boolean,boolean,boolean,java.lang.String[])>
<android.opengl.GLES11Ext: void glGetTexEnvxvOES(int,int,java.nio.IntBuffer)>
<android.database.AbstractCursor.SelfContentObserver: boolean deliverSelfNotifications()>
<android.preference.PreferenceActivity: void onNewIntent(android.content.Intent)>
<android.net.TrafficStats: long getUidUdpRxBytes(int)>
<android.content.Intent: java.lang.String toUri(int)>
<android.net.http.SslCertificate.DName: java.lang.String getDName()>
<android.content.DialogInterface.OnCancelListener: void onCancel(android.content.DialogInterface)>
<android.telephony.ServiceState: java.lang.String rilRadioTechnologyToString(int)>
<android.text.BoringLayout: int getHeight()>
<android.net.LinkProperties: boolean hasIPv4DefaultRoute()>
<android.widget.AbsListView: void setTextFilterEnabled(boolean)>
<android.media.tv.ITvInputClient: void onContentAllowed(int)>
<android.content.ContentProvider: int getUserIdFromUri(android.net.Uri,int)>
<android.view.FallbackEventHandler: void preDispatchKeyEvent(android.view.KeyEvent)>
<com.android.internal.textservice.ISpellCheckerSession: void onGetSentenceSuggestionsMultiple(android.view.textservice.TextInfo[],int)>
<android.provider.Settings.System: void setShowGTalkServiceStatus(android.content.ContentResolver,boolean)>
<android.widget.AdapterViewFlipper: void stopFlipping()>
<android.view.WindowManagerPolicy: void beginLayoutLw(boolean,int,int,int)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setSingleChoiceItems(android.database.Cursor,int,java.lang.String,android.content.DialogInterface.OnClickListener)>
<com.android.internal.os.BatteryStatsImpl.OverflowArrayMap: void clear()>
<android.widget.SlidingDrawer.OnDrawerCloseListener: void onDrawerClosed()>
<android.content.ContentProviderProxy: android.content.res.AssetFileDescriptor openTypedAssetFile(java.lang.String,android.net.Uri,java.lang.String,android.os.Bundle,android.os.ICancellationSignal)>
<android.content.ContentProviderProxy: android.database.Cursor query(java.lang.String,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.ICancellationSignal)>
<android.view.KeyEvent.DispatcherState: void startTracking(android.view.KeyEvent,java.lang.Object)>
<android.view.ViewGroup: boolean addViewInLayout(android.view.View,int,android.view.ViewGroup.LayoutParams)>
<android.filterpacks.imageproc.SimpleImageFilter: void updateProgramWithTarget(int,android.filterfw.core.FilterContext)>
<android.net.NetworkScoreManager: void registerNetworkScoreCache(int,android.net.INetworkScoreCache)>
<android.opengl.GLES20: void glBindBuffer(int,int)>
<android.hardware.usb.UsbRequest: void setClientData(java.lang.Object)>
<android.view.View: void setDisabledSystemUiVisibility(int)>
<com.android.internal.util.StateMachine: com.android.internal.util.StateMachine.LogRec getLogRec(int)>
<android.speech.IRecognitionService: void cancel(android.speech.IRecognitionListener)>
<android.content.ContentProviderClient: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)>
<android.security.SystemKeyStore: java.lang.String retrieveKeyHexString(java.lang.String)>
<com.android.internal.widget.SlidingTab: void setRightTabResources(int,int,int,int)>
<android.net.RouteInfo: boolean isHostRoute()>
<android.preference.PreferenceManager: void setDefaultValues(android.content.Context,int,boolean)>
<android.app.ProgressDialog: void setIndeterminate(boolean)>
<android.webkit.WebSettings: int getDefaultFontSize()>
<android.view.WindowCallbackWrapper: boolean dispatchTrackballEvent(android.view.MotionEvent)>
<android.accounts.CantAddAccountActivity: void onCreate(android.os.Bundle)>
<android.net.TrafficStats: long getUidTxBytes(int)>
<android.opengl.EGL14: boolean eglGetConfigs(android.opengl.EGLDisplay,android.opengl.EGLConfig[],int,int,int[],int)>
<android.filterfw.format.PrimitiveFormat: android.filterfw.core.MutableFrameFormat createInt16Format(int)>
<com.android.ims.internal.IImsCallSession: void hold(com.android.ims.ImsStreamMediaProfile)>
<android.graphics.Canvas: void insertInorderBarrier()>
<android.widget.ActivityChooserModel: int getHistoryMaxSize()>
<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageBO(int,boolean,java.lang.Object)>
<android.database.CursorWrapper: void setNotificationUri(android.content.ContentResolver,android.net.Uri)>
<android.appwidget.AppWidgetManager: void <init>(android.content.Context,com.android.internal.appwidget.IAppWidgetService)>
<android.app.Fragment: void registerForContextMenu(android.view.View)>
<android.bluetooth.BluetoothHeadset: int getPriority(android.bluetooth.BluetoothDevice)>
<android.content.pm.LimitedLengthInputStream: void <init>(java.io.InputStream,long,long)>
<android.text.style.TtsSpan.SemioticClassBuilder: android.text.style.TtsSpan.SemioticClassBuilder setMultiplicity(java.lang.String)>
<android.content.pm.PackageManager: java.lang.String installStatusToString(int,java.lang.String)>
<android.media.AudioRecord: int getRecordingState()>
<android.database.CrossProcessCursorWrapper: android.database.CursorWindow getWindow()>
<com.android.internal.os.BatteryStatsHelper: java.lang.String makemAh(double)>
<android.view.View: boolean removeCallbacks(java.lang.Runnable)>
<android.view.inputmethod.EditorInfo: void dump(android.util.Printer,java.lang.String)>
<android.widget.TextView: java.util.Locale getTextLocale()>
<android.view.View: void buildDrawingCache()>
<android.media.AudioService: boolean isMasterMute()>
<com.android.internal.telephony.IPhoneStateListener: void onVoLteServiceStateChanged(android.telephony.VoLteServiceState)>
<android.transition.ChangeClipBounds: java.lang.String[] getTransitionProperties()>
<com.android.internal.widget.AutoScrollHelper: void scrollTargetBy(int,int)>
<com.android.internal.widget.ActionBarContextView: boolean hideOverflowMenu()>
<android.widget.TextView: void setLinkTextColor(int)>
<android.opengl.GLES11Ext: void glGetTexGenivOES(int,int,java.nio.IntBuffer)>
<android.bluetooth.IBluetoothHeadset: boolean isAudioConnected(android.bluetooth.BluetoothDevice)>
<android.text.BidiFormatter: android.text.BidiFormatter getInstance()>
<com.android.internal.os.BatteryStatsImpl: int getHistoryTagPoolUid(int)>
<android.telephony.SubInfoRecord: void <init>(long,java.lang.String,int,java.lang.String,int,int,java.lang.String,int,int,int[],int,int)>
<android.os.Bundle: android.os.IBinder getBinder(java.lang.String)>
<android.webkit.WebStorage.Origin: long getUsage()>
<android.filterfw.io.PatternScanner: java.lang.String tryEat(java.util.regex.Pattern)>
<android.content.pm.PackageStats: void <init>(java.lang.String)>
<android.net.InterfaceConfiguration: void clearFlag(java.lang.String)>
<android.text.method.MovementMethod: boolean canSelectArbitrarily()>
<android.printservice.PrintServiceInfo: java.lang.String getId()>
<android.util.JsonReader: long nextLong()>
<android.renderscript.Int3: android.renderscript.Int3 mul(android.renderscript.Int3,android.renderscript.Int3)>
<android.graphics.drawable.ClipDrawable: void invalidateDrawable(android.graphics.drawable.Drawable)>
<android.telephony.cdma.CdmaSmsCbProgramResults: int getCategoryResult()>
<android.preference.PreferenceActivity: boolean onIsMultiPane()>
<android.content.pm.PermissionGroupInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)>
<android.media.IMediaRouterService: void requestUpdateVolume(android.media.IMediaRouterClient,java.lang.String,int)>
<android.widget.CalendarView.CalendarViewDelegate: int getShownWeekCount()>
<com.android.internal.os.BatteryStatsImpl.Uid.Pkg: void onTimeStarted(long,long,long)>
<android.os.ParcelUuid: java.lang.String toString()>
<com.android.internal.os.BatteryStatsHelper: void create(android.os.Bundle)>
<android.net.NetworkStateTracker: boolean isPrivateDnsRouteSet()>
<android.location.SettingInjectorService: android.os.IBinder onBind(android.content.Intent)>
<android.view.DisplayEventReceiver: void dispose()>
<android.renderscript.Element: android.renderscript.Element I64(android.renderscript.RenderScript)>
<android.text.style.TtsSpan.ElectronicBuilder: android.text.style.TtsSpan.ElectronicBuilder setQueryString(java.lang.String)>
<android.app.Fragment: boolean onContextItemSelected(android.view.MenuItem)>
<android.content.ContextWrapper: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>
<android.view.Menu: android.view.MenuItem getItem(int)>
<android.telephony.TelephonyManager: boolean isSmsCapable()>
<android.media.tv.TvInputManager.HardwareCallback: void onReleased()>
<android.content.ContentResolver: android.content.SyncStatusInfo getSyncStatus(android.accounts.Account,java.lang.String)>
<android.os.Parcel: void readIntArray(int[])>
<android.content.pm.PackageManager: android.content.Intent buildPermissionRequestIntent(java.lang.String[])>
<android.telephony.TelephonyManager: boolean setGlobalPreferredNetworkType()>
<android.inputmethodservice.KeyboardView: boolean setShifted(boolean)>
<android.content.pm.PackageManager: int checkPermission(java.lang.String,java.lang.String)>
<android.filterpacks.imageproc.DuotoneFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<android.database.sqlite.SQLiteDatabaseConfiguration: void <init>(android.database.sqlite.SQLiteDatabaseConfiguration)>
<android.content.pm.Signature: void <init>(java.lang.String)>
<android.filterfw.geometry.Rectangle: void <init>(float,float,float,float)>
<android.widget.Chronometer: void stop()>
<android.speech.tts.UtteranceProgressListener: void onDone(java.lang.String)>
<android.hardware.SerialPort: void close()>
<android.app.Notification.Builder: android.app.Notification.Builder setNumber(int)>
<android.transition.ChangeBounds: java.lang.String[] getTransitionProperties()>
<android.widget.AdapterViewAnimator: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.ListPopupWindow: int getHorizontalOffset()>
<android.widget.CalendarView: void setDateTextAppearance(int)>
<android.opengl.GLES20: void glHint(int,int)>
<com.android.internal.util.BitwiseInputStream: byte[] readByteArray(int)>
<android.net.wifi.p2p.WifiP2pGroupList: void <init>(android.net.wifi.p2p.WifiP2pGroupList,android.net.wifi.p2p.WifiP2pGroupList.GroupDeleteListener)>
<android.media.effect.effects.ContrastEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>
<android.transition.CircularPropagation: void setPropagationSpeed(float)>
<android.os.Handler: boolean sendMessageAtFrontOfQueue(android.os.Message)>
<com.android.internal.textservice.ISpellCheckerService: com.android.internal.textservice.ISpellCheckerSession getISpellCheckerSession(java.lang.String,com.android.internal.textservice.ISpellCheckerSessionListener,android.os.Bundle)>
<android.widget.DatePicker: void <init>(android.content.Context,android.util.AttributeSet)>
<android.os.BatteryStats: int getHistoryStringPoolBytes()>
<android.widget.TabHost.ContentStrategy: void tabClosed()>
<com.android.internal.telephony.IWapPushManager: boolean addPackage(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,boolean,boolean)>
<android.opengl.Matrix: void transposeM(float[],int,float[],int)>
<android.opengl.GLES30: void glGetUniformIndices(int,java.lang.String[],java.nio.IntBuffer)>
<android.view.AbsSavedState: int describeContents()>
<android.database.sqlite.SQLiteConnection: int executeForCursorWindow(java.lang.String,java.lang.Object[],android.database.CursorWindow,int,int,boolean,android.os.CancellationSignal)>
<android.widget.CompoundButton.OnCheckedChangeListener: void onCheckedChanged(android.widget.CompoundButton,boolean)>
<android.telephony.TelephonyManager: int getCdmaEriIconMode(long)>
<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfo findFocus(int,int,long,int)>
<android.app.Fragment: android.view.LayoutInflater getLayoutInflater(android.os.Bundle)>
<android.filterfw.core.FrameFormat: int getDimensionCount()>
<android.bluetooth.BluetoothA2dpSink: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.os.Parcel: int dataSize()>
<com.android.internal.policy.IKeyguardService: void setKeyguardEnabled(boolean)>
<android.provider.ContactsContract.CommonDataKinds.Email: int getTypeLabelResource(int)>
<android.view.ViewTreeObserver.InternalInsetsInfo: void setTouchableInsets(int)>
<android.app.ActivityManager: java.util.List getRunningTasks(int)>
<android.view.WindowInsets: int getSystemWindowInsetTop()>
<android.media.AudioService: int getMasterMaxVolume()>
<com.android.ims.internal.IImsUt: int queryCallForward(int,java.lang.String)>
<android.view.inputmethod.InputConnectionWrapper: void setTarget(android.view.inputmethod.InputConnection)>
<android.widget.ScrollView: void smoothScrollTo(int,int)>
<com.android.internal.widget.SlidingTab.OnTriggerListener: void onTrigger(android.view.View,int)>
<com.google.android.gles_jni.GLImpl: void glOrthof(float,float,float,float,float,float)>
<android.content.ContextWrapper: void setWallpaper(java.io.InputStream)>
<android.os.UserManager: android.graphics.drawable.Drawable getBadgedIconForUser(android.graphics.drawable.Drawable,android.os.UserHandle)>
<android.telephony.CellInfoCdma: boolean equals(java.lang.Object)>
<android.app.ActivityManagerProxy: int stopUser(int,android.app.IStopUserCallback)>
<android.graphics.drawable.Drawable: void setLayoutDirection(int)>
<com.android.internal.util.AsyncChannel: void sendMessage(int,int)>
<android.renderscript.Byte2: void addMultiple(android.renderscript.Byte2,byte)>
<android.widget.ScrollBarDrawable: boolean getAlwaysDrawVerticalTrack()>
<android.util.MathUtils: float norm(float,float,float)>
<android.graphics.Bitmap: android.graphics.Bitmap extractAlpha()>
<android.net.ConnectivityManager: void reportBadNetwork(android.net.Network)>
<android.app.WallpaperManager: java.io.InputStream openDefaultWallpaper(android.content.Context)>
<com.android.internal.os.BatteryStatsImpl.LongSamplingCounter: void onTimeStopped(long,long,long)>
<android.opengl.GLES31: void glProgramUniform4fv(int,int,int,float[],int)>
<android.hardware.Camera.PictureCallback: void onPictureTaken(byte[],android.hardware.Camera)>
<com.android.server.AppWidgetBackupBridge: void register(com.android.server.WidgetBackupProvider)>
<android.accounts.AccountManager: android.accounts.AuthenticatorDescription[] getAuthenticatorTypesAsUser(int)>
<android.telephony.CellInfoCdma: android.telephony.CellIdentityCdma getCellIdentity()>
<android.webkit.WebViewProvider: void removeJavascriptInterface(java.lang.String)>
<android.media.MediaScannerConnection: void <init>(android.content.Context,android.media.MediaScannerConnection.MediaScannerConnectionClient)>
<android.renderscript.Element: android.renderscript.Element U16_3(android.renderscript.RenderScript)>
<android.view.animation.Animation: int getBackgroundColor()>
<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.Drawable getFrame(int)>
<android.nfc.tech.NfcA: int getMaxTransceiveLength()>
<android.widget.DatePicker: long getMaxDate()>
<android.widget.TableRow: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.media.MediaCodec.CodecException: int getErrorCode()>
<com.android.internal.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()>
<android.view.View: android.graphics.Matrix getMatrix()>
<android.appwidget.AppWidgetHost: void deleteAppWidgetId(int)>
<android.widget.TextView: int getMarqueeRepeatLimit()>
<android.os.AsyncTask: void onPreExecute()>
<android.os.storage.StorageVolume: void setUserLabel(java.lang.String)>
<android.app.ActivityManagerProxy: void deleteActivityContainer(android.app.IActivityContainer)>
<android.app.admin.DevicePolicyManager: void reportSuccessfulPasswordAttempt(int)>
<android.widget.AutoCompleteTextView: void setThreshold(int)>
<com.android.internal.widget.DrawableHolder: float getY()>
<android.transition.Explode: void <init>(android.content.Context,android.util.AttributeSet)>
<android.app.ActivityManagerProxy: void attachApplication(android.app.IApplicationThread)>
<com.android.internal.util.XmlUtils: void writeStringArrayXml(java.lang.String[],java.lang.String,org.xmlpull.v1.XmlSerializer)>
<android.hardware.camera2.params.Face: int getId()>
<android.service.notification.IConditionListener: void onConditionsReceived(android.service.notification.Condition[])>
<android.nfc.NdefMessage: int getByteArrayLength()>
<android.telephony.SubscriptionManager: int getPhoneId(long)>
<android.widget.Switch: boolean getSplitTrack()>
<android.net.NetworkInfo: boolean isConnectedToProvisioningNetwork()>
<android.app.admin.DevicePolicyManager: void setPasswordMinimumNumeric(android.content.ComponentName,int)>
<android.bluetooth.IBluetoothGatt: void unregisterClient(int)>
<android.content.SyncAdapterType: int describeContents()>
<android.webkit.WebView: void findAllAsync(java.lang.String)>
<android.filterfw.core.SerializedFrame: void setData(java.nio.ByteBuffer,int,int)>
<android.app.Fragment: boolean onOptionsItemSelected(android.view.MenuItem)>
<android.database.BulkCursorNative: android.os.IBinder asBinder()>
<com.android.internal.widget.multiwaveview.GlowPadView: int getSuggestedMinimumHeight()>
<android.view.View: boolean isHapticFeedbackEnabled()>
<android.content.res.Resources: float getFraction(int,int,int)>
<android.media.session.ISessionCallback: void onPrevious()>
<android.os.Debug: void resetGlobalFreedCount()>
<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setIcon(int)>
<android.hardware.Camera.Parameters: int getInt(java.lang.String)>
<android.media.IRingtonePlayer: void playAsync(android.net.Uri,android.os.UserHandle,boolean,android.media.AudioAttributes)>
<android.renderscript.Byte2: void mul(android.renderscript.Byte2)>
<android.media.IMediaHTTPConnection: java.lang.String getMIMEType()>
<android.renderscript.ScriptIntrinsicBlend: void forEachDstOver(android.renderscript.Allocation,android.renderscript.Allocation)>
<android.widget.Switch: int getSwitchPadding()>
<android.text.Spanned: int getSpanFlags(java.lang.Object)>
<android.text.BidiFormatter: boolean getStereoReset()>
<android.bluetooth.IBluetoothGattCallback: void onDescriptorWrite(java.lang.String,int,int,int,android.os.ParcelUuid,int,android.os.ParcelUuid,int,android.os.ParcelUuid)>
<com.android.internal.util.Preconditions: int checkArgumentPositive(int,java.lang.String)>
<com.android.internal.os.BatteryStatsImpl: void noteFullWifiLockAcquiredFromSourceLocked(android.os.WorkSource)>
<android.bluetooth.BluetoothAudioConfig: int getChannelConfig()>
<android.widget.CursorTreeAdapter: void bindChildView(android.view.View,android.content.Context,android.database.Cursor,boolean)>
<android.opengl.GLES31Ext: int glGetDebugMessageLogKHR(int,int,int[],int,int[],int,int[],int,int[],int,int[],int,byte[],int)>
<android.view.View: void onAnimationStart()>
<android.telecom.ParcelableConnection: int getCallerDisplayNamePresentation()>
<android.telephony.Rlog: int v(java.lang.String,java.lang.String)>
<android.hardware.usb.UsbInterface: void writeToParcel(android.os.Parcel,int)>
<android.widget.TabWidget: void setRightStripDrawable(int)>
<android.os.Debug: void getMemoryInfo(android.os.Debug.MemoryInfo)>
<com.google.android.gles_jni.GLImpl: void glScalef(float,float,float)>
<android.view.WindowManagerPolicy: boolean isDefaultOrientationForced()>
<android.graphics.Typeface: android.graphics.Typeface create(java.lang.String,int)>
<android.service.notification.StatusBarNotification: java.lang.String getTag()>
<android.app.FragmentManagerImpl: void attachFragment(android.app.Fragment,int,int)>
<android.text.Layout: void draw(android.graphics.Canvas,android.graphics.Path,android.graphics.Paint,int)>
<android.os.BatteryStats: void formatTimeMsNoSpace(java.lang.StringBuilder,long)>
<android.renderscript.Int3: int dotProduct(android.renderscript.Int3,android.renderscript.Int3)>
<com.android.internal.view.IInputContextCallback: void setRequestUpdateCursorAnchorInfoResult(boolean,int)>
<android.widget.LinearLayout: int getDividerWidth()>
<android.content.ContextWrapper: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase.CursorFactory,android.database.DatabaseErrorHandler)>
<android.content.Context: java.lang.String getPackageName()>
<android.widget.QuickContactBadge: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.google.android.util.Procedure: void apply(java.lang.Object)>
<android.alsa.AlsaDevicesParser: boolean hasPlaybackDevices(int)>
<android.telecom.TelecomManager: void clearAccounts()>
<android.net.nsd.NsdServiceInfo: void setAttribute(java.lang.String,byte[])>
<android.appwidget.AppWidgetProviderInfo: android.os.UserHandle getProfile()>
<android.net.UrlQuerySanitizer: void parseUrl(java.lang.String)>
<android.opengl.ETC1Util.ETC1Texture: void <init>(int,int,java.nio.ByteBuffer)>
<android.widget.RadioGroup: void check(int)>
<android.widget.Toolbar: void setCollapsible(boolean)>
<android.media.audiofx.Virtualizer: boolean forceVirtualizationMode(int)>
<android.util.SparseBooleanArray: int keyAt(int)>
<android.text.SpannableStringBuilder: float getTextRunAdvances(int,int,int,int,boolean,float[],int,android.graphics.Paint)>
<android.widget.AbsoluteLayout: boolean shouldDelayChildPressedState()>
<com.android.internal.widget.ResolverDrawerLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.view.RenderNode: float getTranslationZ()>
<android.filterfw.core.SyncRunner: void beginProcessing()>
<android.appwidget.AppWidgetHostView: void <init>(android.content.Context,int,int)>
<android.bluetooth.BluetoothManager: android.bluetooth.BluetoothGattServer openGattServer(android.content.Context,android.bluetooth.BluetoothGattServerCallback,int)>
<android.telephony.SignalStrength: int getCdmaDbm()>
<com.google.android.gles_jni.EGLImpl: boolean eglQueryContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext,int,int[])>
<android.filterfw.core.Program: void process(android.filterfw.core.Frame,android.filterfw.core.Frame)>
<android.provider.Settings.System: boolean putFloat(android.content.ContentResolver,java.lang.String,float)>
<android.telephony.SubscriptionManager: void setDefaultVoiceSubId(long)>
<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>
<android.telephony.PhoneNumberUtils: byte[] numberToCalledPartyBCD(java.lang.String)>
<com.android.internal.http.multipart.ByteArrayPartSource: java.io.InputStream createInputStream()>
<android.printservice.PrintServiceInfo: java.lang.String toString()>
<android.view.RenderNode: boolean setClipToBounds(boolean)>
<android.service.voice.VoiceInteractionSession: void setContentView(android.view.View)>
<android.media.Metadata: int lastType()>
<android.app.Instrumentation: void callActivityOnPostCreate(android.app.Activity,android.os.Bundle,android.os.PersistableBundle)>
<com.android.internal.app.WindowDecorActionBar: void setWindowTitle(java.lang.CharSequence)>
<android.graphics.Canvas: void drawOval(float,float,float,float,android.graphics.Paint)>
<android.widget.RemoteViews: void setLong(int,java.lang.String,long)>
<com.android.internal.app.ToolbarActionBar: void onConfigurationChanged(android.content.res.Configuration)>
<android.media.Rating: int describeContents()>
<android.webkit.WebSettings: void setBuiltInZoomControls(boolean)>
<android.media.TtmlParser: void parse(java.lang.String,long)>
<android.media.MediaCodec.MediaImage: long getTimestamp()>
<com.android.internal.widget.LockPatternUtils: void requireCredentialEntry(int)>
<android.widget.AbsListView.OnScrollListener: void onScroll(android.widget.AbsListView,int,int,int)>
<android.view.ScaleGestureDetector: long getTimeDelta()>
<android.media.CameraProfile: int getJpegEncodingQualityParameter(int,int)>
<android.net.NetworkStatsHistory: long getStart()>
<android.media.MediaRouter.RouteGroup: int getRouteCount()>
<android.filterpacks.videosrc.SurfaceTextureTarget: void updateRenderMode()>
<android.net.NetworkInfo: java.lang.String getSubtypeName()>
<android.filterpacks.imageproc.DocumentaryFilter: void setupPorts()>
<android.webkit.WebStorage: void getOrigins(android.webkit.ValueCallback)>
<android.webkit.CookieManager: boolean acceptThirdPartyCookies(android.webkit.WebView)>
<android.content.ClipData.Item: java.lang.String toString()>
<android.renderscript.Float2: android.renderscript.Float2 sub(android.renderscript.Float2,android.renderscript.Float2)>
<com.android.internal.app.IVoiceInteractionManagerService: android.hardware.soundtrigger.SoundTrigger.ModuleProperties getDspModuleProperties(android.service.voice.IVoiceInteractionService)>
<android.view.View: void clearAnimation()>
<android.media.MediaDescription: android.graphics.Bitmap getIconBitmap()>
<android.view.accessibility.AccessibilityManager: java.util.List getEnabledAccessibilityServiceList(int)>
<com.android.internal.os.BatteryStatsImpl.Uid: java.util.Map getJobStats()>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofObject(java.lang.Object,java.lang.String,android.animation.TypeConverter,android.graphics.Path)>
<android.hardware.input.TouchCalibration: void writeToParcel(android.os.Parcel,int)>
<android.util.TrustedTime: long currentTimeMillis()>
<android.content.Intent: boolean isAccessUriMode(int)>
<com.android.internal.widget.LockPatternUtils: boolean isPukUnlockScreenEnable()>
<android.app.AppOpsManager: int startOpNoThrow(java.lang.String,int,java.lang.String)>
<android.print.PrintDocumentInfo: void writeToParcel(android.os.Parcel,int)>
<android.view.GestureDetector: void setOnDoubleTapListener(android.view.GestureDetector.OnDoubleTapListener)>
<android.media.tv.TvInputManager: android.media.tv.TvInputManager.Hardware acquireTvInputHardware(int,android.media.tv.TvInputManager.HardwareCallback,android.media.tv.TvInputInfo)>
<android.net.nsd.DnsSdTxtRecord: java.lang.String toString()>
<com.android.internal.util.StateMachine.LogRec: java.lang.String getInfo()>
<android.security.AndroidKeyStore: void engineSetKeyEntry(java.lang.String,byte[],java.security.cert.Certificate[])>
<android.filterpacks.imageproc.GrainFilter: void initProgram(android.filterfw.core.FilterContext,int)>
<android.filterpacks.imageproc.LomoishFilter: void <init>(java.lang.String)>
<android.opengl.GLES31: void glDrawElementsIndirect(int,int,long)>
<android.view.WindowManagerInternal: void setMagnificationSpec(android.view.MagnificationSpec)>
<android.opengl.GLES31: void glProgramUniform1iv(int,int,int,java.nio.IntBuffer)>
<android.text.SpannableStringBuilder: void <init>(java.lang.CharSequence,int,int)>
<android.content.ContentResolver: void validateSyncExtrasBundle(android.os.Bundle)>
<android.graphics.drawable.ClipDrawable: boolean onStateChange(int[])>
<android.view.View: void layout(int,int,int,int)>
<com.google.android.gles_jni.GLImpl: void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer)>
<android.view.textservice.SentenceSuggestionsInfo: int getOffsetAt(int)>
<android.media.session.ISessionController: void playFromSearch(java.lang.String,android.os.Bundle)>
<com.android.internal.view.IInputMethodManager: int getInputMethodWindowVisibleHeight()>
<android.net.Uri.Builder: android.net.Uri.Builder query(java.lang.String)>
<android.widget.CalendarView: void setSelectedDateVerticalBar(int)>
<android.net.wifi.p2p.WifiP2pGroup: boolean removeClient(android.net.wifi.p2p.WifiP2pDevice)>
<android.telecom.Call: void addListener(android.telecom.Call.Listener)>
<android.database.Observable: void registerObserver(java.lang.Object)>
<android.media.MediaRouter: void addCallback(int,android.media.MediaRouter.Callback,int)>
<android.webkit.WebView: void loadUrl(java.lang.String)>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setMimeType(java.lang.String)>
<android.graphics.Paint: float getLetterSpacing()>
<android.app.IApplicationThread: void scheduleCancelVisibleBehind(android.os.IBinder)>
<android.app.IActivityManager: void setAlwaysFinish(boolean)>
<android.os.Parcelable.ClassLoaderCreator: java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader)>
<android.transition.Explode: android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>
<com.android.internal.app.IAppOpsService: int noteOperation(int,int,java.lang.String)>
<android.net.NetworkAgent: void sendNetworkScore(int)>
<android.database.sqlite.SQLiteOpenHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)>
<android.hardware.camera2.params.StreamConfiguration: boolean isInput()>
<android.view.RenderNode: boolean setStaticMatrix(android.graphics.Matrix)>
<android.hardware.camera2.legacy.RequestHandlerThread: void waitUntilStarted()>
<android.widget.ResourceCursorAdapter: android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup)>
<android.view.animation.Animation: void initializeInvalidateRegion(int,int,int,int)>
<android.text.style.LineBackgroundSpan: void drawBackground(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,int)>
<android.print.PrintDocumentInfo.Builder: android.print.PrintDocumentInfo build()>
<android.media.FaceDetector.Face: float eyesDistance()>
<android.graphics.drawable.NinePatchDrawable: void <init>(android.graphics.NinePatch)>
<android.net.wifi.IWifiManager: void startWifi()>
<android.app.admin.DevicePolicyManager: java.lang.String[] getAccountTypesWithManagementDisabled()>
<android.content.ContentProvider: void setReadPermission(java.lang.String)>
<android.telecom.VideoProfile.VideoState: boolean isAudioOnly(int)>
<android.os.Binder: void attachInterface(android.os.IInterface,java.lang.String)>
<android.speech.tts.TextToSpeech: int isLanguageAvailable(java.util.Locale)>
<android.net.SamplingDataTracker: long getSampleTimestamp()>
<com.android.internal.location.ProviderProperties: void <init>(boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int)>
<android.content.SyncRequest: void writeToParcel(android.os.Parcel,int)>
<android.view.ActionMode: void setTag(java.lang.Object)>
<android.mtp.MtpDatabase: void finalize()>
<android.content.ContentProviderOperation: android.content.ContentValues resolveValueBackReferences(android.content.ContentProviderResult[],int)>
<android.view.View: void destroyHardwareResources()>
<android.content.res.AssetManager: android.content.res.AssetFileDescriptor openNonAssetFd(int,java.lang.String)>
<android.hardware.hdmi.HdmiTimerRecordSources: android.hardware.hdmi.HdmiTimerRecordSources.TimerRecordSource ofExternalPlug(android.hardware.hdmi.HdmiTimerRecordSources.TimerInfo,android.hardware.hdmi.HdmiRecordSources.ExternalPlugData)>
<android.ddm.DdmHandleAppName: void disconnected()>
<android.view.ViewGroup: boolean onNestedFling(android.view.View,float,float,boolean)>
<android.graphics.Canvas: void drawRect(android.graphics.RectF,android.graphics.Paint)>
<android.view.TextureView: android.graphics.Bitmap getBitmap(int,int)>
<android.view.inputmethod.BaseInputConnection: int getComposingSpanStart(android.text.Spannable)>
<android.text.style.RelativeSizeSpan: void updateDrawState(android.text.TextPaint)>
<android.util.DisplayMetrics: void setTo(android.util.DisplayMetrics)>
<android.os.Environment: boolean isEncryptedFilesystemEnabled()>
<com.android.internal.textservice.ITextServicesManager: void setCurrentSpellCheckerSubtype(java.lang.String,int)>
<android.security.SystemKeyStore: byte[] generateNewKey(int,java.lang.String,java.lang.String)>
<android.database.Cursor: boolean isBeforeFirst()>
<android.view.View: void removeOnLayoutChangeListener(android.view.View.OnLayoutChangeListener)>
<android.media.tv.TvContentRatingSystemInfo: int describeContents()>
<android.view.ViewGroup: void onDebugDraw(android.graphics.Canvas)>
<android.graphics.drawable.AnimatedVectorDrawable: boolean isRunning()>
<android.provider.ContactsContract.Directory: void notifyDirectoryChange(android.content.ContentResolver)>
<android.filterpacks.imageproc.RedEyeFilter: void setupPorts()>
<android.media.ImageReader.OnImageAvailableListener: void onImageAvailable(android.media.ImageReader)>
<com.android.internal.util.ArrayUtils: boolean isEmpty(java.lang.Object[])>
<android.os.StatFs: int getFreeBlocks()>
<android.content.res.Resources.Theme: android.content.res.TypedArray resolveAttributes(int[],int[])>
<android.media.tv.TvStreamConfig: int describeContents()>
<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>
<android.database.CursorToBulkCursorAdaptor: android.database.BulkCursorDescriptor getBulkCursorDescriptor()>
<android.view.Window: void dispatchWindowAttributesChanged(android.view.WindowManager.LayoutParams)>
<android.util.TypedValue: java.lang.CharSequence coerceToString()>
<android.hardware.usb.UsbDevice: int getInterfaceCount()>
<android.location.Location: void setLatitude(double)>
<android.app.admin.DevicePolicyManager: void wipeData(int)>
<android.widget.RadioGroup: void setOnHierarchyChangeListener(android.view.ViewGroup.OnHierarchyChangeListener)>
<android.app.ActivityManagerProxy: void killAllBackgroundProcesses()>
<android.app.admin.IDevicePolicyManager: void clearPackagePersistentPreferredActivities(android.content.ComponentName,java.lang.String)>
<android.content.res.Configuration: void setLocale(java.util.Locale)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setView(android.view.View,int,int,int,int)>
<android.graphics.Rect: java.lang.String toString()>
<android.preference.DialogPreference: void onClick()>
<android.hardware.camera2.CameraCharacteristics: java.util.List getKeys()>
<android.filterfw.core.FilterPort: void setBlocking(boolean)>
<android.widget.ScrollView: void onNestedScroll(android.view.View,int,int,int,int)>
<android.hardware.display.WifiDisplaySessionInfo: java.lang.String getPassphrase()>
<android.net.ProxyInfo: java.lang.String toString()>
<android.app.Activity: void onPostCreate(android.os.Bundle,android.os.PersistableBundle)>
<android.hardware.camera2.CameraCaptureSession: void close()>
<android.widget.TextView: int getMinEms()>
<android.util.Pools.Pool: java.lang.Object acquire()>
<android.os.Bundle: void setClassLoader(java.lang.ClassLoader)>
<android.app.IActivityManager: java.lang.String getPackageForIntentSender(android.content.IIntentSender)>
<android.hardware.Sensor: int getType()>
<android.widget.TextView: void jumpDrawablesToCurrentState()>
<android.os.Debug: int getGlobalFreedCount()>
<android.view.ViewGroup: android.view.View findViewByAccessibilityIdTraversal(int)>
<android.util.LongSparseLongArray: long get(long,long)>
<android.media.JetPlayer: android.media.JetPlayer getJetPlayer()>
<android.hardware.display.VirtualDisplay: java.lang.String toString()>
<android.content.pm.ComponentInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>
<android.app.ActivityManager.RunningAppProcessInfo: int describeContents()>
<android.view.textservice.SpellCheckerSession: com.android.internal.textservice.ISpellCheckerSessionListener getSpellCheckerSessionListener()>
<com.android.internal.telecom.IConnectionService: void playDtmfTone(java.lang.String,char)>
<android.renderscript.Float4: android.renderscript.Float4 div(android.renderscript.Float4,android.renderscript.Float4)>
<android.view.inputmethod.InputMethodManager: void showInputMethodAndSubtypeEnabler(java.lang.String)>
<android.app.MediaRouteButton: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.content.res.Resources: android.content.res.XmlResourceParser getAnimation(int)>
<android.app.ProgressDialog: void onCreate(android.os.Bundle)>
<com.android.internal.widget.LockPatternUtils: int getRequestedPasswordMinimumLetters()>
<com.android.internal.widget.ResolverDrawerLayout: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.android.internal.backup.LocalTransport: java.lang.String dataManagementLabel()>
<android.opengl.GLES20: void glCopyTexImage2D(int,int,int,int,int,int,int,int)>
<android.hardware.camera2.impl.CameraMetadataNative: void finalize()>
<android.speech.tts.Voice: int hashCode()>
<android.database.MergeCursor: int getInt(int)>
<android.net.http.RequestQueue: void <init>(android.content.Context)>
<android.app.StatusBarManager: void disable(int)>
<android.net.NetworkIdentity: boolean equals(java.lang.Object)>
<android.app.ResourcesManager: android.content.res.Configuration getConfiguration()>
<android.hardware.input.KeyboardLayout: java.lang.String getCollection()>
<android.app.trust.TrustManager.TrustListener: void onTrustChanged(boolean,int,boolean)>
<com.android.internal.widget.ToolbarWidgetWrapper: void setSplitView(android.view.ViewGroup)>
<android.filterfw.core.OutputPort: void setFrame(android.filterfw.core.Frame)>
<android.preference.DialogPreference: void onPrepareDialogBuilder(android.app.AlertDialog.Builder)>
<android.content.SearchRecentSuggestionsProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.os.storage.StorageManager: void disableUsbMassStorage()>
<android.graphics.drawable.NinePatchDrawable: android.graphics.Insets getOpticalInsets()>
<android.print.PrinterDiscoverySession: void startPrinterDiscovery(java.util.List)>
<android.hardware.usb.UsbDevice: java.lang.String getManufacturerName()>
<android.view.ViewTreeObserver: void addOnScrollChangedListener(android.view.ViewTreeObserver.OnScrollChangedListener)>
<android.text.style.EasyEditSpan: void <init>(android.app.PendingIntent)>
<android.telephony.SignalStrength: int getGsmDbm()>
<android.widget.ProgressBar: void jumpDrawablesToCurrentState()>
<android.view.inputmethod.InputMethodManager: boolean isWatchingCursor(android.view.View)>
<android.inputmethodservice.InputMethodService: void onCurrentInputMethodSubtypeChanged(android.view.inputmethod.InputMethodSubtype)>
<android.view.accessibility.IAccessibilityManager: android.os.IBinder getWindowToken(int)>
<android.content.res.AssetManager: android.util.SparseArray getAssignedPackageIdentifiers()>
<com.android.internal.backup.LocalTransportService: void onCreate()>
<android.media.AudioSystem: int getForceUse(int)>
<android.gesture.GestureLibrary: boolean load()>
<android.app.AlertDialog: void setButton2(java.lang.CharSequence,android.os.Message)>
<android.widget.RadioGroup.LayoutParams: void <init>(int,int)>
<com.android.internal.http.multipart.Part: java.lang.String getCharSet()>
<com.android.internal.telephony.ITelephonyRegistry: void notifyDataActivity(int)>
<android.util.LongSparseArray: java.lang.Object get(long,java.lang.Object)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(android.util.Property,android.animation.TypeEvaluator,java.lang.Object[])>
<android.widget.AbsSeekBar: void onSizeChanged(int,int,int,int)>
<android.content.pm.KeySet: int describeContents()>
<android.app.SearchableInfo.ActionKeyInfo: void writeToParcel(android.os.Parcel,int)>
<android.media.MediaHTTPConnection: android.os.IBinder connect(java.lang.String,java.lang.String)>
<android.media.Metadata: boolean parse(android.os.Parcel)>
<android.bluetooth.IBluetooth: boolean setName(java.lang.String)>
<android.renderscript.Float3: android.renderscript.Float3 div(android.renderscript.Float3,android.renderscript.Float3)>
<android.app.VoiceInteractor.Request: android.app.Activity getActivity()>
<android.view.View: int getBottom()>
<android.net.http.HttpAuthHeader: void setPassword(java.lang.String)>
<android.media.MediaPlayer: void setWakeMode(android.content.Context,int)>
<com.android.internal.app.IAppOpsService: java.util.List getPackagesForOps(int[])>
<android.hardware.hdmi.HdmiDeviceInfo: int getDeviceId()>
<android.app.Activity: java.lang.String getCallingPackage()>
<android.text.util.Rfc822Token: int hashCode()>
<android.content.SyncAdapterType: java.lang.String getSettingsActivity()>
<android.bluetooth.IBluetooth: boolean cancelDiscovery()>
<android.view.accessibility.AccessibilityNodeInfo: void setBoundsInParent(android.graphics.Rect)>
<android.opengl.GLES20: void glGenTextures(int,int[],int)>
<android.service.voice.VoiceInteractionSession: void onCloseSystemDialogs()>
<android.view.View: boolean isInScrollingContainer()>
<android.view.accessibility.AccessibilityRecord: void setSource(android.view.View,int)>
<android.renderscript.Short2: void add(android.renderscript.Short2)>
<android.media.ResampleInputStream: int read(byte[],int,int)>
<android.inputmethodservice.InputMethodService: boolean onTrackballEvent(android.view.MotionEvent)>
<android.hardware.hdmi.HdmiRecordSources.DvbData: void <init>(int,int,int)>
<android.view.inputmethod.InputMethodManager: void sendAppPrivateCommand(android.view.View,java.lang.String,android.os.Bundle)>
<android.widget.StackView: void showPrevious()>
<com.google.android.util.AbstractMessageParser.MusicTrack: boolean isHtml()>
<android.view.View: android.view.View findViewByPredicateInsideOut(android.view.View,com.android.internal.util.Predicate)>
<com.android.internal.app.AlertController: void setTitle(java.lang.CharSequence)>
<android.bluetooth.IBluetoothHealth: java.util.List getHealthDevicesMatchingConnectionStates(int[])>
<android.view.textservice.SpellCheckerSession: void getSuggestions(android.view.textservice.TextInfo,int)>
<android.location.LocationManager: void requestLocationUpdates(android.location.LocationRequest,android.location.LocationListener,android.os.Looper)>
<android.widget.AbsSpinner: void setSelection(int)>
<android.widget.TimePicker.TimePickerDelegate: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.view.View: android.view.View findViewByAccessibilityIdTraversal(int)>
<android.widget.NumberPicker: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.widget.CursorTreeAdapter: void setFilterQueryProvider(android.widget.FilterQueryProvider)>
<android.content.pm.ApplicationInfo: java.lang.String[] getSplitResourcePaths()>
<android.media.IAudioService: void forceRemoteSubmixFullVolume(boolean,android.os.IBinder)>
<android.widget.PopupWindow: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.internal.widget.PasswordEntryKeyboardHelper: void swipeDown()>
<android.app.IApplicationThread: void scheduleSuicide()>
<android.view.RenderNodeAnimator: void setInterpolator(android.animation.TimeInterpolator)>
<android.app.Instrumentation: void endPerformanceSnapshot()>
<com.android.internal.util.TypedProperties: boolean getBoolean(java.lang.String)>
<android.text.BidiFormatter: java.lang.String unicodeWrap(java.lang.String,android.text.TextDirectionHeuristic,boolean)>
<android.widget.SimpleCursorAdapter: void <init>(android.content.Context,int,android.database.Cursor,java.lang.String[],int[])>
<android.renderscript.Script: void setVar(int,android.renderscript.FieldPacker)>
<android.renderscript.ScriptIntrinsicConvolve5x5: void forEach(android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>
<android.service.voice.VoiceInteractionSession.Request: void sendCancelResult()>
<com.android.internal.statusbar.IStatusBar: void setSystemUiVisibility(int,int)>
<com.android.internal.widget.multiwaveview.TargetDrawable: boolean isEnabled()>
<android.transition.TransitionValues: java.lang.String toString()>
<com.android.internal.widget.SizeAdaptiveLayout: void <init>(android.content.Context)>
<android.renderscript.Double4: void set(android.renderscript.Double4)>
<android.content.RestrictionEntry: java.lang.String getKey()>
<android.filterpacks.imageproc.RotateFilter: void initProgram(android.filterfw.core.FilterContext,int)>
<android.view.textservice.SpellCheckerInfo: void <init>(android.os.Parcel)>
<android.os.CancellationSignal: android.os.ICancellationSignal createTransport()>
<android.bluetooth.le.ScanResult: android.bluetooth.le.ScanRecord getScanRecord()>
<android.hardware.camera2.impl.CaptureResultExtras: long getFrameNumber()>
<android.view.View: void setLabelFor(int)>
<android.telecom.RemoteConnection: void unregisterCallback(android.telecom.RemoteConnection.Callback)>
<android.hardware.hdmi.HdmiRecordSources: android.hardware.hdmi.HdmiRecordSources.OwnSource ofOwnSource()>
<android.app.WallpaperInfo: java.lang.CharSequence loadAuthor(android.content.pm.PackageManager)>
<android.text.method.LinkMovementMethod: void onTakeFocus(android.widget.TextView,android.text.Spannable,int)>
<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>
<android.media.MediaTimeProvider: void scheduleUpdate(android.media.MediaTimeProvider.OnMediaTimeListener)>
<android.net.wifi.IWifiManager: void enableVerboseLogging(int)>
<com.android.internal.os.BatteryStatsHelper: long getStatsPeriod()>
<android.opengl.GLES10: void glLightModelx(int,int)>
<android.database.AbstractCursor: boolean isNull(int)>
<android.media.AudioManager: void forceVolumeControlStream(int)>
<android.widget.ListView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.content.pm.PackageInstaller.Session: void close()>
<android.renderscript.Element: android.renderscript.Element U16(android.renderscript.RenderScript)>
<android.service.trust.ITrustAgentService: void setTrustAgentFeaturesEnabled(android.os.Bundle,android.os.IBinder)>
<android.graphics.drawable.Drawable: boolean isStateful()>
<android.text.TextUtils: void writeToParcel(java.lang.CharSequence,android.os.Parcel,int)>
<com.android.internal.app.ProcessStats: void dumpProcessListCsv(java.io.PrintWriter,java.util.ArrayList,boolean,int[],boolean,int[],boolean,int[],long)>
<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getMsisdnForSubscriber(long)>
<android.media.IAudioService: int abandonAudioFocus(android.media.IAudioFocusDispatcher,java.lang.String)>
<android.net.wifi.WifiEnterpriseConfig: void setSubjectMatch(java.lang.String)>
<com.google.android.util.SmileyParser: void <init>(java.lang.String,com.google.android.util.SmileyResources)>
<android.telephony.TelephonyManager: java.lang.String iccTransmitApduLogicalChannel(int,int,int,int,int,int,java.lang.String)>
<android.filterfw.core.StreamPort: void setFrame(android.filterfw.core.Frame)>
<android.app.Activity: void openOptionsMenu()>
<android.graphics.drawable.Drawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>
<android.content.IntentFilter: boolean hasAction(java.lang.String)>
<android.hardware.camera2.params.BlackLevelPattern: int hashCode()>
<android.bluetooth.BluetoothInputDevice: boolean connect(android.bluetooth.BluetoothDevice)>
<android.content.pm.PermissionInfo: void <init>(android.content.pm.PermissionInfo)>
<android.view.inputmethod.InputMethodInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>
<android.alsa.AlsaDevicesParser: android.alsa.AlsaDevicesParser.AlsaDeviceRecord getDeviceRecordAt(int)>
<com.android.internal.util.StateMachine: void sendMessageDelayed(int,long)>
<android.os.IPowerManager: void acquireWakeLockWithUid(android.os.IBinder,int,java.lang.String,java.lang.String,int)>
<android.text.method.ArrowKeyMovementMethod: boolean left(android.widget.TextView,android.text.Spannable)>
<android.security.AndroidKeyStore: void engineLoad(java.io.InputStream,char[])>
<android.location.GpsMeasurement: short getAccumulatedDeltaRangeState()>
<com.android.internal.os.BatteryStatsHelper: void <init>(android.content.Context)>
<android.media.Rating: boolean isThumbUp()>
<android.net.wifi.WifiScanner.ScanListener: void onPeriodChanged(int)>
<android.net.wifi.WifiNetworkConnectionStatistics: void <init>(int,int)>
<android.graphics.drawable.DrawableContainer: boolean selectDrawable(int)>
<android.widget.ImageView: boolean getCropToPadding()>
<android.media.tv.TvView: void onVisibilityChanged(android.view.View,int)>
<android.view.View: int getTextDirection()>
<android.hardware.camera2.CameraManager.AvailabilityCallback: void onCameraUnavailable(java.lang.String)>
<com.android.internal.logging.AndroidHandler: void flush()>
<android.hardware.Camera.Parameters: int getPictureFormat()>
<com.android.internal.app.IAppOpsService: void setUserRestrictions(android.os.Bundle,int)>
<android.widget.Gallery.LayoutParams: void <init>(int,int)>
<android.print.ILayoutResultCallback: void onLayoutStarted(android.os.ICancellationSignal,int)>
<android.widget.LinearLayout: boolean isMeasureWithLargestChildEnabled()>
<android.view.ViewGroup: void onDebugDrawMargins(android.graphics.Canvas,android.graphics.Paint)>
<android.nfc.cardemulation.CardEmulation: int getSelectionModeForCategory(java.lang.String)>
<android.app.ActionBar: void setListNavigationCallbacks(android.widget.SpinnerAdapter,android.app.ActionBar.OnNavigationListener)>
<android.view.ViewGroup: boolean dispatchUnhandledMove(android.view.View,int)>
<android.net.wifi.IWifiManager: boolean enableNetwork(int,boolean)>
<android.renderscript.RenderScriptGL: void bindProgramVertex(android.renderscript.ProgramVertex)>
<com.android.internal.widget.LockPatternUtils: boolean isPatternEverChosen()>
<com.android.internal.view.menu.ExpandedMenuView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.opengl.GLES20: void glStencilFunc(int,int,int)>
<com.android.internal.widget.ResolverDrawerLayout: void onNestedScroll(android.view.View,int,int,int,int)>
<android.text.method.Touch: int getInitialScrollX(android.widget.TextView,android.text.Spannable)>
<android.net.wifi.WifiManager: android.net.wifi.WifiManager.MulticastLock createMulticastLock(java.lang.String)>
<com.android.internal.os.BatteryStatsImpl: int getParcelVersion()>
<android.content.pm.PackageParser: android.content.pm.PackageInfo generatePackageInfo(android.content.pm.PackageParser.Package,int[],int,long,long,java.util.HashSet,android.content.pm.PackageUserState,int)>
<android.opengl.GLES10: void glFogxv(int,int[],int)>
<android.provider.ContactsContract.CommonDataKinds.Im: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>
<com.android.internal.widget.SubtitleView: void setEdgeType(int)>
<android.app.ActivityManagerProxy: boolean shouldUpRecreateTask(android.os.IBinder,java.lang.String)>
<android.widget.PopupWindow: void setIgnoreCheekPress()>
<android.bluetooth.BluetoothA2dp: boolean connect(android.bluetooth.BluetoothDevice)>
<android.media.MediaMetadataRetriever: byte[] getEmbeddedPicture()>
<android.view.View: boolean performClick()>
<android.view.WindowManagerPolicy: android.view.animation.Animation createForceHideWallpaperExitAnimation(boolean)>
<android.net.RouteInfo: void <init>(android.net.IpPrefix,java.net.InetAddress,java.lang.String,int)>
<android.renderscript.RSTextureView: void resume()>
<android.nfc.tech.MifareUltralight: void writePage(int,byte[])>
<android.print.PrintAttributes: android.print.PrintAttributes.MediaSize getMediaSize()>
<android.service.dreams.DreamService: void setDebug(boolean)>
<android.hardware.hdmi.HdmiPortInfo: int describeContents()>
<android.filterpacks.base.FrameStore: void <init>(java.lang.String)>
<android.net.IConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>
<android.widget.AdapterView: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>
<android.view.animation.TranslateAnimation: void applyTransformation(float,android.view.animation.Transformation)>
<android.widget.ScrollView: void measureChild(android.view.View,int,int)>
<android.view.Window.Callback: void onPanelClosed(int,android.view.Menu)>
<android.content.pm.PackageParser: java.security.PublicKey parsePublicKey(java.lang.String)>
<com.android.internal.view.menu.IconMenuPresenter: boolean onSubMenuSelected(com.android.internal.view.menu.SubMenuBuilder)>
<android.preference.EditTextPreference: void onAddEditTextToDialogView(android.view.View,android.widget.EditText)>
<android.media.SoundPool.SoundPoolDelegate: void setLoop(int,int)>
<android.net.wifi.WifiManager: boolean clearBlacklist()>
<android.inputmethodservice.KeyboardView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.view.View: void getHotspotBounds(android.graphics.Rect)>
<android.view.SurfaceView: void <init>(android.content.Context)>
<com.android.internal.app.AlertController: void setCustomTitle(android.view.View)>
<android.media.effect.effects.BackDropperEffect: void setUpdateListener(android.media.effect.EffectUpdateListener)>
<com.google.android.gles_jni.GLImpl: void glTexEnvf(int,int,float)>
<com.android.internal.view.BaseSurfaceHolder: void onRelayoutContainer()>
<android.media.IRemoteControlClient: void setWantsSyncForDisplay(android.media.IRemoteControlDisplay,boolean)>
<android.content.RestrictionEntry: java.lang.String getSelectedString()>
<android.app.FragmentTransaction: android.app.FragmentTransaction setCustomAnimations(int,int)>
<android.graphics.Canvas: void drawPoints(float[],int,int,android.graphics.Paint)>
<android.preference.Preference.BaseSavedState: void <init>(android.os.Parcel)>
<android.speech.tts.TextToSpeech: void <init>(android.content.Context,android.speech.tts.TextToSpeech.OnInitListener,java.lang.String,java.lang.String,boolean)>
<android.net.http.SslCertificate: java.lang.String getValidNotAfter()>
<android.content.Context: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<android.webkit.WebView: void clearHistory()>
<android.app.admin.IDevicePolicyManager: void reportSuccessfulPasswordAttempt(int)>
<android.app.AlertDialog.Builder: void <init>(android.content.Context,int)>
<android.net.wifi.WifiManager: android.net.DhcpInfo getDhcpInfo()>
<android.view.animation.DecelerateInterpolator: void <init>(android.content.res.Resources,android.content.res.Resources.Theme,android.util.AttributeSet)>
<android.view.View: android.view.View.OnFocusChangeListener getOnFocusChangeListener()>
<android.media.AudioPort: int hashCode()>
<android.bluetooth.IBluetoothInputDevice: boolean disconnect(android.bluetooth.BluetoothDevice)>
<android.graphics.drawable.InsetDrawable: void setHotspot(float,float)>
<android.graphics.RectF: void offset(float,float)>
<android.widget.AbsListView: android.view.View getSelectedView()>
<android.hardware.Camera.Parameters: int getMaxExposureCompensation()>
<android.widget.Toast: float getHorizontalMargin()>
<android.net.BaseNetworkStateTracker: void setTeardownRequested(boolean)>
<android.widget.DateTimeView: void onAttachedToWindow()>
<android.app.backup.IRestoreSession: int restoreSome(long,android.app.backup.IRestoreObserver,java.lang.String[])>
<android.drm.DrmManagerClient: int checkRightsStatus(java.lang.String)>
<android.media.audiofx.AudioEffect.OnControlStatusChangeListener: void onControlStatusChange(android.media.audiofx.AudioEffect,boolean)>
<com.android.internal.os.WrapperInit: void main(java.lang.String[])>
<android.database.MatrixCursor: java.lang.String getString(int)>
<android.app.LoaderManager: android.content.Loader getLoader(int)>
<android.widget.TimePicker: java.lang.Integer getCurrentMinute()>
<android.app.Activity: void startActivities(android.content.Intent[])>
<android.alsa.AlsaDevicesParser: boolean hasCaptureDevices()>
<com.android.internal.textservice.ITextServicesManager: android.view.textservice.SpellCheckerInfo[] getEnabledSpellCheckers()>
<com.android.internal.util.AsyncChannel: void replyToMessage(android.os.Message,int)>
<android.webkit.WebView: boolean requestFocus(int,android.graphics.Rect)>
<android.view.KeyEvent: boolean isMetaKey(int)>
<android.filterpacks.base.CallbackFilter: void prepare(android.filterfw.core.FilterContext)>
<android.media.audiofx.BassBoost: void setStrength(short)>
<android.provider.Settings.System: boolean getShowGTalkServiceStatus(android.content.ContentResolver)>
<com.android.internal.os.BatteryStatsImpl: void noteInteractiveLocked(boolean)>
<android.hardware.camera2.params.BlackLevelPattern: void copyTo(int[],int)>
<android.opengl.EGLConfig: boolean equals(java.lang.Object)>
<android.view.View: void setAccessibilitySelection(int,int)>
<android.filterfw.core.Frame: int getRefCount()>
<android.media.projection.IMediaProjectionManager: void addCallback(android.media.projection.IMediaProjectionWatcherCallback)>
<android.media.MediaFile: java.lang.String getMimeTypeForFile(java.lang.String)>
<android.widget.CursorTreeAdapter: boolean hasStableIds()>
<android.telephony.PhoneStateListener: void onDataConnectionStateChanged(int,int)>
<android.content.ClipData: android.content.ClipData.Item getItemAt(int)>
<android.graphics.drawable.BitmapDrawable: int getIntrinsicHeight()>
<android.text.Html: android.text.Spanned fromHtml(java.lang.String,android.text.Html.ImageGetter,android.text.Html.TagHandler)>
<android.telephony.cdma.CdmaSmsCbProgramData: void <init>(int,int,int,int,int,java.lang.String)>
<com.android.internal.view.menu.BaseMenuPresenter: boolean filterLeftoverView(android.view.ViewGroup,int)>
<android.util.SparseArray: void clear()>
<android.database.AbstractCursor: java.lang.Object getUpdatedField(int)>
<android.speech.tts.SynthesisRequest: java.lang.String getCountry()>
<com.android.internal.telecom.IInCallAdapter: void postDialContinue(java.lang.String,boolean)>
<android.app.ResourcesManager: boolean applyCompatConfiguration(int,android.content.res.Configuration)>
<android.animation.Animator: void resume()>
<android.telecom.Call.Details: int hashCode()>
<android.util.LongArray: android.util.LongArray clone()>
<android.text.style.TextAppearanceSpan: int getSpanTypeId()>
<android.location.GpsMeasurement: void reset()>
<android.os.Handler: void <init>(android.os.Handler.Callback,boolean)>
<android.preference.Preference: boolean persistString(java.lang.String)>
<android.os.INetworkManagementService: void setFirewallEgressDestRule(java.lang.String,int,boolean)>
<android.renderscript.Short3: void setValues(short,short,short)>
<android.animation.AnimatorSet: void setupStartValues()>
<android.preference.PreferenceManager: android.preference.PreferenceScreen inflateFromResource(android.content.Context,int,android.preference.PreferenceScreen)>
<android.view.animation.ScaleAnimation: void applyTransformation(float,android.view.animation.Transformation)>
<android.nfc.NdefRecord: int hashCode()>
<android.os.Debug: int getBinderDeathObjectCount()>
<android.text.BidiFormatter: android.text.BidiFormatter getInstance(boolean)>
<android.location.FusedBatchOptions: int getSourcesToUse()>
<android.media.MediaCodec: android.view.Surface createInputSurface()>
<android.widget.Editor.TextModifyOperation: void redo()>
<android.nfc.Tag: boolean hasTech(int)>
<android.media.RemoteDisplayState.RemoteDisplayInfo: int describeContents()>
<android.widget.ArrayAdapter: android.widget.Filter getFilter()>
<android.renderscript.Short4: android.renderscript.Short4 div(android.renderscript.Short4,short)>
<android.util.LruCache: void trimToSize(int)>
<android.view.WindowId: void registerFocusObserver(android.view.WindowId.FocusObserver)>
<android.net.ConnectivityManager: void maybeMarkCapabilitiesRestricted(android.net.NetworkCapabilities)>
<android.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)>
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: java.lang.String toString()>
<android.text.SpannableStringBuilder: int getSpanEnd(java.lang.Object)>
<com.android.internal.view.menu.ActionMenuItemView: void initialize(com.android.internal.view.menu.MenuItemImpl,int)>
<android.print.PrintDocumentAdapter.WriteResultCallback: void onWriteCancelled()>
<com.google.android.gles_jni.GLImpl: void glDrawArrays(int,int,int)>
<android.os.Bundle: java.io.Serializable getSerializable(java.lang.String)>
<android.text.TextUtils: boolean isDigitsOnly(java.lang.CharSequence)>
<android.nfc.INfcTag: int setTimeout(int,int)>
<android.opengl.GLES10: void glMultiTexCoord4x(int,int,int,int,int)>
<android.net.LocalSocket: void setSoTimeout(int)>
<android.widget.Switch: void setSwitchTypeface(android.graphics.Typeface,int)>
<android.renderscript.Allocation: void copyFrom(short[])>
<android.media.tv.TvView.OnUnhandledInputEventListener: boolean onUnhandledInputEvent(android.view.InputEvent)>
<android.graphics.drawable.GradientDrawable: int getIntrinsicHeight()>
<android.database.sqlite.SQLiteDiskIOException: void <init>(java.lang.String)>
<com.android.internal.view.menu.MenuItemImpl: android.view.ActionProvider getActionProvider()>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo getLabeledBy()>
<android.bluetooth.le.ScanRecord: int getTxPowerLevel()>
<android.util.JsonWriter: android.util.JsonWriter beginObject()>
<android.media.audiopolicy.AudioPolicy: android.media.audiopolicy.AudioPolicyConfig getConfig()>
<android.app.ActivityManagerProxy: void moveTaskBackwards(int)>
<android.widget.AbsSpinner: void setAdapter(android.widget.SpinnerAdapter)>
<android.net.InterfaceConfiguration: void setHardwareAddress(java.lang.String)>
<android.printservice.PrintJob: boolean complete()>
<android.text.method.CharacterPickerDialog: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<android.bluetooth.BluetoothGatt: boolean setCharacteristicNotification(android.bluetooth.BluetoothGattCharacteristic,boolean)>
<com.android.internal.view.menu.MenuBuilder: void setQwertyMode(boolean)>
<android.provider.Contacts.Phones: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence)>
<android.view.View.OnClickListener: void onClick(android.view.View)>
<android.webkit.CookieSyncManager: void stopSync()>
<android.opengl.GLES20: void glBlendFuncSeparate(int,int,int,int)>
<android.filterpacks.imageproc.SimpleImageFilter: void setupPorts()>
<android.app.admin.IDevicePolicyManager: long getMaximumTimeToLock(android.content.ComponentName,int)>
<android.renderscript.Short3: void setAt(int,short)>
<android.app.Notification.Action: void <init>(int,java.lang.CharSequence,android.app.PendingIntent)>
<android.media.audiofx.EnvironmentalReverb: short getDiffusion()>
<android.view.View: int generateViewId()>
<android.renderscript.Double4: void setValues(double,double,double,double)>
<android.transition.Transition: android.transition.Transition excludeChildren(java.lang.Class,boolean)>
<android.filterfw.core.FilterPort: void checkFrameType(android.filterfw.core.Frame,boolean)>
<android.media.IRemoteDisplayProvider: void setVolume(java.lang.String,int)>
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setTitle(java.lang.CharSequence)>
<android.media.tv.ITvInputManager: void setSurface(android.os.IBinder,android.view.Surface,int)>
<android.app.backup.SharedPreferencesBackupHelper: void performBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>
<android.content.pm.ResolveInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>
<android.app.backup.BackupAgent: android.os.IBinder onBind()>
<android.location.LocationRequest: java.lang.String toString()>
<android.net.NetworkStateTracker: void stopSampling(android.net.SamplingDataTracker.SamplingSnapshot)>
<com.android.internal.view.StandaloneActionMode: void setSubtitle(java.lang.CharSequence)>
<android.media.DeniedByServerException: void <init>(java.lang.String)>
<android.app.SearchableInfo: android.app.SearchableInfo.ActionKeyInfo findActionKey(int)>
<android.media.MediaMetadata: int size()>
<android.service.dreams.DreamService: boolean onMenuItemSelected(int,android.view.MenuItem)>
<android.app.trust.ITrustListener: void onTrustManagedChanged(boolean,int)>
<android.hardware.camera2.CameraManager: void <init>(android.content.Context)>
<android.hardware.display.DisplayManagerGlobal: void resizeVirtualDisplay(android.hardware.display.IVirtualDisplayCallback,int,int,int)>
<android.widget.AbsListView: void fling(int)>
<android.content.ContextWrapper: int checkPermission(java.lang.String,int,int)>
<android.hardware.hdmi.HdmiPortInfo: void <init>(int,int,int,boolean,boolean,boolean)>
<android.webkit.WebView.PrivateAccess: void super_scrollTo(int,int)>
<android.content.ClipDescription: void writeToParcel(android.os.Parcel,int)>
<android.transition.TransitionSet: android.transition.TransitionSet removeTarget(java.lang.String)>
<android.widget.SlidingDrawer: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.provider.ContactsContract.Data: android.net.Uri getContactLookupUri(android.content.ContentResolver,android.net.Uri)>
<android.media.tv.TvInputManager: void unregisterCallback(android.media.tv.TvInputManager.TvInputCallback)>
<android.os.INetworkManagementService: void registerNetworkActivityListener(android.os.INetworkActivityListener)>
<com.android.internal.os.BatteryStatsImpl.Uid: long getWifiMulticastTime(long,int)>
<android.view.View: void stopNestedScroll()>
<android.os.IBinder: void dump(java.io.FileDescriptor,java.lang.String[])>
<com.android.internal.view.InputConnectionWrapper: void <init>(com.android.internal.view.IInputContext)>
<android.renderscript.FileA3D: android.renderscript.FileA3D createFromResource(android.renderscript.RenderScript,android.content.res.Resources,int)>
<android.content.IContentService: void setMasterSyncAutomatically(boolean)>
<android.view.ViewRootImpl: void requestTransitionStart(android.animation.LayoutTransition)>
<android.widget.TabWidget: void setLeftStripDrawable(android.graphics.drawable.Drawable)>
<android.media.AudioManager: void registerRemoteControlDisplay(android.media.IRemoteControlDisplay)>
<com.android.internal.app.IBatteryStats: void noteStartGps(int)>
<android.security.KeyChain.KeyChainConnection: void close()>
<android.graphics.Paint: android.graphics.Xfermode getXfermode()>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.net.LinkProperties: void writeToParcel(android.os.Parcel,int)>
<android.database.BulkCursorDescriptor: void readFromParcel(android.os.Parcel)>
<android.media.ClosedCaptionWidget: void onDisplayChanged(android.text.SpannableStringBuilder[])>
<android.view.accessibility.AccessibilityManager: java.util.List getAccessibilityServiceList()>
<android.view.accessibility.IAccessibilityManager: void interrupt(int)>
<com.google.android.gles_jni.GLImpl: void glViewport(int,int,int,int)>
<com.android.internal.os.BatteryStatsImpl: void noteFullWifiLockAcquiredLocked(int)>
<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.ActionBarOverlayLayout.LayoutParams generateDefaultLayoutParams()>
<android.webkit.WebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)>
<android.util.MathUtils: float acos(float)>
<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>
<android.filterfw.core.GLEnvironment: void initWithCurrentContext()>
<android.util.TypedValue: void setTo(android.util.TypedValue)>
<android.telephony.ServiceState: int describeContents()>
<android.app.ActivityManagerProxy: void setServiceForeground(android.content.ComponentName,android.os.IBinder,int,android.app.Notification,boolean)>
<android.renderscript.RenderScript: android.renderscript.RenderScript create(android.content.Context,android.renderscript.RenderScript.ContextType)>
<android.app.Fragment: boolean equals(java.lang.Object)>
<android.app.IActivityManager: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>
<android.security.KeyChain: boolean isKeyAlgorithmSupported(java.lang.String)>
<android.app.IActivityManager: void activityStopped(android.os.IBinder,android.os.Bundle,android.os.PersistableBundle,java.lang.CharSequence)>
<android.printservice.PrintJob: boolean cancel()>
<com.android.internal.view.menu.IconMenuPresenter: int getNumActualItemsShown()>
<android.nfc.NfcActivityManager: void onActivityCreated(android.app.Activity,android.os.Bundle)>
<android.filterpacks.imageproc.BitmapSource: void setupPorts()>
<com.android.internal.os.BatteryStatsImpl.Uid.Proc: long getTimeAtCpuSpeedStep(int,int)>
<android.view.Window.Callback: void onAttachedToWindow()>
<android.bluetooth.BluetoothUuid: boolean isAudioSource(android.os.ParcelUuid)>
<android.location.ICountryDetector: android.location.Country detectCountry()>
<android.graphics.Bitmap: void setPremultiplied(boolean)>
<android.util.LruCache: java.util.Map snapshot()>
<android.media.tv.TvContract: boolean isChannelUriForPassthroughInput(android.net.Uri)>
<android.content.ContentProviderProxy: android.net.Uri canonicalize(java.lang.String,android.net.Uri)>
<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuBuilder setDefaultShowAsAction(int)>
<android.app.ApplicationErrorReport.BatteryInfo: void <init>(android.os.Parcel)>
<android.os.SystemClock: long elapsedRealtime()>
<android.app.ActivityManager: boolean isUserRunning(int)>
<android.os.RegistrantList: void notifyException(java.lang.Throwable)>
<android.view.MotionEvent: float getSize()>
<android.database.CursorWrapper: java.lang.String getString(int)>
<android.app.IActivityManager: boolean testIsSystemReady()>
<android.telecom.ParcelableConference: java.lang.String toString()>
<android.view.animation.AlphaAnimation: boolean hasAlpha()>
<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>
<android.opengl.GLES11Ext: void glClipPlanexOES(int,java.nio.IntBuffer)>
<android.animation.ObjectAnimator: void setupEndValues()>
<android.media.MediaCodec: void setCallback(android.media.MediaCodec.Callback)>
<android.view.ViewRootImpl: boolean canResolveTextAlignment()>
<android.widget.Toolbar: boolean isOverflowMenuShowPending()>
<android.view.inputmethod.CursorAnchorInfo.Builder: android.view.inputmethod.CursorAnchorInfo build()>
<android.location.GpsMeasurement: void setMultipathIndicator(byte)>
<android.view.accessibility.AccessibilityInteractionClient: void addConnection(int,android.accessibilityservice.IAccessibilityServiceConnection)>
<android.media.tv.TvInputInfo: boolean isConnectedToHdmiSwitch()>
<com.android.internal.app.IBatteryStats: void noteWifiRunningChanged(android.os.WorkSource,android.os.WorkSource)>
<android.widget.DatePicker.DatePickerDelegate: void onRestoreInstanceState(android.os.Parcelable)>
<android.database.MergeCursor: double getDouble(int)>
<android.bluetooth.BluetoothPbap: boolean disconnect()>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getActivityLogo(android.content.ComponentName)>
<android.view.accessibility.AccessibilityRecord: boolean isEnabled()>
<com.android.internal.app.AlertController: boolean onKeyUp(int,android.view.KeyEvent)>
<android.service.voice.AlwaysOnHotwordDetector.Callback: void onRecognitionResumed()>
<android.app.Activity: void onSaveInstanceState(android.os.Bundle)>
<android.app.AppOpsManager: int checkOp(java.lang.String,int,java.lang.String)>
<android.widget.Toolbar.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<android.webkit.URLUtil: boolean isHttpsUrl(java.lang.String)>
<android.media.AudioSystem: int newAudioSessionId()>
<android.app.Activity: android.app.Application getApplication()>
<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>
<android.telephony.CellInfo: void writeToParcel(android.os.Parcel,int,int)>
<android.hardware.input.InputManagerInternal: boolean injectInputEvent(android.view.InputEvent,int,int)>
<android.renderscript.Double3: double dotProduct(android.renderscript.Double3,android.renderscript.Double3)>
<android.os.WorkSource: boolean add(int)>
<android.renderscript.ScriptIntrinsicBlend: void forEachSubtract(android.renderscript.Allocation,android.renderscript.Allocation)>
<android.content.ContentProviderProxy: android.os.ICancellationSignal createCancellationSignal()>
<android.preference.TwoStatePreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.google.android.util.SmileyResources: com.google.android.util.AbstractMessageParser.TrieNode getSmileys()>
<android.location.GpsNavigationMessage: byte[] getData()>
<android.view.KeyCharacterMap: void writeToParcel(android.os.Parcel,int)>
<android.graphics.drawable.LevelListDrawable: android.graphics.drawable.Drawable mutate()>
<android.net.wifi.WifiConnectionStatistics: void <init>(android.net.wifi.WifiConnectionStatistics)>
<android.view.WindowManagerPolicy: boolean isForceHiding(android.view.WindowManager.LayoutParams)>
<android.media.MediaFormat: void setLong(java.lang.String,long)>
<android.graphics.Canvas: void setViewport(int,int)>
<android.content.pm.PackageParser.Package: java.util.List getAllCodePathsExcludingResourceOnly()>
<android.net.NetworkStats: java.lang.String[] getUniqueIfaces()>
<android.app.Instrumentation: void waitForIdle(java.lang.Runnable)>
<android.webkit.WebChromeClient.FileChooserParams: android.content.Intent createIntent()>
<android.app.Activity: void onAttachFragment(android.app.Fragment)>
<com.google.android.util.SmileyParser: com.google.android.util.AbstractMessageParser.Resources getResources()>
<android.nfc.NdefRecord: android.nfc.NdefRecord createMime(java.lang.String,byte[])>
<android.telecom.Call: void mergeConference()>
<android.view.inputmethod.InputConnectionWrapper: boolean performContextMenuAction(int)>
<android.app.SearchableInfo: boolean shouldIncludeInGlobalSearch()>
<android.os.Bundle: void putChar(java.lang.String,char)>
<android.net.NetworkStatsHistory: void dump(com.android.internal.util.IndentingPrintWriter,boolean)>
<android.content.pm.PackageManager: java.lang.String getNameForUid(int)>
<android.app.admin.IDevicePolicyManager: void setProfileName(android.content.ComponentName,java.lang.String)>
<android.view.View: java.lang.Object getTag()>
<android.media.tv.ITvInputSession: void setVolume(float)>
<android.opengl.GLES11Ext: void glClipPlanexOES(int,int[],int)>
<android.webkit.WebSettings: void setJavaScriptCanOpenWindowsAutomatically(boolean)>
<android.content.pm.PermissionGroupInfo: int describeContents()>
<com.android.internal.widget.ToolbarWidgetWrapper: void initProgress()>
<android.os.UEventObserver: void finalize()>
<android.app.Activity: boolean onMenuItemSelected(int,android.view.MenuItem)>
<android.inputmethodservice.InputMethodService: boolean isInputViewShown()>
<android.app.FragmentManagerImpl: android.app.Fragment findFragmentById(int)>
<com.android.internal.os.BatteryStatsImpl: void distributeWorkLocked(int)>
<android.provider.Settings.System: boolean getShowGTalkServiceStatusForUser(android.content.ContentResolver,int)>
<android.app.Application: void registerComponentCallbacks(android.content.ComponentCallbacks)>
<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Rect,android.graphics.Paint)>
<android.text.style.TextAppearanceSpan: android.content.res.ColorStateList getTextColor()>
<android.media.tv.TvInputManager.Session: void tune(android.net.Uri,android.os.Bundle)>
<com.android.internal.http.multipart.Part: void sendStart(java.io.OutputStream)>
<android.net.wifi.IWifiManager: void startScan(android.net.wifi.ScanSettings,android.os.WorkSource)>
<android.app.ApplicationThreadProxy: void scheduleCrash(java.lang.String)>
<com.google.android.util.SmileyResources: java.util.Set getSchemes()>
<android.renderscript.Font: android.renderscript.Font create(android.renderscript.RenderScript,android.content.res.Resources,java.lang.String,android.renderscript.Font.Style,float)>
<android.media.AudioManager: void abandonAudioFocusForCall()>
<android.os.Vibrator: void vibrate(long,android.media.AudioAttributes)>
<android.graphics.drawable.AnimatedVectorDrawable: void setLayoutDirection(int)>
<android.provider.Settings.Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>
<android.content.ContextWrapper: java.io.File getExternalCacheDir()>
<android.media.MediaCodec.MediaImage: int getWidth()>
<android.media.UnstyledTextExtractor: void onStart(java.lang.String,java.lang.String[],java.lang.String)>
<android.accounts.AccountManagerFuture: boolean isCancelled()>
<android.bluetooth.BluetoothGattServer: java.util.List getConnectedDevices()>
<android.widget.TextView: boolean extractText(android.view.inputmethod.ExtractedTextRequest,android.view.inputmethod.ExtractedText)>
<com.android.internal.app.IBatteryStats: void noteSyncFinish(java.lang.String,int)>
<android.app.LoadedApk: android.app.IServiceConnection forgetServiceDispatcher(android.content.Context,android.content.ServiceConnection)>
<android.graphics.Point: void <init>(android.graphics.Point)>
<android.app.admin.DevicePolicyManager: boolean getStorageEncryption(android.content.ComponentName)>
<android.app.backup.WallpaperBackupHelper: void <init>(android.content.Context,java.lang.String[],java.lang.String[])>
<android.os.INetworkManagementService: void createPhysicalNetwork(int)>
<android.widget.ZoomButtonsController.OnZoomListener: void onZoom(boolean)>
<android.hardware.Camera.Parameters: void setZoom(int)>
<com.android.internal.transition.ActionBarTransition: void beginDelayedTransition(android.view.ViewGroup)>
<android.view.FallbackEventHandler: void setView(android.view.View)>
<android.view.View: void setScrollbarFadingEnabled(boolean)>
<android.graphics.Path: void setFillType(android.graphics.Path.FillType)>
<android.view.ViewStub: void setLayoutResource(int)>
<android.app.AlertDialog: void setButton(int,java.lang.CharSequence,android.os.Message)>
<com.android.internal.os.BatteryStatsImpl: void noteActivityPausedLocked(int)>
<android.transition.Visibility: android.animation.Animator onDisappear(android.view.ViewGroup,android.transition.TransitionValues,int,android.transition.TransitionValues,int)>
<android.net.wifi.WifiScanner: void <init>(android.content.Context,android.net.wifi.IWifiScanner)>
<android.content.Intent: void fixUris(int)>
<android.filterpacks.ui.SurfaceRenderFilter: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>
<android.view.SurfaceSession: void kill()>
<android.net.http.SslCertificate: android.net.http.SslCertificate.DName getIssuedTo()>
<android.print.PrintJobInfo: java.lang.String toString()>
<android.location.GpsClock: double getDriftInNsPerSec()>
<android.bluetooth.BluetoothClass: int getDeviceClass()>
<android.view.ViewConfiguration: int getTapTimeout()>
<android.view.SurfaceControl: void hide()>
<android.view.textservice.TextInfo: void <init>(android.os.Parcel)>
<android.widget.LinearLayout.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>
<android.telecom.ConnectionService: android.telecom.Connection onCreateUnknownConnection(android.telecom.PhoneAccountHandle,android.telecom.ConnectionRequest)>
<android.telecom.Connection.Listener: void onDestroyed(android.telecom.Connection)>
<android.view.View: boolean dispatchNestedScroll(int,int,int,int,int[])>
<android.speech.tts.TextToSpeechService.UtteranceProgressDispatcher: void dispatchOnError(int)>
<android.hardware.SystemSensorManager: void unregisterListenerImpl(android.hardware.SensorEventListener,android.hardware.Sensor)>
<com.android.internal.content.PackageHelper: boolean renameSdDir(java.lang.String,java.lang.String)>
<android.widget.StackView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.app.Notification: java.lang.String visibilityToString(int)>
<android.webkit.WebView.PrivateAccess: float getHorizontalScrollFactor()>
<android.content.res.CompatibilityInfo: void writeToParcel(android.os.Parcel,int)>
<android.location.ICountryDetector: void addCountryListener(android.location.ICountryListener)>
<com.android.internal.widget.AbsActionBarView: void setSplitWhenNarrow(boolean)>
<android.database.DatabaseUtils: void dumpCursor(android.database.Cursor)>
<com.android.internal.view.menu.ListMenuPresenter: void <init>(android.content.Context,int)>
<android.content.pm.IPackageDeleteObserver2: void onUserActionRequired(android.content.Intent)>
<android.renderscript.AllocationAdapter: void subData1D(int,int,short[])>
<android.security.KeyStore: boolean importKey(java.lang.String,byte[],int,int)>
<android.graphics.drawable.PaintDrawable: void <init>(int)>
<android.appwidget.AppWidgetHost: void deleteAllHosts()>
<android.bluetooth.IBluetoothGattCallback: void onCharacteristicRead(java.lang.String,int,int,int,android.os.ParcelUuid,int,android.os.ParcelUuid,byte[])>
<android.content.pm.PackageInstaller.SessionParams: void setSize(long)>
<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem.OnMenuItemClickListener)>
<android.telecom.InCallService.VideoCall.Listener: void onSessionModifyRequestReceived(android.telecom.VideoProfile)>
<android.media.tv.ITvInputManager: boolean isParentalControlsEnabled(int)>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getPackageName()>
<android.content.ContentProviderOperation.Builder: android.content.ContentProviderOperation.Builder withValueBackReferences(android.content.ContentValues)>
<android.app.ActivityManagerProxy: int bindService(android.app.IApplicationThread,android.os.IBinder,android.content.Intent,java.lang.String,android.app.IServiceConnection,int,int)>
<android.text.BidiFormatter.Builder: void <init>(java.util.Locale)>
<android.opengl.GLES11Ext: void glGetRenderbufferParameterivOES(int,int,int[],int)>
<com.android.internal.view.menu.MenuItemImpl: void setExclusiveCheckable(boolean)>
<android.graphics.drawable.GradientDrawable: void setGradientRadius(float)>
<android.graphics.drawable.AnimatedStateListDrawable: boolean onStateChange(int[])>
<android.net.ConnectivityManager: boolean isDefaultNetworkActive()>
<android.text.DynamicLayout: int[] getBlockEndLines()>
<android.app.IActivityManager: void revokeUriPermissionFromOwner(android.os.IBinder,android.net.Uri,int,int)>
<android.view.WindowManagerGlobal: void closeAll(android.os.IBinder,java.lang.String,java.lang.String)>
<android.renderscript.Type.Builder: android.renderscript.Type create()>
<android.view.View: int getMinimumHeight()>
<android.app.FragmentManager.BackStackEntry: java.lang.String getName()>
<android.print.PrintJobInfo: void setPages(android.print.PageRange[])>
<android.media.RemoteController: boolean clearArtworkConfiguration()>
<android.app.FragmentManager: android.app.Fragment getFragment(android.os.Bundle,java.lang.String)>
<android.content.IntentSender: android.os.UserHandle getCreatorUserHandle()>
<android.telephony.CellInfoCdma: android.telephony.CellInfoCdma createFromParcelBody(android.os.Parcel)>
<com.android.internal.widget.DecorToolbar: void setNavigationMode(int)>
<android.net.wifi.IWifiManager: java.util.List getScanResults(java.lang.String)>
<android.view.KeyEvent: void <init>(int,int)>
<android.os.IUserManager: android.os.Bundle getApplicationRestrictions(java.lang.String)>
<android.widget.TextView: float getLeftFadingEdgeStrength()>
<android.net.IEthernetManager: android.net.IpConfiguration getConfiguration()>
<com.android.internal.os.BatteryStatsImpl: void noteScreenBrightnessLocked(int)>
<android.opengl.GLES20: void glClearDepthf(float)>
<android.media.Tokenizer.OnTokenListener: void onTimeStamp(long)>
<android.hardware.camera2.utils.CameraRuntimeException: void <init>(int)>
<android.os.Messenger: boolean equals(java.lang.Object)>
<android.net.LocalServerSocket: void <init>(java.io.FileDescriptor)>
<android.content.ContextWrapper: android.content.pm.ApplicationInfo getApplicationInfo()>
<android.graphics.drawable.Drawable: int[] getState()>
<android.widget.TextView: java.lang.CharSequence getError()>
<com.android.internal.telephony.ISub: int getAllSubInfoCount()>
<android.renderscript.Double3: void copyTo(double[],int)>
<android.media.audiofx.Equalizer.Settings: void <init>(java.lang.String)>
<android.content.Intent: void readFromParcel(android.os.Parcel)>
<android.bluetooth.IBluetoothInputDevice: int getPriority(android.bluetooth.BluetoothDevice)>
<com.android.internal.widget.ILockSettings: void removeUser(int)>
<android.os.BatteryStats: long getPhoneOnTime(long,int)>
<android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter.Builder setManufacturerData(int,byte[],byte[])>
<android.app.SearchableInfo.ActionKeyInfo: int getKeyCode()>
<android.content.Intent: void <init>(java.lang.String,android.net.Uri,android.content.Context,java.lang.Class)>
<android.graphics.pdf.PdfDocument.Page: android.graphics.Canvas getCanvas()>
<android.view.ViewRootImpl: void cancelInvalidate(android.view.View)>
<android.widget.TextView: int computeVerticalScrollRange()>
<android.hardware.camera2.dispatch.BroadcastDispatcher: java.lang.Object dispatch(java.lang.reflect.Method,java.lang.Object[])>
<android.widget.ZoomButtonsController: void setFocusable(boolean)>
<android.view.TextureView: void onAttachedToWindow()>
<android.webkit.WebView: void onAttachedToWindow()>
<android.emoji.EmojiFactory: int getVendorSpecificSjisFromAndroidPua(int)>
<android.text.style.QuoteSpan: void <init>(int)>
<android.view.animation.Animation: int getZAdjustment()>
<android.gesture.Gesture: android.graphics.Bitmap toBitmap(int,int,int,int,int)>
<android.widget.DatePicker: void setFirstDayOfWeek(int)>
<android.widget.HorizontalScrollView: boolean onTouchEvent(android.view.MotionEvent)>
<android.webkit.URLUtil: boolean isNetworkUrl(java.lang.String)>
<android.os.PowerManager: int getMaximumScreenBrightnessSetting()>
<android.hardware.Camera: void setPreviewCallbackWithBuffer(android.hardware.Camera.PreviewCallback)>
<android.nfc.tech.NfcV: byte getResponseFlags()>
<android.widget.GridView: void setStretchMode(int)>
<android.app.ApplicationThreadProxy: void scheduleRegisteredReceiver(android.content.IIntentReceiver,android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int,int)>
<android.location.LocationRequest: android.location.LocationRequest setNumUpdates(int)>
<android.transition.ChangeTransform: void setReparentWithOverlay(boolean)>
<android.app.IActivityManager: java.lang.String getPackageForToken(android.os.IBinder)>
<android.app.ActivityManagerProxy: void resizeStack(int,android.graphics.Rect)>
<android.telecom.Call: void stopDtmfTone()>
<android.os.Looper: void prepareMainLooper()>
<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable.Creator)>
<android.telephony.cdma.CdmaSmsCbProgramResults: int describeContents()>
<android.content.Intent: android.content.ClipData getClipData()>
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: void <init>(int,int,int,android.net.wifi.p2p.WifiP2pDevice,byte[])>
<android.renderscript.Element: android.renderscript.Element RGBA_8888(android.renderscript.RenderScript)>
<android.text.method.ScrollingMovementMethod: boolean right(android.widget.TextView,android.text.Spannable)>
<android.widget.ViewAnimator: void removeViewAt(int)>
<android.widget.TextView: int computeHorizontalScrollRange()>
<android.hardware.camera2.legacy.GLThreadManager: void start()>
<android.app.ActivityManagerProxy: void backupAgentCreated(java.lang.String,android.os.IBinder)>
<android.nfc.tech.NfcF: byte[] transceive(byte[])>
<android.content.pm.PackageParser: android.content.pm.ActivityInfo generateActivityInfo(android.content.pm.PackageParser.Activity,int,android.content.pm.PackageUserState,int)>
<android.widget.Editor: void onCommitCorrection(android.view.inputmethod.CorrectionInfo)>
<android.graphics.drawable.NinePatchDrawable: void setTintList(android.content.res.ColorStateList)>
<android.content.Entity: java.lang.String toString()>
<android.transition.TransitionManager: void setDefaultTransition(android.transition.Transition)>
<android.view.View: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.content.RestrictionEntry: void setAllSelectedStrings(java.lang.String[])>
<android.app.IActivityManager: void attachApplication(android.app.IApplicationThread)>
<android.widget.ScrollView: void requestChildFocus(android.view.View,android.view.View)>
<android.widget.OverScroller: void <init>(android.content.Context,android.view.animation.Interpolator)>
<android.graphics.Outline: void setOval(int,int,int,int)>
<android.widget.Gallery: boolean onTouchEvent(android.view.MotionEvent)>
<android.widget.TextView: void setText(java.lang.CharSequence,android.widget.TextView.BufferType)>
<android.widget.TextView: int getCompoundPaddingRight()>
<android.opengl.GLES30: void glBindBufferRange(int,int,int,int,int)>
<android.app.ApplicationThreadProxy: void bindApplication(java.lang.String,android.content.pm.ApplicationInfo,java.util.List,android.content.ComponentName,android.app.ProfilerInfo,android.os.Bundle,android.app.IInstrumentationWatcher,android.app.IUiAutomationConnection,int,boolean,boolean,boolean,android.content.res.Configuration,android.content.res.CompatibilityInfo,java.util.Map,android.os.Bundle)>
<android.transition.Fade: android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>
<com.android.internal.util.ArrayUtils: float[] newUnpaddedFloatArray(int)>
<android.widget.AbsListView: boolean isFastScrollEnabled()>
<android.opengl.EGLDisplay: boolean equals(java.lang.Object)>
<android.widget.ToggleButton: void drawableStateChanged()>
<android.database.sqlite.SQLiteCursor: int getColumnIndex(java.lang.String)>
<android.widget.RemoteViewsListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.app.ActivityManager: int getLauncherLargeIconDensity()>
<android.graphics.PathMeasure: float getLength()>
<android.view.InputEventConsistencyVerifier: void onKeyEvent(android.view.KeyEvent,int)>
<android.opengl.GLException: void <init>(int)>
<android.webkit.URLUtil: boolean isCookielessProxyUrl(java.lang.String)>
<android.webkit.WebViewClient: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,android.webkit.WebResourceRequest)>
<android.opengl.GLES20: void glUniform3fv(int,int,java.nio.FloatBuffer)>
<android.filterfw.core.FilterPort: void <init>(android.filterfw.core.Filter,java.lang.String)>
<android.media.session.MediaController: android.media.MediaMetadata getMetadata()>
<android.util.LongSparseArray: void remove(long)>
<android.drm.DrmManagerClient: void finalize()>
<android.net.wifi.p2p.WifiP2pManager: void requestPeers(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.PeerListListener)>
<android.app.admin.DevicePolicyManager: void setPasswordMinimumLength(android.content.ComponentName,int)>
<android.net.LinkProperties: boolean hasIPv6DefaultRoute()>
<android.widget.TextView: void setHeight(int)>
<android.widget.Filter: android.widget.Filter.FilterResults performFiltering(java.lang.CharSequence)>
<com.android.internal.util.StateMachine: void <init>(java.lang.String,android.os.Looper)>
<com.android.internal.content.NativeLibraryHelper.Handle: com.android.internal.content.NativeLibraryHelper.Handle create(android.content.pm.PackageParser.Package)>
<android.opengl.GLES30: void glGetActiveUniformBlockiv(int,int,int,int[],int)>
<android.telecom.Call.Listener: void onCannedTextResponsesLoaded(android.telecom.Call,java.util.List)>
<android.widget.Scroller: void abortAnimation()>
<android.media.IAudioService: boolean isMasterMute()>
<com.android.ims.ImsCallForwardInfo: java.lang.String toString()>
<android.view.Display: boolean isSuspendedState(int)>
<android.hardware.camera2.params.Face: java.lang.String toString()>
<android.net.wifi.IWifiManager: void stopWifi()>
<android.app.Activity: void onApplyThemeResource(android.content.res.Resources.Theme,int,boolean)>
<android.view.RenderNodeAnimator: void pause()>
<android.app.IApplicationThread: void setSchedulingGroup(int)>
<android.filterfw.core.AsyncRunner: android.filterfw.core.FilterGraph getGraph()>
<android.media.audiofx.AudioEffect: int getParameter(int[],byte[])>
<android.hardware.camera2.utils.TypeReference: android.hardware.camera2.utils.TypeReference getComponentType()>
<android.media.AudioManager: void startBluetoothScoVirtualCall()>
<android.media.SoundPool.SoundPoolDelegate: void setVolume(int,float)>
<android.hardware.usb.UsbInterface: java.lang.String toString()>
<android.widget.DoubleDigitManager.CallBack: boolean twoDigitsFinal(int,int)>
<com.android.internal.widget.SubtitleView: void setText(java.lang.CharSequence)>
<android.accounts.CantAddAccountActivity: void onCancelButtonClicked(android.view.View)>
<android.renderscript.Allocation: void copy1DRangeFrom(int,int,float[])>
<android.preference.SeekBarVolumizer: void revertVolume()>
<android.media.RemoteDisplayState: void writeToParcel(android.os.Parcel,int)>
<android.database.sqlite.SQLiteDirectCursorDriver: void cursorRequeried(android.database.Cursor)>
<android.app.ActivityManager: boolean isUserAMonkey()>
<android.view.ViewConfiguration: float getScrollFriction()>
<android.app.Activity: boolean requestWindowFeature(int)>
<android.telephony.CellSignalStrengthGsm: java.lang.String toString()>
<android.widget.LinearLayout: android.widget.LinearLayout.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.util.Xml: void parse(java.io.Reader,org.xml.sax.ContentHandler)>
<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>
<android.app.WallpaperInfo: android.graphics.drawable.Drawable loadThumbnail(android.content.pm.PackageManager)>
<android.filterpacks.imageproc.CropRectFilter: void <init>(java.lang.String)>
<android.opengl.GLES31Ext: void glDebugMessageControlKHR(int,int,int,int,int[],int,boolean)>
<android.os.Bundle: boolean[] getBooleanArray(java.lang.String)>
<android.hardware.Camera: void cancelAutoFocus()>
<android.webkit.WebSettings: boolean getUseWebViewBackgroundForOverscrollBackground()>
<android.widget.GridView: void setSelection(int)>
<android.media.AudioManager: void adjustMasterVolume(int,int)>
<android.view.MotionEvent: java.lang.String toolTypeToString(int)>
<android.app.ActivityOptions: android.app.ActivityOptions makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int)>
<android.accounts.AccountManager: java.lang.String blockingGetAuthToken(android.accounts.Account,java.lang.String,boolean)>
<android.hardware.camera2.legacy.GLThreadManager: void <init>(int,int,android.hardware.camera2.legacy.CameraDeviceState)>
<android.widget.AdapterViewFlipper: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.webkit.WebView: void setWebContentsDebuggingEnabled(boolean)>
<android.animation.LayoutTransition.TransitionListener: void startTransition(android.animation.LayoutTransition,android.view.ViewGroup,android.view.View,int)>
<android.util.ArrayMap: boolean containsAll(java.util.Collection)>
<android.app.ActivityThread: void registerOnActivityPausedListener(android.app.Activity,android.app.OnActivityPausedListener)>
<android.net.wifi.WifiInfo: android.net.wifi.WifiSsid getWifiSsid()>
<android.hardware.Camera.Parameters: boolean isAutoWhiteBalanceLockSupported()>
<android.hardware.display.IDisplayManager: void stopWifiDisplayScan()>
<android.app.FragmentContainer: boolean hasView()>
<android.view.inputmethod.InputConnection: boolean performEditorAction(int)>
<android.preference.MultiCheckPreference: void setEntryValues(java.lang.String[])>
<android.telephony.TelephonyManager: boolean isMultiSimEnabled()>
<android.util.Base64InputStream: int read()>
<android.preference.Preference: int getLayoutResource()>
<android.telecom.Connection: void resetConference()>
<android.widget.SeekBar: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.view.View: int getVerticalScrollbarPosition()>
<android.widget.SearchView: int getImeOptions()>
<android.app.MediaRouteButton: boolean performClick()>
<android.opengl.GLES11Ext: void glTexGenivOES(int,int,java.nio.IntBuffer)>
<android.renderscript.Short4: android.renderscript.Short4 mul(android.renderscript.Short4,short)>
<android.widget.TextView: void setKeyListener(android.text.method.KeyListener)>
<android.widget.AbsListView: int getBottomPaddingOffset()>
<com.android.internal.widget.AbsActionBarView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.media.AudioService: int getStreamVolume(int)>
<android.content.ContentValues: void putStringArrayList(java.lang.String,java.util.ArrayList)>
<android.renderscript.Sampler: android.renderscript.Sampler MIRRORED_REPEAT_LINEAR(android.renderscript.RenderScript)>
<android.hardware.usb.UsbInterface: int describeContents()>
<android.hardware.camera2.impl.CallbackProxies.DeviceStateCallbackProxy: void <init>(android.hardware.camera2.dispatch.Dispatchable)>
<android.webkit.WebViewProvider: void pauseTimers()>
<com.android.internal.view.menu.IconMenuPresenter: void bindItemView(com.android.internal.view.menu.MenuItemImpl,com.android.internal.view.menu.MenuView.ItemView)>
<android.view.KeyEvent.Callback: boolean onKeyDown(int,android.view.KeyEvent)>
<android.view.WindowManager.LayoutParams: java.lang.String toString()>
<android.widget.CheckedTextView: void <init>(android.content.Context)>
<android.bluetooth.BluetoothGattServer: void clearServices()>
<android.hardware.camera2.legacy.LegacyCameraDevice: int configureOutputs(java.util.List)>
<android.accounts.IAccountManager: android.accounts.Account[] getAccounts(java.lang.String)>
<android.net.NetworkPolicy: int hashCode()>
<com.android.ims.ImsStreamMediaProfile: void <init>(android.os.Parcel)>
<android.net.SamplingDataTracker: long getSampledRxPacketErrorCount()>
<android.media.AudioService: void remoteControlDisplayWantsPlaybackPositionSync(android.media.IRemoteControlDisplay,boolean)>
<android.media.tv.TvView: void onDetachedFromWindow()>
<android.graphics.Paint: void <init>(int)>
<android.renderscript.Short4: android.renderscript.Short4 div(android.renderscript.Short4,android.renderscript.Short4)>
<android.app.Activity: java.lang.Object getLastNonConfigurationInstance()>
<android.sax.Element: void setEndElementListener(android.sax.EndElementListener)>
<android.text.util.Rfc822Token: java.lang.String toString()>
<android.transition.TransitionManager: android.transition.Transition getDefaultTransition()>
<android.view.HardwareRenderer: boolean isAvailable()>
<com.android.internal.app.ProcessStats.DurationsTable: void <init>(com.android.internal.app.ProcessStats,java.lang.String)>
<android.hardware.location.IFusedLocationHardware: void requestBatchOfLocations(int)>
<android.util.SparseLongArray: android.util.SparseLongArray clone()>
<android.content.ContentProvider: void enforceReadPermissionInner(android.net.Uri)>
<android.os.Vibrator: boolean hasVibrator()>
<android.os.BatteryStats: long computeBatteryRealtime(long,int)>
<com.android.internal.widget.ExploreByTouchHelper: void onPopulateNodeForVirtualView(int,android.view.accessibility.AccessibilityNodeInfo)>
<android.media.TtmlCue: void <init>(long,long,java.lang.String,java.lang.String)>
<android.service.dreams.DreamService: boolean isInteractive()>
<com.android.internal.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)>
<android.telephony.PhoneNumberUtils: boolean isPotentialEmergencyNumber(long,java.lang.String,java.lang.String)>
<android.webkit.WebSettings: void setUseDoubleTree(boolean)>
<android.view.View: void setScrollBarStyle(int)>
<android.text.method.BaseMovementMethod: boolean right(android.widget.TextView,android.text.Spannable)>
<android.transition.TransitionSet: android.transition.Transition excludeTarget(java.lang.String,boolean)>
<android.telecom.Call.Details: android.telecom.DisconnectCause getDisconnectCause()>
<android.content.ClipboardManager.OnPrimaryClipChangedListener: void onPrimaryClipChanged()>
<android.filterpacks.imageproc.BitmapSource: void <init>(java.lang.String)>
<android.app.Activity: boolean onContextItemSelected(android.view.MenuItem)>
<android.webkit.MimeTypeMap: java.lang.String getFileExtensionFromUrl(java.lang.String)>
<android.inputmethodservice.Keyboard: int getKeyHeight()>
<android.preference.PreferenceManager: void setDefaultValues(android.content.Context,java.lang.String,int,int,boolean)>
<android.view.View: java.lang.Object getTag(int)>
<android.view.View: int[] mergeDrawableStates(int[],int[])>
<android.bluetooth.BluetoothHealthAppConfiguration: boolean equals(java.lang.Object)>
<android.nfc.tech.NfcF: android.nfc.tech.NfcF get(android.nfc.Tag)>
<android.webkit.WebViewProvider.ScrollDelegate: void computeScroll()>
<android.preference.PreferenceActivity: android.preference.PreferenceActivity.Header onGetInitialHeader()>
<android.graphics.drawable.InsetDrawable: void invalidateDrawable(android.graphics.drawable.Drawable)>
<android.app.FragmentTransaction: android.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence)>
<android.graphics.drawable.LayerDrawable: void onBoundsChange(android.graphics.Rect)>
<com.android.internal.inputmethod.InputMethodUtils.InputMethodSettings: void setShowImeWithHardKeyboard(boolean)>
<android.view.accessibility.AccessibilityRecord: void setScrollable(boolean)>
<android.widget.AbsListView: void onFilterComplete(int)>
<android.os.INetworkManagementService: boolean isClatdStarted()>
<android.webkit.WebBackForwardList: int getCurrentIndex()>
<android.hardware.SensorManager: boolean flushImpl(android.hardware.SensorEventListener)>
<android.webkit.WebViewProvider.ViewDelegate: void setLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.gesture.Gesture: long getID()>
<android.bluetooth.BluetoothGattServer: void close()>
<android.inputmethodservice.AbstractInputMethodService: android.view.KeyEvent.DispatcherState getKeyDispatcherState()>
<android.view.WindowManagerInternal: void waitForAllWindowsDrawn(java.lang.Runnable,long)>
<android.content.pm.ContainerEncryptionParams: javax.crypto.SecretKey getEncryptionKey()>
<android.media.MediaRouter.RouteInfo: boolean isSelected()>
<android.view.View: boolean requestFocus(int,android.graphics.Rect)>
<android.mtp.MtpServer: void addStorage(android.mtp.MtpStorage)>
<android.text.style.UnderlineSpan: void writeToParcel(android.os.Parcel,int)>
<android.widget.AbsListView: void smoothScrollToPositionFromTop(int,int,int)>
<android.opengl.Matrix: void translateM(float[],int,float,float,float)>
<android.app.Activity: void onPrepareDialog(int,android.app.Dialog)>
<android.view.ViewGroup: int getLayoutMode()>
<com.android.internal.statusbar.IStatusBar: void setImeWindowStatus(android.os.IBinder,int,int,boolean)>
<android.telephony.PhoneNumberUtils: boolean isEmergencyNumber(long,java.lang.String,java.lang.String)>
<android.view.ViewRootImpl: void requestTransparentRegion(android.view.View)>
<android.text.method.TextKeyListener: android.text.method.TextKeyListener getInstance(boolean,android.text.method.TextKeyListener.Capitalize)>
<android.app.Activity: void onResume()>
<android.telephony.TelephonyManager: java.lang.String getMsisdn()>
<android.location.Criteria: void <init>(android.location.Criteria)>
<com.android.internal.widget.EditableInputConnection: boolean commitCorrection(android.view.inputmethod.CorrectionInfo)>
<android.hardware.location.GeofenceHardwareImpl: boolean resumeGeofence(int,int,int)>
<android.opengl.GLES30: void glUniformBlockBinding(int,int,int)>
<android.hardware.ISerialManager: android.os.ParcelFileDescriptor openSerialPort(java.lang.String)>
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: int getServiceType()>
<android.media.tv.TvInputService.Session: boolean onSetSurface(android.view.Surface)>
<android.hardware.camera2.utils.LongParcelable: void <init>(long)>
<android.renderscript.ProgramStore: boolean isColorMaskGreenEnabled()>
<com.android.internal.net.VpnProfile: void <init>(java.lang.String)>
<com.android.internal.widget.multiwaveview.PointCloud.GlowManager: float getY()>
<android.os.Bundle: char getChar(java.lang.String,char)>
<android.hardware.camera2.legacy.RequestThreadManager.FpsCounter: void countFrame()>
<com.android.internal.os.ProcessCpuTracker: java.lang.String printCurrentLoad()>
<android.telecom.Connection: android.telecom.DisconnectCause getDisconnectCause()>
<android.opengl.GLSurfaceView: boolean getPreserveEGLContextOnPause()>
<android.net.IpConfiguration: void setStaticIpConfiguration(android.net.StaticIpConfiguration)>
<android.view.animation.AnimationUtils: android.view.animation.LayoutAnimationController loadLayoutAnimation(android.content.Context,int)>
<android.telephony.TelephonyManager: boolean iccCloseLogicalChannel(int)>
<android.app.ActivityManager.TaskDescription: void <init>(java.lang.String,android.graphics.Bitmap)>
<android.location.LocationManager: void requestLocationUpdates(java.lang.String,long,float,android.location.LocationListener,android.os.Looper)>
<android.view.inputmethod.InputMethodManager: boolean isActive()>
<android.app.backup.BackupDataInput: void skipEntityData()>
<android.security.KeyStore: boolean contains(java.lang.String,int)>
<com.google.android.util.AbstractMessageParser.TrieNode: com.google.android.util.AbstractMessageParser.TrieNode getOrCreateChild(char)>
<android.renderscript.Float2: android.renderscript.Float2 add(android.renderscript.Float2,android.renderscript.Float2)>
<android.widget.EditText: void setEllipsize(android.text.TextUtils.TruncateAt)>
<android.graphics.NinePatch: void <init>(android.graphics.Bitmap,byte[],java.lang.String)>
<android.media.MediaDrm: void finalize()>
<android.text.InputFilter.LengthFilter: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>
<android.graphics.drawable.VectorDrawable: void setColorFilter(android.graphics.ColorFilter)>
<android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>
<android.text.Layout: void drawText(android.graphics.Canvas,int,int)>
<android.net.ConnectivityManager: java.lang.String getMobileRedirectedProvisioningUrl()>
<android.media.MediaTimeProvider: void notifyAt(long,android.media.MediaTimeProvider.OnMediaTimeListener)>
<android.content.res.CompatibilityInfo: boolean isScalingRequired()>
<android.app.trust.ITrustManager: void reportEnabledTrustAgentsChanged(int)>
<android.os.PerformanceCollector.PerformanceResultsWriter: void writeEndSnapshot(android.os.Bundle)>
<android.app.Activity: void onEnterAnimationComplete()>
<android.content.Entity: void addSubValue(android.net.Uri,android.content.ContentValues)>
<android.content.res.Resources: android.content.res.AssetFileDescriptor openRawResourceFd(int)>
<android.os.IServiceManager: java.lang.String[] listServices()>
<android.view.OrientationListener: void onAccuracyChanged(int,int)>
<android.provider.Downloads.Impl: boolean isStatusServerError(int)>
<android.filterfw.core.ShaderProgram: void setMaximumTileSize(int)>
<android.filterpacks.videosink.MediaEncoderFilter: boolean skipFrameAndModifyTimestamp(long)>
<android.filterpacks.imageproc.ToPackedGrayFilter: void <init>(java.lang.String)>
<android.text.BoringLayout: int getEllipsizedWidth()>
<android.util.JsonReader: void beginArray()>
<android.widget.FrameLayout: void jumpDrawablesToCurrentState()>
<android.widget.TextClock: void setTimeZone(java.lang.String)>
<android.opengl.GLES11: void glPointParameterxv(int,java.nio.IntBuffer)>
<android.content.ContextWrapper: android.content.Context createDisplayContext(android.view.Display)>
<android.util.Range: boolean equals(java.lang.Object)>
<android.renderscript.FieldPacker: void addI16(android.renderscript.Short2)>
<android.media.SubtitleController: void hide()>
<android.app.admin.DeviceAdminInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)>
<android.media.tv.TvContract.Channels: java.lang.String getVideoResolution(java.lang.String)>
<android.media.JetPlayer: void finalize()>
<android.widget.Space: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.internal.app.WindowDecorActionBar.TabImpl: android.app.ActionBar.Tab setContentDescription(int)>
<android.app.admin.DevicePolicyManager: boolean switchUser(android.content.ComponentName,android.os.UserHandle)>
<android.service.dreams.Sandman: void startDreamByUserRequest(android.content.Context)>
<android.bluetooth.le.AdvertiseSettings: boolean isConnectable()>
<com.android.internal.widget.PasswordEntryKeyboard: boolean isShifted()>
<com.android.internal.app.WindowDecorActionBar: void removeOnMenuVisibilityListener(android.app.ActionBar.OnMenuVisibilityListener)>
<android.content.pm.UserInfo: void <init>(android.content.pm.UserInfo)>
<android.net.wifi.WpsResult: void <init>(android.net.wifi.WpsResult.Status)>
<android.preference.PreferenceActivity: void switchToHeader(java.lang.String,android.os.Bundle)>
<android.content.Intent: java.lang.String normalizeMimeType(java.lang.String)>
<android.opengl.GLES20: void glGetShaderiv(int,int,java.nio.IntBuffer)>
<android.widget.NumberPicker: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<android.net.http.AndroidHttpClientConnection: int getRemotePort()>
<android.database.CursorWindowAllocationException: void <init>(java.lang.String)>
<android.media.MediaTimeProvider.OnMediaTimeListener: void onSeek(long)>
<android.renderscript.Sampler: android.renderscript.Sampler.Value getWrapS()>
<android.hardware.Camera: void unlock()>
<android.service.media.IMediaBrowserService: void removeSubscription(java.lang.String,android.service.media.IMediaBrowserServiceCallbacks)>
<android.app.ActivityManagerProxy: void setLockScreenShown(boolean)>
<android.media.SRTTrack: void onData(android.media.SubtitleData)>
<android.util.SparseArray: void removeAtRange(int,int)>
<android.media.session.MediaSession: void <init>(android.content.Context,java.lang.String,int)>
<android.bluetooth.IBluetoothInputDevice: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.media.audiopolicy.AudioPolicy: int getStatus()>
<android.nfc.Tag: android.os.Bundle getTechExtras(int)>
<android.view.ViewDebug.HierarchyHandler: void dumpViewHierarchyWithProperties(java.io.BufferedWriter,int)>
<android.app.IActivityManager: android.content.IIntentSender getIntentSender(int,java.lang.String,android.os.IBinder,java.lang.String,int,android.content.Intent[],java.lang.String[],int,android.os.Bundle,int)>
<android.view.animation.LayoutAnimationController: int getTransformedIndex(android.view.animation.LayoutAnimationController.AnimationParameters)>
<android.app.backup.FullBackupAgent: void onBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>
<android.widget.TextView: void <init>(android.content.Context)>
<android.bluetooth.BluetoothAvrcpController: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.drm.DrmErrorEvent: void <init>(int,int,java.lang.String)>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.lang.Object[])>
<android.widget.AdapterView: void setFocusable(boolean)>
<android.view.ViewStub: void <init>(android.content.Context,android.util.AttributeSet)>
<android.content.PeriodicSync: void <init>(android.content.PeriodicSync)>
<android.view.ViewGroup: void setAddStatesFromChildren(boolean)>
<android.widget.ExpandableListView: void setSelectedGroup(int)>
<android.bluetooth.BluetoothGattService: boolean addService(android.bluetooth.BluetoothGattService)>
<android.os.Process: int getThreadGroupLeader(int)>
<android.content.ContentProvider: android.content.res.AssetFileDescriptor openTypedAssetFile(android.net.Uri,java.lang.String,android.os.Bundle,android.os.CancellationSignal)>
<android.media.projection.MediaProjectionInfo: boolean equals(java.lang.Object)>
<android.app.Instrumentation.ActivityResult: void <init>(int,android.content.Intent)>
<android.telephony.CellInfoGsm: void <init>(android.telephony.CellInfoGsm)>
<android.printservice.PrintService: void onDisconnected()>
<com.android.internal.app.MediaRouteChooserDialog: int getRouteTypes()>
<com.android.internal.util.TypedProperties: byte getByte(java.lang.String,byte)>
<android.app.DialogFragment: void onAttach(android.app.Activity)>
<android.widget.RadioButton: void <init>(android.content.Context)>
<android.view.inputmethod.InputConnection: java.lang.CharSequence getTextBeforeCursor(int,int)>
<android.content.Context: java.io.File[] getExternalMediaDirs()>
<android.renderscript.FieldPacker: android.renderscript.Int2 subInt2()>
<android.media.audiofx.Virtualizer: void setProperties(android.media.audiofx.Virtualizer.Settings)>
<android.media.MediaPlayer.OnCompletionListener: void onCompletion(android.media.MediaPlayer)>
<android.animation.ValueAnimator: long getFrameDelay()>
<com.android.internal.app.MediaRouteControllerDialog: void setVolumeControlEnabled(boolean)>
<android.opengl.EGL14: boolean eglBindTexImage(android.opengl.EGLDisplay,android.opengl.EGLSurface,int)>
<android.webkit.WebViewProvider: boolean canZoomOut()>
<android.app.AppOpsManager.OpEntry: void writeToParcel(android.os.Parcel,int)>
<android.view.WindowInsets: java.lang.String toString()>
<android.widget.FrameLayout: void setForegroundGravity(int)>
<android.view.InputFilter: void <init>(android.os.Looper)>
<android.content.pm.ActivityInfo: void dump(android.util.Printer,java.lang.String)>
<android.filterpacks.imageproc.FlipFilter: void setupPorts()>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo getCollectionItemInfo()>
<android.telecom.PhoneAccountHandle: void writeToParcel(android.os.Parcel,int)>
<android.widget.HorizontalScrollView: boolean performAccessibilityAction(int,android.os.Bundle)>
<android.app.Activity: void onTrimMemory(int)>
<android.media.AudioService: void adjustMasterVolume(int,int,java.lang.String)>
<com.android.internal.widget.ExploreByTouchHelper: int getVirtualViewAt(float,float)>
<com.android.internal.telephony.GsmAlphabet: java.lang.String gsm7BitPackedToString(byte[],int,int)>
<android.graphics.Atlas.SlicePolicy.SplitDecision: boolean splitHorizontal(int,int,int,int)>
<com.android.internal.view.menu.ListMenuPresenter: void initForMenu(android.content.Context,com.android.internal.view.menu.MenuBuilder)>
<android.database.sqlite.SQLiteGlobal: int getDefaultPageSize()>
<android.hardware.hdmi.IHdmiControlService: android.hardware.hdmi.HdmiDeviceInfo getActiveSource()>
<android.media.MediaRecorder: void setOutputFile(java.lang.String)>
<android.media.AudioService: void setBluetoothScoOn(boolean)>
<android.media.MediaCodec: java.nio.ByteBuffer getInputBuffer(int)>
<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getIsimImpi()>
<android.opengl.GLES20: void glVertexAttrib3fv(int,float[],int)>
<com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm7BitPacked(java.lang.String,int,int)>
<android.text.style.TtsSpan.MeasureBuilder: android.text.style.TtsSpan.MeasureBuilder setIntegerPart(java.lang.String)>
<android.widget.ListView: android.graphics.drawable.Drawable getDivider()>
<android.text.style.SuperscriptSpan: void updateDrawState(android.text.TextPaint)>
<android.view.View.AccessibilityDelegate: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getConstantHeight()>
<android.content.ContentResolver: boolean isSyncPendingAsUser(android.accounts.Account,java.lang.String,int)>
<com.android.internal.telephony.GsmAlphabet: char gsmToChar(int)>
<android.net.wifi.WifiScanner.ActionListener: void onSuccess()>
<com.android.internal.app.ProcessStats: void computeProcessData(com.android.internal.app.ProcessStats.ProcessState,com.android.internal.app.ProcessStats.ProcessDataCollection,long)>
<android.view.MotionEvent.PointerCoords: void setAxisValue(int,float)>
<android.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)>
<android.hardware.camera2.utils.ParamsUtils: void convertRectF(android.graphics.Rect,android.graphics.RectF)>
<android.widget.BaseExpandableListAdapter: long getCombinedGroupId(long)>
<android.content.Loader: void onAbandon()>
<android.appwidget.AppWidgetProvider: void onDeleted(android.content.Context,int[])>
<android.renderscript.Program.BaseProgramBuilder: android.renderscript.Program.BaseProgramBuilder addConstant(android.renderscript.Type)>
<android.media.effect.effects.DocumentaryEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>
<android.webkit.WebSettings: void setSupportMultipleWindows(boolean)>
<android.net.TrafficStats: void incrementOperationCount(int)>
<android.view.textservice.SuggestionsInfo: int getSequence()>
<android.content.Loader: void startLoading()>
<android.app.Presentation: void onStop()>
<android.media.MediaPlayer: void reset()>
<android.view.InputEvent: void setTainted(boolean)>
<android.app.AppOpsManager.PackageOps: int getUid()>
<android.media.MediaCodec: java.nio.ByteBuffer[] getOutputBuffers()>
<android.webkit.WebSettings: boolean getDatabaseEnabled()>
<android.net.INetworkScoreService: void disableScoring()>
<android.renderscript.Int3: android.renderscript.Int3 add(android.renderscript.Int3,int)>
<com.google.android.gles_jni.EGLImpl: boolean eglChooseConfig(javax.microedition.khronos.egl.EGLDisplay,int[],javax.microedition.khronos.egl.EGLConfig[],int,int[])>
<android.telecom.PhoneAccount: int getCapabilities()>
<android.media.session.MediaController: android.app.PendingIntent getSessionActivity()>
<android.service.notification.StatusBarNotification: void <init>(java.lang.String,java.lang.String,int,java.lang.String,int,int,int,android.app.Notification,android.os.UserHandle,long)>
<android.graphics.Outline: void setRoundRect(int,int,int,int,float)>
<android.print.IPrintSpooler: void setPrintJobState(android.print.PrintJobId,int,java.lang.String,android.print.IPrintSpoolerCallbacks,int)>
<android.media.RemoteController.OnClientUpdateListener: void onClientPlaybackStateUpdate(int,long,long,float)>
<android.widget.TwoLineListItem: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.widget.DatePicker.DatePickerDelegate: android.os.Parcelable onSaveInstanceState(android.os.Parcelable)>
<android.accessibilityservice.IAccessibilityServiceConnection: boolean computeClickPointInScreen(int,long,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)>
<android.bluetooth.BluetoothHeadset: boolean acceptIncomingConnect(android.bluetooth.BluetoothDevice)>
<android.view.WindowAnimationFrameStats: java.lang.String toString()>
<android.app.Instrumentation: void callActivityOnStart(android.app.Activity)>
<android.app.FragmentManagerImpl: void addFragment(android.app.Fragment,boolean)>
<android.media.session.MediaController.Callback: void onQueueChanged(java.util.List)>
<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>
<android.view.GraphicBuffer: android.graphics.Canvas lockCanvas()>
<android.database.sqlite.SQLiteConnection: long executeForLong(java.lang.String,java.lang.Object[],android.os.CancellationSignal)>
<android.media.audiofx.LoudnessEnhancer: android.media.audiofx.LoudnessEnhancer.Settings getProperties()>
<android.print.PrintJobInfo: void setCancelling(boolean)>
<android.net.Uri: java.lang.String getEncodedSchemeSpecificPart()>
<android.webkit.WebResourceResponse: void setResponseHeaders(java.util.Map)>
<android.app.ActionBar.OnMenuVisibilityListener: void onMenuVisibilityChanged(boolean)>
<com.android.internal.os.BatteryStatsImpl: long getScreenBrightnessTime(int,long,int)>
<android.bluetooth.IBluetoothHeadset: void phoneStateChanged(int,int,int,java.lang.String,int)>
<android.content.ContentProviderClient: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)>
<android.accounts.IAccountManager: boolean removeSharedAccountAsUser(android.accounts.Account,int)>
<android.view.inputmethod.InputMethodSession: void updateExtractedText(int,android.view.inputmethod.ExtractedText)>
<android.widget.ArrayAdapter: int getPosition(java.lang.Object)>
<android.renderscript.Allocation: void finalize()>
<android.graphics.drawable.DrawableContainer: void setTintMode(android.graphics.PorterDuff.Mode)>
<android.bluetooth.BluetoothGattDescriptor: int getInstanceId()>
<com.android.internal.os.BatteryStatsImpl.SamplingTimer: void onTimeStopped(long,long,long)>
<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>
<android.widget.TextClock: void setFormat12Hour(java.lang.CharSequence)>
<android.renderscript.ScriptIntrinsicColorMatrix: android.renderscript.ScriptIntrinsicColorMatrix create(android.renderscript.RenderScript)>
<android.app.Presentation: void onDisplayChanged()>
<android.view.animation.Animation: void startNow()>
<android.view.Window.Callback: void onActionModeStarted(android.view.ActionMode)>
<android.view.Choreographer.FrameCallback: void doFrame(long)>
<android.app.admin.DeviceAdminInfo: android.content.ComponentName getComponent()>
<android.net.LinkQualityInfo: void setDataSampleDuration(int)>
<android.graphics.Region: android.graphics.Region obtain()>
<android.webkit.MimeTypeMap: boolean hasExtension(java.lang.String)>
<android.opengl.EGL14: boolean eglChooseConfig(android.opengl.EGLDisplay,int[],int,android.opengl.EGLConfig[],int,int,int[],int)>
<com.android.internal.util.MemInfoReader: long getSwapTotalSizeKb()>
<android.os.SystemProperties: void addChangeCallback(java.lang.Runnable)>
<android.transition.Scene: android.transition.Scene getSceneForLayout(android.view.ViewGroup,int,android.content.Context)>
<android.net.http.HttpAuthHeader: java.lang.String getRealm()>
<android.telecom.CameraCapabilities: boolean isZoomSupported()>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getExitFadeDuration()>
<android.renderscript.ScriptIntrinsicConvolve3x3: android.renderscript.Script.KernelID getKernelID()>
<android.widget.ListView: void setDivider(android.graphics.drawable.Drawable)>
<android.view.MotionEvent.PointerProperties: boolean equals(java.lang.Object)>
<android.media.tv.TvView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setOnActionExpandListener(android.view.MenuItem.OnActionExpandListener)>
<android.media.audiofx.AudioEffect: boolean isError(int)>
<android.app.backup.BackupTransport: java.lang.String currentDestinationString()>
<android.os.storage.StorageManager: android.os.storage.StorageVolume getPrimaryVolume()>
<android.os.BatteryStats: void dumpLocked(android.content.Context,java.io.PrintWriter,java.lang.String,int,int)>
<android.net.NetworkStateTracker: void captivePortalCheckCompleted(boolean)>
<android.mtp.MtpDevice: long getStorageId(int)>
<android.filterpacks.base.OutputStreamTarget: void setupPorts()>
<android.net.NetworkCapabilities: void setLinkDownstreamBandwidthKbps(int)>
<android.widget.NumberPicker: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>
<com.google.android.util.AbstractMessageParser.Photo: java.lang.String getRssUrl(java.lang.String)>
<com.android.internal.widget.ResolverDrawerLayout: android.os.Parcelable onSaveInstanceState()>
<android.net.NetworkStatsHistory: int getIndexBefore(long)>
<android.widget.RemoteViewsAdapter: boolean hasStableIds()>
<android.accounts.OperationCanceledException: void <init>(java.lang.String)>
<android.net.NetworkStateTracker: void setNetId(int)>
<android.database.MatrixCursor: float getFloat(int)>
<com.android.internal.util.JournaledFile: java.io.File chooseForWrite()>
<android.text.format.DateFormat: java.lang.CharSequence format(java.lang.CharSequence,java.util.Calendar)>
<android.webkit.WebView: void onStartTemporaryDetach()>
<android.net.wifi.p2p.WifiP2pManager: android.os.Messenger getMessenger()>
<android.preference.EditTextPreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.widget.TextView: void setTextKeepState(java.lang.CharSequence)>
<android.animation.Animator: boolean isRunning()>
<android.widget.ImageSwitcher: void setImageResource(int)>
<android.app.IActivityManager: android.app.ActivityOptions getActivityOptions(android.os.IBinder)>
<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothGatt connectGatt(android.content.Context,boolean,android.bluetooth.BluetoothGattCallback,int)>
<android.content.pm.UserInfo: boolean isRestricted()>
<android.service.notification.ZenModeConfig: android.service.notification.Condition toTimeCondition(long,int)>
<android.view.accessibility.CaptioningManager.CaptionStyle: android.graphics.Typeface getTypeface()>
<android.view.Gravity: int getAbsoluteGravity(int,int)>
<android.hardware.hdmi.IHdmiControlService: void sendMhlVendorCommand(int,int,int,byte[])>
<android.content.ContentResolver: android.content.SyncStatusInfo getSyncStatusAsUser(android.accounts.Account,java.lang.String,int)>
<com.android.internal.app.ToolbarActionBar: void setHomeAsUpIndicator(android.graphics.drawable.Drawable)>
<android.widget.GridLayout.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>
<com.android.internal.widget.SwipeDismissLayout.OnSwipeProgressChangedListener: void onSwipeProgressChanged(com.android.internal.widget.SwipeDismissLayout,float,float)>
<android.renderscript.Element: android.renderscript.Element PROGRAM_FRAGMENT(android.renderscript.RenderScript)>
<android.hardware.input.KeyboardLayout: java.lang.String toString()>
<android.view.inputmethod.InputMethodManager: void showSoftInputUnchecked(int,android.os.ResultReceiver)>
<com.android.internal.inputmethod.InputMethodUtils.InputMethodSettings: java.lang.String getSelectedInputMethod()>
<android.app.IProcessObserver: void onForegroundActivitiesChanged(int,int,boolean)>
<android.webkit.WebViewFactory: android.content.pm.PackageInfo getLoadedPackageInfo()>
<android.os.MessageQueue: void addIdleHandler(android.os.MessageQueue.IdleHandler)>
<android.widget.ActivityChooserView: void setInitialActivityCount(int)>
<android.widget.PopupWindow: int getAnimationStyle()>
<android.media.SoundPool.SoundPoolDelegate: void autoPause()>
<android.content.ClipDescription: java.lang.String toString()>
<com.android.ims.internal.IImsUt: int transact(android.os.Bundle)>
<android.app.SearchDialog: void onRestoreInstanceState(android.os.Bundle)>
<android.content.pm.Signature: char[] toChars(char[],int[])>
<android.widget.GridLayout.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<android.view.WindowManager.LayoutParams: void writeToParcel(android.os.Parcel,int)>
<android.content.pm.LauncherApps: void registerCallback(android.content.pm.LauncherApps.Callback,android.os.Handler)>
<android.text.InputFilter.AllCaps: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>
<android.widget.TextView: boolean onKeyDown(int,android.view.KeyEvent)>
<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>
<android.animation.AnimatorSet.Builder: android.animation.AnimatorSet.Builder before(android.animation.Animator)>
<android.hardware.CameraInfo: void readFromParcel(android.os.Parcel)>
<android.widget.AbsoluteLayout: void onLayout(boolean,int,int,int,int)>
<android.view.inputmethod.InputMethodManager: void setAdditionalInputMethodSubtypes(java.lang.String,android.view.inputmethod.InputMethodSubtype[])>
<android.view.View: void captureTransitioningViews(java.util.List)>
<android.content.pm.PackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>
<com.android.internal.view.menu.MenuPopupHelper: boolean onKey(android.view.View,int,android.view.KeyEvent)>
<android.content.RestrictionEntry: boolean getSelectedState()>
<android.os.FileBridge.FileBridgeOutputStream: void write(int)>
<android.webkit.WebSettings: boolean enableSmoothTransition()>
<android.app.ActivityManagerProxy: int getFrontActivityScreenCompatMode()>
<android.hardware.Sensor: boolean isWakeUpSensor()>
<android.content.ContentProviderClient: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.CancellationSignal)>
<com.android.internal.util.State: void enter()>
<android.inputmethodservice.InputMethodService: void onUpdateExtractingViews(android.view.inputmethod.EditorInfo)>
<com.android.internal.location.GpsNetInitiatedHandler: void setSuplEsEnabled(boolean)>
<android.widget.RelativeLayout: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.view.ActionMode: void setTitle(java.lang.CharSequence)>
<android.os.PerformanceCollector: void addMeasurement(java.lang.String,float)>
<com.android.internal.telephony.ISms: void sendMultipartTextForSubscriber(long,java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)>
<android.widget.AbsListView.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>
<android.webkit.WebViewFactoryProvider.Statics: void setWebContentsDebuggingEnabled(boolean)>
<android.widget.FrameLayout: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.android.internal.content.NativeLibraryHelper.Handle: com.android.internal.content.NativeLibraryHelper.Handle create(android.content.pm.PackageParser.PackageLite)>
<android.gesture.GestureOverlayView: void removeAllOnGesturingListeners()>
<android.graphics.Canvas: void drawBitmapMesh(android.graphics.Bitmap,int,int,float[],int,int[],int,android.graphics.Paint)>
<android.webkit.JsResult: void confirm()>
<com.android.internal.widget.multiwaveview.TargetDrawable: void setScaleY(float)>
<com.google.android.util.AbstractMessageParser.Acronym: java.lang.String getValue()>
<android.hardware.camera2.legacy.RequestHolder: int getRequestId()>
<android.graphics.Rect: void <init>(android.graphics.Rect)>
<android.app.Presentation: void onDisplayRemoved()>
<android.app.FragmentTransaction: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)>
<android.util.Base64OutputStream: void <init>(java.io.OutputStream,int,boolean)>
<android.provider.Settings.Global: android.net.Uri getUriFor(java.lang.String)>
<android.view.WindowContentFrameStats: void init(long,long[],long[],long[])>
<android.app.IActivityManager: void clearPendingBackup()>
<android.content.res.TypedArray: int length()>
<android.renderscript.Mesh: android.renderscript.Allocation getVertexAllocation(int)>
<android.animation.ValueAnimator: void addUpdateListener(android.animation.ValueAnimator.AnimatorUpdateListener)>
<android.view.inputmethod.InputConnectionWrapper: java.lang.CharSequence getSelectedText(int)>
<android.net.wifi.ScanResult.InformationElement: void <init>(android.net.wifi.ScanResult.InformationElement)>
<android.renderscript.Int2: int length()>
<com.android.internal.os.InstallerConnection: int execute(java.lang.String)>
<android.widget.QuickContactBadge: void assignContactFromPhone(java.lang.String,boolean,android.os.Bundle)>
<android.view.ViewConfiguration: int getDoubleTapTimeout()>
<android.media.SubtitleData: void <init>(android.os.Parcel)>
<android.app.Activity: android.app.PendingIntent createPendingResult(int,android.content.Intent,int)>
<android.graphics.RectF: void round(android.graphics.Rect)>
<android.bluetooth.BluetoothAudioConfig: int describeContents()>
<android.net.wifi.p2p.WifiP2pGroup: java.lang.String getInterface()>
<android.hardware.camera2.dispatch.BroadcastDispatcher: void <init>(android.hardware.camera2.dispatch.Dispatchable[])>
<android.app.IActivityManager: void setActivityController(android.app.IActivityController)>
<android.renderscript.Int2: void addAt(int,int)>
<android.os.UserHandle: boolean isSameUser(int,int)>
<android.gesture.GestureOverlayView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.graphics.drawable.shapes.ArcShape: void draw(android.graphics.Canvas,android.graphics.Paint)>
<android.content.pm.IPackageInstallerSession: void commit(android.content.IntentSender)>
<android.content.ContentResolver: boolean getMasterSyncAutomatically()>
<android.speech.tts.Voice: java.util.Set getFeatures()>
<android.media.AudioRecord: int getAudioSessionId()>
<android.speech.tts.SynthesisCallback: void error()>
<android.telephony.CellInfoWcdma: void setCellIdentity(android.telephony.CellIdentityWcdma)>
<android.widget.TextClock: java.lang.CharSequence getFormat12Hour()>
<android.text.TextPaint: void <init>(int)>
<android.app.FragmentTransaction: android.app.FragmentTransaction setSharedElement(android.view.View,java.lang.String)>
<android.text.TextUtils: java.lang.CharSequence ellipsize(java.lang.CharSequence,android.text.TextPaint,float,android.text.TextUtils.TruncateAt,boolean,android.text.TextUtils.EllipsizeCallback)>
<android.renderscript.FieldPacker: android.renderscript.Double2 subDouble2()>
<android.app.FragmentTransaction: android.app.FragmentTransaction addSharedElement(android.view.View,java.lang.String)>
<android.widget.VideoView: void start()>
<android.filterpacks.numeric.SinWaveFilter: void open(android.filterfw.core.FilterContext)>
<android.print.PrintJob: boolean isQueued()>
<android.app.backup.BackupTransport: int finishBackup()>
<android.speech.tts.Voice: boolean equals(java.lang.Object)>
<com.android.internal.view.InputConnectionWrapper: boolean clearMetaKeyStates(int)>
<android.text.method.MultiTapKeyListener: void <init>(android.text.method.TextKeyListener.Capitalize,boolean)>
<android.app.ISearchManager: java.util.List getSearchablesInGlobalSearch()>
<android.provider.DocumentsProvider: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String)>
<android.webkit.WebChromeClient: boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult)>
<android.nfc.tech.NfcV: byte[] transceive(byte[])>
<android.renderscript.RSIllegalArgumentException: void <init>(java.lang.String)>
<android.app.Activity: java.lang.CharSequence onCreateDescription()>
<android.gesture.GestureStore: boolean hasChanged()>
<android.graphics.drawable.Drawable: void onBoundsChange(android.graphics.Rect)>
<android.text.method.BaseMovementMethod: boolean leftWord(android.widget.TextView,android.text.Spannable)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean[])>
<com.android.internal.widget.multiwaveview.TargetDrawable: float getPositionX()>
<android.appwidget.AppWidgetManager: android.appwidget.AppWidgetProviderInfo getAppWidgetInfo(int)>
<android.media.audiopolicy.AudioMixingRule.Builder: android.media.audiopolicy.AudioMixingRule build()>
<android.widget.TextView: int getCompoundPaddingStart()>
<android.opengl.EGL14: boolean eglSwapInterval(android.opengl.EGLDisplay,int)>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable mutate()>
<android.content.Context: java.lang.String[] databaseList()>
<android.transition.ChangeImageTransform: android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,long[])>
<android.telecom.Conference: void onDisconnect()>
<android.location.GpsMeasurement: boolean hasCarrierCycles()>
<android.text.style.LocaleSpan: void <init>(android.os.Parcel)>
<android.content.SharedPreferences.Editor: android.content.SharedPreferences.Editor putStringSet(java.lang.String,java.util.Set)>
<android.view.View: int getSystemUiVisibility()>
<android.app.TimePickerDialog: void <init>(android.content.Context,int,android.app.TimePickerDialog.OnTimeSetListener,int,int,boolean)>
<android.os.FileUtils: java.lang.String readTextFile(java.io.File,int,java.lang.String)>
<android.webkit.WebView: void setCertificate(android.net.http.SslCertificate)>
<android.service.voice.AlwaysOnHotwordDetector: android.content.Intent createUnEnrollIntent()>
<android.net.PskKeyManager: java.lang.String chooseClientKeyIdentity(java.lang.String,java.net.Socket)>
<android.filterfw.core.FrameFormat: android.filterfw.core.MutableFrameFormat mutableCopy()>
<android.widget.TableLayout: android.widget.LinearLayout.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.net.MobileLinkQualityInfo: int getLteSignalStrength()>
<android.view.MotionEvent: float getPressure()>
<android.media.Metadata: int firstCustomId()>
<android.view.accessibility.AccessibilityEvent: void initFromParcel(android.os.Parcel)>
<android.filterpacks.imageproc.SimpleImageFilter: android.filterfw.core.Program getNativeProgram(android.filterfw.core.FilterContext)>
<android.widget.TabWidget: void addView(android.view.View)>
<android.filterfw.core.Filter: void transferInputPortFrame(java.lang.String,android.filterfw.core.FilterContext)>
<android.graphics.Movie: android.graphics.Movie decodeFile(java.lang.String)>
<android.net.NetworkAgent: void networkStatus(int)>
<android.graphics.drawable.RotateDrawable: void setPivotY(float)>
<android.opengl.GLES30: void glDeleteSync(long)>
<android.os.AsyncResult: android.os.AsyncResult forMessage(android.os.Message,java.lang.Object,java.lang.Throwable)>
<android.media.ToneGenerator: boolean startTone(int)>
<android.app.Fragment: java.lang.String getTag()>
<android.webkit.WebViewFactoryProvider.Statics: void freeMemoryForTests()>
<android.view.inputmethod.ExtractedText: int describeContents()>
<android.content.AbstractThreadedSyncAdapter: void onSyncCanceled(java.lang.Thread)>
<com.android.internal.widget.LockPatternView.OnPatternListener: void onPatternDetected(java.util.List)>
<android.widget.Toolbar.OnMenuItemClickListener: boolean onMenuItemClick(android.view.MenuItem)>
<android.app.ActivityManagerProxy: boolean killPids(int[],java.lang.String,boolean)>
<android.renderscript.FieldPacker: void addI32(android.renderscript.Int2)>
<android.media.Tokenizer.TokenizerPhase: android.media.Tokenizer.TokenizerPhase start()>
<android.content.pm.PackageParser.Activity: void <init>(android.content.pm.PackageParser.ParseComponentArgs,android.content.pm.ActivityInfo)>
<android.content.pm.Signature: byte[] toByteArray()>
<android.bluetooth.BluetoothGatt: boolean requestConnectionPriority(int)>
<com.android.internal.os.BatteryStatsHelper: byte[] readFully(java.io.FileInputStream,int)>
<android.os.Debug: void resetAllCounts()>
<android.filterfw.core.InputPort: void <init>(android.filterfw.core.Filter,java.lang.String)>
<android.hardware.usb.UsbDevice: android.hardware.usb.UsbConfiguration getConfiguration(int)>
<android.graphics.Paint: float ascent()>
<android.widget.ListView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.widget.AbsoluteLayout: void onMeasure(int,int)>
<android.drm.DrmConvertedStatus: void <init>(int,byte[],int)>
<com.android.internal.util.StateMachine: void logw(java.lang.String)>
<android.os.ParcelFileDescriptor: long seekTo(long)>
<com.android.internal.app.ToolbarActionBar: void removeAllTabs()>
<android.widget.ProgressBar: android.view.animation.Interpolator getInterpolator()>
<android.print.PrinterCapabilitiesInfo.Builder: android.print.PrinterCapabilitiesInfo.Builder addMediaSize(android.print.PrintAttributes.MediaSize,boolean)>
<android.widget.PopupWindow: void dismiss()>
<android.filterfw.core.KeyValueMap: int getInt(java.lang.String)>
<android.hardware.camera2.params.MeteringRectangle: int hashCode()>
<android.text.AutoText: int getSize(android.view.View)>
<android.net.TrafficStats: void clearThreadStatsUid()>
<android.inputmethodservice.InputMethodService: void onExtractedDeleteText(int,int)>
<android.net.wifi.BatchedScanResult: java.lang.String toString()>
<android.text.style.URLSpan: java.lang.String getURL()>
<android.inputmethodservice.Keyboard: int[] getNearestKeys(int,int)>
<com.android.internal.app.IBatteryStats: void noteWifiStopped(android.os.WorkSource)>
<android.telephony.TelephonyManager: boolean supplyPuk(java.lang.String,java.lang.String)>
<android.telephony.TelephonyManager: int getCallState()>
<android.print.PrintJobInfo: android.print.PageRange[] getPages()>
<android.os.Debug: int getThreadExternalAllocSize()>
<android.media.AudioService: void playSoundEffectVolume(int,float)>
<android.renderscript.Float2: void mul(android.renderscript.Float2)>
<android.telecom.RemoteConnection.VideoProvider.Listener: void onHandleCallSessionEvent(android.telecom.RemoteConnection.VideoProvider,int)>
<android.os.storage.IMountServiceListener: void onUsbMassStorageConnectionChanged(boolean)>
<android.app.backup.BackupManager: android.app.backup.RestoreSession beginRestoreSession()>
<com.android.internal.os.BatteryStatsImpl: void finishIteratingOldHistoryLocked()>
<android.net.http.RequestHandle: java.lang.String getMethod()>
<com.android.internal.widget.multiwaveview.TargetDrawable: int getHeight()>
<android.media.RingtoneManager: int inferStreamType()>
<android.bluetooth.BluetoothGattService: android.bluetooth.BluetoothGattCharacteristic getCharacteristic(java.util.UUID)>
<android.content.pm.PackageParser: boolean isAvailable(android.content.pm.PackageUserState)>
<com.android.internal.telephony.CallerInfo: boolean isVoiceMailNumber()>
<android.location.GpsMeasurementsEvent.Listener: void onGpsMeasurementsReceived(android.location.GpsMeasurementsEvent)>
<com.android.internal.view.BaseSurfaceHolder: void removeCallback(android.view.SurfaceHolder.Callback)>
<android.view.View: void initializeScrollbarsInternal(android.content.res.TypedArray)>
<android.net.http.RequestQueue.ConnectionManager: android.net.http.Connection getConnection(android.content.Context,org.apache.http.HttpHost)>
<android.hardware.camera2.legacy.LegacyCameraDevice: int submitRequest(android.hardware.camera2.CaptureRequest,boolean,android.hardware.camera2.utils.LongParcelable)>
<android.media.SubtitleTrack.RenderingWidget.OnChangedListener: void onChanged(android.media.SubtitleTrack.RenderingWidget)>
<android.inputmethodservice.KeyboardView: boolean onLongPress(android.inputmethodservice.Keyboard.Key)>
<android.net.nsd.NsdManager.DiscoveryListener: void onDiscoveryStopped(java.lang.String)>
<android.filterfw.core.SerializedFrame: int[] getInts()>
<android.filterfw.core.Filter: void setInputFrame(java.lang.String,android.filterfw.core.Frame)>
<android.content.pm.ComponentInfo: int getBannerResource()>
<android.content.pm.ContainerEncryptionParams: java.security.spec.AlgorithmParameterSpec getEncryptionSpec()>
<android.view.ViewGroup: android.view.View findViewTraversal(int)>
<android.net.wifi.BatchedScanSettings: int describeContents()>
<com.android.internal.widget.SlidingTab: void setLeftHintText(int)>
<android.os.Handler: void <init>(boolean)>
<android.graphics.PixelXorXfermode: void <init>(int)>
<android.net.IpConfiguration: void writeToParcel(android.os.Parcel,int)>
<android.hardware.camera2.legacy.ParameterUtils: android.hardware.camera2.legacy.ParameterUtils.WeightedRectangle convertCameraAreaToActiveArrayRectangle(android.graphics.Rect,android.hardware.camera2.legacy.ParameterUtils.ZoomData,android.hardware.Camera.Area)>
<android.speech.RecognitionService.Callback: void error(int)>
<android.provider.Browser: void saveBookmark(android.content.Context,java.lang.String,java.lang.String)>
<android.webkit.CacheManager: java.io.File getCacheFileBaseDir()>
<android.media.audiofx.EnvironmentalReverb: void setParameterListener(android.media.audiofx.EnvironmentalReverb.OnParameterChangeListener)>
<android.nfc.tech.NfcBarcode: int getType()>
<android.opengl.GLES30: void glClearBufferfv(int,int,java.nio.FloatBuffer)>
<android.filterfw.core.SimpleScheduler: android.filterfw.core.Filter scheduleNextNode()>
<android.widget.RemoteViewsListAdapter: int getCount()>
<android.bluetooth.IBluetoothGattCallback: void onExecuteWrite(java.lang.String,int)>
<android.text.style.SuggestionSpan: void <init>(android.content.Context,java.util.Locale,java.lang.String[],int,java.lang.Class)>
<android.net.ConnectivityManager: android.net.NetworkInfo getProvisioningOrActiveNetworkInfo()>
<android.app.admin.DeviceAdminInfo: void readPoliciesFromXml(org.xmlpull.v1.XmlPullParser)>
<android.renderscript.Double4: void div(android.renderscript.Double4)>
<android.net.NetworkStateTracker: void privateDnsRouteSet(boolean)>
<android.widget.CheckedTextView: void internalSetPadding(int,int,int,int)>
<android.app.Notification.WearableExtender: int getContentAction()>
<android.content.Context: void setTheme(int)>
<com.android.internal.telephony.IPhoneStateListener: void onDataConnectionRealTimeInfoChanged(android.telephony.DataConnectionRealTimeInfo)>
<android.content.ContentResolver: android.os.ParcelFileDescriptor openFileDescriptor(android.net.Uri,java.lang.String)>
<android.bluetooth.BluetoothGatt: void abortReliableWrite(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothMap: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.app.DialogFragment: void onDetach()>
<android.os.Debug: int getBinderProxyObjectCount()>
<android.view.View: void onHoverChanged(boolean)>
<android.widget.HeaderViewListAdapter: boolean isEmpty()>
<android.media.Ringtone: void stop()>
<android.speech.tts.TextToSpeechService: int onLoadLanguage(java.lang.String,java.lang.String,java.lang.String)>
<android.hardware.display.VirtualDisplay: android.view.Surface getSurface()>
<android.telecom.PhoneAccount.Builder: android.telecom.PhoneAccount.Builder setAddress(android.net.Uri)>
<android.webkit.WebView: void setHorizontalScrollbarOverlay(boolean)>
<android.security.IKeyChainService: boolean containsCaAlias(java.lang.String)>
<android.net.Uri.Builder: android.net.Uri.Builder encodedOpaquePart(java.lang.String)>
<android.media.IAudioService: boolean isCameraSoundForced()>
<android.provider.SyncStateContract.Helpers: void update(android.content.ContentProviderClient,android.net.Uri,byte[])>
<android.database.AbstractCursor: void onDeactivateOrClose()>
<android.os.Bundle: void putFloatArray(java.lang.String,float[])>
<android.media.Ringtone: void setAudioAttributes(android.media.AudioAttributes)>
<android.media.session.ParcelableVolumeInfo: void writeToParcel(android.os.Parcel,int)>
<android.filterpacks.videoproc.BackDropperFilter: void relearn()>
<android.content.SyncRequest.Builder: android.content.SyncRequest.Builder setExpedited(boolean)>
<android.widget.MediaController: void <init>(android.content.Context,android.util.AttributeSet)>
<android.graphics.Bitmap: int getHeight()>
<android.app.ActivityManager: boolean switchUser(int)>
<android.view.animation.AnticipateOvershootInterpolator: void <init>(android.content.res.Resources,android.content.res.Resources.Theme,android.util.AttributeSet)>
<android.preference.Preference: boolean persistLong(long)>
<android.drm.DrmManagerClient: boolean canHandle(java.lang.String,java.lang.String)>
<android.filterpacks.imageproc.SimpleImageFilter: android.filterfw.core.Program getShaderProgram(android.filterfw.core.FilterContext)>
<android.os.RemoteCallback: boolean equals(java.lang.Object)>
<com.android.internal.view.IInputMethodSession: void finishInput()>
<android.media.MediaPlayer: boolean isLooping()>
<android.hardware.camera2.params.RggbChannelVector: float getBlue()>
<android.media.audiofx.Virtualizer: short getRoundedStrength()>
<android.widget.TextView: void setHorizontallyScrolling(boolean)>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: java.lang.String getDnsQueryName()>
<com.android.internal.widget.LockPatternUtils: boolean checkPattern(java.util.List)>
<android.graphics.drawable.NinePatchDrawable: void setTargetDensity(int)>
<android.net.nsd.NsdManager.ResolveListener: void onServiceResolved(android.net.nsd.NsdServiceInfo)>
<android.net.MobileLinkQualityInfo: void writeToParcel(android.os.Parcel,int)>
<android.media.MediaFocusControl: void postReevaluateRemote()>
<com.android.internal.widget.SubtitleView: void setBackgroundColor(int)>
<android.net.wifi.WifiManager: java.util.List getConfiguredNetworks()>
<android.hardware.Camera.Parameters: java.util.List getSupportedJpegThumbnailSizes()>
<android.widget.SlidingDrawer: void animateOpen()>
<android.content.SearchRecentSuggestionsProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<android.view.PointerIcon: android.view.PointerIcon loadCustomIcon(android.content.res.Resources,int)>
<com.android.internal.util.StateMachine: android.os.Message obtainMessage(int)>
<android.widget.AutoCompleteTextView: void setDropDownAnchor(int)>
<android.hardware.display.DisplayManagerGlobal: void unregisterDisplayListener(android.hardware.display.DisplayManager.DisplayListener)>
<android.bluetooth.BluetoothHeadset: boolean disconnectAudio()>
<android.bluetooth.BluetoothPbap.ServiceListener: void onServiceDisconnected()>
<android.net.ConnectivityManager: android.net.NetworkQuotaInfo getActiveNetworkQuotaInfo()>
<android.graphics.drawable.InsetDrawable: android.graphics.drawable.Drawable getDrawable()>
<android.media.SoundPool: void setVolume(int,float,float)>
<android.app.Notification.Action: android.app.RemoteInput[] getRemoteInputs()>
<com.android.internal.widget.SizeAdaptiveLayout.LayoutParams: void <init>(int,int)>
<android.media.TextTrackCue: boolean equals(java.lang.Object)>
<android.media.tv.ITvInputManager: void setCaptionEnabled(android.os.IBinder,boolean,int)>
<android.graphics.drawable.ScaleDrawable: int getOpacity()>
<android.security.IKeystoreService: byte[] get_pubkey(java.lang.String)>
<com.android.internal.telephony.CallerInfo: java.lang.String getCurrentCountryIso(android.content.Context)>
<android.os.Debug: void resetThreadExternalAllocSize()>
<android.widget.ArrayAdapter: void add(java.lang.Object)>
<com.android.internal.view.StandaloneActionMode: boolean onMenuItemSelected(com.android.internal.view.menu.MenuBuilder,android.view.MenuItem)>
<android.webkit.WebSettings: void setDatabaseEnabled(boolean)>
<android.filterpacks.imageproc.NegativeFilter: void initProgram(android.filterfw.core.FilterContext,int)>
<android.print.IPrintManager: android.print.PrintJobInfo getPrintJobInfo(android.print.PrintJobId,int,int)>
<com.android.internal.os.BatteryStatsImpl: long getAwakeTimePlugged()>
<com.android.internal.telephony.IMms: boolean getAutoPersisting()>
<com.android.internal.view.BaseIWindow: void dispatchWallpaperCommand(java.lang.String,int,int,int,android.os.Bundle,boolean)>
<android.database.sqlite.SQLiteProgram: void clearBindings()>
<android.graphics.Outline: void setOval(android.graphics.Rect)>
<android.opengl.GLES31: void glGetTexLevelParameterfv(int,int,int,java.nio.FloatBuffer)>
<android.widget.ArrayAdapter: void setNotifyOnChange(boolean)>
<com.android.internal.os.BatteryStatsImpl: long getWifiOnTime(long,int)>
<android.bluetooth.BluetoothA2dpSink: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.view.Window: android.transition.Transition getSharedElementExitTransition()>
<android.telecom.RemoteConnection.Callback: void onStateChanged(android.telecom.RemoteConnection,int)>
<android.renderscript.FieldPacker: void <init>(int)>
<android.opengl.EGL14: boolean eglInitialize(android.opengl.EGLDisplay,int[],int,int[],int)>
<android.text.style.RelativeSizeSpan: float getSizeChange()>
<android.text.style.URLSpan: int describeContents()>
<android.app.Dialog: boolean dispatchTrackballEvent(android.view.MotionEvent)>
<com.android.internal.statusbar.StatusBarIconList: void <init>(android.os.Parcel)>
<android.widget.AbsListView: boolean isVerticalScrollBarHidden()>
<android.net.StaticIpConfiguration: void writeToParcel(android.os.Parcel,int)>
<android.content.Loader: void onForceLoad()>
<android.app.Fragment: void onActivityResult(int,int,android.content.Intent)>
<android.graphics.Path: void reset()>
<android.graphics.drawable.GradientDrawable: void setUseLevel(boolean)>
<android.view.inputmethod.InputConnectionWrapper: boolean deleteSurroundingText(int,int)>
<android.widget.AbsListView: void setRemoteViewsAdapter(android.content.Intent)>
<android.media.AudioTrack: int getAudioSessionId()>
<com.android.internal.http.multipart.FilePart: void <init>(java.lang.String,java.io.File)>
<android.database.AbstractCursor: void registerDataSetObserver(android.database.DataSetObserver)>
<android.view.IWindowId: boolean isFocused()>
<android.widget.AutoCompleteTextView: void clearListSelection()>
<android.animation.LayoutTransition: void addChild(android.view.ViewGroup,android.view.View)>
<android.opengl.GLES30: void glSamplerParameterfv(int,int,java.nio.FloatBuffer)>
<android.gesture.GestureOverlayView: void removeOnGestureListener(android.gesture.GestureOverlayView.OnGestureListener)>
<android.bluetooth.BluetoothUuid: boolean isAvrcpController(android.os.ParcelUuid)>
<android.text.format.DateUtils: java.lang.String formatDateTime(android.content.Context,long,int)>
<android.app.Notification.Builder: android.app.Notification.Builder setLargeIcon(android.graphics.Bitmap)>
<com.android.internal.widget.LockPatternUtilsCache: java.lang.String getString(java.lang.String,java.lang.String,int)>
<android.net.MobileDataStateTracker: boolean isTeardownRequested()>
<com.android.internal.view.RotationPolicy: int getRotationLockOrientation(android.content.Context)>
<android.view.accessibility.AccessibilityInteractionClient: void setPerformAccessibilityActionResult(boolean,int)>
<android.bluetooth.BluetoothUuid: boolean isHandsfree(android.os.ParcelUuid)>
<android.content.ContextWrapper: void sendOrderedBroadcast(android.content.Intent,java.lang.String)>
<android.gesture.GestureLibraries: android.gesture.GestureLibrary fromFile(java.lang.String)>
<com.android.internal.util.XmlUtils: long readLongAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>
<android.view.MotionEvent: void offsetLocation(float,float)>
<android.net.wifi.p2p.WifiP2pDevice: int describeContents()>
<android.net.wifi.WifiInfo: void setBSSID(java.lang.String)>
<android.app.ActivityManager.TaskThumbnail: int describeContents()>
<com.android.ims.internal.IImsService: com.android.ims.internal.IImsCallSession createCallSession(int,com.android.ims.ImsCallProfile,com.android.ims.internal.IImsCallSessionListener)>
<android.bluetooth.BluetoothAdapter: android.util.Pair readOutOfBandData()>
<android.provider.Settings.System: long getLong(android.content.ContentResolver,java.lang.String)>
<com.google.android.util.AbstractMessageParser.FlickrPhoto: java.lang.String getPhotoURL(java.lang.String,java.lang.String)>
<android.bluetooth.le.AdvertiseData: android.util.SparseArray getManufacturerSpecificData()>
<android.app.SearchManager: void onCancel(android.content.DialogInterface)>
<android.view.WindowManagerPolicy.WindowState: android.view.WindowManager.LayoutParams getAttrs()>
<android.widget.Toast: void setGravity(int,int,int)>
<android.app.LoadedApk: android.content.res.AssetManager getAssets(android.app.ActivityThread)>
<com.android.internal.widget.IRemoteViewsFactory: boolean hasStableIds()>
<android.media.SRTTrack: void onData(byte[],boolean,long)>
<android.telecom.VideoProfile.VideoState: boolean isPaused(int)>
<android.util.Base64OutputStream: void close()>
<android.view.accessibility.AccessibilityEvent: void setSealed(boolean)>
<android.net.http.RequestFeeder: android.net.http.Request getRequest(org.apache.http.HttpHost)>
<android.media.tv.TvContract.Programs.Genres: boolean isCanonical(java.lang.String)>
<com.android.internal.view.menu.IconMenuView: android.os.Parcelable onSaveInstanceState()>
<android.widget.ImageView: int getMaxHeight()>
<android.app.ApplicationThreadProxy: void scheduleOnNewActivityOptions(android.os.IBinder,android.app.ActivityOptions)>
<android.bluetooth.BluetoothGatt: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.widget.RemoteViewsService.RemoteViewsFactory: long getItemId(int)>
<android.app.Service: android.app.Application getApplication()>
<android.net.dhcp.DhcpStateMachine: void onNakReceived()>
<com.android.ims.ImsReasonInfo: void <init>(int,int,java.lang.String)>
<android.graphics.Canvas: void drawVertices(android.graphics.Canvas.VertexMode,int,float[],int,float[],int,int[],int,short[],int,int,android.graphics.Paint)>
<android.opengl.ETC1Util.ETC1Texture: java.nio.ByteBuffer getData()>
<android.database.BulkCursorProxy: void close()>
<com.android.internal.telephony.ISub: int getPhoneId(long)>
<android.view.MotionEvent: android.view.MotionEvent createFromParcelBody(android.os.Parcel)>
<android.animation.FloatArrayEvaluator: void <init>(float[])>
<android.view.KeyEvent.DispatcherState: void handleUpEvent(android.view.KeyEvent)>
<android.app.Service: void onConfigurationChanged(android.content.res.Configuration)>
<android.view.View: void recomputePadding()>
<android.animation.ObjectAnimator: void setObjectValues(java.lang.Object[])>
<android.net.http.AndroidHttpClient: java.io.InputStream getUngzippedContent(org.apache.http.HttpEntity)>
<android.os.PersistableBundle: android.os.PersistableBundle getPersistableBundle(java.lang.String)>
<android.graphics.drawable.BitmapDrawable: void setTileModeXY(android.graphics.Shader.TileMode,android.graphics.Shader.TileMode)>
<android.hardware.hdmi.HdmiTvClient: void setRecordListener(android.hardware.hdmi.HdmiRecordListener)>
<android.hardware.camera2.legacy.RequestThreadManager.FpsCounter: void staggeredLog()>
<com.android.internal.content.NativeLibraryHelper: void removeNativeBinariesFromDirLI(java.io.File,boolean)>
<android.widget.ExpandableListView: android.widget.ExpandableListAdapter getExpandableListAdapter()>
<android.hardware.camera2.params.StreamConfiguration: boolean equals(java.lang.Object)>
<android.webkit.URLUtil: java.lang.String stripAnchor(java.lang.String)>
<android.accounts.ChooseTypeAndAccountActivity: void onResume()>
<android.widget.TextView: int getCompoundPaddingEnd()>
<android.net.http.HttpResponseCache: android.net.http.HttpResponseCache install(java.io.File,long)>
<android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,android.text.TextDirectionHeuristic,float,float,boolean)>
<android.speech.tts.TtsEngines: android.speech.tts.TextToSpeech.EngineInfo getEngineInfo(java.lang.String)>
<android.media.MediaCodec: void finalize()>
<android.webkit.WebViewProvider: void documentHasImages(android.os.Message)>
<android.net.LocalSocketAddress: void <init>(java.lang.String)>
<android.widget.ActionMenuView: boolean hasDividerBeforeChildAt(int)>
<android.net.Uri: java.lang.String getLastPathSegment()>
<android.printservice.PrinterDiscoverySession: void onStartPrinterStateTracking(android.print.PrinterId)>
<android.bluetooth.BluetoothGattDescriptor: android.bluetooth.BluetoothGattCharacteristic getCharacteristic()>
<android.telephony.CellSignalStrengthCdma: int getLevel()>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,char)>
<android.content.Intent: android.content.Intent putExtras(android.os.Bundle)>
<android.media.browse.MediaBrowser: android.content.ComponentName getServiceComponent()>
<android.accounts.IAccountManager: void addAccount(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle)>
<android.location.Geofence: int getType()>
<android.webkit.WebView: android.webkit.WebBackForwardList saveState(android.os.Bundle)>
<android.net.http.SslError: int getPrimaryError()>
<android.text.style.ImageSpan: void <init>(android.graphics.drawable.Drawable,java.lang.String)>
<android.widget.SearchView.SearchAutoComplete: void onFocusChanged(boolean,int,android.graphics.Rect)>
<android.app.IActivityManager: void showBootMessage(java.lang.CharSequence,boolean)>
<android.content.ContextWrapper: java.lang.String getBasePackageName()>
<com.google.android.gles_jni.GLImpl: void glGetBooleanv(int,java.nio.IntBuffer)>
<android.content.Intent: short getShortExtra(java.lang.String,short)>
<android.widget.CalendarView: void onConfigurationChanged(android.content.res.Configuration)>
<android.content.ClipboardManager: java.lang.CharSequence getText()>
<android.preference.PreferenceActivity: void showBreadCrumbs(java.lang.CharSequence,java.lang.CharSequence)>
<android.location.Criteria: int getSpeedAccuracy()>
<com.android.internal.widget.ActionBarOverlayLayout: void onNestedScroll(android.view.View,int,int,int,int)>
<android.app.UiModeManager: void enableCarMode(int)>
<android.net.nsd.DnsSdTxtRecord: boolean contains(java.lang.String)>
<android.view.ViewRootImpl: void onNestedScrollAccepted(android.view.View,android.view.View,int)>
<com.android.internal.widget.ToolbarWidgetWrapper: void setTitle(java.lang.CharSequence)>
<android.text.style.TextAppearanceSpan: void <init>(android.content.Context,int)>
<com.android.internal.widget.ActionBarContextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.transition.ChangeBounds: void captureEndValues(android.transition.TransitionValues)>
<android.preference.Preference.OnPreferenceChangeInternalListener: void onPreferenceChange(android.preference.Preference)>
<android.view.MotionEvent: android.view.MotionEvent clampNoHistory(float,float,float,float)>
<android.renderscript.Allocation: android.renderscript.Allocation createSized(android.renderscript.RenderScript,android.renderscript.Element,int,int)>
<android.media.tv.TvContentRating: java.lang.String getDomain()>
<android.app.FragmentManager: void popBackStack()>
<android.telecom.Connection: void setOnHold()>
<com.android.internal.app.LocalePicker: java.util.List getAllAssetLocales(android.content.Context,boolean)>
<android.view.animation.AlphaAnimation: boolean willChangeTransformationMatrix()>
<android.net.wifi.ScanSettings: void <init>(android.net.wifi.ScanSettings)>
<android.renderscript.Double2: void add(double)>
<android.media.tv.ITvInputManagerCallback: void onInputAdded(java.lang.String)>
<android.os.BatteryStats: void writeToParcelWithoutUids(android.os.Parcel,int)>
<android.net.wifi.p2p.WifiP2pConfig: int describeContents()>
<android.widget.AutoCompleteTextView: boolean setFrame(int,int,int,int)>
<com.android.internal.app.RestrictionsPinActivity: void beforeTextChanged(java.lang.CharSequence,int,int,int)>
<android.content.BroadcastReceiver.PendingResult: android.os.Bundle getResultExtras(boolean)>
<android.bluetooth.IBluetoothGatt: void startScan(int,boolean,android.bluetooth.le.ScanSettings,java.util.List,java.util.List)>
<android.webkit.WebView: void findNext(boolean)>
<android.content.IntentFilter: int matchData(java.lang.String,java.lang.String,android.net.Uri)>
<android.media.audiofx.EnvironmentalReverb: void setRoomLevel(short)>
<android.widget.TextView: void setImeActionLabel(java.lang.CharSequence,int)>
<com.android.internal.http.multipart.StringPart: void sendData(java.io.OutputStream)>
<android.app.FragmentManager: android.app.Fragment findFragmentById(int)>
<android.app.ApplicationThreadProxy: void scheduleCancelVisibleBehind(android.os.IBinder)>
<com.android.internal.backup.IObbBackupService: void backupObbs(java.lang.String,android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager)>
<android.view.WindowManagerPolicy: void setLastInputMethodWindowLw(android.view.WindowManagerPolicy.WindowState,android.view.WindowManagerPolicy.WindowState)>
<android.app.ProgressDialog: android.app.ProgressDialog show(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)>
<android.util.Range: boolean contains(java.lang.Comparable)>
<android.widget.AppSecurityPermissions.PermissionItemView: void onDetachedFromWindow()>
<android.database.Cursor: int getColumnCount()>
<android.app.IActivityManager: void finishInstrumentation(android.app.IApplicationThread,int,android.os.Bundle)>
<android.view.View: android.content.res.ColorStateList getBackgroundTintList()>
<com.android.internal.os.BatteryStatsImpl.BatchTimer: void onTimeStarted(long,long,long)>
<android.view.ViewRootImpl: void dispatchSystemUiVisibilityChanged(int,int,int,int)>
<android.provider.ContactsContract.SyncState: byte[] get(android.content.ContentProviderClient,android.accounts.Account)>
<android.hardware.camera2.params.MeteringRectangle: void <init>(int,int,int,int,int)>
<android.nfc.TransceiveResult: void <init>(int,byte[])>
<android.os.CommonTimeConfig: boolean getAutoDisable()>
<com.android.internal.os.BatteryStatsImpl: java.lang.String getStartPlatformVersion()>
<android.media.AudioService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.os.BaseBundle: void putInt(java.lang.String,int)>
<android.content.res.Resources: int[] getIntArray(int)>
<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>
<com.android.internal.view.RotationPolicy: void registerRotationPolicyListener(android.content.Context,com.android.internal.view.RotationPolicy.RotationPolicyListener,int)>
<android.transition.ChangeBounds: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.RemoteViews: void setImageViewUri(int,android.net.Uri)>
<android.bluetooth.BluetoothUuid: boolean isNap(android.os.ParcelUuid)>
<android.view.Window.Callback: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>
<android.hardware.usb.UsbConfiguration: boolean isRemoteWakeup()>
<android.security.KeyPairGeneratorSpec: java.math.BigInteger getSerialNumber()>
<android.util.LongArray: void add(int,long)>
<android.renderscript.Double4: void mul(android.renderscript.Double4)>
<android.preference.ListPreference: java.lang.CharSequence getEntry()>
<android.widget.SearchView: void clearFocus()>
<android.location.Location: void setIsFromMockProvider(boolean)>
<android.database.sqlite.SQLiteProgram: int getUniqueId()>
<android.text.StaticLayout: int getLineForVertical(int)>
<android.os.Parcel: void writeStringList(java.util.List)>
<android.text.method.DialerKeyListener: char[] getAcceptedChars()>
<android.webkit.WebSettings: void setLoadsImagesAutomatically(boolean)>
<android.view.ViewGroup: boolean isMotionEventSplittingEnabled()>
<android.widget.AppSecurityPermissions: android.view.View getPermissionItemView(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,boolean)>
<android.widget.OverScroller: void setFinalX(int)>
<android.renderscript.ProgramVertexFixedFunction.Constants: void setModelview(android.renderscript.Matrix4f)>
<android.provider.SyncStateContract.Helpers: android.content.ContentProviderOperation newUpdateOperation(android.net.Uri,byte[])>
<android.view.View: void jumpDrawablesToCurrentState()>
<android.view.View: boolean gatherTransparentRegion(android.graphics.Region)>
<android.view.Display: boolean isValid()>
<android.net.TrafficStats: long getUidUdpTxPackets(int)>
<android.view.textservice.SuggestionsInfo: int getCookie()>
<android.database.AbstractCursor: short getShort(int)>
<android.widget.TextView: void onEditorAction(int)>
<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setAlphabeticShortcut(char)>
<android.media.session.ISessionController: long getFlags()>
<android.media.MediaDescription: java.lang.CharSequence getTitle()>
<com.android.internal.view.BaseSurfaceHolder: void ungetCallbacks()>
<android.preference.ListPreference: void <init>(android.content.Context,android.util.AttributeSet)>
<android.hardware.usb.UsbDevice: int getDeviceId(java.lang.String)>
<android.app.ApplicationErrorReport.CrashInfo: void <init>(java.lang.Throwable)>
<android.net.WebAddress: void setPort(int)>
<android.content.BroadcastReceiver.PendingResult: void finish()>
<com.android.ims.internal.IImsCallSessionListener: void callSessionMerged(com.android.ims.internal.IImsCallSession,com.android.ims.internal.IImsCallSession,com.android.ims.ImsCallProfile)>
<android.graphics.Path: void finalize()>
<android.view.Window.Callback: void onWindowFocusChanged(boolean)>
<com.android.internal.widget.SlidingTab: boolean onTouchEvent(android.view.MotionEvent)>
<android.opengl.GLES30: void glDrawElementsInstanced(int,int,int,int,int)>
<android.provider.Contacts.People: android.net.Uri addToMyContactsGroup(android.content.ContentResolver,long)>
<android.webkit.WebViewClient: void onReceivedHttpAuthRequest(android.webkit.WebView,android.webkit.HttpAuthHandler,java.lang.String,java.lang.String)>
<android.opengl.GLES10: void glClientActiveTexture(int)>
<android.os.HandlerThread: android.os.Looper getLooper()>
<android.widget.PopupMenu.OnDismissListener: void onDismiss(android.widget.PopupMenu)>
<android.security.KeyStore: boolean resetUid(int)>
<android.app.IUiAutomationConnection: void executeShellCommand(java.lang.String,android.os.ParcelFileDescriptor)>
<android.os.DropBoxManager: void addText(java.lang.String,java.lang.String)>
<android.bluetooth.IBluetoothGatt: void sendResponse(int,java.lang.String,int,int,int,byte[])>
<android.filterfw.core.SyncRunner: void <init>(android.filterfw.core.FilterContext,android.filterfw.core.FilterGraph,java.lang.Class)>
<android.view.animation.GridLayoutAnimationController: void setRowDelay(float)>
<android.media.AudioService: void setStreamMute(int,boolean,android.os.IBinder)>
<android.app.TaskStackBuilder: android.content.Intent editIntentAt(int)>
<android.webkit.URLUtil: boolean isAboutUrl(java.lang.String)>
<android.renderscript.Float3: void <init>(float,float,float)>
<android.view.WindowId: java.lang.String toString()>
<android.service.voice.VoiceInteractionSession: void onDestroy()>
<com.android.internal.util.CharSequences: java.lang.CharSequence forAsciiBytes(byte[])>
<android.print.PrinterCapabilitiesInfo.Builder: android.print.PrinterCapabilitiesInfo.Builder setColorModes(int,int)>
<android.telecom.VideoProfile: void writeToParcel(android.os.Parcel,int)>
<android.view.ViewRootImpl: void onStopNestedScroll(android.view.View)>
<android.net.INetworkManagementEventObserver: void limitReached(java.lang.String,java.lang.String)>
<android.telephony.CellIdentityGsm: void <init>(int,int,int,int)>
<android.view.MotionEvent: float getOrientation()>
<android.view.GestureDetector.SimpleOnGestureListener: void onLongPress(android.view.MotionEvent)>
<android.text.method.WordIterator: void <init>(java.util.Locale)>
<android.text.style.TtsSpan.TextBuilder: void <init>(java.lang.String)>
<android.content.pm.ContainerEncryptionParams: int hashCode()>
<android.filterfw.core.FilterContext: void removeFrame(java.lang.String)>
<android.print.IPrintManager: void stopPrinterDiscovery(android.print.IPrinterDiscoveryObserver,int)>
<android.service.notification.NotificationListenerService: android.service.notification.StatusBarNotification[] getActiveNotifications()>
<android.renderscript.Double3: android.renderscript.Double3 sub(android.renderscript.Double3,double)>
<android.media.AudioService: boolean isSpeakerphoneOn()>
<com.android.internal.widget.ActionBarOverlayLayout: void setMenu(android.view.Menu,com.android.internal.view.menu.MenuPresenter.Callback)>
<com.android.internal.view.RotationPolicy: boolean isRotationLockToggleVisible(android.content.Context)>
<android.renderscript.RSSurfaceView: void setRenderScriptGL(android.renderscript.RenderScriptGL)>
<android.widget.CheckedTextView: void setVisibility(int)>
<android.media.IRemoteDisplayProvider: void adjustVolume(java.lang.String,int)>
<android.widget.Gallery: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.util.MonthDisplayHelper: int getFirstDayOfMonth()>
<android.bluetooth.BluetoothProfile.ServiceListener: void onServiceConnected(int,android.bluetooth.BluetoothProfile)>
<android.view.RenderNode: float getCameraDistance()>
<android.database.sqlite.SQLiteDatabase: boolean isOpen()>
<android.view.View: void resolveLayoutParams()>
<android.app.admin.DevicePolicyManager: void lockNow()>
<android.bluetooth.BluetoothHeadset: boolean disableWBS()>
<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setChecked(boolean)>
<android.media.TtmlNode: void <init>(java.lang.String,java.lang.String,java.lang.String,long,long,android.media.TtmlNode,long)>
<com.google.android.gles_jni.EGLImpl: boolean eglTerminate(javax.microedition.khronos.egl.EGLDisplay)>
<android.app.ActivityOptions: android.app.ActivityOptions makeThumbnailAspectScaleDownAnimation(android.view.View,android.graphics.Bitmap,int,int,int,int,android.app.ActivityOptions.OnAnimationStartedListener)>
<android.drm.DrmUtils: android.drm.DrmUtils.ExtendedMetadataParser getExtendedMetadataParser(byte[])>
<android.view.View: void setOnSystemUiVisibilityChangeListener(android.view.View.OnSystemUiVisibilityChangeListener)>
<android.media.tv.TvTrackInfo: java.lang.String getLanguage()>
<android.hardware.Camera.Parameters: void setPictureSize(int,int)>
<android.graphics.Typeface: boolean isItalic()>
<android.provider.Settings.Global: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>
<android.view.RenderNode: boolean setRotationX(float)>
<android.renderscript.Matrix3f: void transpose()>
<android.net.TrafficStats: long getUidTcpTxSegments(int)>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator z(float)>
<android.media.session.MediaController.Callback: void onExtrasChanged(android.os.Bundle)>
<android.webkit.WebSettings: void setAcceptThirdPartyCookies(boolean)>
<android.media.MediaDrm.MediaDrmStateException: int getErrorCode()>
<android.preference.Preference: android.os.Bundle getExtras()>
<android.bluetooth.IBluetoothInputDevice: boolean setReport(android.bluetooth.BluetoothDevice,byte,java.lang.String)>
<android.bluetooth.le.ScanRecord: java.lang.String getDeviceName()>
<com.android.internal.view.menu.MenuBuilder: void removeItemAt(int)>
<android.view.accessibility.IAccessibilityInteractionConnection: void findAccessibilityNodeInfosByViewId(long,java.lang.String,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)>
<android.widget.RemoteViews: void setRelativeScrollPosition(int,int)>
<android.net.ConnectivityManager: int getNetworkPreference()>
<android.net.LocalSocket: java.io.OutputStream getOutputStream()>
<com.android.internal.telephony.ISub: int setDataRoaming(int,long)>
<android.opengl.GLES20: void glScissor(int,int,int,int)>
<android.net.wifi.p2p.nsd.WifiP2pServiceInfo: java.util.List getSupplicantQueryList()>
<android.widget.PopupWindow: void setLayoutInsetDecor(boolean)>
<android.opengl.Matrix: void multiplyMM(float[],int,float[],int,float[],int)>
<android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setExtras(android.os.PersistableBundle)>
<android.net.LinkQualityInfo: long getLastDataSampleTime()>
<android.app.LoadedApk: java.lang.String[] getSplitResDirs()>
<android.media.tv.TvView: void reset()>
<android.view.View.AccessibilityDelegate: void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent)>
<android.app.ActivityThread: android.content.pm.ActivityInfo resolveActivityInfo(android.content.Intent)>
<android.text.style.TtsSpan.CardinalBuilder: android.text.style.TtsSpan.CardinalBuilder setNumber(long)>
<android.view.KeyCharacterMap: boolean getKeyData(int,android.view.KeyCharacterMap.KeyData)>
<android.accounts.AccountAuthenticatorActivity: void onCreate(android.os.Bundle)>
<android.app.WallpaperManager: android.app.WallpaperManager getInstance(android.content.Context)>
<com.android.internal.os.ProcessCpuTracker: void update()>
<android.print.IPrintManager: void removePrintJobStateChangeListener(android.print.IPrintJobStateChangeListener,int)>
<com.android.internal.view.menu.IconMenuView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.inputmethodservice.InputMethodService: boolean onKeyMultiple(int,int,android.view.KeyEvent)>
<android.renderscript.Type: int getYuv()>
<android.view.View: boolean isClickable()>
<android.telecom.ConnectionService: android.telecom.RemoteConnection createRemoteIncomingConnection(android.telecom.PhoneAccountHandle,android.telecom.ConnectionRequest)>
<android.view.Choreographer: void removeFrameCallback(android.view.Choreographer.FrameCallback)>
<android.view.SurfaceView: void onDetachedFromWindow()>
<android.service.voice.VoiceInteractionServiceInfo: java.lang.String getSettingsActivity()>
<com.android.server.AppWidgetBackupBridge: java.util.List getWidgetParticipants(int)>
<android.animation.ValueAnimator: long getDuration()>
<android.net.http.SslError: android.net.http.SslCertificate getCertificate()>
<android.content.pm.PermissionGroupInfo: void <init>(android.content.pm.PermissionGroupInfo)>
<android.util.MathUtils: int random(int)>
<com.android.internal.view.menu.MenuPresenter: boolean expandItemActionView(com.android.internal.view.menu.MenuBuilder,com.android.internal.view.menu.MenuItemImpl)>
<android.ddm.DdmHandleAppName: void register()>
<android.bluetooth.BluetoothHeadset: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.hardware.camera2.params.StreamConfiguration: int getWidth()>
<android.transition.TransitionSet: void cancel()>
<android.renderscript.Long2: android.renderscript.Long2 mod(android.renderscript.Long2,long)>
<android.accessibilityservice.IAccessibilityServiceConnection: java.util.List getWindows()>
<com.android.internal.telephony.CallerInfo: com.android.internal.telephony.CallerInfo getCallerInfo(android.content.Context,android.net.Uri,android.database.Cursor)>
<android.hardware.SensorManager: java.util.List getSensorList(int)>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.util.List)>
<android.widget.PopupWindow: void setTouchable(boolean)>
<android.app.trust.ITrustListener: void onTrustChanged(boolean,int,boolean)>
<android.hardware.camera2.impl.CameraDeviceImpl.CaptureCallback: void onCapturePartial(android.hardware.camera2.CameraDevice,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureResult)>
<android.widget.TextView: void setPrivateImeOptions(java.lang.String)>
<android.os.DropBoxManager.Entry: java.io.InputStream getInputStream()>
<android.net.wifi.RttManager.ParcelableRttResults: void <init>(android.net.wifi.RttManager.RttResult[])>
<android.telecom.Call.Listener: void onPostDialWait(android.telecom.Call,java.lang.String)>
<android.opengl.GLES20: void glGenBuffers(int,int[],int)>
<android.app.ActivityManager: void forceStopPackageAsUser(java.lang.String,int)>
<android.media.Ringtone: android.net.Uri getUri()>
<android.graphics.drawable.AnimatedVectorDrawable: boolean canApplyTheme()>
<android.text.TextUtils: int lastIndexOf(java.lang.CharSequence,char)>
<android.renderscript.Matrix4f: void scale(float,float,float)>
<android.graphics.drawable.BitmapDrawable: void getOutline(android.graphics.Outline)>
<com.android.internal.view.menu.MenuView.ItemView: void setCheckable(boolean)>
<android.widget.DatePicker: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.inputmethodservice.ExtractEditText: void onSelectionChanged(int,int)>
<android.hardware.camera2.marshal.impl.MarshalQueryableReprocessFormatsMap: boolean isTypeMappingSupported(android.hardware.camera2.utils.TypeReference,int)>
<android.opengl.GLES10: void glLightModelfv(int,float[],int)>
<android.database.sqlite.SQLiteBlobTooBigException: void <init>(java.lang.String)>
<android.renderscript.RSRuntimeException: void <init>(java.lang.String)>
<android.nfc.tech.NfcV: void <init>(android.nfc.Tag)>
<android.bluetooth.le.ScanFilter.Builder: android.bluetooth.le.ScanFilter build()>
<android.content.Intent: android.content.Intent setClassName(android.content.Context,java.lang.String)>
<android.net.SSLCertificateSocketFactory: javax.net.ssl.SSLSocketFactory getDefault(int,android.net.SSLSessionCache)>
<android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<android.content.ContentProviderOperation: boolean isYieldAllowed()>
<android.opengl.GLES10: void glMultMatrixf(java.nio.FloatBuffer)>
<android.app.ListActivity: android.widget.ListAdapter getListAdapter()>
<android.os.Parcel: void restoreAllowFds(boolean)>
<com.android.internal.os.BatteryStatsImpl: boolean getNextOldHistoryLocked(android.os.BatteryStats.HistoryItem)>
<com.android.internal.telecom.IConnectionServiceAdapter: void setCallerDisplayName(java.lang.String,java.lang.String,int)>
<android.media.RemoteController: void <init>(android.content.Context,android.media.RemoteController.OnClientUpdateListener)>
<com.android.internal.widget.ActionBarView: boolean hasExpandedActionView()>
<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo: android.view.accessibility.AccessibilityNodeInfo.CollectionInfo obtain(int,int,boolean)>
<android.hardware.camera2.legacy.RequestHandlerThread: void removeMessages(int[])>
<android.util.SparseArray: int indexOfValue(java.lang.Object)>
<android.telephony.ServiceState: void setRilVoiceRadioTechnology(int)>
<com.android.internal.content.PackageHelper: java.lang.String createSdDir(long,java.lang.String,java.lang.String,int,boolean)>
<android.widget.PopupMenu: android.view.View.OnTouchListener getDragToOpenListener()>
<android.graphics.Canvas: void scale(float,float)>
<android.net.NetworkStateTracker: void setTeardownRequested(boolean)>
<android.nfc.cardemulation.ApduServiceInfo: boolean removeDynamicAidGroupForCategory(java.lang.String)>
<android.app.IActivityManager: android.content.Intent getIntentForIntentSender(android.content.IIntentSender)>
<android.filterpacks.imageproc.CropRectFilter: void process(android.filterfw.core.FilterContext)>
<com.android.internal.os.WrapperInit: void execStandalone(java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>
<com.android.ims.ImsCallProfile: void <init>(android.os.Parcel)>
<android.view.View: boolean isNestedScrollingEnabled()>
<com.android.internal.util.TypedProperties: long getLong(java.lang.String,long)>
<android.bluetooth.IBluetoothGattCallback: void onGetDescriptor(java.lang.String,int,int,android.os.ParcelUuid,int,android.os.ParcelUuid,int,android.os.ParcelUuid)>
<android.hardware.hdmi.IHdmiVendorCommandListener: void onReceived(int,byte[],boolean)>
<com.google.android.gles_jni.GLImpl: boolean glIsTexture(int)>
<android.opengl.GLES10: void glLightxv(int,int,int[],int)>
<android.hardware.SensorManager: void getQuaternionFromVector(float[],float[])>
<android.net.IConnectivityManager: com.android.internal.net.LegacyVpnInfo getLegacyVpnInfo()>
<com.google.android.gles_jni.EGLImpl: javax.microedition.khronos.egl.EGLDisplay eglGetDisplay(java.lang.Object)>
<android.content.ContentProviderProxy: android.net.Uri insert(java.lang.String,android.net.Uri,android.content.ContentValues)>
<android.animation.LayoutTransition: void hideChild(android.view.ViewGroup,android.view.View,int)>
<android.view.View: android.view.WindowId getWindowId()>
<android.text.format.Time: java.lang.String getCurrentTimezone()>
<android.app.DialogFragment: void show(android.app.FragmentManager,java.lang.String)>
<android.widget.HorizontalScrollView: int computeHorizontalScrollRange()>
<android.app.ActivityManagerProxy: void notifyEnterAnimationComplete(android.os.IBinder)>
<android.opengl.GLES11: void glPointParameterfv(int,float[],int)>
<android.app.backup.IBackupManager: void fullRestore(android.os.ParcelFileDescriptor)>
<android.app.ActivityGroup: void onStop()>
<android.graphics.Path: void addRect(android.graphics.RectF,android.graphics.Path.Direction)>
<android.os.Bundle: float[] getFloatArray(java.lang.String)>
<com.android.internal.app.WindowDecorActionBar: android.app.ActionBar.Tab getTabAt(int)>
<com.android.internal.widget.DialogTitle: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.app.ActionBar: void addTab(android.app.ActionBar.Tab)>
<android.media.MediaScanner: boolean isNoMediaPath(java.lang.String)>
<com.android.internal.app.ToolbarActionBar: android.content.Context getThemedContext()>
<com.android.internal.widget.LockPatternUtils: boolean isDeviceEncrypted()>
<android.media.session.MediaSession: void setQueue(java.util.List)>
<android.telecom.RemoteConnection: int getCallerDisplayNamePresentation()>
<android.view.ViewGroup: void focusableViewAvailable(android.view.View)>
<android.view.WindowManagerPolicy: int adjustSystemUiVisibilityLw(int)>
<android.telephony.CellInfoCdma: void setCellSignalStrength(android.telephony.CellSignalStrengthCdma)>
<android.widget.ActionMenuView: void <init>(android.content.Context)>
<android.hardware.display.WifiDisplay: boolean canConnect()>
<android.widget.Toolbar: void onMeasure(int,int)>
<android.database.sqlite.SQLiteSession: long executeForLastInsertedRowId(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal)>
<com.android.internal.os.BatteryStatsImpl: void noteStartSensorLocked(int,int)>
<android.telecom.Connection.Listener: void onStatusHintsChanged(android.telecom.Connection,android.telecom.StatusHints)>
<android.database.sqlite.SQLiteDatabase: java.lang.String getPath()>
<android.content.UndoOwner: java.lang.Object getData()>
<android.hardware.camera2.utils.HashCodeHelpers: int hashCode(int,int,int,int,int)>
<android.renderscript.Int3: void <init>(android.renderscript.Int3)>
<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setTitle(int)>
<android.app.admin.DevicePolicyManager: boolean isDeviceOwner(java.lang.String)>
<android.hardware.location.GeofenceHardwareMonitorEvent: void writeToParcel(android.os.Parcel,int)>
<android.nfc.cardemulation.CardEmulation: boolean setPreferredService(android.app.Activity,android.content.ComponentName)>
<android.app.job.IJobCallback: void acknowledgeStartMessage(int,boolean)>
<android.hardware.Camera: android.hardware.Camera open()>
<android.widget.ImageSwitcher: void <init>(android.content.Context,android.util.AttributeSet)>
<android.view.InputDevice: boolean[] hasKeys(int[])>
<com.android.internal.statusbar.IStatusBar: void notificationLightOff()>
<android.widget.ShareActionProvider: boolean hasSubMenu()>
<android.webkit.WebViewProvider: void setNetworkAvailable(boolean)>
<android.view.DisplayAdjustments: android.content.res.CompatibilityInfo getCompatibilityInfo()>
<android.printservice.PrinterDiscoverySession: void onStopPrinterStateTracking(android.print.PrinterId)>
<android.app.backup.IRestoreObserver: void restoreFinished(int)>
<android.bluetooth.BluetoothUuid: boolean isMap(android.os.ParcelUuid)>
<android.renderscript.Matrix3f: void loadScale(float,float,float)>
<com.android.internal.widget.PasswordEntryKeyboardHelper: void sendDownUpKeyEvents(int)>
<android.view.ViewGroup: void onNestedScroll(android.view.View,int,int,int,int)>
<com.android.internal.view.IInputMethod: void changeInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)>
<android.util.MathUtils: float map(float,float,float,float,float)>
<android.os.storage.IMountService: java.lang.String getSecureContainerPath(java.lang.String)>
<android.renderscript.Int2: android.renderscript.Int2 mod(android.renderscript.Int2,android.renderscript.Int2)>
<android.graphics.drawable.VectorDrawable: int getChangingConfigurations()>
<android.media.session.MediaController: boolean controlsSameSession(android.media.session.MediaController)>
<android.view.ContextMenu: android.view.ContextMenu setHeaderTitle(java.lang.CharSequence)>
<android.content.pm.ComponentInfo: android.graphics.drawable.Drawable loadDefaultIcon(android.content.pm.PackageManager)>
<com.android.internal.view.IInputMethod: void attachToken(android.os.IBinder)>
<com.google.android.gles_jni.GLImpl: void glTexParameteri(int,int,int)>
<android.media.AudioRecord: int getState()>
<android.view.Window: boolean superDispatchGenericMotionEvent(android.view.MotionEvent)>
<android.view.Choreographer: long subtractFrameDelay(long)>
<android.view.InputEventConsistencyVerifier: boolean isInstrumentationEnabled()>
<com.android.internal.view.menu.ActionMenu: android.view.SubMenu addSubMenu(int)>
<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getIccSerialNumber()>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofKeyframe(android.util.Property,android.animation.Keyframe[])>
<android.opengl.GLES11Ext: void glBlendEquationSeparateOES(int,int)>
<android.text.style.AbsoluteSizeSpan: boolean getDip()>
<android.app.Activity: void startActivityFromFragment(android.app.Fragment,android.content.Intent,int)>
<android.app.ExpandableListActivity: void onContentChanged()>
<android.view.ViewGroup.MarginLayoutParams: void setMarginEnd(int)>
<android.net.NetworkStats: android.net.NetworkStats clone()>
<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.lang.String,int)>
<android.content.IntentSender: android.content.IIntentSender getTarget()>
<android.widget.RemoteViewsAdapter: java.lang.Object getItem(int)>
<android.renderscript.Byte4: void add(byte)>
<android.graphics.drawable.AnimatedVectorDrawable: int getAlpha()>
<android.text.style.StrikethroughSpan: int getSpanTypeId()>
<android.widget.RatingBar.OnRatingBarChangeListener: void onRatingChanged(android.widget.RatingBar,float,boolean)>
<android.view.accessibility.AccessibilityInteractionClient: void setFindAccessibilityNodeInfoResult(android.view.accessibility.AccessibilityNodeInfo,int)>
<android.text.InputFilter.LengthFilter: int getMax()>
<android.graphics.drawable.AnimatedVectorDrawable: void getOutline(android.graphics.Outline)>
<android.content.ComponentName: void <init>(android.os.Parcel)>
<android.net.WifiKey: boolean equals(java.lang.Object)>
<android.net.LinkProperties: android.net.LinkProperties.CompareResult compareAddresses(android.net.LinkProperties)>
<android.app.Instrumentation: android.app.Instrumentation.ActivityResult execStartActivity(android.content.Context,android.os.IBinder,android.os.IBinder,android.app.Activity,android.content.Intent,int,android.os.Bundle,android.os.UserHandle)>
<android.util.PathParser: void updateNodes(android.util.PathParser.PathDataNode[],android.util.PathParser.PathDataNode[])>
<android.os.RegistrantList: void notifyRegistrants()>
<android.net.MobileLinkQualityInfo: void setRssi(int)>
<android.os.INetworkManagementService: void denyProtect(int)>
<android.bluetooth.BluetoothActivityEnergyInfo: int getControllerEnergyUsed()>
<android.content.Loader: void onReset()>
<android.content.ContextWrapper: void enforceUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int,java.lang.String)>
<android.widget.Scroller: int getFinalY()>
<android.media.MediaPlayer.TrackInfo: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.app.ResolverActivity: void onRestoreInstanceState(android.os.Bundle)>
<android.bluetooth.IBluetoothGattCallback: void onFoundOrLost(boolean,android.bluetooth.le.ScanResult)>
<android.view.Window: void setDimAmount(float)>
<com.android.internal.os.BatteryStatsImpl: void noteProcessStateLocked(java.lang.String,int,int)>
<android.widget.AdapterView: void setEmptyView(android.view.View)>
<com.android.internal.widget.LockPatternUtils: void setOwnerInfoEnabled(boolean)>
<android.widget.HeterogeneousExpandableList: int getChildTypeCount()>
<com.android.internal.os.BatteryStatsImpl.Uid: void noteUserActivityLocked(int)>
<android.accounts.AccountAndUser: void <init>(android.accounts.Account,int)>
<android.app.ActionBar: void setSubtitle(int)>
<com.android.internal.telephony.ISub: java.util.List getActiveSubInfoList()>
<android.content.Intent: boolean hasFileDescriptors()>
<android.text.method.KeyListener: boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent)>
<android.location.GpsClock: void setDriftUncertaintyInNsPerSec(double)>
<android.view.MotionEvent: boolean isTainted()>
<android.os.Debug: int getGlobalExternalAllocCount()>
<android.net.NetworkStateTracker: void addStackedLink(android.net.LinkProperties)>
<android.media.MediaPlayer: android.media.MediaTimeProvider getMediaTimeProvider()>
<com.android.internal.http.multipart.PartBase: java.lang.String getCharSet()>
<android.filterpacks.ui.SurfaceRenderFilter: void setupPorts()>
<android.content.pm.LauncherApps: void registerCallback(android.content.pm.LauncherApps.Callback)>
<android.hardware.soundtrigger.SoundTrigger.SoundModel: void <init>(java.util.UUID,java.util.UUID,int,byte[])>
<android.app.ActionBar: void setShowHideAnimationEnabled(boolean)>
<android.os.Parcel: android.util.SizeF readSizeF()>
<android.text.TextUtils: java.lang.CharSequence replace(java.lang.CharSequence,java.lang.String[],java.lang.CharSequence[])>
<android.view.MotionEvent: float getY(int)>
<android.app.Instrumentation: android.content.Context getContext()>
<com.android.internal.app.ToolbarActionBar: void setCustomView(android.view.View,android.app.ActionBar.LayoutParams)>
<android.hardware.display.WifiDisplay: java.lang.String toString()>
<android.hardware.camera2.marshal.impl.MarshalQueryableHighSpeedVideoConfiguration: android.hardware.camera2.marshal.Marshaler createMarshaler(android.hardware.camera2.utils.TypeReference,int)>
<android.text.format.Time: void set(android.text.format.Time)>
<android.app.admin.DevicePolicyManager: void addUserRestriction(android.content.ComponentName,java.lang.String)>
<android.service.dreams.DreamService: void onActionModeFinished(android.view.ActionMode)>
<android.content.pm.PackageManager: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String,int)>
<android.util.Rational: short shortValue()>
<android.graphics.drawable.RippleDrawable: void setPaddingMode(int)>
<android.widget.Toolbar: int getContentInsetLeft()>
<android.telephony.CellIdentityGsm: int hashCode()>
<android.view.Display: int getWidth()>
<android.speech.tts.TextToSpeech: void <init>(android.content.Context,android.speech.tts.TextToSpeech.OnInitListener,java.lang.String)>
<android.view.Window: void restoreHierarchyState(android.os.Bundle)>
<com.android.ims.ImsCallProfile: int getCallTypeFromVideoState(int)>
<android.filterfw.core.InputPort: boolean filterMustClose()>
<android.media.audiofx.EnvironmentalReverb: int getReflectionsDelay()>
<android.net.NetworkStateTracker: android.net.Network getNetwork()>
<android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec.Builder setEncryptionRequired()>
<android.media.AudioAttributes: int describeContents()>
<android.bluetooth.le.BluetoothLeScanner: void stopScan(android.bluetooth.le.ScanCallback)>
<android.app.ISearchManagerCallback: void onDismiss()>
<android.database.Cursor: android.os.Bundle getExtras()>
<android.os.IPowerManager: void acquireWakeLock(android.os.IBinder,int,java.lang.String,java.lang.String,android.os.WorkSource,java.lang.String)>
<com.android.internal.widget.LockPatternUtils: boolean getWidgetsEnabled()>
<android.widget.ViewAnimator: android.view.animation.Animation getOutAnimation()>
<android.app.IActivityManager: void setProcessLimit(int)>
<android.content.AsyncQueryHandler: void startDelete(int,java.lang.Object,android.net.Uri,java.lang.String,java.lang.String[])>
<android.app.Fragment: void startActivity(android.content.Intent,android.os.Bundle)>
<android.view.View: boolean checkInputConnectionProxy(android.view.View)>
<android.text.style.SubscriptSpan: void updateDrawState(android.text.TextPaint)>
<android.net.LinkAddress: int getPrefixLength()>
<android.widget.AbsListView: boolean isFastScrollAlwaysVisible()>
<android.content.ContentProvider: int getUserIdFromUri(android.net.Uri)>
<com.android.internal.textservice.ITextServicesManager: android.view.textservice.SpellCheckerSubtype getCurrentSpellCheckerSubtype(java.lang.String,boolean)>
<android.hardware.camera2.impl.CameraDeviceImpl: android.hardware.camera2.CaptureRequest.Builder createCaptureRequest(int)>
<android.net.wifi.WifiManager: android.net.wifi.WifiManager.WifiLock createWifiLock(int,java.lang.String)>
<com.android.internal.os.ProcessCpuTracker: float getTotalCpuPercent()>
<android.filterpacks.videosrc.SurfaceTextureSource: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>
<android.hardware.hdmi.HdmiRecordSources: android.hardware.hdmi.HdmiRecordSources.ExternalPhysicalAddress ofExternalPhysicalAddress(int)>
<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int,android.os.Handler)>
<android.telephony.gsm.GsmCellLocation: java.lang.String toString()>
<android.graphics.Rect: android.graphics.Rect unflattenFromString(java.lang.String)>
<android.bluetooth.IBluetooth: int getRemoteType(android.bluetooth.BluetoothDevice)>
<android.app.admin.DevicePolicyManager: int getPasswordHistoryLength(android.content.ComponentName,int)>
<android.widget.MultiAutoCompleteTextView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.telecom.RemoteConnection: void abort()>
<com.android.internal.util.StateMachine: void sendMessageAtFrontOfQueue(int,java.lang.Object)>
<android.app.IUiAutomationConnection: void clearWindowAnimationFrameStats()>
<android.app.SearchableInfo: int getLabelId()>
<com.android.internal.app.WindowDecorActionBar.ActionModeImpl: void onMenuModeChange(com.android.internal.view.menu.MenuBuilder)>
<android.content.ContextWrapper: java.io.File getDir(java.lang.String,int)>
<android.telephony.PreciseDataConnectionState: java.lang.String getDataConnectionFailCause()>
<android.location.GpsMeasurement: void resetSnrInDb()>
<android.nfc.ApduList: void writeToParcel(android.os.Parcel,int)>
<android.renderscript.Short2: void setValues(short,short)>
<android.text.style.LeadingMarginSpan.Standard: void <init>(int,int)>
<android.filterpacks.imageproc.DrawRectFilter: void prepare(android.filterfw.core.FilterContext)>
<android.app.Activity: void triggerSearch(java.lang.String,android.os.Bundle)>
<android.filterfw.core.ShaderProgram: java.lang.Object getHostValue(java.lang.String)>
<android.hardware.camera2.CameraCaptureSession.CaptureCallback: void onCaptureSequenceCompleted(android.hardware.camera2.CameraCaptureSession,int,long)>
<android.net.StaticIpConfiguration: java.lang.String toString()>
<android.app.Application.ActivityLifecycleCallbacks: void onActivityResumed(android.app.Activity)>
<android.net.NetworkRequest: void writeToParcel(android.os.Parcel,int)>
<android.media.Image: void setCropRect(android.graphics.Rect)>
<android.view.accessibility.AccessibilityNodeInfo: int getChildCount()>
<android.service.notification.StatusBarNotification: int getId()>
<android.net.wifi.WifiManager: boolean requestBatchedScan(android.net.wifi.BatchedScanSettings)>
<android.app.PendingIntent: android.content.IntentSender getIntentSender()>
<android.view.inputmethod.InputMethodManager: void windowDismissed(android.os.IBinder)>
<android.hardware.location.GeofenceHardware: boolean removeGeofence(int,int)>
<android.content.pm.RegisteredServicesCache: void setListener(android.content.pm.RegisteredServicesCacheListener,android.os.Handler)>
<com.android.internal.widget.ActionBarOverlayLayout: boolean canShowOverflowMenu()>
<android.app.backup.IBackupManager: android.content.Intent getConfigurationIntent(java.lang.String)>
<android.util.Log: int e(java.lang.String,java.lang.String)>
<android.location.IFusedGeofenceHardware: void modifyGeofenceOptions(int,int,int,int,int,int)>
<android.location.GpsMeasurement: boolean hasBitNumber()>
<com.android.internal.view.menu.MenuBuilder: void stopDispatchingItemsChanged()>
<android.renderscript.FieldPacker: void addU8(android.renderscript.Short4)>
<android.media.session.ISessionController: void skipToQueueItem(long)>
<com.android.internal.os.BatteryStatsImpl: void notePhoneStateLocked(int,int)>
<android.os.RemoteCallback: void onResult(android.os.Bundle)>
<android.os.StrictMode.StrictModeViolation: void <init>(int,int,java.lang.String)>
<android.view.ViewGroup: boolean canAnimate()>
<android.filterfw.core.SimpleFrame: java.lang.String toString()>
<android.view.accessibility.AccessibilityManager.HighTextContrastChangeListener: void onHighTextContrastStateChanged(boolean)>
<com.android.internal.view.BaseIWindow: void dispatchWallpaperOffsets(float,float,float,float,boolean)>
<android.net.wifi.p2p.WifiP2pWfdInfo: void writeToParcel(android.os.Parcel,int)>
<android.app.DialogFragment: void onSaveInstanceState(android.os.Bundle)>
<android.renderscript.ProgramStore.Builder: android.renderscript.ProgramStore.Builder setBlendFunc(android.renderscript.ProgramStore.BlendSrcFunc,android.renderscript.ProgramStore.BlendDstFunc)>
<android.telephony.TelephonyManager: void setDataEnabled(boolean)>
<com.android.internal.view.menu.ExpandedMenuView: boolean invokeItem(com.android.internal.view.menu.MenuItemImpl)>
<android.media.AudioManager: boolean isValidRingerMode(int)>
<android.view.accessibility.AccessibilityWindowInfo: int getType()>
<android.animation.Keyframe: android.animation.Keyframe clone()>
<android.content.ContentProvider: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.telephony.SubscriptionManager: int setColor(int,long)>
<android.view.ViewGroup: void onViewAdded(android.view.View)>
<android.text.style.UnderlineSpan: void updateDrawState(android.text.TextPaint)>
<android.content.res.Resources: float getFloat(int)>
<android.telecom.ParcelableConference: int describeContents()>
<com.android.internal.telecom.IVideoProvider: void sendSessionModifyRequest(android.telecom.VideoProfile)>
<android.hardware.soundtrigger.KeyphraseMetadata: boolean supportsPhrase(java.lang.String)>
<android.hardware.camera2.impl.CameraDeviceImpl.CameraDeviceCallbacks: void onResultReceived(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CaptureResultExtras)>
<android.view.View: android.os.IBinder getApplicationWindowToken()>
<android.graphics.drawable.AnimatedRotateDrawable: void run()>
<android.app.FragmentManager: boolean isDestroyed()>
<android.opengl.GLES30: void glInvalidateFramebuffer(int,int,int[],int)>
<android.text.style.RelativeSizeSpan: void writeToParcel(android.os.Parcel,int)>
<android.opengl.GLES11Ext: void glScalexOES(int,int,int)>
<android.app.ActionBar.Tab: android.graphics.drawable.Drawable getIcon()>
<android.app.PendingIntent: void cancel()>
<android.app.FragmentManagerImpl: android.app.Fragment getFragment(android.os.Bundle,java.lang.String)>
<android.webkit.WebViewProvider: void clearHistory()>
<android.view.ViewTreeObserver.OnWindowFocusChangeListener: void onWindowFocusChanged(boolean)>
<android.graphics.drawable.DrawableContainer: void setHotspot(float,float)>
<android.filterpacks.imageproc.NegativeFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<com.android.internal.app.ProcessStats: void <init>(boolean)>
<android.content.SearchRecentSuggestionsProvider: java.lang.String getType(android.net.Uri)>
<android.app.ApplicationErrorReport.AnrInfo: void <init>(android.os.Parcel)>
<android.security.KeyStore: byte[] sign(java.lang.String,byte[])>
<com.android.internal.inputmethod.InputMethodUtils.InputMethodSettings: java.util.List getEnabledInputMethodsAndSubtypeListLocked()>
<android.content.pm.ContainerEncryptionParams: void <init>(java.lang.String,java.security.spec.AlgorithmParameterSpec,javax.crypto.SecretKey,java.lang.String,java.security.spec.AlgorithmParameterSpec,javax.crypto.SecretKey,byte[],long,long,long)>
<android.renderscript.Matrix2f: float[] getArray()>
<android.view.View: void onConfigurationChanged(android.content.res.Configuration)>
<android.os.BaseBundle: void putLongArray(java.lang.String,long[])>
<com.google.android.util.AbstractMessageParser.Smiley: void <init>(java.lang.String)>
<android.net.wifi.p2p.WifiP2pGroupList: int getNetworkId(java.lang.String,java.lang.String)>
<android.view.inputmethod.InputMethodManager: void setImeWindowStatus(android.os.IBinder,int,int)>
<android.renderscript.Long4: void mul(android.renderscript.Long4)>
<android.renderscript.RSTextureView: void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int)>
<android.accounts.ChooseTypeAndAccountActivity: void runAddAccountForAuthenticator(java.lang.String)>
<android.widget.TextView: void onStartTemporaryDetach()>
<android.view.inputmethod.InputMethodManager: boolean isCursorAnchorInfoEnabled()>
<android.view.SurfaceControl.PhysicalDisplayInfo: int hashCode()>
<android.renderscript.ProgramVertexFixedFunction.Constants: void <init>(android.renderscript.RenderScript)>
<android.media.audiofx.EnvironmentalReverb: void <init>(int,int)>
<android.content.RestrictionsManager: void requestPermission(java.lang.String,java.lang.String,android.os.PersistableBundle)>
<android.webkit.WebViewProvider: android.graphics.Bitmap getFavicon()>
<android.text.Layout: float getLineMax(int)>
<android.view.View: boolean onCheckIsTextEditor()>
<android.app.Service: void onTaskRemoved(android.content.Intent)>
<android.location.IGpsStatusProvider: void removeGpsStatusListener(android.location.IGpsStatusListener)>
<com.android.internal.inputmethod.InputMethodUtils.InputMethodSettings: java.util.HashMap getExplicitlyOrImplicitlyEnabledInputMethodsAndSubtypeListLocked(android.content.Context)>
<android.content.res.Resources.Theme: android.graphics.drawable.Drawable getDrawable(int)>
<com.android.internal.widget.LockPatternUtils: int getFallbackAppWidgetId()>
<com.android.internal.widget.ActionBarView: void initIndeterminateProgress()>
<android.util.MathUtils: float abs(float)>
<android.view.WindowManagerPolicy: void beginPostLayoutPolicyLw(int,int)>
<android.webkit.WebChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)>
<android.preference.SeekBarVolumizer: void onSaveInstanceState(android.preference.VolumePreference.VolumeStore)>
<android.bluetooth.BluetoothHealthAppConfiguration: int describeContents()>
<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)>
<android.filterfw.core.SimpleFrame: android.graphics.Bitmap getBitmap()>
<android.widget.AbsoluteLayout.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>
<android.graphics.FontFamily: boolean addFontWeightStyle(java.lang.String,int,boolean)>
<android.telecom.RemoteConnectionManager: void <init>(android.telecom.ConnectionService)>
<android.bluetooth.BluetoothDevice: boolean setPairingConfirmation(boolean)>
<android.widget.ViewAnimator: void <init>(android.content.Context,android.util.AttributeSet)>
<android.opengl.GLES31: void glMemoryBarrier(int)>
<android.service.trust.TrustAgentService: void onUnlockAttempt(boolean)>
<com.android.internal.policy.PolicyManager: android.view.LayoutInflater makeNewLayoutInflater(android.content.Context)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture removeAccountAsUser(android.accounts.Account,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle)>
<com.google.android.util.AbstractMessageParser.Link: java.lang.String getURL()>
<android.view.ViewGroup: void addTouchables(java.util.ArrayList)>
<android.view.Window.Callback: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>
<android.util.JsonReader: void skipValue()>
<android.app.SearchDialog: void onBackPressed()>
<android.content.ContentUris: android.net.Uri.Builder appendId(android.net.Uri.Builder,long)>
<android.media.MediaFocusControl: void unregisterRemoteControlDisplay(android.media.IRemoteControlDisplay)>
<android.text.method.ScrollingMovementMethod: boolean lineEnd(android.widget.TextView,android.text.Spannable)>
<android.app.IActivityManager: java.lang.String getTagForIntentSender(android.content.IIntentSender,java.lang.String)>
<android.app.DialogFragment: boolean getShowsDialog()>
<android.nfc.INfcAdapter: boolean disable(boolean)>
<android.app.FragmentBreadCrumbs: void setTitle(java.lang.CharSequence,java.lang.CharSequence)>
<android.bluetooth.BluetoothGattCallbackWrapper: void onNotify(java.lang.String,int,int,android.os.ParcelUuid,int,android.os.ParcelUuid,byte[])>
<android.webkit.WebView.PrivateAccess: boolean super_dispatchKeyEvent(android.view.KeyEvent)>
<android.view.Surface: java.lang.String rotationToString(int)>
<android.telecom.InCallService: android.telecom.Phone getPhone()>
<android.graphics.Canvas: int saveLayerAlpha(float,float,float,float,int)>
<android.animation.ValueAnimator.AnimationHandler: void run()>
<android.gesture.GestureOverlayView.OnGestureListener: void onGesture(android.gesture.GestureOverlayView,android.view.MotionEvent)>
<android.content.res.CompatibilityInfo: int hashCode()>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator yBy(float)>
<android.graphics.drawable.PaintDrawable: boolean inflateTag(java.lang.String,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>
<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>
<android.content.IContentProvider: android.net.Uri insert(java.lang.String,android.net.Uri,android.content.ContentValues)>
<android.app.IActivityManager: int startActivityFromRecents(int,android.os.Bundle)>
<android.filterpacks.imageproc.FillLightFilter: void <init>(java.lang.String)>
<android.media.MediaMetadataRetriever: void setDataSource(java.io.FileDescriptor,long,long)>
<android.view.KeyEvent.DispatcherState: void reset()>
<android.hardware.location.IFusedLocationHardware: void injectDiagnosticData(java.lang.String)>
<android.webkit.FindActionModeCallback: void setText(java.lang.String)>
<android.media.WebVttParser: long parseTimestampMs(java.lang.String)>
<android.view.WindowContentFrameStats: java.lang.String toString()>
<com.google.android.gles_jni.GLImpl: void glEnable(int)>
<com.android.internal.os.BatteryStatsImpl: void setNumSpeedSteps(int)>
<android.bluetooth.BluetoothGattService: boolean addCharacteristic(android.bluetooth.BluetoothGattCharacteristic)>
<android.net.wifi.p2p.WifiP2pProvDiscEvent: void <init>(java.lang.String)>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumNonLetter(android.content.ComponentName,int)>
<android.view.ViewParent: boolean isTextAlignmentResolved()>
<android.media.audiofx.AudioEffect: int getParameter(int[],int[])>
<android.app.admin.DevicePolicyManager: boolean setActiveProfileOwner(android.content.ComponentName,java.lang.String)>
<android.graphics.NinePatch: void setPaint(android.graphics.Paint)>
<com.android.internal.os.BatteryStatsImpl: int getMobileRadioActiveUnknownCount(int)>
<com.android.internal.widget.ActionBarView: void setDefaultNavigationContentDescription(int)>
<android.security.IKeyChainService: boolean hasGrant(int,java.lang.String)>
<android.print.PrintAttributes.Resolution: int getVerticalDpi()>
<android.media.MediaRouter: android.media.MediaRouter.RouteCategory getSystemCategory()>
<android.media.MediaRouterClientState: void writeToParcel(android.os.Parcel,int)>
<android.media.MediaRouter.RouteGroup: java.lang.String toString()>
<com.android.internal.view.menu.MenuDialogHelper: boolean onOpenSubMenu(com.android.internal.view.menu.MenuBuilder)>
<android.graphics.drawable.LayerDrawable: boolean isStateful()>
<android.widget.NumberPicker: void setOnValueChangedListener(android.widget.NumberPicker.OnValueChangeListener)>
<android.printservice.PrintService: android.os.IBinder onBind(android.content.Intent)>
<android.widget.DialerFilter: void append(java.lang.String)>
<android.opengl.GLES10: void glAlphaFunc(int,float)>
<android.widget.RadioGroup.LayoutParams: void <init>(int,int,float)>
<android.content.IContentService: void setSyncAutomaticallyAsUser(android.accounts.Account,java.lang.String,boolean,int)>
<android.graphics.Typeface: int getStyle()>
<android.webkit.WebViewClient: void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError)>
<android.text.Selection: boolean moveToPreceding(android.text.Spannable,android.text.Selection.PositionIterator,boolean)>
<android.service.notification.NotificationListenerService: void requestListenerHints(int)>
<android.widget.RemoteViews: void setFloat(int,java.lang.String,float)>
<android.bluetooth.BluetoothAudioConfig: boolean equals(java.lang.Object)>
<android.app.LoaderManager: void enableDebugLogging(boolean)>
<android.renderscript.Short4: void set(android.renderscript.Short4)>
<android.security.IKeystoreService: int import_key(java.lang.String,byte[],int,int)>
<android.media.MediaHTTPConnection: void disconnect()>
<android.app.admin.DevicePolicyManager: int setStorageEncryption(android.content.ComponentName,boolean)>
<android.bluetooth.BluetoothPan: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.widget.TableLayout: boolean isColumnShrinkable(int)>
<android.widget.MediaController: void <init>(android.content.Context)>
<com.android.internal.telephony.IWapPushManager: boolean deletePackage(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.graphics.Matrix: float mapRadius(float)>
<android.renderscript.Byte2: byte get(int)>
<android.hardware.camera2.impl.CameraDeviceImpl: void close()>
<android.media.ResampleInputStream: int read()>
<android.app.ExpandableListActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu.ContextMenuInfo)>
<android.filterpacks.imageproc.LomoishFilter: void initProgram(android.filterfw.core.FilterContext,int)>
<android.hardware.Camera: void stopFaceDetection()>
<android.preference.ListPreference: void onRestoreInstanceState(android.os.Parcelable)>
<android.view.WindowManager.LayoutParams: void <init>(int,int,int,int,int,int,int)>
<com.android.internal.widget.LockPatternUtils: int[] getAppWidgets()>
<android.media.IRemoteDisplayCallback: void onStateChanged(android.media.RemoteDisplayState)>
<com.android.internal.widget.multiwaveview.PointCloud.WaveManager: void setRadius(float)>
<android.content.CursorEntityIterator: boolean hasNext()>
<android.app.IActivityManager.ContentProviderHolder: int describeContents()>
<android.net.wifi.WifiManager: void setTdlsEnabled(java.net.InetAddress,boolean)>
<android.speech.tts.TextToSpeech: boolean isSpeaking()>
<android.webkit.WebViewProvider: void saveWebArchive(java.lang.String,boolean,android.webkit.ValueCallback)>
<android.media.tv.TvContentRating: java.lang.String getRatingSystem()>
<android.graphics.PointF: void set(android.graphics.PointF)>
<android.view.ViewRootImpl: void dispatchInputEvent(android.view.InputEvent)>
<android.app.Instrumentation: void callActivityOnPostCreate(android.app.Activity,android.os.Bundle)>
<android.appwidget.AppWidgetManager: boolean bindAppWidgetIdIfAllowed(int,android.os.UserHandle,android.content.ComponentName,android.os.Bundle)>
<android.util.Rational: long longValue()>
<com.android.internal.widget.multiwaveview.TargetDrawable: void <init>(com.android.internal.widget.multiwaveview.TargetDrawable)>
<android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec.Builder setAlias(java.lang.String)>
<android.text.BoringLayout: android.text.BoringLayout.Metrics isBoring(java.lang.CharSequence,android.text.TextPaint,android.text.BoringLayout.Metrics)>
<android.widget.AnalogClock: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.net.NetworkStatsHistory: int describeContents()>
<com.google.android.util.AbstractMessageParser.FlickrPhoto: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.app.FragmentBreadCrumbs: void onBackStackChanged()>
<android.content.ContentProvider: boolean onCreate()>
<android.opengl.GLSurfaceView: void surfaceDestroyed(android.view.SurfaceHolder)>
<com.android.internal.util.XmlUtils: boolean readBooleanAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,boolean)>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable loadItemIcon(android.content.pm.PackageItemInfo,android.content.pm.ApplicationInfo)>
<android.database.sqlite.SQLiteDoneException: void <init>(java.lang.String)>
<android.net.wifi.p2p.WifiP2pManager: void setMiracastMode(int)>
<android.net.NetworkTemplate: void forceAllNetworkTypes()>
<android.nfc.INfcTag: int[] getTechList(int)>
<android.service.dreams.DreamService: void onDreamingStopped()>
<android.content.BroadcastReceiver: void setOrderedHint(boolean)>
<android.telephony.TelephonyManager: java.lang.String getIsimIst()>
<com.android.internal.os.BatteryStatsImpl.Uid: boolean hasNetworkActivity()>
<android.renderscript.Mesh.TriangleMeshBuilder: android.renderscript.Mesh.TriangleMeshBuilder setColor(float,float,float,float)>
<android.media.IAudioService: void unregisterRemoteControlDisplay(android.media.IRemoteControlDisplay)>
<android.net.NetworkStats: void <init>(long,int)>
<android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,float,float,int,float,float,int,int)>
<android.hardware.Camera.Parameters: void setColorEffect(java.lang.String)>
<android.provider.DocumentsProvider: android.os.ParcelFileDescriptor openDocument(java.lang.String,java.lang.String,android.os.CancellationSignal)>
<android.webkit.WebViewFactoryProvider: android.webkit.CookieManager getCookieManager()>
<android.app.Activity: void onCreate(android.os.Bundle,android.os.PersistableBundle)>
<android.app.IActivityManager: java.util.List getAllStackInfos()>
<android.graphics.Path: void addOval(float,float,float,float,android.graphics.Path.Direction)>
<android.hardware.camera2.marshal.impl.MarshalQueryableBlackLevelPattern: android.hardware.camera2.marshal.Marshaler createMarshaler(android.hardware.camera2.utils.TypeReference,int)>
<android.nfc.tech.Ndef: android.nfc.NdefMessage getCachedNdefMessage()>
<android.renderscript.Byte4: void addMultiple(android.renderscript.Byte4,byte)>
<android.app.ApplicationErrorReport.AnrInfo: void writeToParcel(android.os.Parcel,int)>
<android.view.WindowCallbackWrapper: void onActionModeStarted(android.view.ActionMode)>
<android.telecom.Connection: void unsetConnectionService(android.telecom.ConnectionService)>
<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>
<com.android.internal.util.StateMachine: java.lang.String getLogRecString(android.os.Message)>
<android.media.CamcorderProfile: android.media.CamcorderProfile get(int,int)>
<android.os.StrictMode.ViolationInfo: void <init>(android.os.Parcel)>
<android.telecom.ConnectionRequest: android.net.Uri getAddress()>
<android.text.BidiFormatter: java.lang.String markBefore(java.lang.String,android.text.TextDirectionHeuristic)>
<android.net.SSLCertificateSocketFactory: void setAlpnProtocols(byte[][])>
<com.google.android.gles_jni.GLImpl: java.lang.String glGetString(int)>
<com.android.internal.app.PlatLogoActivity: void onAttachedToWindow()>
<android.util.ArraySet: java.lang.Object removeAt(int)>
<com.android.internal.view.IInputMethodManager: java.util.List getEnabledInputMethodList()>
<android.hardware.camera2.params.StreamConfiguration: int getFormat()>
<com.android.internal.widget.SlidingTab: void setVisibility(int)>
<com.android.internal.view.menu.ActionMenuItemView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.content.Context: void setWallpaper(android.graphics.Bitmap)>
<android.view.ScaleGestureDetector: boolean isQuickScaleEnabled()>
<android.content.BroadcastReceiver.PendingResult: void setExtrasClassLoader(java.lang.ClassLoader)>
<android.net.wifi.WifiManager: boolean isMulticastEnabled()>
<android.renderscript.Allocation: void copyFromUnchecked(int[])>
<android.graphics.ColorMatrix: void <init>(float[])>
<android.net.MobileDataStateTracker: boolean isReady()>
<com.android.internal.content.PackageHelper: int resolveInstallLocation(android.content.Context,java.lang.String,int,long,int)>
<android.accounts.IAccountManager: boolean addAccountExplicitly(android.accounts.Account,java.lang.String,android.os.Bundle)>
<android.security.IKeystoreService: int unlock(java.lang.String)>
<android.content.IntentFilter: void readFromXml(org.xmlpull.v1.XmlPullParser)>
<android.net.wifi.WifiLinkLayerStats: java.lang.String getPrintableSsid()>
<android.widget.AdapterView: void addView(android.view.View,int)>
<android.inputmethodservice.InputMethodService.InputMethodSessionImpl: void finishInput()>
<android.view.VelocityTracker: void clear()>
<android.hardware.display.DisplayManagerInternal.DisplayPowerCallbacks: void onProximityPositive()>
<android.view.ViewParent: boolean isLayoutDirectionResolved()>
<android.nfc.cardemulation.CardEmulation: boolean setDefaultServiceForCategory(android.content.ComponentName,java.lang.String)>
<android.view.View: boolean isOpaque()>
<android.nfc.tech.MifareClassic: void decrement(int,int)>
<com.android.internal.view.menu.IconMenuView: int[] getLayout()>
<android.graphics.Paint: void setLinearText(boolean)>
<android.media.SubtitleTrack.RenderingWidget: void draw(android.graphics.Canvas)>
<android.nfc.NfcActivityManager: void setNdefPushMessageCallback(android.app.Activity,android.nfc.NfcAdapter.CreateNdefMessageCallback,int)>
<android.graphics.Bitmap: void recycle()>
<android.widget.Toolbar: void setTitleTextAppearance(android.content.Context,int)>
<com.android.internal.backup.IBackupTransport: android.content.Intent configurationIntent()>
<android.animation.PropertyValuesHolder: void setPropertyName(java.lang.String)>
<android.media.tv.TvContract: android.net.Uri buildProgramUri(long)>
<android.bluetooth.BluetoothGattCallback: void onCharacteristicWrite(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic,int)>
<com.android.internal.app.AlertController: void setMessage(java.lang.CharSequence)>
<android.hardware.soundtrigger.SoundTrigger.RecognitionEvent: int hashCode()>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor[] createPipe()>
<android.view.accessibility.AccessibilityRecord: java.lang.CharSequence getBeforeText()>
<android.opengl.GLES11: void glColor4ub(byte,byte,byte,byte)>
<android.app.IActivityManager: boolean convertFromTranslucent(android.os.IBinder)>
<android.transition.Transition: void animate(android.animation.Animator)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator clone()>
<android.widget.ZoomControls: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.service.media.IMediaBrowserServiceCallbacks: void onLoadChildren(java.lang.String,android.content.pm.ParceledListSlice)>
<android.app.ActivityManagerProxy: java.lang.String getLaunchedFromPackage(android.os.IBinder)>
<android.service.notification.NotificationListenerService: void onListenerHintsChanged(int)>
<android.view.TextureView: android.graphics.Bitmap getBitmap(android.graphics.Bitmap)>
<android.graphics.drawable.LayerDrawable: boolean setDrawableByLayerId(int,android.graphics.drawable.Drawable)>
<android.telecom.CallState: java.lang.String toString(int)>
<com.android.internal.util.CharSequences: int compareToIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)>
<android.view.MotionEvent: java.lang.String buttonStateToString(int)>
<android.content.AsyncQueryHandler: android.os.Handler createHandler(android.os.Looper)>
<android.content.pm.LauncherApps: android.content.pm.LauncherActivityInfo resolveActivity(android.content.Intent,android.os.UserHandle)>
<android.content.res.TypedArray: java.lang.String toString()>
<android.app.Instrumentation: void onDestroy()>
<android.filterpacks.imageproc.BitmapSource: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>
<android.os.BaseBundle: void putIntArray(java.lang.String,int[])>
<android.os.RemoteCallbackList: java.lang.Object getBroadcastCookie(int)>
<android.renderscript.ScriptIntrinsicLUT: void setRed(int,int)>
<android.text.AlteredCharSequence: android.text.AlteredCharSequence make(java.lang.CharSequence,char[],int,int)>
<android.widget.VideoView: void suspend()>
<com.android.internal.util.FastPrintWriter: void print(long)>
<android.transition.ArcMotion: void setMinimumHorizontalAngle(float)>
<android.view.accessibility.AccessibilityInteractionClient: void clearCache()>
<android.print.PrintJobInfo: void writeToParcel(android.os.Parcel,int)>
<android.speech.tts.TtsEngines: android.content.Intent getSettingsIntent(java.lang.String)>
<android.content.pm.LauncherApps.Callback: void onPackageAdded(java.lang.String,android.os.UserHandle)>
<android.opengl.GLES31: void glVertexAttribFormat(int,int,int,boolean,int)>
<android.webkit.WebView: boolean onTrackballEvent(android.view.MotionEvent)>
<android.text.style.SuperscriptSpan: int getSpanTypeId()>
<android.media.AudioAttributes: int usageForLegacyStreamType(int)>
<com.android.internal.content.PackageMonitor: void onPackageUpdateStarted(java.lang.String,int)>
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: int hashCode()>
<android.telecom.AudioState: void writeToParcel(android.os.Parcel,int)>
<android.webkit.WebIconDatabase: void open(java.lang.String)>
<android.view.MotionEvent: float getTouchMinor(int)>
<android.os.Debug: java.lang.String getCallers(int,java.lang.String)>
<com.google.android.gles_jni.GLImpl: void glFramebufferRenderbufferOES(int,int,int,int)>
<com.android.internal.policy.IKeyguardService: boolean isInputRestricted()>
<android.filterfw.geometry.Point: android.filterfw.geometry.Point minus(android.filterfw.geometry.Point)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>
<android.app.ActivityManagerProxy: boolean refContentProvider(android.os.IBinder,int,int)>
<android.graphics.drawable.AnimationDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>
<android.text.style.TypefaceSpan: void <init>(java.lang.String)>
<com.android.internal.view.IInputMethod: void showSoftInput(int,android.os.ResultReceiver)>
<android.view.WindowInsets: int getStableInsetTop()>
<android.media.MediaCodec: void releaseOutputBuffer(int,long)>
<android.database.sqlite.SQLiteDatabase.CursorFactory: android.database.Cursor newCursor(android.database.sqlite.SQLiteDatabase,android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery)>
<android.media.tv.ITvInputService: void unregisterCallback(android.media.tv.ITvInputServiceCallback)>
<android.inputmethodservice.ExtractEditText: boolean hasFocus()>
<android.app.SharedElementCallback: void onSharedElementEnd(java.util.List,java.util.List,java.util.List)>
<android.bluetooth.IBluetoothHeadsetClient: boolean acceptCall(android.bluetooth.BluetoothDevice,int)>
<android.database.sqlite.SQLiteConnection: android.os.ParcelFileDescriptor executeForBlobFileDescriptor(java.lang.String,java.lang.Object[],android.os.CancellationSignal)>
<android.bluetooth.le.ScanRecord: android.util.SparseArray getManufacturerSpecificData()>
<android.content.pm.PackageInfoLite: void writeToParcel(android.os.Parcel,int)>
<android.print.PrintAttributes.MediaSize: android.print.PrintAttributes.MediaSize asPortrait()>
<android.media.Rating: android.media.Rating newThumbRating(boolean)>
<android.service.notification.NotificationRankingUpdate: void <init>(java.lang.String[],java.lang.String[],android.os.Bundle,int)>
<android.text.format.Time: int compare(android.text.format.Time,android.text.format.Time)>
<android.filterfw.core.MutableFrameFormat: void setDimensions(int,int,int)>
<android.app.ApplicationThreadProxy: void scheduleStopService(android.os.IBinder)>
<android.hardware.display.DisplayViewport: void copyFrom(android.hardware.display.DisplayViewport)>
<com.android.internal.widget.WaveView: void onMeasure(int,int)>
<android.provider.UserDictionary.Words: void addWord(android.content.Context,java.lang.String,int,java.lang.String,java.util.Locale)>
<android.hardware.Camera.Parameters: java.util.List getSupportedFlashModes()>
<android.hardware.hdmi.IHdmiDeviceEventListener: void onStatusChanged(android.hardware.hdmi.HdmiDeviceInfo,int)>
<android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int,int)>
<android.location.Address: boolean hasLatitude()>
<android.opengl.GLES11Ext: void glGenFramebuffersOES(int,int[],int)>
<android.app.Instrumentation: void stopProfiling()>
<android.net.wifi.WifiEnterpriseConfig: void setClientKeyEntry(java.security.PrivateKey,java.security.cert.X509Certificate)>
<android.os.StrictMode.ViolationInfo: int hashCode()>
<android.graphics.Region: void setEmpty()>
<com.google.android.util.AbstractMessageParser.Resources: com.google.android.util.AbstractMessageParser.TrieNode getSmileys()>
<android.provider.DocumentsProvider: android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle)>
<android.view.ViewRootImpl: void focusableViewAvailable(android.view.View)>
<android.animation.IntArrayEvaluator: void <init>(int[])>
<android.hardware.camera2.legacy.CameraDeviceUserShim: int getCameraInfo(android.hardware.camera2.impl.CameraMetadataNative)>
<android.hardware.camera2.CameraCharacteristics.Key: void <init>(java.lang.String,java.lang.Class)>
<android.hardware.camera2.impl.CameraCaptureSessionImpl: int capture(android.hardware.camera2.CaptureRequest,android.hardware.camera2.CameraCaptureSession.CaptureCallback,android.os.Handler)>
<android.renderscript.Double2: void mul(double)>
<android.filterpacks.imageproc.PosterizeFilter: void initProgram(android.filterfw.core.FilterContext,int)>
<android.net.wifi.p2p.WifiP2pManager: void deletePersistentGroup(android.net.wifi.p2p.WifiP2pManager.Channel,int,android.net.wifi.p2p.WifiP2pManager.ActionListener)>
<android.accounts.AuthenticatorDescription: java.lang.String toString()>
<android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec.Builder setSubject(javax.security.auth.x500.X500Principal)>
<android.content.RestrictionEntry: void setSelectedState(boolean)>
<android.service.voice.VoiceInteractionSession.Request: void sendCommandResult(boolean,android.os.Bundle)>
<com.android.internal.app.ProcessStats: void printMemLabelCsv(java.io.PrintWriter,int)>
<android.transition.Transition: void resume(android.view.View)>
<com.android.internal.telecom.IInCallAdapter: void mute(boolean)>
<android.widget.ListView: void addFooterView(android.view.View)>
<android.text.style.TtsSpan.DecimalBuilder: android.text.style.TtsSpan.DecimalBuilder setFractionalPart(java.lang.String)>
<android.hardware.camera2.params.ReprocessFormatsMap: int[] getOutputs(int)>
<com.android.internal.widget.DrawableHolder: void onAnimationEnd(android.animation.Animator)>
<android.media.audiofx.AudioEffect.Descriptor: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.widget.AbsListView: void onSizeChanged(int,int,int,int)>
<android.app.job.JobInfo: java.lang.String toString()>
<android.graphics.Path: void addPath(android.graphics.Path)>
<android.view.View: android.graphics.Bitmap getDrawingCache(boolean)>
<android.app.trust.TrustManager: void reportEnabledTrustAgentsChanged(int)>
<android.opengl.ETC1: void decodeImage(java.nio.Buffer,java.nio.Buffer,int,int,int,int)>
<android.widget.TextView: void onBeginBatchEdit()>
<android.view.ViewDebug.HierarchyHandler: android.view.View findHierarchyView(java.lang.String,int)>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setShowRunningNotification(boolean)>
<android.media.AudioManager: void setMicrophoneMute(boolean)>
<android.hardware.location.GeofenceHardware: int getStatusOfMonitoringType(int)>
<android.app.Notification.MediaStyle: void populateContentView(android.app.Notification)>
<android.widget.AnalogClock: void <init>(android.content.Context,android.util.AttributeSet)>
<android.net.UrlQuerySanitizer: java.lang.String unescape(java.lang.String)>
<android.hardware.camera2.impl.GetCommand: java.lang.Object getValue(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.impl.CameraMetadataNative.Key)>
<android.provider.Settings.System: void getConfigurationForUser(android.content.ContentResolver,android.content.res.Configuration,int)>
<android.widget.ActionMenuPresenter: boolean isOverflowMenuShowing()>
<android.webkit.WebViewProvider: void postUrl(java.lang.String,byte[])>
<android.os.Message: android.os.Message obtain(android.os.Handler,int)>
<android.telecom.Call.Details: android.telecom.StatusHints getStatusHints()>
<android.widget.GridView: int getHorizontalSpacing()>
<android.service.dreams.DreamService: void onActionModeStarted(android.view.ActionMode)>
<android.view.InputDevice: android.view.KeyCharacterMap getKeyCharacterMap()>
<android.provider.ContactsContract.Contacts.AggregationSuggestions.Builder: android.provider.ContactsContract.Contacts.AggregationSuggestions.Builder setLimit(int)>
<android.text.Selection: void setSelection(android.text.Spannable,int)>
<android.media.AudioTrack: void setPlaybackPositionUpdateListener(android.media.AudioTrack.OnPlaybackPositionUpdateListener,android.os.Handler)>
<com.android.internal.widget.ActionBarContainer: boolean onHoverEvent(android.view.MotionEvent)>
<android.filterfw.core.FrameFormat: java.lang.String metaDataToString(android.filterfw.core.KeyValueMap)>
<android.media.AudioManager: void setMode(int)>
<android.telephony.PhoneNumberUtils: boolean compare(java.lang.String,java.lang.String)>
<android.location.Location: long getTime()>
<android.content.IContentProvider: android.os.Bundle call(java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)>
<android.service.notification.StatusBarNotification: int getUid()>
<android.view.View: int getImportantForAccessibility()>
<com.android.internal.view.IInputMethodManager: void updateStatusIcon(android.os.IBinder,java.lang.String,int)>
<android.widget.ViewAnimator: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>
<android.os.FileUtils: int setPermissions(java.lang.String,int,int,int)>
<android.speech.IRecognitionListener: void onReadyForSpeech(android.os.Bundle)>
<android.nfc.INfcAdapter: android.nfc.INfcTag getNfcTagInterface()>
<com.android.internal.widget.LockPatternView.Cell: int getColumn()>
<android.media.effect.effects.IdentityEffect: void setParameter(java.lang.String,java.lang.Object)>
<com.android.internal.appwidget.IAppWidgetHost: void providerChanged(int,android.appwidget.AppWidgetProviderInfo)>
<android.renderscript.Short3: void mod(short)>
<com.android.internal.view.InputConnectionWrapper: boolean endBatchEdit()>
<android.media.SubtitleController: android.media.SubtitleTrack[] getTracks()>
<android.media.session.MediaController.PlaybackInfo: android.media.AudioAttributes getAudioAttributes()>
<com.android.internal.view.menu.MenuItemImpl: boolean isActionButton()>
<android.renderscript.Element.Builder: void <init>(android.renderscript.RenderScript)>
<android.view.SubMenu: android.view.SubMenu setHeaderTitle(java.lang.CharSequence)>
<android.provider.Settings.System: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>
<com.android.internal.telephony.GsmAlphabet: void stringToGsm8BitUnpackedField(java.lang.String,byte[],int,int)>
<android.appwidget.AppWidgetHostView: void prepareView(android.view.View)>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request addRequestHeader(java.lang.String,java.lang.String)>
<android.hardware.hdmi.HdmiPlaybackClient.DisplayStatusCallback: void onComplete(int)>
<android.view.View: float getX()>
<android.app.ActivityManagerNative: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<android.hardware.input.KeyboardLayout: void <init>(java.lang.String,java.lang.String,java.lang.String,int)>
<android.animation.Animator.AnimatorListener: void onAnimationEnd(android.animation.Animator)>
<android.opengl.Matrix: void scaleM(float[],int,float,float,float)>
<android.text.method.BaseMovementMethod: boolean home(android.widget.TextView,android.text.Spannable)>
<android.filterpacks.imageproc.FlipFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<android.view.SurfaceView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.media.MediaScannerConnection.OnScanCompletedListener: void onScanCompleted(java.lang.String,android.net.Uri)>
<android.media.MediaCodecInfo.VideoCapabilities: android.util.Range getBitrateRange()>
<android.printservice.PrintJob: boolean hasAdvancedOption(java.lang.String)>
<android.renderscript.Mesh.Builder: android.renderscript.Mesh.Builder addIndexSetType(android.renderscript.Type,android.renderscript.Mesh.Primitive)>
<android.telephony.CellIdentityGsm: void writeToParcel(android.os.Parcel,int)>
<android.widget.CalendarView.CalendarViewDelegate: void setShowWeekNumber(boolean)>
<android.database.CursorWrapper: long getLong(int)>
<android.app.DialogFragment: void dismiss()>
<android.media.projection.IMediaProjection: void start(android.media.projection.IMediaProjectionCallback)>
<com.android.ims.internal.IImsCallSessionListener: void callSessionUpdated(com.android.ims.internal.IImsCallSession,com.android.ims.ImsCallProfile)>
<android.content.ContentResolver: void releasePersistableUriPermission(android.net.Uri,int)>
<android.hardware.camera2.utils.ArrayUtils: boolean contains(int[],int)>
<android.renderscript.Byte2: byte length()>
<android.graphics.drawable.ClipDrawable: boolean getPadding(android.graphics.Rect)>
<android.net.NetworkRequest.Builder: android.net.NetworkRequest.Builder addTransportType(int)>
<android.opengl.GLES31Ext: void glDebugMessageInsertKHR(int,int,int,int,java.lang.String)>
<com.android.internal.util.StateMachine: android.os.Message obtainMessage()>
<android.hardware.location.GeofenceHardwareImpl: int[] getMonitoringTypes()>
<android.text.style.TtsSpan.SemioticClassBuilder: android.text.style.TtsSpan.SemioticClassBuilder setCase(java.lang.String)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofMultiInt(java.lang.String,android.graphics.Path)>
<android.app.admin.DevicePolicyManager: boolean setDeviceOwner(java.lang.String)>
<android.database.sqlite.SQLiteConnectionPool: void reconfigure(android.database.sqlite.SQLiteDatabaseConfiguration)>
<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName(long)>
<android.printservice.PrintServiceInfo: java.lang.String getAddPrintersActivityName()>
<android.os.BatteryManager: int getIntProperty(int)>
<android.os.Message: java.lang.String toString()>
<android.hardware.hdmi.IHdmiControlService: void setHdmiRecordListener(android.hardware.hdmi.IHdmiRecordListener)>
<android.widget.VideoView: int getBufferPercentage()>
<android.text.HtmlToSpannedConverter: void setDocumentLocator(org.xml.sax.Locator)>
<android.telephony.PhoneNumberUtils: boolean isPotentialEmergencyNumber(java.lang.String)>
<android.util.Base64InputStream: long skip(long)>
<android.view.inputmethod.BaseInputConnection: boolean setComposingRegion(int,int)>
<android.location.LocationRequest: android.location.LocationRequest setInterval(long)>
<android.util.LongSparseLongArray: android.util.LongSparseLongArray clone()>
<android.location.ILocationListener: void onProviderEnabled(java.lang.String)>
<android.media.RemoteControlClient: void registerWithSession(android.media.session.MediaSessionLegacyHelper)>
<android.net.LocalSocket: void setSendBufferSize(int)>
<android.preference.Preference.OnPreferenceChangeInternalListener: void onPreferenceHierarchyChange(android.preference.Preference)>
<android.media.IAudioService: boolean registerAudioPolicy(android.media.audiopolicy.AudioPolicyConfig,android.os.IBinder)>
<com.android.internal.widget.AccessibleDateAnimator: void setDateMillis(long)>
<android.graphics.drawable.NinePatchDrawable: boolean onStateChange(int[])>
<android.graphics.NinePatch: void draw(android.graphics.Canvas,android.graphics.RectF)>
<android.telecom.Connection: void setPostDialWait(java.lang.String)>
<android.media.tv.TvStreamConfig: int getGeneration()>
<android.media.WebVttRenderingWidget: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.content.IContentService: boolean getSyncAutomaticallyAsUser(android.accounts.Account,java.lang.String,int)>
<android.media.AudioService: void setStreamVolume(int,int,int,java.lang.String)>
<android.widget.GridView: boolean onKeyUp(int,android.view.KeyEvent)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture removeAccount(android.accounts.Account,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.app.Activity: void recreate()>
<android.animation.AnimatorInflater: android.animation.Animator loadAnimator(android.content.res.Resources,android.content.res.Resources.Theme,int,float)>
<android.media.MediaCodec: android.media.Image getOutputImage(int)>
<android.view.inputmethod.SparseRectFArray.SparseRectFArrayBuilder: android.view.inputmethod.SparseRectFArray build()>
<android.view.accessibility.AccessibilityNodeInfo: boolean isClickable()>
<android.widget.VideoView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.content.IContentProvider: java.lang.String getType(android.net.Uri)>
<android.media.tv.TvInputService.Session: void onOverlayViewSizeChanged(int,int)>
<android.opengl.GLES11Ext: void glFrustumxOES(int,int,int,int,int,int)>
<android.telecom.ParcelableCall: java.lang.String getParentCallId()>
<android.content.SharedPreferences.Editor: android.content.SharedPreferences.Editor putBoolean(java.lang.String,boolean)>
<android.content.Intent: android.content.Intent putIntegerArrayListExtra(java.lang.String,java.util.ArrayList)>
<android.text.style.TtsSpan: int getSpanTypeId()>
<android.media.MediaRouter.Callback: void onRouteRemoved(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>
<android.hardware.camera2.impl.CameraDeviceImpl: boolean configureOutputsChecked(java.util.List)>
<android.view.accessibility.AccessibilityNodeInfo: boolean isEnabled()>
<android.content.Context: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)>
<android.service.voice.IVoiceInteractionSessionService: void newSession(android.os.IBinder,android.os.Bundle)>
<android.media.RemoteControlClient: void setPlaybackState(int,long,float)>
<android.media.MediaMetadataEditor: android.media.MediaMetadataEditor putLong(int,long)>
<android.media.Metadata: long getLong(int)>
<android.content.Context: java.io.File[] getExternalCacheDirs()>
<android.content.RestrictionEntry: int getType()>
<android.media.projection.MediaProjectionManager: void stopActiveProjection()>
<com.android.internal.os.BatteryStatsImpl.Uid.Pkg.Serv: void onTimeStarted(long,long,long)>
<android.renderscript.Byte4: void sub(byte)>
<android.filterpacks.imageproc.FixedRotationFilter: void setupPorts()>
<android.view.ViewGroup: void dispatchFreezeSelfOnly(android.util.SparseArray)>
<android.graphics.Matrix: boolean postTranslate(float,float)>
<android.widget.AbsSeekBar: void drawableHotspotChanged(float,float)>
<android.app.ActivityManagerProxy: java.util.List getRunningAppProcesses()>
<com.android.internal.os.BatteryStatsImpl: long getHistoryBaseTime()>
<android.net.nsd.DnsSdTxtRecord: int hashCode()>
<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>
<android.net.ProxyInfo: java.net.Proxy makeProxy()>
<android.telecom.Call: void reject(boolean,java.lang.String)>
<android.graphics.drawable.GradientDrawable: void applyTheme(android.content.res.Resources.Theme)>
<android.widget.MultiAutoCompleteTextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.media.MediaPlayer: int getSelectedTrack(int)>
<android.widget.AnalogClock: void onDetachedFromWindow()>
<android.net.nsd.NsdManager.RegistrationListener: void onRegistrationFailed(android.net.nsd.NsdServiceInfo,int)>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getUrlAndSpaceLegal()>
<android.renderscript.Byte2: android.renderscript.Byte2 mul(android.renderscript.Byte2,android.renderscript.Byte2)>
<android.hardware.camera2.impl.CameraCaptureSessionImpl: void stopRepeating()>
<android.view.inputmethod.InputMethodSession: void displayCompletions(android.view.inputmethod.CompletionInfo[])>
<android.widget.ToggleButton: java.lang.CharSequence getTextOff()>
<com.android.internal.telephony.IPhoneSubInfo: java.lang.String[] getIsimImpu()>
<android.graphics.Typeface: android.graphics.Typeface defaultFromStyle(int)>
<android.bluetooth.BluetoothSocket: void close()>
<android.widget.DatePicker.DatePickerDelegate: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.content.Loader: boolean cancelLoad()>
<android.app.usage.ConfigurationStats: long getLastTimeActive()>
<android.text.style.TtsSpan.SemioticClassBuilder: android.text.style.TtsSpan.SemioticClassBuilder setAnimacy(java.lang.String)>
<android.content.Context: java.lang.String[] fileList()>
<com.android.internal.widget.LockPatternUtils: void setOwnerInfo(java.lang.String,int)>
<com.android.internal.widget.ActionBarView: void setWindowCallback(android.view.Window.Callback)>
<android.app.IApplicationThread: void scheduleCrash(java.lang.String)>
<android.text.method.MetaKeyKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>
<android.net.IConnectivityManager: android.net.NetworkQuotaInfo getActiveNetworkQuotaInfo()>
<android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings.Builder setTxPowerLevel(int)>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setVisibleInDownloadsUi(boolean)>
<android.app.job.JobInfo: long getMinLatencyMillis()>
<android.content.Context: void removeStickyBroadcast(android.content.Intent)>
<android.widget.AutoCompleteTextView: void setOnClickListener(android.view.View.OnClickListener)>
<android.os.CancellationSignal: void cancel()>
<android.os.Parcel: void writeValue(java.lang.Object)>
<android.telecom.Conference: android.telecom.Conference removeListener(android.telecom.Conference.Listener)>
<android.text.HtmlToSpannedConverter: void characters(char[],int,int)>
<com.android.internal.os.BatteryStatsImpl.SamplingTimer: void updateCurrentReportedCount(int)>
<android.telephony.VoLteServiceState: int hashCode()>
<android.widget.ScrollView: void onLayout(boolean,int,int,int,int)>
<android.renderscript.Long4: long dotProduct(android.renderscript.Long4)>
<android.location.LocationRequest: android.location.LocationRequest createFromDeprecatedProvider(java.lang.String,long,float,boolean)>
<android.os.BatteryStats: long getHistoryBaseTime()>
<android.hardware.camera2.legacy.RequestHandlerThread: android.os.Handler waitAndGetHandler()>
<android.bluetooth.IBluetoothHeadsetClient: boolean acceptIncomingConnect(android.bluetooth.BluetoothDevice)>
<android.transition.ChangeTransform: void setReparent(boolean)>
<android.graphics.drawable.NinePatchDrawable: void setAutoMirrored(boolean)>
<android.media.TtmlRenderer: android.media.SubtitleTrack createTrack(android.media.MediaFormat)>
<android.widget.TabWidget: void setRightStripDrawable(android.graphics.drawable.Drawable)>
<android.app.IActivityManager: boolean killPids(int[],java.lang.String,boolean)>
<android.database.MergeCursor: long getLong(int)>
<android.net.SntpClient: long getNtpTimeReference()>
<android.app.Dialog: void onCreate(android.os.Bundle)>
<android.app.ActivityManagerProxy: void requestBugReport()>
<com.android.internal.view.IInputConnectionWrapper: void reportFullscreenMode(boolean)>
<android.bluetooth.IBluetoothGattServerCallback: void onNotificationSent(java.lang.String,int)>
<android.util.LongSparseArray: void put(long,java.lang.Object)>
<android.view.MotionEvent: long getHistoricalEventTimeNano(int)>
<android.app.job.JobService: void jobFinished(android.app.job.JobParameters,boolean)>
<android.hardware.camera2.marshal.MarshalRegistry: android.hardware.camera2.marshal.Marshaler getMarshaler(android.hardware.camera2.utils.TypeReference,int)>
<android.bluetooth.IBluetoothHeadset: boolean disconnectAudio()>
<android.os.MemoryFile: boolean isPurgingAllowed()>
<android.graphics.Paint: float measureText(java.lang.String)>
<android.renderscript.Int2: int dotProduct(android.renderscript.Int2)>
<android.database.sqlite.SQLiteClosable: void acquireReference()>
<android.text.format.Time: void set(long)>
<android.media.session.MediaController: void <init>(android.content.Context,android.media.session.ISessionController)>
<android.graphics.Path: void arcTo(android.graphics.RectF,float,float,boolean)>
<android.view.InputEvent: void setSource(int)>
<android.renderscript.Program.BaseProgramBuilder: android.renderscript.Program.BaseProgramBuilder setShader(android.content.res.Resources,int)>
<android.widget.Toolbar: android.graphics.drawable.Drawable getLogo()>
<android.telecom.InCallService.VideoCall: void setDisplaySurface(android.view.Surface)>
<android.opengl.GLES11Ext: void glLineWidthxOES(int)>
<android.widget.RelativeLayout: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.provider.ContactsContract.QuickContact: void showQuickContact(android.content.Context,android.view.View,android.net.Uri,int,java.lang.String[])>
<android.filterpacks.imageproc.SaturateFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>
<android.renderscript.Int3: void mod(int)>
<android.media.tv.ITvInputManager: java.util.List getBlockedRatings(int)>
<android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance(boolean,boolean)>
<android.telephony.CellIdentityWcdma: void <init>(int,int,int,int,int)>
<android.widget.NumberPicker.OnValueChangeListener: void onValueChange(android.widget.NumberPicker,int,int)>
<android.graphics.drawable.ScaleDrawable: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>
<com.android.internal.telephony.ISms: boolean disableCellBroadcastForSubscriber(long,int)>
<com.android.internal.os.BatteryStatsImpl.Uid: void noteResetAudioLocked(long)>
<android.media.WebVttCueListener: void onRegionParsed(android.media.TextTrackRegion)>
<android.text.Layout: int getLineAscent(int)>
<android.text.style.SuggestionSpan: java.lang.String[] getSuggestions()>
<com.android.internal.app.WindowDecorActionBar: void setHideOffset(int)>
<android.net.IConnectivityManager: int getLastTetherError(java.lang.String)>
<android.renderscript.Short2: void mul(short)>
<android.gesture.GestureOverlayView: float getGestureStrokeWidth()>
<android.os.ServiceManagerProxy: android.os.IBinder checkService(java.lang.String)>
<android.renderscript.Float4: void <init>(float,float,float,float)>
<android.app.Instrumentation: void startPerformanceSnapshot()>
<android.filterpacks.imageproc.DuotoneFilter: void process(android.filterfw.core.FilterContext)>
<android.os.BatteryStats: int getPhoneDataConnectionCount(int,int)>
<android.view.IRotationWatcher: void onRotationChanged(int)>
<android.view.LayoutInflater: void setFactory(android.view.LayoutInflater.Factory)>
<android.preference.SeekBarPreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.net.IConnectivityManager: java.lang.String[] getTetheredIfaces()>
<android.hardware.SensorEventListener: void onAccuracyChanged(android.hardware.Sensor,int)>
<android.text.Layout: float getSpacingAdd()>
<com.android.internal.textservice.ISpellCheckerSessionListener: void onGetSentenceSuggestions(android.view.textservice.SentenceSuggestionsInfo[])>
<android.view.ViewDebug: java.lang.Object invokeViewMethod(android.view.View,java.lang.reflect.Method,java.lang.Object[])>
<com.android.internal.telecom.IVideoCallback: void receiveSessionModifyResponse(int,android.telecom.VideoProfile,android.telecom.VideoProfile)>
<android.content.Context: android.content.res.AssetManager getAssets()>
<android.media.tv.ITvInputClient: void onSessionReleased(int)>
<android.view.WindowManagerGlobal: android.view.IWindowManager getWindowManagerService()>
<android.view.InputDevice: android.hardware.input.InputDeviceIdentifier getIdentifier()>
<android.renderscript.Byte2: byte dotProduct(android.renderscript.Byte2,android.renderscript.Byte2)>
<android.media.MediaRecorder: void setOutputFormat(int)>
<android.filterfw.core.NativeFrame: android.graphics.Bitmap getBitmap()>
<android.util.NtpTrustedTime: boolean forceRefresh()>
<android.transition.Slide.CalculateSlide: float getGoneY(android.view.ViewGroup,android.view.View)>
<android.graphics.Paint: float getTextRunAdvances(java.lang.String,int,int,int,int,boolean,float[],int)>
<android.security.KeyStore: android.security.KeyStore.State state()>
<android.opengl.GLES11Ext: void glPointParameterxvOES(int,java.nio.IntBuffer)>
<android.hardware.camera2.legacy.RequestHolder: boolean isRepeating()>
<android.bluetooth.BluetoothServerSocket: int getChannel()>
<android.content.pm.PackageParser.Package: void <init>(java.lang.String)>
<android.view.accessibility.AccessibilityWindowInfo: void recycle()>
<android.os.AsyncTask: void publishProgress(java.lang.Object[])>
<android.widget.RadioGroup: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>
<com.android.internal.textservice.ITextServicesManager: android.view.textservice.SpellCheckerInfo getCurrentSpellChecker(java.lang.String)>
<android.hardware.hdmi.HdmiClient: android.hardware.hdmi.HdmiDeviceInfo getActiveSource()>
<android.view.View: boolean isLaidOut()>
<android.hardware.usb.UsbRequest: boolean initialize(android.hardware.usb.UsbDeviceConnection,android.hardware.usb.UsbEndpoint)>
<android.net.SamplingDataTracker: long getSampledTxPacketErrorCount()>
<android.appwidget.AppWidgetHostView: android.appwidget.AppWidgetProviderInfo getAppWidgetInfo()>
<android.app.UiAutomation.AccessibilityEventFilter: boolean accept(android.view.accessibility.AccessibilityEvent)>
<android.content.res.TypedArray: float getFloat(int,float)>
<android.net.Network: java.net.URLConnection openConnection(java.net.URL)>
<android.graphics.drawable.Drawable: int getIntrinsicHeight()>
<android.os.UserHandle: boolean isApp(int)>
<android.os.Debug.MemoryInfo: int getOtherPss(int)>
<android.widget.DialerFilter: java.lang.CharSequence getFilterText()>
<android.net.Uri: boolean equals(java.lang.Object)>
<android.view.View: void getHitRect(android.graphics.Rect)>
<android.content.ClipData: android.content.ClipData newPlainText(java.lang.CharSequence,java.lang.CharSequence)>
<android.media.AudioManager: java.lang.String getParameters(java.lang.String)>
<android.telephony.TelephonyManager: void setCellInfoListRate(int)>
<android.renderscript.Short4: android.renderscript.Short4 mod(android.renderscript.Short4,android.renderscript.Short4)>
<android.os.Debug: void printLoadedClasses(int)>
<android.filterpacks.imageproc.DrawRectFilter: void process(android.filterfw.core.FilterContext)>
<android.widget.TextView: void setTextKeepState(java.lang.CharSequence,android.widget.TextView.BufferType)>
<android.content.pm.FeatureInfo: int describeContents()>
<android.widget.PopupWindow: boolean isAboveAnchor()>
<android.view.View: int getLeftPaddingOffset()>
<android.widget.TableLayout: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>
<android.preference.TwoStatePreference: void setSummaryOff(int)>
<android.view.animation.GridLayoutAnimationController: boolean willOverlap()>
<android.widget.TabWidget: void setEnabled(boolean)>
<com.android.internal.util.StateMachine: void setLogRecSize(int)>
<com.android.internal.os.PowerProfile: double getAveragePower(java.lang.String)>
<com.android.internal.widget.SubtitleView: void setText(int)>
<com.android.internal.app.IBatteryStats: void noteResetAudio()>
<android.view.DragEvent: android.view.DragEvent obtain(int,float,float,java.lang.Object,android.content.ClipDescription,android.content.ClipData,boolean)>
<android.hardware.camera2.params.RggbChannelVector: void copyTo(float[],int)>
<android.net.wifi.p2p.WifiP2pGroup: boolean isGroupOwner()>
<android.media.audiofx.AudioEffect: void <init>(java.util.UUID,java.util.UUID,int,int)>
<android.view.animation.Animation: int getRepeatMode()>
<android.filterfw.core.SyncRunner: void stop()>
<android.telecom.Phone.Listener: void onAudioStateChanged(android.telecom.Phone,android.telecom.AudioState)>
<android.view.Gravity: void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect)>
<android.media.AudioManager: boolean isSilentMode()>
<android.text.style.TextAppearanceSpan: void <init>(java.lang.String,int,int,android.content.res.ColorStateList,android.content.res.ColorStateList)>
<android.content.Context: android.content.Context getApplicationContext()>
<android.app.trust.TrustManager: void unregisterTrustListener(android.app.trust.TrustManager.TrustListener)>
<android.content.pm.ComponentInfo: void <init>(android.os.Parcel)>
<android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)>
<com.android.ims.internal.IImsService: boolean isOpened(int)>
<android.content.pm.IPackageDataObserver: void onRemoveCompleted(java.lang.String,boolean)>
<android.app.backup.IBackupManager: void dataChanged(java.lang.String)>
<android.renderscript.FieldPacker: android.renderscript.Matrix3f subMatrix3f()>
<com.android.internal.widget.DecorToolbar: java.lang.CharSequence getSubtitle()>
<android.telecom.AudioState: boolean equals(java.lang.Object)>
<android.media.MediaMetadataEditor: android.media.MediaMetadataEditor putBitmap(int,android.graphics.Bitmap)>
<android.media.TtmlTrack: void updateView(java.util.Vector)>
<android.widget.PopupWindow: void setInputMethodMode(int)>
<android.os.INetworkManagementService: void stopTethering()>
<android.telephony.SubscriptionManager: int getSlotId(long)>
<android.speech.tts.TtsEngines: java.lang.String[] toOldLocaleStringFormat(java.util.Locale)>
<com.android.internal.view.IInputConnectionWrapper: void getExtractedText(android.view.inputmethod.ExtractedTextRequest,int,int,com.android.internal.view.IInputContextCallback)>
<com.android.internal.app.ToolbarActionBar: void addTab(android.app.ActionBar.Tab,boolean)>
<com.android.internal.policy.IPolicy: android.view.Window makeNewWindow(android.content.Context)>
<android.view.GestureDetector.OnDoubleTapListener: boolean onDoubleTapEvent(android.view.MotionEvent)>
<android.widget.ShareActionProvider: void onPrepareSubMenu(android.view.SubMenu)>
<android.view.MotionEvent: float getToolMajor(int)>
<android.widget.BaseAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>
<android.text.TextUtils: java.lang.CharSequence commaEllipsize(java.lang.CharSequence,android.text.TextPaint,float,java.lang.String,java.lang.String)>
<android.widget.TimePicker: void onRestoreInstanceState(android.os.Parcelable)>
<android.hardware.display.DisplayManagerInternal.DisplayPowerRequest: java.lang.String toString()>
<android.content.MutableContextWrapper: void <init>(android.content.Context)>
<com.android.internal.view.menu.MenuBuilder: void removeItem(int)>
<android.app.VoiceInteractor.Request: void onAttached(android.app.Activity)>
<android.text.Editable: android.text.Editable append(java.lang.CharSequence)>
<android.net.http.RequestHandle: java.lang.String computeBasicAuthResponse(java.lang.String,java.lang.String)>
<android.telephony.PhoneNumberUtils: java.lang.String cdmaCheckAndProcessPlusCodeForSms(java.lang.String)>
<android.mtp.MtpDevice: void <init>(android.hardware.usb.UsbDevice)>
<android.media.AudioService: boolean isHdmiSystemAudioSupported()>
<android.graphics.drawable.GradientDrawable: boolean canApplyTheme()>
<android.hardware.usb.UsbEndpoint: void <init>(int,int,int,int)>
<android.opengl.GLSurfaceView: int getDebugFlags()>
<android.widget.CheckBox: void <init>(android.content.Context)>
<com.android.internal.telecom.ITelecomService: java.util.List getSimCallManagers()>
<android.accessibilityservice.AccessibilityService: void setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)>
<android.widget.AutoCompleteTextView: void setDropDownHorizontalOffset(int)>
<android.view.ViewGroup: void onNestedScrollAccepted(android.view.View,android.view.View,int)>
<android.media.session.MediaController.TransportControls: void fastForward()>
<android.renderscript.Sampler: android.renderscript.Sampler WRAP_LINEAR(android.renderscript.RenderScript)>
<android.drm.DrmInfo: java.lang.String getMimeType()>
<android.widget.LinearLayout: void setOrientation(int)>
<android.content.pm.PackageInstaller.SessionInfo: boolean isActive()>
<com.android.internal.app.ToolbarActionBar: android.view.ActionMode startActionMode(android.view.ActionMode.Callback)>
<android.bluetooth.BluetoothSocket: android.bluetooth.BluetoothDevice getRemoteDevice()>
<android.telecom.Call: java.util.List getCannedTextResponses()>
<android.app.Activity: void onTitleChanged(java.lang.CharSequence,int)>
<com.android.internal.os.BatteryStatsImpl: int getDischargeAmountScreenOffSinceCharge()>
<android.app.Notification: boolean isGroupChild()>
<com.android.internal.util.ArrayUtils: int[] newUnpaddedIntArray(int)>
<com.android.internal.os.ProcessCpuTracker: void <init>(boolean)>
<android.content.pm.VerifierInfo: int describeContents()>
<android.os.Message: void sendToTarget()>
<android.renderscript.Byte2: void setValues(byte,byte)>
<android.hardware.soundtrigger.SoundTrigger.SoundModelEvent: int hashCode()>
<android.opengl.GLES10: void glMaterialxv(int,int,int[],int)>
<android.opengl.EGL14: boolean eglGetConfigAttrib(android.opengl.EGLDisplay,android.opengl.EGLConfig,int,int[],int)>
<android.net.WifiKey: void writeToParcel(android.os.Parcel,int)>
<android.service.wallpaper.WallpaperService.Engine: void setTouchEventsEnabled(boolean)>
<android.app.StatusBarManager: void setIconVisibility(java.lang.String,boolean)>
<android.renderscript.Long3: void div(long)>
<android.hardware.location.ActivityChangedEvent: void <init>(android.hardware.location.ActivityRecognitionEvent[])>
<android.view.inputmethod.InputMethodInfo: android.view.inputmethod.InputMethodSubtype getSubtypeAt(int)>
<android.widget.EdgeEffect: void onAbsorb(int)>
<android.app.ActivityManagerProxy: boolean isImmersive(android.os.IBinder)>
<com.android.internal.widget.LockPatternUtils: void setPowerButtonInstantlyLocks(boolean)>
<android.telecom.Conference.Listener: void onDisconnected(android.telecom.Conference,android.telecom.DisconnectCause)>
<android.view.WindowCallbackWrapper: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>
<android.widget.ImageView: void setXfermode(android.graphics.Xfermode)>
<com.android.internal.view.menu.ActionMenuItemView: boolean onLongClick(android.view.View)>
<android.hardware.SensorManager: boolean flush(android.hardware.SensorEventListener)>
<android.app.admin.IDevicePolicyManager: void setActivePasswordState(int,int,int,int,int,int,int,int,int)>
<android.database.DataSetObserver: void onChanged()>
<android.graphics.drawable.ColorDrawable: void getOutline(android.graphics.Outline)>
<android.content.res.ResourcesKey: java.lang.String toString()>
<android.os.BatteryStats.Uid: void noteFullWifiLockReleasedLocked(long)>
<android.media.AudioManager: boolean isSpeakerphoneOn()>
<android.provider.SearchIndexableResource: void <init>(android.content.Context)>
<android.widget.HorizontalScrollView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.media.MediaExtractor: int getSampleFlags()>
<android.transition.TransitionSet: android.transition.TransitionSet addTarget(java.lang.String)>
<com.google.android.gles_jni.GLImpl: void glMaterialf(int,int,float)>
<android.opengl.GLES20: void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)>
<android.view.animation.AnticipateInterpolator: long createNativeInterpolator()>
<android.os.FileUtils: boolean deleteContents(java.io.File)>
<com.android.internal.widget.ToolbarWidgetWrapper: void setNavigationIcon(android.graphics.drawable.Drawable)>
<android.util.SparseIntArray: int keyAt(int)>
<android.widget.TextView: int getMaxHeight()>
<android.widget.SearchView.SearchAutoComplete: boolean enoughToFilter()>
<android.preference.EditTextPreference: android.widget.EditText getEditText()>
<android.content.pm.PackageInstaller.Session: java.lang.String[] getNames()>
<android.app.backup.RestoreSet: void writeToParcel(android.os.Parcel,int)>
<android.graphics.drawable.BitmapDrawable: boolean isAutoMirrored()>
<android.graphics.Outline: void setRoundRect(android.graphics.Rect,float)>
<android.widget.ZoomControls: void setOnZoomInClickListener(android.view.View.OnClickListener)>
<android.view.Window: boolean getSharedElementsUseOverlay()>
<android.net.nsd.NsdServiceInfo: java.util.Map getAttributes()>
<android.renderscript.Byte3: void div(android.renderscript.Byte3)>
<com.android.internal.view.menu.IconMenuView: int getWindowAnimations()>
<android.graphics.Path: boolean isEmpty()>
<android.renderscript.Double3: void setAt(int,double)>
<android.graphics.drawable.Drawable: boolean isVisible()>
<android.hardware.usb.UsbDeviceConnection: boolean releaseInterface(android.hardware.usb.UsbInterface)>
<com.android.internal.view.menu.BaseMenuPresenter: void updateMenuView(boolean)>
<android.app.backup.BackupAgent: void onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>
<android.view.MotionEvent: void setSource(int)>
<android.database.sqlite.SQLiteGlobal: java.lang.String getWALSyncMode()>
<android.app.Activity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)>
<android.app.ActivityManagerProxy: void updateConfiguration(android.content.res.Configuration)>
<android.hardware.location.IGeofenceHardware: int getStatusOfMonitoringType(int)>
<android.print.PrinterCapabilitiesInfo: java.util.List getMediaSizes()>
<android.media.session.PlaybackState: float getPlaybackSpeed()>
<android.hardware.camera2.CameraAccessException: void <init>(int,java.lang.String,java.lang.Throwable)>
<android.widget.DatePicker.DatePickerDelegate: android.widget.CalendarView getCalendarView()>
<android.net.RssiCurve: boolean equals(java.lang.Object)>
<com.android.internal.view.menu.IconMenuPresenter: void restoreHierarchyState(android.os.Bundle)>
<android.renderscript.ProgramVertexFixedFunction.Constants: void destroy()>
<android.widget.RatingBar: void <init>(android.content.Context)>
<android.app.Service: void stopForeground(boolean)>
<android.media.SoundPool: int load(java.lang.String,int)>
<android.app.job.JobParameters: int getJobId()>
<android.text.SpannableStringBuilder: int getSpanStart(java.lang.Object)>
<android.text.LoginFilter.UsernameFilterGeneric: boolean isAllowed(char)>
<android.view.SurfaceView: boolean setFrame(int,int,int,int)>
<android.text.method.MultiTapKeyListener: void onSpanChanged(android.text.Spannable,java.lang.Object,int,int,int,int)>
<android.bluetooth.BluetoothA2dpSink: java.lang.String stateToString(int)>
<android.content.ContentProvider: android.net.Uri canonicalize(android.net.Uri)>
<android.renderscript.Short4: void sub(android.renderscript.Short4)>
<android.renderscript.Short3: short dotProduct(android.renderscript.Short3,android.renderscript.Short3)>
<android.widget.ProgressBar: void setIndeterminate(boolean)>
<com.android.internal.util.DumpUtils.Dump: void dump(java.io.PrintWriter)>
<android.widget.ScrollView: void fling(int)>
<android.widget.AdapterViewFlipper: void fyiWillBeAdvancedByHostKThx()>
<android.view.Window: boolean isFloating()>
<android.view.inputmethod.InputMethodManager: void toggleSoftInputFromWindow(android.os.IBinder,int,int)>
<android.preference.TwoStatePreference: java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int)>
<android.media.MediaRouter.RouteInfo: java.lang.String toString()>
<android.os.BaseBundle: int[] getIntArray(java.lang.String)>
<android.widget.TextView: void setError(java.lang.CharSequence,android.graphics.drawable.Drawable)>
<android.widget.AbsSeekBar: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.text.method.PasswordTransformationMethod: void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect)>
<android.view.View: void announceForAccessibility(java.lang.CharSequence)>
<android.os.CancellationSignal: void setRemote(android.os.ICancellationSignal)>
<android.app.Activity: java.lang.String getLocalClassName()>
<com.android.internal.os.BatteryStatsImpl.Uid.Proc: void addSpeedStepTimes(long[])>
<android.database.sqlite.SQLiteConnection: void onCancel()>
<android.content.Context: int checkPermission(java.lang.String,int,int)>
<android.content.pm.LabeledIntent: void readFromParcel(android.os.Parcel)>
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse.Status: java.lang.String toString(int)>
<android.media.RemoteController: android.media.RemoteController.MetadataEditor editMetadata()>
<android.animation.Animator.AnimatorPauseListener: void onAnimationPause(android.animation.Animator)>
<android.animation.AnimatorSet: void start()>
<android.content.ContentValues: int describeContents()>
<android.os.Debug: void dumpNativeBacktraceToFile(int,java.lang.String)>
<android.renderscript.Font: android.renderscript.Font createFromResource(android.renderscript.RenderScript,android.content.res.Resources,int,float)>
<android.app.AlarmManager: void setRepeating(int,long,long,android.app.PendingIntent)>
<com.android.internal.app.ResolverActivity: void onIntentSelected(android.content.pm.ResolveInfo,android.content.Intent,boolean)>
<android.provider.CalendarContract.CalendarAlerts: void rescheduleMissedAlarms(android.content.ContentResolver,android.content.Context,android.app.AlarmManager)>
<android.net.NetworkPolicyManager: long computeLastCycleBoundary(long,android.net.NetworkPolicy)>
<android.media.VolumeProvider: int getVolumeControl()>
<android.opengl.GLES11Ext: void glOrthofOES(float,float,float,float,float,float)>
<android.view.accessibility.AccessibilityRecord: java.lang.String toString()>
<android.net.http.SslCertificate: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.opengl.GLES11: void glClipPlanex(int,int[],int)>
<android.os.Debug: void dumpReferenceTables()>
<android.media.ClosedCaptionRenderer: boolean supports(android.media.MediaFormat)>
<android.media.AudioService: void <init>(android.content.Context)>
<android.net.http.AndroidHttpClientConnection: boolean isOpen()>
<android.util.ArrayMap: java.util.Set keySet()>
<android.widget.ExpandableListView: long getSelectedPosition()>
<android.media.MediaCodecList: int getCodecCount()>
<android.view.View: boolean showContextMenu()>
<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>
<android.bluetooth.BluetoothUuid: int getServiceIdentifierFromParcelUuid(android.os.ParcelUuid)>
<android.bluetooth.IBluetooth: boolean fetchRemoteMasInstances(android.bluetooth.BluetoothDevice)>
<android.graphics.drawable.TransitionDrawable: void startTransition(int)>
<android.widget.MultiAutoCompleteTextView.CommaTokenizer: java.lang.CharSequence terminateToken(java.lang.CharSequence)>
<android.app.ActionBar: void setDefaultDisplayHomeAsUpEnabled(boolean)>
<android.text.method.MetaKeyKeyListener: void clearMetaKeyState(android.view.View,android.text.Editable,int)>
<android.hardware.camera2.params.StreamConfigurationMap: android.util.Size[] getInputSizes(int)>
<android.app.backup.AbsoluteFileBackupHelper: void <init>(android.content.Context,java.lang.String[])>
<android.opengl.GLES20: void glVertexAttrib3fv(int,java.nio.FloatBuffer)>
<android.content.CursorLoader: void onReset()>
<android.widget.TimePicker.TimePickerDelegate: int getBaseline()>
<android.media.session.MediaSession: void release()>
<android.app.IApplicationThread: void scheduleSendResult(android.os.IBinder,java.util.List)>
<android.animation.ObjectAnimator: void setFloatValues(float[])>
<android.os.UserHandle: int describeContents()>
<com.android.internal.app.WindowDecorActionBar: boolean collapseActionView()>
<android.transition.Slide: void setSlideEdge(int)>
<android.widget.ExpandableListAdapter: void onGroupExpanded(int)>
<android.os.storage.IMountService: int destroySecureContainer(java.lang.String,boolean)>
<android.widget.TabHost.TabSpec: android.widget.TabHost.TabSpec setContent(android.widget.TabHost.TabContentFactory)>
<android.media.TtmlUtils: java.lang.String applySpacePolicy(java.lang.String,boolean)>
<android.content.pm.PackageInstaller.SessionCallback: void onCreated(int)>
<android.opengl.GLES20: void glGetShaderPrecisionFormat(int,int,int[],int,int[],int)>
<android.view.View: float getTransitionAlpha()>
<android.text.style.ForegroundColorSpan: int describeContents()>
<android.alsa.AlsaCardsParser.AlsaCardRecord: java.lang.String textFormat()>
<android.widget.CalendarView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.webkit.WebViewFactory: void prepareWebViewInSystemServer()>
<android.app.Fragment: void startActivity(android.content.Intent)>
<com.android.ims.internal.IImsService: com.android.ims.internal.IImsConfig getConfigInterface()>
<android.widget.SimpleCursorAdapter: void setStringConversionColumn(int)>
<android.media.AudioManager: int listAudioPatches(java.util.ArrayList)>
<android.view.MotionEvent: float getHistoricalX(int,int)>
<android.media.RingtoneManager: android.media.Ringtone getRingtone(android.content.Context,android.net.Uri)>
<android.service.voice.VoiceInteractionSession: void onTaskStarted(android.content.Intent,int)>
<android.widget.PopupWindow: void update(int,int)>
<android.util.DayOfMonthCursor: boolean up()>
<android.content.ComponentName: void writeToParcel(android.os.Parcel,int)>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest: android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest newInstance()>
<android.telephony.TelephonyManager: boolean nvResetConfig(int)>
<com.google.android.gles_jni.GLImpl: void glGetTexParameterfv(int,int,java.nio.FloatBuffer)>
<android.content.IClipboard: void removePrimaryClipChangedListener(android.content.IOnPrimaryClipChangedListener)>
<com.android.internal.os.BatteryStatsImpl: int getDischargeStartLevelLocked()>
<android.os.BatteryStats.Counter: int getCountLocked(int)>
<com.android.internal.widget.SwipeDismissLayout: void cancel()>
<android.graphics.drawable.NinePatchDrawable: void setTargetDensity(android.util.DisplayMetrics)>
<android.os.PerformanceCollector: void startTiming(java.lang.String)>
<android.filterfw.format.PrimitiveFormat: android.filterfw.core.MutableFrameFormat createByteFormat(int,int)>
<android.os.MemoryFile: java.io.InputStream getInputStream()>
<android.widget.RemoteViewsListAdapter: void <init>(android.content.Context,java.util.ArrayList,int)>
<com.android.internal.widget.AbsActionBarView: int measureChildView(android.view.View,int,int,int)>
<android.view.View.OnDragListener: boolean onDrag(android.view.View,android.view.DragEvent)>
<android.view.View: int getFadeTop(boolean)>
<android.hardware.camera2.legacy.ParameterUtils: float getMaxZoomRatio(android.hardware.Camera.Parameters)>
<android.media.effect.EffectContext: android.media.effect.EffectContext createWithCurrentGlContext()>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildQuery(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.renderscript.Byte4: void div(android.renderscript.Byte4)>
<android.view.accessibility.AccessibilityWindowInfo: void setType(int)>
<android.speech.srec.Recognizer.Grammar: void destroy()>
<android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>
<android.media.AudioTrack: int getPlayState()>
<android.telecom.Connection.VideoProvider: com.android.internal.telecom.IVideoProvider getInterface()>
<android.app.IntentService: void <init>(java.lang.String)>
<android.telephony.TelephonyManager: int getLteOnCdmaModeStatic()>
<android.os.BinderProxy: java.lang.String getInterfaceDescriptor()>
<android.opengl.GLES30: void glVertexAttribI4iv(int,java.nio.IntBuffer)>
<android.media.JetPlayer: void setEventListener(android.media.JetPlayer.OnJetEventListener,android.os.Handler)>
<android.widget.SearchView: void onActionViewCollapsed()>
<android.graphics.Canvas: void drawPatch(android.graphics.NinePatch,android.graphics.Rect,android.graphics.Paint)>
<android.util.ArraySet: void <init>(android.util.ArraySet)>
<android.media.tv.TvInputHardwareInfo.Builder: android.media.tv.TvInputHardwareInfo.Builder hdmiPortId(int)>
<android.telephony.IccOpenLogicalChannelResponse: java.lang.String toString()>
<android.renderscript.Short2: void <init>(short,short)>
<android.renderscript.Byte4: android.renderscript.Byte4 add(android.renderscript.Byte4,byte)>
<android.widget.ListPopupWindow: void setAnchorView(android.view.View)>
<android.view.WindowManagerPolicy: boolean isTopLevelWindow(int)>
<com.android.internal.widget.ActionBarContextView: void onAnimationCancel(android.animation.Animator)>
<android.widget.CalendarView: void setUnfocusedMonthDateColor(int)>
<com.android.internal.widget.ToolbarWidgetWrapper: void dismissPopupMenus()>
<android.text.style.RelativeSizeSpan: int getSpanTypeId()>
<android.widget.NumberPicker: boolean dispatchHoverEvent(android.view.MotionEvent)>
<android.content.OperationApplicationException: void <init>(java.lang.String,java.lang.Throwable)>
<android.graphics.drawable.GradientDrawable: void setColorFilter(android.graphics.ColorFilter)>
<android.app.ActivityManager: void dumpPackageStateStatic(java.io.FileDescriptor,java.lang.String)>
<android.media.AudioRecord: void <init>(android.media.AudioAttributes,android.media.AudioFormat,int,int)>
<android.graphics.Matrix: boolean preRotate(float)>
<android.os.INetworkManagementService: void shutdown()>
<android.widget.ListView: boolean onKeyUp(int,android.view.KeyEvent)>
<android.preference.PreferenceFrameLayout: void <init>(android.content.Context)>
<android.app.ActivityManagerProxy: void killApplicationWithAppId(java.lang.String,int,java.lang.String)>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor)>
<android.content.Context: void enforceCallingPermission(java.lang.String,java.lang.String)>
<android.widget.RelativeLayout.LayoutParams: void addRule(int,int)>
<android.provider.SearchIndexablesProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<android.hardware.SensorManager: boolean registerListenerImpl(android.hardware.SensorEventListener,android.hardware.Sensor,int,android.os.Handler,int,int)>
<android.media.tv.TvInputManager.TvInputCallback: void onInputAdded(java.lang.String)>
<android.app.ActivityManagerProxy: int getTaskForActivity(android.os.IBinder,boolean)>
<android.webkit.CookieManager: boolean hasCookies(boolean)>
<android.animation.RevealAnimator: void <init>(android.view.View,int,int,float,float)>
<android.inputmethodservice.InputMethodService.InputMethodImpl: void unbindInput()>
<android.media.MediaRouter: android.media.MediaRouter.RouteInfo getSelectedRoute(int)>
<com.google.android.gles_jni.GLImpl: void glPointParameterfv(int,float[],int)>
<android.media.MediaScannerConnection: void scanFile(java.lang.String,java.lang.String)>
<com.google.android.gles_jni.GLImpl: void glGetTexParameterxv(int,int,int[],int)>
<android.text.method.ReplacementTransformationMethod: void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect)>
<android.os.ParcelFileDescriptor: void closeWithError(java.lang.String)>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setHintShowBackgroundOnly(boolean)>
<android.gesture.GestureLibrary: int getOrientationStyle()>
<android.os.Debug.InstructionCount: int globalTotal()>
<android.os.UpdateLock: void finalize()>
<android.net.wifi.WifiScanner: void stopBackgroundScan(android.net.wifi.WifiScanner.ScanListener)>
<android.graphics.Paint: float getStrokeWidth()>
<android.content.pm.PackageManager: int getPreferredActivities(java.util.List,java.util.List,java.lang.String)>
<android.content.res.AssetFileDescriptor.AutoCloseOutputStream: void write(byte[],int,int)>
<android.net.http.Headers: long getContentLength()>
<android.widget.MultiAutoCompleteTextView.Tokenizer: java.lang.CharSequence terminateToken(java.lang.CharSequence)>
<android.inputmethodservice.ExtractEditLayout: void onFinishInflate()>
<android.filterfw.core.StreamPort: void transfer(android.filterfw.core.FilterContext)>
<android.hardware.location.IFusedLocationHardware: int getSupportedBatchSize()>
<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothSocket createRfcommSocketToServiceRecord(java.util.UUID)>
<android.database.CursorWrapper: boolean isNull(int)>
<com.android.internal.util.GrowingArrayUtils: java.lang.Object[] append(java.lang.Object[],int,java.lang.Object)>
<com.android.internal.telephony.ISub: long getDefaultSubId()>
<android.text.BidiFormatter.Builder: void <init>(boolean)>
<android.hardware.location.GeofenceHardware: boolean unregisterForMonitorStateChangeCallback(int,android.hardware.location.GeofenceHardwareMonitorCallback)>
<android.renderscript.Float4: float get(int)>
<com.android.internal.widget.LockPatternUtils: void clearLock(boolean)>
<android.view.animation.Animation: boolean getFillAfter()>
<android.location.GpsMeasurement: boolean hasCodePhaseUncertaintyInChips()>
<android.graphics.PorterDuffColorFilter: void setMode(android.graphics.PorterDuff.Mode)>
<android.view.WindowId: android.view.IWindowId getTarget()>
<android.database.CursorToBulkCursorAdaptor: int requery(android.database.IContentObserver)>
<android.opengl.GLES11Ext: void glTexGeniOES(int,int,int)>
<com.google.android.gles_jni.GLImpl: void glGetClipPlanef(int,float[],int)>
<com.android.internal.view.BaseIWindow: void doneAnimating()>
<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>
<android.telecom.RemoteConnection.Callback: void onStatusHintsChanged(android.telecom.RemoteConnection,android.telecom.StatusHints)>
<android.database.sqlite.SQLiteDatabase: long insertWithOnConflict(java.lang.String,java.lang.String,android.content.ContentValues,int)>
<android.app.UiAutomation: void setServiceInfo(android.accessibilityservice.AccessibilityServiceInfo)>
<android.opengl.GLES10: void glLogicOp(int)>
<android.text.Selection: boolean extendRight(android.text.Spannable,android.text.Layout)>
<android.opengl.GLES30: void glUniformMatrix3x4fv(int,int,boolean,java.nio.FloatBuffer)>
<android.graphics.Canvas: int saveLayerAlpha(android.graphics.RectF,int,int)>
<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodSubtype getLastInputMethodSubtype()>
<android.graphics.Matrix: boolean postSkew(float,float,float,float)>
<android.util.FastImmutableArraySet: void <init>(java.lang.Object[])>
<android.webkit.FindActionModeCallback.NoAction: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)>
<android.util.ArraySet: boolean isEmpty()>
<android.view.View: void addFocusables(java.util.ArrayList,int)>
<android.view.animation.ScaleAnimation: void <init>(android.content.Context,android.util.AttributeSet)>
<android.os.IUserManager: int getUserHandle(int)>
<android.telecom.ConnectionRequest: void <init>(android.telecom.PhoneAccountHandle,android.net.Uri,android.os.Bundle,int)>
<android.graphics.drawable.ClipDrawable: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>
<android.os.CommonTimeConfig: int getClientSyncInterval()>
<android.hardware.display.WifiDisplay: int hashCode()>
<android.location.GpsMeasurement: float getCarrierFrequencyInHz()>
<android.hardware.camera2.utils.CameraRuntimeException: android.hardware.camera2.CameraAccessException asChecked()>
<android.net.http.HttpResponseCache: java.net.CacheResponse get(java.net.URI,java.lang.String,java.util.Map)>
<android.renderscript.Int2: void setAt(int,int)>
<android.view.animation.CycleInterpolator: float getInterpolation(float)>
<android.transition.TransitionSet: android.transition.TransitionSet removeTarget(android.view.View)>
<android.app.Instrumentation: void callApplicationOnCreate(android.app.Application)>
<com.android.internal.os.BatteryStatsImpl: void noteScreenStateLocked(int)>
<android.media.AudioService.VolumeStreamState: void applyDeviceVolume(int)>
<android.database.sqlite.SQLiteQuery: java.lang.String toString()>
<android.renderscript.RSSurfaceView: void surfaceCreated(android.view.SurfaceHolder)>
<android.widget.TabWidget: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.graphics.drawable.AnimatedStateListDrawable: android.graphics.drawable.Drawable mutate()>
<android.graphics.drawable.Drawable: void setHotspot(float,float)>
<android.media.effect.FilterGraphEffect: void apply(int,int,int,int)>
<android.print.PrintDocumentInfo: boolean equals(java.lang.Object)>
<android.view.WindowInsets: boolean hasSystemWindowInsets()>
<com.android.internal.view.animation.NativeInterpolatorFactoryHelper: long createLinearInterpolator()>
<android.renderscript.Byte4: void mul(android.renderscript.Byte4)>
<android.animation.StateListAnimator: void setTarget(android.view.View)>
<android.view.ViewGroup: void dispatchStartTemporaryDetach()>
<android.app.ApplicationThreadProxy: void scheduleBindService(android.os.IBinder,android.content.Intent,boolean,int)>
<android.print.PrintAttributes.Margins: int getTopMils()>
<android.view.ViewGroup: boolean dispatchGenericFocusedEvent(android.view.MotionEvent)>
<android.hardware.hdmi.HdmiTvClient: void startTimerRecording(int,int,android.hardware.hdmi.HdmiTimerRecordSources.TimerRecordSource)>
<android.media.tv.TvInputManager.Hardware: boolean dispatchKeyEventToHdmi(android.view.KeyEvent)>
<android.media.session.PlaybackState: java.lang.String toString()>
<android.media.MediaExtractor: long getCachedDuration()>
<android.telephony.PhoneNumberUtils: boolean isEmergencyNumber(java.lang.String)>
<com.google.android.gles_jni.GLImpl: void glDrawElements(int,int,int,int)>
<android.preference.PreferenceCategory: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.webkit.WebView: void onOverScrolled(int,int,boolean,boolean)>
<android.app.backup.AbsoluteFileBackupHelper: void restoreEntity(android.app.backup.BackupDataInputStream)>
<android.media.AudioManager: void unregisterMediaButtonEventReceiver(android.content.ComponentName)>
<android.widget.ActionMenuView: com.android.internal.view.menu.MenuBuilder peekMenu()>
<com.android.ims.internal.IImsCallSession: java.lang.String getProperty(java.lang.String)>
<android.view.Window: void setTitle(java.lang.CharSequence)>
<com.android.internal.telecom.ITelecomService: void silenceRinger()>
<android.os.ServiceManagerNative: android.os.IBinder asBinder()>
<android.media.SoundPool.OnLoadCompleteListener: void onLoadComplete(android.media.SoundPool,int,int)>
<android.hardware.display.DisplayManagerInternal: void initPowerManagement(android.hardware.display.DisplayManagerInternal.DisplayPowerCallbacks,android.os.Handler,android.hardware.SensorManager)>
<android.provider.MediaStore.Images.Media: android.net.Uri getContentUri(java.lang.String)>
<android.view.ViewGroup: int getChildCount()>
<android.net.PskKeyManager: java.lang.String chooseServerKeyIdentityHint(java.net.Socket)>
<com.android.internal.os.TransferPipe: void setBufferPrefix(java.lang.String)>
<android.widget.TextView: android.text.Layout getLayout()>
<android.security.AndroidKeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>
<android.text.TextUtils.SimpleStringSplitter: boolean hasNext()>
<android.preference.Preference: void setTitle(java.lang.CharSequence)>
<android.os.INetworkManagementService: void setUidNetworkRules(int,boolean)>
<android.text.style.LocaleSpan: void writeToParcel(android.os.Parcel,int)>
<android.text.Annotation: int getSpanTypeId()>
<android.app.IActivityManager: void activityPaused(android.os.IBinder)>
<android.os.Build: java.lang.String getRadioVersion()>
<com.android.internal.os.BatteryStatsImpl: void shutdownLocked()>
<android.media.RemoteControlClient: android.media.RemoteControlClient.MetadataEditor editMetadata(boolean)>
<android.database.sqlite.SQLiteDatabase: long getMaximumSize()>
<android.net.NetworkStats: android.net.NetworkStats.Entry getTotalIncludingTags(android.net.NetworkStats.Entry)>
<android.bluetooth.BluetoothGattServerCallback: void onDescriptorWriteRequest(android.bluetooth.BluetoothDevice,int,android.bluetooth.BluetoothGattDescriptor,boolean,boolean,int,byte[])>
<android.transition.Transition.TransitionListenerAdapter: void onTransitionResume(android.transition.Transition)>
<com.android.internal.telephony.ITelephonyRegistry: void listen(java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean)>
<android.renderscript.Script: void forEach(int,android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.FieldPacker)>
<android.view.ViewStub: void <init>(android.content.Context,int)>
<com.android.internal.widget.LockPatternUtils: int getCurrentUser()>
<android.os.storage.StorageVolume: boolean equals(java.lang.Object)>
<android.drm.DrmManagerClient: android.content.ContentValues getMetadata(java.lang.String)>
<android.widget.AdapterViewAnimator: void fyiWillBeAdvancedByHostKThx()>
<android.os.UserManager: int getUserCount()>
<com.android.internal.telephony.ISub: void clearDefaultsForInactiveSubIds()>
<com.android.internal.net.VpnProfile: int describeContents()>
<android.preference.MultiSelectListPreference: void setEntries(java.lang.CharSequence[])>
<android.database.Cursor: boolean isAfterLast()>
<android.media.session.MediaSession.Callback: void onPlayFromMediaId(java.lang.String,android.os.Bundle)>
<android.filterpacks.imageproc.DuotoneFilter: void setupPorts()>
<android.net.wifi.WifiManager: void setAllowScansWithTraffic(int)>
<android.util.SparseLongArray: long get(int)>
<android.hardware.hdmi.IHdmiControlService: void setSystemAudioMode(boolean,android.hardware.hdmi.IHdmiControlCallback)>
<android.os.MemoryFile: int length()>
<android.animation.ValueAnimator: void reverse()>
<android.telecom.ParcelableConnection: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.telecom.IInCallService: void setInCallAdapter(com.android.internal.telecom.IInCallAdapter)>
<android.filterpacks.imageproc.CropFilter: void createProgram(android.filterfw.core.FilterContext,android.filterfw.core.FrameFormat)>
<android.view.Window: boolean getAllowEnterTransitionOverlap()>
<android.text.util.Rfc822Token: java.lang.String getComment()>
<android.location.Location: void setProvider(java.lang.String)>
<android.database.CursorWindow: boolean putDouble(double,int,int)>
<android.media.SoundPool: void setRate(int,float)>
<android.app.PackageInstallObserver: void onPackageInstalled(java.lang.String,int,java.lang.String,android.os.Bundle)>
<android.app.ActivityManager: void moveTaskToFront(int,int)>
<android.renderscript.Mesh.TriangleMeshBuilder: android.renderscript.Mesh.TriangleMeshBuilder setTexture(float,float)>
<android.view.Window: void setFeatureDrawableAlpha(int,int)>
<android.print.PrintAttributes.Resolution: java.lang.String getLabel()>
<android.bluetooth.BluetoothClass: int describeContents()>
<android.bluetooth.BluetoothDevice: boolean setPin(byte[])>
<android.bluetooth.le.ScanResult: java.lang.String toString()>
<android.provider.DocumentsProvider: android.database.Cursor queryChildDocuments(java.lang.String,java.lang.String[],java.lang.String)>
<android.app.IActivityManager: java.util.List getRunningExternalApplications()>
<android.telecom.InCallAdapter: void rejectCall(java.lang.String,boolean,java.lang.String)>
<android.graphics.Bitmap: int getAllocationByteCount()>
<com.android.internal.widget.ActionBarView: void onRestoreInstanceState(android.os.Parcelable)>
<android.content.ContentProvider: void onTrimMemory(int)>
<android.widget.TimePicker.TimePickerDelegate: java.lang.Integer getCurrentHour()>
<android.location.Criteria: int describeContents()>
<android.renderscript.Float4: android.renderscript.Float4 div(android.renderscript.Float4,float)>
<android.location.GpsMeasurement: void setAccumulatedDeltaRangeUncertaintyInMeters(double)>
<android.widget.ActionMenuPresenter: boolean hideSubMenus()>
<android.preference.SeekBarVolumizer: void muteVolume()>
<android.renderscript.Int4: android.renderscript.Int4 mod(android.renderscript.Int4,int)>
<android.content.pm.LabeledIntent: void <init>(java.lang.String,java.lang.CharSequence,int)>
<android.content.ServiceConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>
<android.text.style.LocaleSpan: int describeContents()>
<android.view.ViewGroup: boolean resolveLayoutDirection()>
<android.net.wifi.WifiInfo: void setFrequency(int)>
<com.android.internal.widget.LockPatternView: void setInStealthMode(boolean)>
<android.app.SearchManager: boolean isVisible()>
<android.print.PrintJob: boolean isBlocked()>
<android.media.AudioService: void forceVolumeControlStream(int,android.os.IBinder)>
<android.bluetooth.BluetoothGattCharacteristic: boolean setValue(java.lang.String)>
<android.net.IpPrefix: java.lang.String toString()>
<android.graphics.drawable.shapes.Shape: boolean hasAlpha()>
<android.view.View: boolean isShown()>
<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>
<android.graphics.Canvas: boolean isHardwareAccelerated()>
<android.content.pm.ResolveInfo.DisplayNameComparator: int compare(android.content.pm.ResolveInfo,android.content.pm.ResolveInfo)>
<android.nfc.cardemulation.CardEmulation: boolean registerAidsForService(android.content.ComponentName,java.lang.String,java.util.List)>
<android.app.ActivityManager: void getMemoryInfo(android.app.ActivityManager.MemoryInfo)>
<android.os.INetworkManagementService: void stopAccessPoint(java.lang.String)>
<com.android.internal.widget.LockPatternUtilsCache: boolean checkPattern(java.lang.String,int)>
<android.widget.AbsListView: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>
<android.location.GpsClock: void setBiasUncertaintyInNs(double)>
<android.filterfw.core.FrameFormat: int getBytesPerSample()>
<android.renderscript.Sampler: android.renderscript.Sampler WRAP_NEAREST(android.renderscript.RenderScript)>
<android.view.RenderNode: boolean setBottom(int)>
<android.content.ContextWrapper: java.lang.String getOpPackageName()>
<android.renderscript.ScriptIntrinsicLUT: void forEach(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>
<android.preference.PreferenceActivity: boolean hasHeaders()>
<android.net.VpnService: boolean protect(java.net.Socket)>
<android.content.pm.UserInfo: boolean isEnabled()>
<android.os.Environment: java.io.File[] buildExternalStorageAppCacheDirs(java.lang.String)>
<android.net.SSLSessionCache: void <init>(java.lang.Object)>
<android.util.AttributeSet: int getAttributeListValue(int,java.lang.String[],int)>
<android.bluetooth.IBluetooth: int getMessageAccessPermission(android.bluetooth.BluetoothDevice)>
<android.gesture.GestureOverlayView: float getGestureStrokeSquarenessTreshold()>
<android.widget.CursorTreeAdapter: android.database.Cursor getChild(int,int)>
<android.app.FragmentManagerImpl: boolean execPendingActions()>
<com.android.internal.view.ActionBarPolicy: int getTabContainerHeight()>
<android.media.SoundPool.SoundPoolDelegate: boolean unload(int)>
<android.graphics.drawable.GradientDrawable: boolean onLevelChange(int)>
<android.content.IntentSender: void sendIntent(android.content.Context,int,android.content.Intent,android.content.IntentSender.OnFinished,android.os.Handler,java.lang.String)>
<android.animation.AnimatorSet: void cancel()>
<android.hardware.camera2.DngCreator: void close()>
<android.view.View: void setOnHoverListener(android.view.View.OnHoverListener)>
<android.media.AudioTrack: int setStereoVolume(float,float)>
<android.view.WindowManagerInternal: boolean isKeyguardLocked()>
<com.android.internal.os.BatteryStatsImpl: long getMobileRadioActiveTime(long,int)>
<android.opengl.GLES31Ext: void glDebugMessageControlKHR(int,int,int,int,java.nio.IntBuffer,boolean)>
<android.view.animation.PathInterpolator: void <init>(float,float,float,float)>
<android.renderscript.Long3: android.renderscript.Long3 div(android.renderscript.Long3,android.renderscript.Long3)>
<android.gesture.GestureLibrary: void setOrientationStyle(int)>
<android.gesture.GestureLibrary: int getSequenceType()>
<android.telephony.NeighboringCellInfo: void <init>(int,java.lang.String,int)>
<android.content.res.Resources.Theme: android.content.res.TypedArray obtainStyledAttributes(int[])>
<android.util.MathUtils: float min(float,float,float)>
<android.accessibilityservice.IAccessibilityServiceConnection: boolean findFocus(int,long,int,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)>
<android.widget.ExpandableListAdapter: java.lang.Object getChild(int,int)>
<android.app.FragmentTransaction: int commitAllowingStateLoss()>
<com.google.android.gles_jni.EGLImpl: boolean eglDestroySurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface)>
<android.os.IHardwareService: boolean getFlashlightEnabled()>
<android.content.BroadcastReceiver: void abortBroadcast()>
<android.app.DatePickerDialog: void onDateChanged(android.widget.DatePicker,int,int,int)>
<android.bluetooth.IBluetoothHeadsetPhone: boolean listCurrentCalls()>
<android.net.wifi.WpsInfo: java.lang.String toString()>
<android.net.NetworkStatsHistory: long getBucketDuration()>
<android.filterpacks.performance.Throughput: int getTotalFrameCount()>
<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>
<com.android.internal.telephony.CallerInfo: com.android.internal.telephony.CallerInfo getCallerInfo(android.content.Context,java.lang.String,long)>
<android.view.View: int getOverScrollMode()>
<android.telephony.TelephonyManager: boolean needsOtaServiceProvisioning()>
<android.view.View: boolean getLocalVisibleRect(android.graphics.Rect)>
<android.app.FragmentManagerImpl: boolean isDestroyed()>
<android.opengl.GLES11Ext: void glLightxOES(int,int,int)>
<android.app.Instrumentation.ActivityMonitor: android.app.Activity waitForActivityWithTimeout(long)>
<android.webkit.CacheManager.CacheResult: long getContentLength()>
<android.view.RenderNode: boolean setCameraDistance(float)>
<android.view.AbsSavedState: android.os.Parcelable getSuperState()>
<android.opengl.GLES31Ext: void glGetSamplerParameterIivEXT(int,int,int[],int)>
<android.text.style.ForegroundColorSpan: void <init>(int)>
<android.filterfw.core.MutableFrameFormat: void setDimensions(int,int)>
<android.media.MediaRecorder: void setAudioEncodingBitRate(int)>
<android.print.IPrintSpooler: void setPrintJobTag(android.print.PrintJobId,java.lang.String,android.print.IPrintSpoolerCallbacks,int)>
<com.android.internal.inputmethod.InputMethodSubtypeSwitchingController: java.util.List getSortedInputMethodAndSubtypeListLocked(boolean,boolean,boolean)>
<android.printservice.IPrintServiceClient: void onPrintersRemoved(android.content.pm.ParceledListSlice)>
<android.os.Parcel: void writeNoException()>
<android.graphics.drawable.AnimatedRotateDrawable: int getChangingConfigurations()>
<android.telephony.TelephonyManager: boolean nvWriteCdmaPrl(byte[])>
<android.hardware.camera2.utils.Decorator.DecoratorListener: void onAfterInvocation(java.lang.reflect.Method,java.lang.Object[],java.lang.Object)>
<android.media.IAudioService: void setStreamMute(int,boolean,android.os.IBinder)>
<android.animation.LayoutTransition: void startChangingAnimations()>
<android.opengl.GLES11Ext: void glGetLightxvOES(int,int,java.nio.IntBuffer)>
<android.graphics.drawable.LayerDrawable: void setAlpha(int)>
<android.widget.AbsListView: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<android.hardware.Camera.Parameters: int getExposureCompensation()>
<android.service.notification.IConditionProvider: void onRequestConditions(int)>
<android.renderscript.Element.Builder: android.renderscript.Element.Builder add(android.renderscript.Element,java.lang.String)>
<android.service.notification.NotificationListenerService: android.os.IBinder onBind(android.content.Intent)>
<android.widget.AbsListView: void getFocusedRect(android.graphics.Rect)>
<android.appwidget.AppWidgetHost: int allocateAppWidgetId()>
<com.android.internal.util.IndentingPrintWriter: void decreaseIndent()>
<com.android.internal.content.PackageMonitor: boolean anyPackagesDisappearing()>
<android.telephony.SubscriptionManager: void clearSubInfo()>
<android.net.wifi.WifiEnterpriseConfig: void resetCaCertificate()>
<android.content.pm.PackageInstaller: void addSessionCallback(android.content.pm.PackageInstaller.SessionCallback,android.os.Handler)>
<android.telecom.ConnectionRequest: int getVideoState()>
<android.renderscript.Int3: void mod(android.renderscript.Int3)>
<android.net.NetworkAgent: void sendNetworkInfo(android.net.NetworkInfo)>
<android.hardware.camera2.ICameraDeviceCallbacks: void onDeviceIdle()>
<android.opengl.GLES31: void glProgramUniform4uiv(int,int,int,int[],int)>
<android.filterfw.core.FilterContext: void storeFrame(java.lang.String,android.filterfw.core.Frame)>
<android.view.View: void setLayoutDirection(int)>
<android.media.MediaHTTPConnection: java.lang.String getMIMEType()>
<com.android.internal.util.BitwiseInputStream: int available()>
<android.hardware.camera2.legacy.CaptureCollector: boolean waitForEmpty(long,java.util.concurrent.TimeUnit)>
<android.emoji.EmojiFactory: int getAndroidPuaFromVendorSpecificSjis(char)>
<android.view.accessibility.AccessibilityNodeInfo: long makeNodeId(int,int)>
<android.text.method.PasswordTransformationMethod: android.text.method.PasswordTransformationMethod getInstance()>
<android.media.MediaFocusControl: void unregisterMediaButtonEventReceiverForCalls()>
<android.view.inputmethod.CursorAnchorInfo.Builder: android.view.inputmethod.CursorAnchorInfo.Builder setMatrix(android.graphics.Matrix)>
<android.service.wallpaper.WallpaperService.Engine: void setOffsetNotificationsEnabled(boolean)>
<android.media.session.MediaController.TransportControls: void play()>
<android.telecom.ParcelableConnection: int describeContents()>
<com.android.ims.internal.IImsVideoCallProvider: void setPauseImage(java.lang.String)>
<android.text.TextUtils: int getCapsMode(java.lang.CharSequence,int,int)>
<com.android.internal.policy.IKeyguardService: void startKeyguardExitAnimation(long,long)>
<android.os.Process: void killProcess(int)>
<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int,int)>
<android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup.LayoutParams)>
<android.media.audiofx.PresetReverb: android.media.audiofx.PresetReverb.Settings getProperties()>
<android.view.accessibility.AccessibilityNodeInfo.RangeInfo: float getMin()>
<android.print.PrintAttributes: android.print.PrintAttributes asLandscape()>
<android.content.Intent: void removeCategory(java.lang.String)>
<android.view.WindowManagerInternal: void getWindowFrame(android.os.IBinder,android.graphics.Rect)>
<android.content.ContextWrapper: void enforcePermission(java.lang.String,int,int,java.lang.String)>
<android.app.IActivityManager: int getFrontActivityScreenCompatMode()>
<android.app.IntentService: android.os.IBinder onBind(android.content.Intent)>
<android.telecom.RemoteConnection.VideoProvider: void setDisplaySurface(android.view.Surface)>
<android.filterfw.core.StreamPort: void clear()>
<android.text.style.UnderlineSpan: int describeContents()>
<android.net.SamplingDataTracker: long getSampledPacketCount()>
<android.content.ClipData: void fixUris(int)>
<android.opengl.GLES11Ext: void glMaterialxvOES(int,int,int[],int)>
<android.nfc.NfcAdapter: void setBeamPushUrisCallback(android.nfc.NfcAdapter.CreateBeamUrisCallback,android.app.Activity)>
<android.text.SpannableStringBuilder: void getChars(int,int,char[],int)>
<android.os.Message: android.os.Message obtain(android.os.Handler,int,java.lang.Object)>
<android.location.LocationManager: java.util.List getProviders(android.location.Criteria,boolean)>
<android.os.Bundle: void putBinder(java.lang.String,android.os.IBinder)>
<com.android.internal.app.IBatteryStats: void noteJobStart(java.lang.String,int)>
<android.net.NetworkCapabilities: void combineCapabilities(android.net.NetworkCapabilities)>
<android.net.wifi.WifiManager.WpsCallback: void onFailed(int)>
<android.telecom.Conference: java.util.List getConferenceableConnections()>
<android.accounts.AccountAuthenticatorResponse: void <init>(android.accounts.IAccountAuthenticatorResponse)>
<android.view.SurfaceView: void setZOrderOnTop(boolean)>
<android.net.wifi.p2p.WifiP2pManager.DnsSdTxtRecordListener: void onDnsSdTxtRecordAvailable(java.lang.String,java.util.Map,android.net.wifi.p2p.WifiP2pDevice)>
<com.android.internal.widget.ActionBarContextView: java.lang.CharSequence getTitle()>
<android.graphics.drawable.RotateDrawable: boolean getPadding(android.graphics.Rect)>
<android.os.Debug: void startMethodTracing(java.lang.String,int,int)>
<android.widget.ActivityChooserModel: int getActivityCount()>
<com.android.server.WidgetBackupProvider: void restoreFinished(int)>
<android.renderscript.BaseObj: void finalize()>
<com.android.internal.database.SortCursor: int getCount()>
<android.media.session.PlaybackState: int getRccStateFromState(int)>
<android.telephony.ServiceState: int getNetworkId()>
<android.bluetooth.BluetoothMasInstance: int getMsgTypes()>
<com.android.internal.view.IInputContextCallback: void setSelectedText(java.lang.CharSequence,int)>
<android.renderscript.Element: android.renderscript.Element MATRIX_3X3(android.renderscript.RenderScript)>
<android.opengl.EGL14: boolean eglSurfaceAttrib(android.opengl.EGLDisplay,android.opengl.EGLSurface,int,int)>
<android.preference.SeekBarPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.print.PrintAttributes.MediaSize: void <init>(java.lang.String,java.lang.String,java.lang.String,int,int,int)>
<android.media.RemoteController.OnClientUpdateListener: void onClientChange(boolean)>
<android.widget.DateTimeView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.bluetooth.IBluetoothHealth: boolean unregisterAppConfiguration(android.bluetooth.BluetoothHealthAppConfiguration)>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder detectAll()>
<android.content.AbstractThreadedSyncAdapter: void onSyncCanceled()>
<android.app.Dialog: void setFeatureDrawable(int,android.graphics.drawable.Drawable)>
<android.widget.StackView: void showNext()>
<android.view.View: boolean onKeyUp(int,android.view.KeyEvent)>
<android.app.Dialog: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>
<android.database.CrossProcessCursorWrapper: void <init>(android.database.Cursor)>
<android.telecom.PhoneAccount.Builder: android.telecom.PhoneAccount.Builder setSubscriptionAddress(android.net.Uri)>
<android.appwidget.AppWidgetHostView: void updateAppWidget(android.widget.RemoteViews)>
<android.hardware.location.GeofenceHardwareImpl: void reportGeofencePauseStatus(int,int)>
<com.android.internal.util.FileRotator: void readMatching(com.android.internal.util.FileRotator.Reader,long,long)>
<android.media.AudioTrack: int write(java.nio.ByteBuffer,int,int)>
<android.app.Fragment: android.animation.Animator onCreateAnimator(int,boolean,int)>
<android.app.Fragment: boolean isHidden()>
<android.view.inputmethod.InputMethodManager: void setInputMethod(android.os.IBinder,java.lang.String)>
<android.view.View: void requestApplyInsets()>
<android.app.QueuedWork: void remove(java.lang.Runnable)>
<android.preference.PreferenceManager: android.preference.Preference findPreference(java.lang.CharSequence)>
<android.security.AndroidKeyStore: java.util.Date engineGetCreationDate(java.lang.String)>
<android.graphics.drawable.Drawable: void getOutline(android.graphics.Outline)>
<android.os.UserManager: android.os.Bundle getUserRestrictions(android.os.UserHandle)>
<android.view.textservice.TextInfo: int describeContents()>
<com.android.internal.widget.multiwaveview.PointCloud: int getAlphaForPoint(com.android.internal.widget.multiwaveview.PointCloud.Point)>
<com.android.internal.app.IVoiceInteractionManagerService: void finish(android.os.IBinder)>
<android.hardware.soundtrigger.SoundTrigger.KeyphraseRecognitionEvent: int hashCode()>
<android.view.inputmethod.InputConnectionWrapper: boolean clearMetaKeyStates(int)>
<android.app.ActionBar: void dispatchMenuVisibilityChanged(boolean)>
<android.media.session.PlaybackState.CustomAction: java.lang.CharSequence getName()>
<android.os.FileObserver: void <init>(java.lang.String,int)>
<android.view.ViewGroup: void onNestedPreScroll(android.view.View,int,int,int[])>
<android.media.SubtitleTrack.RenderingWidget: void setSize(int,int)>
<com.android.internal.view.menu.ActionMenuItem: boolean hasSubMenu()>
<android.transition.TransitionSet: void pause(android.view.View)>
<android.bluetooth.BluetoothGattCallback: void onReliableWriteCompleted(android.bluetooth.BluetoothGatt,int)>
<android.text.style.SuperscriptSpan: void writeToParcel(android.os.Parcel,int)>
<android.net.ConnectivityManager: void setNetworkPreference(int)>
<android.view.RenderNode: float getAlpha()>
<android.net.INetworkStatsSession: android.net.NetworkStatsHistory getHistoryForUid(android.net.NetworkTemplate,int,int,int,int)>
<android.renderscript.Int3: android.renderscript.Int3 sub(android.renderscript.Int3,int)>
<android.webkit.WebSettings: java.lang.String getCursiveFontFamily()>
<com.android.internal.view.menu.ActionMenu: android.view.MenuItem add(int,int,int,int)>
<android.media.tv.ITvInputManager: void relayoutOverlayView(android.os.IBinder,android.graphics.Rect,int)>
<android.view.ViewGroup: boolean gatherTransparentRegion(android.graphics.Region)>
<android.service.wallpaper.IWallpaperEngine: void dispatchWallpaperCommand(java.lang.String,int,int,int,android.os.Bundle)>
<android.gesture.GestureOverlayView: void clear(boolean)>
<android.net.UidRange: int hashCode()>
<com.android.internal.telephony.IPhoneStateListener: void onDataConnectionStateChanged(int,int)>
<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>
<android.renderscript.RenderScript: void destroy()>
<android.widget.HorizontalScrollView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>
<android.media.IAudioService: void adjustStreamVolume(int,int,int,java.lang.String)>
<com.android.internal.widget.multiwaveview.PointCloud.GlowManager: void setX(float)>
<android.graphics.Paint: void setTextAlign(android.graphics.Paint.Align)>
<android.appwidget.AppWidgetHost: int[] getAppWidgetIds()>
<android.content.DialogInterface.OnDismissListener: void onDismiss(android.content.DialogInterface)>
<android.telecom.StatusHints: int getIconResId()>
<android.provider.Contacts.People: android.net.Uri addToGroup(android.content.ContentResolver,long,java.lang.String)>
<android.media.AudioManager: void notifyVolumeControllerVisible(android.media.IVolumeController,boolean)>
<android.media.tv.TvInputManager.SessionCallback: void onSessionReleased(android.media.tv.TvInputManager.Session)>
<android.os.BatteryStats: void dumpCheckinLocked(android.content.Context,java.io.PrintWriter,int,int,boolean)>
<android.media.tv.TvView: void setZOrderOnTop(boolean)>
<android.location.GpsMeasurement: boolean hasCarrierPhaseUncertainty()>
<android.view.Display: java.lang.String getOwnerPackageName()>
<com.android.internal.util.GrowingArrayUtils: boolean[] append(boolean[],int,boolean)>
<android.media.session.MediaSessionManager: void removeOnActiveSessionsChangedListener(android.media.session.MediaSessionManager.OnActiveSessionsChangedListener)>
<android.widget.BaseExpandableListAdapter: int getChildTypeCount()>
<android.view.View: boolean isPaddingOffsetRequired()>
<android.widget.Switch: void draw(android.graphics.Canvas)>
<com.android.internal.app.ResolverActivity: void onCreate(android.os.Bundle,android.content.Intent,java.lang.CharSequence,android.content.Intent[],java.util.List,boolean)>
<android.content.Loader: boolean onCancelLoad()>
<android.telecom.DisconnectCause: int describeContents()>
<android.text.style.EasyEditSpan: android.app.PendingIntent getPendingIntent()>
<android.os.Parcel: void writeFloat(float)>
<android.widget.DigitalClock: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.content.res.TypedArray: int getThemeAttributeId(int,int)>
<android.net.UrlQuerySanitizer: void setUnregisteredParameterValueSanitizer(android.net.UrlQuerySanitizer.ValueSanitizer)>
<android.app.ActivityManagerProxy: void crashApplication(int,int,java.lang.String,java.lang.String)>
<android.telephony.PhoneNumberUtils: java.lang.String calledPartyBCDToString(byte[],int,int)>
<android.telephony.SubscriptionManager: java.util.List getAllSubInfoList()>
<android.hardware.input.InputManager: android.view.InputDevice getInputDeviceByDescriptor(java.lang.String)>
<android.media.MediaCodec: void queueInputBuffer(int,int,int,long,int)>
<android.app.ActivityManagerProxy: boolean shutdown(int)>
<android.provider.Browser: boolean canClearHistory(android.content.ContentResolver)>
<android.renderscript.Byte3: void sub(byte)>
<android.filterpacks.base.GLTextureSource: void setupPorts()>
<com.android.internal.app.ProcessStats.ServiceState: void setBound(boolean,int,long)>
<android.service.trust.ITrustAgentServiceCallback: void onSetTrustAgentFeaturesEnabledCompleted(boolean,android.os.IBinder)>
<android.transition.Transition: android.transition.Transition removeTarget(java.lang.Class)>
<android.media.tv.ITvInputServiceCallback: void removeTvInput(java.lang.String)>
<android.media.SoundPool.SoundPoolDelegate: void autoResume()>
<android.opengl.GLES30: void glGetSamplerParameterfv(int,int,java.nio.FloatBuffer)>
<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>
<android.hardware.IConsumerIrService: int[] getCarrierFrequencies()>
<android.view.LayoutInflater: android.view.View inflate(org.xmlpull.v1.XmlPullParser,android.view.ViewGroup)>
<android.graphics.RectF: void union(float,float,float,float)>
<android.content.pm.PackageManager: java.lang.CharSequence getText(java.lang.String,int,android.content.pm.ApplicationInfo)>
<com.android.internal.policy.PolicyManager: android.view.WindowManagerPolicy makeNewWindowManager()>
<com.android.internal.widget.LockPatternView: boolean isInStealthMode()>
<android.inputmethodservice.InputMethodService.InputMethodSessionImpl: void toggleSoftInput(int,int)>
<android.text.style.TextAppearanceSpan: void <init>(android.content.Context,int,int)>
<android.net.SamplingDataTracker: long getSampledRxByteCount()>
<android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<android.hardware.camera2.impl.CallbackProxies.SessionStateCallbackProxy: void onClosed(android.hardware.camera2.CameraCaptureSession)>
<android.bluetooth.IBluetoothAvrcpController: void sendPassThroughCmd(android.bluetooth.BluetoothDevice,int,int)>
<android.widget.GridLayout: void onMeasure(int,int)>
<android.hardware.input.InputManager: int[] getInputDeviceIds()>
<com.google.android.gles_jni.GLImpl: void glMaterialxv(int,int,int[],int)>
<com.android.internal.widget.DecorContentParent: boolean isOverflowMenuShowPending()>
<android.app.usage.UsageStats: void writeToParcel(android.os.Parcel,int)>
<android.media.tv.ITvInputServiceCallback: void addHdmiTvInput(int,android.media.tv.TvInputInfo)>
<android.widget.AbsListView: long pointToRowId(int,int)>
<android.view.SurfaceView: void onAttachedToWindow()>
<android.content.pm.IOnAppsChangedListener: void onPackagesUnavailable(android.os.UserHandle,java.lang.String[],boolean)>
<com.android.internal.net.NetworkStatsFactory: android.net.NetworkStats readNetworkStatsDetail(int,java.lang.String[],int,android.net.NetworkStats)>
<android.os.storage.IMountService: int mountVolume(java.lang.String)>
<android.widget.ResourceCursorAdapter: void setDropDownViewResource(int)>
<android.graphics.Path: void arcTo(float,float,float,float,float,float,boolean)>
<android.widget.TextView: void setEllipsize(android.text.TextUtils.TruncateAt)>
<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent)>
<android.opengl.ETC1: boolean isValid(java.nio.Buffer)>
<com.android.internal.view.menu.MenuBuilder: void <init>(android.content.Context)>
<android.view.WindowManagerPolicy.WindowState: boolean isVisibleLw()>
<android.graphics.drawable.AnimationDrawable: android.graphics.drawable.Drawable mutate()>
<android.text.style.LineHeightSpan: void chooseHeight(java.lang.CharSequence,int,int,int,int,android.graphics.Paint.FontMetricsInt)>
<android.net.DhcpResults: void setLeaseDuration(int)>
<android.hardware.camera2.marshal.Marshaler: java.lang.Object unmarshal(java.nio.ByteBuffer)>
<android.location.INetInitiatedListener: boolean sendNiResponse(int,int)>
<android.widget.TextView: void invalidateDrawable(android.graphics.drawable.Drawable)>
<android.filterfw.core.FrameFormat: int getDimension(int)>
<android.preference.DialogPreference: void setDialogTitle(java.lang.CharSequence)>
<android.content.res.Configuration: android.content.res.Configuration generateDelta(android.content.res.Configuration,android.content.res.Configuration)>
<android.view.accessibility.AccessibilityInteractionClient: android.accessibilityservice.IAccessibilityServiceConnection getConnection(int)>
<android.widget.Advanceable: void fyiWillBeAdvancedByHostKThx()>
<android.speech.tts.TextToSpeech: int addSpeech(java.lang.String,java.lang.String)>
<android.view.ViewConfiguration: int getKeyRepeatTimeout()>
<android.filterfw.core.Filter: void initWithValueMap(android.filterfw.core.KeyValueMap)>
<android.telephony.CellSignalStrengthWcdma: void setDefaultValues()>
<android.widget.MediaController: void show()>
<android.telecom.TelecomManager: java.util.List getPhoneAccountsForPackage()>
<android.content.pm.ContainerEncryptionParams: javax.crypto.SecretKey getMacKey()>
<android.view.DisplayInfo: int hashCode()>
<android.app.admin.IDevicePolicyManager: java.util.List getPermittedAccessibilityServicesForUser(int)>
<android.media.SoundPool: void resume(int)>
<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorEventListener)>
<android.drm.DrmInfo: java.util.Iterator iterator()>
<android.provider.Contacts.People: android.net.Uri createPersonInMyContactsGroup(android.content.ContentResolver,android.content.ContentValues)>
<android.text.style.AbsoluteSizeSpan: void <init>(int,boolean)>
<android.os.StatFs: int getBlockCount()>
<android.content.Context: void startActivity(android.content.Intent,android.os.Bundle)>
<android.database.AbstractCursor: java.lang.String getString(int)>
<android.renderscript.ProgramStore.Builder: void <init>(android.renderscript.RenderScript)>
<android.app.ActivityManagerProxy: boolean getPackageAskScreenCompat(java.lang.String)>
<android.content.SharedPreferences: float getFloat(java.lang.String,float)>
<android.widget.ExpandableListView: boolean expandGroup(int,boolean)>
<android.app.Activity: void onDetachedFromWindow()>
<android.view.inputmethod.InputMethodInfo: java.lang.String toString()>
<android.location.GpsMeasurement: double getElevationInDeg()>
<android.database.CursorJoiner: android.database.CursorJoiner.Result next()>
<android.widget.StackView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.content.pm.IPackageMoveObserver: void packageMoved(java.lang.String,int)>
<android.app.ActivityManagerProxy: boolean moveActivityTaskToBack(android.os.IBinder,boolean)>
<android.graphics.drawable.LayerDrawable: boolean onLevelChange(int)>
<android.content.ContentValues: java.lang.Object get(java.lang.String)>
<android.graphics.drawable.LayerDrawable: int getChangingConfigurations()>
<android.bluetooth.IBluetooth: void sendConnectionStateChange(android.bluetooth.BluetoothDevice,int,int,int)>
<android.location.GpsMeasurement: boolean hasCarrierPhase()>
<android.content.res.Resources: android.content.res.Configuration getConfiguration()>
<android.bluetooth.IBluetoothGatt: void sendNotification(int,java.lang.String,int,int,android.os.ParcelUuid,int,android.os.ParcelUuid,boolean,byte[])>
<android.accounts.IAccountManager: void addAccountAsUser(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle,int)>
<android.bluetooth.IBluetoothHeadsetClient: boolean disconnectAudio()>
<com.google.android.gles_jni.EGLImpl: boolean eglMakeCurrent(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLContext)>
<android.view.WindowManagerPolicy.WindowState: android.graphics.Rect getFrameLw()>
<android.net.MobileLinkQualityInfo: void setCdmaEcio(int)>
<android.appwidget.AppWidgetProviderInfo: android.graphics.drawable.Drawable loadPreviewImage(android.content.Context,int)>
<android.view.Window: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<android.location.GpsClock: void setType(byte)>
<android.renderscript.Double3: double elementSum()>
<android.inputmethodservice.InputMethodService: void hideWindow()>
<android.gesture.GestureStore: int getSequenceType()>
<android.app.Notification.Builder: android.app.Notification.Builder extend(android.app.Notification.Extender)>
<android.view.ViewRootImpl: void profile()>
<android.renderscript.ProgramFragment.Builder: void <init>(android.renderscript.RenderScript)>
<android.net.ConnectivityManager: void setAirplaneMode(boolean)>
<android.media.session.ISessionCallback: void onStop()>
<android.view.FocusFinderHelper: boolean beamBeats(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>
<com.google.android.util.AbstractMessageParser.Photo: boolean isHtml()>
<android.webkit.WebStorage: void setQuotaForOrigin(java.lang.String,long)>
<android.opengl.GLES11Ext: void glLightxvOES(int,int,java.nio.IntBuffer)>
<android.view.accessibility.IAccessibilityManager: void registerUiTestAutomationService(android.os.IBinder,android.accessibilityservice.IAccessibilityServiceClient,android.accessibilityservice.AccessibilityServiceInfo)>
<android.telecom.Connection.VideoProvider: void onSetDeviceOrientation(int)>
<android.net.MobileDataStateTracker: void startMonitoring(android.content.Context,android.os.Handler)>
<android.service.notification.ConditionProviderService: void notifyConditions(android.service.notification.Condition[])>
<android.net.LinkProperties: boolean removeStackedLink(android.net.LinkProperties)>
<android.renderscript.Int2: void negate()>
<android.database.DatabaseUtils: void appendEscapedSQLString(java.lang.StringBuilder,java.lang.String)>
<android.bluetooth.BluetoothPbap: boolean doesClassMatchSink(android.bluetooth.BluetoothClass)>
<android.renderscript.Float3: void add(android.renderscript.Float3)>
<android.view.RenderNode: boolean hasIdentityMatrix()>
<android.widget.Toolbar: void setContentInsetsAbsolute(int,int)>
<android.text.TextUtils: java.lang.CharSequence ellipsize(java.lang.CharSequence,android.text.TextPaint,float,android.text.TextUtils.TruncateAt)>
<com.android.internal.widget.ResolverDrawerLayout: boolean onNestedFling(android.view.View,float,float,boolean)>
<android.gesture.GestureOverlayView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.internal.util.FastPrintWriter: void write(char[],int,int)>
<com.android.internal.widget.WaveView: boolean onTouchEvent(android.view.MotionEvent)>
<android.opengl.GLES10: void glLightModelf(int,float)>
<android.view.ViewGroup.LayoutParams: void setBaseAttributes(android.content.res.TypedArray,int,int)>
<android.content.BroadcastReceiver: boolean isInitialStickyBroadcast()>
<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>
<android.location.GpsMeasurement: void setCodePhaseInChips(double)>
<android.widget.TextView: android.view.AccessibilityIterators.TextSegmentIterator getIteratorForGranularity(int)>
<android.service.wallpaper.WallpaperService.Engine: void onVisibilityChanged(boolean)>
<android.util.Size: int getHeight()>
<android.hardware.soundtrigger.SoundTrigger: android.hardware.soundtrigger.SoundTriggerModule attachModule(int,android.hardware.soundtrigger.SoundTrigger.StatusListener,android.os.Handler)>
<android.net.wifi.p2p.WifiP2pGroup: boolean contains(android.net.wifi.p2p.WifiP2pDevice)>
<android.opengl.GLES10: void glDepthRangef(float,float)>
<android.app.Fragment: android.app.LoaderManager getLoaderManager()>
<android.media.session.ISession: void setPlaybackToLocal(android.media.AudioAttributes)>
<android.filterfw.core.GLFrame: void setBitmap(android.graphics.Bitmap)>
<android.content.res.AssetFileDescriptor: long getLength()>
<android.print.PrinterCapabilitiesInfo.Builder: android.print.PrinterCapabilitiesInfo.Builder addResolution(android.print.PrintAttributes.Resolution,boolean)>
<android.media.session.MediaSession.Callback: void onSkipToNext()>
<android.provider.MediaStore.Images.Thumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,long,int,android.graphics.BitmapFactory.Options)>
<android.content.pm.VerificationParams: android.net.Uri getOriginatingURI()>
<android.view.OrientationEventListener: void enable()>
<android.content.pm.PackageParser.Activity: void setPackageName(java.lang.String)>
<android.app.Activity: void setPersistent(boolean)>
<android.content.pm.ServiceInfo: void <init>(android.content.pm.ServiceInfo)>
<android.renderscript.Matrix4f: void loadScale(float,float,float)>
<android.app.ApplicationThreadProxy: void scheduleSuicide()>
<android.telephony.SubscriptionManager: boolean isValidPhoneId(int)>
<com.android.internal.util.XmlUtils: android.net.Uri readUriAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>
<android.telephony.gsm.GsmCellLocation: void setLacAndCid(int,int)>
<android.view.Window: void setFormat(int)>
<android.preference.RingtonePreference: void setShowDefault(boolean)>
<android.renderscript.Int3: void mul(int)>
<android.util.SparseBooleanArray: void append(int,boolean)>
<android.preference.Preference: void notifyHierarchyChanged()>
<android.view.SubMenu: android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable)>
<android.preference.EditTextPreference: boolean needInputMethod()>
<com.android.internal.telephony.CallerInfo: java.lang.String toString()>
<android.hardware.hdmi.IHdmiSystemAudioModeChangeListener: void onStatusChanged(boolean)>
<android.os.Debug: java.lang.String getCaller()>
<com.android.internal.inputmethod.InputMethodUtils.InputMethodSettings: void setCurrentUserId(int)>
<android.net.wifi.RttManager.ParcelableRttResults: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.widget.LockPatternUtils: boolean checkPasswordHistory(java.lang.String)>
<android.view.View: void createContextMenu(android.view.ContextMenu)>
<android.widget.SearchView: void setSubmitButtonEnabled(boolean)>
<android.text.HtmlToSpannedConverter: android.text.Spanned convert()>
<android.animation.PropertyValuesHolder: void setFloatValues(float[])>
<android.net.http.DelegatingSSLSession: void invalidate()>
<android.graphics.Paint: int getTextWidths(java.lang.CharSequence,int,int,float[])>
<android.filterpacks.imageproc.BlackWhiteFilter: void process(android.filterfw.core.FilterContext)>
<android.view.WindowManagerGlobal: void dumpGfxInfo(java.io.FileDescriptor)>
<android.opengl.GLES11: void glTexParameteriv(int,int,int[],int)>
<android.net.http.HttpResponseCache: long maxSize()>
<com.android.internal.view.BaseIWindow: void setSession(android.view.IWindowSession)>
<android.app.IActivityManager: void addPackageDependency(java.lang.String)>
<android.filterpacks.performance.ThroughputFilter: void setupPorts()>
<android.widget.RelativeLayout.LayoutParams: void <init>(android.view.ViewGroup.MarginLayoutParams)>
<android.telephony.PhoneNumberUtils: java.lang.String extractPostDialPortion(java.lang.String)>
<android.widget.MediaController: boolean isShowing()>
<android.transition.ChangeScroll: void <init>(android.content.Context,android.util.AttributeSet)>
<android.renderscript.Long2: android.renderscript.Long2 add(android.renderscript.Long2,long)>
<android.opengl.GLES31Ext: void glBlendFunciEXT(int,int,int)>
<com.google.android.gles_jni.GLImpl: void glGetBufferParameteriv(int,int,int[],int)>
<android.service.voice.AlwaysOnHotwordDetector: void <init>(java.lang.String,java.util.Locale,android.service.voice.AlwaysOnHotwordDetector.Callback,android.hardware.soundtrigger.KeyphraseEnrollmentInfo,android.service.voice.IVoiceInteractionService,com.android.internal.app.IVoiceInteractionManagerService)>
<android.text.style.ImageSpan: void <init>(android.content.Context,android.graphics.Bitmap,int)>
<android.net.LinkProperties: java.util.List getRoutes()>
<android.media.session.MediaSession.CallbackStub: void onPlayFromMediaId(java.lang.String,android.os.Bundle)>
<android.animation.ValueAnimator: void clearAllAnimations()>
<android.util.ArrayMap: java.util.Set entrySet()>
<android.view.View: void internalSetPadding(int,int,int,int)>
<android.widget.AbsSpinner: void <init>(android.content.Context)>
<android.nfc.cardemulation.HostApduService: void sendResponseApdu(byte[])>
<android.hardware.camera2.params.MeteringRectangle: void <init>(android.graphics.Point,android.util.Size,int)>
<android.graphics.drawable.RotateDrawable: boolean isPivotYRelative()>
<android.os.RegistrantList: java.lang.Object get(int)>
<com.android.internal.widget.ActionBarOverlayLayout: void onWindowSystemUiVisibilityChanged(int)>
<android.app.ActivityThread: void sendActivityResult(android.os.IBinder,java.lang.String,int,int,android.content.Intent)>
<com.android.internal.location.GpsNetInitiatedHandler: boolean getInEmergency()>
<android.view.View: android.graphics.Matrix getInverseMatrix()>
<android.net.IConnectivityManager: java.lang.String[] getTetheringErroredIfaces()>
<android.view.ViewConfiguration: int getTouchSlop()>
<android.view.KeyEvent: java.lang.String getCharacters()>
<android.renderscript.Short3: short elementSum()>
<com.android.server.net.NetlinkTracker.Callback: void update()>
<com.android.internal.view.menu.ActionMenu: android.view.SubMenu addSubMenu(int,int,int,int)>
<android.net.InterfaceConfiguration: android.net.LinkAddress getLinkAddress()>
<android.content.pm.XmlSerializerAndParser: void writeAsXml(java.lang.Object,org.xmlpull.v1.XmlSerializer)>
<android.nfc.tech.IsoDep: byte[] getHistoricalBytes()>
<android.widget.Gallery: boolean onDown(android.view.MotionEvent)>
<android.view.accessibility.IAccessibilityManager: void unregisterUiTestAutomationService(android.accessibilityservice.IAccessibilityServiceClient)>
<android.net.BaseNetworkStateTracker: boolean isPrivateDnsRouteSet()>
<android.webkit.WebStorage.Origin: void <init>(java.lang.String)>
<android.os.CancellationSignal: boolean isCanceled()>
<android.app.Notification.Builder: android.app.Notification.Builder setPriority(int)>
<android.bluetooth.BluetoothMap: java.util.List getConnectedDevices()>
<android.os.Broadcaster: void broadcast(android.os.Message)>
<android.widget.AdapterViewAnimator: void setInAnimation(android.animation.ObjectAnimator)>
<android.view.accessibility.AccessibilityManager.TouchExplorationStateChangeListener: void onTouchExplorationStateChanged(boolean)>
<android.opengl.GLES20: void glDisableVertexAttribArray(int)>
<android.os.storage.IMountShutdownObserver: void onShutDownComplete(int)>
<com.android.internal.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)>
<android.net.http.AndroidHttpClientConnection: void doFlush()>
<android.media.session.ISession: android.media.session.ISessionController getController()>
<android.view.ViewGroup: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>
<com.android.internal.view.StandaloneActionMode: void setTitleOptionalHint(boolean)>
<android.widget.TextView: int getInputType()>
<com.google.android.gles_jni.GLImpl: void glLogicOp(int)>
<android.webkit.WebViewProvider: java.lang.String getUrl()>
<android.app.ApplicationErrorReport.BatteryInfo: void dump(android.util.Printer,java.lang.String)>
<android.view.SubMenu: android.view.SubMenu setIcon(int)>
<android.app.RemoteInput: android.os.Bundle getExtras()>
<com.android.internal.widget.ToolbarWidgetWrapper: void setDefaultNavigationIcon(android.graphics.drawable.Drawable)>
<android.telephony.TelephonyManager: boolean hasIccCard(long)>
<android.hardware.soundtrigger.SoundTrigger.KeyphraseRecognitionExtra: void writeToParcel(android.os.Parcel,int)>
<android.net.NetworkFactory: void stopNetwork()>
<android.view.KeyEvent: boolean isAltPressed()>
<android.hardware.camera2.marshal.MarshalRegistry: void registerMarshalQueryable(android.hardware.camera2.marshal.MarshalQueryable)>
<android.app.backup.BackupTransport: void cancelFullBackup()>
<android.renderscript.Sampler.Builder: void <init>(android.renderscript.RenderScript)>
<android.graphics.Paint: android.graphics.Paint.FontMetrics getFontMetrics()>
<android.webkit.WebChromeClient: boolean onCreateWindow(android.webkit.WebView,boolean,boolean,android.os.Message)>
<android.provider.ContactsContract.CommonDataKinds.Phone: java.lang.CharSequence getDisplayLabel(android.content.Context,int,java.lang.CharSequence,java.lang.CharSequence[])>
<android.net.wifi.WifiEnterpriseConfig: java.lang.String toString()>
<android.provider.MediaStore.Video.Thumbnails: void cancelThumbnailRequest(android.content.ContentResolver,long)>
<android.filterfw.core.Filter: void init()>
<android.widget.ResourceCursorAdapter: void <init>(android.content.Context,int,android.database.Cursor,int)>
<android.view.View: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.database.AbstractWindowedCursor: short getShort(int)>
<android.media.MediaCodecInfo.EncoderCapabilities: android.media.MediaCodecInfo.EncoderCapabilities create(android.media.MediaFormat,android.media.MediaCodecInfo.CodecCapabilities)>
<com.google.android.gles_jni.GLImpl: void glLightxv(int,int,int[],int)>
<android.location.IGpsGeofenceHardware: boolean isHardwareGeofenceSupported()>
<android.content.res.AssetManager: int getGlobalAssetCount()>
<android.service.media.IMediaBrowserService: void disconnect(android.service.media.IMediaBrowserServiceCallbacks)>
<android.animation.ValueAnimator: void pause()>
<android.telecom.AudioState: void <init>(boolean,int,int)>
<com.android.internal.util.FileRotator.Rewriter: void reset()>
<android.widget.AbsListView: void setCacheColorHint(int)>
<android.hardware.camera2.params.LensShadingMap: void copyGainFactors(float[],int)>
<com.android.internal.util.Predicate: boolean apply(java.lang.Object)>
<android.media.MediaRouter.RouteInfo: int getPlaybackType()>
<android.telephony.ServiceState: void fillInNotifierBundle(android.os.Bundle)>
<android.hardware.ConsumerIrManager: boolean hasIrEmitter()>
<android.view.accessibility.AccessibilityNodeInfo: void enforceSealed()>
<android.view.View: void saveHierarchyState(android.util.SparseArray)>
<android.app.ActivityManagerProxy: void <init>(android.os.IBinder)>
<android.app.FragmentManagerImpl: void dispatchCreate()>
<android.opengl.GLES11Ext: void glLoadMatrixxOES(java.nio.IntBuffer)>
<android.opengl.GLES10: void glFogf(int,float)>
<android.filterfw.io.PatternScanner: boolean atEnd()>
<android.drm.DrmManagerClient: void notify(java.lang.Object,int,int,java.lang.String)>
<android.hardware.usb.UsbInterface: void <init>(int,int,java.lang.String,int,int,int)>
<android.security.KeyStoreParameter.Builder: android.security.KeyStoreParameter.Builder setEncryptionRequired(boolean)>
<android.graphics.Matrix: void printShortString(java.io.PrintWriter)>
<android.net.INetworkStatsService: java.lang.String[] getMobileIfaces()>
<android.widget.NumberPicker.CustomEditText: void onEditorAction(int)>
<com.google.android.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>
<android.view.View: float getLeftFadingEdgeStrength()>
<android.net.MobileLinkQualityInfo: void setGsmErrorRate(int)>
<android.print.PrinterInfo: java.lang.String getDescription()>
<android.graphics.drawable.ShapeDrawable: void <init>(android.graphics.drawable.shapes.Shape)>
<android.graphics.drawable.ShapeDrawable: void onDraw(android.graphics.drawable.shapes.Shape,android.graphics.Canvas,android.graphics.Paint)>
<android.content.ContextWrapper: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle)>
<android.ddm.DdmHandleHello: void disconnected()>
<android.app.ActivityThread: void dumpMemInfoTable(java.io.PrintWriter,android.os.Debug.MemoryInfo,boolean,boolean,boolean,int,java.lang.String,long,long,long,long,long,long)>
<android.view.Window: void setSharedElementExitTransition(android.transition.Transition)>
<android.widget.NumberPicker: boolean dispatchTrackballEvent(android.view.MotionEvent)>
<android.net.ScoredNetwork: void writeToParcel(android.os.Parcel,int)>
<android.net.http.Headers: java.lang.String getCacheControl()>
<android.print.PrinterDiscoverySession: void validatePrinters(java.util.List)>
<android.view.RenderNodeAnimator: void <init>(int,int,float,float)>
<android.app.LocalActivityManager: void dispatchCreate(android.os.Bundle)>
<android.content.pm.LabeledIntent: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>
<android.media.MediaFocusControl: int requestAudioFocus(int,int,android.os.IBinder,android.media.IAudioFocusDispatcher,java.lang.String,java.lang.String)>
<android.view.ViewRootImpl: boolean requestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>
<android.webkit.WebViewProvider: void notifyFindDialogDismissed()>
<android.telecom.ParcelableCall: android.net.Uri getHandle()>
<android.util.NtpTrustedTime: boolean hasCache()>
<android.content.Intent: android.content.Intent putParcelableArrayListExtra(java.lang.String,java.util.ArrayList)>
<com.google.android.gles_jni.GLImpl: void glGetTexGeniv(int,int,int[],int)>
<android.net.INetworkScoreService: boolean clearScores()>
<android.graphics.Movie: boolean setTime(int)>
<android.os.BatteryStats: boolean getNextOldHistoryLocked(android.os.BatteryStats.HistoryItem)>
<android.view.textservice.SpellCheckerSubtype: boolean containsExtraValueKey(java.lang.String)>
<com.google.android.gles_jni.GLImpl: void glNormalPointer(int,int,java.nio.Buffer)>
<android.graphics.drawable.Drawable: android.graphics.Region getTransparentRegion()>
<android.content.pm.PackageStats: void <init>(android.content.pm.PackageStats)>
<android.app.admin.DevicePolicyManagerInternal: void addOnCrossProfileWidgetProvidersChangeListener(android.app.admin.DevicePolicyManagerInternal.OnCrossProfileWidgetProvidersChangeListener)>
<android.content.pm.LauncherActivityInfo: java.lang.String getName()>
<android.widget.ScrollBarDrawable: void setVerticalThumbDrawable(android.graphics.drawable.Drawable)>
<android.media.Image: int getFormat()>
<android.net.NetworkState: void <init>(android.net.NetworkInfo,android.net.LinkProperties,android.net.NetworkCapabilities)>
<android.net.MobileLinkQualityInfo: int getEvdoEcio()>
<android.service.dreams.IDreamManager: boolean isDreaming()>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender clone()>
<android.opengl.GLES20: void glStencilFuncSeparate(int,int,int,int)>
<android.media.MediaSyncEvent: android.media.MediaSyncEvent setAudioSessionId(int)>
<android.view.inputmethod.BaseInputConnection: java.lang.CharSequence getSelectedText(int)>
<android.net.UrlQuerySanitizer: void clear()>
<android.telecom.InCallAdapter: void postDialContinue(java.lang.String,boolean)>
<android.app.Activity: void startActivityFromChild(android.app.Activity,android.content.Intent,int)>
<android.view.ViewGroup: void addView(android.view.View,int)>
<android.content.ContextWrapper: int checkUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int)>
<com.android.internal.telephony.ITelephonyRegistry: void notifyDataActivityForSubscriber(long,int)>
<android.animation.IntEvaluator: java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer)>
<android.media.audiofx.AudioEffect: android.media.audiofx.AudioEffect.Descriptor getDescriptor()>
<android.view.ViewRootImpl: void requestChildFocus(android.view.View,android.view.View)>
<android.ddm.DdmHandleProfiling: void register()>
<com.google.android.util.AbstractMessageParser.MusicTrack: void <init>(java.lang.String)>
<android.net.BaseNetworkStateTracker: android.net.LinkProperties getLinkProperties()>
<android.hardware.usb.UsbRequest: void finalize()>
<android.hardware.camera2.legacy.LegacyCameraDevice: int submitRequestList(java.util.List,boolean,android.hardware.camera2.utils.LongParcelable)>
<android.content.res.TypedArray: int getLayoutDimension(int,int)>
<android.location.GpsNavigationMessageEvent.Listener: void onGpsNavigationMessageReceived(android.location.GpsNavigationMessageEvent)>
<android.filterfw.core.FilterGraph: void connect(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.view.View.OnAttachStateChangeListener: void onViewAttachedToWindow(android.view.View)>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int)>
<android.media.EncoderCapabilities: java.util.List getAudioEncoders()>
<android.renderscript.ScriptGroup.Builder: android.renderscript.ScriptGroup.Builder addConnection(android.renderscript.Type,android.renderscript.Script.KernelID,android.renderscript.Script.FieldID)>
<android.net.wifi.WifiInfo: int getIpAddress()>
<android.content.pm.IPackageInstallerSession: android.os.ParcelFileDescriptor openRead(java.lang.String)>
<android.net.BaseNetworkStateTracker: android.net.Network getNetwork()>
<android.animation.AnimatorListenerAdapter: void onAnimationResume(android.animation.Animator)>
<android.hardware.camera2.params.ColorSpaceTransform: java.lang.String toString()>
<android.transition.TransitionValues: int hashCode()>
<android.transition.Rotate: void captureStartValues(android.transition.TransitionValues)>
<android.util.Base64InputStream: boolean markSupported()>
<android.opengl.GLES11Ext: void glGetMaterialxvOES(int,int,int[],int)>
<android.graphics.Outline: boolean isEmpty()>
<android.app.IApplicationThread: void scheduleActivityConfigurationChanged(android.os.IBinder)>
<android.media.MediaCodecInfo.VideoCapabilities: android.util.Range getSupportedWidthsFor(int)>
<com.android.internal.util.XmlUtils: int convertValueToUnsignedInt(java.lang.String,int)>
<android.content.res.Configuration: java.lang.String toString()>
<android.view.inputmethod.InputMethodManager: int dispatchInputEvent(android.view.InputEvent,java.lang.Object,android.view.inputmethod.InputMethodManager.FinishedInputEventCallback,android.os.Handler)>
<android.view.SubMenu: void clearHeader()>
<android.accounts.GrantCredentialsPermissionActivity: void onClick(android.view.View)>
<android.opengl.GLES11Ext: void glDepthRangefOES(float,float)>
<android.opengl.GLES30: void glDeleteVertexArrays(int,java.nio.IntBuffer)>
<com.android.internal.view.menu.ContextMenuBuilder: android.view.ContextMenu setHeaderIcon(android.graphics.drawable.Drawable)>
<android.widget.AbsListView: void handleDataChanged()>
<android.view.ViewRootImpl: void addFirstDrawHandler(java.lang.Runnable)>
<android.app.ActivityManager: java.util.List getAppTasks()>
<android.renderscript.Int3: int elementSum()>
<android.util.ArraySet: boolean removeAll(java.util.Collection)>
<android.app.Activity: boolean isChild()>
<android.accounts.ChooseAccountActivity: void onCreate(android.os.Bundle)>
<com.android.internal.telecom.IInCallAdapter: void swapConference(java.lang.String)>
<com.android.internal.view.IInputContext: void getSelectedText(int,int,com.android.internal.view.IInputContextCallback)>
<android.graphics.LinearGradient: void <init>(float,float,float,float,int,int,android.graphics.Shader.TileMode)>
<android.view.ViewRootImpl: void synthesizeInputEvent(android.view.InputEvent)>
<android.graphics.drawable.AnimationDrawable: boolean isRunning()>
<android.widget.ProgressBar: void drawableHotspotChanged(float,float)>
<android.telephony.TelephonyManager: int getVoiceNetworkType(long)>
<android.text.method.SingleLineTransformationMethod: android.text.method.SingleLineTransformationMethod getInstance()>
<android.graphics.Region: boolean quickReject(int,int,int,int)>
<android.app.TabActivity: void onSaveInstanceState(android.os.Bundle)>
<android.text.style.TtsSpan.MeasureBuilder: android.text.style.TtsSpan.MeasureBuilder setNumber(java.lang.String)>
<android.app.FragmentTransaction: android.app.FragmentTransaction hide(android.app.Fragment)>
<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>
<android.os.Bundle: void putShortArray(java.lang.String,short[])>
<com.android.internal.os.BatteryStatsImpl.BatchTimer: long computeRunTimeLocked(long)>
<android.view.KeyEvent: long getEventTime()>
<android.app.Instrumentation: void callActivityOnStop(android.app.Activity)>
<android.net.NetworkCapabilities: android.net.NetworkCapabilities addTransportType(int)>
<android.content.ClipData.Item: void <init>(java.lang.CharSequence,android.content.Intent,android.net.Uri)>
<android.renderscript.Int3: void copyTo(int[],int)>
<android.nfc.tech.MifareClassic: int getType()>
<android.speech.IRecognitionListener: void onEvent(int,android.os.Bundle)>
<android.location.Address: java.lang.String getPhone()>
<com.android.internal.backup.IBackupTransport: int initializeDevice()>
<android.net.NetworkStateTracker: boolean setRadio(boolean)>
<android.filterfw.core.StopWatchMap: void stop(java.lang.String)>
<android.media.audiofx.AudioEffect: void checkState(java.lang.String)>
<android.net.UidRange: boolean equals(java.lang.Object)>
<android.widget.Spinner: void setPromptId(int)>
<android.drm.DrmRights: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<android.location.LocationRequest: android.location.LocationRequest setExpireAt(long)>
<android.filterfw.core.Frame: void setReusable(boolean)>
<android.view.InputEventReceiver: void finalize()>
<com.android.internal.widget.ActionBarView: void setIcon(int)>
<android.view.textservice.SentenceSuggestionsInfo: int describeContents()>
<android.appwidget.AppWidgetHostView: void updateAppWidgetSize(android.os.Bundle,int,int,int,int,boolean)>
<android.os.DropBoxManager.Entry: void <init>(java.lang.String,long)>
<android.printservice.PrintServiceInfo: java.lang.String getSettingsActivityName()>
<com.android.internal.view.IInputContext: void setComposingRegion(int,int)>
<android.hardware.Camera: void takePicture(android.hardware.Camera.ShutterCallback,android.hardware.Camera.PictureCallback,android.hardware.Camera.PictureCallback,android.hardware.Camera.PictureCallback)>
<android.net.nsd.NsdManager: void discoverServices(java.lang.String,int,android.net.nsd.NsdManager.DiscoveryListener)>
<com.android.internal.view.menu.SubMenuBuilder: com.android.internal.view.menu.MenuBuilder getRootMenu()>
<android.text.style.AbsoluteSizeSpan: void writeToParcel(android.os.Parcel,int)>
<android.media.session.MediaSession.Callback: void onRewind()>
<android.widget.ViewFlipper: void setFlipInterval(int)>
<android.opengl.GLES30: void glDeleteQueries(int,java.nio.IntBuffer)>
<android.media.MediaPlayer: void stop()>
<com.android.internal.os.BatteryStatsImpl.Uid: void noteVibratorOnLocked(long)>
<android.net.wifi.WifiInfo: java.lang.String removeDoubleQuotes(java.lang.String)>
<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstanceForThread(long)>
<android.net.http.RequestQueue: void stopTiming()>
<android.view.KeyEvent: android.view.KeyEvent changeTimeRepeat(android.view.KeyEvent,long,int)>
<android.security.AndroidKeyStore: void engineSetCertificateEntry(java.lang.String,java.security.cert.Certificate)>
<android.net.RssiCurve: byte lookupScore(int)>
<android.net.wifi.WifiConfiguration: void setIpAssignment(android.net.IpConfiguration.IpAssignment)>
<android.widget.GridLayout: android.widget.GridLayout.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.app.FragmentManagerImpl: void dispatchActivityCreated()>
<android.content.res.AssetFileDescriptor: void <init>(android.os.ParcelFileDescriptor,long,long,android.os.Bundle)>
<android.app.ActivityManagerProxy: void notifyActivityDrawn(android.os.IBinder)>
<android.view.ViewConfiguration: int getKeyRepeatDelay()>
<android.graphics.LargeBitmap: void finalize()>
<android.database.sqlite.SQLiteConstraintException: void <init>(java.lang.String)>
<android.net.wifi.p2p.WifiP2pManager: void stopPeerDiscovery(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ActionListener)>
<com.android.internal.app.MediaRouteChooserDialog: boolean onFilterRoute(android.media.MediaRouter.RouteInfo)>
<com.android.internal.util.BitwiseInputStream: void <init>(byte[])>
<android.graphics.drawable.BitmapDrawable: void setAlpha(int)>
<android.os.BatteryStats: long getMobileRadioActiveTime(long,int)>
<android.util.MathUtils: float constrain(float,float,float)>
<android.webkit.WebSettings: void setMinimumFontSize(int)>
<android.hardware.Camera: void reconnect()>
<com.android.internal.app.MediaRouteControllerDialog: void onDetachedFromWindow()>
<android.transition.ChangeImageTransform: java.lang.String[] getTransitionProperties()>
<android.text.style.ScaleXSpan: void updateMeasureState(android.text.TextPaint)>
<android.webkit.WebViewProvider: void setCertificate(android.net.http.SslCertificate)>
<android.telephony.CellInfo: boolean isRegistered()>
<com.android.internal.os.PowerProfile: double getAveragePower(java.lang.String,int)>
<android.graphics.drawable.InsetDrawable: void applyTheme(android.content.res.Resources.Theme)>
<android.content.pm.RegisteredServicesCache: java.lang.Object parseServiceAttributes(android.content.res.Resources,java.lang.String,android.util.AttributeSet)>
<android.opengl.GLES20: int glCreateShader(int)>
<android.provider.Contacts.ContactMethods: java.lang.CharSequence getDisplayLabel(android.content.Context,int,int,java.lang.CharSequence)>
<android.graphics.Region: void finalize()>
<android.media.tv.TvInputHardwareInfo: java.lang.String toString()>
<android.view.WindowManagerGlobal: java.lang.String[] getViewRootNames()>
<android.database.CursorWrapper: int getCount()>
<android.renderscript.FieldPacker: void addU64(android.renderscript.Long2)>
<android.hardware.camera2.marshal.impl.MarshalQueryableNativeByteToInteger: android.hardware.camera2.marshal.Marshaler createMarshaler(android.hardware.camera2.utils.TypeReference,int)>
<android.transition.TransitionSet: void createAnimators(android.view.ViewGroup,android.transition.TransitionValuesMaps,android.transition.TransitionValuesMaps,java.util.ArrayList,java.util.ArrayList)>
<android.net.http.SslCertificate: void <init>(java.lang.String,java.lang.String,java.util.Date,java.util.Date)>
<android.location.GpsMeasurement: boolean hasElevationUncertaintyInDeg()>
<android.net.LinkProperties: java.util.List getStackedLinks()>
<android.graphics.drawable.AnimatedRotateDrawable: int getIntrinsicHeight()>
<com.android.internal.http.multipart.FilePart: void <init>(java.lang.String,java.io.File,java.lang.String,java.lang.String)>
<android.media.AudioGainConfig: int[] values()>
<com.android.internal.widget.TextProgressBar: void setDurationBase(long)>
<android.webkit.DateSorter: java.lang.String getLabel(int)>
<android.view.Window: boolean getAllowExitTransitionOverlap()>
<android.os.storage.StorageVolume: boolean allowMassStorage()>
<android.telecom.StatusHints: int describeContents()>
<android.view.IWindowId: void registerFocusObserver(android.view.IWindowFocusObserver)>
<android.renderscript.Short4: android.renderscript.Short4 add(android.renderscript.Short4,short)>
<android.net.wifi.WifiNetworkConnectionStatistics: void writeToParcel(android.os.Parcel,int)>
<android.app.Application.OnProvideAssistDataListener: void onProvideAssistData(android.app.Activity,android.os.Bundle)>
<android.provider.MediaStore.Video.Media: android.net.Uri getContentUri(java.lang.String)>
<android.view.animation.PathInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>
<android.content.res.Resources: int getColor(int)>
<android.media.AudioSystem: int getPrimaryOutputFrameCount()>
<android.app.Dialog: boolean onKeyLongPress(int,android.view.KeyEvent)>
<android.bluetooth.IBluetoothPan: void setBluetoothTethering(boolean)>
<android.net.InterfaceConfiguration: java.lang.Iterable getFlags()>
<android.nfc.Tag: java.lang.String[] getTechList()>
<android.filterfw.core.Frame: void setTimestamp(long)>
<android.hardware.location.ActivityRecognitionEvent: void <init>(java.lang.String,int,long)>
<android.media.MediaExtractor: void seekTo(long,int)>
<android.app.Activity: android.app.Dialog onCreateDialog(int)>
<android.app.Dialog: void <init>(android.content.Context,int)>
<android.bluetooth.IBluetoothGatt: void discoverServices(int,java.lang.String)>
<android.renderscript.Matrix3f: void rotate(float)>
<android.net.wifi.p2p.WifiP2pGroupList.GroupDeleteListener: void onDeleteGroup(int)>
<android.service.notification.ZenModeConfig: android.service.notification.Condition readConditionXml(org.xmlpull.v1.XmlPullParser)>
<android.service.textservice.SpellCheckerService: android.service.textservice.SpellCheckerService.Session createSession()>
<android.widget.ZoomButton: void <init>(android.content.Context)>
<android.widget.RemoteViewsService.RemoteViewsFactory: void onDestroy()>
<android.net.IpConfiguration: android.net.ProxyInfo getHttpProxy()>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setGravity(int)>
<android.renderscript.Mesh.Builder: android.renderscript.Mesh create()>
<android.app.Notification.Builder: android.app.Notification.Builder setContentText(java.lang.CharSequence)>
<android.view.textservice.TextServicesManager: void setCurrentSpellChecker(android.view.textservice.SpellCheckerInfo)>
<android.media.session.MediaSession.Token: boolean equals(java.lang.Object)>
<android.opengl.GLES20: void glUniform4iv(int,int,int[],int)>
<android.content.res.AssetFileDescriptor.AutoCloseInputStream: int read(byte[],int,int)>
<android.animation.AnimatorSet: void setupEndValues()>
<android.filterfw.core.Frame: void setData(byte[],int,int)>
<android.view.accessibility.IAccessibilityInteractionConnection: void computeClickPointInScreen(long,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,long,android.view.MagnificationSpec)>
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)>
<com.android.internal.view.menu.ActionMenuItem: java.lang.CharSequence getTitleCondensed()>
<com.android.internal.widget.ActionBarOverlayLayout: boolean hideOverflowMenu()>
<android.view.InputFilter: void onInstalled()>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy build()>
<android.webkit.WebStorage.Origin: long getQuota()>
<android.net.wifi.WifiManager: java.util.List getChannelList()>
<android.bluetooth.IBluetoothGattServerCallback: void onServerConnectionState(int,int,boolean,java.lang.String)>
<android.media.AudioFormat: boolean isValidEncoding(int)>
<android.media.MediaPlayer: void setAudioAttributes(android.media.AudioAttributes)>
<android.hardware.camera2.legacy.ParameterUtils: android.hardware.camera2.params.Face convertFaceFromLegacy(android.hardware.Camera.Face,android.graphics.Rect,android.hardware.camera2.legacy.ParameterUtils.ZoomData)>
<android.net.ProxyInfo: void <init>(android.net.Uri)>
<android.content.SyncStats: void clear()>
<android.text.method.QwertyKeyListener: int getInputType()>
<android.service.notification.Condition: java.lang.String relevanceToString(int)>
<android.net.wifi.WifiConfiguration: android.net.StaticIpConfiguration getStaticIpConfiguration()>
<android.webkit.WebSettings: void setPluginState(android.webkit.WebSettings.PluginState)>
<android.database.ContentObserver: void dispatchChange(boolean)>
<com.android.internal.os.BatteryStatsImpl: android.util.SparseArray getUidStats()>
<android.preference.PreferenceGroup: boolean isOnSameScreenAsChildren()>
<android.net.wifi.IWifiManager: java.lang.String getWpsNfcConfigurationToken(int)>
<com.android.internal.widget.LockPatternView: void onRestoreInstanceState(android.os.Parcelable)>
<android.view.GhostView: void calculateMatrix(android.view.View,android.view.ViewGroup,android.graphics.Matrix)>
<android.media.MediaFile: boolean isMimeTypeMedia(java.lang.String)>
<android.content.Intent: android.content.Intent restoreFromXml(org.xmlpull.v1.XmlPullParser)>
<android.app.AlertDialog: boolean onKeyDown(int,android.view.KeyEvent)>
<android.bluetooth.BluetoothAdapter: boolean disable()>
<android.content.ContentProvider: android.app.AppOpsManager getAppOpsManager()>
<android.media.audiofx.EnvironmentalReverb.Settings: java.lang.String toString()>
<android.view.GestureDetector.SimpleOnGestureListener: void onShowPress(android.view.MotionEvent)>
<android.database.CursorWindow: boolean putLong(long,int,int)>
<com.android.internal.app.NetInitiatedActivity: void onResume()>
<android.service.wallpaper.IWallpaperEngine: void setDisplayPadding(android.graphics.Rect)>
<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.PopupMenu: void setOnDismissListener(android.widget.PopupMenu.OnDismissListener)>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator scaleXBy(float)>
<android.telecom.Call.Details: int getVideoState()>
<android.media.tv.ITvInputClient: void onTrackSelected(int,java.lang.String,int)>
<android.app.Presentation: void show()>
<android.widget.Toolbar: void setTitleTextColor(int)>
<android.media.tv.TvInputService.Session: boolean onKeyLongPress(int,android.view.KeyEvent)>
<android.service.voice.AlwaysOnHotwordDetector.Callback: void onAvailabilityChanged(int)>
<android.os.UserManager: boolean markGuestForDeletion(int)>
<android.widget.Adapter: int getItemViewType(int)>
<android.view.ViewRootImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.app.ActivityManagerProxy: android.content.ComponentName startService(android.app.IApplicationThread,android.content.Intent,java.lang.String,int)>
<com.android.internal.widget.ActionBarOverlayLayout.ActionBarVisibilityCallback: void hideForSystem()>
<com.google.android.util.AbstractMessageParser: java.lang.String reverse(java.lang.String)>
<android.provider.Browser: void requestAllIcons(android.content.ContentResolver,java.lang.String,android.webkit.WebIconDatabase.IconListener)>
<android.os.Parcel: void readArrayMap(android.util.ArrayMap,java.lang.ClassLoader)>
<android.filterpacks.imageproc.BlendFilter: void <init>(java.lang.String)>
<android.webkit.WebViewProvider: java.lang.String[] getHttpAuthUsernamePassword(java.lang.String,java.lang.String)>
<com.android.internal.view.RootViewSurfaceTaker: android.view.InputQueue.Callback willYouTakeTheInputQueue()>
<android.content.Loader: boolean isStarted()>
<android.util.LruCache: int sizeOf(java.lang.Object,java.lang.Object)>
<android.media.MediaTimeProvider.OnMediaTimeListener: void onStop()>
<android.net.wifi.p2p.WifiP2pGroup: void addClient(java.lang.String)>
<android.content.pm.PackageManager: java.util.List queryIntentActivitiesAsUser(android.content.Intent,int,int)>
<android.widget.LinearLayout: void setWeightSum(float)>
<android.text.style.ClickableSpan: void updateDrawState(android.text.TextPaint)>
<android.widget.ListView: int getHeaderViewsCount()>
<com.android.internal.widget.ToolbarWidgetWrapper: void setIcon(android.graphics.drawable.Drawable)>
<android.widget.TextView: void setExtractedText(android.view.inputmethod.ExtractedText)>
<android.content.ContentProvider: boolean uriHasUserId(android.net.Uri)>
<com.android.internal.view.menu.IconMenuItemView: void setVisibility(int)>
<android.accounts.AccountManager: void setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)>
<android.renderscript.Int2: void div(int)>
<android.text.BoringLayout: int getEllipsisStart(int)>
<com.android.internal.view.RotationPolicy: void setRotationLock(android.content.Context,boolean)>
<android.view.View: boolean isSaveEnabled()>
<android.view.inputmethod.InputMethodSession: void toggleSoftInput(int,int)>
<android.widget.AdapterViewFlipper: void setAdapter(android.widget.Adapter)>
<android.database.sqlite.SQLiteSession: boolean hasNestedTransaction()>
<android.view.View: android.view.animation.Animation getAnimation()>
<com.android.ims.internal.IImsCallSessionListener: void callSessionHeld(com.android.ims.internal.IImsCallSession,com.android.ims.ImsCallProfile)>
<android.app.DialogFragment: android.app.Dialog getDialog()>
<android.renderscript.Short4: void <init>(short,short,short,short)>
<com.android.internal.widget.ActionBarView: void setDefaultNavigationIcon(android.graphics.drawable.Drawable)>
<android.os.AsyncTask: void setDefaultExecutor(java.util.concurrent.Executor)>
<android.app.ActionBar: void setSubtitle(java.lang.CharSequence)>
<android.media.MediaRouter: android.media.MediaRouter.RouteCategory createRouteCategory(java.lang.CharSequence,boolean)>
<android.provider.Contacts.People: android.net.Uri addToGroup(android.content.ContentResolver,long,long)>
<android.telecom.PhoneAccount: android.net.Uri getAddress()>
<com.android.internal.backup.LocalTransport: int startRestore(long,android.content.pm.PackageInfo[])>
<android.media.MediaRouter.Callback: void onRoutePresentationDisplayChanged(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>
<android.view.WindowManagerPolicy: void systemBooted()>
<android.filterfw.core.FilterGraph: void tearDown(android.filterfw.core.FilterContext)>
<android.provider.Settings.System: boolean putLong(android.content.ContentResolver,java.lang.String,long)>
<android.net.http.EventHandler: void status(int,int,int,java.lang.String)>
<android.view.ViewRootImpl: void dispatchInvalidateOnAnimation(android.view.View)>
<android.media.MediaSyncEvent: int getAudioSessionId()>
<android.database.sqlite.SQLiteDebug: boolean shouldLogSlowQuery(long)>
<android.widget.ScrollView: float getBottomFadingEdgeStrength()>
<android.view.WindowManagerPolicy.WindowState: boolean getNeedsMenuLw(android.view.WindowManagerPolicy.WindowState)>
<android.opengl.GLES10: void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<com.android.internal.view.menu.BaseMenuPresenter: void setId(int)>
<android.renderscript.Long4: void copyTo(long[],int)>
<com.google.android.gles_jni.GLImpl: void glTexParameterx(int,int,int)>
<android.database.AbstractCursor: float getFloat(int)>
<android.database.sqlite.SQLiteConnectionPool: boolean shouldYieldConnection(android.database.sqlite.SQLiteConnection,int)>
<android.graphics.drawable.ClipDrawable: void setColorFilter(android.graphics.ColorFilter)>
<com.android.ims.internal.IImsUtListener: void utConfigurationCallForwardQueried(com.android.ims.internal.IImsUt,int,com.android.ims.ImsCallForwardInfo[])>
<android.graphics.drawable.shapes.Shape: void draw(android.graphics.Canvas,android.graphics.Paint)>
<android.text.style.BackgroundColorSpan: int getSpanTypeId()>
<android.service.notification.NotificationListenerService: int getCurrentListenerHints()>
<android.media.MiniThumbFile: byte[] getMiniThumbFromFile(long,byte[])>
<android.print.PrintJobInfo: void setStateReason(java.lang.String)>
<android.renderscript.Byte4: android.renderscript.Byte4 div(android.renderscript.Byte4,byte)>
<android.renderscript.ScriptIntrinsicBlend: void forEachDst(android.renderscript.Allocation,android.renderscript.Allocation)>
<android.nfc.NfcActivityManager: void onActivityDestroyed(android.app.Activity)>
<android.media.AudioSystem: int checkAudioFlinger()>
<android.graphics.drawable.RotateDrawable: boolean setVisible(boolean,boolean)>
<android.graphics.SumPathEffect: void <init>(android.graphics.PathEffect,android.graphics.PathEffect)>
<android.inputmethodservice.Keyboard: void setKeyWidth(int)>
<android.net.wifi.WifiScanner: void stopTrackingBssids(android.net.wifi.WifiScanner.BssidListener)>
<com.android.internal.view.menu.MenuView: void initialize(com.android.internal.view.menu.MenuBuilder)>
<android.content.pm.PackageInstaller: void updateSessionAppLabel(int,java.lang.CharSequence)>
<android.renderscript.Double2: double dotProduct(android.renderscript.Double2)>
<android.service.fingerprint.FingerprintManager: void remove(int)>
<android.telephony.PreciseDataConnectionState: java.lang.String getDataConnectionAPNType()>
<com.android.internal.util.XmlUtils: void writeMapXml(java.util.Map,org.xmlpull.v1.XmlSerializer,com.android.internal.util.XmlUtils.WriteMapCallback)>
<android.app.admin.IDevicePolicyManager: void setScreenCaptureDisabled(android.content.ComponentName,int,boolean)>
<android.opengl.GLES20: void glVertexAttrib4f(int,float,float,float,float)>
<android.service.dreams.DreamService: void setWindowless(boolean)>
<android.net.wifi.WifiManager.WifiLock: void setWorkSource(android.os.WorkSource)>
<android.media.AudioService.VolumeController: void postDismiss()>
<android.print.PrintAttributes.MediaSize: boolean isPortrait()>
<android.graphics.Canvas: void setDrawFilter(android.graphics.DrawFilter)>
<com.android.internal.widget.PasswordEntryKeyboardHelper: void <init>(android.content.Context,android.inputmethodservice.KeyboardView,android.view.View,boolean,int[])>
<android.graphics.Rect: void writeToParcel(android.os.Parcel,int)>
<android.webkit.WebViewProvider: boolean pageDown(boolean)>
<android.graphics.drawable.Animatable: void stop()>
<android.renderscript.Byte3: android.renderscript.Byte3 div(android.renderscript.Byte3,byte)>
<android.provider.MediaStore.Images.Thumbnails: android.database.Cursor queryMiniThumbnail(android.content.ContentResolver,long,int,java.lang.String[])>
<com.android.internal.widget.DrawableHolder: void startAnimations(android.animation.ValueAnimator.AnimatorUpdateListener)>
<android.print.IWriteResultCallback: void onWriteFailed(java.lang.CharSequence,int)>
<android.content.pm.PackageManager: java.lang.String getDataDirForUser(int,java.lang.String)>
<android.text.TextUtils: int unpackRangeStartFromLong(long)>
<android.net.wifi.WifiManager.MulticastLock: void release()>
<android.app.Notification.Style: boolean hasProgress()>
<android.net.DhcpResults: boolean addDns(java.lang.String)>
<android.preference.RingtonePreference: void onPrepareRingtonePickerIntent(android.content.Intent)>
<android.content.res.Resources: java.lang.String getResourceTypeName(int)>
<android.preference.MultiSelectListPreference: java.lang.CharSequence[] getEntryValues()>
<android.content.pm.ResolveInfo.DisplayNameComparator: void <init>(android.content.pm.PackageManager)>
<android.graphics.Rect: boolean contains(android.graphics.Rect)>
<android.graphics.SweepGradient: android.graphics.Shader copy()>
<android.widget.Toolbar: com.android.internal.widget.DecorToolbar getWrapper()>
<android.widget.TextView: void makeNewLayout(int,int,android.text.BoringLayout.Metrics,android.text.BoringLayout.Metrics,int,boolean)>
<android.os.Debug: int getGlobalExternalFreedSize()>
<android.content.IntentFilter: void addAction(java.lang.String)>
<android.media.MediaRecorder: int getMaxAmplitude()>
<android.inputmethodservice.InputMethodService: void onExtractedSelectionChanged(int,int)>
<android.view.ViewGroup: void removeAllViews()>
<com.android.internal.util.StateMachine: void sendMessage(android.os.Message)>
<android.webkit.FindActionModeCallback: void onDestroyActionMode(android.view.ActionMode)>
<android.text.Layout: float getDesiredWidth(java.lang.CharSequence,int,int,android.text.TextPaint)>
<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>
<android.widget.CalendarView: android.graphics.drawable.Drawable getSelectedDateVerticalBar()>
<android.content.SyncStatusInfo: void <init>(android.os.Parcel)>
<android.webkit.DownloadListener: void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)>
<android.content.Intent: java.lang.Object getExtra(java.lang.String,java.lang.Object)>
<android.view.InputEventConsistencyVerifier: void <init>(java.lang.Object,int)>
<android.graphics.drawable.ClipDrawable: int getChangingConfigurations()>
<android.database.Cursor: void unregisterDataSetObserver(android.database.DataSetObserver)>
<android.widget.FrameLayout: void onLayout(boolean,int,int,int,int)>
<com.android.internal.view.InputConnectionWrapper: boolean setComposingText(java.lang.CharSequence,int)>
<android.renderscript.Allocation: android.renderscript.Allocation createFromBitmap(android.renderscript.RenderScript,android.graphics.Bitmap,android.renderscript.Allocation.MipmapControl,int)>
<android.content.pm.ActivityInfo: void writeToParcel(android.os.Parcel,int)>
<android.util.Log: boolean isLoggable(java.lang.String,int)>
<android.net.wifi.p2p.WifiP2pConfig: void <init>(java.lang.String)>
<com.android.internal.app.ProcessStats.ServiceState: void <init>(com.android.internal.app.ProcessStats,java.lang.String,java.lang.String,java.lang.String,com.android.internal.app.ProcessStats.ProcessState)>
<android.app.ApplicationThreadProxy: void setSchedulingGroup(int)>
<android.widget.ResourceCursorTreeAdapter: void <init>(android.content.Context,android.database.Cursor,int,int,int)>
<android.media.AudioService: int requestAudioFocus(int,int,android.os.IBinder,android.media.IAudioFocusDispatcher,java.lang.String,java.lang.String)>
<android.view.View: boolean getClipToOutline()>
<android.widget.VideoView: void resume()>
<android.app.PendingIntent: android.app.PendingIntent getActivitiesAsUser(android.content.Context,int,android.content.Intent[],int,android.os.Bundle,android.os.UserHandle)>
<android.net.wifi.WifiInfo: void setMeteredHint(boolean)>
<android.widget.PopupMenu: void onMenuModeChange(com.android.internal.view.menu.MenuBuilder)>
<android.bluetooth.IBluetoothHeadsetClient: boolean connect(android.bluetooth.BluetoothDevice)>
<android.bluetooth.BluetoothDevice: boolean fetchMasInstances()>
<android.renderscript.ScriptIntrinsicBlur: android.renderscript.ScriptIntrinsicBlur create(android.renderscript.RenderScript,android.renderscript.Element)>
<android.hardware.usb.UsbDevice: int getDeviceProtocol()>
<android.inputmethodservice.SoftInputWindow: void setGravity(int)>
<android.media.AudioManager: void unregisterRemoteControlClient(android.media.RemoteControlClient)>
<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.os.CancellationSignal)>
<com.android.ims.ImsReasonInfo: void <init>(android.os.Parcel)>
<android.hardware.camera2.marshal.MarshalQueryable: android.hardware.camera2.marshal.Marshaler createMarshaler(android.hardware.camera2.utils.TypeReference,int)>
<android.telephony.PhoneNumberUtils: java.lang.String cdmaCheckAndProcessPlusCode(java.lang.String)>
<android.graphics.drawable.Drawable: android.graphics.Insets getOpticalInsets()>
<android.database.Cursor: void copyStringToBuffer(int,android.database.CharArrayBuffer)>
<android.net.NetworkPolicy: int describeContents()>
<com.android.internal.view.menu.MenuBuilder: android.view.MenuItem add(int,int,int,int)>
<android.service.voice.VoiceInteractionService: void onReady()>
<android.app.SearchDialog.SearchBar: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode.Callback)>
<android.os.UserManager: java.lang.String getUserName()>
<android.print.PrinterInfo.Builder: android.print.PrinterInfo.Builder setStatus(int)>
<android.telephony.PhoneNumberUtils: boolean compare(android.content.Context,java.lang.String,java.lang.String)>
<android.widget.ListView: boolean recycleOnMeasure()>
<android.hardware.soundtrigger.KeyphraseEnrollmentInfo: java.lang.String getParseError()>
<android.hardware.usb.UsbDeviceConnection: void close()>
<com.google.android.gles_jni.GLImpl: void glTexGeni(int,int,int)>
<android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int,int,int,int)>
<android.print.PrintAttributes.Margins: java.lang.String toString()>
<android.content.pm.PackageManager: int deleteStatusToPublicStatus(int)>
<android.text.style.LeadingMarginSpan.Standard: int getLeadingMargin(boolean)>
<android.graphics.drawable.InsetDrawable: void setLayoutDirection(int)>
<com.android.internal.inputmethod.InputMethodUtils.InputMethodSettings: void saveCurrentInputMethodAndSubtypeToHistory(java.lang.String,android.view.inputmethod.InputMethodSubtype)>
<android.net.LinkProperties: boolean removeLinkAddress(android.net.LinkAddress)>
<android.util.Base64: byte[] encode(byte[],int)>
<android.content.ContextWrapper: int checkCallingUriPermission(android.net.Uri,int)>
<com.android.internal.view.InputConnectionWrapper: boolean performEditorAction(int)>
<android.content.pm.PackageInstaller: int createSession(android.content.pm.PackageInstaller.SessionParams)>
<com.android.internal.widget.PasswordEntryKeyboardHelper: void swipeUp()>
<android.net.TrafficStats: long getUidUdpRxPackets(int)>
<android.os.Broadcaster: void dumpRegistrations()>
<com.android.internal.telecom.IConnectionServiceAdapter: void setIsConferenced(java.lang.String,java.lang.String)>
<android.filterfw.core.OutputPort: android.filterfw.core.Frame pullFrame()>
<android.net.LinkProperties: boolean hasIPv4Address()>
<android.media.IAudioService: boolean isStreamAffectedByRingerMode(int)>
<android.widget.RadioGroup: void clearCheck()>
<android.view.ViewRootImpl: void playSoundEffect(int)>
<android.content.Intent.FilterComparison: boolean equals(java.lang.Object)>
<android.telecom.RemoteConnection: void stopDtmfTone()>
<android.view.accessibility.AccessibilityNodeInfo: boolean canOpenPopup()>
<android.webkit.PermissionRequest: void deny()>
<android.hardware.Camera.Parameters: void setPreviewFpsRange(int,int)>
<android.graphics.RectF: boolean setIntersect(android.graphics.RectF,android.graphics.RectF)>
<android.hardware.camera2.marshal.impl.MarshalQueryableMeteringRectangle: boolean isTypeMappingSupported(android.hardware.camera2.utils.TypeReference,int)>
<android.service.fingerprint.FingerprintManager: void enroll(long)>
<android.graphics.drawable.LayerDrawable: void setTintMode(android.graphics.PorterDuff.Mode)>
<com.android.internal.widget.WaveView: boolean onHoverEvent(android.view.MotionEvent)>
<android.webkit.WebViewProvider.ViewDelegate: void onDraw(android.graphics.Canvas)>
<android.content.Intent: float getFloatExtra(java.lang.String,float)>
<android.view.Window: void destroy()>
<android.transition.Transition: android.graphics.Rect getEpicenter()>
<android.view.Surface.OutOfResourcesException: void <init>(java.lang.String)>
<android.os.CommonTimeConfig: int setMasterElectionPriority(byte)>
<android.app.Activity: boolean convertToTranslucent(android.app.Activity.TranslucentConversionListener,android.app.ActivityOptions)>
<android.media.session.PlaybackState.CustomAction: java.lang.String getAction()>
<android.telecom.Connection: int getAddressPresentation()>
<com.android.internal.util.XmlUtils: void writeListXml(java.util.List,java.lang.String,org.xmlpull.v1.XmlSerializer)>
<android.util.FloatMath: float cos(float)>
<android.location.LocationManager: void removeGeofence(android.location.Geofence,android.app.PendingIntent)>
<android.webkit.WebView: void setVerticalScrollbarOverlay(boolean)>
<com.android.internal.view.IInputMethodManager: void notifyUserAction(int)>
<android.text.style.EasyEditSpan: int getSpanTypeId()>
<android.widget.SeekBar.OnSeekBarChangeListener: void onStartTrackingTouch(android.widget.SeekBar)>
<android.media.audiofx.Equalizer: void usePreset(short)>
<android.opengl.GLES20: void glGetRenderbufferParameteriv(int,int,int[],int)>
<com.android.internal.telephony.ISms: boolean disableCellBroadcastRange(int,int)>
<android.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()>
<android.view.ViewGroup: void onStopNestedScroll(android.view.View)>
<android.filterfw.format.ImageFormat: android.filterfw.core.MutableFrameFormat create(int,int)>
<android.view.ViewGroup: void setChildrenDrawingCacheEnabled(boolean)>
<android.filterfw.geometry.Point: android.filterfw.geometry.Point rotatedAround(android.filterfw.geometry.Point,float)>
<android.renderscript.Double2: void negate()>
<android.provider.Contacts.People: android.graphics.Bitmap loadContactPhoto(android.content.Context,android.net.Uri,int,android.graphics.BitmapFactory.Options)>
<android.filterfw.core.RoundRobinScheduler: android.filterfw.core.Filter scheduleNextNode()>
<android.widget.ScrollView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.content.pm.ApplicationInfo: void <init>(android.content.pm.ApplicationInfo)>
<android.view.View: boolean isLayoutDirectionResolved()>
<android.hardware.usb.UsbManager: boolean hasPermission(android.hardware.usb.UsbDevice)>
<android.text.method.DigitsKeyListener: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>
<android.graphics.NinePatch: boolean isNinePatchChunk(byte[])>
<android.speech.tts.TextToSpeech: android.speech.tts.Voice getDefaultVoice()>
<android.opengl.GLES20: void glDeleteTextures(int,java.nio.IntBuffer)>
<android.graphics.NinePatch: boolean hasAlpha()>
<android.view.ViewGroup: void detachAllViewsFromParent()>
<android.view.View: void initializeScrollbars(android.content.res.TypedArray)>
<android.app.TaskStackBuilder: android.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent)>
<android.view.View: void dispatchWindowVisibilityChanged(int)>
<android.os.SystemService: boolean isRunning(java.lang.String)>
<android.view.VelocityTracker: float getXVelocity(int)>
<android.widget.ActionMenuPresenter: boolean hideOverflowMenu()>
<android.view.accessibility.IAccessibilityInteractionConnection: void findFocus(long,int,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)>
<android.app.Notification.InboxStyle: void restoreFromExtras(android.os.Bundle)>
<android.hardware.camera2.params.TonemapCurve: boolean equals(java.lang.Object)>
<android.graphics.Paint: java.lang.String getFontFeatureSettings()>
<android.text.method.ArrowKeyMovementMethod: boolean pageUp(android.widget.TextView,android.text.Spannable)>
<android.content.pm.PackageInstaller.SessionParams: void setAppLabel(java.lang.CharSequence)>
<android.widget.TabHost: void sendAccessibilityEvent(int)>
<android.bluetooth.IBluetoothMap: int getPriority(android.bluetooth.BluetoothDevice)>
<com.android.internal.view.menu.MenuView.ItemView: boolean prefersCondensedTitle()>
<android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec.Builder setSerialNumber(java.math.BigInteger)>
<android.view.inputmethod.InputMethodInfo: int describeContents()>
<android.util.AndroidRuntimeException: void <init>(java.lang.String,java.lang.Throwable)>
<com.google.android.util.AbstractMessageParser.Video: com.google.android.util.AbstractMessageParser.Video matchURL(java.lang.String,java.lang.String)>
<android.content.res.Resources: int selectSystemTheme(int,int,int,int,int,int)>
<android.opengl.GLES20: void glGetTexParameteriv(int,int,java.nio.IntBuffer)>
<android.widget.RemoteViews: void <init>(java.lang.String,int,int)>
<android.telecom.ParcelableConnection: boolean isRingbackRequested()>
<com.android.internal.telecom.ITelecomService: android.content.ComponentName getDefaultPhoneApp()>
<com.android.internal.backup.LocalTransport: int performBackup(android.content.pm.PackageInfo,android.os.ParcelFileDescriptor)>
<android.location.Geofence: double getLongitude()>
<android.media.MediaCodecInfo.CodecCapabilities: android.media.MediaFormat getDefaultFormat()>
<android.graphics.Rect: boolean intersects(int,int,int,int)>
<android.net.ConnectivityManager.NetworkCallback: void onLost(android.net.Network)>
<android.graphics.drawable.Drawable: boolean onStateChange(int[])>
<android.view.View: void setPaddingRelative(int,int,int,int)>
<android.filterfw.core.GLEnvironment: void deactivate()>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator alpha(float)>
<android.widget.HorizontalScrollView: void onMeasure(int,int)>
<android.content.pm.PermissionInfo: java.lang.String toString()>
<android.media.tv.TvInputInfo: android.content.pm.ServiceInfo getServiceInfo()>
<android.view.MagnificationSpec: int describeContents()>
<android.graphics.BitmapRegionDecoder: void recycle()>
<android.net.NetworkCapabilities: boolean equals(java.lang.Object)>
<android.widget.ExpandableListAdapter: boolean hasStableIds()>
<android.media.MediaScannerConnection: boolean isConnected()>
<android.service.voice.VoiceInteractionSession: void onComputeInsets(android.service.voice.VoiceInteractionSession.Insets)>
<android.content.ContentProviderClient: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<com.android.internal.app.IAppOpsService: void removeUser(int)>
<android.telecom.InCallAdapter: void setAudioRoute(int)>
<android.graphics.Path: boolean isRect(android.graphics.RectF)>
<android.telephony.PhoneNumberFormattingTextWatcher: void <init>(java.lang.String)>
<android.text.ClipboardManager: java.lang.CharSequence getText()>
<android.graphics.drawable.RippleDrawable: void setAlpha(int)>
<com.android.internal.os.BatteryStatsImpl: void noteVibratorOffLocked(int)>
<com.android.internal.telecom.IConnectionService: void mergeConference(java.lang.String)>
<android.content.pm.IPackageInstaller: android.content.pm.PackageInstaller.SessionInfo getSessionInfo(int)>
<android.text.Layout: int getEllipsizedWidth()>
<com.android.internal.app.RestrictionsPinActivity: void onResume()>
<android.drm.DrmManagerClient: int removeAllRights()>
<android.net.wifi.p2p.WifiP2pGroup: java.lang.String getNetworkName()>
<android.preference.Preference: android.preference.Preference.OnPreferenceClickListener getOnPreferenceClickListener()>
<com.android.internal.view.menu.IconMenuItemView: void setItemData(com.android.internal.view.menu.MenuItemImpl)>
<android.webkit.WebHistoryItem: java.lang.String getUrl()>
<android.hardware.display.DisplayManagerInternal.DisplayPowerRequest: boolean isBrightOrDim()>
<android.text.style.SuggestionSpan: int hashCode()>
<android.content.ContentProvider: int bulkInsert(android.net.Uri,android.content.ContentValues[])>
<android.view.Window: void setContentView(android.view.View)>
<android.telecom.GatewayInfo: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.os.BatteryStatsImpl.LongSamplingCounter: void logState(android.util.Printer,java.lang.String)>
<android.location.Address: void setPremises(java.lang.String)>
<android.view.DragEvent: java.lang.Object getLocalState()>
<android.graphics.drawable.NinePatchDrawable: android.graphics.drawable.Drawable mutate()>
<android.net.IConnectivityManager: void captivePortalCheckCompleted(android.net.NetworkInfo,boolean)>
<android.app.IActivityContainer: void attachToDisplay(int)>
<android.os.Parcel: void writeList(java.util.List)>
<android.opengl.GLES11: void glTexParameteri(int,int,int)>
<android.app.Activity: void setActionBar(android.widget.Toolbar)>
<android.view.View: void setScrollBarFadeDuration(int)>
<android.service.fingerprint.IFingerprintServiceReceiver: void onError(int)>
<com.android.internal.widget.Smileys: int getSmileyResource(int)>
<android.inputmethodservice.SoftInputWindow: void setToken(android.os.IBinder)>
<android.app.admin.DevicePolicyManager: boolean hasUserSetupCompleted()>
<com.android.internal.app.WindowDecorActionBar.TabImpl: java.lang.CharSequence getContentDescription()>
<android.view.ViewGroup: void resetResolvedLayoutDirection()>
<android.app.SearchManager: void startSearch(java.lang.String,boolean,android.content.ComponentName,android.os.Bundle,boolean,android.graphics.Rect)>
<android.view.accessibility.AccessibilityNodeInfo: int getInputType()>
<android.widget.ActivityChooserView: void setExpandActivityOverflowButtonDrawable(android.graphics.drawable.Drawable)>
<android.widget.DatePicker: void updateDate(int,int,int)>
<android.hardware.camera2.CameraDevice: void close()>
<android.app.admin.IDevicePolicyManager: java.util.List getCrossProfileWidgetProviders(android.content.ComponentName)>
<android.filterfw.core.NativeBuffer: int size()>
<android.media.AudioService: boolean isCameraSoundForced()>
<android.printservice.PrintDocument: android.os.ParcelFileDescriptor getData()>
<com.android.internal.widget.LockPatternView.Cell: int getRow()>
<android.text.style.QuoteSpan: int getColor()>
<android.webkit.WebChromeClient: void onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage.QuotaUpdater)>
<android.hardware.display.DisplayManagerInternal.DisplayPowerRequest: boolean equals(android.hardware.display.DisplayManagerInternal.DisplayPowerRequest)>
<android.os.storage.StorageManager: long getStorageFullBytes(java.io.File)>
<android.webkit.FindActionModeCallback: int getActionModeGlobalBottom()>
<android.media.AudioManager: int getRouting(int)>
<android.media.IAudioService: void setMicrophoneMute(boolean,java.lang.String)>
<android.net.MobileDataStateTracker: void <init>(int,java.lang.String)>
<android.accounts.Account: int hashCode()>
<com.android.server.net.BaseNetworkObserver: void addressRemoved(java.lang.String,android.net.LinkAddress)>
<android.widget.VideoView: void draw(android.graphics.Canvas)>
<android.widget.PopupWindow: int getHeight()>
<android.net.NetworkTemplate: int getMatchRule()>
<android.content.pm.PackageInstaller.Session: void setProgress(float)>
<android.renderscript.Float3: android.renderscript.Float3 sub(android.renderscript.Float3,android.renderscript.Float3)>
<android.app.Notification.Style: void addExtras(android.os.Bundle)>
<android.net.BaseNetworkStateTracker: void startMonitoringInternal()>
<android.renderscript.Program: void bindConstants(android.renderscript.Allocation,int)>
<android.location.Address: void setExtras(android.os.Bundle)>
<android.renderscript.Int4: android.renderscript.Int4 add(android.renderscript.Int4,int)>
<android.graphics.Rect: int describeContents()>
<android.text.method.ScrollingMovementMethod: void onTakeFocus(android.widget.TextView,android.text.Spannable,int)>
<android.view.View: void setLayerPaint(android.graphics.Paint)>
<android.net.NetworkTemplate: android.net.NetworkTemplate buildTemplateMobile4g(java.lang.String)>
<android.net.NetworkStatsHistory: long getTotalBytes()>
<com.android.internal.os.BatteryStatsImpl: long getBluetoothOnTime(long,int)>
<android.view.View: void postInvalidate()>
<android.preference.PreferenceFragment: android.widget.ListView getListView()>
<com.android.internal.telecom.ITelecomService: boolean endCall()>
<android.content.pm.IPackageStatsObserver: void onGetStatsCompleted(android.content.pm.PackageStats,boolean)>
<android.view.AccessibilityIterators.TextSegmentIterator: int[] preceding(int)>
<android.app.ActivityManagerProxy: int[] getRunningUserIds()>
<android.preference.VolumePreference: boolean onKey(android.view.View,int,android.view.KeyEvent)>
<android.os.PerformanceCollector: void addMeasurement(java.lang.String,long)>
<android.net.http.HttpAuthHeader: java.lang.String getPassword()>
<com.android.internal.os.BatteryStatsImpl.Uid.Proc: void addExcessiveCpu(long,long)>
<android.widget.RemoteViewsAdapter: boolean handleMessage(android.os.Message)>
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfoForUid(int)>
<android.filterfw.core.GLEnvironment: void activateSurfaceWithId(int)>
<android.net.wifi.WpsResult: int describeContents()>
<android.widget.QuickContactBadge: void assignContactFromPhone(java.lang.String,boolean)>
<android.os.RecoverySystem: java.lang.String handleAftermath()>
<com.google.android.gles_jni.GLImpl: void glBlendEquationSeparate(int,int)>
<android.app.ActivityManagerProxy: android.content.res.Configuration getConfiguration()>
<android.graphics.drawable.ScaleDrawable: void invalidateDrawable(android.graphics.drawable.Drawable)>
<android.hardware.SensorManager: boolean requestTriggerSensorImpl(android.hardware.TriggerEventListener,android.hardware.Sensor)>
<android.gesture.GestureStroke: void <init>(java.util.ArrayList)>
<android.widget.AdapterViewAnimator: android.os.Parcelable onSaveInstanceState()>
<android.text.style.DynamicDrawableSpan: void <init>(int)>
<android.content.UndoOperation: int describeContents()>
<android.os.ResultReceiver: void send(int,android.os.Bundle)>
<android.speech.tts.TextToSpeech: int setPitch(float)>
<android.telephony.ServiceState: void setOperatorName(java.lang.String,java.lang.String,java.lang.String)>
<android.telecom.Connection.Listener: void onCallerDisplayNameChanged(android.telecom.Connection,java.lang.String,int)>
<com.android.internal.widget.ActionBarContextView: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.webkit.CookieManager: void removeSessionCookies(android.webkit.ValueCallback)>
<android.print.IPrintManager: java.util.List getEnabledPrintServices(int)>
<android.content.pm.PackageManager: void extendVerificationTimeout(int,int,long)>
<android.media.session.MediaSession.Callback: void onCustomAction(java.lang.String,android.os.Bundle)>
<android.media.session.ISessionController: java.lang.String getTag()>
<android.os.storage.IMountService: void clearPassword()>
<android.net.INetworkManagementEventObserver: void interfaceDnsServerInfo(java.lang.String,long,java.lang.String[])>
<android.location.FusedBatchOptions: void resetFlag(int)>
<android.graphics.Bitmap: int getWidth()>
<android.webkit.WebSettings: void setBlockNetworkImage(boolean)>
<android.printservice.PrinterDiscoverySession: java.util.List getTrackedPrinters()>
<android.nfc.Tag: int getConnectedTechnology()>
<com.android.internal.inputmethod.InputMethodUtils: boolean isValidSystemDefaultIme(boolean,android.view.inputmethod.InputMethodInfo,android.content.Context)>
<android.webkit.WebSettings: void setAllowUniversalAccessFromFileURLs(boolean)>
<android.content.pm.PackageParser.PackageLite: java.util.List getAllCodePaths()>
<android.media.tv.TvInputManager.Session: int dispatchInputEvent(android.view.InputEvent,java.lang.Object,android.media.tv.TvInputManager.Session.FinishedInputEventCallback,android.os.Handler)>
<android.media.audiofx.Equalizer: void setBandLevel(short,short)>
<android.widget.Switch: void onDraw(android.graphics.Canvas)>
<android.os.BatteryProperties: int describeContents()>
<android.app.IActivityManager: void closeSystemDialogs(java.lang.String)>
<android.app.IUiModeManager: int getNightMode()>
<android.graphics.SurfaceTexture: void updateTexImage()>
<android.widget.TextView: void setAllCaps(boolean)>
<android.view.inputmethod.InputMethodSession: void appPrivateCommand(java.lang.String,android.os.Bundle)>
<android.widget.AbsListView: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.view.SurfaceControl: void setWindowCrop(android.graphics.Rect)>
<android.graphics.drawable.RippleDrawable: boolean isStateful()>
<android.net.Network: java.net.InetAddress getByName(java.lang.String)>
<android.app.IActivityManager: android.content.pm.ConfigurationInfo getDeviceConfigurationInfo()>
<android.content.ContextWrapper: android.content.res.Resources getResources()>
<android.app.ActivityManagerProxy: void resumeAppSwitches()>
<android.text.style.BulletSpan: int getSpanTypeId()>
<com.android.internal.widget.DecorToolbar: int getDisplayOptions()>
<android.view.ViewParent: void notifySubtreeAccessibilityStateChanged(android.view.View,android.view.View,int)>
<android.renderscript.Long4: long elementSum()>
<android.content.res.AssetManager: void setConfiguration(int,int,java.lang.String,int,int,int,int,int,int,int,int,int,int,int,int,int,int)>
<android.renderscript.ScriptIntrinsicConvolve3x3: void forEach(android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>
<android.widget.AbsListView: int getCacheColorHint()>
<android.app.admin.IDevicePolicyManager: boolean isDeviceOwner(java.lang.String)>
<android.animation.BidirectionalTypeConverter: void <init>(java.lang.Class,java.lang.Class)>
<android.view.accessibility.CaptioningManager.CaptioningChangeListener: void onFontScaleChanged(float)>
<android.app.Fragment: void onDestroy()>
<android.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle,android.os.UserHandle)>
<android.renderscript.Short3: void div(short)>
<android.text.SpannableStringBuilder: android.text.InputFilter[] getFilters()>
<android.bluetooth.BluetoothAvrcpController: void finalize()>
<android.webkit.WebViewProvider: void goForward()>
<android.hardware.camera2.impl.CameraMetadataNative: void set(android.hardware.camera2.CaptureRequest.Key,java.lang.Object)>
<android.view.Window: int getForcedWindowFlags()>
<android.database.Cursor: short getShort(int)>
<android.widget.ScrollView: boolean onGenericMotionEvent(android.view.MotionEvent)>
<android.mtp.MtpDevice: int[] getObjectHandles(int,int,int)>
<android.widget.LinearLayout: android.widget.LinearLayout.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.provider.DocumentsContract: android.graphics.Bitmap getDocumentThumbnail(android.content.ContentProviderClient,android.net.Uri,android.graphics.Point,android.os.CancellationSignal)>
<android.database.DatabaseUtils: void dumpCurrentRow(android.database.Cursor,java.lang.StringBuilder)>
<android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction: java.lang.CharSequence getLabel()>
<android.app.admin.IDevicePolicyManager: java.util.List getTrustAgentFeaturesEnabled(android.content.ComponentName,android.content.ComponentName,int)>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: void computeConstantSize()>
<com.android.internal.http.multipart.MultipartEntity: long getContentLength()>
<android.media.tv.TvInputManager.TvInputCallback: void onInputStateChanged(java.lang.String,int)>
<android.net.Uri: java.lang.String getUserInfo()>
<android.webkit.WebView: void setBackgroundColor(int)>
<android.webkit.PluginList: java.util.List getList()>
<android.view.accessibility.CaptioningManager: void <init>(android.content.Context)>
<android.provider.Settings.System: long getLong(android.content.ContentResolver,java.lang.String,long)>
<android.media.tv.TvView: void setCaptionEnabled(boolean)>
<android.content.AsyncTaskLoader: void onForceLoad()>
<android.content.pm.PackageParser: android.content.pm.PackageParser.Package parseMonolithicPackage(java.io.File,int)>
<android.net.NetworkTemplate: int describeContents()>
<android.content.IntentFilter: int countDataPaths()>
<com.android.internal.app.ToolbarActionBar: void setTitle(int)>
<android.app.FragmentManagerImpl: void dispatchResume()>
<android.app.ActivityThread: java.lang.String currentProcessName()>
<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageIIIIO(int,int,int,int,int,java.lang.Object)>
<com.android.internal.http.multipart.PartBase: void setTransferEncoding(java.lang.String)>
<android.view.Window: void setSharedElementReenterTransition(android.transition.Transition)>
<android.renderscript.Element: android.renderscript.Element F32(android.renderscript.RenderScript)>
<android.content.res.AssetManager: void finalize()>
<android.emoji.EmojiFactory: java.lang.String name()>
<android.view.Display: boolean isPublicPresentation()>
<com.google.android.util.AbstractMessageParser.Html: java.lang.String toHtml(boolean)>
<android.text.TextUtils.SimpleStringSplitter: java.util.Iterator iterator()>
<com.android.internal.view.IInputMethodManager: void finishInput(com.android.internal.view.IInputMethodClient)>
<android.content.res.Resources: java.lang.String getString(int)>
<android.media.tv.ITvInputSessionWrapper: void <init>(android.content.Context,android.media.tv.TvInputService.Session,android.view.InputChannel)>
<com.android.internal.http.multipart.MultipartEntity: boolean isStreaming()>
<android.widget.TableLayout: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceRequest: android.net.wifi.p2p.nsd.WifiP2pUpnpServiceRequest newInstance()>
<android.net.wifi.WifiConfiguration.Visibility: java.lang.String toString()>
<android.media.MediaPlayer: void setNextMediaPlayer(android.media.MediaPlayer)>
<com.android.internal.http.multipart.PartSource: java.io.InputStream createInputStream()>
<android.media.IAudioService: int getCurrentAudioFocus()>
<android.renderscript.ProgramVertexFixedFunction.Builder: android.renderscript.ProgramVertexFixedFunction create()>
<android.database.AbstractCursor: java.lang.String getColumnName(int)>
<android.graphics.Matrix: void set(android.graphics.Matrix)>
<android.filterfw.core.SimpleScheduler: void <init>(android.filterfw.core.FilterGraph)>
<android.os.CancellationSignal: void setOnCancelListener(android.os.CancellationSignal.OnCancelListener)>
<android.net.NetworkFactory: void handleMessage(android.os.Message)>
<android.animation.PropertyValuesHolder: void setConverter(android.animation.TypeConverter)>
<com.android.internal.util.XmlUtils: java.lang.String[] readThisStringArrayXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[])>
<android.opengl.GLES20: void glPolygonOffset(float,float)>
<android.text.DynamicLayout: int getEllipsizedWidth()>
<android.hardware.camera2.params.MeteringRectangle: boolean equals(android.hardware.camera2.params.MeteringRectangle)>
<com.android.internal.telecom.IInCallAdapter: void turnOnProximitySensor()>
<android.widget.CursorAdapter: void <init>(android.content.Context,android.database.Cursor,int)>
<android.os.StatFs: void <init>(java.lang.String)>
<android.view.inputmethod.InputConnection: boolean endBatchEdit()>
<com.android.internal.app.ToolbarActionBar: android.app.ActionBar.Tab getSelectedTab()>
<android.view.View: void unscheduleDrawable(android.graphics.drawable.Drawable)>
<android.graphics.drawable.ScaleDrawable: int getIntrinsicHeight()>
<android.telephony.SubInfoRecord: int describeContents()>
<com.android.internal.content.PackageMonitor: void onPackagesAvailable(java.lang.String[])>
<android.service.media.MediaBrowserService: android.media.session.MediaSession.Token getSessionToken()>
<android.view.animation.ClipRectAnimation: void <init>(android.graphics.Rect,android.graphics.Rect)>
<android.app.admin.DeviceAdminReceiver: java.lang.CharSequence onDisableRequested(android.content.Context,android.content.Intent)>
<com.android.internal.os.BatteryStatsImpl: void noteWifiMulticastDisabledFromSourceLocked(android.os.WorkSource)>
<android.app.admin.IDevicePolicyManager: int getStorageEncryptionStatus(int)>
<android.media.MediaMetadata.Builder: android.media.MediaMetadata.Builder putRating(java.lang.String,android.media.Rating)>
<android.net.wifi.p2p.WifiP2pDevice: java.lang.String toString()>
<android.speech.srec.WaveHeader: short getBitsPerSample()>
<android.media.tv.TvInputManager.Session: void setStreamVolume(float)>
<android.widget.CompoundButton: int getCompoundPaddingLeft()>
<android.database.sqlite.SQLiteConnectionPool: void finalize()>
<com.android.internal.os.InstallerConnection: int patchoat(java.lang.String,int,boolean,java.lang.String)>
<android.os.Parcel: void writeSizeF(android.util.SizeF)>
<android.media.MutableBackgroundColorSpan: void <init>(int)>
<com.android.internal.util.FastPrintWriter: void println()>
<android.net.ProxyDataTracker: int getDefaultGatewayAddr()>
<android.content.res.CompatibilityInfo: float computeCompatibleScaling(android.util.DisplayMetrics,android.util.DisplayMetrics)>
<android.os.ParcelUuid: void <init>(java.util.UUID)>
<android.graphics.Bitmap: void setNinePatchChunk(byte[])>
<android.opengl.GLES30: void glGetBufferParameteri64v(int,int,java.nio.LongBuffer)>
<android.view.animation.GridLayoutAnimationController: int getDirectionPriority()>
<android.hardware.camera2.legacy.RequestThreadManager: void <init>(int,android.hardware.Camera,android.hardware.camera2.CameraCharacteristics,android.hardware.camera2.legacy.CameraDeviceState)>
<android.media.SoundPool.SoundPoolDelegate: int load(java.io.FileDescriptor,long,long,int)>
<android.accounts.AccountManager: void addOnAccountsUpdatedListener(android.accounts.OnAccountsUpdateListener,android.os.Handler,boolean)>
<android.view.WindowManagerPolicy: void applyPostLayoutPolicyLw(android.view.WindowManagerPolicy.WindowState,android.view.WindowManager.LayoutParams)>
<android.graphics.RectF: void readFromParcel(android.os.Parcel)>
<android.view.View: void onResolveDrawables(int)>
<android.widget.Gallery: boolean onSingleTapUp(android.view.MotionEvent)>
<android.widget.HorizontalScrollView: boolean executeKeyEvent(android.view.KeyEvent)>
<com.android.internal.telephony.GsmAlphabet: int charToGsmExtended(char)>
<android.app.IUiModeManager: int getCurrentModeType()>
<android.inputmethodservice.InputMethodService: android.view.View onCreateCandidatesView()>
<android.webkit.WebView: void setHttpAuthUsernamePassword(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.app.admin.IDevicePolicyManager: boolean setProfileOwner(android.content.ComponentName,java.lang.String,int)>
<android.media.Metadata: double getDouble(int)>
<android.bluetooth.IBluetoothHeadsetClient: boolean getLastVoiceTagNumber(android.bluetooth.BluetoothDevice)>
<android.telecom.RemoteConnection: android.telecom.RemoteConnection.VideoProvider getVideoProvider()>
<android.net.wifi.WifiManager: boolean isDualBandSupported()>
<android.widget.ImageButton: void <init>(android.content.Context,android.util.AttributeSet)>
<android.app.LoaderManagerImpl: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.bluetooth.BluetoothDevice: boolean setRemoteOutOfBandData()>
<android.inputmethodservice.InputMethodService: void requestHideSelf(int)>
<android.os.BaseBundle: java.lang.String getString(java.lang.String,java.lang.String)>
<android.telecom.TelecomManager: java.util.List getAllPhoneAccounts()>
<android.hardware.soundtrigger.KeyphraseEnrollmentInfo: android.hardware.soundtrigger.KeyphraseMetadata getKeyphraseMetadata(java.lang.String,java.util.Locale)>
<android.service.dreams.IDreamManager: void testDream(android.content.ComponentName)>
<android.view.View: void debug(int)>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder insert(int,java.lang.CharSequence)>
<com.android.internal.widget.ActionBarContextView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.text.style.TtsSpan.MeasureBuilder: android.text.style.TtsSpan.MeasureBuilder setNumerator(java.lang.String)>
<android.mtp.MtpConstants: boolean isAbstractObject(int)>
<com.android.internal.app.WindowDecorActionBar.TabImpl: android.app.ActionBar.Tab setTabListener(android.app.ActionBar.TabListener)>
<android.view.MenuItem: boolean collapseActionView()>
<android.graphics.drawable.ColorDrawable: void setAlpha(int)>
<com.android.internal.os.TransferPipe.Caller: void go(android.os.IInterface,java.io.FileDescriptor,java.lang.String,java.lang.String[])>
<android.graphics.pdf.PdfDocument.PageInfo.Builder: void <init>(int,int,int)>
<android.filterpacks.performance.ThroughputFilter: void <init>(java.lang.String)>
<android.renderscript.Float2: void addMultiple(android.renderscript.Float2,float)>
<com.android.internal.app.ProcessStats.ProcessState: boolean isInUse()>
<android.net.wifi.ScanResult: void averageRssi(int,long,int)>
<android.app.Activity: android.transition.Scene getContentScene()>
<android.util.SparseBooleanArray: void setValueAt(int,boolean)>
<android.provider.Browser: void sendString(android.content.Context,java.lang.String,java.lang.String)>
<android.renderscript.Matrix4f: void rotate(float,float,float,float)>
<android.filterfw.geometry.Point: android.filterfw.geometry.Point times(float)>
<android.renderscript.Script.LaunchOptions: int getZEnd()>
<android.app.IAlarmManager: void set(int,long,long,long,android.app.PendingIntent,android.os.WorkSource,android.app.AlarmManager.AlarmClockInfo)>
<android.database.sqlite.SQLiteDatabaseCorruptException: void <init>(java.lang.String)>
<android.bluetooth.IBluetoothHealthCallback: void onHealthChannelStateChange(android.bluetooth.BluetoothHealthAppConfiguration,android.bluetooth.BluetoothDevice,int,int,android.os.ParcelFileDescriptor,int)>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getUnregisteredParameterValueSanitizer()>
<com.android.internal.view.BaseSurfaceHolder: android.graphics.Canvas lockCanvas()>
<android.database.CursorWindow: void freeLastRow()>
<android.text.style.SuggestionSpan: int getUnderlineColor()>
<com.android.internal.widget.IRemoteViewsFactory: void onDataSetChangedAsync()>
<com.android.internal.widget.AutoScrollHelper: com.android.internal.widget.AutoScrollHelper setActivationDelay(int)>
<android.renderscript.Byte2: void sub(byte)>
<android.graphics.drawable.DrawableContainer: void setColorFilter(android.graphics.ColorFilter)>
<android.content.res.Configuration: boolean isOtherSeqNewer(android.content.res.Configuration)>
<android.hardware.camera2.CameraManager: java.lang.String[] getCameraIdList()>
<android.opengl.GLES30: void glUniformMatrix3x2fv(int,int,boolean,float[],int)>
<android.transition.TransitionSet: void captureEndValues(android.transition.TransitionValues)>
<android.view.animation.Animation: void setDuration(long)>
<android.media.audiofx.AudioEffect: int setParameter(int,short)>
<com.android.internal.widget.ScrollingTabContainerView: void onConfigurationChanged(android.content.res.Configuration)>
<android.view.View: void onDetachedFromWindowInternal()>
<android.provider.DocumentsProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<android.os.Environment.UserEnvironment: java.io.File[] buildExternalStorageAppFilesDirs(java.lang.String)>
<android.graphics.Rect: boolean intersect(int,int,int,int)>
<android.app.IActivityManager: void setFrontActivityScreenCompatMode(int)>
<android.content.IContentService: void notifyChange(android.net.Uri,android.database.IContentObserver,boolean,boolean,int)>
<android.database.sqlite.SQLiteProgram: android.database.sqlite.SQLiteSession getSession()>
<android.view.MotionEvent: void setTainted(boolean)>
<com.android.internal.widget.LockPatternUtils: boolean isLockPasswordEnabled()>
<android.app.ActivityManagerInternal: void goingToSleep()>
<android.widget.ScrollBarDrawable: void setHorizontalThumbDrawable(android.graphics.drawable.Drawable)>
<android.net.wifi.WifiChannel: boolean isValid()>
<android.media.MediaPlayer: void prepare()>
<android.widget.PopupWindow: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<com.android.internal.telephony.IPhoneStateListener: void onPreciseCallStateChanged(android.telephony.PreciseCallState)>
<android.widget.ScrollView: boolean onRequestFocusInDescendants(int,android.graphics.Rect)>
<android.net.Credentials: int getUid()>
<com.android.internal.widget.ExploreByTouchHelper: boolean dispatchHoverEvent(android.view.MotionEvent)>
<android.view.SurfaceControl: int getActiveConfig(android.os.IBinder)>
<android.net.NetworkStatsHistory.DataStreamUtils: long readVarLong(java.io.DataInputStream)>
<android.service.media.MediaBrowserService.BrowserRoot: android.os.Bundle getExtras()>
<android.filterpacks.imageproc.CrossProcessFilter: void initProgram(android.filterfw.core.FilterContext,int)>
<android.view.TextureView: int getLayerType()>
<android.os.Vibrator: void vibrate(int,java.lang.String,long[],int,android.media.AudioAttributes)>
<android.view.View: void setTranslationX(float)>
<android.hardware.camera2.impl.CameraDeviceImpl: void setRemoteFailure(android.hardware.camera2.utils.CameraRuntimeException)>
<android.media.session.ParcelableVolumeInfo: void <init>(int,android.media.AudioAttributes,int,int,int)>
<android.widget.CursorAdapter: void onContentChanged()>
<com.android.internal.widget.DrawableHolder: void removeAnimationFor(java.lang.String)>
<android.appwidget.AppWidgetManager: void bindRemoteViewsService(java.lang.String,int,android.content.Intent,android.os.IBinder)>
<android.bluetooth.BluetoothUuid: boolean isAvrcpTarget(android.os.ParcelUuid)>
<android.net.wifi.ScanResult: void <init>(android.net.wifi.WifiSsid,java.lang.String,java.lang.String,int,int,long,int,int)>
<android.app.UiAutomationConnection: android.view.WindowContentFrameStats getWindowContentFrameStats(int)>
<android.inputmethodservice.ExtractEditLayout: boolean isActionModeStarted()>
<android.view.textservice.SpellCheckerSubtype: void writeToParcel(android.os.Parcel,int)>
<android.app.Application.ActivityLifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)>
<android.bluetooth.IBluetoothMap: android.bluetooth.BluetoothDevice getClient()>
<android.renderscript.Float2: float get(int)>
<android.app.backup.BackupDataInputStream: int read(byte[],int,int)>
<android.location.LocationRequest: java.lang.String getProvider()>
<android.widget.AutoCompleteTextView: void performCompletion()>
<com.android.internal.policy.IKeyguardService: void dismiss()>
<android.hardware.camera2.marshal.impl.MarshalQueryableBlackLevelPattern: boolean isTypeMappingSupported(android.hardware.camera2.utils.TypeReference,int)>
<android.app.admin.IDevicePolicyManager: android.content.ComponentName getGlobalProxyAdmin(int)>
<android.service.persistentdata.PersistentDataBlockManager: void setOemUnlockEnabled(boolean)>
<android.widget.Switch: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.opengl.GLES31Ext: void glBlendEquationiEXT(int,int)>
<android.preference.DialogPreference: void setDialogMessage(java.lang.CharSequence)>
<android.text.method.ScrollingMovementMethod: boolean down(android.widget.TextView,android.text.Spannable)>
<android.renderscript.Byte4: void setValues(byte,byte,byte,byte)>
<android.graphics.drawable.VectorDrawable: android.graphics.drawable.Drawable mutate()>
<android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>
<android.view.animation.AccelerateDecelerateInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>
<android.opengl.GLES20: boolean glIsFramebuffer(int)>
<android.content.ContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver,boolean)>
<android.app.SharedElementCallback: android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable)>
<com.android.internal.app.WindowDecorActionBar.TabImpl: void select()>
<com.android.internal.view.IInputMethod: void hideSoftInput(int,android.os.ResultReceiver)>
<android.mtp.MtpDevice: boolean open(android.hardware.usb.UsbDeviceConnection)>
<android.net.LinkAddress: void <init>(java.net.InetAddress,int,int,int)>
<android.telecom.PhoneAccountHandle: int hashCode()>
<android.app.Service: void setForeground(boolean)>
<android.renderscript.Type.Builder: void <init>(android.renderscript.RenderScript,android.renderscript.Element)>
<android.media.MediaExtractor: java.util.Map getPsshInfo()>
<com.android.internal.os.ProcessCpuTracker: int getLastIoWaitTime()>
<android.hardware.camera2.CaptureRequest: java.lang.Class getKeyClass()>
<android.widget.TextView: void setIncludeFontPadding(boolean)>
<com.android.internal.view.menu.ActionMenuItemView: void setShortcut(boolean,char)>
<android.text.TextUtils: boolean isPrintableAsciiOnly(java.lang.CharSequence)>
<android.app.ActionBar.TabListener: void onTabSelected(android.app.ActionBar.Tab,android.app.FragmentTransaction)>
<android.app.Activity: boolean onCreateOptionsMenu(android.view.Menu)>
<android.media.tv.ITvInputManager: void setMainSession(android.os.IBinder,int)>
<android.webkit.WebViewProvider: float getScale()>
<android.hardware.camera2.legacy.RequestThreadManager: void quit()>
<android.filterfw.core.SerializedFrame: boolean hasNativeAllocation()>
<android.app.Dialog: android.view.Window getWindow()>
<android.widget.ResourceCursorTreeAdapter: android.view.View newGroupView(android.content.Context,android.database.Cursor,boolean,android.view.ViewGroup)>
<android.text.style.AlignmentSpan.Standard: void writeToParcel(android.os.Parcel,int)>
<android.printservice.IPrintServiceClient: android.print.PrintJobInfo getPrintJobInfo(android.print.PrintJobId)>
<android.print.PrintJobInfo: boolean isCancelling()>
<android.view.ViewGroup.MarginLayoutParams: void onDebugDraw(android.view.View,android.graphics.Canvas,android.graphics.Paint)>
<android.app.IActivityManager: android.app.ActivityManager.TaskThumbnail getTaskThumbnail(int)>
<android.telephony.PreciseCallState: java.lang.String toString()>
<android.view.accessibility.AccessibilityInteractionClient: java.util.List findAccessibilityNodeInfosByViewId(int,int,long,java.lang.String)>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setStartDelay(long)>
<android.text.method.ArrowKeyMovementMethod: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>
<android.app.admin.DevicePolicyManager: java.lang.String getProfileOwnerNameAsUser(int)>
<android.bluetooth.BluetoothHeadset: void clccResponse(int,int,int,int,boolean,java.lang.String,int)>
<android.media.AudioMixPort: boolean equals(java.lang.Object)>
<com.android.internal.widget.ActionBarOverlayLayout.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<android.bluetooth.BluetoothDevice: int getMessageAccessPermission()>
<android.graphics.pdf.PdfRenderer: android.graphics.pdf.PdfRenderer.Page openPage(int)>
<android.content.SyncRequest: java.lang.String getProvider()>
<android.hardware.camera2.utils.TypeReference: java.lang.Class getRawType()>
<android.filterfw.core.ShaderProgram: void setDrawMode(int)>
<android.net.IpConfiguration: android.net.IpConfiguration.ProxySettings getProxySettings()>
<android.hardware.camera2.utils.CameraServiceBinderDecorator: java.lang.Object newInstance(java.lang.Object)>
<android.view.ViewParent: boolean onStartNestedScroll(android.view.View,android.view.View,int)>
<android.view.animation.AnimationSet: void restrictDuration(long)>
<android.database.DatabaseUtils: void cursorStringToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>
<android.widget.TableLayout: void setColumnCollapsed(int,boolean)>
<android.opengl.GLES30: void glDeleteTransformFeedbacks(int,java.nio.IntBuffer)>
<android.view.MotionEvent: float getHistoricalY(int)>
<android.database.CursorJoiner: java.util.Iterator iterator()>
<android.view.View: void setTransitionName(java.lang.String)>
<android.hardware.camera2.legacy.CameraDeviceUserShim: int endConfigure()>
<android.app.VoiceInteractor.CompleteVoiceRequest: void <init>(java.lang.CharSequence,android.os.Bundle)>
<android.os.UserManager: void removeRestrictions()>
<android.media.MediaFormat: java.lang.String toString()>
<android.hardware.hdmi.HdmiTimerRecordSources: android.hardware.hdmi.HdmiTimerRecordSources.TimerRecordSource ofExternalPhysicalAddress(android.hardware.hdmi.HdmiTimerRecordSources.TimerInfo,android.hardware.hdmi.HdmiRecordSources.ExternalPhysicalAddress)>
<android.provider.ContactsContract.PinnedPositions: void undemote(android.content.ContentResolver,long)>
<android.filterfw.core.FrameFormat: int getHeight()>
<android.telephony.NeighboringCellInfo: void setCid(int)>
<android.view.MenuItem: android.view.MenuItem setActionView(android.view.View)>
<android.telephony.ServiceState: void setCdmaEriIconIndex(int)>
<android.app.Activity: android.app.Activity getParent()>
<android.renderscript.Byte3: android.renderscript.Byte3 mul(android.renderscript.Byte3,android.renderscript.Byte3)>
<android.text.style.LineHeightSpan.WithDensity: void chooseHeight(java.lang.CharSequence,int,int,int,int,android.graphics.Paint.FontMetricsInt,android.text.TextPaint)>
<android.database.DatabaseUtils: long queryNumEntries(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String,java.lang.String[])>
<android.location.IGpsNavigationMessageListener: void onGpsNavigationMessageReceived(android.location.GpsNavigationMessageEvent)>
<android.app.Activity: void onPostCreate(android.os.Bundle)>
<android.app.UiModeManager: int getNightMode()>
<android.hardware.camera2.params.StreamConfigurationMap: int[] getOutputFormats()>
<android.net.LocalServerSocket: android.net.LocalSocketAddress getLocalSocketAddress()>
<android.text.style.TextAppearanceSpan: int getTextSize()>
<android.filterpacks.ui.SurfaceRenderFilter: void tearDown(android.filterfw.core.FilterContext)>
<android.app.IActivityManager: boolean isImmersive(android.os.IBinder)>
<android.app.ActivityManagerProxy: long inputDispatchingTimedOut(int,boolean,java.lang.String)>
<android.bluetooth.BluetoothSocket: void finalize()>
<android.widget.Filter: void filter(java.lang.CharSequence,android.widget.Filter.FilterListener)>
<android.webkit.PluginData: int getStatusCode()>
<android.speech.srec.Recognizer: void start()>
<android.os.Vibrator: void vibrate(int,java.lang.String,long,android.media.AudioAttributes)>
<android.text.Layout: int getWidth()>
<com.android.internal.widget.PasswordEntryKeyboardHelper: void onPress(int)>
<android.view.accessibility.AccessibilityNodeInfo: void setConnectionId(int)>
<android.os.Parcelable: int describeContents()>
<android.app.Activity: int getVolumeControlStream()>
<android.net.wifi.WifiManager: boolean setWifiEnabled(boolean)>
<android.media.RingtoneManager: int getRingtonePosition(android.net.Uri)>
<android.net.nsd.NsdManager: void registerService(android.net.nsd.NsdServiceInfo,int,android.net.nsd.NsdManager.RegistrationListener)>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int,int,java.util.List)>
<com.android.internal.widget.LockPatternUtils: boolean isBiometricWeakLivelinessEnabled()>
<android.os.Debug: int getThreadAllocSize()>
<android.util.Slog: int d(java.lang.String,java.lang.String)>
<android.database.MergeCursor: void registerContentObserver(android.database.ContentObserver)>
<android.media.audiofx.EnvironmentalReverb: void setReflectionsLevel(short)>
<android.graphics.Paint: android.graphics.MaskFilter setMaskFilter(android.graphics.MaskFilter)>
<com.android.internal.util.FastXmlSerializer: java.lang.String getNamespace()>
<android.database.DatabaseUtils: void cursorStringToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues,java.lang.String)>
<android.media.tv.TvView: boolean dispatchKeyEvent(android.view.KeyEvent)>
<com.android.internal.os.BatteryStatsImpl: long getBatteryUptime(long)>
<android.location.LocationListener: void onProviderEnabled(java.lang.String)>
<android.nfc.INfcCardEmulation: boolean setDefaultForNextTap(int,android.content.ComponentName)>
<android.media.tv.ITvInputSessionWrapper: void removeOverlayView()>
<android.telecom.RemoteConnection.Callback: void onAddressChanged(android.telecom.RemoteConnection,android.net.Uri,int)>
<android.net.LinkAddress: java.lang.String toString()>
<android.renderscript.Byte3: void div(byte)>
<android.database.AbstractWindowedCursor: void onDeactivateOrClose()>
<android.app.FragmentManagerImpl: void popBackStack(int,int)>
<android.print.PrintManager: void removePrintJobStateChangeListener(android.print.PrintManager.PrintJobStateChangeListener)>
<android.bluetooth.BluetoothAudioConfig: int getSampleRate()>
<com.google.android.gles_jni.GLImpl: boolean glIsRenderbufferOES(int)>
<com.android.internal.widget.LockPatternUtils: void reportFailedPasswordAttempt()>
<android.app.VoiceInteractor: boolean submitRequest(android.app.VoiceInteractor.Request)>
<android.graphics.Atlas: android.graphics.Atlas.Entry pack(int,int,android.graphics.Atlas.Entry)>
<android.media.tv.TvInputService.Session: boolean onKeyUp(int,android.view.KeyEvent)>
<android.database.DatabaseUtils.InsertHelper: void bind(int,float)>
<android.animation.ValueAnimator: android.animation.ValueAnimator ofObject(android.animation.TypeEvaluator,java.lang.Object[])>
<android.view.MenuItem: java.lang.CharSequence getTitleCondensed()>
<android.widget.Checkable: boolean isChecked()>
<android.view.Surface: void <init>(android.graphics.SurfaceTexture)>
<android.location.GpsMeasurement: double getCodePhaseInChips()>
<com.android.internal.os.HandlerCaller: void executeOrSendMessage(android.os.Message)>
<android.gesture.GestureLibrary: void removeEntry(java.lang.String)>
<android.print.PrintJob: android.print.PrintJobId getId()>
<android.printservice.PrintServiceInfo: void <init>(android.os.Parcel)>
<android.print.IPrintManager: void createPrinterDiscoverySession(android.print.IPrinterDiscoveryObserver,int)>
<android.inputmethodservice.KeyboardView: void swipeUp()>
<android.view.View: int[] getLocationOnScreen()>
<com.android.internal.view.menu.ActionMenu: android.view.MenuItem getItem(int)>
<android.telecom.Call: void phoneAccountSelected(android.telecom.PhoneAccountHandle)>
<com.android.internal.os.BatteryStatsHelper: double getComputedPower()>
<android.security.IKeystoreService: int insert(java.lang.String,byte[],int,int)>
<android.media.AudioSystem: int muteMicrophone(boolean)>
<android.telephony.CellIdentityLte: int getMcc()>
<android.net.wifi.BatchedScanSettings: int hashCode()>
<com.android.internal.os.BackgroundThread: com.android.internal.os.BackgroundThread get()>
<android.preference.RingtonePreference: void setRingtoneType(int)>
<android.graphics.drawable.NinePatchDrawable: void setTintMode(android.graphics.PorterDuff.Mode)>
<android.app.admin.IDevicePolicyManager: boolean setPermittedAccessibilityServices(android.content.ComponentName,java.util.List)>
<android.widget.ExpandableListView: void setGroupIndicator(android.graphics.drawable.Drawable)>
<android.animation.Keyframe: android.animation.Keyframe ofInt(float)>
<android.hardware.usb.UsbDeviceConnection: boolean setConfiguration(android.hardware.usb.UsbConfiguration)>
<android.location.GpsMeasurement: void resetCodePhaseUncertaintyInChips()>
<android.app.IActivityContainer: void checkEmbeddedAllowedIntentSender(android.content.IIntentSender)>
<android.net.LocalSocket: void connect(android.net.LocalSocketAddress,int)>
<android.view.HardwareCanvas: void setProperty(java.lang.String,java.lang.String)>
<android.view.animation.TranslateAnimation: void <init>(int,float,int,float,int,float,int,float)>
<android.view.accessibility.AccessibilityNodeInfo: void setParent(android.view.View,int)>
<android.security.KeyStore: boolean passwordUid(java.lang.String,int)>
<android.transition.PatternPathMotion: android.graphics.Path getPatternPath()>
<android.media.session.PlaybackState.CustomAction: int getIcon()>
<android.drm.DrmRights: void <init>(android.drm.ProcessedData,java.lang.String)>
<android.util.FloatProperty: void set(java.lang.Object,java.lang.Float)>
<android.media.tv.TvInputManager.Hardware: boolean setSurface(android.view.Surface,android.media.tv.TvStreamConfig)>
<com.android.internal.widget.LockPatternUtilsCache: void setLong(java.lang.String,long,int)>
<android.hardware.camera2.params.StreamConfigurationMap: int[] imageFormatToInternal(int[])>
<android.app.FragmentManagerImpl: boolean executePendingTransactions()>
<android.net.wifi.WifiManager: android.net.wifi.WifiManager.WifiLock createWifiLock(java.lang.String)>
<android.app.job.JobParameters: void writeToParcel(android.os.Parcel,int)>
<android.bluetooth.IBluetooth: boolean isActivityAndEnergyReportingSupported()>
<android.text.util.Linkify: boolean addLinks(android.widget.TextView,int)>
<android.app.ActivityOptions: java.util.ArrayList getSharedElementNames()>
<android.os.Handler: android.os.Message obtainMessage()>
<android.opengl.GLES11Ext: void glGetFramebufferAttachmentParameterivOES(int,int,int,java.nio.IntBuffer)>
<android.media.AudioRecord: int setPositionNotificationPeriod(int)>
<android.opengl.GLES31: void glProgramUniformMatrix2fv(int,int,int,boolean,java.nio.FloatBuffer)>
<android.accounts.AccountManager: android.accounts.Account[] getAccountsAsUser(int)>
<android.view.inputmethod.InputConnection: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)>
<android.content.ContentValues: void put(java.lang.String,byte[])>
<android.telephony.IccOpenLogicalChannelResponse: void <init>(int,int,byte[])>
<android.app.usage.UsageStats: long getLastTimeStamp()>
<android.hardware.camera2.params.RggbChannelVector: int hashCode()>
<android.print.PrintJobId: android.print.PrintJobId unflattenFromString(java.lang.String)>
<android.os.Environment.UserEnvironment: java.io.File[] buildExternalStorageAppCacheDirs(java.lang.String)>
<android.os.Parcel: void writeTypedList(java.util.List)>
<android.media.session.ISessionController: android.media.session.ParcelableVolumeInfo getVolumeAttributes()>
<android.renderscript.Long4: void negate()>
<android.net.NetworkFactory: void unregister()>
<android.location.Criteria: void setAltitudeRequired(boolean)>
<android.telecom.TelecomManager: android.telecom.PhoneAccountHandle getConnectionManager()>
<android.transition.SidePropagation: long getStartDelay(android.view.ViewGroup,android.transition.Transition,android.transition.TransitionValues,android.transition.TransitionValues)>
<android.widget.AdapterViewAnimator: void setRemoteViewsAdapter(android.content.Intent)>
<android.opengl.GLES11Ext: void glGetTexGenxvOES(int,int,java.nio.IntBuffer)>
<android.content.ContextWrapper: void startActivity(android.content.Intent)>
<android.widget.ListPopupWindow: void postShow()>
<android.graphics.Rect: void readFromParcel(android.os.Parcel)>
<android.os.INetworkManagementService: void startTethering(java.lang.String[])>
<android.filterfw.core.FrameManager: android.filterfw.core.Frame releaseFrame(android.filterfw.core.Frame)>
<android.util.Property: void <init>(java.lang.Class,java.lang.String)>
<android.media.AudioManager: void registerAudioFocusListener(android.media.AudioManager.OnAudioFocusChangeListener)>
<android.graphics.Paint: android.graphics.MaskFilter getMaskFilter()>
<android.content.Intent.ShortcutIconResource: java.lang.String toString()>
<android.net.wifi.WifiActivityEnergyInfo: long getTimeStamp()>
<android.view.MotionEvent: int getHistorySize()>
<android.net.IConnectivityManager: java.lang.String[] getTetherableWifiRegexs()>
<com.android.internal.statusbar.IStatusBar: void preloadRecentApps()>
<android.bluetooth.IBluetoothManager: boolean enable()>
<android.location.Criteria: void setSpeedAccuracy(int)>
<android.app.AlertDialog: boolean onKeyUp(int,android.view.KeyEvent)>
<com.android.ims.internal.IImsCallSession: void resume(com.android.ims.ImsStreamMediaProfile)>
<android.widget.AutoCompleteTextView: boolean isDropDownAlwaysVisible()>
<android.hardware.camera2.params.MeteringRectangle: boolean equals(java.lang.Object)>
<com.android.ims.ImsConferenceState: int describeContents()>
<android.media.AudioManager: void unregisterAudioFocusListener(android.media.AudioManager.OnAudioFocusChangeListener)>
<android.media.MediaCodecInfo.VideoCapabilities: int getSmallerDimensionUpperLimit()>
<android.widget.OnDateChangedListener: void onDateChanged()>
<android.widget.ScrollBarDrawable: int getAlpha()>
<android.print.PrinterInfo: void writeToParcel(android.os.Parcel,int)>
<android.printservice.PrintServiceInfo: int describeContents()>
<android.view.RenderNode: void end(android.view.HardwareCanvas)>
<android.widget.TabHost: void <init>(android.content.Context)>
<com.android.ims.internal.IImsUtListener: void utConfigurationUpdated(com.android.ims.internal.IImsUt,int)>
<android.view.accessibility.AccessibilityManager: android.view.accessibility.AccessibilityManager getInstance(android.content.Context)>
<android.media.MediaRouter.RouteInfo: java.lang.CharSequence getDescription()>
<android.widget.ListPopupWindow: boolean isModal()>
<android.view.ViewDebug: long getViewInstanceCount()>
<com.android.internal.util.XmlUtils: java.util.HashMap readThisMapXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[],com.android.internal.util.XmlUtils.ReadMapCallback)>
<android.hardware.camera2.params.ColorSpaceTransform: boolean equals(java.lang.Object)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>
<android.view.ViewGroup: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.app.Activity: void onActivityResult(int,int,android.content.Intent)>
<android.webkit.WebView: void enablePlatformNotifications()>
<android.opengl.GLES30: void glUniformMatrix3x4fv(int,int,boolean,float[],int)>
<android.inputmethodservice.InputMethodService: boolean enableHardwareAcceleration()>
<com.android.internal.widget.ActionBarView: java.lang.CharSequence getTitle()>
<com.google.android.util.AbstractMessageParser.YouTubeVideo: boolean isMedia()>
<android.app.Application: void unregisterActivityLifecycleCallbacks(android.app.Application.ActivityLifecycleCallbacks)>
<android.view.HardwareRenderer: void disable(boolean)>
<android.opengl.GLES30: void glGetInteger64i_v(int,int,long[],int)>
<com.android.internal.os.BatteryStatsImpl.Uid: void readWakeSummaryFromParcelLocked(java.lang.String,android.os.Parcel)>
<android.widget.Toolbar: void onSetLayoutParams(android.view.View,android.view.ViewGroup.LayoutParams)>
<android.media.AudioSystem: int getNumStreamTypes()>
<android.graphics.PorterDuffColorFilter: android.graphics.PorterDuff.Mode getMode()>
<android.media.MediaCodec.Callback: void onError(android.media.MediaCodec,android.media.MediaCodec.CodecException)>
<com.android.internal.widget.DecorToolbar: void setDisplayOptions(int)>
<com.android.internal.util.FileRotator: void dumpAll(java.io.OutputStream)>
<android.app.admin.DevicePolicyManager: boolean addCrossProfileWidgetProvider(android.content.ComponentName,java.lang.String)>
<android.content.ContextWrapper: void startActivityAsUser(android.content.Intent,android.os.Bundle,android.os.UserHandle)>
<com.android.internal.os.BatteryStatsHelper: double getTotalPower()>
<android.content.res.ColorStateList: android.content.res.ColorStateList valueOf(int)>
<android.util.AttributeSet: java.lang.String getIdAttribute()>
<com.android.internal.widget.PointerLocationView.PointerState: void clearTrace()>
<android.net.NetworkPolicyManager: void snapToCycleDay(android.text.format.Time,int)>
<android.media.session.MediaSession.Callback: void onPause()>
<com.android.internal.app.AlertActivity: void onCreate(android.os.Bundle)>
<android.hardware.location.ActivityRecognitionEvent: java.lang.String getActivity()>
<android.telephony.CellIdentityWcdma: int getMnc()>
<android.location.GpsMeasurement: void resetPseudorangeUncertaintyInMeters()>
<android.bluetooth.IBluetoothHeadsetClient: boolean rejectCall(android.bluetooth.BluetoothDevice)>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setAllowedOverMetered(boolean)>
<android.renderscript.Script.FieldBase: android.renderscript.Element getElement()>
<android.webkit.WebSettings: boolean getAcceptThirdPartyCookies()>
<android.app.AppOpsManager: int checkOpNoThrow(int,int,java.lang.String)>
<android.media.MediaRouterClientState: android.media.MediaRouterClientState.RouteInfo getRoute(java.lang.String)>
<com.google.android.util.AbstractMessageParser: int getPartCount()>
<android.renderscript.Byte2: void negate()>
<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber(long)>
<android.util.Range: void <init>(java.lang.Comparable,java.lang.Comparable)>
<android.graphics.Movie: void draw(android.graphics.Canvas,float,float,android.graphics.Paint)>
<android.net.MobileDataStateTracker: void startSampling(android.net.SamplingDataTracker.SamplingSnapshot)>
<android.widget.TextSwitcher: void setText(java.lang.CharSequence)>
<android.hardware.input.TouchCalibration: int describeContents()>
<com.android.server.net.NetlinkTracker: void <init>(java.lang.String,com.android.server.net.NetlinkTracker.Callback)>
<android.text.format.Time: void clear(java.lang.String)>
<com.android.internal.view.ActionBarPolicy: int getEmbeddedMenuWidthLimit()>
<android.text.format.DateUtils: java.lang.String getDayOfWeekString(int,int)>
<android.view.accessibility.AccessibilityManager: void removeAccessibilityInteractionConnection(android.view.IWindow)>
<android.media.AudioManagerInternal: void adjustSuggestedStreamVolumeForUid(int,int,int,java.lang.String,int)>
<android.net.INetworkStatsSession: android.net.NetworkStats getSummaryForNetwork(android.net.NetworkTemplate,long,long)>
<android.view.WindowId: void <init>(android.os.IBinder)>
<android.view.KeyEvent: boolean isGamepadButton(int)>
<android.content.pm.RegisteredServicesCache: android.content.pm.RegisteredServicesCacheListener getListener()>
<android.app.ActivityView: void onLayout(boolean,int,int,int,int)>
<android.os.Process: int myTid()>
<android.app.Activity: void finishActivity(int)>
<android.widget.GridView: int getVerticalSpacing()>
<com.google.android.gles_jni.GLImpl: void glTexCoordPointer(int,int,int,java.nio.Buffer)>
<android.content.pm.PackageParser.ServiceIntentInfo: java.lang.String toString()>
<com.android.internal.widget.multiwaveview.GlowPadView: boolean onHoverEvent(android.view.MotionEvent)>
<android.app.WallpaperManager: void setBitmap(android.graphics.Bitmap)>
<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
<com.android.internal.os.BatteryStatsImpl.Counter: void writeCounterToParcel(android.os.Parcel,com.android.internal.os.BatteryStatsImpl.Counter)>
<com.android.internal.os.BatteryStatsImpl: java.lang.String getEndPlatformVersion()>
<android.net.nsd.DnsSdTxtRecord: int size()>
<android.provider.Settings.Global: boolean putFloat(android.content.ContentResolver,java.lang.String,float)>
<android.filterpacks.text.StringLogger: void process(android.filterfw.core.FilterContext)>
<android.emoji.EmojiFactory: android.graphics.Bitmap getBitmapFromVendorSpecificSjis(char)>
<android.hardware.usb.UsbDevice: void <init>(java.lang.String,int,int,int,int,int,java.lang.String,java.lang.String,java.lang.String)>
<android.app.IProcessObserver: void onProcessDied(int,int)>
<com.android.internal.widget.LockPatternUtils: void setWidgetsEnabled(boolean,int)>
<android.view.animation.GridLayoutAnimationController: long getDelayForView(android.view.View)>
<android.os.Bundle: void readFromParcel(android.os.Parcel)>
<android.accounts.AccountAuthenticatorResponse: void onResult(android.os.Bundle)>
<android.os.ResultReceiver: int describeContents()>
<android.net.nsd.NsdManager.DiscoveryListener: void onServiceFound(android.net.nsd.NsdServiceInfo)>
<android.view.WindowManagerPolicy: int subWindowTypeToLayerLw(int)>
<android.media.MediaCodec: void reset()>
<android.transition.TransitionSet: android.transition.TransitionSet addTarget(int)>
<android.net.wifi.IWifiManager: int getSupportedFeatures()>
<android.filterfw.io.PatternScanner: void <init>(java.lang.String)>
<com.android.internal.widget.ActionBarView: int getDisplayOptions()>
<com.android.internal.app.IVoiceInteractor: boolean[] supportsCommands(java.lang.String,java.lang.String[])>
<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityInteractionClient getInstance()>
<android.net.wifi.WifiScanner.WifiChangeListener: void onQuiescence(android.net.wifi.ScanResult[])>
<android.bluetooth.IBluetoothInputDevice: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.database.sqlite.SQLiteConnectionPool: android.database.sqlite.SQLiteConnection acquireConnection(java.lang.String,int,android.os.CancellationSignal)>
<android.bluetooth.BluetoothHeadsetClient: boolean connect(android.bluetooth.BluetoothDevice)>
<android.net.wifi.IWifiManager: boolean requestBatchedScan(android.net.wifi.BatchedScanSettings,android.os.IBinder,android.os.WorkSource)>
<android.preference.PreferenceActivity: void onDestroy()>
<android.view.MotionEvent: boolean isButtonPressed(int)>
<com.android.ims.internal.IImsCallSession: void accept(int,com.android.ims.ImsStreamMediaProfile)>
<android.hardware.camera2.params.StreamConfigurationMap: android.util.Size[] getHighSpeedVideoSizesFor(android.util.Range)>
<android.webkit.WebView: void invokeZoomPicker()>
<android.view.View: android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets)>
<android.util.SparseArray: void remove(int)>
<android.graphics.Matrix: boolean preScale(float,float,float,float)>
<com.android.internal.widget.LockPatternUtils: int maxLengthSequence(java.lang.String)>
<com.android.internal.util.MemInfoReader: void readMemInfo()>
<android.app.FragmentManager: boolean executePendingTransactions()>
<android.net.nsd.NsdManager.DiscoveryListener: void onDiscoveryStarted(java.lang.String)>
<android.media.MediaDrm.Certificate: byte[] getContent()>
<android.view.inputmethod.SparseRectFArray.SparseRectFArrayBuilder: android.view.inputmethod.SparseRectFArray.SparseRectFArrayBuilder append(int,float,float,float,float,int)>
<android.database.ContentObserver: void onChange(boolean,android.net.Uri)>
<android.widget.FrameLayout: android.content.res.ColorStateList getForegroundTintList()>
<android.view.inputmethod.InputMethodInfo: void writeToParcel(android.os.Parcel,int)>
<android.text.method.WordIterator: int getBeginning(int)>
<android.hardware.Camera: void setAutoFocusMoveCallback(android.hardware.Camera.AutoFocusMoveCallback)>
<android.nfc.cardemulation.CardEmulation: boolean isDefaultServiceForAid(android.content.ComponentName,java.lang.String)>
<android.net.NetworkStatsHistory: void removeBucketsBefore(long)>
<android.app.NativeActivity: void surfaceRedrawNeeded(android.view.SurfaceHolder)>
<android.view.accessibility.AccessibilityNodeInfo: void setLabeledBy(android.view.View)>
<android.hardware.camera2.CameraManager.AvailabilityCallback: void onCameraAvailable(java.lang.String)>
<android.view.View: boolean isInEditMode()>
<android.media.audiofx.LoudnessEnhancer.Settings: java.lang.String toString()>
<com.android.ims.internal.IImsUt: int queryCallBarring(int)>
<android.os.TokenWatcher: void released()>
<android.net.wifi.IWifiManager: java.util.List getBatchedScanResults(java.lang.String)>
<android.transition.Transition: android.transition.Transition setInterpolator(android.animation.TimeInterpolator)>
<android.text.TextUtils: int getOffsetAfter(java.lang.CharSequence,int)>
<android.view.ViewTreeObserver: boolean dispatchOnPreDraw()>
<android.webkit.WebView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.android.internal.view.IInputMethodSession: void finishSession()>
<android.service.trust.TrustAgentService: void onTrustTimeout()>
<android.net.ConnectivityManager.NetworkCallback: void onUnavailable()>
<android.widget.FrameLayout: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>
<com.android.internal.os.BatteryStatsImpl: void noteUserActivityLocked(int,int)>
<android.filterfw.core.OutputPort: void clear()>
<android.text.method.BaseMovementMethod: boolean rightWord(android.widget.TextView,android.text.Spannable)>
<android.bluetooth.BluetoothGattService: int getInstanceId()>
<android.os.HandlerThread: boolean quit()>
<android.text.style.DynamicDrawableSpan: int getVerticalAlignment()>
<android.media.browse.MediaBrowser: boolean isConnected()>
<android.app.Activity: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.telecom.PhoneAccount: int getIconResId()>
<com.android.internal.statusbar.IStatusBar: void cancelPreloadRecentApps()>
<android.net.wifi.WifiManager: boolean disconnect()>
<android.graphics.Rect: boolean contains(int,int,int,int)>
<android.media.MediaCodecInfo.VideoCapabilities: int getWidthAlignment()>
<android.widget.ActionMenuView.LayoutParams: void <init>(int,int)>
<android.net.http.Headers: void setEtag(java.lang.String)>
<android.filterfw.core.Frame: java.lang.Object getObjectValue()>
<android.animation.LayoutTransition: boolean isRunning()>
<com.google.android.util.AbstractMessageParser.TrieNode: void setValue(java.lang.String)>
<android.telephony.PhoneNumberUtils: boolean isVoiceMailNumber(java.lang.String)>
<android.view.ViewGroup: android.view.View findViewByPredicateTraversal(com.android.internal.util.Predicate,android.view.View)>
<android.inputmethodservice.KeyboardView: android.inputmethodservice.Keyboard getKeyboard()>
<android.location.GpsMeasurement: boolean hasSnrInDb()>
<android.util.AtomicFile: byte[] readFully()>
<android.app.backup.BackupTransport: int clearBackupData(android.content.pm.PackageInfo)>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setDescription(java.lang.CharSequence)>
<android.printservice.IPrintService: void validatePrinters(java.util.List)>
<android.app.ActivityManagerProxy: void moveTaskToStack(int,int,boolean)>
<android.opengl.GLES30: void glTexImage3D(int,int,int,int,int,int,int,int,int,int)>
<android.util.Xml: org.xmlpull.v1.XmlPullParser newPullParser()>
<android.media.MediaMetadataRetriever: void setDataSource(java.lang.String,java.util.Map)>
<android.filterfw.core.GLEnvironment: void tearDown()>
<android.renderscript.Int2: void add(int)>
<android.widget.ProgressBar: int getMax()>
<android.widget.SimpleExpandableListAdapter: boolean hasStableIds()>
<android.net.PskKeyManager: javax.crypto.SecretKey getKey(java.lang.String,java.lang.String,java.net.Socket)>
<android.app.IActivityManager: void getMyMemoryState(android.app.ActivityManager.RunningAppProcessInfo)>
<com.android.internal.util.ArrayUtils: boolean contains(java.lang.Object[],java.lang.Object)>
<android.app.ActivityGroup: void onSaveInstanceState(android.os.Bundle)>
<android.os.SystemClock: void sleep(long)>
<android.view.Menu: void setGroupVisible(int,boolean)>
<android.telecom.ParcelableCall: java.lang.String getCallerDisplayName()>
<android.os.IBinder.DeathRecipient: void binderDied()>
<android.speech.tts.TtsEngines: java.util.Locale parseLocaleString(java.lang.String)>
<android.widget.Spinner: int getDropDownVerticalOffset()>
<android.media.audiofx.Virtualizer: boolean getStrengthSupported()>
<android.net.http.Headers: java.lang.String getLocation()>
<android.widget.DatePickerController: void tryVibrate()>
<android.net.wifi.WifiInfo: int describeContents()>
<android.widget.TextView: void setImeOptions(int)>
<android.graphics.Paint: void getTextPath(java.lang.String,int,int,float,float,android.graphics.Path)>
<android.print.PrintJobInfo: java.lang.String getTag()>
<android.print.PrintManager: java.util.List getEnabledPrintServices()>
<android.net.http.HttpAuthHeader: int getScheme()>
<com.android.internal.app.ToolbarActionBar: void setIcon(android.graphics.drawable.Drawable)>
<android.app.Presentation: android.content.res.Resources getResources()>
<com.android.internal.app.WindowDecorActionBar.TabImpl: android.app.ActionBar.Tab setTag(java.lang.Object)>
<android.content.pm.PackageManager: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int)>
<android.gesture.GestureOverlayView: java.util.ArrayList getCurrentStroke()>
<android.app.IStopUserCallback: void userStopAborted(int)>
<android.widget.AbsListView: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.view.WindowManager.LayoutParams: void <init>(int,int,int)>
<android.nfc.NfcActivityManager: void disableReaderMode(android.app.Activity)>
<android.graphics.drawable.RippleDrawable: void applyTheme(android.content.res.Resources.Theme)>
<android.preference.MultiCheckPreference: boolean getValue(int)>
<com.android.internal.widget.multiwaveview.GlowPadView: int getTargetPosition(int)>
<android.content.ContentResolver: void requestSync(android.accounts.Account,java.lang.String,android.os.Bundle)>
<android.service.notification.NotificationListenerService.Ranking: int getRank()>
<android.media.MediaRouter.RouteCategory: int getSupportedTypes()>
<android.widget.ProgressBar: void onSizeChanged(int,int,int,int)>
<android.renderscript.ScriptIntrinsicConvolve5x5: android.renderscript.ScriptIntrinsicConvolve5x5 create(android.renderscript.RenderScript,android.renderscript.Element)>
<android.preference.PreferenceFragment: void onStop()>
<android.widget.SearchView.OnCloseListener: boolean onClose()>
<android.view.View: void getWindowVisibleDisplayFrame(android.graphics.Rect)>
<android.telecom.VideoCallImpl: void sendSessionModifyResponse(android.telecom.VideoProfile)>
<android.app.admin.IDevicePolicyManager: void setMasterVolumeMuted(android.content.ComponentName,boolean)>
<android.app.ActionBar: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.internal.http.multipart.ByteArrayPartSource: long getLength()>
<android.view.inputmethod.ExtractedTextRequest: int describeContents()>
<com.android.internal.widget.DrawableHolder: android.graphics.drawable.BitmapDrawable getDrawable()>
<android.media.SubtitleTrack: void onData(android.media.SubtitleData)>
<android.app.Activity: android.content.ComponentName getCallingActivity()>
<android.app.ActionBar: float getElevation()>
<android.net.ProxyInfo: java.lang.String getExclusionListAsString()>
<android.speech.tts.TextToSpeechService: java.lang.String[] onGetLanguage()>
<android.view.View: android.view.View findViewByPredicate(com.android.internal.util.Predicate)>
<android.accounts.AccountManager: boolean addSharedAccount(android.accounts.Account,android.os.UserHandle)>
<android.media.audiofx.Equalizer: void setProperties(android.media.audiofx.Equalizer.Settings)>
<com.android.internal.telecom.IConnectionServiceAdapter: void setActive(java.lang.String)>
<android.net.LinkQualityInfo: int describeContents()>
<com.android.internal.widget.AutoScrollHelper: com.android.internal.widget.AutoScrollHelper setRampUpDuration(int)>
<android.view.accessibility.AccessibilityNodeProvider: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)>
<android.hardware.SensorListener: void onSensorChanged(int,float[])>
<com.android.ims.internal.IImsUt: int updateCLIP(boolean)>
<android.media.tv.TvInputService.Session: void onSetStreamVolume(float)>
<android.app.job.IJobScheduler: void cancel(int)>
<android.location.Address: java.lang.String getCountryName()>
<android.media.AudioManager: boolean isBluetoothA2dpOn()>
<android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout.Alignment,android.text.TextDirectionHeuristic,float,float,boolean)>
<android.renderscript.BaseObj: java.lang.String getName()>
<android.view.InputDevice: android.view.InputDevice getDevice(int)>
<android.content.UriMatcher: void <init>(int)>
<android.media.tv.TvContract: boolean isProgramUri(android.net.Uri)>
<android.view.WindowManagerInternal: void setWindowsForAccessibilityCallback(android.view.WindowManagerInternal.WindowsForAccessibilityCallback)>
<android.inputmethodservice.AbstractInputMethodService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.net.NetworkRequest: void <init>(android.net.NetworkRequest)>
<android.net.NetworkScorerAppManager: boolean setActiveScorer(android.content.Context,java.lang.String)>
<android.widget.AdapterViewFlipper: boolean isAutoStart()>
<android.animation.AnimatorSet: void playTogether(java.util.Collection)>
<android.renderscript.Element: android.renderscript.Element I16_4(android.renderscript.RenderScript)>
<android.filterfw.core.FrameFormat: int getWidth()>
<android.widget.CalendarView: int getUnfocusedMonthDateColor()>
<android.preference.Preference: int getOrder()>
<android.inputmethodservice.InputMethodService: java.lang.CharSequence getTextForImeAction(int)>
<android.hardware.usb.UsbInterface: int getInterfaceProtocol()>
<android.renderscript.Element: int getSubElementOffsetBytes(int)>
<android.bluetooth.BluetoothClass: boolean equals(java.lang.Object)>
<android.service.voice.VoiceInteractionSession: void onCancel(android.service.voice.VoiceInteractionSession.Request)>
<android.app.IActivityManager: android.app.IActivityManager.WaitResult startActivityAndWait(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,int)>
<android.app.IActivityManager: boolean isTopActivityImmersive()>
<android.content.Intent: android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String)>
<android.view.RenderNode: boolean setTop(int)>
<com.android.internal.widget.IRemoteViewsFactory: int getViewTypeCount()>
<android.service.textservice.SpellCheckerService.Session: android.os.Bundle getBundle()>
<android.graphics.drawable.GradientDrawable: boolean onStateChange(int[])>
<android.app.ListActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
<com.android.internal.app.ResolverActivity: void onRestart()>
<android.graphics.Canvas: void concat(android.graphics.Matrix)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthToken(android.accounts.Account,java.lang.String,boolean,android.accounts.AccountManagerCallback,android.os.Handler)>
<android.animation.ValueAnimator: int getRepeatCount()>
<com.android.internal.widget.LockPatternUtils: int getRequestedPasswordHistoryLength()>
<android.content.RestrictionEntry: java.lang.String[] getChoiceEntries()>
<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,java.lang.String)>
<android.text.InputFilter: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>
<android.util.Singleton: java.lang.Object create()>
<android.media.WebVttParser: int parseIntPercentage(java.lang.String)>
<android.app.ApplicationThreadProxy: void dumpHeap(boolean,java.lang.String,android.os.ParcelFileDescriptor)>
<android.accessibilityservice.IAccessibilityServiceClient: void clearAccessibilityCache()>
<com.android.internal.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)>
<android.media.audiofx.Visualizer: boolean getEnabled()>
<android.filterpacks.imageproc.CropFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<com.android.internal.telecom.ITelecomService: java.util.List getPhoneAccountsSupportingScheme(java.lang.String)>
<android.webkit.UrlInterceptRegistry: boolean registerHandler(android.webkit.UrlInterceptHandler)>
<android.graphics.drawable.DrawableContainer: void setAutoMirrored(boolean)>
<android.app.IActivityManager: int startActivities(android.app.IApplicationThread,java.lang.String,android.content.Intent[],java.lang.String[],android.os.IBinder,android.os.Bundle,int)>
<android.widget.RadioGroup.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>
<android.graphics.Path: void transform(android.graphics.Matrix,android.graphics.Path)>
<android.media.tv.TvView.TvInputCallback: void onContentBlocked(java.lang.String,android.media.tv.TvContentRating)>
<android.view.ViewGroup.LayoutParams: void onDebugDraw(android.view.View,android.graphics.Canvas,android.graphics.Paint)>
<android.media.tv.TvInputService.HardwareSession: void onHardwareVideoUnavailable(int)>
<com.android.internal.widget.LockPatternUtils: boolean addAppWidget(int,int)>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator translationZBy(float)>
<android.database.CrossProcessCursorWrapper: void fillWindow(int,android.database.CursorWindow)>
<android.view.inputmethod.InputMethodInfo: void <init>(android.content.pm.ResolveInfo,boolean,java.lang.String,java.util.List,int,boolean)>
<android.content.BroadcastReceiver: void setResultCode(int)>
<android.filterpacks.videosrc.SurfaceTextureTarget: void prepare(android.filterfw.core.FilterContext)>
<android.bluetooth.BluetoothGatt: boolean writeCharacteristic(android.bluetooth.BluetoothGattCharacteristic)>
<android.text.util.Linkify.MatchFilter: boolean acceptMatch(java.lang.CharSequence,int,int)>
<android.widget.ListView: android.graphics.drawable.Drawable getOverscrollHeader()>
<android.location.LocationManager: java.util.List getProviders(boolean)>
<android.filterfw.core.FrameFormat: boolean equals(java.lang.Object)>
<android.service.media.IMediaBrowserService: void connect(java.lang.String,android.os.Bundle,android.service.media.IMediaBrowserServiceCallbacks)>
<android.view.inputmethod.InputConnection: boolean commitCompletion(android.view.inputmethod.CompletionInfo)>
<android.view.View: void setOnKeyListener(android.view.View.OnKeyListener)>
<android.net.wifi.WifiEnterpriseConfig: int getEapMethod()>
<android.view.SurfaceControl: void destroy()>
<android.media.AudioTrack: int getNativeFrameCount()>
<android.nfc.Tag: int describeContents()>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildQuery(java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.graphics.RegionIterator: boolean next(android.graphics.Rect)>
<android.filterpacks.performance.Throughput: int getPeriodTime()>
<com.android.internal.telecom.IVideoProvider: void setVideoCallback(android.os.IBinder)>
<android.net.NetworkScorerAppManager: boolean isCallerActiveScorer(android.content.Context,int)>
<android.hardware.camera2.impl.CallbackProxies.SessionStateCallbackProxy: void onConfigureFailed(android.hardware.camera2.CameraCaptureSession)>
<android.filterpacks.imageproc.RedEyeFilter: void initProgram(android.filterfw.core.FilterContext,int)>
<android.net.SntpClient: boolean requestTime(java.lang.String,int)>
<android.net.http.AndroidHttpClient: android.net.http.AndroidHttpClient newInstance(java.lang.String,android.content.Context)>
<android.renderscript.Element: android.renderscript.Element.DataType getDataType()>
<android.telecom.RemoteConnection: void answer()>
<android.app.Activity: java.lang.CharSequence getTitle()>
<android.content.IntentFilter: java.util.Iterator pathsIterator()>
<android.content.pm.PackageManager: java.util.List queryPermissionsByGroup(java.lang.String,int)>
<android.service.voice.VoiceInteractionSession: void finish()>
<android.os.RegistrantList: void notifyResult(java.lang.Object)>
<android.widget.Spinner: void setEnabled(boolean)>
<android.content.pm.PackageItemInfo: android.graphics.drawable.Drawable loadDefaultIcon(android.content.pm.PackageManager)>
<android.service.textservice.SpellCheckerService.Session: java.lang.String getLocale()>
<android.text.style.SuggestionSpan: boolean equals(java.lang.Object)>
<android.provider.Settings.Global: long getLong(android.content.ContentResolver,java.lang.String)>
<android.widget.BaseExpandableListAdapter: long getCombinedChildId(long,long)>
<android.text.Selection: boolean extendLeft(android.text.Spannable,android.text.Layout)>
<android.view.inputmethod.InputMethodInfo: java.lang.String getServiceName()>
<android.location.GpsMeasurementsEvent: android.location.GpsClock getClock()>
<android.opengl.EGL14: boolean eglMakeCurrent(android.opengl.EGLDisplay,android.opengl.EGLSurface,android.opengl.EGLSurface,android.opengl.EGLContext)>
<com.android.internal.telephony.ISub: int setDisplayNumber(java.lang.String,long)>
<com.android.internal.widget.LockPatternUtils: void updateEmergencyCallButtonState(android.widget.Button,boolean,boolean)>
<android.accounts.AccountManager: android.accounts.Account[] getSharedAccounts(android.os.UserHandle)>
<android.content.res.ColorStateList: int[] getColors()>
<android.media.session.MediaSession: void setFlags(int)>
<android.accounts.OperationCanceledException: void <init>(java.lang.Throwable)>
<android.hardware.SystemSensorManager: boolean flushImpl(android.hardware.SensorEventListener)>
<android.hardware.camera2.impl.CameraMetadataNative: int getEntryCount()>
<android.widget.GridLayout: boolean getUseDefaultMargins()>
<android.opengl.GLES30: void glUniform3uiv(int,int,java.nio.IntBuffer)>
<android.media.MediaCodec: void signalEndOfInputStream()>
<android.view.ScaleGestureDetector: void <init>(android.content.Context,android.view.ScaleGestureDetector.OnScaleGestureListener)>
<android.bluetooth.BluetoothMasInstance: int hashCode()>
<android.content.ContentProviderOperation: int describeContents()>
<android.provider.Settings.Global: java.lang.String getBluetoothInputDevicePriorityKey(java.lang.String)>
<com.android.internal.os.BatteryStatsImpl: void noteWifiBatchedScanStoppedFromSourceLocked(android.os.WorkSource)>
<android.view.animation.GridLayoutAnimationController: void <init>(android.view.animation.Animation)>
<android.filterfw.core.FilterFunction: void setInputFrame(java.lang.String,android.filterfw.core.Frame)>
<android.view.View: int getMeasuredWidthAndState()>
<android.content.IntentFilter: void addDataSchemeSpecificPart(android.os.PatternMatcher)>
<android.view.inputmethod.InputBinding: android.os.IBinder getConnectionToken()>
<android.app.ApplicationThreadProxy: void dumpActivity(java.io.FileDescriptor,android.os.IBinder,java.lang.String,java.lang.String[])>
<android.widget.SearchView: void setOnQueryTextListener(android.widget.SearchView.OnQueryTextListener)>
<android.preference.DialogPreference: void setDialogMessage(int)>
<android.webkit.WebView: void onWindowVisibilityChanged(int)>
<android.telephony.CellLocation: android.telephony.CellLocation getEmpty()>
<android.graphics.Canvas: int getSaveCount()>
<android.content.IIntentReceiver: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int)>
<android.media.MediaFocusControl: void registerMediaButtonEventReceiverForCalls(android.content.ComponentName)>
<android.text.style.SuggestionRangeSpan: void writeToParcel(android.os.Parcel,int)>
<android.database.Cursor: boolean moveToFirst()>
<android.text.style.SuggestionRangeSpan: void updateDrawState(android.text.TextPaint)>
<android.widget.AbsoluteLayout: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.net.Uri: java.util.List getPathSegments()>
<android.webkit.WebSettings: boolean getAllowContentAccess()>
<android.hardware.camera2.impl.CaptureResultExtras: int describeContents()>
<android.hardware.camera2.marshal.impl.MarshalQueryableString: android.hardware.camera2.marshal.Marshaler createMarshaler(android.hardware.camera2.utils.TypeReference,int)>
<com.android.internal.util.ArrayUtils: int indexOf(java.lang.Object[],java.lang.Object)>
<android.filterfw.core.FilterPort: void setChecksType(boolean)>
<android.view.IApplicationToken: void windowsVisible()>
<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfo focusSearch(int,int,long,int)>
<android.webkit.WebViewFactoryProvider: android.webkit.GeolocationPermissions getGeolocationPermissions()>
<android.opengl.GLES20: void glUniform2iv(int,int,java.nio.IntBuffer)>
<android.webkit.CacheManager.CacheResult: java.io.OutputStream getOutputStream()>
<android.media.MediaCodecList: android.media.MediaCodecInfo[] getCodecInfos()>
<android.net.WifiLinkQualityInfo: void setType(int)>
<android.app.Fragment: void onPrepareOptionsMenu(android.view.Menu)>
<android.provider.ContactsContract.CommonDataKinds.StructuredPostal: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>
<android.app.LauncherActivity: void setTitle(int)>
<android.hardware.location.GeofenceHardwareMonitorEvent: int getMonitoringType()>
<android.filterfw.core.FilterPort: java.lang.String toString()>
<android.media.tv.ITvInputService: void notifyHdmiDeviceAdded(android.hardware.hdmi.HdmiDeviceInfo)>
<android.content.ContentProviderResult: int describeContents()>
<android.view.inputmethod.BaseInputConnection: boolean deleteSurroundingText(int,int)>
<com.android.internal.telecom.ITelecomService: boolean isRinging()>
<android.text.method.SingleLineTransformationMethod: char[] getOriginal()>
<android.content.pm.PackageManager: android.content.res.Resources getResourcesForApplication(java.lang.String)>
<android.net.http.DelegatingSSLSession: byte[] getId()>
<android.media.RemoteDisplayState.RemoteDisplayInfo: boolean isValid()>
<android.content.pm.UserInfo: void <init>(int,java.lang.String,int)>
<android.graphics.drawable.shapes.RoundRectShape: android.graphics.drawable.shapes.RoundRectShape clone()>
<android.renderscript.FieldPacker: android.renderscript.Long4 subLong4()>
<android.net.ConnectivityManager: void unregisterNetworkCallback(android.net.ConnectivityManager.NetworkCallback)>
<android.os.BatteryStats.Uid: long getWifiRunningTime(long,int)>
<android.os.Bundle: char[] getCharArray(java.lang.String)>
<com.google.android.gles_jni.GLImpl: void glDrawTexfOES(float,float,float,float,float)>
<android.content.pm.ComponentInfo: void <init>(android.content.pm.ComponentInfo)>
<android.app.Activity: boolean onCreateThumbnail(android.graphics.Bitmap,android.graphics.Canvas)>
<android.app.ActivityThread: void applyConfigurationToResources(android.content.res.Configuration)>
<android.text.StaticLayout: int getLineDescent(int)>
<android.webkit.WebView: void setOverScrollMode(int)>
<android.telephony.PhoneNumberUtils: boolean isPotentialEmergencyNumber(long,java.lang.String)>
<android.speech.tts.TextToSpeech.Action: java.lang.Object run(android.speech.tts.ITextToSpeechService)>
<android.net.ConnectivityManager: boolean isNetworkTypeWifi(int)>
<android.widget.ImageView: void setMaxWidth(int)>
<android.widget.SlidingDrawer: void toggle()>
<android.filterpacks.videosrc.MediaSource: void setupPorts()>
<android.content.ContentProvider: android.content.IContentProvider getIContentProvider()>
<android.hardware.camera2.DngCreator: void writeInputStream(java.io.OutputStream,android.util.Size,java.io.InputStream,long)>
<android.telecom.Phone: void setMuted(boolean)>
<android.preference.SeekBarDialogPreference: void onBindDialogView(android.view.View)>
<android.app.SearchableInfo.ActionKeyInfo: java.lang.String getSuggestActionMsg()>
<android.transition.TransitionSet: android.transition.TransitionSet addTarget(android.view.View)>
<android.view.View: boolean onDragEvent(android.view.DragEvent)>
<com.google.android.gles_jni.GLImpl: void glGetTexGenxv(int,int,java.nio.IntBuffer)>
<android.view.Window: android.content.Context getContext()>
<android.view.accessibility.AccessibilityNodeInfo: long getParentNodeId()>
<android.content.pm.ProviderInfo: void dump(android.util.Printer,java.lang.String)>
<android.graphics.Camera: float getLocationX()>
<android.app.Activity: boolean onOptionsItemSelected(android.view.MenuItem)>
<com.android.internal.os.BatteryStatsHelper: double getMaxRealPower()>
<android.opengl.GLES30: boolean glIsTransformFeedback(int)>
<android.opengl.GLES30: void glFlushMappedBufferRange(int,int,int)>
<android.app.FragmentTransaction: android.app.FragmentTransaction setBreadCrumbTitle(int)>
<android.net.wifi.p2p.WifiP2pManager: void setWFDInfo(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pWfdInfo,android.net.wifi.p2p.WifiP2pManager.ActionListener)>
<android.filterpacks.imageproc.SepiaFilter: void process(android.filterfw.core.FilterContext)>
<android.hardware.camera2.params.Face: void <init>(android.graphics.Rect,int)>
<android.graphics.Camera: void restore()>
<android.net.LinkQualityInfo: void setPacketCount(long)>
<android.accessibilityservice.IAccessibilityServiceConnection: void setOnKeyEventResult(boolean,int)>
<android.filterpacks.videosrc.MediaSource: void open(android.filterfw.core.FilterContext)>
<android.telephony.TelephonyManager: java.lang.String[] getPcscfAddress(java.lang.String)>
<android.telephony.TelephonyManager: boolean isVoiceCapable()>
<android.view.animation.TranslateAnimation: void initialize(int,int,int,int)>
<android.net.TrafficStats: long getUidTcpTxBytes(int)>
<android.filterpacks.base.FrameStore: void process(android.filterfw.core.FilterContext)>
<android.util.SparseArray: android.util.SparseArray clone()>
<android.media.AudioManager: boolean isAudioFocusExclusive()>
<android.widget.ListPopupWindow: void setSelection(int)>
<android.os.Debug: void dumpHprofData(java.lang.String)>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender addPages(java.util.List)>
<android.net.NetworkAgent: void removeUidRanges(android.net.UidRange[])>
<android.media.projection.IMediaProjectionManager: void stopActiveProjection()>
<android.app.Activity: void onPanelClosed(int,android.view.Menu)>
<android.graphics.Canvas: void translate(float,float)>
<android.webkit.WebViewProvider.ScrollDelegate: int computeVerticalScrollOffset()>
<android.view.View: void setAnimation(android.view.animation.Animation)>
<android.graphics.drawable.GradientDrawable: int getAlpha()>
<android.net.TrafficStats: void untagSocket(java.net.Socket)>
<android.widget.FrameLayout.LayoutParams: void <init>(int,int)>
<android.content.ContentProviderOperation: void writeToParcel(android.os.Parcel,int)>
<android.content.IntentFilter.AuthorityEntry: void <init>(java.lang.String,java.lang.String)>
<android.util.MonthDisplayHelper: void previousMonth()>
<android.graphics.SurfaceTexture.OutOfResourcesException: void <init>(java.lang.String)>
<android.os.UserHandle: boolean isOwner()>
<android.database.sqlite.SQLiteCursor: void deactivate()>
<android.view.textservice.SpellCheckerInfo: java.lang.String getPackageName()>
<com.google.android.gles_jni.EGLContextImpl: boolean equals(java.lang.Object)>
<android.webkit.WebView.PrivateAccess: boolean super_onGenericMotionEvent(android.view.MotionEvent)>
<android.content.Entity: void <init>(android.content.ContentValues)>
<android.renderscript.Float2: void div(android.renderscript.Float2)>
<android.widget.Spinner: void <init>(android.content.Context,android.util.AttributeSet,int,int,int)>
<android.os.CommonTimeConfig: android.os.CommonTimeConfig create()>
<android.location.GpsMeasurement: void setDopplerShiftUncertaintyInHz(double)>
<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessStats.ServiceState getServiceStateLocked(java.lang.String,int,int,java.lang.String,java.lang.String)>
<android.app.ActivityManagerProxy: android.content.Intent registerReceiver(android.app.IApplicationThread,java.lang.String,android.content.IIntentReceiver,android.content.IntentFilter,java.lang.String,int)>
<android.provider.CalendarContract.EventsEntity: android.content.EntityIterator newEntityIterator(android.database.Cursor,android.content.ContentResolver)>
<android.graphics.drawable.ScaleDrawable: void setColorFilter(android.graphics.ColorFilter)>
<android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)>
<android.net.ConnectivityManager.NetworkCallback: void onPreCheck(android.net.Network)>
<android.accessibilityservice.AccessibilityServiceInfo: int hashCode()>
<android.graphics.Matrix: void setSkew(float,float,float,float)>
<android.renderscript.RSTextureView: void <init>(android.content.Context)>
<android.service.voice.VoiceInteractionService: android.service.voice.AlwaysOnHotwordDetector createAlwaysOnHotwordDetector(java.lang.String,java.util.Locale,android.service.voice.AlwaysOnHotwordDetector.Callback)>
<com.android.internal.util.HexDump: byte[] hexStringToByteArray(java.lang.String)>
<android.widget.RemoteViews: void addView(int,android.widget.RemoteViews)>
<android.bluetooth.IBluetoothPbap: android.bluetooth.BluetoothDevice getClient()>
<android.media.tv.TvInputService: android.media.tv.TvInputInfo onHardwareAdded(android.media.tv.TvInputHardwareInfo)>
<android.content.ContentProviderResult: java.lang.String toString()>
<com.android.internal.view.menu.MenuItemImpl: void setActionViewExpanded(boolean)>
<com.android.internal.app.MediaRouteChooserDialogFragment: int getRouteTypes()>
<android.content.pm.PackageInstaller.SessionInfo: android.graphics.Bitmap getAppIcon()>
<android.media.AudioFormat: int getBytesPerSample(int)>
<android.filterpacks.imageproc.FixedRotationFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<com.android.internal.view.animation.FallbackLUTInterpolator: long createNativeInterpolator()>
<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getCompleteVoiceMailNumber()>
<android.accounts.AccountAuthenticatorResponse: void onError(int,java.lang.String)>
<android.content.Intent: android.os.Bundle getBundleExtra(java.lang.String)>
<com.android.internal.app.IAppOpsService: int checkAudioOperation(int,int,int,java.lang.String)>
<android.filterfw.core.VertexFrame: void setDataFromFrame(android.filterfw.core.Frame)>
<android.telephony.CellSignalStrengthWcdma: int getDbm()>
<android.widget.Scroller: int timePassed()>
<android.bluetooth.BluetoothHeadsetClient: boolean acceptCall(android.bluetooth.BluetoothDevice,int)>
<android.security.IKeyChainService: byte[] getEncodedCaCertificate(java.lang.String,boolean)>
<android.widget.VideoView: void stopPlayback()>
<android.net.http.RequestQueue: void enablePlatformNotifications()>
<android.security.KeyChain: java.security.PrivateKey getPrivateKey(android.content.Context,java.lang.String)>
<android.view.InputDevice: boolean supportsSource(int)>
<android.location.GpsMeasurement: void setCarrierPhase(double)>
<android.service.notification.NotificationListenerService: void onInterruptionFilterChanged(int)>
<com.android.internal.util.IndentingPrintWriter: void printHexPair(java.lang.String,int)>
<android.bluetooth.IBluetooth: boolean setPairingConfirmation(android.bluetooth.BluetoothDevice,boolean)>
<android.view.animation.Animation: void setAnimationListener(android.view.animation.Animation.AnimationListener)>
<android.app.backup.IFullBackupRestoreObserver: void onStartBackup()>
<android.media.AudioGainConfig: int channelMask()>
<android.text.method.MetaKeyKeyListener: void adjustMetaAfterKeypress(android.text.Spannable)>
<android.hardware.Camera.Parameters: void setGpsProcessingMethod(java.lang.String)>
<android.text.Html: android.text.Spanned fromHtml(java.lang.String)>
<com.android.internal.os.BatteryStatsImpl.BatchTimer: void abortLastDuration(com.android.internal.os.BatteryStatsImpl)>
<android.provider.Settings.System: boolean putConfiguration(android.content.ContentResolver,android.content.res.Configuration)>
<android.media.MediaRouter.SimpleCallback: void onRouteRemoved(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>
<android.net.INetworkManagementEventObserver: void addressRemoved(java.lang.String,android.net.LinkAddress)>
<android.content.pm.LauncherActivityInfo: long getFirstInstallTime()>
<android.widget.ActivityChooserView: void onMeasure(int,int)>
<com.android.internal.textservice.ITextServicesManager: void getSpellCheckerService(java.lang.String,java.lang.String,com.android.internal.textservice.ITextServicesSessionListener,com.android.internal.textservice.ISpellCheckerSessionListener,android.os.Bundle)>
<android.net.Uri: void checkFileUriExposed(java.lang.String)>
<android.graphics.drawable.StateListDrawable: int getStateCount()>
<android.bluetooth.BluetoothMasInstance: int getId()>
<android.media.session.MediaSession.CallbackStub: void onRate(android.media.Rating)>
<android.hardware.camera2.legacy.ParameterUtils.ZoomData: void <init>(int,android.graphics.Rect,android.graphics.Rect)>
<android.view.MenuItem: android.view.MenuItem setShowAsActionFlags(int)>
<android.media.MediaFocusControl: int abandonAudioFocus(android.media.IAudioFocusDispatcher,java.lang.String)>
<android.widget.ListView: void setAdapter(android.widget.ListAdapter)>
<android.widget.CalendarView: void setDate(long,boolean,boolean)>
<android.graphics.Region: void <init>(android.graphics.Region)>
<android.graphics.Camera: void rotateX(float)>
<android.preference.ListPreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.graphics.drawable.NinePatchDrawable: int getChangingConfigurations()>
<android.text.TextDirectionHeuristic: boolean isRtl(char[],int,int)>
<android.os.Binder: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.hardware.camera2.legacy.RequestQueue: long stopRepeating()>
<android.app.StatusBarManager: void expandNotificationsPanel()>
<android.app.ActivityOptions: android.app.ActivityOptions makeSceneTransitionAnimation(android.app.Activity,android.view.View,java.lang.String)>
<com.android.internal.app.AlertController: void setView(android.view.View)>
<android.database.DatabaseUtils: void cursorLongToContentValues(android.database.Cursor,java.lang.String,android.content.ContentValues)>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: void growArray(int,int)>
<android.preference.ListPreference: void setValueIndex(int)>
<android.net.MobileDataStateTracker: void removeStackedLink(android.net.LinkProperties)>
<android.media.SubtitleTrack: void hide()>
<android.content.AsyncQueryHandler: void startUpdate(int,java.lang.Object,android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<android.hardware.location.IGeofenceHardware: void setFusedGeofenceHardware(android.location.IFusedGeofenceHardware)>
<android.view.RenderNode: boolean setClipBounds(android.graphics.Rect)>
<android.app.Notification.BigTextStyle: android.app.Notification.BigTextStyle bigText(java.lang.CharSequence)>
<com.android.internal.os.BatteryStatsImpl: void noteWifiRunningChangedLocked(android.os.WorkSource,android.os.WorkSource)>
<android.content.ContentResolver: void removeStatusChangeListener(java.lang.Object)>
<com.android.internal.os.BatteryStatsImpl.Uid: void noteStopWakeLocked(int,java.lang.String,int,long)>
<com.android.internal.widget.ToolbarWidgetWrapper: android.content.Context getContext()>
<android.bluetooth.BluetoothGattCharacteristic: boolean setValue(int,int,int)>
<com.android.internal.util.AsyncChannel: void sendMessage(int,int,int,java.lang.Object)>
<com.android.internal.widget.ExploreByTouchHelper: void <init>(android.view.View)>
<android.widget.TextView: int[] onCreateDrawableState(int)>
<android.view.KeyEvent: char getMatch(char[],int)>
<android.widget.ProgressBar: void <init>(android.content.Context,android.util.AttributeSet)>
<android.hardware.display.DisplayManagerInternal.DisplayPowerRequest: void copyFrom(android.hardware.display.DisplayManagerInternal.DisplayPowerRequest)>
<android.media.session.PlaybackState: void writeToParcel(android.os.Parcel,int)>
<android.widget.AbsListView: void setScrollingCacheEnabled(boolean)>
<android.net.wifi.WifiConfiguration: android.net.wifi.ScanResult lastSeen()>
<android.app.IActivityManager: void removeContentProviderExternal(java.lang.String,android.os.IBinder)>
<android.view.KeyEvent: android.view.KeyEvent changeAction(android.view.KeyEvent,int)>
<android.opengl.GLES20: void glBlendEquationSeparate(int,int)>
<android.text.BoringLayout: android.text.BoringLayout.Metrics isBoring(java.lang.CharSequence,android.text.TextPaint,android.text.TextDirectionHeuristic,android.text.BoringLayout.Metrics)>
<android.webkit.WebViewProvider.ViewDelegate: void onVisibilityChanged(android.view.View,int)>
<android.app.IAlarmManager: void setTimeZone(java.lang.String)>
<android.view.ViewGroup: void startLayoutAnimation()>
<android.telecom.Conference.Listener: void onStateChanged(android.telecom.Conference,int,int)>
<android.service.trust.ITrustAgentServiceCallback: void revokeTrust()>
<android.view.accessibility.AccessibilityNodeInfo: void setFocusable(boolean)>
<android.opengl.GLES30: void glInvalidateSubFramebuffer(int,int,int[],int,int,int,int,int)>
<android.widget.TableLayout.LayoutParams: void <init>(android.view.ViewGroup.MarginLayoutParams)>
<com.android.internal.telephony.ISms: void sendMultipartText(java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.List,java.util.List)>
<android.app.ActivityManagerProxy: android.os.IBinder newUriPermissionOwner(java.lang.String)>
<android.view.WindowManagerPolicy.ScreenOnListener: void onScreenOn()>
<android.widget.AdapterView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.widget.RatingBar: int getNumStars()>
<com.android.internal.net.NetworkStatsFactory: android.net.NetworkStats readNetworkStatsSummaryDev()>
<android.view.Menu: int size()>
<android.view.View: boolean dispatchNestedFling(float,float,boolean)>
<android.content.res.Resources.Theme: int[] getAllAttributes()>
<android.app.Fragment: boolean isDetached()>
<android.inputmethodservice.InputMethodService.InputMethodImpl: void changeInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)>
<android.renderscript.Short3: void add(short)>
<android.view.View: android.view.View getRootView()>
<android.renderscript.FieldPacker: void addU16(android.renderscript.Int3)>
<com.android.internal.os.BaseCommand: java.lang.String nextArg()>
<android.net.NetworkStatsHistory: void writeToStream(java.io.DataOutputStream)>
<com.android.internal.telephony.ISms: boolean updateMessageOnIccEfForSubscriber(long,java.lang.String,int,int,byte[])>
<com.android.internal.inputmethod.InputMethodUtils: java.util.ArrayList getDefaultEnabledImes(android.content.Context,boolean,java.util.ArrayList)>
<android.net.wifi.WifiManager: boolean enableNetwork(int,boolean)>
<com.android.internal.os.BatteryStatsImpl: void setNoAutoReset(boolean)>
<android.content.res.Resources: android.content.res.Resources.Theme newTheme()>
<android.os.Parcel: void readCharArray(char[])>
<android.app.backup.BackupDataInputStream: int size()>
<android.view.MagnificationSpec: java.lang.String toString()>
<android.view.RenderNode: boolean getClipToOutline()>
<android.app.ActivityThread: android.app.Instrumentation getInstrumentation()>
<android.widget.CursorTreeAdapter: android.widget.FilterQueryProvider getFilterQueryProvider()>
<android.media.AudioTrack: int setPlaybackHeadPosition(int)>
<android.app.ActivityManagerProxy: android.content.pm.ConfigurationInfo getDeviceConfigurationInfo()>
<android.renderscript.ProgramVertex.Builder: android.renderscript.ProgramVertex.Builder addInput(android.renderscript.Element)>
<android.content.pm.PackageInstaller.SessionInfo: void <init>(android.os.Parcel)>
<android.net.NetworkTemplate: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.widget.multiwaveview.GlowPadView: boolean replaceTargetDrawablesIfPresent(android.content.ComponentName,java.lang.String,int)>
<android.app.ApplicationThreadProxy: void scheduleLowMemory()>
<com.android.internal.view.menu.ActionMenu: android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence)>
<android.service.dreams.DreamService: void onPanelClosed(int,android.view.Menu)>
<android.service.notification.NotificationListenerService.RankingMap: java.lang.String[] getOrderedKeys()>
<android.telecom.DisconnectCause: int getTone()>
<android.net.NetworkPolicyManager: android.net.NetworkPolicy[] getNetworkPolicies()>
<android.media.tv.TvInputManager: boolean isRatingBlocked(android.media.tv.TvContentRating)>
<com.android.internal.util.StateMachine: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.view.TextureView: void onDraw(android.graphics.Canvas)>
<android.opengl.GLES11: void glNormalPointer(int,int,int)>
<com.android.internal.os.BatterySipper: java.lang.String[] getPackages()>
<android.media.MediaDrm: void setOnEventListener(android.media.MediaDrm.OnEventListener)>
<android.media.WebVttParser: java.lang.String timeToString(long)>
<android.content.IContentService: void requestSync(android.accounts.Account,java.lang.String,android.os.Bundle)>
<android.opengl.GLES11Ext: void glGetFramebufferAttachmentParameterivOES(int,int,int,int[],int)>
<android.media.RingtoneManager: android.net.Uri getActualDefaultRingtoneUri(android.content.Context,int)>
<android.security.IKeystoreService: int duplicate(java.lang.String,int,java.lang.String,int)>
<com.android.internal.telephony.ITelephonyRegistry: void notifyCellLocationForSubscriber(long,android.os.Bundle)>
<com.android.internal.view.InputBindResult: void <init>(com.android.internal.view.IInputMethodSession,android.view.InputChannel,java.lang.String,int,int)>
<android.os.BatteryStats.Uid.Proc: long getUserTime(int)>
<android.view.ViewTreeObserver: void addOnGlobalFocusChangeListener(android.view.ViewTreeObserver.OnGlobalFocusChangeListener)>
<android.os.IPowerManager: boolean isWakeLockLevelSupported(int)>
<android.content.pm.VerifierDeviceIdentity: java.lang.String toString()>
<android.os.StrictMode: void onSqliteObjectLeaked(java.lang.String,java.lang.Throwable)>
<android.app.LauncherActivity: java.util.List onQueryPackageManager(android.content.Intent)>
<android.provider.Settings.System: boolean hasInterestingConfigurationChanges(int)>
<android.opengl.GLES20: int glGetError()>
<android.view.animation.Animation: long getDuration()>
<android.graphics.Region: int describeContents()>
<android.os.PerformanceCollector: void <init>(android.os.PerformanceCollector.PerformanceResultsWriter)>
<com.android.internal.util.BitwiseOutputStream: void writeByteArray(int,byte[])>
<android.widget.Editor.TextModifyOperation: void commit()>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setOnDismissListener(android.content.DialogInterface.OnDismissListener)>
<android.hardware.camera2.utils.TaskSingleDrainer: void <init>(android.os.Handler,android.hardware.camera2.utils.TaskDrainer.DrainListener,java.lang.String)>
<android.view.inputmethod.InputMethod: void hideSoftInput(int,android.os.ResultReceiver)>
<android.app.Activity: boolean onSearchRequested()>
<android.database.DatabaseUtils: void dumpCurrentRow(android.database.Cursor,java.io.PrintStream)>
<android.view.RenderNode: float getRotation()>
<android.net.INetworkPolicyManager: void snoozeLimit(android.net.NetworkTemplate)>
<android.widget.MultiAutoCompleteTextView: void performValidation()>
<android.preference.PreferenceCategory: boolean shouldDisableDependents()>
<android.view.Window: boolean superDispatchTrackballEvent(android.view.MotionEvent)>
<com.google.android.util.AbstractMessageParser.Link: void <init>(java.lang.String,java.lang.String)>
<android.filterpacks.imageproc.PosterizeFilter: void <init>(java.lang.String)>
<android.graphics.Matrix: boolean setPolyToPoly(float[],int,float[],int,int)>
<android.content.ContentProviderProxy: java.lang.String getType(android.net.Uri)>
<android.widget.AbsSeekBar: android.graphics.drawable.Drawable getThumb()>
<android.app.Activity: boolean isFinishing()>
<android.security.KeyStore: boolean verify(java.lang.String,byte[],byte[])>
<android.os.Environment: java.io.File getDownloadCacheDirectory()>
<android.os.Parcel: byte[] createByteArray()>
<android.inputmethodservice.AbstractInputMethodService: boolean onTrackballEvent(android.view.MotionEvent)>
<android.filterfw.geometry.Point: android.filterfw.geometry.Point mult(float,float)>
<com.android.internal.util.GrowingArrayUtils: java.lang.Object[] insert(java.lang.Object[],int,int,java.lang.Object)>
<android.security.IKeystoreService: int del(java.lang.String,int)>
<android.net.http.CertificateChainValidator: android.net.http.CertificateChainValidator getInstance()>
<android.text.method.Touch: void scrollTo(android.widget.TextView,android.text.Layout,int,int)>
<android.content.pm.PackageParser.PackageParserException: void <init>(int,java.lang.String)>
<com.android.internal.util.FastPrintWriter: void write(int)>
<android.os.WorkSource: boolean diff(android.os.WorkSource)>
<com.android.internal.view.menu.SubMenuBuilder: android.view.MenuItem getItem()>
<android.text.DynamicLayout: int[] getBlockIndices()>
<android.hardware.display.WifiDisplayStatus: int describeContents()>
<android.graphics.ColorMatrix: void setRGB2YUV()>
<android.renderscript.Element: android.renderscript.Element U64_2(android.renderscript.RenderScript)>
<android.bluetooth.BluetoothGattServer: android.bluetooth.BluetoothGattService getService(java.util.UUID)>
<android.widget.RadioButton: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.hardware.camera2.impl.CameraDeviceImpl: int captureBurst(java.util.List,android.hardware.camera2.impl.CameraDeviceImpl.CaptureCallback,android.os.Handler)>
<android.webkit.WebViewDatabase: boolean hasUsernamePassword()>
<android.graphics.drawable.NinePatchDrawable: int getOpacity()>
<android.view.KeyEvent: boolean getKeyData(android.view.KeyCharacterMap.KeyData)>
<android.content.BroadcastReceiver: android.os.IBinder peekService(android.content.Context,android.content.Intent)>
<android.view.MotionEvent: android.view.MotionEvent copy()>
<android.graphics.Paint: float measureText(char[],int,int)>
<android.database.CursorToBulkCursorAdaptor: void deactivate()>
<android.content.pm.InstrumentationInfo: void <init>(android.content.pm.InstrumentationInfo)>
<android.util.LongSparseArray: int indexOfValue(java.lang.Object)>
<android.hardware.SensorEventListener2: void onFlushCompleted(android.hardware.Sensor)>
<android.view.View: void applyDrawableToTransparentRegion(android.graphics.drawable.Drawable,android.graphics.Region)>
<android.widget.ActivityChooserModel: android.content.Intent chooseActivity(int)>
<android.view.Window: android.media.session.MediaController getMediaController()>
<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Rect,android.graphics.RectF,android.graphics.Paint)>
<android.location.Location: void setExtras(android.os.Bundle)>
<android.widget.Spinner: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.util.SparseIntArray: void clear()>
<android.app.ActivityManagerProxy: int startActivityAsUser(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,int)>
<android.text.style.ScaleXSpan: void updateDrawState(android.text.TextPaint)>
<android.widget.AdapterViewAnimator: void onMeasure(int,int)>
<android.view.ViewGroup: void dispatchSystemUiVisibilityChanged(int)>
<android.print.PrintJobInfo: android.os.Bundle getAdvancedOptions()>
<android.app.admin.DevicePolicyManager: int getKeyguardDisabledFeatures(android.content.ComponentName)>
<com.google.android.gles_jni.GLImpl: void glGetMaterialfv(int,int,float[],int)>
<android.graphics.drawable.RippleDrawable: boolean canApplyTheme()>
<android.transition.Transition: void setPathMotion(android.transition.PathMotion)>
<android.os.Parcel: void writeParcelableCreator(android.os.Parcelable)>
<android.util.Range: android.util.Range intersect(java.lang.Comparable,java.lang.Comparable)>
<android.view.textservice.TextServicesManager: void setSpellCheckerSubtype(android.view.textservice.SpellCheckerSubtype)>
<android.content.IntentSender: int getCreatorUid()>
<android.appwidget.AppWidgetHost: void onProvidersChanged()>
<com.android.internal.app.LocalePicker: void onActivityCreated(android.os.Bundle)>
<android.app.ActionBar: void show()>
<android.view.inputmethod.InputMethodSubtype: boolean isAuxiliary()>
<android.view.View: android.view.HardwareRenderer getHardwareRenderer()>
<com.android.internal.view.menu.IconMenuPresenter: android.os.Parcelable onSaveInstanceState()>
<android.hardware.display.DisplayManagerGlobal: void forgetWifiDisplay(java.lang.String)>
<android.app.Activity: void onUserInteraction()>
<android.os.ConditionVariable: void block()>
<android.net.http.AndroidHttpClient: org.apache.http.HttpResponse execute(org.apache.http.HttpHost,org.apache.http.HttpRequest)>
<android.net.http.HttpsConnection: void initializeEngine(java.io.File)>
<android.view.inputmethod.CursorAnchorInfo: float getInsertionMarkerTop()>
<android.database.sqlite.SQLiteDatabase: void markTableSyncable(java.lang.String,java.lang.String)>
<android.opengl.GLES11Ext: void glDepthRangexOES(int,int)>
<android.graphics.SurfaceTexture: void setOnFrameAvailableListener(android.graphics.SurfaceTexture.OnFrameAvailableListener)>
<android.filterfw.core.OutputPort: void connectTo(android.filterfw.core.InputPort)>
<android.telephony.TelephonyManager: android.telephony.TelephonyManager.MultiSimVariants getMultiSimConfiguration()>
<android.os.storage.StorageEventListener: void onUsbMassStorageConnectionChanged(boolean)>
<android.view.KeyEvent: void startTracking()>
<com.android.internal.util.BitwiseInputStream.AccessException: void <init>(java.lang.String)>
<android.view.KeyEvent: android.view.KeyEvent changeTimeRepeat(android.view.KeyEvent,long,int,int)>
<android.renderscript.Double3: android.renderscript.Double3 mul(android.renderscript.Double3,double)>
<com.android.internal.database.SortCursor: java.lang.String getString(int)>
<android.provider.DocumentsProvider: android.database.Cursor queryRecentDocuments(java.lang.String,java.lang.String[])>
<android.net.NetworkUtils: int netmaskIntToPrefixLength(int)>
<android.app.IActivityManager: void finishHeavyWeightApp()>
<android.content.ContextWrapper: java.io.File getSharedPrefsFile(java.lang.String)>
<android.app.Activity: void onStop()>
<android.os.storage.StorageVolume: void <init>(java.io.File,int,boolean,boolean,boolean,int,boolean,long,android.os.UserHandle)>
<android.net.LinkProperties: java.lang.String getTcpBufferSizes()>
<android.mtp.MtpObjectInfo: int getObjectHandle()>
<android.widget.BaseExpandableListAdapter: int getGroupType(int)>
<android.animation.Animator: void setTarget(java.lang.Object)>
<android.view.ViewRootImpl: void dispatchKeyFromIme(android.view.KeyEvent)>
<android.os.FileUtils: boolean copyFile(java.io.File,java.io.File)>
<android.view.GhostView: void onDraw(android.graphics.Canvas)>
<android.os.Bundle: void putSparseParcelableArray(java.lang.String,android.util.SparseArray)>
<android.printservice.PrintService: android.print.PrinterId generatePrinterId(java.lang.String)>
<android.service.notification.ZenModeConfig: boolean isValidMinute(int)>
<android.util.TimeUtils: java.util.ArrayList getTimeZonesWithUniqueOffsets(java.lang.String)>
<android.renderscript.Byte2: android.renderscript.Byte2 sub(android.renderscript.Byte2,byte)>
<com.google.android.gles_jni.GLImpl: void glTexParameteriv(int,int,int[],int)>
<android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction: int hashCode()>
<android.telecom.ParcelableCall: void <init>(java.lang.String,int,android.telecom.DisconnectCause,java.util.List,int,int,long,android.net.Uri,int,java.lang.String,int,android.telecom.GatewayInfo,android.telecom.PhoneAccountHandle,com.android.internal.telecom.IVideoProvider,java.lang.String,java.util.List,android.telecom.StatusHints,int,java.util.List,android.os.Bundle)>
<android.hardware.Camera.Parameters: float getHorizontalViewAngle()>
<android.text.method.NumberKeyListener: boolean ok(char[],char)>
<android.media.AudioManager: void remoteControlDisplayUsesBitmapSize(android.media.IRemoteControlDisplay,int,int)>
<android.widget.ListView: void addHeaderView(android.view.View,java.lang.Object,boolean)>
<android.hardware.usb.UsbDeviceConnection: java.lang.String getSerial()>
<android.telecom.TelecomManager: boolean isTtySupported()>
<android.widget.TextView: android.content.res.ColorStateList getLinkTextColors()>
<android.graphics.drawable.TransitionDrawable: void resetTransition()>
<android.view.View: boolean requestAccessibilityFocus()>
<android.content.Loader: boolean isReset()>
<android.printservice.IPrintService: void startPrinterDiscovery(java.util.List)>
<android.net.ConnectivityManager: void addDefaultNetworkActiveListener(android.net.ConnectivityManager.OnNetworkActiveListener)>
<com.android.internal.view.menu.BaseMenuPresenter: int getId()>
<android.util.Rational: float toFloat()>
<android.hardware.usb.UsbRequest: boolean queue(java.nio.ByteBuffer,int)>
<android.os.IUserManager: void removeRestrictions()>
<android.database.AbstractWindowedCursor: int getInt(int)>
<android.net.ConnectivityManager: android.net.LinkProperties getLinkProperties(android.net.Network)>
<android.media.MediaRouterClientState.RouteInfo: java.lang.String toString()>
<android.net.LocalSocket: void close()>
<com.google.android.gles_jni.GLImpl: void glGetTexEnvxv(int,int,int[],int)>
<android.filterfw.core.AsyncRunner: java.lang.Exception getError()>
<android.telephony.TelephonyManager: java.lang.String getLine1AlphaTag()>
<android.widget.ExpandableListView: void setAdapter(android.widget.ListAdapter)>
<android.os.RegistrantList: void add(android.os.Registrant)>
<android.database.sqlite.SQLiteDatabase: void beginTransactionNonExclusive()>
<android.hardware.camera2.dispatch.ArgumentReplacingDispatcher: void <init>(android.hardware.camera2.dispatch.Dispatchable,int,java.lang.Object)>
<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuBuilder setHeaderIconInt(int)>
<android.service.dreams.DreamService: void setDozeScreenState(int)>
<com.android.internal.app.ToolbarActionBar: void setSubtitle(java.lang.CharSequence)>
<android.opengl.GLES11Ext: void glClearDepthfOES(float)>
<android.content.pm.PackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>
<android.content.SyncRequest.Builder: android.content.SyncRequest.Builder setManual(boolean)>
<android.preference.PreferenceManager.OnActivityResultListener: boolean onActivityResult(int,int,android.content.Intent)>
<android.filterfw.core.FrameManager: android.filterfw.core.GLEnvironment getGLEnvironment()>
<android.hardware.camera2.DngCreator: void finalize()>
<android.location.GpsMeasurement: void writeToParcel(android.os.Parcel,int)>
<android.net.MobileDataStateTracker: void setUserDataEnable(boolean)>
<android.widget.AbsListView: int computeVerticalScrollOffset()>
<android.hardware.camera2.legacy.CameraDeviceUserShim: int submitRequestList(java.util.List,boolean,android.hardware.camera2.utils.LongParcelable)>
<android.view.SurfaceControl: void openTransaction()>
<android.text.StaticLayout: int getEllipsisCount(int)>
<android.widget.ProgressBar: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.provider.Downloads.Impl: java.lang.String statusToString(int)>
<android.os.INetworkManagementService: void createVirtualNetwork(int,boolean,boolean)>
<android.hardware.camera2.CaptureRequest.Key: void <init>(java.lang.String,java.lang.Class)>
<android.app.job.JobInfo: void writeToParcel(android.os.Parcel,int)>
<android.view.textservice.TextServicesManager: android.view.textservice.SpellCheckerInfo getCurrentSpellChecker()>
<android.mtp.MtpObjectInfo: java.lang.String getKeywords()>
<android.media.AudioManager: void registerMediaButtonEventReceiver(android.app.PendingIntent)>
<android.media.AudioService.VolumeStreamState: java.lang.String getSettingNameForDevice(int)>
<android.opengl.GLES31: void glGetFramebufferParameteriv(int,int,java.nio.IntBuffer)>
<android.os.RecoverySystem: void rebootWipeUserData(android.content.Context,boolean)>
<android.print.pdf.PrintedPdfDocument: int getPageWidth()>
<android.widget.TextView: void setMaxWidth(int)>
<com.android.internal.util.XmlUtils: boolean nextElementWithin(org.xmlpull.v1.XmlPullParser,int)>
<android.renderscript.FieldPacker: android.renderscript.Long3 subLong3()>
<android.hardware.camera2.legacy.SurfaceTextureRenderer: void drawIntoSurfaces(android.hardware.camera2.legacy.CaptureCollector)>
<com.android.internal.view.IInputMethod: void revokeSession(com.android.internal.view.IInputMethodSession)>
<android.opengl.GLES30: void glUniformMatrix4x2fv(int,int,boolean,float[],int)>
<android.util.Log: int v(java.lang.String,java.lang.String)>
<android.opengl.GLES20: void glVertexAttribPointer(int,int,int,boolean,int,int)>
<android.renderscript.Double3: int length()>
<android.widget.AbsListView: void smoothScrollBy(int,int)>
<android.speech.srec.WaveHeader: int getSampleRate()>
<android.media.audiopolicy.AudioPolicyConfig: int describeContents()>
<android.preference.SeekBarDialogPreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.os.storage.StorageVolume: java.lang.String getUserLabel()>
<android.filterpacks.imageproc.ResizeFilter: void createProgram(android.filterfw.core.FilterContext,android.filterfw.core.FrameFormat)>
<android.net.wifi.p2p.WifiP2pConfig: void <init>(android.net.wifi.p2p.WifiP2pConfig)>
<android.telephony.SignalStrength: void copyFrom(android.telephony.SignalStrength)>
<android.database.sqlite.SQLiteDatabase: void setForeignKeyConstraintsEnabled(boolean)>
<android.net.wifi.WifiConfiguration: boolean isLinked(android.net.wifi.WifiConfiguration)>
<android.app.admin.IDevicePolicyManager: boolean getCameraDisabled(android.content.ComponentName,int)>
<android.renderscript.Double3: double get(int)>
<android.renderscript.Byte4: android.renderscript.Byte4 sub(android.renderscript.Byte4,byte)>
<android.content.RestrictionEntry: java.lang.String[] getAllSelectedStrings()>
<android.telephony.Rlog: int d(java.lang.String,java.lang.String)>
<android.media.MediaMetadataEditor: long getLong(int,long)>
<android.util.ArrayMap: java.lang.Object keyAt(int)>
<com.android.internal.util.StateMachine: void setInitialState(com.android.internal.util.State)>
<android.sax.RootElement: void <init>(java.lang.String)>
<android.graphics.Picture: android.graphics.Picture createFromStream(java.io.InputStream)>
<android.view.WindowManagerPolicy.WindowState: boolean isAlive()>
<android.view.SurfaceHolder: android.graphics.Rect getSurfaceFrame()>
<android.widget.Gallery: void setCallbackOnUnselectedItemClick(boolean)>
<android.net.NetworkUtils: int resetConnections(java.lang.String,int)>
<android.app.Activity: int getTaskId()>
<android.content.Intent: android.graphics.Rect getSourceBounds()>
<android.widget.DatePicker: void onConfigurationChanged(android.content.res.Configuration)>
<android.app.PendingIntent: android.app.PendingIntent getActivity(android.content.Context,int,android.content.Intent,int,android.os.Bundle)>
<android.filterpacks.imageproc.ImageStitcher: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<android.app.backup.FullBackupAgent: void onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>
<android.graphics.drawable.AnimatedVectorDrawable: void stop()>
<android.filterpacks.imageproc.SimpleImageFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<android.service.wallpaper.WallpaperService: void onCreate()>
<android.telecom.RemoteConnection.VideoProvider.Listener: void onPeerDimensionsChanged(android.telecom.RemoteConnection.VideoProvider,int,int)>
<android.print.PrintAttributes.MediaSize: android.print.PrintAttributes.MediaSize getStandardMediaSizeById(java.lang.String)>
<android.os.Bundle: java.lang.String toString()>
<android.bluetooth.IBluetooth: boolean isEnabled()>
<android.filterpacks.imageproc.BlendFilter: android.filterfw.core.Program getNativeProgram(android.filterfw.core.FilterContext)>
<android.os.Debug: int setGlobalAllocationLimit(int)>
<com.android.internal.widget.multiwaveview.GlowPadView: int getResourceIdForTarget(int)>
<android.view.KeyEvent: int getMetaState()>
<android.graphics.Matrix: boolean invert(android.graphics.Matrix)>
<android.content.res.Resources: java.lang.String getResourceName(int)>
<android.widget.AbsListView: void setFastScrollAlwaysVisible(boolean)>
<android.view.MenuItem: android.view.SubMenu getSubMenu()>
<android.media.JetPlayer: void setEventListener(android.media.JetPlayer.OnJetEventListener)>
<android.util.LongSparseLongArray: void removeAt(int)>
<android.content.Intent: android.content.Intent setData(android.net.Uri)>
<android.view.View: boolean startNestedScroll(int)>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator scaleX(float)>
<android.media.SoundPool.SoundPoolDelegate: void setRate(int,float)>
<android.view.animation.AnimationSet: long getDuration()>
<android.filterfw.core.Frame: void reset(android.filterfw.core.FrameFormat)>
<com.android.internal.widget.ActionBarContextView: void onLayout(boolean,int,int,int,int)>
<android.hardware.display.WifiDisplaySessionInfo: int describeContents()>
<android.media.MediaDrm: boolean isCryptoSchemeSupported(java.util.UUID,java.lang.String)>
<android.database.AbstractCursor: android.os.Bundle getExtras()>
<android.net.RouteInfo: java.lang.String getInterface()>
<android.telephony.DataConnectionRealTimeInfo: int getDcPowerState()>
<android.provider.CalendarContract.CalendarAlerts: android.net.Uri insert(android.content.ContentResolver,long,long,long,long,int)>
<android.view.KeyEvent.Callback: boolean onKeyMultiple(int,int,android.view.KeyEvent)>
<com.android.internal.util.FastPrintWriter: void write(java.lang.String,int,int)>
<android.filterpacks.imageproc.ToRGBFilter: void <init>(java.lang.String)>
<android.widget.QuickContactBadge: void assignContactFromEmail(java.lang.String,boolean)>
<android.webkit.WebSettings: int getMinimumLogicalFontSize()>
<android.view.inputmethod.InputMethodManager: boolean isFullscreenMode()>
<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int)>
<com.android.internal.os.storage.ExternalStorageFormatter: void onCreate()>
<android.media.JetPlayer: java.lang.Object clone()>
<android.app.Activity: void startActivityAsUser(android.content.Intent,android.os.UserHandle)>
<android.text.style.LeadingMarginSpan.Standard: int describeContents()>
<android.webkit.WebViewProvider: java.lang.String getTitle()>
<android.net.nsd.DnsSdTxtRecord: int remove(java.lang.String)>
<android.media.SoundPool.SoundPoolDelegate: void resume(int)>
<com.android.internal.os.ProcessCpuTracker: int getLastUserTime()>
<android.app.Fragment.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.net.NetworkStatsHistory: long getEnd()>
<android.view.View: boolean isTextAlignmentInherited()>
<android.media.tv.ITvInputManager: void releaseSession(android.os.IBinder,int)>
<android.view.ViewOverlay: void clear()>
<com.android.internal.view.menu.ActionMenuItem: android.content.Intent getIntent()>
<android.transition.Crossfade: android.transition.Crossfade setResizeBehavior(int)>
<android.telephony.CellInfoGsm: android.telephony.CellSignalStrengthGsm getCellSignalStrength()>
<android.webkit.WebView: void freeMemoryForTests()>
<android.content.IntentFilter: boolean hasDataAuthority(android.net.Uri)>
<android.view.WindowInsets: android.view.WindowInsets replaceWindowDecorInsets(int,int,int,int)>
<android.telephony.CellIdentityWcdma: boolean equals(java.lang.Object)>
<android.renderscript.RSTextureView: boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture)>
<android.widget.Switch: void drawableHotspotChanged(float,float)>
<android.net.wifi.p2p.WifiP2pGroup: boolean isClientListEmpty()>
<com.android.internal.policy.IFaceLockInterface: void registerCallback(com.android.internal.policy.IFaceLockCallback)>
<android.widget.Switch: void toggle()>
<android.widget.TextView: android.text.InputFilter[] getFilters()>
<android.net.SamplingDataTracker: long getSampledTxPacketCount()>
<android.graphics.drawable.AnimatedVectorDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>
<android.widget.TextView: boolean getFreezesText()>
<android.speech.tts.ITextToSpeechService: java.lang.String[] getFeaturesForLanguage(java.lang.String,java.lang.String,java.lang.String)>
<android.filterfw.core.AsyncRunner: boolean isRunning()>
<com.android.internal.os.BatteryStatsImpl.SamplingCounter: void addCountAtomic(long)>
<android.media.TextTrackRegion: java.lang.String toString()>
<android.graphics.Picture: void writeToStream(java.io.OutputStream)>
<android.speech.tts.TextToSpeech: int setAudioAttributes(android.media.AudioAttributes)>
<android.printservice.PrintServiceInfo: void <init>(android.content.pm.ResolveInfo,java.lang.String,java.lang.String,java.lang.String)>
<android.service.notification.NotificationRankingUpdate: java.lang.String[] getInterceptedKeys()>
<android.widget.TextView: void setTextSize(int,float)>
<android.util.AttributeSet: boolean getAttributeBooleanValue(java.lang.String,java.lang.String,boolean)>
<android.renderscript.RenderScript: void setPriority(android.renderscript.RenderScript.Priority)>
<android.content.pm.ILauncherApps: void showAppDetailsAsUser(android.content.ComponentName,android.graphics.Rect,android.os.Bundle,android.os.UserHandle)>
<android.drm.DrmManagerClient: void setOnErrorListener(android.drm.DrmManagerClient.OnErrorListener)>
<android.graphics.drawable.ShapeDrawable: void setIntrinsicHeight(int)>
<com.android.internal.view.menu.MenuBuilder: void restorePresenterStates(android.os.Bundle)>
<android.renderscript.Long4: void mul(long)>
<android.webkit.WebView: boolean performLongClick()>
<android.hardware.camera2.CaptureRequest.Builder: void addTarget(android.view.Surface)>
<com.android.internal.util.StateMachine.LogRec: long getWhat()>
<android.net.NetworkStatsHistory: java.lang.String toString()>
<com.google.android.gles_jni.GLImpl: void glLoadPaletteFromModelViewMatrixOES()>
<android.provider.Settings.Secure: float getFloat(android.content.ContentResolver,java.lang.String)>
<android.service.voice.VoiceInteractionSession: void onCommand(android.service.voice.VoiceInteractionSession.Caller,android.service.voice.VoiceInteractionSession.Request,java.lang.String,android.os.Bundle)>
<android.media.projection.MediaProjectionManager: android.media.projection.MediaProjection getMediaProjection(int,android.content.Intent)>
<android.media.effect.effects.BitmapOverlayEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>
<android.net.ScoredNetwork: java.lang.String toString()>
<android.view.FocusFinderHelper: boolean isBetterCandidate(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>
<com.android.internal.content.PackageMonitor: void onPackageRemovedAllUsers(java.lang.String,int)>
<android.view.SurfaceHolder.Callback2: void surfaceRedrawNeeded(android.view.SurfaceHolder)>
<android.net.BaseNetworkStateTracker: boolean isTeardownRequested()>
<android.view.ActionProvider: void onPrepareSubMenu(android.view.SubMenu)>
<android.net.wifi.WifiManager.MulticastLock: void acquire()>
<android.widget.Gallery: boolean performAccessibilityAction(int,android.os.Bundle)>
<android.telecom.Connection.VideoProvider: void onSetDisplaySurface(android.view.Surface)>
<android.media.session.MediaController.TransportControls: void seekTo(long)>
<android.media.browse.MediaBrowser.MediaItem: void writeToParcel(android.os.Parcel,int)>
<android.view.MotionEvent: float getHistoricalToolMajor(int,int)>
<android.widget.TextView: void setFilters(android.text.InputFilter[])>
<android.view.Window: int getFeatures()>
<android.graphics.drawable.ColorDrawable: int getAlpha()>
<android.bluetooth.IBluetooth: void registerCallback(android.bluetooth.IBluetoothCallback)>
<android.filterfw.core.Frame: void setFloats(float[])>
<android.content.res.AssetFileDescriptor.AutoCloseOutputStream: void write(int)>
<android.content.Intent: java.lang.String toURI()>
<android.hardware.camera2.legacy.SizeAreaComparator: android.hardware.Camera.Size findLargestByArea(java.util.List)>
<android.opengl.GLES11: void glBufferSubData(int,int,int,java.nio.Buffer)>
<android.media.audiofx.AudioEffect: int getParameter(int,int[])>
<com.android.internal.os.BatteryStatsHelper: void refreshStats(int,android.util.SparseArray)>
<android.media.AudioManager: int getLastAudibleMasterVolume()>
<android.media.IAudioService: boolean isHdmiSystemAudioSupported()>
<android.content.pm.IPackageInstallObserver2: void onPackageInstalled(java.lang.String,int,java.lang.String,android.os.Bundle)>
<android.app.IActivityManager: void resumeAppSwitches()>
<android.widget.PopupWindow: void setWidth(int)>
<android.location.GpsClock: boolean hasBiasUncertaintyInNs()>
<android.widget.ScrollBarDrawable: void draw(android.graphics.Canvas)>
<android.text.style.AlignmentSpan.Standard: void <init>(android.os.Parcel)>
<android.hardware.soundtrigger.SoundTrigger.RecognitionConfig: int describeContents()>
<android.telephony.TelephonyManager: java.lang.String getIccSimChallengeResponse(long,int,java.lang.String)>
<android.inputmethodservice.InputMethodService: void onViewClicked(boolean)>
<android.renderscript.Long3: android.renderscript.Long3 mod(android.renderscript.Long3,long)>
<android.view.WindowManagerInternal.WindowsForAccessibilityCallback: void onWindowsForAccessibilityChanged(java.util.List)>
<android.provider.ContactsContract.SyncState: android.util.Pair getWithUri(android.content.ContentProviderClient,android.accounts.Account)>
<android.app.IActivityManager.ContentProviderHolder: void writeToParcel(android.os.Parcel,int)>
<android.location.LocationProvider: java.lang.String getName()>
<com.android.internal.widget.ResolverDrawerLayout: void setOnClickOutsideListener(android.view.View.OnClickListener)>
<android.app.MediaRouteButton: void onDraw(android.graphics.Canvas)>
<android.accessibilityservice.AccessibilityServiceInfo.CapabilityInfo: void <init>(int,int,int)>
<com.android.internal.telephony.ISms: java.util.List getAllMessagesFromIccEfForSubscriber(long,java.lang.String)>
<android.media.MediaRecorder: void setAudioSamplingRate(int)>
<android.app.Activity: void onActionModeStarted(android.view.ActionMode)>
<android.filterpacks.imageproc.BlendFilter: android.filterfw.core.Program getShaderProgram(android.filterfw.core.FilterContext)>
<android.opengl.GLES31Ext: java.lang.String glGetObjectLabelKHR(int,int)>
<android.service.notification.INotificationListener: void onNotificationPosted(android.service.notification.IStatusBarNotificationHolder,android.service.notification.NotificationRankingUpdate)>
<android.app.admin.DevicePolicyManager: boolean removeCrossProfileWidgetProvider(android.content.ComponentName,java.lang.String)>
<android.preference.Preference: void setOnPreferenceClickListener(android.preference.Preference.OnPreferenceClickListener)>
<android.app.DialogFragment: void onCreate(android.os.Bundle)>
<android.content.ContextWrapper: java.lang.String getPackageName()>
<android.app.LauncherActivity: void onCreate(android.os.Bundle)>
<android.inputmethodservice.InputMethodService: void sendKeyChar(char)>
<android.media.AudioGain: int rampDurationMinMs()>
<android.media.AudioService: int getMasterVolume()>
<android.filterfw.core.StreamPort: void pushFrame(android.filterfw.core.Frame)>
<com.android.internal.app.WindowDecorActionBar: void setDisplayOptions(int,int)>
<android.printservice.PrintJob: boolean fail(java.lang.String)>
<android.text.util.Rfc822Token: java.lang.String getName()>
<android.speech.tts.TextToSpeech: java.util.Set getFeatures(java.util.Locale)>
<android.widget.ListView: boolean onKeyMultiple(int,int,android.view.KeyEvent)>
<android.net.dhcp.DhcpStateMachine: void onRequestReceived(boolean,int,byte[],java.net.InetAddress,byte[],java.lang.String)>
<android.widget.ArrayAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>
<android.os.Debug: void resetThreadGcInvocationCount()>
<android.graphics.Region: boolean op(android.graphics.Region,android.graphics.Region.Op)>
<android.opengl.GLES10: void glNormalPointer(int,int,java.nio.Buffer)>
<android.app.ListFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<android.opengl.GLES31Ext: void glSamplerParameterIuivEXT(int,int,java.nio.IntBuffer)>
<android.opengl.EGL14: boolean eglWaitGL()>
<android.os.BatteryStats: int getHighDischargeAmountSinceCharge()>
<android.widget.Gallery: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>
<android.database.MergeCursor: short getShort(int)>
<android.text.method.MultiTapKeyListener: void onSpanAdded(android.text.Spannable,java.lang.Object,int,int)>
<android.media.audiofx.BassBoost: void setProperties(android.media.audiofx.BassBoost.Settings)>
<android.media.tv.TvView: void setStreamVolume(float)>
<android.media.TtmlRenderingWidget: void setOnChangedListener(android.media.SubtitleTrack.RenderingWidget.OnChangedListener)>
<android.net.wifi.WifiEnterpriseConfig: java.security.cert.X509Certificate getClientCertificate()>
<android.bluetooth.BluetoothDevice: java.lang.String getAlias()>
<android.os.Environment: boolean isExternalStorageRemovable()>
<android.inputmethodservice.Keyboard: int getHorizontalGap()>
<android.app.Dialog: boolean onPrepareOptionsMenu(android.view.Menu)>
<android.app.backup.BackupDataInput: void finalize()>
<android.speech.tts.TextToSpeechService: android.os.IBinder onBind(android.content.Intent)>
<android.os.BatteryStats: int getDischargeAmountScreenOn()>
<android.widget.TabWidget: void focusCurrentTab(int)>
<android.app.admin.DeviceAdminInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>
<android.renderscript.Matrix3f: void <init>(float[])>
<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo: android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo obtain(android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo)>
<android.view.Window.Callback: boolean dispatchTouchEvent(android.view.MotionEvent)>
<android.media.MediaMetadata: java.lang.String getString(java.lang.String)>
<android.widget.SearchView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.hardware.camera2.impl.CallbackProxies.DeviceStateCallbackProxy: void onOpened(android.hardware.camera2.CameraDevice)>
<android.webkit.WebView: void goForward()>
<android.hardware.hdmi.HdmiDeviceInfo: boolean isMhlDevice()>
<android.webkit.WebChromeClient: void onPermissionRequest(android.webkit.PermissionRequest)>
<android.widget.ScrollView: void requestDisallowInterceptTouchEvent(boolean)>
<android.telephony.PhoneNumberUtils: boolean isWellFormedSmsAddress(java.lang.String)>
<android.hardware.camera2.CaptureResult: void dumpToLog()>
<android.text.style.ClickableSpan: void onClick(android.view.View)>
<com.android.internal.widget.multiwaveview.TargetDrawable: float getScaleY()>
<android.database.sqlite.SQLiteDebug.DbStats: void <init>(java.lang.String,long,long,int,int,int,int)>
<android.service.voice.VoiceInteractionServiceInfo: android.content.pm.ServiceInfo getServiceInfo()>
<android.widget.ActionMenuPresenter: void setReserveOverflow(boolean)>
<android.net.RssiCurve: int describeContents()>
<android.text.TextUtils: java.lang.CharSequence ellipsize(java.lang.CharSequence,android.text.TextPaint,float,android.text.TextUtils.TruncateAt,boolean,android.text.TextUtils.EllipsizeCallback,android.text.TextDirectionHeuristic,java.lang.String)>
<android.filterfw.core.Filter: int getNumberOfConnectedInputs()>
<android.text.method.MetaKeyKeyListener: void clearMetaKeyState(android.text.Editable,int)>
<android.hardware.hdmi.HdmiHotplugEvent: int getPort()>
<android.graphics.Paint: android.graphics.Paint.Align getTextAlign()>
<android.hardware.location.IGeofenceHardwareCallback: void onGeofenceTransition(int,int,android.location.Location,long,int)>
<android.widget.AutoCompleteTextView: void showDropDownAfterLayout()>
<android.speech.srec.Recognizer: int putAudio(byte[],int,int,boolean)>
<android.view.WindowManagerImpl: void removeView(android.view.View)>
<android.content.OperationApplicationException: void <init>(java.lang.String)>
<android.filterfw.core.SimpleFrame: int[] getInts()>
<com.android.internal.view.IInputContext: void requestUpdateCursorAnchorInfo(int,int,com.android.internal.view.IInputContextCallback)>
<android.view.ViewTreeObserver: void removeOnWindowFocusChangeListener(android.view.ViewTreeObserver.OnWindowFocusChangeListener)>
<com.google.android.gles_jni.GLImpl: void glFogfv(int,float[],int)>
<android.renderscript.Sampler: android.renderscript.Sampler.Value getMagnification()>
<android.nfc.NdefMessage: boolean equals(java.lang.Object)>
<android.media.MediaHTTPConnection: void finalize()>
<android.bluetooth.IBluetoothA2dpSink: java.util.List getDevicesMatchingConnectionStates(int[])>
<com.android.internal.view.menu.MenuBuilder: int findGroupIndex(int,int)>
<com.android.ims.ImsReasonInfo: void writeToParcel(android.os.Parcel,int)>
<android.app.Notification: void <init>(android.content.Context,int,java.lang.CharSequence,long,java.lang.CharSequence,java.lang.CharSequence,android.content.Intent)>
<android.os.Bundle: java.lang.CharSequence getCharSequence(java.lang.String)>
<android.bluetooth.BluetoothDevice: boolean isBluetoothDock()>
<android.hardware.camera2.legacy.GLThreadManager: android.graphics.SurfaceTexture getCurrentSurfaceTexture()>
<android.view.ViewGroup: int getChildMeasureSpec(int,int,int)>
<android.bluetooth.BluetoothHeadsetClientCall: java.lang.String getNumber()>
<android.location.ILocationListener: void onStatusChanged(java.lang.String,int,android.os.Bundle)>
<android.os.UserManager: void setUserName(int,java.lang.String)>
<android.transition.CircularPropagation: long getStartDelay(android.view.ViewGroup,android.transition.Transition,android.transition.TransitionValues,android.transition.TransitionValues)>
<android.preference.SeekBarDialogPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.hardware.camera2.legacy.CameraDeviceUserShim: void <init>(int,android.hardware.camera2.legacy.LegacyCameraDevice,android.hardware.camera2.CameraCharacteristics,android.hardware.camera2.legacy.CameraDeviceUserShim.CameraLooper,android.hardware.camera2.legacy.CameraDeviceUserShim.CameraCallbackThread)>
<android.hardware.camera2.impl.CameraDeviceImpl.StateCallbackKK: void onBusy(android.hardware.camera2.CameraDevice)>
<android.media.session.ISessionManager: boolean isGlobalPriorityActive()>
<android.view.WindowManagerPolicy.WindowState: boolean isDisplayedLw()>
<android.view.InputDevice: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.os.ZygoteInit.MethodAndArgsCaller: void <init>(java.lang.reflect.Method,java.lang.String[])>
<android.util.LongSparseArray: void clear()>
<android.graphics.drawable.StateListDrawable: void addState(int[],android.graphics.drawable.Drawable)>
<android.graphics.drawable.ClipDrawable: int getIntrinsicWidth()>
<android.media.effect.effects.BrightnessEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>
<android.renderscript.Element: android.renderscript.Element U16_2(android.renderscript.RenderScript)>
<android.preference.PreferenceActivity: boolean onPreferenceStartFragment(android.preference.PreferenceFragment,android.preference.Preference)>
<android.app.admin.IDevicePolicyManager: int getPasswordMinimumLetters(android.content.ComponentName,int)>
<android.webkit.CacheManager.CacheResult: void setEncoding(java.lang.String)>
<com.android.internal.widget.multiwaveview.TargetDrawable: boolean hasState(int[])>
<android.os.BatteryStats.Uid: boolean hasNetworkActivity()>
<android.app.admin.IDevicePolicyManager: boolean setDeviceOwner(java.lang.String,java.lang.String)>
<android.webkit.PluginStub: android.view.View getFullScreenView(int,android.content.Context)>
<android.net.wifi.WifiEnterpriseConfig: java.util.HashMap getFields()>
<com.android.internal.telecom.ITelecomService: void unregisterPhoneAccount(android.telecom.PhoneAccountHandle)>
<android.graphics.drawable.LayerDrawable: void setId(int,int)>
<android.database.CursorWrapper: java.lang.String getColumnName(int)>
<android.graphics.drawable.InsetDrawable: boolean isStateful()>
<android.media.session.MediaSessionLegacyHelper: void sendMediaButtonEvent(android.view.KeyEvent,boolean)>
<com.android.internal.util.ProcFileReader: long nextOptionalLong(long)>
<android.app.ActivityManager: int getMaxAppRecentsLimitStatic()>
<android.view.inputmethod.InputMethodSubtype: int describeContents()>
<android.renderscript.ScriptIntrinsicBlend: void forEachClear(android.renderscript.Allocation,android.renderscript.Allocation)>
<android.app.admin.DevicePolicyManager: void getRemoveWarning(android.content.ComponentName,android.os.RemoteCallback)>
<android.view.KeyEvent: int getKeyCode()>
<android.content.res.AssetManager: java.lang.String[] list(java.lang.String)>
<android.filterfw.core.Frame: long getTimestamp()>
<android.appwidget.AppWidgetProviderInfo: java.lang.String toString()>
<com.android.internal.content.PackageHelper: java.lang.String getSdDir(java.lang.String)>
<android.filterpacks.imageproc.ContrastFilter: void <init>(java.lang.String)>
<android.widget.AdapterView: android.widget.AdapterView.OnItemLongClickListener getOnItemLongClickListener()>
<android.hardware.camera2.params.StreamConfigurationMap: int hashCode()>
<android.bluetooth.IBluetoothGatt: void registerForNotification(int,java.lang.String,int,int,android.os.ParcelUuid,int,android.os.ParcelUuid,boolean)>
<android.view.inputmethod.CursorAnchorInfo: int describeContents()>
<android.view.ViewGroup: boolean dispatchHoverEvent(android.view.MotionEvent)>
<android.widget.ActivityChooserView: boolean isShowingPopup()>
<android.view.inputmethod.SparseRectFArray: boolean equals(java.lang.Object)>
<android.hardware.camera2.CaptureRequest.Key: android.hardware.camera2.impl.CameraMetadataNative.Key getNativeKey()>
<android.app.ActivityManagerProxy: void unhandledBack()>
<android.widget.CursorTreeAdapter: android.database.Cursor getCursor()>
<android.net.NetworkCapabilities: boolean hasCapability(int)>
<android.view.View: void onFinishInflate()>
<android.widget.Adapter: long getItemId(int)>
<android.telephony.TelephonyManager: java.lang.String getIsimDomain()>
<android.location.IGpsStatusProvider: void addGpsStatusListener(android.location.IGpsStatusListener)>
<android.graphics.Canvas: void setBitmap(android.graphics.Bitmap)>
<android.renderscript.Element: boolean isCompatible(android.renderscript.Element)>
<com.android.internal.util.NotificationColorUtil: boolean isGrayscaleIcon(android.graphics.Bitmap)>
<android.widget.Toast: void cancel()>
<android.content.ClipDescription: int describeContents()>
<android.webkit.WebViewProvider: void findAllAsync(java.lang.String)>
<android.telecom.Connection.Listener: void onDisconnected(android.telecom.Connection,android.telecom.DisconnectCause)>
<android.location.FusedBatchOptions: void setMaxPowerAllocationInMW(double)>
<android.media.tv.ITvInputClient: void onVideoUnavailable(int,int)>
<android.content.pm.PackageParser: void setCompatibilityModeEnabled(boolean)>
<android.telephony.CellInfoWcdma: boolean equals(java.lang.Object)>
<com.android.internal.util.XmlUtils: void writeBooleanAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,boolean)>
<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getIsimChallengeResponse(java.lang.String)>
<android.os.Looper: int postSyncBarrier()>
<android.webkit.WebSettings: boolean getBuiltInZoomControls()>
<android.media.AmrInputStream: void finalize()>
<android.widget.NumberPicker: void onLayout(boolean,int,int,int,int)>
<android.renderscript.Long2: void setValues(long,long)>
<android.hardware.camera2.utils.TaskDrainer: void taskFinished(java.lang.Object)>
<android.renderscript.RenderScript: android.renderscript.RenderScript.RSMessageHandler getMessageHandler()>
<android.widget.ActionMenuPresenter: boolean isOverflowMenuShowPending()>
<android.os.Parcel: void writeCharArray(char[])>
<android.view.View: boolean isVisibleToUser(android.graphics.Rect)>
<android.net.wifi.BatchedScanSettings: java.lang.String toString()>
<android.net.NetworkStateTracker: android.net.NetworkInfo getNetworkInfo()>
<android.transition.Transition: android.transition.Transition setDuration(long)>
<android.bluetooth.le.AdvertiseData: java.util.List getServiceUuids()>
<android.preference.PreferenceScreen: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<com.android.internal.app.WindowDecorActionBar: void onContentScrollStopped()>
<android.widget.ImageView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.util.DisplayMetrics,int,int,android.graphics.Bitmap.Config)>
<android.widget.TextView: void setMarqueeRepeatLimit(int)>
<android.util.DisplayMetrics: boolean equalsPhysical(android.util.DisplayMetrics)>
<android.media.tv.TvInputService.Session: void notifyTrackSelected(int,java.lang.String)>
<android.media.MediaCodecInfo.CodecCapabilities: boolean isFeatureSupported(java.lang.String)>
<android.view.View: void setSelected(boolean)>
<android.widget.GridLayout: android.widget.GridLayout.Spec spec(int,int,android.widget.GridLayout.Alignment)>
<android.text.method.TextKeyListener: void onSpanRemoved(android.text.Spannable,java.lang.Object,int,int)>
<android.media.projection.IMediaProjectionWatcherCallback: void onStop(android.media.projection.MediaProjectionInfo)>
<android.util.EventLog.Event: int getProcessId()>
<android.net.InterfaceConfiguration: void setLinkAddress(android.net.LinkAddress)>
<android.hardware.camera2.utils.HashCodeHelpers: int hashCode(java.lang.Object,java.lang.Object,java.lang.Object)>
<com.android.internal.telephony.CallInfo: void <init>(java.lang.String)>
<android.view.ViewGroup: void onLayout(boolean,int,int,int,int)>
<android.media.AudioSystem: boolean isMicrophoneMuted()>
<android.graphics.NinePatch: void <init>(android.graphics.NinePatch)>
<android.opengl.GLES31: void glProgramUniform3i(int,int,int,int,int)>
<android.renderscript.Short2: void div(short)>
<android.hardware.location.GeofenceHardwareRequest: int getNotificationResponsiveness()>
<android.graphics.Paint: boolean isDither()>
<android.database.DatabaseUtils: void createDbFromSqlStatements(android.content.Context,java.lang.String,int,java.lang.String)>
<android.text.method.TransformationMethod2: void setLengthChangesAllowed(boolean)>
<android.graphics.Color: int HSBtoColor(float[])>
<android.app.admin.DevicePolicyManager: boolean isActivePasswordSufficient()>
<android.opengl.GLES10: void glColorPointer(int,int,int,java.nio.Buffer)>
<android.net.wifi.p2p.WifiP2pGroup: void setIsGroupOwner(boolean)>
<android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.impl.CameraMetadataNative getNativeCopy()>
<android.os.StrictMode: void onServiceConnectionLeaked(java.lang.Throwable)>
<android.text.method.WordIterator: int getEnd(int)>
<android.opengl.GLES20: void glUniform4fv(int,int,java.nio.FloatBuffer)>
<android.content.RestrictionEntry: void setChoiceEntries(android.content.Context,int)>
<android.widget.Toolbar: boolean isTitleTruncated()>
<android.nfc.tech.MifareClassic: android.nfc.tech.MifareClassic get(android.nfc.Tag)>
<android.database.AbstractWindowedCursor: int getType(int)>
<android.view.Window: void setLogo(int)>
<android.app.backup.BackupAgent: void onRestoreFinished()>
<android.view.inputmethod.CursorAnchorInfo: int getSelectionStart()>
<android.provider.Contacts.People: void setPhotoData(android.content.ContentResolver,android.net.Uri,byte[])>
<android.media.tv.TvContentRatingSystemInfo: android.media.tv.TvContentRatingSystemInfo createTvContentRatingSystemInfo(int,android.content.pm.ApplicationInfo)>
<android.app.LocalActivityManager: void dispatchDestroy(boolean)>
<android.app.Notification.Builder: android.app.Notification.Builder setContentTitle(java.lang.CharSequence)>
<android.nfc.tech.NfcA: android.nfc.tech.NfcA get(android.nfc.Tag)>
<android.net.Uri: java.lang.String getEncodedUserInfo()>
<com.android.internal.view.InputConnectionWrapper: boolean performContextMenuAction(int)>
<android.widget.ImageView: void setImageMatrix(android.graphics.Matrix)>
<android.app.Instrumentation: void callActivityOnRestoreInstanceState(android.app.Activity,android.os.Bundle,android.os.PersistableBundle)>
<android.hardware.display.DisplayManagerInternal.DisplayPowerRequest: java.lang.String policyToString(int)>
<android.media.Metadata: boolean has(int)>
<android.renderscript.Matrix4f: void transpose()>
<android.webkit.WebSettings: void setDefaultFixedFontSize(int)>
<android.widget.RemoteViewsService: android.widget.RemoteViewsService.RemoteViewsFactory onGetViewFactory(android.content.Intent)>
<com.android.internal.widget.AbsActionBarView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.internal.app.WindowDecorActionBar: void setDisplayOptions(int)>
<android.opengl.GLES31: void glDeleteProgramPipelines(int,java.nio.IntBuffer)>
<android.hardware.location.IActivityRecognitionHardwareSink: void onActivityChanged(android.hardware.location.ActivityChangedEvent)>
<android.renderscript.Element: android.renderscript.Element SCRIPT(android.renderscript.RenderScript)>
<android.graphics.drawable.DrawableContainer: int getIntrinsicHeight()>
<android.app.Activity: void setMediaController(android.media.session.MediaController)>
<android.print.IPrintManager: void validatePrinters(java.util.List,int)>
<android.content.Context: java.lang.String getOpPackageName()>
<android.telephony.NeighboringCellInfo: void writeToParcel(android.os.Parcel,int)>
<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>
<android.view.inputmethod.CursorAnchorInfo: java.lang.CharSequence getComposingText()>
<android.filterpacks.videosrc.SurfaceTextureTarget: void open(android.filterfw.core.FilterContext)>
<android.net.wifi.p2p.WifiP2pManager: void startWps(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.WpsInfo,android.net.wifi.p2p.WifiP2pManager.ActionListener)>
<android.preference.EditTextPreference: void <init>(android.content.Context)>
<android.app.ActionBar: void setWindowTitle(java.lang.CharSequence)>
<android.widget.Button: void <init>(android.content.Context,android.util.AttributeSet)>
<android.content.ContextWrapper: int getWallpaperDesiredMinimumHeight()>
<android.view.View: void invalidateParentIfNeededAndWasQuickRejected()>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface.OnClickListener)>
<com.android.internal.widget.multiwaveview.PointCloud.GlowManager: float getRadius()>
<com.android.internal.app.WindowDecorActionBar.TabImpl: java.lang.Object getTag()>
<android.view.KeyEvent: int getAction()>
<android.widget.SearchView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.view.IWindow: void moved(int,int)>
<android.app.IActivityManager: void bootAnimationComplete()>
<android.renderscript.Short3: void negate()>
<android.provider.CalendarContract.EventsEntity: android.content.EntityIterator newEntityIterator(android.database.Cursor,android.content.ContentProviderClient)>
<android.widget.ImageView: int getImageAlpha()>
<android.renderscript.Long4: void setAt(int,long)>
<android.database.ContentObservable: void dispatchChange(boolean,android.net.Uri)>
<android.net.MailTo: android.net.MailTo parse(java.lang.String)>
<android.speech.tts.ITextToSpeechService: int playAudio(android.os.IBinder,android.net.Uri,int,android.os.Bundle,java.lang.String)>
<android.media.MediaPlayer.OnVideoSizeChangedListener: void onVideoSizeChanged(android.media.MediaPlayer,int,int)>
<android.app.backup.BackupTransport: int getRestoreData(android.os.ParcelFileDescriptor)>
<android.media.MediaScanner: void <init>(android.content.Context)>
<com.android.internal.view.ActionBarPolicy: int getStackedTabMaxWidth()>
<android.util.SparseLongArray: int size()>
<android.database.sqlite.SQLiteDatabase: boolean enableWriteAheadLogging()>
<com.android.internal.util.StateMachine: void quit()>
<android.provider.ContactsContract.Contacts: void markAsContacted(android.content.ContentResolver,long)>
<android.location.LocationRequest: android.location.LocationRequest setExpireIn(long)>
<android.opengl.GLES31: void glGetProgramInterfaceiv(int,int,int,int[],int)>
<android.nfc.NfcAdapter.NfcUnlockHandler: boolean onUnlockAttempted(android.nfc.Tag)>
<android.app.Activity: boolean isChangingConfigurations()>
<android.media.AudioAttributes: int getUsage()>
<android.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,short[])>
<android.service.wallpaper.WallpaperService.Engine: android.os.Bundle onCommand(java.lang.String,int,int,int,android.os.Bundle,boolean)>
<android.renderscript.FieldPacker: void addU8(android.renderscript.Short2)>
<android.print.PrintJob: void restart()>
<android.service.notification.NotificationListenerService: void cancelNotification(java.lang.String)>
<android.text.format.DateFormat: java.text.DateFormat getDateFormat(android.content.Context)>
<android.os.Process: void killProcessQuiet(int)>
<android.os.Environment: void initForCurrentUser()>
<android.app.IActivityManager: void setProcessForeground(android.os.IBinder,int,boolean)>
<android.net.RouteInfo: boolean isIPv6Default()>
<android.preference.DialogPreference: boolean needInputMethod()>
<android.app.FragmentManagerImpl: boolean dispatchOptionsItemSelected(android.view.MenuItem)>
<android.view.View: void setFitsSystemWindows(boolean)>
<android.widget.LinearLayout: void onLayout(boolean,int,int,int,int)>
<android.filterpacks.videosink.MediaEncoderFilter: void tearDown(android.filterfw.core.FilterContext)>
<android.telephony.SignalStrength: int getEvdoLevel()>
<android.view.WindowInfo: int describeContents()>
<android.filterfw.core.ProgramVariable: void <init>(android.filterfw.core.Program,java.lang.String)>
<android.widget.TextClock: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.view.WindowManagerPolicy: void setDisplayOverscan(android.view.Display,int,int,int,int)>
<android.os.Parcel: void writeArrayMap(android.util.ArrayMap)>
<android.os.Parcel: android.os.Parcelable[] readParcelableArray(java.lang.ClassLoader)>
<android.media.tv.TvView.TvInputCallback: void onTracksChanged(java.lang.String,java.util.List)>
<android.service.voice.VoiceInteractionSession: void showWindow()>
<android.app.ActivityManager.TaskDescription: void <init>(java.lang.String,int,java.lang.String)>
<android.service.voice.IVoiceInteractionService: void shutdown()>
<android.widget.GridView: void smoothScrollToPosition(int)>
<android.view.textservice.SpellCheckerSession: boolean isSessionDisconnected()>
<android.renderscript.FieldPacker: void addI8(byte)>
<android.inputmethodservice.InputMethodService: void sendDownUpKeyEvents(int)>
<android.os.Debug: java.lang.String getCallers(int,int)>
<android.text.method.LinkMovementMethod: android.text.method.MovementMethod getInstance()>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder penaltyFlashScreen()>
<android.media.tv.ITvInputSessionWrapper: void selectTrack(int,java.lang.String)>
<android.view.Surface: void destroy()>
<android.database.sqlite.SQLiteOpenHelper: void close()>
<android.telecom.Phone: void setProximitySensorOn()>
<android.database.AbstractCursor: boolean isLast()>
<android.media.tv.TvInputHardwareInfo: int getHdmiPortId()>
<android.service.media.IMediaBrowserServiceCallbacks: void onConnectFailed()>
<android.database.sqlite.SQLiteOpenHelper: void setWriteAheadLoggingEnabled(boolean)>
<android.os.BatteryStats.HistoryTag: void readFromParcel(android.os.Parcel)>
<android.app.Activity: void showDialog(int)>
<android.bluetooth.BluetoothGattCallback: void onReadRemoteRssi(android.bluetooth.BluetoothGatt,int,int)>
<android.filterfw.core.Filter: java.lang.String getName()>
<android.telecom.VideoProfile: int getVideoState()>
<android.telephony.TelephonyManager: java.lang.String getNetworkOperatorName()>
<com.android.internal.util.StateMachine: void sendMessageAtFrontOfQueue(int,int)>
<com.android.internal.os.BatteryStatsImpl.SamplingTimer: void onTimeStarted(long,long,long)>
<android.app.SearchManager: android.content.Intent getAssistIntent(android.content.Context,boolean)>
<android.database.DatabaseUtils: java.lang.String getHexCollationKey(java.lang.String)>
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setTitleCondensed(java.lang.CharSequence)>
<android.os.CommonClock: long getTime()>
<android.media.AudioService: void adjustStreamVolume(int,int,int,java.lang.String)>
<android.telephony.SubscriptionManager: int getActiveSubInfoCount()>
<com.android.ims.internal.IImsUt: int updateCOLR(int)>
<android.graphics.Bitmap: int getScaledWidth(android.util.DisplayMetrics)>
<android.net.NetworkAgent: void sendLinkProperties(android.net.LinkProperties)>
<com.android.internal.view.BaseSurfaceHolder: int getRequestedFormat()>
<android.media.tv.TvInputService.Session: boolean onKeyDown(int,android.view.KeyEvent)>
<android.app.LoadedApk: android.content.IIntentReceiver getReceiverDispatcher(android.content.BroadcastReceiver,android.content.Context,android.os.Handler,android.app.Instrumentation,boolean)>
<android.view.ViewGroup: void setChildrenDrawnWithCacheEnabled(boolean)>
<android.service.notification.ZenModeConfig: int[] tryParseDays(java.lang.String)>
<android.view.inputmethod.InputMethodManager: void showStatusIcon(android.os.IBinder,java.lang.String,int)>
<com.android.internal.widget.SwipeDismissLayout: void <init>(android.content.Context)>
<android.filterfw.core.FilterFactory: android.filterfw.core.Filter createFilterByClass(java.lang.Class,java.lang.String)>
<android.content.pm.PackageParser.Provider: void <init>(android.content.pm.PackageParser.Provider)>
<android.widget.SimpleAdapter: long getItemId(int)>
<android.app.FragmentManagerImpl: void hideFragment(android.app.Fragment,int,int)>
<android.telephony.CellIdentityCdma: int getLatitude()>
<android.provider.Settings.System: void clearConfiguration(android.content.res.Configuration)>
<android.view.inputmethod.InputConnection: boolean reportFullscreenMode(boolean)>
<android.bluetooth.BluetoothMasInstance: java.lang.String toString()>
<android.media.IAudioService: void adjustSuggestedStreamVolume(int,int,int,java.lang.String)>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getContentDescription()>
<android.view.ViewStub: int getInflatedId()>
<android.webkit.CookieSyncManager: android.webkit.CookieSyncManager createInstance(android.content.Context)>
<android.view.DisplayInfo: boolean hasAccess(int)>
<android.opengl.GLES20: void glValidateProgram(int)>
<android.view.AccessibilityIterators.TextSegmentIterator: int[] following(int)>
<android.filterfw.core.SimpleFrame: void setInts(int[])>
<android.view.View: boolean dispatchDragEvent(android.view.DragEvent)>
<android.media.MediaPlayer: void setVolume(float,float)>
<com.google.android.gles_jni.GLImpl: void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)>
<android.os.BatteryStats: int getHistoryTagPoolUid(int)>
<android.widget.AutoCompleteTextView: android.widget.AdapterView.OnItemClickListener getOnItemClickListener()>
<android.appwidget.AppWidgetProviderInfo: void writeToParcel(android.os.Parcel,int)>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder penaltyDeath()>
<android.util.AttributeSet: int getAttributeIntValue(java.lang.String,java.lang.String,int)>
<android.gesture.GestureLibraries: android.gesture.GestureLibrary fromRawResource(android.content.Context,int)>
<android.hardware.camera2.CaptureResult: java.lang.Class getKeyClass()>
<android.os.BatteryStats.Uid: long getVideoTurnedOnTime(long,int)>
<com.google.android.gles_jni.GLImpl: void glMultMatrixx(int[],int)>
<android.net.wifi.IWifiManager: int getVerboseLoggingLevel()>
<android.service.dreams.DreamService: void onCreate()>
<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getIccSerialNumberForSubscriber(long)>
<android.database.sqlite.SQLiteAbortException: void <init>(java.lang.String)>
<com.android.internal.util.HexDump: byte[] toByteArray(int)>
<android.print.PageRange: int getEnd()>
<android.ddm.DdmHandleHello: void sendWAIT(int)>
<android.media.MediaRouter.Callback: void onRouteChanged(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>
<android.service.notification.ConditionProviderService: android.os.IBinder onBind(android.content.Intent)>
<com.android.internal.inputmethod.InputMethodUtils.InputMethodSettings: boolean isShowImeWithHardKeyboardEnabled()>
<android.view.ViewGroup: void dispatchThawSelfOnly(android.util.SparseArray)>
<android.util.LongArray: void addAll(android.util.LongArray)>
<android.renderscript.Byte2: byte dotProduct(android.renderscript.Byte2)>
<android.bluetooth.IBluetooth: int getState()>
<android.graphics.Canvas: int save()>
<android.util.DayOfMonthCursor: void setSelectedDayOfMonth(int)>
<android.media.tv.TvTrackInfo: int getAudioChannelCount()>
<android.service.media.MediaBrowserService.Result: void sendResult(java.lang.Object)>
<android.bluetooth.BluetoothGattCallbackWrapper: void onCharacteristicWrite(java.lang.String,int,int,int,android.os.ParcelUuid,int,android.os.ParcelUuid)>
<android.renderscript.FieldPacker: void addF32(float)>
<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object get(android.hardware.camera2.CaptureResult.Key)>
<android.widget.TextView: void setHintTextColor(android.content.res.ColorStateList)>
<android.widget.ArrayAdapter: int getCount()>
<android.view.Display: java.lang.String getAddress()>
<android.graphics.drawable.RotateDrawable: void setFromDegrees(float)>
<android.content.pm.LabeledIntent: int getLabelResource()>
<android.app.admin.DevicePolicyManager: int getPasswordQuality(android.content.ComponentName)>
<android.media.AudioManager: boolean isStreamMute(int)>
<android.media.JetPlayer: void release()>
<android.bluetooth.BluetoothAdapter: void stopLeScan(android.bluetooth.BluetoothAdapter.LeScanCallback)>
<android.media.JetPlayer.OnJetEventListener: void onJetEvent(android.media.JetPlayer,short,byte,byte,byte,byte)>
<android.net.DhcpInfo: int describeContents()>
<android.graphics.drawable.Drawable: void scheduleSelf(java.lang.Runnable,long)>
<android.media.IAudioService: boolean isSpeakerphoneOn()>
<android.content.ContentProviderProxy: android.content.res.AssetFileDescriptor openAssetFile(java.lang.String,android.net.Uri,java.lang.String,android.os.ICancellationSignal)>
<android.app.Instrumentation.ActivityMonitor: android.app.Instrumentation.ActivityResult getResult()>
<android.widget.ToggleButton: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.os.PatternMatcher: boolean match(java.lang.String)>
<android.filterfw.core.Filter: void close(android.filterfw.core.FilterContext)>
<android.view.KeyCharacterMap: boolean isPrintingKey(int)>
<android.view.WindowManager.LayoutParams: boolean mayUseInputMethod(int)>
<android.webkit.WebViewProvider: void reload()>
<android.net.http.HttpAuthHeader: boolean isProxy()>
<android.app.Fragment: void setAllowEnterTransitionOverlap(boolean)>
<android.view.View.DragShadowBuilder: void <init>(android.view.View)>
<android.content.res.ColorStateList: int describeContents()>
<android.net.SSLSessionCache: void <init>(java.io.File)>
<android.app.job.JobInfo: long getInitialBackoffMillis()>
<com.android.internal.os.AtomicFile: java.io.FileInputStream openRead()>
<android.database.sqlite.SQLiteConnection: void dump(android.util.Printer,boolean)>
<android.content.ContentResolver: boolean getMasterSyncAutomaticallyAsUser(int)>
<com.android.internal.widget.multiwaveview.TargetDrawable: void setPositionX(float)>
<android.telecom.InCallService.VideoCall: void requestCameraCapabilities()>
<android.widget.SimpleCursorAdapter: void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[])>
<android.view.ViewGroup: void findViewsWithText(java.util.ArrayList,java.lang.CharSequence,int)>
<android.view.WindowManagerPolicy: void enableKeyguard(boolean)>
<android.bluetooth.IBluetoothHeadsetPhone: void cdmaSetSecondCallState(boolean)>
<android.mtp.MtpDevice: java.lang.String toString()>
<android.app.job.JobInfo: android.content.ComponentName getService()>
<android.os.Environment: java.lang.String getExternalStorageState(java.io.File)>
<android.view.View: int getPaddingRight()>
<android.widget.ListPopupWindow: void setDropDownGravity(int)>
<android.media.projection.MediaProjection: void stop()>
<android.util.MathUtils: float radians(float)>
<android.os.BatteryStats.Uid: long getMobileRadioActiveTime(int)>
<android.content.ClipDescription: void validate()>
<android.media.IAudioService: android.media.IRingtonePlayer getRingtonePlayer()>
<android.media.AudioService: void setRingerMode(int,boolean)>
<android.widget.ViewAnimator: void setInAnimation(android.content.Context,int)>
<android.widget.RemoteViewsAdapter: int getCount()>
<android.widget.AbsListView: void onNestedScroll(android.view.View,int,int,int,int)>
<android.filterfw.io.GraphReader: void addReferencesByKeysAndValues(java.lang.Object[])>
<android.filterpacks.imageproc.ImageEncoder: void setupPorts()>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(boolean,java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.net.NetworkStateTracker: void setDependencyMet(boolean)>
<android.util.JsonWriter: android.util.JsonWriter beginArray()>
<android.view.IWindow: void doneAnimating()>
<android.app.admin.DevicePolicyManager: void setTrustAgentFeaturesEnabled(android.content.ComponentName,android.content.ComponentName,java.util.List)>
<android.net.Network: void writeToParcel(android.os.Parcel,int)>
<android.text.method.TextKeyListener: void release()>
<android.util.StateSet: boolean stateSetMatches(int[],int[])>
<android.hardware.camera2.utils.CloseableLock: void releaseLock()>
<android.widget.TextView: int getMaxEms()>
<android.app.admin.DeviceAdminInfo.PolicyInfo: void <init>(int,java.lang.String,int,int)>
<android.graphics.LargeBitmap: int getHeight()>
<com.android.internal.os.BatteryStatsImpl.LongSamplingCounter: void writeToParcel(android.os.Parcel)>
<android.bluetooth.BluetoothHeadsetClient: boolean holdCall(android.bluetooth.BluetoothDevice)>
<android.view.View: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>
<android.gesture.GestureOverlayView: void removeAllOnGestureListeners()>
<com.android.internal.app.WindowDecorActionBar: void removeAllTabs()>
<android.content.Context: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle)>
<android.view.inputmethod.InputConnectionWrapper: boolean commitCorrection(android.view.inputmethod.CorrectionInfo)>
<android.widget.GridView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>
<android.security.IKeystoreService: int exist(java.lang.String,int)>
<android.provider.Browser: android.database.Cursor getAllBookmarks(android.content.ContentResolver)>
<android.view.RenderNode: boolean isPivotExplicitlySet()>
<android.widget.CursorAdapter: android.widget.Filter getFilter()>
<android.widget.TextClock: boolean is24HourModeEnabled()>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setHintHideIcon(boolean)>
<android.content.pm.VerificationParams: java.lang.String toString()>
<android.widget.Gallery: int getChildDrawingOrder(int,int)>
<android.os.BatteryStats: int getStartCount()>
<android.location.GpsSatellite: float getAzimuth()>
<android.widget.Spinner: android.os.Parcelable onSaveInstanceState()>
<android.net.http.EventHandler: void endData()>
<android.preference.MultiCheckPreference: void setValue(int,boolean)>
<android.media.tv.TvView.TvInputCallback: void onVideoUnavailable(java.lang.String,int)>
<com.android.internal.os.AtomicFile: java.io.File getBaseFile()>
<android.app.ActivityManagerProxy: boolean clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver,int)>
<android.graphics.Shader: void init(long)>
<android.filterfw.core.Frame: android.graphics.Bitmap getBitmap()>
<android.nfc.NdefMessage: int describeContents()>
<android.os.Parcel: void readBinderList(java.util.List)>
<com.android.internal.app.WindowDecorActionBar.ActionModeImpl: void onCloseMenu(com.android.internal.view.menu.MenuBuilder,boolean)>
<com.android.internal.util.FastPrintWriter: void print(int)>
<android.widget.Spinner: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.android.internal.view.menu.BaseMenuPresenter: void initForMenu(android.content.Context,com.android.internal.view.menu.MenuBuilder)>
<com.android.internal.util.StateMachine: void setLogOnlyTransitions(boolean)>
<android.util.FloatMath: float hypot(float,float)>
<android.hardware.camera2.params.Face: android.graphics.Rect getBounds()>
<com.android.internal.policy.IFaceLockInterface: void unregisterCallback(com.android.internal.policy.IFaceLockCallback)>
<android.text.format.Time: java.lang.String format3339(boolean)>
<android.app.ActivityManager.RunningTaskInfo: void writeToParcel(android.os.Parcel,int)>
<android.view.Window: boolean haveDimAmount()>
<com.android.internal.widget.BackgroundFallback: boolean hasFallback()>
<android.graphics.Color: int rgb(int,int,int)>
<android.view.IApplicationToken: void windowsDrawn()>
<com.android.internal.http.multipart.ByteArrayPartSource: java.lang.String getFileName()>
<android.webkit.WebViewProvider: void onResume()>
<android.widget.AbsSeekBar: void onResolveDrawables(int)>
<android.telephony.ServiceState: boolean getRoaming()>
<android.widget.ZoomControls: boolean hasFocus()>
<android.preference.Preference: boolean shouldPersist()>
<android.renderscript.Float4: void add(android.renderscript.Float4)>
<android.app.IActivityManager: int checkPermission(java.lang.String,int,int)>
<android.content.RestrictionEntry: void <init>(int,java.lang.String)>
<android.media.MediaDrm.KeyRequest: byte[] getData()>
<android.app.TimePickerDialog.OnTimeSetListener: void onTimeSet(android.widget.TimePicker,int,int)>
<android.hardware.camera2.params.ColorSpaceTransform: android.util.Rational getElement(int,int)>
<com.android.internal.os.BatteryStatsImpl: void reportExcessiveCpuLocked(int,java.lang.String,long,long)>
<android.graphics.Atlas: void <init>(android.graphics.Atlas.Type,int,int)>
<android.graphics.drawable.VectorDrawable: android.graphics.drawable.VectorDrawable create(android.content.res.Resources,int)>
<android.view.ViewGroup: void detachViewFromParent(int)>
<android.filterfw.core.FieldPort: void <init>(android.filterfw.core.Filter,java.lang.String,java.lang.reflect.Field,boolean)>
<android.widget.TableLayout: void addView(android.view.View)>
<android.widget.TwoLineListItem: void <init>(android.content.Context)>
<com.android.internal.os.BatteryStatsImpl.Uid: void noteAudioTurnedOffLocked(long)>
<android.app.Activity: void unregisterForContextMenu(android.view.View)>
<android.util.JsonWriter: void flush()>
<com.google.android.util.AbstractMessageParser.Html: void trimLeadingWhitespace()>
<android.bluetooth.BluetoothHeadsetClientCall: void writeToParcel(android.os.Parcel,int)>
<android.content.pm.PackageInstaller.Session: void <init>(android.content.pm.IPackageInstallerSession)>
<android.webkit.WebSettings: java.lang.String getSerifFontFamily()>
<android.preference.PreferenceFragment: void onSaveInstanceState(android.os.Bundle)>
<android.net.ConnectivityManager: int getLastTetherError(java.lang.String)>
<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int,android.os.ResultReceiver)>
<android.database.AbstractWindowedCursor: long getLong(int)>
<android.sax.StartElementListener: void start(org.xml.sax.Attributes)>
<android.media.AudioTrack: int write(short[],int,int)>
<android.hardware.camera2.utils.TypeReference: android.hardware.camera2.utils.TypeReference createSpecializedTypeReference(java.lang.Class)>
<android.view.VelocityTracker: boolean getEstimator(int,android.view.VelocityTracker.Estimator)>
<com.google.android.gles_jni.GLImpl: void glSampleCoveragex(int,boolean)>
<android.security.IKeystoreService: int test()>
<android.app.IActivityManager: int broadcastIntent(android.app.IApplicationThread,android.content.Intent,java.lang.String,android.content.IIntentReceiver,int,java.lang.String,android.os.Bundle,java.lang.String,int,boolean,boolean,int)>
<android.view.ScaleGestureDetector.OnScaleGestureListener: boolean onScaleBegin(android.view.ScaleGestureDetector)>
<android.view.View: int getHeight()>
<android.preference.RingtonePreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.view.Window: void takeKeyEvents(boolean)>
<android.content.res.Resources.Theme: void setTo(android.content.res.Resources.Theme)>
<android.filterfw.core.GLFrame: void setInts(int[])>
<android.widget.NumberPicker.CustomEditText: void <init>(android.content.Context,android.util.AttributeSet)>
<android.os.storage.StorageManager: boolean mountObb(java.lang.String,java.lang.String,android.os.storage.OnObbStateChangeListener)>
<android.provider.Settings.Global: int getInt(android.content.ContentResolver,java.lang.String)>
<android.widget.CompoundButton: void toggle()>
<android.net.NetworkInfo: void setDetailedState(android.net.NetworkInfo.DetailedState,java.lang.String,java.lang.String)>
<android.content.UndoManager: java.lang.CharSequence getRedoLabel(android.content.UndoOwner[])>
<android.app.ActionBar: void setIcon(android.graphics.drawable.Drawable)>
<android.media.AudioSystem: int getDeviceConnectionState(int,java.lang.String)>
<android.renderscript.Int2: void set(android.renderscript.Int2)>
<android.net.INetworkPolicyManager: void addUidPolicy(int,int)>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream)>
<com.android.internal.app.ProcessStats.ProcessDataCollection: void <init>(int[],int[],int[])>
<android.content.pm.ContainerEncryptionParams: java.lang.String getEncryptionAlgorithm()>
<android.net.wifi.WifiActivityEnergyInfo: void <init>(int,int,int,int,int)>
<com.android.internal.util.AsyncChannel: int fullyConnectSync(android.content.Context,android.os.Handler,android.os.Handler)>
<android.os.BatteryStats.HistoryEventTracker: java.util.HashMap getStateForEvent(int)>
<android.widget.ArrayAdapter: android.widget.ArrayAdapter createFromResource(android.content.Context,int,int)>
<android.app.ApplicationThreadProxy: void dispatchPackageBroadcast(int,java.lang.String[])>
<android.opengl.GLSurfaceView: void setGLWrapper(android.opengl.GLSurfaceView.GLWrapper)>
<android.gesture.Gesture: android.graphics.Path toPath()>
<android.opengl.GLES11Ext: void glDrawTexxvOES(int[],int)>
<android.net.nsd.NsdServiceInfo: java.lang.String toString()>
<android.view.ContextMenu: void clearHeader()>
<android.hardware.hdmi.HdmiRecordListener: void onClearTimerRecordingResult(int)>
<android.media.RemoteController: long getEstimatedMediaPosition()>
<android.widget.BaseAdapter: void notifyDataSetChanged()>
<android.view.GestureDetector: boolean onTouchEvent(android.view.MotionEvent)>
<android.bluetooth.IBluetooth: boolean configHciSnoopLog(boolean)>
<android.view.animation.Animation: void setFillBefore(boolean)>
<android.filterpacks.videosrc.MediaSource: void tearDown(android.filterfw.core.FilterContext)>
<android.webkit.WebSettings: void setDomStorageEnabled(boolean)>
<android.app.Activity: void removeDialog(int)>
<android.app.Notification.Style: void internalSetSummaryText(java.lang.CharSequence)>
<com.android.internal.os.BatteryStatsImpl: int getStartCount()>
<android.widget.ScrollView: boolean executeKeyEvent(android.view.KeyEvent)>
<android.widget.RemoteViewsAdapter: void <init>(android.content.Context,android.content.Intent,android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback)>
<android.os.BaseBundle: long getLong(java.lang.String,long)>
<android.service.notification.ZenModeConfig: boolean isValidCountdownConditionId(android.net.Uri)>
<android.os.WorkSource: int get(int)>
<android.location.GpsClock: void setFullBiasInNs(long)>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender addPage(android.app.Notification)>
<android.telecom.GatewayInfo: boolean isEmpty()>
<android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>
<android.view.View: boolean isSelected()>
<android.view.Menu: void setGroupCheckable(int,boolean,boolean)>
<android.telephony.TelephonyManager: java.lang.String getTelephonyProperty(java.lang.String,long,java.lang.String)>
<android.view.SurfaceControl: void <init>(android.view.SurfaceSession,java.lang.String,int,int,int,int)>
<android.renderscript.RenderScript: void sendMessage(int,int[])>
<android.view.ViewGroup: boolean shouldDelayChildPressedState()>
<android.widget.CheckedTextView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.webkit.WebChromeClient.CustomViewCallback: void onCustomViewHidden()>
<android.widget.VideoView: void onMeasure(int,int)>
<android.provider.DocumentsProvider: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String,android.os.CancellationSignal)>
<android.view.InputEvent: boolean isTainted()>
<com.android.internal.telephony.CallInfo: void writeToParcel(android.os.Parcel,int)>
<android.opengl.GLES20: void glLinkProgram(int)>
<android.opengl.GLES31Ext: void glObjectLabelKHR(int,int,int,java.lang.String)>
<android.speech.tts.SynthesisCallback: boolean hasStarted()>
<android.nfc.tech.MifareUltralight: void setTimeout(int)>
<android.net.http.Headers: java.lang.String getAcceptRanges()>
<com.android.internal.view.IInputContext: void getTextAfterCursor(int,int,int,com.android.internal.view.IInputContextCallback)>
<android.app.Dialog: void setTitle(int)>
<android.os.BatteryStats: int getParcelVersion()>
<android.opengl.GLES31: void glProgramUniformMatrix2x3fv(int,int,int,boolean,java.nio.FloatBuffer)>
<android.view.WindowManagerPolicy.WindowState: android.graphics.Rect getContentFrameLw()>
<android.widget.ViewSwitcher: void <init>(android.content.Context)>
<com.android.internal.app.IVoiceInteractionManagerService: android.hardware.soundtrigger.SoundTrigger.KeyphraseSoundModel getKeyphraseSoundModel(int,java.lang.String)>
<com.android.internal.os.BatteryStatsImpl.Timer: void logState(android.util.Printer,java.lang.String)>
<android.content.ContentProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)>
<android.opengl.GLES10: void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)>
<android.os.Bundle: android.os.Parcelable getParcelable(java.lang.String)>
<android.os.BatteryStats.HistoryTag: int hashCode()>
<android.widget.VideoView: void seekTo(int)>
<android.os.CommonTimeConfig: int setClientSyncInterval(int)>
<android.view.accessibility.AccessibilityRecord: boolean isScrollable()>
<android.app.RemoteInput.Builder: android.app.RemoteInput.Builder setAllowFreeFormInput(boolean)>
<android.util.SparseBooleanArray: void put(int,boolean)>
<android.app.DownloadManager: java.lang.Long getRecommendedMaxBytesOverMobile(android.content.Context)>
<android.widget.AbsListView: android.widget.AbsListView.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.app.trust.TrustManager: void reportRequireCredentialEntry(int)>
<android.telephony.CellInfoCdma: java.lang.String toString()>
<android.opengl.GLES30: void glUniformMatrix4x3fv(int,int,boolean,float[],int)>
<android.view.View: boolean willNotDraw()>
<android.app.ISearchManager: java.util.List getGlobalSearchActivities()>
<android.os.storage.IMountService: void unmountObb(java.lang.String,boolean,android.os.storage.IObbActionListener,int)>
<android.os.PowerManager: void validateWakeLockParameters(int,java.lang.String)>
<android.webkit.WebViewFactory: void prepareWebViewInZygote()>
<android.hardware.usb.UsbEndpoint: int getInterval()>
<android.view.animation.Animation: void finalize()>
<com.google.android.gles_jni.GLImpl: void glFogfv(int,java.nio.FloatBuffer)>
<android.app.WallpaperManager: android.app.IWallpaperManager getIWallpaperManager()>
<android.app.ActivityOptions: boolean getLaunchTaskBehind()>
<android.graphics.pdf.PdfEditor: void close()>
<android.widget.PopupWindow: void update(android.view.View,int,int)>
<android.widget.CalendarView.CalendarViewDelegate: void onConfigurationChanged(android.content.res.Configuration)>
<android.view.WindowManagerGlobal: void setStoppedState(android.os.IBinder,boolean)>
<android.opengl.GLES11Ext: void glGenerateMipmapOES(int)>
<android.webkit.WebView: boolean zoomOut()>
<android.content.pm.PackageInstaller: void <init>(android.content.Context,android.content.pm.PackageManager,android.content.pm.IPackageInstaller,java.lang.String,int)>
<android.net.http.LoggingEventHandler: void endData()>
<android.view.View: boolean hasHoveredChild()>
<com.android.internal.view.menu.ActionMenuItemView: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.telephony.PreciseDataConnectionState: java.lang.String getDataConnectionChangeReason()>
<android.filterpacks.imageproc.FixedRotationFilter: void process(android.filterfw.core.FilterContext)>
<android.util.Xml: org.xmlpull.v1.XmlSerializer newSerializer()>
<android.net.PskKeyManager: javax.crypto.SecretKey getKey(java.lang.String,java.lang.String,javax.net.ssl.SSLEngine)>
<android.media.AudioSystem: int setAudioPortConfig(android.media.AudioPortConfig)>
<android.util.DayOfMonthCursor: boolean left()>
<android.graphics.drawable.DrawableContainer: boolean onLevelChange(int)>
<android.media.session.MediaController.TransportControls: void rewind()>
<android.widget.Switch: int getSwitchMinWidth()>
<android.opengl.GLES10: void glStencilFunc(int,int,int)>
<android.media.ToneGenerator: void release()>
<android.media.MediaCodec: android.media.MediaCodecInfo getCodecInfo()>
<android.filterpacks.imageproc.AutoFixFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getOpacity()>
<android.nfc.NfcActivityManager: void onActivityPaused(android.app.Activity)>
<android.renderscript.Short3: short get(int)>
<android.opengl.GLES20: void glUniform3f(int,float,float,float)>
<android.speech.tts.TextToSpeech: int speak(java.lang.String,int,java.util.HashMap)>
<android.widget.ImageView: void setImageURI(android.net.Uri)>
<android.nfc.INfcAdapter: boolean enable()>
<android.view.ViewStub: void <init>(android.content.Context)>
<android.widget.CursorTreeAdapter: android.view.View newGroupView(android.content.Context,android.database.Cursor,boolean,android.view.ViewGroup)>
<android.telephony.TelephonyManager: java.lang.String getIccSimChallengeResponse(int,java.lang.String)>
<android.app.IApplicationThread: void scheduleDestroyActivity(android.os.IBinder,boolean,int)>
<android.util.LongSparseArray: void <init>(int)>
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setChecked(boolean)>
<com.android.internal.widget.multiwaveview.PointCloud.GlowManager: void setY(float)>
<android.renderscript.ScriptIntrinsicLUT: void setBlue(int,int)>
<android.widget.SimpleMonthView.OnDayClickListener: void onDayClick(android.widget.SimpleMonthView,java.util.Calendar)>
<android.renderscript.FieldPacker: void addF32(android.renderscript.Float4)>
<android.net.NetworkStatsHistory: void <init>(android.os.Parcel)>
<android.telephony.PhoneNumberUtils: java.lang.String formatNumberToE164(java.lang.String,java.lang.String)>
<android.telecom.DisconnectCause: void <init>(int,java.lang.CharSequence,java.lang.CharSequence,java.lang.String,int)>
<com.android.internal.app.WindowDecorActionBar.ActionModeImpl: void setSubtitle(int)>
<android.preference.PreferenceGroup: void onPrepareForRemoval()>
<android.util.SparseArray: java.lang.String toString()>
<android.media.effect.EffectUpdateListener: void onEffectUpdated(android.media.effect.Effect,java.lang.Object)>
<android.media.tv.TvInputHardwareInfo: int getAudioType()>
<android.os.SystemVibrator: void cancel()>
<android.database.BulkCursorNative: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<android.transition.Transition: void captureEndValues(android.transition.TransitionValues)>
<android.renderscript.Byte4: void setAt(int,byte)>
<android.webkit.WebIconDatabase: void retainIconForPageUrl(java.lang.String)>
<android.view.Surface: int describeContents()>
<android.app.ListActivity: android.widget.ListView getListView()>
<android.app.Activity: void onPrepareNavigateUpTaskStack(android.app.TaskStackBuilder)>
<android.view.RenderNode: float getTranslationY()>
<android.app.IActivityManager: int startActivityAsCaller(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,int)>
<android.text.Editable: android.text.Editable append(char)>
<android.text.method.PasswordTransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)>
<android.net.Uri: boolean isPathPrefixMatch(android.net.Uri)>
<android.location.Address: void setLatitude(double)>
<android.filterfw.core.FilterGraph: boolean isReady()>
<android.view.inputmethod.InputConnectionWrapper: boolean requestCursorUpdates(int)>
<android.hardware.usb.UsbManager: void requestPermission(android.hardware.usb.UsbDevice,android.app.PendingIntent)>
<android.os.PowerManager: void goToSleep(long,int,int)>
<android.text.style.RelativeSizeSpan: void <init>(android.os.Parcel)>
<android.content.res.ColorStateList: boolean isStateful()>
<android.app.ActionBar.Tab: java.lang.Object getTag()>
<android.app.Dialog: boolean onCreatePanelMenu(int,android.view.Menu)>
<android.text.method.HideReturnsTransformationMethod: android.text.method.HideReturnsTransformationMethod getInstance()>
<android.animation.ValueAnimator: void removeAllUpdateListeners()>
<android.view.accessibility.AccessibilityNodeInfo: void setSource(android.view.View,int)>
<android.media.session.MediaController.Callback: void onSessionDestroyed()>
<android.content.IntentFilter: boolean debugCheck()>
<android.printservice.PrintJob: boolean isCancelled()>
<android.media.IMediaHTTPConnection: android.os.IBinder connect(java.lang.String,java.lang.String)>
<android.util.Pair: boolean equals(java.lang.Object)>
<com.android.internal.widget.DecorToolbar: void setLogo(int)>
<android.media.AudioManager: void preDispatchKeyEvent(android.view.KeyEvent,int)>
<com.google.android.util.AbstractMessageParser.FlickrPhoto: java.lang.String getGroupingId()>
<android.media.AudioRecord: void stop()>
<com.android.internal.os.BatteryStatsImpl: void removeIsolatedUidLocked(int,int)>
<android.renderscript.Element: android.renderscript.Element MATRIX_2X2(android.renderscript.RenderScript)>
<android.media.JetPlayer: boolean closeJetFile()>
<android.telecom.Call: android.telecom.Call.Details getDetails()>
<android.app.ApplicationThreadProxy: void scheduleStopActivity(android.os.IBinder,boolean,int)>
<android.os.Bundle: void putSize(java.lang.String,android.util.Size)>
<android.telecom.Conference: void onUnhold()>
<android.filterfw.geometry.Rectangle: android.filterfw.geometry.Rectangle fromRotatedRect(android.filterfw.geometry.Point,android.filterfw.geometry.Point,float)>
<android.graphics.Canvas: boolean clipRect(int,int,int,int)>
<android.app.Notification.Builder: android.app.Notification.Builder setSound(android.net.Uri,int)>
<android.media.MediaRecorder: void setCamera(android.hardware.Camera)>
<android.bluetooth.IBluetoothGattServerCallback: void onCharacteristicWriteRequest(java.lang.String,int,int,int,boolean,boolean,int,int,android.os.ParcelUuid,int,android.os.ParcelUuid,byte[])>
<android.content.res.TypedArray: boolean getBoolean(int,boolean)>
<android.hardware.camera2.utils.BinderHolder: void <init>(android.os.IBinder)>
<android.opengl.GLES20: void glGetTexParameteriv(int,int,int[],int)>
<android.bluetooth.BluetoothGattDescriptor: boolean setValue(byte[])>
<android.widget.DatePickerController: java.util.Calendar getMaxDate()>
<android.app.Dialog: android.view.View onCreatePanelView(int)>
<android.view.accessibility.AccessibilityEvent: android.view.accessibility.AccessibilityEvent obtain()>
<android.text.style.ImageSpan: void <init>(android.content.Context,android.net.Uri)>
<com.android.internal.widget.DecorToolbar: void setDropdownParams(android.widget.SpinnerAdapter,android.widget.AdapterView.OnItemSelectedListener)>
<android.os.SystemClock: long currentThreadTimeMillis()>
<android.media.WebVttRenderer: android.media.SubtitleTrack createTrack(android.media.MediaFormat)>
<android.webkit.CookieSyncManager: void sync()>
<com.android.internal.util.StateMachine: void sendMessage(int,int)>
<android.media.AudioManager: int getMasterStreamType()>
<com.android.internal.app.IBatteryStats: void noteWifiMulticastDisabledFromSource(android.os.WorkSource)>
<android.media.AudioManager: void unregisterRemoteControlDisplay(android.media.IRemoteControlDisplay)>
<android.media.tv.ITvInputSessionWrapper: void tune(android.net.Uri,android.os.Bundle)>
<android.util.ArraySet: boolean equals(java.lang.Object)>
<android.filterpacks.videosrc.SurfaceTextureTarget: void <init>(java.lang.String)>
<com.google.android.gles_jni.GLImpl: void glTexGenx(int,int,int)>
<android.content.pm.PackageManager: int checkSignatures(java.lang.String,java.lang.String)>
<com.android.internal.telecom.IVideoCallback: void changeCameraCapabilities(android.telecom.CameraCapabilities)>
<android.telephony.PhoneNumberUtils: java.lang.String convertAndStrip(java.lang.String)>
<android.database.CursorWrapper: android.database.Cursor getWrappedCursor()>
<com.android.ims.ImsCallForwardInfo: void <init>(android.os.Parcel)>
<android.app.Notification: boolean isGroupSummary()>
<android.transition.PathMotion: void <init>(android.content.Context,android.util.AttributeSet)>
<android.view.WindowManagerGlobal: void reportNewConfiguration(android.content.res.Configuration)>
<android.content.res.AssetFileDescriptor.AutoCloseInputStream: int available()>
<android.content.pm.PackageManager: void freeStorageAndNotify(long,android.content.pm.IPackageDataObserver)>
<android.telephony.CellInfoLte: java.lang.String toString()>
<android.app.AlertDialog: void setView(android.view.View)>
<com.android.internal.widget.ActionBarView: void setSubtitle(java.lang.CharSequence)>
<android.media.CCParser.DisplayListener: void onDisplayChanged(android.text.SpannableStringBuilder[])>
<android.transition.Transition: void cancel()>
<android.mtp.MtpDevice: byte[] getThumbnail(int)>
<android.net.http.DelegatingSSLSession: javax.security.cert.X509Certificate[] getPeerCertificateChain()>
<android.media.tv.TvStreamConfig: int getType()>
<android.content.pm.ComponentInfo: void writeToParcel(android.os.Parcel,int)>
<android.media.AudioManager: void setWiredHeadsetOn(boolean)>
<android.graphics.drawable.LayerDrawable: boolean onStateChange(int[])>
<com.android.internal.app.AlertController.RecycleListView: void <init>(android.content.Context)>
<android.widget.CompoundButton: void jumpDrawablesToCurrentState()>
<com.android.internal.telecom.IInCallService: void addCall(android.telecom.ParcelableCall)>
<android.app.ActivityManager: int handleIncomingUser(int,int,int,boolean,boolean,java.lang.String,java.lang.String)>
<android.text.Layout: float getPrimaryHorizontal(int)>
<android.filterfw.core.OutputPort: void open()>
<android.widget.ProgressBar: void onResolveDrawables(int)>
<android.net.VpnService.Builder: android.net.VpnService.Builder addRoute(java.net.InetAddress,int)>
<com.android.internal.widget.LockPatternUtils: void resumeCall()>
<android.preference.PreferenceActivity: void startPreferenceFragment(android.app.Fragment,boolean)>
<android.hardware.usb.UsbAccessory: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.app.LauncherActivity: void onSortResultList(java.util.List)>
<android.telecom.Call: java.lang.String getRemainingPostDialSequence()>
<android.graphics.Canvas: int saveLayer(android.graphics.RectF,android.graphics.Paint,int)>
<android.hardware.input.InputDeviceIdentifier: void <init>(java.lang.String,int,int)>
<android.net.wifi.BatchedScanSettings: boolean equals(java.lang.Object)>
<com.android.internal.os.ProcessCpuTracker: long[] getLastCpuSpeedTimes()>
<android.transition.Recolor: void captureEndValues(android.transition.TransitionValues)>
<android.view.ViewGroup: void removeViewInLayout(android.view.View)>
<android.webkit.WebSettings: void setPluginsEnabled(boolean)>
<android.app.Dialog: void setFeatureDrawableAlpha(int,int)>
<android.speech.srec.WaveHeader: android.speech.srec.WaveHeader setFormat(short)>
<com.android.internal.util.FastPrintWriter: void <init>(java.io.Writer,boolean,int)>
<com.google.android.gles_jni.GLImpl: void glDepthFunc(int)>
<android.renderscript.Type.Builder: android.renderscript.Type.Builder setX(int)>
<android.widget.ActivityChooserModel.HistoricalRecord: int hashCode()>
<android.os.Process: int myPid()>
<android.accounts.AccountManager: android.accounts.AuthenticatorDescription[] getAuthenticatorTypes()>
<android.net.wifi.p2p.WifiP2pGroup: int getNetworkId()>
<android.media.audiofx.BassBoost: android.media.audiofx.BassBoost.Settings getProperties()>
<android.renderscript.Byte2: android.renderscript.Byte2 sub(android.renderscript.Byte2,android.renderscript.Byte2)>
<android.filterpacks.imageproc.BlackWhiteFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<android.bluetooth.BluetoothInputDevice: boolean setPriority(android.bluetooth.BluetoothDevice,int)>
<android.media.AudioFormat.Builder: android.media.AudioFormat.Builder setSampleRate(int)>
<android.telecom.ParcelableConnection: java.lang.String getCallerDisplayName()>
<android.media.SubtitleTrack: void <init>(android.media.MediaFormat)>
<android.renderscript.Double4: double dotProduct(android.renderscript.Double4)>
<android.app.ActivityManagerProxy: void startLockTaskMode(android.os.IBinder)>
<android.view.View: int getMeasuredHeightAndState()>
<android.media.AudioManager: void registerRemoteControlDisplay(android.media.IRemoteControlDisplay,int,int)>
<android.print.PrintAttributes.MediaSize: void <init>(java.lang.String,java.lang.String,int,int)>
<com.google.android.util.SmileyResources: com.google.android.util.AbstractMessageParser.TrieNode getDomainSuffixes()>
<com.google.android.gles_jni.GLImpl: void glLightx(int,int,int)>
<com.android.internal.util.NotificationColorUtil: boolean isGrayscaleIcon(android.graphics.drawable.Drawable)>
<android.webkit.WebView: boolean zoomIn()>
<android.graphics.drawable.ShapeDrawable: void setAlpha(int)>
<com.android.internal.app.ResolverActivity: void onButtonClick(android.view.View)>
<android.media.SubtitleTrack: void onData(byte[],boolean,long)>
<android.preference.SeekBarDialogPreference: void <init>(android.content.Context,android.util.AttributeSet)>
<android.view.ViewGroup: void removeViewAt(int)>
<android.view.View: void <init>(android.content.Context,android.util.AttributeSet)>
<android.media.WebVttRenderingWidget: void onLayout(boolean,int,int,int,int)>
<android.widget.DateTimeView: void <init>(android.content.Context)>
<android.webkit.WebViewProvider: void dumpViewHierarchyWithProperties(java.io.BufferedWriter,int)>
<android.renderscript.Element: android.renderscript.Element.DataKind getDataKind()>
<android.preference.PreferenceActivity: void finishPreferencePanel(android.app.Fragment,int,android.content.Intent)>
<android.net.DnsPinger: int pingDnsAsync(java.net.InetAddress,int,int)>
<android.net.http.HttpResponseCache: int getHitCount()>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDClear()>
<android.widget.CheckBox: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.internal.util.SizedInputStream: int read(byte[],int,int)>
<android.database.AbstractCursor: boolean move(int)>
<android.hardware.Camera.Parameters: void remove(java.lang.String)>
<android.app.ApplicationThreadProxy: void scheduleExit()>
<com.google.android.util.AbstractMessageParser: java.lang.String toHtml()>
<android.view.ViewGroup: void setOnHierarchyChangeListener(android.view.ViewGroup.OnHierarchyChangeListener)>
<android.accounts.AccountManager: java.lang.String getUserData(android.accounts.Account,java.lang.String)>
<android.net.wifi.p2p.IWifiP2pManager: void setMiracastMode(int)>
<android.webkit.PluginData: java.io.InputStream getInputStream()>
<android.app.IActivityManager: void unregisterUserSwitchObserver(android.app.IUserSwitchObserver)>
<android.filterfw.core.CachedFrameManager: android.filterfw.core.Frame newBoundFrame(android.filterfw.core.FrameFormat,int,long)>
<android.bluetooth.le.ScanResult: int hashCode()>
<android.media.tv.TvInputInfo: java.lang.CharSequence loadCustomLabel(android.content.Context)>
<android.text.style.StrikethroughSpan: void updateDrawState(android.text.TextPaint)>
<com.android.ims.ImsStreamMediaProfile: void writeToParcel(android.os.Parcel,int)>
<android.widget.TextView: boolean performLongClick()>
<android.widget.SearchView: boolean isSubmitButtonEnabled()>
<android.filterfw.core.NativeFrame: boolean hasNativeAllocation()>
<com.android.internal.os.BatteryStatsImpl.Uid: void noteStopSensor(int,long)>
<android.media.MediaExtractor: int getSampleTrackIndex()>
<android.app.Notification.BigPictureStyle: android.app.Notification.BigPictureStyle setSummaryText(java.lang.CharSequence)>
<android.content.Context: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>
<android.media.MediaRouter.RouteInfo: boolean isEnabled()>
<android.text.style.TtsSpan.Builder: void <init>(java.lang.String)>
<android.filterfw.core.SimpleFrame: java.lang.Object getObjectValue()>
<android.net.LocalSocket: void <init>(int)>
<android.net.LinkProperties: void setDomains(java.lang.String)>
<android.telephony.CellSignalStrength: int getAsuLevel()>
<com.android.internal.backup.IBackupTransport: void cancelFullBackup()>
<com.android.internal.view.menu.MenuBuilder: android.content.Context getContext()>
<android.app.Notification.Builder: void stripForDelivery(android.app.Notification)>
<android.speech.tts.Voice: void <init>(java.lang.String,java.util.Locale,int,int,boolean,java.util.Set)>
<android.content.res.Resources: void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle)>
<android.os.Handler: android.os.Looper getLooper()>
<android.renderscript.Matrix4f: void loadProjectionNormalized(int,int)>
<com.android.internal.os.AtomicFile: void <init>(java.io.File)>
<android.widget.ZoomButtonsController.OnZoomListener: void onVisibilityChanged(boolean)>
<com.android.ims.internal.IImsCallSession: void reject(int)>
<android.content.AsyncQueryHandler: void handleMessage(android.os.Message)>
<android.widget.TabHost: void setCurrentTab(int)>
<android.media.AudioService: void unregisterAudioPolicyAsync(android.os.IBinder)>
<android.app.Fragment: void setEnterSharedElementTransitionCallback(android.app.SharedElementCallback)>
<android.opengl.GLES11Ext: void glGetFixedvOES(int,java.nio.IntBuffer)>
<com.android.ims.internal.IImsVideoCallProvider: void requestCameraCapabilities()>
<android.media.RemoteControlClient: void setTransportControlFlags(int)>
<android.provider.SearchIndexablesProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.webkit.WebViewProvider: void setHorizontalScrollbarOverlay(boolean)>
<android.webkit.WebSettings: void setJavaScriptEnabled(boolean)>
<android.media.audiofx.Visualizer: void finalize()>
<android.content.pm.PackageManager: android.content.res.XmlResourceParser getXml(java.lang.String,int,android.content.pm.ApplicationInfo)>
<android.provider.CalendarContract.Attendees: android.database.Cursor query(android.content.ContentResolver,long,java.lang.String[])>
<android.graphics.drawable.ClipDrawable: int getAlpha()>
<android.security.IKeystoreService: int verify(java.lang.String,byte[],byte[])>
<android.os.BaseBundle: java.util.Set keySet()>
<com.android.internal.telephony.GsmAlphabet: int findGsmSeptetLimitIndex(java.lang.String,int,int,int,int)>
<android.webkit.WebViewProvider: void setMapTrackballToArrowKeys(boolean)>
<android.app.backup.BackupAgent: void onFullBackup(android.app.backup.FullBackupDataOutput)>
<android.media.WebVttCueListener: void onCueParsed(android.media.TextTrackCue)>
<com.android.internal.telephony.ITelephonyRegistry: void notifySignalStrength(android.telephony.SignalStrength)>
<com.android.internal.telephony.IPhoneStateListener: void onSignalStrengthsChanged(android.telephony.SignalStrength)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,android.util.Property,android.util.Property,android.graphics.Path)>
<android.database.CursorWindow: int describeContents()>
<android.database.DatabaseUtils.InsertHelper: void bind(int,int)>
<android.ddm.DdmHandleAppName: void connected()>
<android.net.IpPrefix: byte[] getRawAddress()>
<android.view.View: void setOnTouchListener(android.view.View.OnTouchListener)>
<android.mtp.MtpDevice: android.mtp.MtpObjectInfo getObjectInfo(int)>
<android.hardware.camera2.params.ReprocessFormatsMap: int[] getInputs()>
<android.hardware.camera2.marshal.impl.MarshalQueryableStreamConfiguration: boolean isTypeMappingSupported(android.hardware.camera2.utils.TypeReference,int)>
<android.service.media.MediaBrowserService: void setSessionToken(android.media.session.MediaSession.Token)>
<android.graphics.drawable.RippleDrawable: void <init>(android.content.res.ColorStateList,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
<com.android.internal.telecom.IVideoCallback: void receiveSessionModifyRequest(android.telecom.VideoProfile)>
<android.telecom.Phone.Listener: void onCallAdded(android.telecom.Phone,android.telecom.Call)>
<android.view.inputmethod.CursorAnchorInfo: int getInsertionMarkerFlags()>
<android.content.IntentFilter: java.util.Iterator actionsIterator()>
<android.media.IMediaHTTPConnection: java.lang.String getUri()>
<android.app.SearchManager: void stopSearch()>
<android.content.AsyncQueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>
<android.os.BatteryStats: long getFlashlightOnCount(int)>
<android.preference.Preference: void notifyDependencyChange(boolean)>
<android.bluetooth.IBluetoothHeadsetPhone: void updateBtHandsfreeAfterRadioTechnologyChange()>
<android.renderscript.Long2: void <init>(long)>
<android.widget.SimpleCursorTreeAdapter: void setViewImage(android.widget.ImageView,java.lang.String)>
<android.hardware.hdmi.HdmiDeviceInfo: void <init>(int,int,int,int)>
<android.nfc.FormatException: void <init>(java.lang.String)>
<com.android.internal.location.ProviderProperties: int describeContents()>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: java.lang.String toString()>
<android.content.AbstractThreadedSyncAdapter: void onPerformSync(android.accounts.Account,android.os.Bundle,java.lang.String,android.content.ContentProviderClient,android.content.SyncResult)>
<android.accessibilityservice.AccessibilityService.Callbacks: void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.app.job.JobInfo: boolean hasLateConstraint()>
<android.text.SpannableStringBuilder: float measureText(int,int,android.graphics.Paint)>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl: boolean isEnabled()>
<com.android.internal.widget.PreferenceImageView: void <init>(android.content.Context)>
<android.os.Handler: java.lang.String toString()>
<android.media.RemoteController: boolean setArtworkConfiguration(int,int)>
<android.view.InputEventConsistencyVerifier: void onGenericMotionEvent(android.view.MotionEvent,int)>
<android.app.trust.TrustManager: void registerTrustListener(android.app.trust.TrustManager.TrustListener)>
<android.print.PrintAttributes: void writeToParcel(android.os.Parcel,int)>
<android.util.SizeF: android.util.SizeF parseSizeF(java.lang.String)>
<android.widget.CheckedTextView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.net.INetworkManagementEventObserver: void routeRemoved(android.net.RouteInfo)>
<android.app.WallpaperInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>
<android.widget.TextView.SavedState: java.lang.String toString()>
<android.app.ApplicationThreadProxy: void scheduleRelaunchActivity(android.os.IBinder,java.util.List,java.util.List,int,boolean,android.content.res.Configuration)>
<com.android.internal.app.AlertController: void setView(int)>
<android.view.View: float getHorizontalScrollFactor()>
<android.hardware.camera2.legacy.ParameterUtils.WeightedRectangle: android.hardware.camera2.params.Face toFace(int,android.graphics.Point,android.graphics.Point,android.graphics.Point)>
<android.webkit.WebViewProvider: void goBackOrForward(int)>
<com.android.internal.app.ExternalMediaFormatActivity: void onClick(android.content.DialogInterface,int)>
<android.webkit.WebView: boolean canGoForward()>
<android.graphics.drawable.ClipDrawable: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>
<android.animation.FloatArrayEvaluator: float[] evaluate(float,float[],float[])>
<android.database.IBulkCursor: void onMove(int)>
<android.opengl.GLES10: void glClear(int)>
<android.media.MediaDrm: void setPropertyString(java.lang.String,java.lang.String)>
<android.media.session.ISessionCallback: void onMediaButton(android.content.Intent,int,android.os.ResultReceiver)>
<android.media.AudioService: void setMicrophoneMute(boolean,java.lang.String)>
<android.database.DatabaseUtils.InsertHelper: void <init>(android.database.sqlite.SQLiteDatabase,java.lang.String)>
<android.widget.TextView: boolean setFrame(int,int,int,int)>
<android.animation.ArgbEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)>
<android.appwidget.AppWidgetProviderInfo: java.lang.String loadLabel(android.content.pm.PackageManager)>
<android.widget.Switch: int[] onCreateDrawableState(int)>
<com.android.internal.statusbar.StatusBarIconList: void dump(java.io.PrintWriter)>
<android.media.AudioGain: android.media.AudioGainConfig buildConfig(int,int,int[],int)>
<android.view.View.OnFocusChangeListener: void onFocusChange(android.view.View,boolean)>
<android.app.ActivityManager.MemoryInfo: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.widget.SizeAdaptiveLayout: android.view.View getModestyPanel()>
<android.app.Instrumentation: boolean checkMonitorHit(android.app.Instrumentation.ActivityMonitor,int)>
<android.net.Uri: boolean isAbsolute()>
<android.print.PrinterCapabilitiesInfo: void copyFrom(android.print.PrinterCapabilitiesInfo)>
<android.widget.Adapter: boolean isEmpty()>
<android.util.Rational: boolean isZero()>
<android.hardware.camera2.legacy.CameraDeviceState.CameraDeviceStateListener: void onBusy()>
<android.view.Choreographer: void postFrameCallback(android.view.Choreographer.FrameCallback)>
<com.android.internal.widget.ActionBarView: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.bluetooth.le.AdvertiseSettings: java.lang.String toString()>
<android.bluetooth.IBluetoothInputDevice: boolean setProtocolMode(android.bluetooth.BluetoothDevice,int)>
<android.renderscript.Program: int getTextureCount()>
<android.content.SyncAdapterType: android.content.SyncAdapterType newKey(java.lang.String,java.lang.String)>
<android.content.ContentProviderClient: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
<android.util.NtpTrustedTime: long getCacheCertainty()>
<android.widget.OverScroller: void forceFinished(boolean)>
<android.renderscript.Element: android.renderscript.Element U32(android.renderscript.RenderScript)>
<android.hardware.display.DisplayManagerInternal: void unregisterDisplayTransactionListener(android.hardware.display.DisplayManagerInternal.DisplayTransactionListener)>
<android.view.IWindow: void dispatchSystemUiVisibilityChanged(int,int,int,int)>
<android.hardware.hdmi.HdmiPortInfo: int getType()>
<android.view.ViewGroup: boolean isAnimationCacheEnabled()>
<android.widget.TableLayout: void <init>(android.content.Context)>
<android.view.MotionEvent: int getMetaState()>
<android.widget.ActivityChooserModel.HistoricalRecord: boolean equals(java.lang.Object)>
<android.widget.Chronometer: void onDetachedFromWindow()>
<android.widget.MediaController: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.content.pm.PackageManager: java.util.List getAllPermissionGroups(int)>
<android.media.RemoteController.OnClientUpdateListener: void onClientMetadataUpdate(android.media.RemoteController.MetadataEditor)>
<android.opengl.GLES20: void glUniformMatrix4fv(int,int,boolean,java.nio.FloatBuffer)>
<android.telephony.TelephonyManager: void disableLocationUpdates()>
<android.app.ApplicationThreadNative: android.app.IApplicationThread asInterface(android.os.IBinder)>
<android.telecom.ParcelableConference: int getCapabilities()>
<android.os.WorkSource: int size()>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder setSubtypeExtraValue(java.lang.String)>
<com.android.internal.os.BatteryStatsImpl.Uid: com.android.internal.os.BatteryStatsImpl.Timer getForegroundActivityTimer()>
<android.database.MergeCursor: void unregisterContentObserver(android.database.ContentObserver)>
<android.app.trust.ITrustManager: void unregisterTrustListener(android.app.trust.ITrustListener)>
<android.renderscript.Element: android.renderscript.Element F64_4(android.renderscript.RenderScript)>
<android.text.Layout: boolean isRtlCharAt(int)>
<android.widget.Toast: int getGravity()>
<android.os.Debug: void resetThreadAllocCount()>
<android.renderscript.Int3: void negate()>
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setCallback(java.lang.Runnable)>
<com.android.internal.app.ProcessStats.ProcessState: void makeInactive()>
<com.google.android.util.SmileyResources: void <init>(java.lang.String[],int[])>
<android.webkit.WebView: boolean onKeyDown(int,android.view.KeyEvent)>
<android.widget.SimpleExpandableListAdapter: boolean isChildSelectable(int,int)>
<android.app.ActivityThread: android.app.Activity getActivity(android.os.IBinder)>
<android.app.ActivityManagerProxy: void finishSubActivity(android.os.IBinder,java.lang.String,int)>
<android.net.http.AndroidHttpClient: org.apache.http.params.HttpParams getParams()>
<android.provider.ContactsContract.CommonDataKinds.Email: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>
<android.media.tv.TvContract: android.net.Uri buildChannelsUriForInput(java.lang.String,boolean)>
<android.app.Dialog: android.view.View getCurrentFocus()>
<android.media.MediaRouter.RouteInfo: int getSupportedTypes()>
<android.renderscript.Long2: void addAt(int,long)>
<android.widget.MediaController.MediaPlayerControl: boolean canSeekBackward()>
<android.text.SpannableStringBuilder: int getSpanFlags(java.lang.Object)>
<android.media.MediaRecorder: void setAuxiliaryOutputFile(java.io.FileDescriptor)>
<com.android.internal.os.BatteryStatsImpl.Uid: long getNetworkActivityBytes(int,int)>
<android.renderscript.Float2: void mul(float)>
<android.net.nsd.NsdServiceInfo: void setPort(int)>
<android.app.admin.DevicePolicyManager: java.util.List getActiveAdminsAsUser(int)>
<android.view.ViewGroup: void jumpDrawablesToCurrentState()>
<android.filterfw.core.OutputPort: void close()>
<com.android.internal.util.AsyncChannel: int connectSrcHandlerToPackageSync(android.content.Context,android.os.Handler,java.lang.String,java.lang.String)>
<android.graphics.drawable.shapes.PathShape: void draw(android.graphics.Canvas,android.graphics.Paint)>
<android.preference.VolumePreference: void <init>(android.content.Context,android.util.AttributeSet)>
<android.preference.PreferenceFragment: void setPreferenceScreen(android.preference.PreferenceScreen)>
<android.view.accessibility.AccessibilityNodeInfo: java.lang.String getViewIdResourceName()>
<android.app.usage.IUsageStatsManager: android.app.usage.UsageEvents queryEvents(long,long,java.lang.String)>
<android.graphics.drawable.BitmapDrawable: void onBoundsChange(android.graphics.Rect)>
<android.widget.ExpandableListView: void setChildDivider(android.graphics.drawable.Drawable)>
<android.view.SurfaceControl: void setOpaque(boolean)>
<android.webkit.WebView: void onDrawVerticalScrollBar(android.graphics.Canvas,android.graphics.drawable.Drawable,int,int,int,int)>
<com.android.internal.app.MediaRouteChooserDialogFragment: void setRouteTypes(int)>
<android.printservice.PrintJob: boolean isQueued()>
<android.telephony.CellSignalStrengthLte: void <init>(android.telephony.CellSignalStrengthLte)>
<com.android.internal.view.IInputConnectionWrapper: void getCursorCapsMode(int,int,com.android.internal.view.IInputContextCallback)>
<com.android.internal.widget.LockPatternUtilsCache: android.os.IBinder asBinder()>
<android.widget.Toolbar.LayoutParams: void <init>(android.view.ViewGroup.MarginLayoutParams)>
<android.service.wallpaper.WallpaperService.Engine: void onSurfaceDestroyed(android.view.SurfaceHolder)>
<android.app.Activity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)>
<android.view.WindowManagerPolicy.FakeWindow: void dismiss()>
<android.hardware.input.KeyboardLayout: int compareTo(android.hardware.input.KeyboardLayout)>
<android.app.ProgressDialog: void onStart()>
<android.security.KeyStore: byte[] get(java.lang.String)>
<android.view.textservice.SpellCheckerSubtype: int getNameResId()>
<android.media.tv.ITvInputClient: void onSessionCreated(java.lang.String,android.os.IBinder,android.view.InputChannel,int)>
<com.android.internal.app.ToolbarActionBar: java.lang.CharSequence getTitle()>
<android.filterfw.core.Filter: android.filterfw.core.Frame pullInput(java.lang.String)>
<android.media.session.MediaSessionLegacyHelper: void addMediaButtonListener(android.app.PendingIntent,android.content.ComponentName,android.content.Context)>
<com.android.internal.util.AsyncChannel: void connect(android.content.Context,android.os.Handler,android.os.Messenger)>
<com.android.net.IProxyService: void startPacSystem()>
<android.renderscript.Int4: int dotProduct(android.renderscript.Int4,android.renderscript.Int4)>
<android.bluetooth.BluetoothA2dp: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.graphics.LightingColorFilter: int getColorMultiply()>
<android.text.DynamicLayout: android.text.Layout.Directions getLineDirections(int)>
<com.google.android.util.AbstractMessageParser.Html: java.util.List getInfo()>
<android.content.SyncRequest.Builder: android.content.SyncRequest.Builder setIgnoreSettings(boolean)>
<android.widget.RatingBar: void <init>(android.content.Context,android.util.AttributeSet)>
<android.service.dreams.DreamService: android.view.View onCreatePanelView(int)>
<android.net.ConnectivityManager: boolean updateLockdownVpn()>
<android.widget.FrameLayout: void setForegroundTintList(android.content.res.ColorStateList)>
<android.location.GpsMeasurement: double getCarrierPhase()>
<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>
<android.widget.Toolbar: void onDetachedFromWindow()>
<android.media.audiofx.AudioEffect: void checkStatus(int)>
<com.android.internal.widget.multiwaveview.PointCloud.GlowManager: void setAlpha(float)>
<android.opengl.GLES20: void glGetActiveUniform(int,int,int,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,byte)>
<android.net.LinkQualityInfo: int getDataSampleDuration()>
<android.util.LruCache: int maxSize()>
<android.view.InputEvent: int getSequenceNumber()>
<com.android.internal.os.BatteryStatsImpl: long getInteractiveTime(long,int)>
<android.widget.CursorTreeAdapter: boolean isChildSelectable(int,int)>
<android.renderscript.ProgramStore.Builder: android.renderscript.ProgramStore.Builder setDitherEnabled(boolean)>
<android.print.IPrintManager: android.os.Bundle print(java.lang.String,android.print.IPrintDocumentAdapter,android.print.PrintAttributes,java.lang.String,int,int)>
<com.android.ims.internal.IImsCallSessionListener: void callSessionResumed(com.android.ims.internal.IImsCallSession,com.android.ims.ImsCallProfile)>
<android.os.DropBoxManager.Entry: void <init>(java.lang.String,long,byte[],int)>
<android.widget.GridLayout: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.android.internal.view.IInputMethod: void restartInput(com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo)>
<android.util.SparseBooleanArray: void removeAt(int)>
<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)>
<android.widget.TextClock: void <init>(android.content.Context)>
<android.app.IActivityManager: java.util.List getTasks(int,int)>
<android.mtp.MtpObjectInfo: int getParent()>
<android.preference.PreferenceActivity: android.preference.PreferenceManager getPreferenceManager()>
<android.view.View: void onWindowSystemUiVisibilityChanged(int)>
<android.app.backup.BackupAgent: void onDestroy()>
<android.net.wifi.WifiActivityEnergyInfo: int describeContents()>
<android.os.Looper: void loop()>
<android.net.http.SslError: boolean addError(int)>
<android.graphics.drawable.InsetDrawable: void <init>(android.graphics.drawable.Drawable,int,int,int,int)>
<android.nfc.NfcActivityManager: android.nfc.BeamShareData createBeamShareData()>
<android.telephony.ServiceState: boolean getIsManualSelection()>
<android.app.job.IJobCallback: void jobFinished(int,boolean)>
<android.graphics.Matrix: boolean preConcat(android.graphics.Matrix)>
<android.util.MathUtils: long constrain(long,long,long)>
<android.graphics.drawable.RotateDrawable: void setToDegrees(float)>
<android.view.DragEvent: float getX()>
<android.util.Log: int println_native(int,int,java.lang.String,java.lang.String)>
<android.widget.MediaController.MediaPlayerControl: boolean canPause()>
<android.content.UriPermission: int describeContents()>
<android.renderscript.Int4: android.renderscript.Int4 div(android.renderscript.Int4,android.renderscript.Int4)>
<android.filterfw.core.VertexFrame: java.lang.Object getObjectValue()>
<android.net.ConnectivityManager: boolean isNetworkTypeMobile(int)>
<android.telephony.CellSignalStrengthCdma: void <init>(int,int,int,int,int)>
<android.webkit.WebViewFactoryProvider.Statics: void enableSlowWholeDocumentDraw()>
<android.view.animation.AccelerateInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.EditText: void extendSelection(int)>
<android.media.AudioTrack: void play()>
<android.renderscript.Script: void invoke(int)>
<android.view.animation.AnimationSet: boolean getTransformation(long,android.view.animation.Transformation)>
<android.os.MemoryFile: void finalize()>
<android.renderscript.Double2: void add(android.renderscript.Double2)>
<android.bluetooth.IBluetooth: boolean isConnected(android.bluetooth.BluetoothDevice)>
<android.net.RouteInfo: void <init>(android.net.IpPrefix,int)>
<android.service.voice.AlwaysOnHotwordDetector.EventPayload: byte[] getTriggerAudio()>
<android.filterfw.core.Filter: void closeOutputPort(java.lang.String)>
<android.graphics.Canvas: boolean clipRegion(android.graphics.Region)>
<android.net.LinkProperties: int describeContents()>
<android.view.ViewGroup: void requestDisallowInterceptTouchEvent(boolean)>
<android.app.IActivityController: boolean activityStarting(android.content.Intent,java.lang.String)>
<android.opengl.GLES20: void glBindTexture(int,int)>
<android.hardware.usb.UsbAccessory: void writeToParcel(android.os.Parcel,int)>
<android.net.ConnectivityManager.NetworkCallback: void onLinkPropertiesChanged(android.net.Network,android.net.LinkProperties)>
<android.print.IPrintSpooler: void setPrintJobCancelling(android.print.PrintJobId,boolean)>
<android.filterpacks.numeric.SinWaveFilter: void <init>(java.lang.String)>
<android.widget.Toolbar: void setMenu(com.android.internal.view.menu.MenuBuilder,android.widget.ActionMenuPresenter)>
<android.webkit.WebSettings: java.lang.String getFantasyFontFamily()>
<android.view.accessibility.AccessibilityNodeInfo: android.util.LongArray getChildNodeIds()>
<android.provider.DocumentsProvider: void revokeDocumentPermission(java.lang.String)>
<android.content.SyncAdapterType: void <init>(android.os.Parcel)>
<android.telephony.ServiceState: void setCssIndicator(int)>
<android.media.AudioTrack: int getPlaybackHeadPosition()>
<android.ddm.DdmHandleViewDebug: void disconnected()>
<android.widget.TextView: android.text.TextPaint getPaint()>
<android.renderscript.Short2: void <init>(android.renderscript.Short2)>
<android.content.Context: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase.CursorFactory,android.database.DatabaseErrorHandler)>
<android.media.MediaRouter.SimpleCallback: void onRouteAdded(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>
<com.android.internal.os.BatteryStatsImpl: void noteStartWakeFromSourceLocked(android.os.WorkSource,int,java.lang.String,java.lang.String,int,boolean)>
<android.media.MediaFile: int getFileTypeForMimeType(java.lang.String)>
<android.widget.Toolbar: java.lang.CharSequence getLogoDescription()>
<android.content.pm.PackageItemInfo.DisplayNameComparator: void <init>(android.content.pm.PackageManager)>
<android.bluetooth.IBluetoothGatt: void connectionParameterUpdate(int,java.lang.String,int)>
<com.android.internal.os.BatteryStatsImpl.Uid: void noteWifiScanStoppedLocked(long)>
<android.webkit.WebViewProvider: void clearCache(boolean)>
<com.android.internal.view.IInputContextCallback: void setExtractedText(android.view.inputmethod.ExtractedText,int)>
<android.view.View: void setOpticalInsets(android.graphics.Insets)>
<android.opengl.GLES31Ext.DebugProcKHR: void onMessage(int,int,int,int,java.lang.String)>
<com.android.internal.telecom.ITelecomService: void registerPhoneAccount(android.telecom.PhoneAccount)>
<android.net.Credentials: int getPid()>
<android.view.View: void setClipBounds(android.graphics.Rect)>
<com.google.android.util.AbstractMessageParser.Format: void setMatched(boolean)>
<android.text.style.TtsSpan.DecimalBuilder: android.text.style.TtsSpan.DecimalBuilder setIntegerPart(java.lang.String)>
<android.content.ContentProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>
<android.net.wifi.WifiManager: boolean isWifiEnabled()>
<android.renderscript.Allocation: void copy1DRangeFromUnchecked(int,int,short[])>
<android.text.format.Time: long normalize(boolean)>
<com.android.internal.util.FastXmlSerializer: void processingInstruction(java.lang.String)>
<android.os.CommonClock: void setServerDiedListener(android.os.CommonClock.OnServerDiedListener)>
<android.text.HtmlToSpannedConverter: void endElement(java.lang.String,java.lang.String,java.lang.String)>
<android.content.IContentProvider: int bulkInsert(java.lang.String,android.net.Uri,android.content.ContentValues[])>
<android.app.ActivityGroup: void onCreate(android.os.Bundle)>
<android.app.Activity: void setResult(int)>
<android.widget.AdapterViewAnimator: android.animation.ObjectAnimator getInAnimation()>
<android.bluetooth.IBluetoothHeadset: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.content.IContentService: android.content.SyncAdapterType[] getSyncAdapterTypes()>
<android.os.BatteryStats.Uid: void noteWifiStoppedLocked(long)>
<android.renderscript.Short4: void mod(short)>
<android.os.INetworkManagementService: android.net.NetworkStats getNetworkStatsDetail()>
<android.net.LinkProperties: java.util.List getAllInterfaceNames()>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.ScriptIntrinsicBlend create(android.renderscript.RenderScript,android.renderscript.Element)>
<android.net.wifi.WpsInfo: int describeContents()>
<android.hardware.hdmi.HdmiDeviceInfo: boolean isSourceType()>
<android.bluetooth.BluetoothActivityEnergyInfo: void <init>(int,int,int,int,int)>
<android.opengl.EGL14: boolean eglWaitNative(int)>
<android.filterfw.core.VertexFrame: float[] getFloats()>
<com.android.internal.view.menu.MenuPresenter: void onCloseMenu(com.android.internal.view.menu.MenuBuilder,boolean)>
<android.media.AudioManager.OnAudioFocusChangeListener: void onAudioFocusChange(int)>
<android.media.MediaPlayer: int getVideoWidth()>
<android.app.Notification.Style: void internalSetBigContentTitle(java.lang.CharSequence)>
<android.content.ContentProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<android.media.MediaFile: boolean isDrmFileType(int)>
<android.webkit.WebViewProvider: void destroy()>
<android.view.ViewTreeObserver.OnGlobalFocusChangeListener: void onGlobalFocusChanged(android.view.View,android.view.View)>
<android.inputmethodservice.InputMethodService: boolean onShowInputRequested(int,boolean)>
<android.media.session.MediaSession: android.media.session.MediaController getController()>
<android.view.Choreographer: void removeCallbacks(int,java.lang.Runnable,java.lang.Object)>
<android.view.View: int[] getDrawableState()>
<android.widget.Toast: int getXOffset()>
<android.view.RenderNode: boolean setRotation(float)>
<android.view.CollapsibleActionView: void onActionViewCollapsed()>
<android.location.GpsMeasurement: double getAzimuthInDeg()>
<android.app.backup.BackupTransport: android.app.backup.RestoreSet[] getAvailableRestoreSets()>
<android.graphics.ColorMatrix: void set(android.graphics.ColorMatrix)>
<android.net.wifi.p2p.WifiP2pDevice: boolean equals(java.lang.Object)>
<android.view.View: void restoreHierarchyState(android.util.SparseArray)>
<android.view.textservice.SpellCheckerInfo: java.lang.String getId()>
<android.telecom.InCallAdapter: void disconnectCall(java.lang.String)>
<android.app.ActivityManagerProxy: int getPackageScreenCompatMode(java.lang.String)>
<android.view.WindowManagerPolicy: void exitKeyguardSecurely(android.view.WindowManagerPolicy.OnKeyguardExitResult)>
<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setShortcut(char,char)>
<com.android.server.NetworkManagementSocketTagger: void tag(java.io.FileDescriptor)>
<android.app.NativeActivity: void onWindowFocusChanged(boolean)>
<android.content.Loader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.hardware.usb.UsbInterface: java.lang.String getName()>
<android.view.accessibility.AccessibilityNodeInfo.CollectionInfo: int getRowCount()>
<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setTitle(java.lang.CharSequence)>
<android.content.pm.ParceledListSlice: int describeContents()>
<android.os.Parcel: android.os.Parcel obtain(int)>
<android.widget.TextView: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<android.hardware.hdmi.IHdmiControlService: void setSystemAudioMute(boolean)>
<android.view.View: void onDrawScrollBars(android.graphics.Canvas)>
<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo: boolean isHeading()>
<android.net.NetworkUtils: boolean releaseDhcpLease(java.lang.String)>
<android.graphics.drawable.AnimatedVectorDrawable: boolean isStateful()>
<android.filterfw.core.OutputPort: boolean isReady()>
<android.view.View: boolean onKeyLongPress(int,android.view.KeyEvent)>
<android.hardware.hdmi.HdmiRecordSources.AtscData: int toByteArray(byte[],int)>
<android.text.style.TtsSpan.ElectronicBuilder: android.text.style.TtsSpan.ElectronicBuilder setDomain(java.lang.String)>
<android.widget.ViewFlipper: boolean isFlipping()>
<android.webkit.WebIconDatabase: void bulkRequestIconForPageUrl(android.content.ContentResolver,java.lang.String,android.webkit.WebIconDatabase.IconListener)>
<android.app.IBackupAgent: void fail(java.lang.String)>
<android.hardware.Camera: void setFaceDetectionListener(android.hardware.Camera.FaceDetectionListener)>
<android.view.View: int getVerticalScrollbarWidth()>
<android.content.pm.PackageManager: java.lang.String[] canonicalToCurrentPackageNames(java.lang.String[])>
<android.print.PrintJobId: int describeContents()>
<android.app.DialogFragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.internal.util.FastXmlSerializer: void setPrefix(java.lang.String,java.lang.String)>
<com.android.internal.app.ToolbarActionBar: void setDisplayOptions(int)>
<android.hardware.Camera.Parameters: float getExposureCompensationStep()>
<android.graphics.Paint: void reset()>
<android.media.AudioService: android.media.AudioRoutesInfo startWatchingRoutes(android.media.IAudioRoutesObserver)>
<android.inputmethodservice.InputMethodService: void setBackDisposition(int)>
<android.net.wifi.IWifiManager: void enableTdls(java.lang.String,boolean)>
<android.widget.Scroller: void setFinalX(int)>
<com.android.internal.view.IInputMethodSession: void appPrivateCommand(java.lang.String,android.os.Bundle)>
<android.os.PerformanceCollector: void setPerformanceResultsWriter(android.os.PerformanceCollector.PerformanceResultsWriter)>
<android.telecom.InCallService.VideoCall: void setVideoCallListener(android.telecom.InCallService.VideoCall.Listener)>
<android.text.GraphicsOperations: float getTextRunAdvances(int,int,int,int,boolean,float[],int,android.graphics.Paint)>
<android.widget.GridLayout: void onViewAdded(android.view.View)>
<com.android.internal.util.UserIcons: android.graphics.drawable.Drawable getDefaultUserIcon(int,boolean)>
<android.animation.AnimatorSet: long getDuration()>
<android.view.Menu: boolean performIdentifierAction(int,int)>
<android.inputmethodservice.KeyboardView.OnKeyboardActionListener: void swipeLeft()>
<android.hardware.SystemSensorManager: boolean requestTriggerSensorImpl(android.hardware.TriggerEventListener,android.hardware.Sensor)>
<android.net.wifi.p2p.WifiP2pProvDiscEvent: java.lang.String toString()>
<android.filterfw.core.GraphRunner: void close()>
<android.media.IAudioService: void unregisterAudioPolicyAsync(android.os.IBinder)>
<android.app.ActivityManager.TaskThumbnail: void writeToParcel(android.os.Parcel,int)>
<android.provider.ContactsContract.PinnedPositions: void pin(android.content.ContentResolver,long,int)>
<android.hardware.camera2.utils.HashCodeHelpers: int hashCode(int)>
<android.telephony.cdma.CdmaSmsCbProgramResults: java.lang.String toString()>
<android.widget.TabHost: java.lang.String getCurrentTabTag()>
<android.renderscript.Float2: void setAt(int,float)>
<android.widget.NumberPicker: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.widget.PopupWindow: int getWindowLayoutType()>
<android.hardware.display.DisplayManager: android.view.Display getDisplay(int)>
<android.content.res.Resources: void setCompatibilityInfo(android.content.res.CompatibilityInfo)>
<android.app.Notification: void writeToParcel(android.os.Parcel,int)>
<android.util.MathUtils: float asin(float)>
<android.media.session.MediaController: android.os.Bundle getExtras()>
<android.graphics.YuvImage: int getHeight()>
<android.bluetooth.BluetoothClass: int getMajorDeviceClass()>
<android.view.animation.AnimationSet: void setStartTime(long)>
<android.text.style.TtsSpan.SemioticClassBuilder: android.text.style.TtsSpan.SemioticClassBuilder setGender(java.lang.String)>
<android.opengl.EGL14: android.opengl.EGLSurface eglCreatePbufferFromClientBuffer(android.opengl.EGLDisplay,int,long,android.opengl.EGLConfig,int[],int)>
<android.util.IntProperty: void setValue(java.lang.Object,int)>
<com.android.internal.statusbar.StatusBarIcon: void <init>(java.lang.String,android.os.UserHandle,int,int,int,java.lang.CharSequence)>
<android.database.sqlite.SQLiteAccessPermException: void <init>(java.lang.String)>
<android.widget.FrameLayout: android.graphics.drawable.Drawable getForeground()>
<android.media.MediaRouter: android.media.MediaRouter.RouteInfo getRouteAt(int)>
<android.hardware.display.DisplayManagerGlobal: void renameWifiDisplay(java.lang.String,java.lang.String)>
<com.android.internal.widget.ToolbarWidgetWrapper: void setWindowTitle(java.lang.CharSequence)>
<android.filterfw.core.MutableFrameFormat: void <init>(int,int)>
<android.webkit.WebViewFactoryProvider.Statics: void clearClientCertPreferences(java.lang.Runnable)>
<android.app.admin.IDevicePolicyManager: android.content.ComponentName getProfileOwner(int)>
<android.content.Context: void unregisterComponentCallbacks(android.content.ComponentCallbacks)>
<android.telephony.PreciseCallState: int getForegroundCallState()>
<android.graphics.Shader: void finalize()>
<android.graphics.drawable.AnimationDrawable: void unscheduleSelf(java.lang.Runnable)>
<android.renderscript.ProgramStore: android.renderscript.ProgramStore BLEND_ALPHA_DEPTH_TEST(android.renderscript.RenderScript)>
<android.location.Address: java.lang.String getUrl()>
<android.filterpacks.imageproc.BrightnessFilter: android.filterfw.core.Program getNativeProgram(android.filterfw.core.FilterContext)>
<android.renderscript.Byte3: android.renderscript.Byte3 add(android.renderscript.Byte3,byte)>
<android.os.Environment: java.io.File getLegacyExternalStorageObbDirectory()>
<android.util.Rational: boolean isInfinite()>
<android.widget.DialerFilter: boolean onKeyDown(int,android.view.KeyEvent)>
<android.webkit.WebView: void clearView()>
<android.database.AbstractCursor: int getCount()>
<android.net.Uri.Builder: android.net.Uri.Builder clearQuery()>
<android.graphics.Outline: void setRect(android.graphics.Rect)>
<android.hardware.camera2.legacy.LegacyCameraDevice: boolean isClosed()>
<android.database.sqlite.SQLiteDatabase: void setLocale(java.util.Locale)>
<android.app.Dialog: boolean takeCancelAndDismissListeners(java.lang.String,android.content.DialogInterface.OnCancelListener,android.content.DialogInterface.OnDismissListener)>
<android.graphics.Canvas: void drawPosText(java.lang.String,float[],android.graphics.Paint)>
<android.widget.ActionMenuPresenter: void setItemLimit(int)>
<android.view.ViewDebug: void dumpTheme(android.view.View,java.io.OutputStream)>
<android.app.IActivityManager: boolean isInLockTaskMode()>
<com.android.internal.util.SizedInputStream: int read()>
<com.android.server.WidgetBackupProvider: byte[] getWidgetState(java.lang.String,int)>
<android.graphics.drawable.VectorDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>
<com.android.internal.widget.ToolbarWidgetWrapper: void setDropdownParams(android.widget.SpinnerAdapter,android.widget.AdapterView.OnItemSelectedListener)>
<android.media.tv.ITvInputSessionWrapper: void setVolume(float)>
<android.renderscript.Long3: void set(android.renderscript.Long3)>
<android.util.SizeF: boolean equals(java.lang.Object)>
<android.media.MediaRouter.RouteInfo: boolean isConnecting()>
<android.view.View: boolean isTextDirectionResolved()>
<android.os.ParcelUuid: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.view.menu.IconMenuItemView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.AbsListView: int getListPaddingTop()>
<android.database.CursorWrapper: float getFloat(int)>
<android.view.SurfaceControl.PhysicalDisplayInfo: void <init>(android.view.SurfaceControl.PhysicalDisplayInfo)>
<android.media.MediaSyncEvent: android.media.MediaSyncEvent createEvent(int)>
<android.widget.TableRow: android.widget.TableRow.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<com.android.internal.location.ProviderRequest: void writeToParcel(android.os.Parcel,int)>
<android.view.MagnificationSpec: void initialize(float,float,float)>
<android.hardware.usb.UsbDeviceConnection: void <init>(android.hardware.usb.UsbDevice)>
<android.filterfw.core.Filter: void addFieldPort(java.lang.String,java.lang.reflect.Field,boolean,boolean)>
<android.bluetooth.IBluetooth: android.os.ParcelUuid[] getUuids()>
<android.view.ViewRootImpl: void dispatchFinishInputConnection(android.view.inputmethod.InputConnection)>
<android.view.RenderNode: boolean setClipToOutline(boolean)>
<android.database.sqlite.SQLiteTransactionListener: void onBegin()>
<android.view.Surface: boolean isValid()>
<com.android.internal.os.BatteryStatsImpl.TimeBaseObs: void onTimeStopped(long,long,long)>
<com.android.internal.widget.ActionBarOverlayLayout: void draw(android.graphics.Canvas)>
<android.bluetooth.BluetoothActivityEnergyInfo: java.lang.String toString()>
<android.renderscript.Matrix2f: void transpose()>
<android.os.Parcel: byte readByte()>
<android.content.Context: void startActivityAsUser(android.content.Intent,android.os.UserHandle)>
<android.mtp.MtpObjectInfo: long getDateModified()>
<android.view.ViewGroup.LayoutParams: void <init>(int,int)>
<android.text.method.TextKeyListener: void clear(android.text.Editable)>
<android.widget.ActionMenuView.OnMenuItemClickListener: boolean onMenuItemClick(android.view.MenuItem)>
<android.bluetooth.BluetoothMap: boolean setPriority(android.bluetooth.BluetoothDevice,int)>
<android.text.TextUtils: void getChars(java.lang.CharSequence,int,int,char[],int)>
<android.content.pm.PackageManager.LegacyPackageInstallObserver: void onPackageInstalled(java.lang.String,int,java.lang.String,android.os.Bundle)>
<android.hardware.Sensor: int getFifoMaxEventCount()>
<android.app.ActionBar: void selectTab(android.app.ActionBar.Tab)>
<android.renderscript.RenderScriptGL: void pause()>
<android.app.Activity: android.app.LoaderManager getLoaderManager()>
<android.opengl.GLES30: int glGetUniformBlockIndex(int,java.lang.String)>
<android.app.TaskStackBuilder: void startActivities(android.os.Bundle)>
<android.net.nsd.NsdServiceInfo: void removeAttribute(java.lang.String)>
<android.os.Binder: int getCallingPid()>
<android.transition.Transition: android.transition.Transition clone()>
<android.view.ViewGroup: android.view.View findViewWithTagTraversal(java.lang.Object)>
<android.mtp.MtpObjectInfo: int getImagePixDepth()>
<android.widget.RemoteViews: void setTextViewCompoundDrawablesRelative(int,int,int,int,int)>
<android.hardware.display.DisplayManagerInternal.DisplayPowerRequest: int hashCode()>
<android.bluetooth.IBluetoothHeadset: boolean connectAudio()>
<android.filterfw.core.FilterGraph: android.filterfw.core.Filter getFilter(java.lang.String)>
<android.os.UserManager: void setUserRestrictions(android.os.Bundle,android.os.UserHandle)>
<com.android.internal.util.TypedProperties: java.lang.String getString(java.lang.String,java.lang.String)>
<android.print.PrintAttributes: int describeContents()>
<android.webkit.Plugin: void dispatchClickEvent(android.content.Context)>
<android.view.ViewParent: boolean canResolveTextDirection()>
<android.graphics.RectF: boolean isEmpty()>
<android.view.inputmethod.InputConnection: boolean sendKeyEvent(android.view.KeyEvent)>
<android.content.ClipboardManager: void <init>(android.content.Context,android.os.Handler)>
<android.net.ConnectivityManager: android.net.LinkProperties getActiveLinkProperties()>
<android.telecom.InCallService.VideoCall.Listener: void onCallSessionEvent(int)>
<android.app.ActivityThread: android.app.LoadedApk getPackageInfo(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,int)>
<android.media.SoundPool: void setPriority(int,int)>
<android.net.NetworkFactory: void log(java.lang.String)>
<android.provider.SyncStateContract.Helpers: void set(android.content.ContentProviderClient,android.net.Uri,android.accounts.Account,byte[])>
<android.os.Parcel: void readStringList(java.util.List)>
<android.app.job.JobInfo: android.os.PersistableBundle getExtras()>
<android.os.Debug: void startMethodTracingSampling(java.lang.String,int,int)>
<android.app.ActivityManagerProxy: int startVoiceActivity(java.lang.String,int,int,android.content.Intent,java.lang.String,android.service.voice.IVoiceInteractionSession,com.android.internal.app.IVoiceInteractor,int,android.app.ProfilerInfo,android.os.Bundle,int)>
<android.widget.ProgressBar: int getProgress()>
<android.app.admin.DevicePolicyManager: void setPasswordMinimumLetters(android.content.ComponentName,int)>
<android.net.NetworkFactory: void <init>(android.os.Looper,android.content.Context,java.lang.String,android.net.NetworkCapabilities)>
<android.renderscript.Double3: void mul(android.renderscript.Double3)>
<android.os.RemoteCallbackList: boolean register(android.os.IInterface)>
<android.preference.SeekBarPreference: void onProgressChanged(android.widget.SeekBar,int,boolean)>
<android.mtp.MtpStorageInfo: long getMaxCapacity()>
<android.transition.ChangeBounds: android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)>
<android.hardware.hdmi.HdmiTvClient.HdmiMhlVendorCommandListener: void onReceived(int,int,int,byte[])>
<android.app.Service: void stopSelf()>
<android.opengl.GLSurfaceView.EGLConfigChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay)>
<android.webkit.Plugin: java.lang.String getDescription()>
<android.gesture.GestureUtils: float[] temporalSampling(android.gesture.GestureStroke,int)>
<android.accessibilityservice.IAccessibilityServiceClient: void onInterrupt()>
<android.app.ActivityManager.RunningAppProcessInfo: void readFromParcel(android.os.Parcel)>
<android.net.IEthernetManager: void setConfiguration(android.net.IpConfiguration)>
<android.content.CursorEntityIterator: void remove()>
<android.graphics.NinePatch: int getDensity()>
<android.widget.TableLayout: android.widget.LinearLayout.LayoutParams generateDefaultLayoutParams()>
<android.media.AudioDevice: boolean isOutputDevice()>
<android.content.DefaultDataHandler: void characters(char[],int,int)>
<android.content.ContentResolver: android.content.ContentProviderClient acquireUnstableContentProviderClient(android.net.Uri)>
<com.android.internal.telephony.IMms: void sendStoredMessage(long,java.lang.String,android.net.Uri,android.os.Bundle,android.app.PendingIntent)>
<com.android.internal.util.XmlUtils: void writeStringAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,java.lang.String)>
<android.content.AsyncTaskLoader: java.lang.Object onLoadInBackground()>
<android.widget.ActivityChooserView: void setExpandActivityOverflowButtonContentDescription(int)>
<com.android.internal.telephony.IWapPushManager: int processMessage(java.lang.String,java.lang.String,android.content.Intent)>
<android.app.ApplicationThreadProxy: void scheduleSleeping(android.os.IBinder,boolean)>
<android.app.IActivityManager: void noteWakeupAlarm(android.content.IIntentSender,int,java.lang.String)>
<android.app.AlarmManager: void setTimeZone(java.lang.String)>
<android.view.ViewTreeObserver.OnComputeInternalInsetsListener: void onComputeInternalInsets(android.view.ViewTreeObserver.InternalInsetsInfo)>
<android.hardware.hdmi.HdmiRecordListener: void onOneTouchRecordResult(int)>
<android.telecom.InCallService.VideoCall: void sendSessionModifyRequest(android.telecom.VideoProfile)>
<android.webkit.WebViewProvider.ViewDelegate: void setScrollBarStyle(int)>
<android.hardware.camera2.impl.CameraDeviceImpl: void flush()>
<android.view.accessibility.AccessibilityNodeInfo: void setLiveRegion(int)>
<com.android.internal.util.IState: boolean processMessage(android.os.Message)>
<com.android.internal.textservice.ITextServicesManager: boolean isSpellCheckerEnabled()>
<android.os.Bundle: byte getByte(java.lang.String)>
<android.provider.Settings.Secure: boolean isLocationProviderEnabledForUser(android.content.ContentResolver,java.lang.String,int)>
<android.opengl.GLES31Ext: void glSamplerParameterIivEXT(int,int,java.nio.IntBuffer)>
<android.media.AudioTrack: void <init>(int,int,int,int,int,int,int)>
<android.media.TtmlUtils: java.lang.String applyDefaultSpacePolicy(java.lang.String)>
<android.widget.GridLayout.LayoutParams: void setGravity(int)>
<android.app.ActivityManagerNative: android.app.IActivityManager asInterface(android.os.IBinder)>
<android.app.DialogFragment: void onActivityCreated(android.os.Bundle)>
<android.os.WorkSource: void clear()>
<com.android.internal.preference.YesNoPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.internal.util.IState: java.lang.String getName()>
<android.renderscript.Float2: void negate()>
<com.android.internal.app.AlertController: void setView(android.view.View,int,int,int,int)>
<android.media.tv.TvInputManager.SessionCallback: void onContentBlocked(android.media.tv.TvInputManager.Session,android.media.tv.TvContentRating)>
<android.app.job.IJobService: void startJob(android.app.job.JobParameters)>
<android.content.ContentValues: void put(java.lang.String,java.lang.Float)>
<android.widget.SearchView.OnSuggestionListener: boolean onSuggestionSelect(int)>
<android.telecom.RemoteConnection.VideoProvider: void setZoom(float)>
<android.inputmethodservice.InputMethodService: void setInputView(android.view.View)>
<android.widget.ListView: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>
<android.widget.TextView: float getRightFadingEdgeStrength()>
<android.bluetooth.BluetoothA2dpSink: java.util.List getConnectedDevices()>
<android.media.browse.MediaBrowser.MediaItem: void <init>(android.media.MediaDescription,int)>
<android.renderscript.Allocation: void copy3DRangeFrom(int,int,int,int,int,int,java.lang.Object)>
<android.location.GpsClock: java.lang.String toString()>
<android.telephony.PreciseCallState: int describeContents()>
<android.widget.TabHost: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.telecom.Log: void wtf(java.lang.Object,java.lang.Throwable,java.lang.String,java.lang.Object[])>
<android.content.Intent: java.lang.CharSequence[] getCharSequenceArrayExtra(java.lang.String)>
<android.widget.PopupWindow: void <init>(android.view.View,int,int)>
<android.app.backup.FileBackupHelper: void <init>(android.content.Context,java.lang.String[])>
<android.net.NetworkStateTracker: void startMonitoring(android.content.Context,android.os.Handler)>
<android.nfc.tech.Ndef: int getMaxSize()>
<android.graphics.Typeface: android.graphics.Typeface createFromFile(java.lang.String)>
<android.widget.ViewAnimator: void showPrevious()>
<android.graphics.Canvas: boolean quickReject(android.graphics.RectF,android.graphics.Canvas.EdgeType)>
<android.content.IntentFilter: android.os.PatternMatcher getDataSchemeSpecificPart(int)>
<android.content.ContextWrapper: java.io.File[] getExternalMediaDirs()>
<android.net.IConnectivityManager: int findConnectionTypeForIface(java.lang.String)>
<android.os.TokenWatcher: void release(android.os.IBinder)>
<android.view.View.AccessibilityDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>
<android.widget.ActivityChooserView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.app.AlarmManager.AlarmClockInfo: void writeToParcel(android.os.Parcel,int)>
<android.widget.CursorTreeAdapter: long getChildId(int,int)>
<android.print.PrintFileDocumentAdapter: void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter.WriteResultCallback)>
<android.media.TtmlUtils: java.lang.String extractTtmlFragment(android.media.TtmlNode,long,long)>
<android.util.JsonWriter: android.util.JsonWriter nullValue()>
<android.inputmethodservice.KeyboardView: void swipeLeft()>
<android.location.FusedBatchOptions: double getMaxPowerAllocationInMW()>
<android.animation.ValueAnimator: android.animation.ValueAnimator ofInt(int[])>
<android.net.VpnService: void onRevoke()>
<android.widget.ActivityChooserModel: void setActivitySorter(android.widget.ActivityChooserModel.ActivitySorter)>
<android.print.PrintAttributes.Resolution: int hashCode()>
<android.content.IntentFilter: int countDataSchemeSpecificParts()>
<com.android.internal.database.SortCursor: short getShort(int)>
<android.filterpacks.imageproc.NegativeFilter: void setupPorts()>
<android.widget.CursorAdapter: void changeCursor(android.database.Cursor)>
<android.os.Handler: boolean hasCallbacks(java.lang.Runnable)>
<com.android.internal.policy.IKeyguardService: void onScreenTurnedOn(com.android.internal.policy.IKeyguardShowCallback)>
<android.bluetooth.IBluetoothGatt: void flushPendingBatchResults(int,boolean)>
<android.print.PrintJob: void cancel()>
<android.preference.PreferenceManager: void registerOnActivityStopListener(android.preference.PreferenceManager.OnActivityStopListener)>
<android.provider.DocumentsContract: android.net.Uri createDocument(android.content.ContentProviderClient,android.net.Uri,java.lang.String,java.lang.String)>
<android.media.MediaScannerConnection.MediaScannerConnectionClient: void onScanCompleted(java.lang.String,android.net.Uri)>
<android.os.HandlerThread: boolean quitSafely()>
<android.opengl.GLES30: java.lang.String glGetActiveUniformBlockName(int,int)>
<android.widget.TextView: boolean onKeyPreIme(int,android.view.KeyEvent)>
<com.android.internal.telephony.ISub: void setDefaultDataSubId(long)>
<android.content.pm.ParceledListSlice: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.view.BaseSurfaceHolder: android.view.Surface getSurface()>
<android.database.sqlite.SQLiteCursor: boolean onMove(int,int)>
<android.graphics.Paint: android.graphics.Typeface getTypeface()>
<android.app.IUiModeManager: void enableCarMode(int)>
<android.media.AudioPortConfig: android.media.AudioPort port()>
<android.os.Process.ZygoteState: android.os.Process.ZygoteState connect(java.lang.String)>
<android.os.AsyncTask: java.lang.Object doInBackground(java.lang.Object[])>
<android.opengl.GLSurfaceView: void onResume()>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setMultiChoiceItems(java.lang.CharSequence[],boolean[],android.content.DialogInterface.OnMultiChoiceClickListener)>
<android.print.PrintJobInfo: java.lang.String getLabel()>
<android.app.Fragment: void onTrimMemory(int)>
<com.android.internal.app.ProcessStats.ProcessStateHolder: void <init>(int)>
<android.net.wifi.WifiManager.MulticastLock: void setReferenceCounted(boolean)>
<android.net.wifi.RttManager.ParcelableRttResults: int describeContents()>
<android.net.NetworkInfo: boolean isRoaming()>
<android.bluetooth.BluetoothHealth: boolean registerSinkAppConfiguration(java.lang.String,int,android.bluetooth.BluetoothHealthCallback)>
<com.android.ims.internal.IImsCallSession: void start(java.lang.String,com.android.ims.ImsCallProfile)>
<android.media.audiofx.AudioEffect: int getParameter(int,short[])>
<android.hardware.camera2.legacy.ParameterUtils: int getClosestAvailableZoomCrop(android.hardware.Camera.Parameters,android.graphics.Rect,android.util.Size,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>
<android.view.ViewParent: void childDrawableStateChanged(android.view.View)>
<android.app.Notification.WearableExtender: java.util.List getPages()>
<android.view.MotionEvent: float getHistoricalTouchMinor(int)>
<android.widget.Gallery: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.bluetooth.BluetoothHeadset: boolean startScoUsingVirtualVoiceCall(android.bluetooth.BluetoothDevice)>
<android.media.MediaCodecInfo.VideoCapabilities: boolean isSizeSupported(int,int)>
<com.android.ims.internal.IImsCallSessionListener: void callSessionConferenceExtended(com.android.ims.internal.IImsCallSession,com.android.ims.internal.IImsCallSession,com.android.ims.ImsCallProfile)>
<android.gesture.GestureStore: java.util.ArrayList recognize(android.gesture.Gesture)>
<android.os.Parcel: java.lang.String[] createStringArray()>
<android.print.PrinterCapabilitiesInfo.Builder: android.print.PrinterCapabilitiesInfo build()>
<android.os.storage.IMountService: int getPasswordType()>
<com.android.internal.os.TransferPipe: android.os.ParcelFileDescriptor getWriteFd()>
<android.view.Window: void setAllowReturnTransitionOverlap(boolean)>
<android.view.ViewRootImpl: void dispatchCheckFocus()>
<android.view.View: int getId()>
<android.content.AsyncTaskLoader: void setUpdateThrottle(long)>
<android.hardware.camera2.impl.CameraMetadataNative: int nativeSetupGlobalVendorTagDescriptor()>
<android.location.GpsMeasurement: void resetTimeFromLastBitInMs()>
<android.hardware.camera2.legacy.GLThreadManager: void allowNewFrames()>
<android.renderscript.Script.FieldBase: void updateAllocation()>
<android.view.ViewConfiguration: long getSendRecurringAccessibilityEventsInterval()>
<android.widget.AbsListView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.filterfw.core.Frame: void assertFrameMutable()>
<android.view.inputmethod.InputMethodInfo: void <init>(android.content.pm.ResolveInfo,boolean,java.lang.String,java.util.List,int,boolean,boolean)>
<android.renderscript.Long2: void mul(android.renderscript.Long2)>
<android.hardware.Camera.Parameters: java.lang.String getColorEffect()>
<com.android.internal.view.menu.MenuPopupHelper: android.widget.ListPopupWindow getPopup()>
<android.media.effect.FilterEffect: void beginGLEffect()>
<android.media.AudioManager: int getOutputLatency(int)>
<android.graphics.Canvas: void insertReorderBarrier()>
<android.bluetooth.IBluetooth: int getPhonebookAccessPermission(android.bluetooth.BluetoothDevice)>
<android.renderscript.Allocation: android.renderscript.Allocation createCubemapFromBitmap(android.renderscript.RenderScript,android.graphics.Bitmap)>
<android.preference.SeekBarPreference: android.os.Parcelable onSaveInstanceState()>
<com.android.internal.statusbar.StatusBarIconList: void copyFrom(com.android.internal.statusbar.StatusBarIconList)>
<com.android.server.net.BaseNetworkObserver: void limitReached(java.lang.String,java.lang.String)>
<android.widget.HorizontalScrollView: float getLeftFadingEdgeStrength()>
<android.net.MobileDataStateTracker: void stopSampling(android.net.SamplingDataTracker.SamplingSnapshot)>
<android.app.DialogFragment: void setShowsDialog(boolean)>
<android.text.format.DateUtils: java.lang.String getMonthString(int,int)>
<android.widget.SimpleAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>
<android.widget.AdapterView: android.widget.Adapter getAdapter()>
<android.telecom.ParcelableConnection: android.net.Uri getHandle()>
<com.google.android.util.AbstractMessageParser.Token: java.lang.String getRawText()>
<android.view.Window: android.view.WindowManager getWindowManager()>
<android.os.TokenWatcher: void dump()>
<android.media.AudioRecord: int getSampleRate()>
<android.graphics.Interpolator: android.graphics.Interpolator.Result timeToValues(float[])>
<android.appwidget.AppWidgetHost: void clearViews()>
<android.view.ViewPropertyAnimator: void cancel()>
<android.os.PowerManager: void <init>(android.content.Context,android.os.IPowerManager,android.os.Handler)>
<android.media.AudioService: java.lang.String streamToString(int)>
<android.view.View.AccessibilityDelegate: void sendAccessibilityEvent(android.view.View,int)>
<android.inputmethodservice.KeyboardView: void onSizeChanged(int,int,int,int)>
<android.app.ActivityThread: void handleInstallProvider(android.content.pm.ProviderInfo)>
<com.android.internal.view.menu.MenuPopupHelper: int getId()>
<android.widget.TextView: void hideErrorIfUnchanged()>
<android.widget.AdapterViewAnimator: void setAdapter(android.widget.Adapter)>
<android.view.WindowManagerPolicy: void userActivity()>
<android.accounts.IAccountManager: void editProperties(android.accounts.IAccountManagerResponse,java.lang.String,boolean)>
<android.net.ProxyInfo: android.net.ProxyInfo buildDirectProxy(java.lang.String,int,java.util.List)>
<android.os.Debug: int getGlobalExternalFreedCount()>
<android.net.DhcpResults: void clear()>
<android.widget.SearchView: void setMaxWidth(int)>
<android.media.tv.TvContentRating: android.media.tv.TvContentRating unflattenFromString(java.lang.String)>
<android.telephony.VoLteServiceState: void copyFrom(android.telephony.VoLteServiceState)>
<android.view.animation.LinearInterpolator: long createNativeInterpolator()>
<android.hardware.Camera.Parameters: android.hardware.Camera.Size getPreviewSize()>
<android.media.MediaRouter.RouteInfo: void requestUpdateVolume(int)>
<android.view.Window.Callback: boolean onPreparePanel(int,android.view.View,android.view.Menu)>
<android.graphics.Point: boolean equals(int,int)>
<android.os.Handler: void removeMessages(int)>
<android.content.UndoManager: int commitState(android.content.UndoOwner)>
<android.view.textservice.SpellCheckerSession: android.view.textservice.SpellCheckerInfo getSpellChecker()>
<android.widget.AbsSpinner: int getCount()>
<android.accounts.IAccountManager: java.lang.String getPreviousName(android.accounts.Account)>
<android.os.IPermissionController: boolean checkPermission(java.lang.String,int,int)>
<android.telecom.ParcelableConference: void <init>(android.telecom.PhoneAccountHandle,int,int,java.util.List)>
<android.preference.Preference: boolean persistInt(int)>
<android.graphics.BitmapRegionDecoder: android.graphics.BitmapRegionDecoder newInstance(java.io.InputStream,boolean)>
<android.view.ViewGroup.MarginLayoutParams: void <init>(int,int)>
<android.widget.DatePickerController: void unregisterOnDateChangedListener(android.widget.OnDateChangedListener)>
<android.opengl.Matrix: void setIdentityM(float[],int)>
<android.renderscript.Double4: void sub(android.renderscript.Double4)>
<android.nfc.cardemulation.ApduServiceInfo: android.graphics.drawable.Drawable loadBanner(android.content.pm.PackageManager)>
<android.view.WindowManagerPolicy: int focusChangedLw(android.view.WindowManagerPolicy.WindowState,android.view.WindowManagerPolicy.WindowState)>
<com.android.internal.view.InputConnectionWrapper: java.lang.CharSequence getTextAfterCursor(int,int)>
<android.telephony.CellSignalStrengthCdma: void setEvdoSnr(int)>
<com.android.internal.telephony.ISms: boolean enableCellBroadcastRangeForSubscriber(long,int,int)>
<android.text.style.TtsSpan.TelephoneBuilder: android.text.style.TtsSpan.TelephoneBuilder setNumberParts(java.lang.String)>
<android.animation.Keyframe: android.animation.Keyframe ofInt(float,int)>
<android.view.accessibility.AccessibilityNodeInfo: int getTextSelectionEnd()>
<android.media.ClosedCaptionTrack: android.media.SubtitleTrack.RenderingWidget getRenderingWidget()>
<android.hardware.camera2.params.HighSpeedVideoConfiguration: int getHeight()>
<android.filterfw.core.FilterFunction: android.filterfw.core.Frame execute(android.filterfw.core.KeyValueMap)>
<android.view.View: void setNextFocusDownId(int)>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: void setConstantSize(boolean)>
<android.content.res.CompatibilityInfo.Translator: android.graphics.Region getTranslatedTouchableArea(android.graphics.Region)>
<android.app.backup.IBackupManager: void setBackupEnabled(boolean)>
<android.app.Fragment: void onDetach()>
<android.net.SSLCertificateSocketFactory: void setKeyManagers(javax.net.ssl.KeyManager[])>
<android.renderscript.Int2: void add(android.renderscript.Int2)>
<android.service.dreams.DreamService: void dumpOnHandler(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.os.BatteryStats: android.util.SparseArray getUidStats()>
<android.filterpacks.imageproc.BlackWhiteFilter: void initProgram(android.filterfw.core.FilterContext,int)>
<android.graphics.drawable.RippleDrawable: void jumpToCurrentState()>
<android.util.JsonReader: android.util.JsonToken peek()>
<android.view.accessibility.AccessibilityNodeInfo.RangeInfo: float getCurrent()>
<android.location.SettingInjectorService: int onStartCommand(android.content.Intent,int,int)>
<android.os.storage.IObbActionListener: void onObbResult(java.lang.String,int,int)>
<com.android.internal.view.menu.MenuBuilder: void clear()>
<android.view.RenderNode: void output()>
<com.android.internal.policy.IKeyguardService: void launchCamera()>
<android.content.IRestrictionsManager: boolean hasRestrictionsProvider()>
<android.view.LayoutInflater: void <init>(android.view.LayoutInflater,android.content.Context)>
<android.os.UserHandle: int getIdentifier()>
<android.hardware.camera2.utils.TaskDrainer: void beginDrain()>
<android.util.TimedRemoteCaller: void onRemoteMethodResult(java.lang.Object,int)>
<android.widget.MediaController.MediaPlayerControl: boolean isPlaying()>
<android.graphics.BitmapShader: void <init>(android.graphics.Bitmap,android.graphics.Shader.TileMode,android.graphics.Shader.TileMode)>
<android.content.pm.LauncherActivityInfo: android.graphics.drawable.Drawable getIcon(int)>
<com.android.internal.util.StateMachine: android.os.Message obtainMessage(int,int,int)>
<com.android.internal.widget.SubtitleView: void setStyle(int)>
<android.filterfw.core.CachedFrameManager: android.filterfw.core.Frame newFrame(android.filterfw.core.FrameFormat)>
<android.net.StaticIpConfiguration: java.util.List getRoutes(java.lang.String)>
<android.content.pm.PackageInstaller.Session: java.io.InputStream openRead(java.lang.String)>
<android.view.VelocityTracker.Estimator: float estimateX(float)>
<android.opengl.GLES10: void glLightModelxv(int,java.nio.IntBuffer)>
<com.android.internal.view.menu.ActionMenuItem: com.android.internal.view.menu.ActionMenuItem setExclusiveCheckable(boolean)>
<android.hardware.ICameraServiceListener: void onStatusChanged(int,int)>
<android.graphics.drawable.RotateDrawable: void setDrawable(android.graphics.drawable.Drawable)>
<android.widget.Toolbar: void setNavigationIcon(int)>
<android.view.View: boolean performHapticFeedback(int,int)>
<com.android.internal.telephony.IMms: void downloadMessage(long,java.lang.String,java.lang.String,android.net.Uri,android.os.Bundle,android.app.PendingIntent)>
<android.os.Message: android.os.Bundle getData()>
<android.app.MediaRouteActionProvider: boolean isVisible()>
<android.security.IKeyChainService: void installCaCertificate(byte[])>
<android.widget.NumberPicker: android.widget.NumberPicker.Formatter getTwoDigitFormatter()>
<android.view.IInputFilterHost: void sendInputEvent(android.view.InputEvent,int)>
<android.media.MediaPlayer: void setSurface(android.view.Surface)>
<android.graphics.Canvas: void drawBitmap(int[],int,int,int,int,int,int,boolean,android.graphics.Paint)>
<android.widget.TextView: boolean isTextSelectable()>
<android.hardware.usb.UsbAccessory: java.lang.String getVersion()>
<com.android.internal.os.BatteryStatsHelper: android.os.BatteryStats statsFromFile(android.content.Context,java.lang.String)>
<android.app.admin.DevicePolicyManager: int enableSystemApp(android.content.ComponentName,android.content.Intent)>
<android.preference.EditTextPreference: java.lang.String getText()>
<android.util.TypedValue: float getFloat()>
<android.net.WebAddress: java.lang.String getPath()>
<android.app.ActionBar.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<android.text.method.BaseMovementMethod: boolean down(android.widget.TextView,android.text.Spannable)>
<android.media.SoundPool: void autoPause()>
<android.provider.Settings.Secure: boolean putInt(android.content.ContentResolver,java.lang.String,int)>
<android.print.IPrintManager: void cancelPrintJob(android.print.PrintJobId,int,int)>
<android.os.Environment.UserEnvironment: java.io.File[] buildExternalStorageAppMediaDirsForVold(java.lang.String)>
<android.app.ApplicationErrorReport: void readFromParcel(android.os.Parcel)>
<com.android.internal.app.ProcessStats.ServiceState: void applyNewOwner(java.lang.Object)>
<android.app.ApplicationThreadProxy: void scheduleDestroyActivity(android.os.IBinder,boolean,int)>
<android.graphics.Matrix: java.lang.String toString()>
<android.content.ClipData.Item: java.lang.CharSequence coerceToStyledText(android.content.Context)>
<android.filterpacks.videosrc.CameraSource: android.hardware.Camera.Parameters getCameraParameters()>
<android.filterfw.core.FilterPort: boolean isOpen()>
<android.os.IUserManager: java.util.List getUsers(boolean)>
<android.media.tv.ITvInputManager: void selectTrack(android.os.IBinder,int,java.lang.String,int)>
<android.drm.DrmManagerClient: int checkRightsStatus(java.lang.String,int)>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildUnionQuery(java.lang.String[],java.lang.String,java.lang.String)>
<android.app.ActivityManagerProxy: boolean switchUser(int)>
<android.view.KeyEvent: void setSource(int)>
<android.provider.SearchRecentSuggestions: void clearHistory()>
<android.text.method.HideReturnsTransformationMethod: char[] getOriginal()>
<android.os.Binder: void setDumpDisabled(java.lang.String)>
<android.widget.SearchView: void setIconified(boolean)>
<android.net.wifi.p2p.WifiP2pGroup: void <init>(java.lang.String)>
<android.app.admin.DeviceAdminInfo: void writePoliciesToXml(org.xmlpull.v1.XmlSerializer)>
<android.app.DownloadManager: void <init>(android.content.ContentResolver,java.lang.String)>
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase.CursorFactory,int,android.database.DatabaseErrorHandler)>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder valueOf(java.lang.CharSequence)>
<android.view.WindowManagerPolicy.WindowManagerFuncs: int getLidState()>
<android.filterpacks.videosrc.CameraSource: void close(android.filterfw.core.FilterContext)>
<android.renderscript.FileA3D: android.renderscript.FileA3D createFromAsset(android.renderscript.RenderScript,android.content.res.AssetManager,java.lang.String)>
<android.app.admin.DeviceAdminInfo: int describeContents()>
<android.view.InputEvent: int getDeviceId()>
<android.content.IntentSender: java.lang.String toString()>
<android.app.WallpaperInfo: void dump(android.util.Printer,java.lang.String)>
<android.media.session.ISessionController: void play()>
<android.app.Instrumentation: android.app.Activity newActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent)>
<android.telecom.RemoteConference: android.telecom.DisconnectCause getDisconnectCause()>
<com.android.internal.view.menu.ActionMenu: void close()>
<com.android.internal.app.ExternalMediaFormatActivity: void onPause()>
<android.content.DefaultDataHandler: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>
<android.content.RestrictionEntry: void setTitle(java.lang.String)>
<android.view.accessibility.AccessibilityNodeInfo: void setCollectionInfo(android.view.accessibility.AccessibilityNodeInfo.CollectionInfo)>
<android.view.View: void invalidateDrawable(android.graphics.drawable.Drawable)>
<android.graphics.RectF: boolean contains(float,float)>
<android.os.IPowerManager: void goToSleep(long,int,int)>
<android.provider.MediaStore.Audio.Genres: android.net.Uri getContentUri(java.lang.String)>
<android.preference.PreferenceActivity: android.preference.PreferenceScreen getPreferenceScreen()>
<android.view.ViewParent: android.view.ViewParent getParentForAccessibility()>
<android.hardware.camera2.marshal.Marshaler: void <init>(android.hardware.camera2.marshal.MarshalQueryable,android.hardware.camera2.utils.TypeReference,int)>
<android.opengl.EGL14: java.lang.String eglQueryString(android.opengl.EGLDisplay,int)>
<android.database.CursorToBulkCursorAdaptor: void onMove(int)>
<android.webkit.WebView.PrivateAccess: boolean super_performAccessibilityAction(int,android.os.Bundle)>
<android.util.AttributeSet: int getAttributeUnsignedIntValue(java.lang.String,java.lang.String,int)>
<android.print.PageRange: int hashCode()>
<android.speech.tts.TextToSpeech: java.lang.String getCurrentEngine()>
<android.content.ContentProvider: void onLowMemory()>
<android.os.BaseBundle: void putAll(android.os.PersistableBundle)>
<android.graphics.Canvas: void drawPicture(android.graphics.Picture)>
<android.animation.Animator: java.util.ArrayList getListeners()>
<com.google.android.util.AbstractMessageParser.TrieNode: void <init>(java.lang.String)>
<android.media.IRemoteControlDisplay: void setCurrentClientId(int,android.app.PendingIntent,boolean)>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getEnterFadeDuration()>
<android.app.DownloadManager: long addCompletedDownload(java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,long,boolean,boolean)>
<android.hardware.location.IGeofenceHardware: boolean removeGeofence(int,int)>
<android.media.AudioAttributes: java.lang.String toString()>
<android.filterpacks.videosrc.CameraSource: void process(android.filterfw.core.FilterContext)>
<android.content.res.Resources: android.content.res.TypedArray obtainTypedArray(int)>
<android.widget.TextView: void setMinWidth(int)>
<android.opengl.GLES30: void glGenSamplers(int,int[],int)>
<android.location.GpsClock: void set(android.location.GpsClock)>
<android.filterpacks.imageproc.DocumentaryFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<android.inputmethodservice.SoftInputWindow.Callback: void onBackPressed()>
<android.app.IActivityManager: boolean isInHomeStack(int)>
<android.opengl.GLES30: void glVertexAttribIPointer(int,int,int,int,java.nio.Buffer)>
<android.telecom.Log: void i(java.lang.String,java.lang.String,java.lang.Object[])>
<android.hardware.input.InputManagerInternal: void setInteractive(boolean)>
<android.hardware.Camera: boolean disableShutterSound()>
<android.net.wifi.IWifiManager: void reconnect()>
<android.media.IRemoteDisplayProvider: void setDiscoveryMode(int)>
<com.android.ims.internal.IImsUtListener: void utConfigurationCallWaitingQueried(com.android.ims.internal.IImsUt,int,com.android.ims.ImsSsInfo[])>
<android.filterpacks.imageproc.RotateFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>
<android.content.IContentService: void unregisterContentObserver(android.database.IContentObserver)>
<android.widget.AbsListView: void requestDisallowInterceptTouchEvent(boolean)>
<android.renderscript.Type: android.renderscript.Type createXYZ(android.renderscript.RenderScript,android.renderscript.Element,int,int,int)>
<com.android.internal.widget.WeightedLinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<android.graphics.drawable.BitmapDrawable: void setTargetDensity(int)>
<android.filterfw.format.PrimitiveFormat: android.filterfw.core.MutableFrameFormat createInt16Format(int,int)>
<android.net.wifi.WifiManager.ActionListener: void onSuccess()>
<android.content.ClipDescription: boolean compareMimeTypes(java.lang.String,java.lang.String)>
<android.hardware.location.GeofenceHardwareImpl: void reportGeofenceRemoveStatus(int,int)>
<android.view.View: int getWindowSystemUiVisibility()>
<android.text.style.TypefaceSpan: void writeToParcel(android.os.Parcel,int)>
<android.media.JetPlayer.OnJetEventListener: void onJetNumQueuedSegmentUpdate(android.media.JetPlayer,int)>
<android.view.RenderNodeAnimator: void setStartDelay(long)>
<android.opengl.EGL14: boolean eglSwapBuffers(android.opengl.EGLDisplay,android.opengl.EGLSurface)>
<android.nfc.NfcAdapter: void setNdefPushMessage(android.nfc.NdefMessage,android.app.Activity,android.app.Activity[])>
<android.view.View.OnAttachStateChangeListener: void onViewDetachedFromWindow(android.view.View)>
<android.media.AudioService: void unloadSoundEffects()>
<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket()>
<android.opengl.GLES11Ext: void glPointParameterxvOES(int,int[],int)>
<android.security.KeyPairGeneratorSpec: boolean isEncryptionRequired()>
<android.content.pm.ComponentInfo: int getIconResource()>
<android.content.AsyncQueryHandler: void cancelOperation(int)>
<android.view.View: boolean onTouchEvent(android.view.MotionEvent)>
<android.hardware.Sensor: int getReportingMode()>
<android.app.ActivityOptions: android.app.ActivityOptions forTargetActivity()>
<android.nfc.NfcActivityManager: void onTagDiscovered(android.nfc.Tag)>
<android.os.IBatteryPropertiesListener: void batteryPropertiesChanged(android.os.BatteryProperties)>
<android.widget.ImageSwitcher: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.widget.TabHost: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.app.Dialog: void onActionModeStarted(android.view.ActionMode)>
<android.media.MediaCodecInfo.AudioCapabilities: android.util.Range[] getSupportedSampleRateRanges()>
<android.widget.TableLayout: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.util.LongSparseLongArray: void delete(long)>
<android.app.ActivityManagerProxy: void registerUserSwitchObserver(android.app.IUserSwitchObserver)>
<android.preference.PreferenceScreen: android.widget.ListAdapter getRootAdapter()>
<android.view.ActionMode: android.view.Menu getMenu()>
<android.opengl.GLES11Ext: void glFramebufferTexture2DOES(int,int,int,int,int)>
<com.android.internal.os.BatteryStatsImpl.BatchTimer: void addDuration(com.android.internal.os.BatteryStatsImpl,long)>
<android.os.BatteryStats.BitDescription: void <init>(int,int,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>
<android.media.MediaDrm.CertificateRequest: java.lang.String getDefaultUrl()>
<com.google.android.gles_jni.GLImpl: void glMultMatrixf(float[],int)>
<android.preference.PreferenceActivity.Header: int describeContents()>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator y(float)>
<android.net.SamplingDataTracker: void setCommonLinkQualityInfoFields(android.net.LinkQualityInfo)>
<android.widget.ListPopupWindow.ForwardingListener: android.widget.ListPopupWindow getPopup()>
<android.text.DynamicLayout: int getLineTop(int)>
<android.view.ViewConfiguration: int getWindowTouchSlop()>
<android.view.IWindow: void executeCommand(java.lang.String,java.lang.String,android.os.ParcelFileDescriptor)>
<android.filterfw.core.Frame: void setData(java.nio.ByteBuffer,int,int)>
<android.net.http.HttpAuthHeader: boolean isDigest()>
<com.google.android.util.AbstractMessageParser.Token: boolean isArray()>
<android.widget.AdapterView: void addView(android.view.View,android.view.ViewGroup.LayoutParams)>
<android.telephony.CellSignalStrengthWcdma: void writeToParcel(android.os.Parcel,int)>
<android.content.IntentFilter.AuthorityEntry: boolean match(android.content.IntentFilter.AuthorityEntry)>
<android.media.session.MediaSessionManager: void dispatchMediaKeyEvent(android.view.KeyEvent)>
<android.net.ConnectivityManager: void registerNetworkFactory(android.os.Messenger,java.lang.String)>
<android.media.tv.TvInputManager: void setParentalControlsEnabled(boolean)>
<android.webkit.FindActionModeCallback: void <init>(android.content.Context)>
<android.view.accessibility.AccessibilityNodeInfo: void setLongClickable(boolean)>
<android.opengl.GLSurfaceView: void surfaceChanged(android.view.SurfaceHolder,int,int,int)>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator withStartAction(java.lang.Runnable)>
<com.android.internal.view.menu.MenuBuilder: boolean performIdentifierAction(int,int)>
<android.app.LauncherActivity: java.util.List makeListItems()>
<android.opengl.GLES10: void glPushMatrix()>
<android.text.Editable: android.text.Editable insert(int,java.lang.CharSequence)>
<android.text.style.DrawableMarginSpan: int getLeadingMargin(boolean)>
<android.webkit.WebView: void onWindowFocusChanged(boolean)>
<android.widget.MediaController: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.widget.SeekBar: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.content.Intent: java.util.ArrayList getIntegerArrayListExtra(java.lang.String)>
<android.app.Application.ActivityLifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)>
<android.telephony.PreciseCallState: int getDisconnectCause()>
<com.google.android.gles_jni.EGLImpl: javax.microedition.khronos.egl.EGLSurface eglCreatePixmapSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object,int[])>
<android.os.storage.StorageVolume: java.lang.String getUuid()>
<android.renderscript.Int3: android.renderscript.Int3 div(android.renderscript.Int3,int)>
<android.speech.tts.SynthesisCallback: int done()>
<com.android.internal.app.RestrictionsPinActivity: void onTextChanged(java.lang.CharSequence,int,int,int)>
<android.net.wifi.WifiManager: void getTxPacketCount(android.net.wifi.WifiManager.TxPacketCountListener)>
<android.os.UserManager: void <init>(android.content.Context,android.os.IUserManager)>
<android.telecom.ParcelableConnection: int getCapabilities()>
<android.view.animation.RotateAnimation: void applyTransformation(float,android.view.animation.Transformation)>
<com.android.internal.widget.LockPatternUtils: java.util.List getEnabledTrustAgents()>
<android.net.wifi.p2p.WifiP2pManager: void clearServiceRequests(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ActionListener)>
<android.printservice.PrintServiceInfo: java.lang.String getAdvancedOptionsActivityName()>
<com.android.internal.app.HeavyWeightSwitcherActivity: void onCreate(android.os.Bundle)>
<android.renderscript.Allocation: void copyFromUnchecked(java.lang.Object)>
<android.bluetooth.IBluetoothHeadsetPhone: boolean hangupCall()>
<android.app.PendingIntent: int describeContents()>
<android.net.wifi.WifiScanner.ChannelSpec: void <init>(int)>
<android.app.Notification.Action.WearableExtender: android.app.Notification.Action.WearableExtender setAvailableOffline(boolean)>
<com.android.internal.widget.DecorContentParent: void setUiOptions(int)>
<android.widget.TabHost: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.widget.AbsListView: void setVelocityScale(float)>
<android.content.IntentFilter: boolean hasDataSchemeSpecificPart(java.lang.String)>
<android.net.IConnectivityManager: android.net.LinkProperties getLinkPropertiesForType(int)>
<android.widget.AutoCompleteTextView: void setDropDownHeight(int)>
<android.filterfw.core.OutputPort: java.lang.String toString()>
<android.hardware.Camera.ErrorCallback: void onError(int,android.hardware.Camera)>
<android.speech.IRecognitionListener: void onPartialResults(android.os.Bundle)>
<android.widget.AdapterViewAnimator: void onRemoteAdapterDisconnected()>
<android.bluetooth.BluetoothHeadset: java.util.List getConnectedDevices()>
<android.animation.ObjectAnimator: void setupStartValues()>
<android.view.ViewRootImpl: int getLayoutDirection()>
<android.filterfw.io.PatternScanner: java.lang.String eat(java.util.regex.Pattern,java.lang.String)>
<android.view.MenuItem: boolean hasSubMenu()>
<android.net.TrafficStats: long getTotalTxPackets()>
<android.app.FragmentManager: void putFragment(android.os.Bundle,java.lang.String,android.app.Fragment)>
<com.android.internal.widget.LockPatternUtils: boolean isPermanentlyLocked()>
<android.app.ActivityManagerProxy: void showWaitingForDebugger(android.app.IApplicationThread,boolean)>
<android.view.PointerIcon: boolean isNullIcon()>
<android.graphics.drawable.InsetDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>
<android.renderscript.Allocation: android.renderscript.Allocation createSized(android.renderscript.RenderScript,android.renderscript.Element,int)>
<android.widget.AbsListView: void setRecyclerListener(android.widget.AbsListView.RecyclerListener)>
<android.os.Debug: void resetGlobalAllocSize()>
<android.preference.SeekBarPreference: void <init>(android.content.Context)>
<android.app.Fragment: boolean isVisible()>
<android.os.PowerManager.WakeLock: void release()>
<android.text.style.URLSpan: void <init>(android.os.Parcel)>
<android.content.SyncAdapterType: boolean allowParallelSyncs()>
<android.util.JsonReader: void close()>
<android.view.WindowManagerPolicy: int getMaxWallpaperLayer()>
<android.filterpacks.performance.ThroughputFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<android.net.LinkProperties: boolean isIdenticalAddresses(android.net.LinkProperties)>
<android.database.IBulkCursor: android.os.Bundle respond(android.os.Bundle)>
<android.os.Parcel: int readExceptionCode()>
<android.database.sqlite.SQLiteDatabase: int getVersion()>
<android.renderscript.Byte4: void negate()>
<android.content.pm.PackageItemInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>
<android.util.Xml: void parse(java.io.InputStream,android.util.Xml.Encoding,org.xml.sax.ContentHandler)>
<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>
<android.view.SurfaceHolder: void removeCallback(android.view.SurfaceHolder.Callback)>
<android.transition.Transition: android.transition.TransitionPropagation getPropagation()>
<android.app.ResourcesManager: android.util.DisplayMetrics getDisplayMetricsLocked(int,android.view.DisplayAdjustments)>
<com.android.internal.widget.PreferenceImageView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.AppWidgetBackupBridge: void restoreFinished(int)>
<android.view.View: int getNextFocusRightId()>
<android.opengl.GLES10: void glLoadIdentity()>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder detectAll()>
<android.telephony.TelephonyManager: java.lang.String getVoiceMailNumber()>
<android.renderscript.Float3: void add(float)>
<android.webkit.WebView: void onResume()>
<android.filterfw.core.GraphRunner: java.lang.Exception getError()>
<android.app.ActivityOptions: android.app.ActivityOptions makeSceneTransitionAnimation(android.app.Activity,android.util.Pair[])>
<android.opengl.GLES31: void glProgramUniform3fv(int,int,int,java.nio.FloatBuffer)>
<android.os.storage.IMountService: int[] getStorageUsers(java.lang.String)>
<com.android.internal.util.XmlUtils: void writeListXml(java.util.List,java.io.OutputStream)>
<android.view.inputmethod.InputMethodSubtype: void <init>(int,int,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,int)>
<android.text.method.ArrowKeyMovementMethod: boolean bottom(android.widget.TextView,android.text.Spannable)>
<android.app.IBackupAgent: void doRestoreFinished(int,android.app.backup.IBackupManager)>
<android.app.ActivityManagerProxy: void reportAssistContextExtras(android.os.IBinder,android.os.Bundle)>
<android.os.BatteryStats.Uid: long getFullWifiLockTime(long,int)>
<android.inputmethodservice.KeyboardView: void setVerticalCorrection(int)>
<android.preference.Preference.OnPreferenceClickListener: boolean onPreferenceClick(android.preference.Preference)>
<android.media.ExifInterface: byte[] getThumbnail()>
<android.net.http.HttpAuthHeader: boolean isBasic()>
<android.widget.ViewSwitcher: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>
<com.android.internal.util.TypedProperties: int getInt(java.lang.String)>
<com.android.internal.app.IVoiceInteractionManagerService: int stopRecognition(android.service.voice.IVoiceInteractionService,int,android.hardware.soundtrigger.IRecognitionStatusCallback)>
<android.os.PowerManager: void nap(long)>
<android.view.MotionEvent: void getPointerProperties(int,android.view.MotionEvent.PointerProperties)>
<android.text.style.ImageSpan: void <init>(android.content.Context,int)>
<android.net.wifi.WifiScanner.ParcelableScanResults: android.net.wifi.ScanResult[] getResults()>
<android.widget.ZoomButton: void setZoomSpeed(long)>
<android.preference.PreferenceFrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.app.IntentService: void onCreate()>
<android.view.Menu: void setQwertyMode(boolean)>
<android.app.ActivityThread: android.content.Intent getIntentBeingBroadcast()>
<android.transition.Crossfade: int getFadeBehavior()>
<android.security.IKeystoreService: int password_uid(java.lang.String,int)>
<android.hardware.camera2.impl.CameraMetadataNative: java.lang.Object get(android.hardware.camera2.CameraCharacteristics.Key)>
<android.util.SizeF: int hashCode()>
<android.preference.Preference: boolean shouldDisableDependents()>
<android.view.Menu: void setGroupEnabled(int,boolean)>
<android.accounts.AuthenticatorDescription: void <init>(java.lang.String,java.lang.String,int,int,int,int,boolean)>
<android.filterpacks.imageproc.NegativeFilter: void process(android.filterfw.core.FilterContext)>
<android.widget.RelativeLayout: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.accounts.AuthenticatorDescription: int describeContents()>
<android.os.Trace: void traceEnd(long)>
<android.content.res.ObbInfo: void writeToParcel(android.os.Parcel,int)>
<android.inputmethodservice.KeyboardView.OnKeyboardActionListener: void swipeRight()>
<android.media.RingtoneManager: void setIncludeDrm(boolean)>
<android.app.PendingIntent: void send()>
<android.net.wifi.WifiInfo: boolean is5GHz()>
<android.service.notification.NotificationRankingUpdate: int describeContents()>
<android.view.accessibility.AccessibilityNodeInfo: android.os.Bundle getExtras()>
<android.graphics.drawable.DrawableContainer: void invalidateDrawable(android.graphics.drawable.Drawable)>
<android.view.animation.AnimationUtils: android.view.animation.Interpolator loadInterpolator(android.content.Context,int)>
<android.view.ViewGroup: boolean showContextMenuForChild(android.view.View)>
<android.hardware.Camera: android.renderscript.Allocation createPreviewAllocation(android.renderscript.RenderScript,int)>
<android.os.FileBridge.FileBridgeOutputStream: void fsync()>
<android.media.session.ISessionController: void adjustVolume(int,int,java.lang.String)>
<android.widget.CursorAdapter: void <init>(android.content.Context,android.database.Cursor)>
<android.bluetooth.BluetoothDevice: boolean setPasskey(int)>
<com.android.internal.util.FastPrintWriter: void write(java.lang.String)>
<android.view.ActionProvider: void subUiVisibilityChanged(boolean)>
<com.android.internal.util.ArrayUtils: java.lang.Object[] newUnpaddedArray(java.lang.Class,int)>
<android.view.textservice.SpellCheckerSession: void getSuggestions(android.view.textservice.TextInfo[],int,boolean)>
<android.service.dreams.DreamService: void onAttachedToWindow()>
<android.hardware.display.DisplayManagerGlobal: void stopWifiDisplayScan()>
<android.app.UiAutomationConnection: boolean clearWindowContentFrameStats(int)>
<android.renderscript.Element: android.renderscript.Element MATRIX4X4(android.renderscript.RenderScript)>
<android.view.KeyEvent: void <init>(android.view.KeyEvent,long,int)>
<android.security.KeyPairGeneratorSpec.Builder: void <init>(android.content.Context)>
<android.hardware.Camera.Parameters: java.util.List getSupportedWhiteBalance()>
<android.util.AtomicFile: java.io.FileInputStream openRead()>
<android.media.SubtitleTrack: void onStop()>
<android.graphics.drawable.Drawable: int getOpacity()>
<android.net.Uri: java.lang.String encode(java.lang.String,java.lang.String)>
<android.net.NetworkInfo: boolean isConnectedOrConnecting()>
<android.telecom.GatewayInfo: void <init>(java.lang.String,android.net.Uri,android.net.Uri)>
<android.service.dreams.DreamService: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>
<android.os.Debug: int getGlobalAllocSize()>
<android.net.http.AndroidHttpClientConnection: int getSocketTimeout()>
<com.google.android.gles_jni.GLImpl: void glClientActiveTexture(int)>
<android.bluetooth.IBluetooth: boolean removeBond(android.bluetooth.BluetoothDevice)>
<android.view.View: boolean dispatchPointerEvent(android.view.MotionEvent)>
<android.view.View: int getNextFocusForwardId()>
<android.content.Intent: java.lang.String toInsecureString()>
<com.android.internal.os.BatteryStatsImpl: long computeBatteryRealtime(long,int)>
<android.bluetooth.le.ScanFilter: boolean matches(android.bluetooth.le.ScanResult)>
<android.opengl.GLES11Ext: void glFramebufferRenderbufferOES(int,int,int,int)>
<android.view.ViewConfiguration: int getScaledFadingEdgeLength()>
<android.os.INetworkManagementService: java.lang.String[] listTtys()>
<android.opengl.GLES31Ext: void glPushDebugGroupKHR(int,int,int,java.lang.String)>
<android.widget.ListPopupWindow: void setDropDownAlwaysVisible(boolean)>
<android.media.MediaRouter: void clearUserRoutes()>
<android.text.TextUtils: int indexOf(java.lang.CharSequence,char,int,int)>
<com.android.internal.widget.ToolbarWidgetWrapper: boolean hasIcon()>
<android.widget.TextView: void setSelected(boolean)>
<android.renderscript.Double3: void sub(double)>
<android.view.inputmethod.InputMethodSession: void updateCursorAnchorInfo(android.view.inputmethod.CursorAnchorInfo)>
<android.widget.AbsListView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.widget.GridLayout: int getColumnCount()>
<android.text.TextUtils: java.lang.Object[] removeEmptySpans(java.lang.Object[],android.text.Spanned,java.lang.Class)>
<android.telephony.DataConnectionRealTimeInfo: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.view.menu.MenuBuilder: void saveActionViewStates(android.os.Bundle)>
<android.media.tv.TvView: void setCallback(android.media.tv.TvView.TvInputCallback)>
<android.hardware.location.ActivityRecognitionHardware: boolean disableActivityEvent(java.lang.String,int)>
<android.opengl.GLES10: void glMatrixMode(int)>
<android.content.res.CompatibilityInfo.Translator: void translateEventInScreenToAppWindow(android.view.MotionEvent)>
<android.nfc.tech.Ndef: boolean isWritable()>
<android.view.animation.Transformation: int getTransformationType()>
<android.renderscript.ScriptIntrinsicYuvToRGB: android.renderscript.Script.KernelID getKernelID()>
<com.android.internal.widget.RotarySelector: void <init>(android.content.Context,android.util.AttributeSet)>
<android.database.sqlite.SQLiteProgram: void bindNull(int)>
<android.preference.DialogPreference: android.os.Parcelable onSaveInstanceState()>
<android.renderscript.Script.LaunchOptions: int getXStart()>
<android.view.animation.LayoutAnimationController: void setAnimation(android.content.Context,int)>
<android.media.session.MediaController.PlaybackInfo: void <init>(int,android.media.AudioAttributes,int,int,int)>
<android.opengl.GLES11Ext: void glDeleteRenderbuffersOES(int,java.nio.IntBuffer)>
<android.view.animation.LinearInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>
<android.bluetooth.IBluetooth: android.os.ParcelUuid[] getRemoteUuids(android.bluetooth.BluetoothDevice)>
<android.graphics.Paint: int getAlpha()>
<android.bluetooth.BluetoothClass: boolean hasService(int)>
<android.renderscript.Short3: void <init>(short)>
<android.widget.AbsListView: void setMultiChoiceModeListener(android.widget.AbsListView.MultiChoiceModeListener)>
<android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>
<android.widget.ImageView: android.widget.ImageView.ScaleType getScaleType()>
<android.graphics.drawable.Drawable: boolean canApplyTheme()>
<android.graphics.Path: void incReserve(int)>
<com.android.internal.widget.multiwaveview.TargetDrawable: float getPositionY()>
<android.renderscript.Int4: void add(android.renderscript.Int4)>
<android.widget.ExpandableListView: void setOnGroupClickListener(android.widget.ExpandableListView.OnGroupClickListener)>
<android.opengl.GLES30: void glVertexAttribI4ui(int,int,int,int,int)>
<android.view.accessibility.AccessibilityInteractionClient: void removeConnection(int)>
<android.renderscript.FieldPacker: boolean subBoolean()>
<android.webkit.WebViewFactoryProvider: android.webkit.WebIconDatabase getWebIconDatabase()>
<android.hardware.display.DisplayManager: void resumeWifiDisplay()>
<android.hardware.soundtrigger.SoundTrigger.StatusListener: void onRecognition(android.hardware.soundtrigger.SoundTrigger.RecognitionEvent)>
<com.android.internal.location.GpsNetInitiatedHandler: java.lang.String getDialogTitle(com.android.internal.location.GpsNetInitiatedHandler.GpsNiNotification,android.content.Context)>
<android.media.tv.TvInputManager.Session.FinishedInputEventCallback: void onFinishedInputEvent(java.lang.Object,boolean)>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor fromFd(int)>
<com.android.internal.os.BatteryStatsImpl.OverflowArrayMap: void add(java.lang.String,java.lang.Object)>
<android.app.admin.IDevicePolicyManager: void setPasswordQuality(android.content.ComponentName,int,int)>
<android.text.StaticLayout: int getBottomPadding()>
<android.gesture.GestureLibrary: java.util.Set getGestureEntries()>
<android.media.MediaExtractor: boolean getSampleCryptoInfo(android.media.MediaCodec.CryptoInfo)>
<android.app.ActivityManagerProxy: void setTaskDescription(android.os.IBinder,android.app.ActivityManager.TaskDescription)>
<android.nfc.cardemulation.AidGroup: void <init>(java.util.List,java.lang.String)>
<android.view.SurfaceControl: void destroyDisplay(android.os.IBinder)>
<com.android.internal.widget.EditableInputConnection: void reportFinish()>
<android.app.AlarmManager.AlarmClockInfo: void <init>(long,android.app.PendingIntent)>
<android.renderscript.Type: android.renderscript.Type createXY(android.renderscript.RenderScript,android.renderscript.Element,int,int)>
<android.net.IConnectivityManager: java.lang.String[] getTetherableBluetoothRegexs()>
<android.widget.ZoomButton: void setEnabled(boolean)>
<android.telecom.Connection: android.telecom.Connection createFailedConnection(android.telecom.DisconnectCause)>
<android.widget.TextView: void setPadding(int,int,int,int)>
<android.net.IConnectivityManager: boolean isNetworkSupported(int)>
<android.bluetooth.IBluetooth: android.os.ParcelFileDescriptor connectSocket(android.bluetooth.BluetoothDevice,int,android.os.ParcelUuid,int,int)>
<android.filterfw.core.FilterFunction: java.lang.String toString()>
<android.app.WallpaperInfo: android.content.pm.ServiceInfo getServiceInfo()>
<android.os.INetworkManagementService: void allowProtect(int)>
<android.content.IntentFilter: void <init>(android.content.IntentFilter)>
<android.appwidget.AppWidgetHost: void startListening()>
<android.filterpacks.imageproc.CrossProcessFilter: void process(android.filterfw.core.FilterContext)>
<android.accounts.OnAccountsUpdateListener: void onAccountsUpdated(android.accounts.Account[])>
<android.speech.tts.TextToSpeechService: void onCreate()>
<com.android.internal.telecom.ITelecomService: void cancelMissedCallsNotification()>
<android.hardware.camera2.impl.CameraDeviceImpl: int setRepeatingRequest(android.hardware.camera2.CaptureRequest,android.hardware.camera2.impl.CameraDeviceImpl.CaptureCallback,android.os.Handler)>
<android.media.WebVttRenderer: void <init>(android.content.Context)>
<android.view.WindowInsets: android.view.WindowInsets replaceSystemWindowInsets(android.graphics.Rect)>
<android.media.AudioAttributes: int hashCode()>
<android.inputmethodservice.Keyboard: void <init>(android.content.Context,int,int,int,int)>
<android.bluetooth.BluetoothSocket: java.io.InputStream getInputStream()>
<android.os.ParcelFileDescriptor: int parseMode(java.lang.String)>
<android.view.AbsSavedState: void <init>(android.os.Parcel)>
<android.net.VpnService: boolean addAddress(java.net.InetAddress,int)>
<android.os.PerformanceCollector: android.os.Bundle endSnapshot()>
<android.net.http.HttpAuthHeader: void <init>(java.lang.String)>
<android.hardware.camera2.legacy.LegacyMetadataMapper: android.hardware.camera2.CameraCharacteristics createCharacteristics(java.lang.String,android.hardware.CameraInfo)>
<android.graphics.drawable.LayerDrawable: int getIntrinsicWidth()>
<android.app.MediaRouteActionProvider: boolean overridesItemVisibility()>
<android.content.IntentSender: void sendIntent(android.content.Context,int,android.content.Intent,android.content.IntentSender.OnFinished,android.os.Handler)>
<android.media.WebVttRenderingWidget: void onMeasure(int,int)>
<com.android.internal.os.ProcessCpuTracker: int getLastIdleTime()>
<android.app.IActivityManager: void moveTaskBackwards(int)>
<android.view.inputmethod.BaseInputConnection: void setComposingSpans(android.text.Spannable)>
<android.widget.CursorTreeAdapter: void setGroupCursor(android.database.Cursor)>
<android.widget.GridView: boolean onKeyDown(int,android.view.KeyEvent)>
<android.graphics.Outline: boolean canClip()>
<android.accessibilityservice.IAccessibilityServiceConnection: boolean findAccessibilityNodeInfosByText(int,long,java.lang.String,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)>
<com.android.internal.os.BatteryStatsHelper: void refreshStats(int,android.util.SparseArray,long,long)>
<android.bluetooth.IBluetoothGatt: void configureMTU(int,java.lang.String,int)>
<com.google.android.gles_jni.GLImpl: void glGetTexParameterxv(int,int,java.nio.IntBuffer)>
<android.hardware.Camera.Parameters: int getMaxZoom()>
<com.android.internal.os.BatteryStatsImpl.Uid: void noteStartWakeLocked(int,java.lang.String,int,long)>
<android.hardware.camera2.CameraMetadata: java.util.List getKeys()>
<android.graphics.RectF: void set(android.graphics.Rect)>
<android.opengl.GLES11Ext: void glFogxvOES(int,java.nio.IntBuffer)>
<com.android.ims.internal.IImsConfig: void setFeatureValue(int,int,int,com.android.ims.ImsConfigListener)>
<android.media.MediaCodecInfo.AudioCapabilities: void init(android.media.MediaFormat,android.media.MediaCodecInfo.CodecCapabilities)>
<android.content.Intent: java.lang.String getAction()>
<android.app.Dialog: void setFeatureDrawableResource(int,int)>
<android.opengl.GLES11: void glGetClipPlanef(int,java.nio.FloatBuffer)>
<android.widget.MediaController: void setEnabled(boolean)>
<android.graphics.Rasterizer: void finalize()>
<com.android.internal.statusbar.IStatusBar: void toggleRecentApps()>
<android.media.MutableBackgroundColorSpan: int getSpanTypeId()>
<android.provider.Settings.System: void getNonLegacyMovedKeys(java.util.HashSet)>
<com.android.ims.internal.IImsService: void turnOffIms()>
<android.mtp.MtpObjectInfo: int getThumbPixHeight()>
<android.widget.Toolbar.LayoutParams: void <init>(int)>
<com.android.internal.telephony.ISub: int addSubInfoRecord(java.lang.String,int)>
<android.hardware.camera2.CaptureResult.Key: void <init>(java.lang.String,java.lang.Class)>
<android.widget.GridLayout: boolean isColumnOrderPreserved()>
<android.text.method.BaseMovementMethod: boolean end(android.widget.TextView,android.text.Spannable)>
<android.text.Annotation: java.lang.String getKey()>
<android.app.AppOpsManager.OpEntry: int describeContents()>
<android.telecom.StatusHints: android.content.ComponentName getPackageName()>
<android.opengl.GLUtils: java.lang.String getEGLErrorString(int)>
<android.service.notification.StatusBarNotification: boolean isClearable()>
<android.bluetooth.BluetoothHealthCallback: void onHealthAppConfigurationStatusChange(android.bluetooth.BluetoothHealthAppConfiguration,int)>
<android.widget.SpellChecker: void <init>(android.widget.TextView)>
<android.transition.Explode: void captureStartValues(android.transition.TransitionValues)>
<android.widget.TextView: int getMinLines()>
<android.net.WifiLinkQualityInfo: long getTxGood()>
<android.hardware.SystemSensorManager: boolean registerListenerImpl(android.hardware.SensorEventListener,android.hardware.Sensor,int,android.os.Handler,int,int)>
<android.view.inputmethod.InputMethodManager: void updateExtractedText(android.view.View,int,android.view.inputmethod.ExtractedText)>
<android.view.animation.AnimationSet: void <init>(boolean)>
<com.android.internal.widget.multiwaveview.GlowPadView: boolean onTouchEvent(android.view.MotionEvent)>
<android.view.ContextThemeWrapper: void onApplyThemeResource(android.content.res.Resources.Theme,int,boolean)>
<android.animation.RevealAnimator: void onFinished()>
<android.widget.ToggleButton: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.view.accessibility.AccessibilityNodeInfo: int describeContents()>
<android.widget.Space: void onMeasure(int,int)>
<android.hardware.SensorEventListener: void onSensorChanged(android.hardware.SensorEvent)>
<android.content.res.Configuration: void setLayoutDirection(java.util.Locale)>
<android.view.RenderNode: android.view.HardwareCanvas start(int,int)>
<android.location.LocationManager: void requestSingleUpdate(android.location.Criteria,android.app.PendingIntent)>
<android.telephony.CellIdentityGsm: int getPsc()>
<android.opengl.GLES20: void glUniform3fv(int,int,float[],int)>
<android.location.GpsMeasurement: byte getMultipathIndicator()>
<android.hardware.camera2.CameraCharacteristics.Key: void <init>(java.lang.String,android.hardware.camera2.utils.TypeReference)>
<android.filterfw.core.FilterGraph: void closeFilters(android.filterfw.core.FilterContext)>
<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>
<android.app.PendingIntent: java.lang.String getCreatorPackage()>
<android.renderscript.Int3: void sub(android.renderscript.Int3)>
<android.media.AudioService: int getStreamMaxVolume(int)>
<android.os.Binder: long clearCallingIdentity()>
<android.mtp.MtpServer: void run()>
<android.app.Activity: void startActivity(android.content.Intent,android.os.Bundle)>
<android.widget.Switch: void setSwitchTypeface(android.graphics.Typeface)>
<android.bluetooth.BluetoothHeadsetClientCall: int getId()>
<android.widget.TextView: int getAutoLinkMask()>
<android.text.method.TimeKeyListener: android.text.method.TimeKeyListener getInstance()>
<android.hardware.camera2.utils.TaskSingleDrainer: void taskFinished()>
<android.transition.PatternPathMotion: void <init>(android.content.Context,android.util.AttributeSet)>
<android.net.LocalSocket: int getSendBufferSize()>
<android.app.Activity: android.content.Intent getParentActivityIntent()>
<android.hardware.location.GeofenceHardwareMonitorEvent: int getMonitoringStatus()>
<android.telephony.CellIdentityCdma: int getNetworkId()>
<android.app.LocalActivityManager: android.os.Bundle saveInstanceState()>
<android.app.FragmentContainer: android.view.View findViewById(int)>
<android.filterfw.MffEnvironment: void deactivateGLEnvironment()>
<com.android.internal.widget.SizeAdaptiveLayout: com.android.internal.widget.SizeAdaptiveLayout.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.util.JsonReader: java.lang.String toString()>
<android.webkit.WebView.PrivateAccess: void awakenScrollBars(int)>
<android.app.ActivityManager.TaskDescription: android.graphics.Bitmap getInMemoryIcon()>
<android.renderscript.Element.Builder: android.renderscript.Element.Builder add(android.renderscript.Element,java.lang.String,int)>
<android.view.animation.Transformation: void clear()>
<android.widget.TextView: java.lang.CharSequence getText()>
<android.app.WallpaperInfo: void <init>(android.content.Context,android.content.pm.ResolveInfo)>
<android.filterfw.core.ProgramVariable: java.lang.Object getValue()>
<android.animation.AnimatorSet: void playTogether(android.animation.Animator[])>
<android.widget.Editor: void addSpanWatchers(android.text.Spannable)>
<android.app.IActivityManager: boolean handleApplicationWtf(android.os.IBinder,java.lang.String,boolean,android.app.ApplicationErrorReport.CrashInfo)>
<android.text.style.TtsSpan.TimeBuilder: void <init>(int,int)>
<com.android.internal.backup.LocalTransport: int getRestoreData(android.os.ParcelFileDescriptor)>
<android.app.DialogFragment: void onCancel(android.content.DialogInterface)>
<android.media.tv.ITvInputService: void registerCallback(android.media.tv.ITvInputServiceCallback)>
<android.net.ConnectivityManager: java.lang.String[] getTetheringErroredIfaces()>
<android.graphics.drawable.RippleDrawable: void setMaxRadius(int)>
<android.database.DatabaseUtils: void cursorIntToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>
<android.content.ContentResolver: void unstableProviderDied(android.content.IContentProvider)>
<android.hardware.input.TouchCalibration: float[] getAffineTransform()>
<com.android.internal.os.BatteryStatsImpl.Uid.Pkg.Serv: com.android.internal.os.BatteryStatsImpl getBatteryStats()>
<android.inputmethodservice.InputMethodService: boolean isFullscreenMode()>
<android.app.DatePickerDialog.OnDateSetListener: void onDateSet(android.widget.DatePicker,int,int,int)>
<android.renderscript.ScriptIntrinsic3DLUT: android.renderscript.Script.KernelID getKernelID()>
<android.accounts.IAccountAuthenticator: void addAccount(android.accounts.IAccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)>
<android.view.accessibility.AccessibilityNodeInfo: int getWindowId()>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo obtain(android.view.accessibility.AccessibilityNodeInfo)>
<android.speech.tts.Voice: int getLatency()>
<android.opengl.GLES20: void glUniform3i(int,int,int,int)>
<android.net.NetworkQuotaInfo: void <init>(long,long,long)>
<android.widget.AbsSpinner: void requestLayout()>
<android.opengl.GLES30: void glClearBufferuiv(int,int,java.nio.IntBuffer)>
<android.hardware.hdmi.IHdmiControlService: java.util.List getInputDevices()>
<android.drm.DrmManagerClient: void release()>
<android.opengl.GLES20: void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.net.wifi.WifiEnterpriseConfig: java.lang.String getPassword()>
<android.bluetooth.le.ScanRecord: android.bluetooth.le.ScanRecord parseFromBytes(byte[])>
<android.bluetooth.BluetoothClass: int hashCode()>
<android.inputmethodservice.Keyboard: java.util.List getKeys()>
<android.hardware.camera2.legacy.CameraDeviceState: void setError(int)>
<com.google.android.util.AbstractMessageParser.Format: boolean setCaps()>
<android.content.BroadcastReceiver: void setDebugUnregister(boolean)>
<android.widget.CursorAdapter: boolean hasStableIds()>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator zBy(float)>
<android.service.dreams.DreamService: void onDreamingStarted()>
<android.hardware.camera2.legacy.CameraDeviceState: boolean setIdle()>
<android.hardware.hdmi.HdmiPortInfo: void writeToParcel(android.os.Parcel,int)>
<android.speech.tts.TextToSpeech: int playSilence(long,int,java.util.HashMap)>
<android.widget.AutoCompleteTextView: void setDropDownDismissedOnCompletion(boolean)>
<android.app.LauncherActivity: void setTitle(java.lang.CharSequence)>
<android.telephony.PhoneNumberUtils: java.lang.String formatNumber(java.lang.String,java.lang.String,java.lang.String)>
<android.database.sqlite.SQLiteDatabase: void onAllReferencesReleased()>
<android.content.res.XmlResourceParser: void close()>
<android.view.accessibility.AccessibilityRecord: void setMaxScrollX(int)>
<com.google.android.util.SmileyResources: com.google.android.util.AbstractMessageParser.TrieNode getAcronyms()>
<android.widget.Editor.TextModifyOperation: void <init>(android.content.UndoOwner)>
<com.android.internal.app.ResolverActivity: void safelyStartActivity(android.content.Intent)>
<android.widget.GridView: android.widget.ListAdapter getAdapter()>
<android.inputmethodservice.InputMethodService.InputMethodImpl: void restartInput(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo)>
<android.net.MobileDataStateTracker: void setEnableFailFastMobileData(int)>
<android.provider.Settings.Secure: long getLongForUser(android.content.ContentResolver,java.lang.String,long,int)>
<android.media.AudioService: void stopBluetoothSco(android.os.IBinder)>
<android.app.ApplicationThreadProxy: void scheduleEnterAnimationComplete(android.os.IBinder)>
<android.content.Loader: void commitContentChanged()>
<android.location.Address: java.lang.String getFeatureName()>
<android.renderscript.RSTextureView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.os.PowerManager.WakeLock: void acquire(long)>
<android.net.http.EventHandler: void headers(android.net.http.Headers)>
<com.android.internal.app.IBatteryStats: void noteBluetoothState(int)>
<android.media.session.MediaController: long getFlags()>
<android.renderscript.Int3: void add(android.renderscript.Int3)>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo findFocus(int)>
<android.widget.FrameLayout: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<com.android.internal.widget.ActionBarView: boolean canSplit()>
<android.graphics.drawable.VectorDrawable: int getIntrinsicWidth()>
<android.os.storage.OnObbStateChangeListener: void onObbStateChange(java.lang.String,int)>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setBackground(android.graphics.Bitmap)>
<android.accounts.AuthenticatorDescription: void writeToParcel(android.os.Parcel,int)>
<android.net.wifi.p2p.WifiP2pManager.ActionListener: void onFailure(int)>
<android.webkit.WebSettings: void setSavePassword(boolean)>
<android.graphics.Matrix: boolean preScale(float,float)>
<android.content.Intent: char[] getCharArrayExtra(java.lang.String)>
<android.widget.DatePicker: void dispatchRestoreInstanceState(android.util.SparseArray)>
<android.bluetooth.le.BluetoothLeScanner: void cleanup()>
<android.widget.ExpandableListView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.animation.LayoutTransition: void hideChild(android.view.ViewGroup,android.view.View)>
<android.content.ContextWrapper: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)>
<android.media.audiofx.PresetReverb: void <init>(int,int)>
<android.view.MagnificationSpec: void recycle()>
<com.android.internal.widget.ActionBarOverlayLayout: boolean isOverflowMenuShowPending()>
<android.view.ViewGroup: android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect)>
<android.os.ServiceManager: void initServiceCache(java.util.Map)>
<android.content.pm.ContainerEncryptionParams: void <init>(java.lang.String,java.security.spec.AlgorithmParameterSpec,javax.crypto.SecretKey)>
<android.app.WallpaperManager: android.graphics.drawable.Drawable peekFastDrawable()>
<android.nfc.NfcAdapter: boolean isEnabled()>
<android.view.Window: void setFeatureDrawableResource(int,int)>
<com.android.internal.app.ToolbarActionBar: android.app.ActionBar.Tab newTab()>
<android.content.ContentResolver: android.content.IContentProvider acquireUnstableProvider(java.lang.String)>
<com.android.internal.os.BatteryStatsImpl.SamplingTimer: long computeRunTimeLocked(long)>
<android.hardware.camera2.marshal.impl.MarshalQueryableSizeF: boolean isTypeMappingSupported(android.hardware.camera2.utils.TypeReference,int)>
<android.media.AudioDevicePort: android.media.AudioDevicePortConfig buildConfig(int,int,int,android.media.AudioGainConfig)>
<android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig readXml(org.xmlpull.v1.XmlPullParser)>
<android.view.DisplayAdjustments: void setActivityToken(android.os.IBinder)>
<android.app.IActivityManager: void unbindFinished(android.os.IBinder,android.content.Intent,boolean)>
<android.widget.CalendarView: int getDateTextAppearance()>
<android.filterpacks.imageproc.SharpenFilter: void setupPorts()>
<android.database.MergeCursor: int getType(int)>
<android.media.VolumeProvider: int getCurrentVolume()>
<android.view.animation.Animation: long computeDurationHint()>
<android.app.DownloadManager: java.lang.String getMimeTypeForDownloadedFile(long)>
<android.database.AbstractWindowedCursor: java.lang.String getString(int)>
<android.hardware.Camera.Parameters: java.lang.String getWhiteBalance()>
<android.app.SearchableInfo: int getVoiceMaxResults()>
<android.util.FloatMath: float sin(float)>
<com.android.internal.widget.ScrollingTabContainerView: void addTab(android.app.ActionBar.Tab,boolean)>
<android.graphics.Rect: void sort()>
<android.hardware.display.WifiDisplaySessionInfo: void <init>(boolean,int,java.lang.String,java.lang.String,java.lang.String)>
<com.android.internal.widget.LockPatternUtils: android.app.AlarmManager.AlarmClockInfo getNextAlarm()>
<android.net.Uri.Builder: android.net.Uri.Builder appendQueryParameter(java.lang.String,java.lang.String)>
<android.content.Loader.OnLoadCompleteListener: void onLoadComplete(android.content.Loader,java.lang.Object)>
<android.bluetooth.IBluetoothHeadsetClient: boolean disconnect(android.bluetooth.BluetoothDevice)>
<android.database.DatabaseUtils.InsertHelper: void prepareForReplace()>
<android.widget.SimpleExpandableListAdapter: android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup)>
<android.view.View.DragShadowBuilder: void onProvideShadowMetrics(android.graphics.Point,android.graphics.Point)>
<android.preference.Preference: java.lang.CharSequence getSummary()>
<android.os.storage.StorageManager: long getStorageBytesUntilLow(java.io.File)>
<android.content.Context: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)>
<android.widget.RemoteViewsService.RemoteViewsFactory: int getCount()>
<android.widget.CheckedTextView: void setChecked(boolean)>
<android.widget.TextView: void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
<android.app.AppOpsManager: void stopWatchingMode(android.app.AppOpsManager.OnOpChangedListener)>
<com.android.internal.view.BaseIWindow: void closeSystemDialogs(java.lang.String)>
<android.os.Binder: java.lang.String getInterfaceDescriptor()>
<android.view.View: void setWillNotDraw(boolean)>
<android.view.WindowManagerPolicy: int prepareAddWindowLw(android.view.WindowManagerPolicy.WindowState,android.view.WindowManager.LayoutParams)>
<android.location.GpsMeasurement: void resetCarrierPhaseUncertainty()>
<android.opengl.EGL14: android.opengl.EGLSurface eglCreatePixmapSurface(android.opengl.EGLDisplay,android.opengl.EGLConfig,int,int[],int)>
<android.hardware.Camera: void setPreviewSurface(android.view.Surface)>
<android.content.DefaultDataHandler: void processingInstruction(java.lang.String,java.lang.String)>
<android.filterfw.core.FrameManager: android.filterfw.core.Frame duplicateFrameToTarget(android.filterfw.core.Frame,int)>
<android.bluetooth.le.TruncatedFilter: java.util.List getStorageDescriptors()>
<android.view.textservice.SpellCheckerSession: void getSentenceSuggestions(android.view.textservice.TextInfo[],int)>
<android.graphics.drawable.ClipDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>
<android.widget.AdapterViewFlipper: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: void setSrcDevice(android.net.wifi.p2p.WifiP2pDevice)>
<android.net.NetworkUtils: void parcelInetAddress(android.os.Parcel,java.net.InetAddress,int)>
<android.view.View: android.view.Display getDisplay()>
<android.graphics.drawable.RotateDrawable: boolean isPivotXRelative()>
<android.bluetooth.IBluetoothGatt: void registerClient(android.os.ParcelUuid,android.bluetooth.IBluetoothGattCallback)>
<android.telecom.Call: void answer(int)>
<com.google.android.util.AbstractMessageParser.FlickrPhoto: java.lang.String getUser()>
<android.view.View: int getRawTextAlignment()>
<android.renderscript.Allocation: int getUsage()>
<android.view.View: void offsetTopAndBottom(int)>
<android.net.wifi.WifiManager: boolean isP2pSupported()>
<android.print.PrinterId: boolean equals(java.lang.Object)>
<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothSocket createInsecureRfcommSocketToServiceRecord(java.util.UUID)>
<android.graphics.Paint: int getFlags()>
<android.graphics.Path: android.graphics.Path.FillType getFillType()>
<android.widget.TextView: void setFontFeatureSettings(java.lang.String)>
<android.preference.SeekBarPreference: void onStopTrackingTouch(android.widget.SeekBar)>
<android.hardware.camera2.legacy.CaptureCollector: void failNextPreview()>
<com.android.internal.content.SelectionBuilder: com.android.internal.content.SelectionBuilder append(java.lang.String,java.lang.Object[])>
<android.app.Activity: void onWindowAttributesChanged(android.view.WindowManager.LayoutParams)>
<android.renderscript.AllocationAdapter: void setZ(int)>
<android.view.IApplicationToken: boolean keyDispatchingTimedOut(java.lang.String)>
<android.animation.Animator: void start()>
<android.view.View: void getLocationInWindow(int[])>
<android.os.UserManager: android.content.pm.UserInfo createUser(java.lang.String,int)>
<android.preference.Preference: java.lang.String getFragment()>
<android.opengl.EGLContext: boolean equals(java.lang.Object)>
<android.location.LocationManager: void setTestProviderStatus(java.lang.String,int,android.os.Bundle,long)>
<android.renderscript.Int4: android.renderscript.Int4 div(android.renderscript.Int4,int)>
<android.net.wifi.p2p.WifiP2pManager: void getNfcHandoverRequest(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.HandoverMessageListener)>
<android.app.IProcessObserver: void onProcessStateChanged(int,int,int)>
<android.graphics.drawable.NinePatchDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap,byte[],android.graphics.Rect,android.graphics.Rect,java.lang.String)>
<com.android.ims.internal.IImsService: void close(int)>
<com.android.internal.widget.ResolverDrawerLayout: void onLayout(boolean,int,int,int,int)>
<android.bluetooth.IBluetoothPbap: void disconnect()>
<android.app.IActivityManager: java.util.List getAppTasks(java.lang.String)>
<android.app.IApplicationThread: void requestAssistContextExtras(android.os.IBinder,android.os.IBinder,int)>
<com.android.internal.os.BatteryStatsImpl: void noteWifiMulticastDisabledLocked(int)>
<com.android.internal.app.WindowDecorActionBar: void addOnMenuVisibilityListener(android.app.ActionBar.OnMenuVisibilityListener)>
<android.media.tv.TvContract: android.net.Uri buildProgramsUriForChannel(long,long,long)>
<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>
<android.opengl.GLES10: void glFrustumx(int,int,int,int,int,int)>
<android.appwidget.AppWidgetManager: void updateAppWidget(android.content.ComponentName,android.widget.RemoteViews)>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase.CursorFactory,int)>
<android.renderscript.Long4: android.renderscript.Long4 add(android.renderscript.Long4,long)>
<android.net.wifi.p2p.WifiP2pManager: void initiatorReportNfcHandover(android.net.wifi.p2p.WifiP2pManager.Channel,java.lang.String,android.net.wifi.p2p.WifiP2pManager.ActionListener)>
<android.content.res.Resources.Theme: android.content.res.TypedArray obtainStyledAttributes(int,int[])>
<android.filterfw.core.SyncRunner: void setDoneCallback(android.filterfw.core.GraphRunner.OnRunnerDoneListener)>
<android.content.UndoManager: int redo(android.content.UndoOwner[],int)>
<android.hardware.camera2.CameraCaptureSession: void abortCaptures()>
<android.speech.tts.TextToSpeech: int setLanguage(java.util.Locale)>
<com.android.internal.telecom.IConnectionService: void addConnectionServiceAdapter(com.android.internal.telecom.IConnectionServiceAdapter)>
<com.android.internal.os.IResultReceiver: void send(int,android.os.Bundle)>
<android.drm.DrmManagerClient: int acquireRights(android.drm.DrmInfoRequest)>
<android.widget.Adapter: boolean hasStableIds()>
<android.database.sqlite.SQLiteStatement: long executeInsert()>
<android.provider.Downloads.Impl: boolean isStatusCompleted(int)>
<android.bluetooth.BluetoothAvrcpController: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.database.CursorWrapper: boolean isClosed()>
<android.view.MenuItem: android.graphics.drawable.Drawable getIcon()>
<android.service.voice.VoiceInteractionSession: void setTheme(int)>
<android.text.method.BaseMovementMethod: boolean pageUp(android.widget.TextView,android.text.Spannable)>
<android.app.admin.DeviceAdminReceiver: void onPasswordExpiring(android.content.Context,android.content.Intent)>
<android.media.AudioTrack: void <init>(android.media.AudioAttributes,android.media.AudioFormat,int,int,int)>
<android.renderscript.Allocation: android.renderscript.Allocation createFromBitmap(android.renderscript.RenderScript,android.graphics.Bitmap)>
<android.opengl.GLES30: void glGenTransformFeedbacks(int,int[],int)>
<android.content.pm.PackageParser.Component: void setPackageName(java.lang.String)>
<android.app.FragmentManagerImpl: void popBackStack()>
<android.hardware.camera2.CameraCaptureSession: int setRepeatingBurst(java.util.List,android.hardware.camera2.CameraCaptureSession.CaptureCallback,android.os.Handler)>
<com.google.android.util.AbstractMessageParser.Token: boolean isHtml()>
<android.filterfw.core.FilterSurfaceView: int getSurfaceId()>
<android.os.BatteryManagerInternal: int getBatteryLevel()>
<android.filterfw.core.NativeFrame: int[] getInts()>
<android.hardware.camera2.DngCreator: android.hardware.camera2.DngCreator setThumbnail(android.media.Image)>
<android.media.TtmlRenderingWidget: void onDetachedFromWindow()>
<android.content.pm.PackageManager: void installPackage(android.net.Uri,android.content.pm.IPackageInstallObserver,int,java.lang.String)>
<android.hardware.Camera.ShutterCallback: void onShutter()>
<android.database.sqlite.SQLiteDatabase: int releaseMemory()>
<android.telephony.SubscriptionManager: android.net.Uri addSubInfoRecord(java.lang.String,int)>
<android.webkit.ClientCertRequest: java.lang.String[] getKeyTypes()>
<android.net.wifi.WifiEnterpriseConfig: void <init>(android.net.wifi.WifiEnterpriseConfig)>
<android.service.wallpaper.IWallpaperConnection: void engineShown(android.service.wallpaper.IWallpaperEngine)>
<com.android.internal.widget.LockPatternUtils: java.util.List getEnabledTrustAgents(int)>
<android.opengl.GLES10: void glScalex(int,int,int)>
<android.telecom.Call.Details: android.net.Uri getHandle()>
<android.content.ContentValues: void remove(java.lang.String)>
<com.android.internal.view.menu.MenuItemImpl: boolean isCheckable()>
<com.android.internal.util.FastXmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>
<android.text.Layout: java.lang.CharSequence getText()>
<android.util.TimedRemoteCaller: java.lang.Object getResultTimed(int)>
<android.media.AudioManager: boolean isHdmiSystemAudioSupported()>
<android.opengl.GLES11: void glGetTexParameterxv(int,int,int[],int)>
<android.webkit.UrlInterceptRegistry: android.webkit.PluginData getPluginData(java.lang.String,java.util.Map)>
<android.renderscript.Allocation: void copy1DRangeFrom(int,int,java.lang.Object)>
<com.android.internal.telephony.GsmAlphabet: com.android.internal.telephony.GsmAlphabet.TextEncodingDetails countGsmSeptets(java.lang.CharSequence,boolean)>
<android.net.wifi.p2p.nsd.WifiP2pUpnpServiceRequest: void <init>(java.lang.String)>
<android.nfc.INfcTag: int formatNdef(int,byte[])>
<android.bluetooth.BluetoothHeadset: boolean isBluetoothVoiceDialingEnabled(android.content.Context)>
<android.widget.AnalogClock: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.internal.app.AlertController.RecycleListView: boolean recycleOnMeasure()>
<android.content.pm.IOnAppsChangedListener: void onPackagesAvailable(android.os.UserHandle,java.lang.String[],boolean)>
<android.opengl.GLES10: void glFrontFace(int)>
<android.media.tv.TvContract: android.net.Uri buildProgramsUriForChannel(android.net.Uri,long,long)>
<android.inputmethodservice.KeyboardView: void swipeRight()>
<android.os.INetworkManagementService: android.net.NetworkStats getNetworkStatsSummaryDev()>
<android.widget.ProgressBar: void onVisibilityChanged(android.view.View,int)>
<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>
<android.view.textservice.TextInfo: int getCookie()>
<android.text.style.TtsSpan.ElectronicBuilder: android.text.style.TtsSpan.ElectronicBuilder setPort(int)>
<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>
<android.net.http.DelegatingSSLSession.CertificateWrap: void <init>(java.security.cert.Certificate)>
<android.print.IWriteResultCallback: void onWriteStarted(android.os.ICancellationSignal,int)>
<android.renderscript.Type: android.renderscript.Element getElement()>
<android.app.TaskStackBuilder: android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle)>
<android.widget.ListPopupWindow: void show()>
<android.os.PatternMatcher: java.lang.String toString()>
<android.widget.AbsoluteLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.service.notification.ZenModeConfig: void writeXml(org.xmlpull.v1.XmlSerializer)>
<android.database.sqlite.SQLiteOpenHelper: void onOpen(android.database.sqlite.SQLiteDatabase)>
<android.location.Location: void makeComplete()>
<android.media.AudioRecord: void setRecordPositionUpdateListener(android.media.AudioRecord.OnRecordPositionUpdateListener)>
<android.content.res.Configuration: int resetScreenLayout(int)>
<android.app.SearchManager: android.database.Cursor getSuggestions(android.app.SearchableInfo,java.lang.String)>
<android.widget.Button: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.content.pm.IPackageInstallerCallback: void onSessionFinished(int,boolean)>
<android.os.Message: android.os.Message obtain(android.os.Handler,java.lang.Runnable)>
<android.util.AndroidRuntimeException: void <init>(java.lang.Exception)>
<android.bluetooth.BluetoothHeadset: boolean isAudioConnected(android.bluetooth.BluetoothDevice)>
<android.view.KeyEvent: java.lang.String keyCodeToString(int)>
<android.content.pm.IPackageInstaller: void uninstall(java.lang.String,int,android.content.IntentSender,int)>
<android.media.UnsupportedSchemeException: void <init>(java.lang.String)>
<android.view.MenuItem: int getItemId()>
<com.android.internal.widget.multiwaveview.GlowPadView: int getScaledSuggestedMinimumWidth()>
<android.app.ActivityManagerProxy: void finishVoiceTask(android.service.voice.IVoiceInteractionSession)>
<android.graphics.ColorMatrixColorFilter: void <init>(android.graphics.ColorMatrix)>
<android.renderscript.Path: android.renderscript.Path createStaticPath(android.renderscript.RenderScript,android.renderscript.Path.Primitive,float,android.renderscript.Allocation,android.renderscript.Allocation)>
<android.preference.ListPreference: void onPrepareDialogBuilder(android.app.AlertDialog.Builder)>
<android.telecom.TelecomManager: boolean endCall()>
<android.media.AudioTrack: int getLatency()>
<android.app.MediaRouteButton: int getRouteTypes()>
<android.gesture.GestureLibrary: android.gesture.Learner getLearner()>
<android.media.AudioSystem: void setErrorCallback(android.media.AudioSystem.ErrorCallback)>
<android.view.View: boolean fitsSystemWindows()>
<android.inputmethodservice.KeyboardView.OnKeyboardActionListener: void onText(java.lang.CharSequence)>
<com.android.internal.view.menu.ActionMenuItem: int getOrder()>
<android.graphics.TableMaskFilter: android.graphics.TableMaskFilter CreateClipTable(int,int)>
<android.opengl.GLES31Ext: java.lang.String[] glGetDebugMessageLogKHR(int,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer)>
<android.widget.FrameLayout: void setVisibility(int)>
<com.android.internal.util.FileRotator: void rewriteActive(com.android.internal.util.FileRotator.Rewriter,long)>
<android.media.AudioService: void setMasterVolume(int,int,java.lang.String)>
<android.telephony.SignalStrength: int getGsmLevel()>
<android.net.wifi.p2p.WifiP2pDeviceList: void updateSupplicantDetails(android.net.wifi.p2p.WifiP2pDevice)>
<android.webkit.CacheManager.CacheResult: java.io.InputStream getInputStream()>
<android.database.sqlite.SQLiteProgram: void bindDouble(int,double)>
<android.telephony.SubscriptionManager: long[] getSubId(int)>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable[])>
<android.filterfw.core.Frame: int getBindingType()>
<com.android.internal.os.BatterySipper: int compareTo(com.android.internal.os.BatterySipper)>
<android.opengl.GLES30: void glGetTransformFeedbackVarying(int,int,int,java.nio.IntBuffer,java.nio.IntBuffer,java.nio.IntBuffer,byte)>
<android.preference.Preference: void restoreHierarchyState(android.os.Bundle)>
<android.content.pm.ContainerEncryptionParams: boolean equals(java.lang.Object)>
<com.android.internal.os.BatteryStatsImpl.OverflowArrayMap: java.lang.Object startObject(java.lang.String)>
<android.widget.MultiAutoCompleteTextView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.content.IntentFilter: java.lang.String getDataType(int)>
<android.app.LauncherActivity: void onSetContentView()>
<com.android.internal.app.IBatteryStats: void noteChangeWakelockFromSource(android.os.WorkSource,int,java.lang.String,java.lang.String,int,android.os.WorkSource,int,java.lang.String,java.lang.String,int,boolean)>
<android.view.View: boolean isDrawingCacheEnabled()>
<android.net.NetworkStats.Entry: void <init>(long,long,long,long,long)>
<android.hardware.camera2.marshal.impl.MarshalQueryableEnum: boolean isTypeMappingSupported(android.hardware.camera2.utils.TypeReference,int)>
<android.app.ProgressDialog: void setMax(int)>
<android.provider.Settings.System: void getMovedKeys(java.util.HashSet)>
<android.widget.RatingBar: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.view.Window: void setTransitionBackgroundFadeDuration(long)>
<android.content.pm.LabeledIntent: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>
<com.android.internal.http.multipart.Part: java.lang.String getName()>
<android.database.sqlite.SQLiteStatement: int executeUpdateDelete()>
<android.graphics.drawable.Drawable: void setChangingConfigurations(int)>
<android.filterfw.format.ObjectFormat: android.filterfw.core.MutableFrameFormat fromClass(java.lang.Class,int,int)>
<android.bluetooth.BluetoothUuid: boolean isUuidPresent(android.os.ParcelUuid[],android.os.ParcelUuid)>
<android.webkit.URLUtil: java.lang.String guessFileName(java.lang.String,java.lang.String,java.lang.String)>
<android.media.tv.ITvInputManager: void tune(android.os.IBinder,android.net.Uri,android.os.Bundle,int)>
<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorListener,int)>
<android.os.IUserManager: android.graphics.Bitmap getUserIcon(int)>
<android.os.storage.StorageVolume: void setStorageId(int)>
<android.telecom.ParcelableConnection: android.telecom.StatusHints getStatusHints()>
<android.emoji.EmojiFactory: android.emoji.EmojiFactory newAvailableInstance()>
<android.appwidget.AppWidgetManager: void unbindRemoteViewsService(java.lang.String,int,android.content.Intent)>
<android.transition.Recolor: android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)>
<android.database.sqlite.SQLiteProgram: void bindString(int,java.lang.String)>
<android.opengl.GLES11: void glPointParameterx(int,int)>
<com.google.android.gles_jni.GLImpl: void glGetTexEnviv(int,int,java.nio.IntBuffer)>
<android.os.WorkSource: int hashCode()>
<android.net.wifi.p2p.WifiP2pDeviceList: boolean remove(android.net.wifi.p2p.WifiP2pDevice)>
<android.telephony.CellInfoLte: void setCellSignalStrength(android.telephony.CellSignalStrengthLte)>
<android.app.Dialog: boolean onTrackballEvent(android.view.MotionEvent)>
<android.media.MediaDrm.CryptoSession: byte[] encrypt(byte[],byte[],byte[])>
<android.renderscript.Int2: int get(int)>
<android.hardware.camera2.legacy.CameraDeviceState: boolean setConfiguring()>
<android.view.View: boolean performAccessibilityAction(int,android.os.Bundle)>
<android.security.IKeystoreService: byte[] get(java.lang.String)>
<android.widget.FrameLayout: void onMeasure(int,int)>
<com.android.internal.widget.multiwaveview.TargetDrawable: void setScaleX(float)>
<android.hardware.usb.UsbConfiguration: java.lang.String getName()>
<android.hardware.display.DisplayManager: void <init>(android.content.Context)>
<android.app.IApplicationThread: void dispatchPackageBroadcast(int,java.lang.String[])>
<android.widget.AutoCompleteTextView: void setOnItemSelectedListener(android.widget.AdapterView.OnItemSelectedListener)>
<android.app.usage.UsageStats: long getFirstTimeStamp()>
<android.app.Dialog: void setTitle(java.lang.CharSequence)>
<android.filterfw.core.FrameFormat: int hashCode()>
<android.opengl.GLES11Ext: void glTexGenxvOES(int,int,java.nio.IntBuffer)>
<com.android.internal.net.VpnConfig: android.app.PendingIntent getIntentForStatusPanel(android.content.Context)>
<android.media.tv.TvContract.Programs.Genres: java.lang.String encode(java.lang.String[])>
<android.view.TextureView: void setLayerPaint(android.graphics.Paint)>
<android.view.View: void draw(android.graphics.Canvas)>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>
<android.media.audiopolicy.AudioPolicyConfig: void writeToParcel(android.os.Parcel,int)>
<android.webkit.WebView: void addJavascriptInterface(java.lang.Object,java.lang.String)>
<android.widget.CalendarView.CalendarViewDelegate: void setOnDateChangeListener(android.widget.CalendarView.OnDateChangeListener)>
<com.android.internal.widget.PointerLocationView: boolean onTouchEvent(android.view.MotionEvent)>
<android.print.PrintJobInfo.Builder: void setPages(android.print.PageRange[])>
<android.telecom.Connection.Listener: void onConferenceChanged(android.telecom.Connection,android.telecom.Conference)>
<android.service.wallpaper.WallpaperService: android.service.wallpaper.WallpaperService.Engine onCreateEngine()>
<android.filterfw.core.ShaderProgram: void setBlendEnabled(boolean)>
<android.media.MediaHTTPConnection: int readAt(long,int)>
<android.opengl.GLES31: void glProgramUniform2fv(int,int,int,float[],int)>
<android.net.http.Headers: void setContentEncoding(java.lang.String)>
<android.media.RemoteDisplayState: int describeContents()>
<android.text.style.TtsSpan: int describeContents()>
<android.widget.ExpandableListView.ExpandableListContextMenuInfo: void <init>(android.view.View,long,long)>
<android.view.ViewGroup.MarginLayoutParams: void setMarginsRelative(int,int,int,int)>
<android.nfc.cardemulation.ApduServiceInfo: void setOrReplaceDynamicAidGroup(android.nfc.cardemulation.AidGroup)>
<android.filterpacks.imageproc.NegativeFilter: void <init>(java.lang.String)>
<android.os.INetworkManagementService: android.net.InterfaceConfiguration getInterfaceConfig(java.lang.String)>
<android.app.SearchDialog: void <init>(android.content.Context,android.app.SearchManager)>
<android.widget.TimePicker: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.os.Debug.MemoryInfo: int getOtherSwappablePss(int)>
<com.android.internal.widget.ToolbarWidgetWrapper: boolean isTitleTruncated()>
<android.util.SparseBooleanArray: int indexOfKey(int)>
<android.os.Environment: java.io.File[] buildExternalStorageAppMediaDirs(java.lang.String)>
<android.opengl.GLES31Ext: void glSamplerParameterIuivEXT(int,int,int[],int)>
<com.android.internal.widget.LockPatternUtils: void writeFallbackAppWidgetId(int)>
<android.mtp.MtpObjectInfo: int getStorageId()>
<android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings build()>
<android.app.Notification: int describeContents()>
<android.app.Activity: android.app.VoiceInteractor getVoiceInteractor()>
<android.os.WorkSource: boolean add(int,java.lang.String)>
<android.media.RemoteControlClient: void setOnGetPlaybackPositionListener(android.media.RemoteControlClient.OnGetPlaybackPositionListener)>
<android.text.TextUtils: java.lang.CharSequence commaEllipsize(java.lang.CharSequence,android.text.TextPaint,float,java.lang.String,java.lang.String,android.text.TextDirectionHeuristic)>
<android.widget.Switch: java.lang.CharSequence getTextOn()>
<android.telecom.AudioState: int describeContents()>
<android.text.style.BackgroundColorSpan: void <init>(int)>
<android.app.AppOpsManager: int noteOp(int,int,java.lang.String)>
<android.hardware.location.GeofenceHardwareImpl: boolean unregisterForMonitorStateChangeCallback(int,android.hardware.location.IGeofenceHardwareMonitorCallback)>
<android.app.Notification.Builder: android.app.Notification.Builder setFullScreenIntent(android.app.PendingIntent,boolean)>
<android.text.style.DrawableMarginSpan: void <init>(android.graphics.drawable.Drawable)>
<android.graphics.drawable.InsetDrawable: int getIntrinsicHeight()>
<android.speech.tts.TextToSpeech: java.util.List getEngines()>
<android.renderscript.Long3: android.renderscript.Long3 sub(android.renderscript.Long3,android.renderscript.Long3)>
<android.nfc.NfcAdapter: boolean addNfcUnlockHandler(android.nfc.NfcAdapter.NfcUnlockHandler,java.lang.String[])>
<android.hardware.camera2.legacy.CaptureCollector: void failAll()>
<android.os.IUserManager: void setUserName(int,java.lang.String)>
<com.android.internal.view.menu.IconMenuPresenter: void initForMenu(android.content.Context,com.android.internal.view.menu.MenuBuilder)>
<android.graphics.drawable.BitmapDrawable: android.graphics.PorterDuff.Mode getTintMode()>
<com.google.android.util.AbstractMessageParser.Token: void <init>(com.google.android.util.AbstractMessageParser.Token.Type,java.lang.String)>
<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo: int getColumnIndex()>
<android.media.MediaPlayer: void finalize()>
<android.hardware.camera2.legacy.SurfaceTextureRenderer: void <init>(int)>
<android.widget.CalendarView.CalendarViewDelegate: void setDateTextAppearance(int)>
<android.media.tv.TvTrackInfo.Builder: android.media.tv.TvTrackInfo.Builder setAudioChannelCount(int)>
<android.widget.ListView: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.content.Intent: int fillIn(android.content.Intent,int)>
<com.android.internal.view.IInputMethodManager: boolean hideSoftInput(com.android.internal.view.IInputMethodClient,int,android.os.ResultReceiver)>
<android.filterpacks.imageproc.ImageSlicer: void setupPorts()>
<android.net.Uri: java.util.List getQueryParameters(java.lang.String)>
<android.view.accessibility.AccessibilityManager.AccessibilityStateChangeListener: void onAccessibilityStateChanged(boolean)>
<com.android.internal.widget.ScrollingTabContainerView.VisibilityAnimListener: void onAnimationEnd(android.animation.Animator)>
<android.opengl.GLES11Ext: void glCurrentPaletteMatrixOES(int)>
<android.view.GhostView: void setMatrix(android.graphics.Matrix)>
<android.text.SpannableStringBuilder: java.lang.CharSequence subSequence(int,int)>
<android.widget.AdapterView: long getItemIdAtPosition(int)>
<android.view.animation.AnimationSet: void setFillAfter(boolean)>
<android.widget.ViewSwitcher: void reset()>
<android.provider.DocumentsProvider: android.content.res.AssetFileDescriptor openDocumentThumbnail(java.lang.String,android.graphics.Point,android.os.CancellationSignal)>
<android.renderscript.Allocation: android.renderscript.Allocation createFromBitmapResource(android.renderscript.RenderScript,android.content.res.Resources,int)>
<com.android.internal.view.menu.MenuItemImpl: android.view.ContextMenu.ContextMenuInfo getMenuInfo()>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.io.File,android.database.sqlite.SQLiteDatabase.CursorFactory)>
<com.android.internal.statusbar.StatusBarIconList: int getViewIndex(int)>
<android.provider.ContactsContract.QuickContact: android.content.Intent composeQuickContactsIntent(android.content.Context,android.graphics.Rect,android.net.Uri,int,java.lang.String[])>
<android.telephony.PhoneStateListener: void onCallForwardingIndicatorChanged(boolean)>
<android.database.Cursor: byte[] getBlob(int)>
<com.android.internal.util.XmlUtils.ReadMapCallback: java.lang.Object readThisUnknownObjectXml(org.xmlpull.v1.XmlPullParser,java.lang.String)>
<android.hardware.input.InputManager: void removeKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,java.lang.String)>
<android.app.Instrumentation: void execStartActivityFromAppTask(android.content.Context,android.os.IBinder,android.app.IAppTask,android.content.Intent,android.os.Bundle)>
<android.view.accessibility.AccessibilityEvent: void clear()>
<android.bluetooth.IBluetoothMap: boolean isConnected(android.bluetooth.BluetoothDevice)>
<android.telecom.TelecomManager: java.util.List getAllPhoneAccountHandles()>
<android.media.tv.ITvInputSession: void setCaptionEnabled(boolean)>
<android.view.View: void dispatchFinishTemporaryDetach()>
<android.graphics.Path: void computeBounds(android.graphics.RectF,boolean)>
<com.android.internal.app.WindowDecorActionBar: void enableContentAnimations(boolean)>
<android.media.SoundPool.SoundPoolDelegate: int play(int,float,float,int,int,float)>
<com.android.internal.app.MediaRouteChooserDialog: void setRouteTypes(int)>
<android.content.AbstractThreadedSyncAdapter: android.os.IBinder getSyncAdapterBinder()>
<android.database.CursorWindow: boolean setNumColumns(int)>
<android.view.ViewGroup.OnHierarchyChangeListener: void onChildViewRemoved(android.view.View,android.view.View)>
<com.android.internal.app.WindowDecorActionBar.TabImpl: android.graphics.drawable.Drawable getIcon()>
<android.app.Activity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu.ContextMenuInfo)>
<android.content.Loader: void stopLoading()>
<android.os.SystemClock: long currentTimeMicro()>
<android.bluetooth.le.AdvertiseSettings: int getMode()>
<android.bluetooth.IBluetoothGattCallback: void onCharacteristicWrite(java.lang.String,int,int,int,android.os.ParcelUuid,int,android.os.ParcelUuid)>
<android.renderscript.Element: int getSubElementArraySize(int)>
<android.content.AsyncTaskLoader: void <init>(android.content.Context)>
<android.graphics.Bitmap: void reconfigure(int,int,android.graphics.Bitmap.Config)>
<android.widget.AutoCompleteTextView: void setDropDownVerticalOffset(int)>
<android.location.GpsNavigationMessage: void setType(byte)>
<android.animation.Animator: void setInterpolator(android.animation.TimeInterpolator)>
<android.content.pm.PackageManager: void installPackageWithVerification(android.net.Uri,android.app.PackageInstallObserver,int,java.lang.String,android.net.Uri,android.content.pm.ManifestDigest,android.content.pm.ContainerEncryptionParams)>
<android.app.Activity: void setContentView(android.view.View,android.view.ViewGroup.LayoutParams)>
<android.renderscript.ScriptIntrinsicBlend: void forEachSrc(android.renderscript.Allocation,android.renderscript.Allocation)>
<android.view.View: int getDefaultSize(int,int)>
<android.media.MediaCodec.CodecException: boolean isRecoverable()>
<android.opengl.GLES10: void glFlush()>
<android.content.pm.PackageManager: void addPreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,int)>
<android.app.Activity: boolean onNavigateUpFromChild(android.app.Activity)>
<android.net.EthernetManager: android.net.IpConfiguration getConfiguration()>
<android.animation.Animator: long getDuration()>
<android.content.pm.PermissionGroupInfo: void writeToParcel(android.os.Parcel,int)>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder detectNetwork()>
<com.google.android.util.AbstractMessageParser.Format: java.util.List getInfo()>
<android.media.MediaScanner: android.net.Uri scanSingleFile(java.lang.String,java.lang.String,java.lang.String)>
<android.view.inputmethod.BaseInputConnection: boolean clearMetaKeyStates(int)>
<android.filterpacks.imageproc.SharpenFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>
<android.database.sqlite.SQLiteSession: boolean yieldTransaction(long,boolean,android.os.CancellationSignal)>
<android.view.ScaleGestureDetector: void <init>(android.content.Context,android.view.ScaleGestureDetector.OnScaleGestureListener,android.os.Handler)>
<android.hardware.location.GeofenceHardwareImpl: void reportGeofenceResumeStatus(int,int)>
<android.transition.ArcMotion: float getMinimumHorizontalAngle()>
<android.opengl.GLES11Ext: void glSampleCoveragexOES(int,boolean)>
<android.telecom.ConnectionService: android.telecom.Connection onCreateIncomingConnection(android.telecom.PhoneAccountHandle,android.telecom.ConnectionRequest)>
<android.renderscript.Byte4: android.renderscript.Byte4 div(android.renderscript.Byte4,android.renderscript.Byte4)>
<com.android.internal.widget.ActionBarContextView: void onAnimationRepeat(android.animation.Animator)>
<android.hardware.usb.UsbConfiguration: java.lang.String toString()>
<android.app.Activity: boolean onKeyLongPress(int,android.view.KeyEvent)>
<android.media.session.MediaSessionLegacyHelper: void removeRccListener(android.app.PendingIntent)>
<android.accounts.IAccountAuthenticator: void getAuthToken(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)>
<android.widget.ScrollView: boolean fullScroll(int)>
<android.app.UiAutomation: void connect()>
<android.media.AudioService: int setHdmiSystemAudioSupported(boolean)>
<android.content.pm.Signature: android.content.pm.Signature[] getChainSignatures()>
<com.android.internal.app.IBatteryStats: void noteWifiState(int,java.lang.String)>
<android.renderscript.Mesh.AllocationBuilder: void <init>(android.renderscript.RenderScript)>
<android.view.FocusFinderHelper: void <init>(android.view.FocusFinder)>
<android.content.ContentProviderOperation: boolean isReadOperation()>
<android.view.animation.Transformation: void setClipRect(android.graphics.Rect)>
<android.graphics.pdf.PdfEditor: void finalize()>
<android.content.AsyncTaskLoader: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.database.CursorWindow: int getStartPosition()>
<android.database.CursorWrapper: android.os.Bundle getExtras()>
<android.hardware.camera2.marshal.MarshalHelpers: int getPrimitiveTypeSize(int)>
<com.android.internal.widget.SlidingTab: void setRightHintText(int)>
<com.android.internal.content.PackageMonitor: boolean didSomePackagesChange()>
<android.print.PrintJobInfo: int getAdvancedIntOption(java.lang.String)>
<android.security.KeyPairGeneratorSpec: int getKeySize()>
<com.android.internal.view.menu.MenuItemImpl: boolean requestsActionButton()>
<android.nfc.tech.NfcB: android.nfc.tech.NfcB get(android.nfc.Tag)>
<android.transition.Transition: android.transition.Transition.EpicenterCallback getEpicenterCallback()>
<android.app.ApplicationThreadProxy: void profilerControl(boolean,android.app.ProfilerInfo,int)>
<android.telecom.Connection.VideoProvider: void onSetCamera(java.lang.String)>
<android.app.IntentService: int onStartCommand(android.content.Intent,int,int)>
<android.media.ClosedCaptionWidget: void onAttachedToWindow()>
<android.telecom.RemoteConnection: void hold()>
<android.net.NetworkStats: void writeToParcel(android.os.Parcel,int)>
<android.content.ContentValues: int size()>
<android.app.FragmentManagerImpl: android.app.Fragment.SavedState saveFragmentInstanceState(android.app.Fragment)>
<android.view.WindowManagerPolicy: void setInitialDisplaySize(android.view.Display,int,int,int)>
<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>
<android.bluetooth.IBluetoothPan: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.media.session.ISessionController: boolean sendMediaButton(android.view.KeyEvent)>
<com.android.internal.view.menu.MenuPopupHelper: void onGlobalLayout()>
<android.app.IActivityManager: void setPackageScreenCompatMode(java.lang.String,int)>
<android.net.nsd.DnsSdTxtRecord: void writeToParcel(android.os.Parcel,int)>
<android.telephony.TelephonyManager: java.lang.String getNetworkCountryIso(long)>
<android.media.DecoderCapabilities: java.util.List getVideoDecoders()>
<android.view.KeyCharacterMap: char getMatch(int,char[],int)>
<android.view.View: boolean isPaddingRelative()>
<android.net.StaticIpConfiguration: android.net.LinkProperties toLinkProperties(java.lang.String)>
<android.content.Intent: android.content.Intent parseUri(java.lang.String,int)>
<android.opengl.GLES11: void glBufferData(int,int,java.nio.Buffer,int)>
<android.app.IUserSwitchObserver: void onUserSwitchComplete(int)>
<android.content.pm.PackageParser.PermissionGroup: java.lang.String toString()>
<android.telephony.CellInfoWcdma: java.lang.String toString()>
<android.app.FragmentBreadCrumbs: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.opengl.GLES31Ext: void glGetSamplerParameterIivEXT(int,int,java.nio.IntBuffer)>
<com.android.internal.app.ToolbarActionBar: boolean isShowing()>
<android.widget.RadioButton: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>
<android.app.RemoteInput: java.lang.String getResultKey()>
<com.google.android.gles_jni.GLImpl: void glGetLightxv(int,int,int[],int)>
<android.database.sqlite.SQLiteConnection: void execute(java.lang.String,java.lang.Object[],android.os.CancellationSignal)>
<android.media.tv.ITvInputSessionCallback: void onLayoutSurface(int,int,int,int)>
<android.media.SubtitleController: void show()>
<android.filterfw.core.GLEnvironment: int registerSurface(android.view.Surface)>
<android.app.SearchableInfo: boolean autoUrlDetect()>
<android.net.IpConfiguration: android.net.IpConfiguration.IpAssignment getIpAssignment()>
<android.hardware.hdmi.HdmiDeviceInfo: int getPhysicalAddress()>
<android.view.View: void dispatchWindowSystemUiVisiblityChanged(int)>
<android.view.WindowManagerPolicy.WindowState: android.graphics.Rect getVisibleFrameLw()>
<android.widget.MediaController.MediaPlayerControl: int getBufferPercentage()>
<android.hardware.camera2.impl.CameraMetadataNative.Key: java.lang.String getName()>
<android.widget.SectionIndexer: java.lang.Object[] getSections()>
<android.bluetooth.IBluetooth: int getScanMode()>
<android.net.http.Headers: java.lang.String getPragma()>
<com.android.internal.os.ProcessCpuTracker: java.lang.String printCurrentState(long)>
<android.filterfw.core.RandomScheduler: void <init>(android.filterfw.core.FilterGraph)>
<android.widget.Switch: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.widget.ViewAnimator: void removeViews(int,int)>
<android.app.ActivityThread: int getIntCoreSetting(java.lang.String,int)>
<android.view.InputDevice: int describeContents()>
<android.print.PrinterInfo.Builder: android.print.PrinterInfo build()>
<android.security.IKeystoreService: byte[] sign(java.lang.String,byte[])>
<android.provider.SearchIndexableData: void <init>(android.content.Context)>
<android.media.RingtoneManager: int getDefaultType(android.net.Uri)>
<android.opengl.GLES20: void glLineWidth(float)>
<com.android.internal.telephony.ISms: java.lang.String getImsSmsFormatForSubscriber(long)>
<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable getCurrent()>
<android.net.NetworkIdentity: int getSubType()>
<android.util.Property: java.lang.String getName()>
<android.app.AppOpsManager: int checkOpNoThrow(java.lang.String,int,java.lang.String)>
<com.android.internal.backup.IBackupTransport: int getRestoreData(android.os.ParcelFileDescriptor)>
<android.media.AudioSystem: int setLowRamDevice(boolean)>
<android.bluetooth.BluetoothGatt: boolean readCharacteristic(android.bluetooth.BluetoothGattCharacteristic)>
<android.view.Window: void setWindowAnimations(int)>
<android.preference.EditTextPreference: android.os.Parcelable onSaveInstanceState()>
<android.os.StatFs: long getAvailableBlocksLong()>
<android.widget.TextView: void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
<android.text.style.LocaleSpan: void updateDrawState(android.text.TextPaint)>
<android.util.ExceptionUtils: java.lang.String getCompleteMessage(java.lang.Throwable)>
<android.media.tv.TvStreamConfig.Builder: android.media.tv.TvStreamConfig.Builder maxWidth(int)>
<android.opengl.GLSurfaceView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.os.storage.StorageManager: void unregisterListener(android.os.storage.StorageEventListener)>
<android.app.ActivityThread: android.app.Application getApplication()>
<com.android.internal.view.menu.ListMenuPresenter: void <init>(int,int)>
<com.android.internal.widget.EditableInputConnection: boolean performEditorAction(int)>
<android.text.AlteredCharSequence: char charAt(int)>
<android.widget.PopupMenu: void setOnMenuItemClickListener(android.widget.PopupMenu.OnMenuItemClickListener)>
<android.graphics.SweepGradient: void <init>(float,float,int,int)>
<com.android.internal.widget.ToolbarWidgetWrapper: void collapseActionView()>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setView(android.view.View)>
<android.util.LruCache: int hitCount()>
<android.hardware.Sensor: int getMaxDelay()>
<android.telephony.TelephonyManager: void listen(android.telephony.PhoneStateListener,int)>
<com.android.internal.widget.ActionBarOverlayLayout: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>
<com.android.internal.widget.SubtitleView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.text.SpannableStringBuilder: char charAt(int)>
<android.hardware.camera2.CameraCharacteristics: java.lang.Object getProtected(android.hardware.camera2.CameraCharacteristics.Key)>
<android.speech.tts.TextToSpeechService.UtteranceProgressDispatcher: void dispatchOnStop()>
<android.renderscript.Program.BaseProgramBuilder: android.renderscript.Program.BaseProgramBuilder addTexture(android.renderscript.Program.TextureType,java.lang.String)>
<android.net.PskKeyManager: java.lang.String chooseClientKeyIdentity(java.lang.String,javax.net.ssl.SSLEngine)>
<android.renderscript.AllocationAdapter: void subData1D(int,int,byte[])>
<android.hardware.usb.UsbManager: android.hardware.usb.UsbDeviceConnection openDevice(android.hardware.usb.UsbDevice)>
<android.widget.NumberPicker: boolean performClick()>
<android.app.IActivityManager: boolean isIntentSenderAnActivity(android.content.IIntentSender)>
<android.telephony.CellSignalStrengthLte: java.lang.String toString()>
<android.util.SparseLongArray: int indexOfValue(long)>
<android.hardware.usb.UsbDevice: java.lang.String getProductName()>
<android.service.notification.Condition: void writeToParcel(android.os.Parcel,int)>
<android.view.SurfaceControl: void setLayerStack(int)>
<android.os.Process: boolean supportsProcesses()>
<android.os.BaseBundle: boolean isEmpty()>
<android.webkit.WebViewProvider: android.view.View getZoomControls()>
<android.graphics.Bitmap: boolean sameAs(android.graphics.Bitmap)>
<android.media.IRingtonePlayer: boolean isPlaying(android.os.IBinder)>
<android.filterfw.core.VertexFrame: void setFloats(float[])>
<android.renderscript.Matrix3f: void scale(float,float)>
<android.app.usage.ConfigurationStats: int getActivationCount()>
<android.renderscript.Long4: void sub(long)>
<android.transition.Transition: android.transition.Transition removeListener(android.transition.Transition.TransitionListener)>
<android.view.accessibility.AccessibilityNodeInfo.CollectionItemInfo: int getRowSpan()>
<android.os.Binder: void joinThreadPool()>
<android.telephony.CellInfoLte: void writeToParcel(android.os.Parcel,int)>
<android.renderscript.Float3: void setAt(int,float)>
<android.content.Context: void enforceUriPermission(android.net.Uri,int,int,int,java.lang.String)>
<com.android.internal.preference.YesNoPreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.print.PrintDocumentInfo: long getDataSize()>
<com.android.internal.app.AlertActivity: void dismiss()>
<android.accounts.AccountManagerFuture: java.lang.Object getResult(long,java.util.concurrent.TimeUnit)>
<android.graphics.pdf.PdfDocument.Page: android.graphics.pdf.PdfDocument.PageInfo getInfo()>
<android.bluetooth.BluetoothGattCharacteristic: int getWriteType()>
<android.bluetooth.IBluetooth: boolean isOffloadedScanBatchingSupported()>
<android.widget.FrameLayout: boolean getConsiderGoneChildrenWhenMeasuring()>
<android.alsa.AlsaDevicesParser: void scan()>
<android.hardware.Camera.Parameters: java.lang.String getSceneMode()>
<com.google.android.gles_jni.GLImpl: int glGetError()>
<android.app.WallpaperInfo: void writeToParcel(android.os.Parcel,int)>
<android.bluetooth.BluetoothAdapter: int getState()>
<android.content.ContentProviderOperation: android.content.ContentProviderResult apply(android.content.ContentProvider,android.content.ContentProviderResult[],int)>
<android.os.Debug: long getPss()>
<android.speech.tts.TtsEngines: java.util.Locale getLocalePrefForEngine(java.lang.String,java.lang.String)>
<android.webkit.WebResourceResponse: void setEncoding(java.lang.String)>
<android.app.Instrumentation: android.app.Instrumentation.ActivityResult execStartActivity(android.content.Context,android.os.IBinder,android.os.IBinder,android.app.Fragment,android.content.Intent,int,android.os.Bundle)>
<android.widget.CheckedTextView: void setCheckMarkDrawable(int)>
<com.android.internal.app.IBatteryStats: void noteFullWifiLockReleased(int)>
<android.security.AndroidKeyStore: int engineSize()>
<android.widget.EditText: void setSelection(int)>
<android.content.ContentProvider: void setAppOps(int,int)>
<android.location.Address: java.lang.String getLocality()>
<android.telecom.RemoteConference: int getState()>
<android.speech.tts.TextToSpeech: int addSpeech(java.lang.CharSequence,java.io.File)>
<android.os.PowerManager: boolean isWakeLockLevelSupported(int)>
<android.opengl.GLES31: void glProgramUniform4uiv(int,int,int,java.nio.IntBuffer)>
<android.webkit.WebView.PrivateAccess: void super_setLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.hardware.hdmi.IHdmiControlService: void sendKeyEvent(int,int,boolean)>
<android.media.IAudioService: void setMode(int,android.os.IBinder)>
<com.android.internal.widget.ActionBarView: boolean hasLogo()>
<android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction: void <init>(int,java.lang.CharSequence)>
<com.android.internal.app.WindowDecorActionBar.TabImpl: android.app.ActionBar.Tab setIcon(android.graphics.drawable.Drawable)>
<android.os.Binder: int getThreadStrictModePolicy()>
<android.widget.HorizontalScrollView: void requestChildFocus(android.view.View,android.view.View)>
<android.media.tv.TvView: java.util.List getTracks(int)>
<android.graphics.pdf.PdfDocument: void close()>
<android.net.NetworkUtils: boolean stopDhcp(java.lang.String)>
<android.app.backup.IBackupManager: void opComplete(int)>
<android.widget.ProgressBar: void onRestoreInstanceState(android.os.Parcelable)>
<android.view.SurfaceView: void draw(android.graphics.Canvas)>
<android.content.pm.PermissionInfo: int fixProtectionLevel(int)>
<android.graphics.Paint: void setColor(int)>
<android.view.MotionEvent: float getToolMajor()>
<android.print.PrintDocumentInfo: void setDataSize(long)>
<android.app.ActivityManagerProxy: void handleApplicationCrash(android.os.IBinder,android.app.ApplicationErrorReport.CrashInfo)>
<android.hardware.camera2.legacy.RequestQueue: android.util.Pair getNext()>
<android.media.session.MediaController.TransportControls: void skipToPrevious()>
<android.accounts.AccountManagerResponse: int describeContents()>
<android.net.http.SslCertificate.DName: java.lang.String getOName()>
<android.transition.Transition: android.transition.Transition removeTarget(java.lang.String)>
<android.media.RemoteDisplayState.RemoteDisplayInfo: java.lang.String toString()>
<com.android.internal.view.menu.ActionMenuItem: boolean expandActionView()>
<android.filterfw.core.SimpleFrame: void setBitmap(android.graphics.Bitmap)>
<android.opengl.GLES11Ext: void glLightxvOES(int,int,int[],int)>
<com.android.internal.widget.DrawableHolder: void setAlpha(float)>
<android.view.animation.Transformation: void printShortString(java.io.PrintWriter)>
<android.hardware.SensorManager: void unregisterListener(android.hardware.SensorListener,int)>
<android.widget.Spinner: void setAdapter(android.widget.SpinnerAdapter)>
<android.view.View: void setActivated(boolean)>
<android.hardware.Camera: void setPreviewCallbackAllocation(android.renderscript.Allocation)>
<com.android.internal.backup.IBackupTransport: java.lang.String currentDestinationString()>
<android.os.UserManager: android.os.UserHandle getUserForSerialNumber(long)>
<com.android.internal.widget.ActionBarContextView: void <init>(android.content.Context)>
<android.net.wifi.WifiInfo: void updatePacketRates(long,long)>
<android.text.style.ScaleXSpan: void <init>(float)>
<android.filterpacks.imageproc.PosterizeFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<com.android.internal.view.menu.ListMenuPresenter: int getId()>
<android.widget.Toolbar: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.os.INetworkManagementService: java.lang.String[] listTetheredInterfaces()>
<android.os.BatteryStats.LongCounter: void logState(android.util.Printer,java.lang.String)>
<android.hardware.hdmi.HdmiRecordSources: android.hardware.hdmi.HdmiRecordSources.DigitalServiceSource ofAtsc(int,android.hardware.hdmi.HdmiRecordSources.AtscData)>
<android.hardware.camera2.ICameraDeviceCallbacks: void onCaptureStarted(android.hardware.camera2.impl.CaptureResultExtras,long)>
<android.widget.TextView: float getShadowDy()>
<android.widget.AdapterViewAnimator: boolean onTouchEvent(android.view.MotionEvent)>
<android.renderscript.Double2: android.renderscript.Double2 add(android.renderscript.Double2,android.renderscript.Double2)>
<com.android.internal.content.PackageHelper: java.lang.String replaceEnd(java.lang.String,java.lang.String,java.lang.String)>
<com.google.android.util.AbstractMessageParser.Video: java.lang.String getDocID()>
<android.view.animation.AnimationSet: android.view.animation.AnimationSet clone()>
<android.view.animation.Transformation: void setTransformationType(int)>
<android.os.Handler: boolean postAtTime(java.lang.Runnable,long)>
<android.text.SpannedString: android.text.SpannedString valueOf(java.lang.CharSequence)>
<android.media.IMediaRouterClient: void onStateChanged()>
<android.view.inputmethod.InputMethodManager: java.util.Map getShortcutInputMethodsAndSubtypes()>
<com.android.internal.util.ArrayUtils: android.util.ArraySet remove(android.util.ArraySet,java.lang.Object)>
<android.media.IRemoteControlClient: void enableRemoteControlDisplay(android.media.IRemoteControlDisplay,boolean)>
<android.telephony.CellInfoWcdma: int describeContents()>
<com.android.internal.app.IMediaContainerService: long calculateDirectorySize(java.lang.String)>
<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>
<android.telecom.Connection: boolean setConference(android.telecom.Conference)>
<android.media.AudioSystem: int getDevicesForStream(int)>
<android.view.ViewGroup: void removeViews(int,int)>
<com.android.internal.backup.LocalTransport: void cancelFullBackup()>
<android.media.AudioSystem: int getStreamVolumeIndex(int,int)>
<android.app.PackageDeleteObserver: void onPackageDeleted(java.lang.String,int,java.lang.String)>
<android.net.dhcp.DhcpStateMachine: void onDeclineReceived(byte[],java.net.InetAddress)>
<android.hardware.camera2.legacy.RequestHandlerThread: android.os.Handler getHandler()>
<android.os.BatteryStats.HistoryTag: void writeToParcel(android.os.Parcel,int)>
<android.widget.TextView: void setSpannableFactory(android.text.Spannable.Factory)>
<android.widget.PopupWindow: boolean isSplitTouchEnabled()>
<android.content.Context: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>
<android.widget.ScrollView: void scrollTo(int,int)>
<android.telecom.InCallAdapter: void answerCall(java.lang.String,int)>
<android.util.Base64OutputStream: void <init>(java.io.OutputStream,int)>
<android.app.UiAutomationConnection: void executeShellCommand(java.lang.String,android.os.ParcelFileDescriptor)>
<android.content.pm.PackageInstaller.SessionCallback: void onFinished(int,boolean)>
<android.media.Image.Plane: java.nio.ByteBuffer getBuffer()>
<android.graphics.Matrix: boolean postScale(float,float,float,float)>
<android.accounts.IAccountManager: void removeAccountAsUser(android.accounts.IAccountManagerResponse,android.accounts.Account,int)>
<android.view.View: android.view.ViewPropertyAnimator animate()>
<android.graphics.drawable.ScaleDrawable: int getChangingConfigurations()>
<android.util.MathUtils: int constrain(int,int,int)>
<com.android.internal.telephony.IMms: android.net.Uri importTextMessage(java.lang.String,java.lang.String,int,java.lang.String,long,boolean,boolean)>
<android.media.AudioAttributes: int getFlags()>
<android.os.IUserManager: void setUserIcon(int,android.graphics.Bitmap)>
<android.graphics.drawable.AnimatedRotateDrawable: void setFramesCount(int)>
<com.android.internal.content.NativeLibraryHelper.Handle: void finalize()>
<com.android.internal.backup.LocalTransportService: android.os.IBinder onBind(android.content.Intent)>
<android.view.accessibility.AccessibilityNodeInfo: void setMaxTextLength(int)>
<android.os.Registrant: void clear()>
<android.widget.AbsListView: int getChoiceMode()>
<android.widget.ProgressBar: void incrementSecondaryProgressBy(int)>
<com.android.internal.inputmethod.InputMethodUtils: boolean isSystemImeThatHasEnglishKeyboardSubtype(android.view.inputmethod.InputMethodInfo)>
<android.filterfw.core.GLEnvironment: boolean isActive()>
<android.speech.tts.TextToSpeechService: int onLoadVoice(java.lang.String)>
<android.widget.GridLayout: android.widget.GridLayout.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.util.TypedValue: float getDimension(android.util.DisplayMetrics)>
<android.app.ActivityManagerProxy: boolean isInHomeStack(int)>
<android.util.Rational: java.lang.String toString()>
<android.hardware.location.IFusedLocationHardwareSink: void onLocationAvailable(android.location.Location[])>
<android.transition.ArcMotion: void <init>(android.content.Context,android.util.AttributeSet)>
<android.view.GestureDetector: void <init>(android.view.GestureDetector.OnGestureListener)>
<android.filterfw.core.Filter: android.filterfw.core.OutputPort getOutputPort(java.lang.String)>
<android.renderscript.Short3: void addMultiple(android.renderscript.Short3,short)>
<android.filterfw.core.OutputPort: void setBasePort(android.filterfw.core.InputPort)>
<android.media.MediaRouter.Callback: void onRouteUngrouped(android.media.MediaRouter,android.media.MediaRouter.RouteInfo,android.media.MediaRouter.RouteGroup)>
<android.opengl.GLES11: void glGetBooleanv(int,boolean[],int)>
<android.text.SpannableString: android.text.SpannableString valueOf(java.lang.CharSequence)>
<android.view.accessibility.CaptioningManager.CaptionStyle: android.view.accessibility.CaptioningManager.CaptionStyle getCustomStyle(android.content.ContentResolver)>
<com.android.internal.app.ProcessStats: long dumpSingleServiceTime(java.io.PrintWriter,java.lang.String,com.android.internal.app.ProcessStats.ServiceState,int,int,long,long)>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int addChild(android.graphics.drawable.Drawable)>
<android.database.Cursor: boolean getWantsAllOnMoveCalls()>
<android.service.fingerprint.IFingerprintServiceReceiver: void onRemoved(int)>
<android.content.PeriodicSync: void <init>(android.accounts.Account,java.lang.String,android.os.Bundle,long)>
<android.os.PerformanceCollector.PerformanceResultsWriter: void writeMeasurement(java.lang.String,long)>
<android.media.tv.TvInputService.Session: void notifyVideoUnavailable(int)>
<android.util.AttributeSet: int getAttributeResourceValue(int,int)>
<android.widget.RelativeLayout.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<android.app.LocalActivityManager: java.util.HashMap dispatchRetainNonConfigurationInstance()>
<android.app.Instrumentation: void callActivityOnSaveInstanceState(android.app.Activity,android.os.Bundle)>
<android.view.MotionEvent: float getHistoricalAxisValue(int,int,int)>
<android.media.session.MediaSessionLegacyHelper: void sendVolumeKeyEvent(android.view.KeyEvent,boolean)>
<android.filterpacks.imageproc.VignetteFilter: void initProgram(android.filterfw.core.FilterContext,int)>
<android.graphics.drawable.NinePatchDrawable: int getMinimumWidth()>
<android.graphics.pdf.PdfDocument.PageInfo: int getPageWidth()>
<android.graphics.ColorMatrix: void <init>(android.graphics.ColorMatrix)>
<android.widget.ActivityChooserView: void onAttachedToWindow()>
<android.content.pm.PackageParser.Component: void appendComponentShortName(java.lang.StringBuilder)>
<android.location.Criteria: boolean isAltitudeRequired()>
<android.app.ExpandableListActivity: void onRestoreInstanceState(android.os.Bundle)>
<android.webkit.WebSettings: void setDisplayZoomControls(boolean)>
<android.app.ActivityManagerProxy: int startActivity(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle)>
<android.app.Notification: java.lang.String getGroup()>
<android.hardware.hdmi.HdmiRecordListener: android.hardware.hdmi.HdmiRecordSources.RecordSource getOneTouchRecordSource(int)>
<android.telecom.GatewayInfo: android.net.Uri getOriginalAddress()>
<android.view.View: void setScaleX(float)>
<android.renderscript.Short2: void addAt(int,short)>
<android.content.Context: android.content.Context createApplicationContext(android.content.pm.ApplicationInfo,int)>
<android.database.sqlite.SQLiteProgram: void onCorruption()>
<android.os.Handler: void dump(android.util.Printer,java.lang.String)>
<android.app.backup.BackupManager: void <init>(android.content.Context)>
<android.hardware.display.DisplayManager: void disconnectWifiDisplay()>
<android.content.pm.MacAuthenticatedInputStream: void <init>(java.io.InputStream,javax.crypto.Mac)>
<android.transition.TransitionSet: void forceVisibility(int,boolean)>
<android.renderscript.ScriptIntrinsicHistogram: void forEach_Dot(android.renderscript.Allocation)>
<android.hardware.camera2.marshal.impl.MarshalQueryablePrimitive: boolean isTypeMappingSupported(android.hardware.camera2.utils.TypeReference,int)>
<android.view.accessibility.AccessibilityNodeInfo: void setParent(android.view.View)>
<android.appwidget.AppWidgetHostView: void setOnClickHandler(android.widget.RemoteViews.OnClickHandler)>
<android.view.textservice.SpellCheckerInfo: java.lang.String getSettingsActivity()>
<android.view.View: void setId(int)>
<android.widget.TextView: void beginBatchEdit()>
<android.media.MediaCodecInfo.VideoCapabilities: android.util.Size getBlockSize()>
<android.os.BatteryStats.Uid: void noteWifiMulticastDisabledLocked(long)>
<android.hardware.display.DisplayManagerGlobal: void disconnectWifiDisplay()>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getApplicationIcon(android.content.pm.ApplicationInfo)>
<android.text.style.SuggestionSpan: int describeContents()>
<android.view.View: void setDrawingCacheQuality(int)>
<android.view.inputmethod.InputMethodSubtypeArray: int getCount()>
<android.media.tv.ITvInputSession: void appPrivateCommand(java.lang.String,android.os.Bundle)>
<android.telephony.TelephonyManager: java.lang.String getCdmaMdn()>
<android.preference.Preference: java.lang.String getPersistedString(java.lang.String)>
<android.text.style.BackgroundColorSpan: int getBackgroundColor()>
<android.content.pm.PackageParser.Service: void setPackageName(java.lang.String)>
<android.graphics.drawable.RotateDrawable: boolean isStateful()>
<android.media.FaceDetector: void <init>(int,int,int)>
<android.net.UrlQuerySanitizer: void parseQuery(java.lang.String)>
<android.filterfw.core.SimpleScheduler: void reset()>
<android.view.ViewRootImpl: void invokeFunctor(long,boolean)>
<android.widget.ImageView: void setColorFilter(int,android.graphics.PorterDuff.Mode)>
<android.app.AppOpsManager: int opToDefaultMode(int)>
<android.database.sqlite.SQLiteStatement: java.lang.String toString()>
<android.view.accessibility.AccessibilityManager: boolean addTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager.TouchExplorationStateChangeListener)>
<com.android.internal.widget.AbsActionBarView: int positionChild(android.view.View,int,int,int,boolean)>
<com.android.internal.util.XmlUtils: byte[] readByteArrayAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String)>
<android.animation.TimeAnimator.TimeListener: void onTimeUpdate(android.animation.TimeAnimator,long,long)>
<android.media.MediaRecorder: void reset()>
<android.net.wifi.WifiManager: void save(android.net.wifi.WifiConfiguration,android.net.wifi.WifiManager.ActionListener)>
<android.content.IContentService: void sync(android.content.SyncRequest)>
<android.inputmethodservice.ExtractEditText: void <init>(android.content.Context)>
<android.view.accessibility.AccessibilityNodeInfo: java.util.List findAccessibilityNodeInfosByText(java.lang.String)>
<android.opengl.GLES30: java.lang.String glGetTransformFeedbackVarying(int,int,java.nio.IntBuffer,java.nio.IntBuffer)>
<android.widget.TabWidget: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.util.LruCache: java.lang.Object put(java.lang.Object,java.lang.Object)>
<android.media.browse.MediaBrowser.MediaItem: android.media.MediaDescription getDescription()>
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: boolean equals(java.lang.Object)>
<android.os.BatteryStats.Uid: long getWifiMulticastTime(long,int)>
<com.android.internal.view.menu.IconMenuItemView: void setChecked(boolean)>
<android.app.Notification.Builder: android.app.Notification.Builder setShowWhen(boolean)>
<android.content.UndoManager: android.content.UndoOwner getOwner(java.lang.String,java.lang.Object)>
<android.view.View: void onVisibilityChanged(android.view.View,int)>
<android.view.accessibility.AccessibilityEvent: void setMovementGranularity(int)>
<android.hardware.ConsumerIrManager: void <init>(android.content.Context)>
<android.os.Debug: int getGlobalExternalAllocSize()>
<android.database.DatabaseUtils: android.os.ParcelFileDescriptor blobFileDescriptorForQuery(android.database.sqlite.SQLiteStatement,java.lang.String[])>
<com.android.internal.os.BatteryStatsImpl.OverflowArrayMap: android.util.ArrayMap getMap()>
<android.widget.Chronometer: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.content.pm.LauncherApps: void removeCallback(android.content.pm.LauncherApps.Callback)>
<android.graphics.Insets: int hashCode()>
<android.media.session.MediaSession: void setPlaybackToRemote(android.media.VolumeProvider)>
<android.filterfw.core.FrameFormat: boolean isCompatibleWith(android.filterfw.core.FrameFormat)>
<android.view.RenderNode: float getTranslationX()>
<android.media.AudioService: void clearAllScoClients(int,boolean)>
<android.content.pm.VerifierDeviceIdentity: int describeContents()>
<android.view.Window: void setFeatureDrawable(int,android.graphics.drawable.Drawable)>
<android.os.CommonTimeConfig: int setMasterElectionEndpoint(java.net.InetSocketAddress)>
<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int,int,int)>
<android.widget.TextView: void setLineSpacing(float,float)>
<com.android.internal.util.XmlUtils: void nextElement(org.xmlpull.v1.XmlPullParser)>
<android.hardware.hdmi.HdmiDeviceInfo: int getPortId()>
<android.media.AudioRecord: int getChannelCount()>
<android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec build()>
<android.transition.TransitionPropagation: java.lang.String[] getPropagationProperties()>
<android.os.SystemProperties: long getLong(java.lang.String,long)>
<android.hardware.hdmi.HdmiTimerRecordSources: android.hardware.hdmi.HdmiTimerRecordSources.TimerRecordSource ofAnalogueSource(android.hardware.hdmi.HdmiTimerRecordSources.TimerInfo,android.hardware.hdmi.HdmiRecordSources.AnalogueServiceSource)>
<com.android.internal.view.WindowManagerPolicyThread: java.lang.Thread getThread()>
<com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm7BitPackedWithHeader(java.lang.String,byte[])>
<android.bluetooth.BluetoothDevice: boolean setMessageAccessPermission(int)>
<android.renderscript.RenderScript: void contextDump()>
<android.app.Notification.WearableExtender: android.app.PendingIntent getDisplayIntent()>
<android.os.Binder: void finalize()>
<android.util.SparseBooleanArray: boolean get(int,boolean)>
<android.provider.Settings.System: boolean putInt(android.content.ContentResolver,java.lang.String,int)>
<android.app.backup.BackupDataInput: boolean readNextHeader()>
<android.speech.srec.Recognizer: void resetAcousticState()>
<android.widget.TextClock: java.lang.CharSequence getFormat()>
<android.text.TextUtils.StringSplitter: void setString(java.lang.String)>
<android.os.BatteryStats: long getPhoneSignalScanningTime(long,int)>
<android.view.inputmethod.InputConnection: java.lang.CharSequence getSelectedText(int)>
<android.filterpacks.videosrc.MediaSource: void close(android.filterfw.core.FilterContext)>
<android.database.MatrixCursor: int getInt(int)>
<android.net.RouteInfo: void <init>(java.net.InetAddress)>
<android.telephony.TelephonyManager: int invokeOemRilRequestRaw(byte[],byte[])>
<android.view.Display: float getRefreshRate()>
<android.opengl.GLES30: void glVertexAttribI4uiv(int,int[],int)>
<android.opengl.GLES31: void glGetFramebufferParameteriv(int,int,int[],int)>
<android.renderscript.FieldPacker: void addF32(android.renderscript.Float3)>
<android.print.PrintDocumentAdapter.LayoutResultCallback: void onLayoutFinished(android.print.PrintDocumentInfo,boolean)>
<android.widget.TextView: int getCompoundPaddingTop()>
<android.widget.Toolbar.LayoutParams: void <init>(int,int)>
<android.app.WallpaperInfo: java.lang.String getPackageName()>
<com.android.internal.telephony.ISub: int setDisplayNumberFormat(int,long)>
<android.renderscript.Element: android.renderscript.Element F64_2(android.renderscript.RenderScript)>
<com.android.internal.os.BatteryStatsImpl.BatchTimer: void onTimeStopped(long,long,long)>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator translationYBy(float)>
<android.os.ParcelableParcel: void <init>(android.os.Parcel,java.lang.ClassLoader)>
<com.android.internal.view.menu.MenuPopupHelper: boolean expandItemActionView(com.android.internal.view.menu.MenuBuilder,com.android.internal.view.menu.MenuItemImpl)>
<android.text.Layout: android.text.TextPaint getPaint()>
<com.android.internal.inputmethod.InputMethodUtils.InputMethodSettings: int getSelectedInputMethodSubtypeId(java.lang.String)>
<android.opengl.GLSurfaceView: void <init>(android.content.Context)>
<android.hardware.camera2.marshal.impl.MarshalQueryableEnum: android.hardware.camera2.marshal.Marshaler createMarshaler(android.hardware.camera2.utils.TypeReference,int)>
<android.provider.MediaStore.Images.Thumbnails: void cancelThumbnailRequest(android.content.ContentResolver,long,long)>
<android.graphics.drawable.DrawableContainer: void getHotspotBounds(android.graphics.Rect)>
<android.drm.DrmManagerClient: int removeRights(java.lang.String)>
<android.app.admin.IDevicePolicyManager: void setLockTaskPackages(android.content.ComponentName,java.lang.String[])>
<com.android.internal.view.menu.BaseMenuPresenter: com.android.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)>
<android.media.MediaRouter.UserRouteInfo: void requestSetVolume(int)>
<android.hardware.hdmi.HdmiTvClient: void stopOneTouchRecord(int)>
<android.transition.TransitionSet: android.transition.TransitionSet addTarget(java.lang.Class)>
<android.renderscript.Byte2: void <init>(byte,byte)>
<com.android.internal.os.RuntimeInit: android.os.IBinder getApplicationObject()>
<android.hardware.soundtrigger.SoundTrigger.Keyphrase: int hashCode()>
<android.media.AudioDevicePort: int type()>
<android.media.MediaRouter.SimpleCallback: void onRouteSelected(android.media.MediaRouter,int,android.media.MediaRouter.RouteInfo)>
<android.bluetooth.BluetoothHeadset: boolean enableWBS()>
<android.content.pm.RegisteredServicesCache: void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,android.content.pm.XmlSerializerAndParser)>
<android.print.PrintAttributes.Margins: int getBottomMils()>
<android.media.session.MediaSession.CallbackStub: void onPrevious()>
<android.opengl.GLES31: void glValidateProgramPipeline(int)>
<android.location.GpsClock: void setBiasInNs(double)>
<android.app.IActivityManager: void releasePersistableUriPermission(android.net.Uri,int,int)>
<android.util.Slog: int w(java.lang.String,java.lang.Throwable)>
<android.animation.AnimatorSet: java.util.ArrayList getChildAnimations()>
<com.android.server.net.NetlinkTracker: android.net.LinkProperties getLinkProperties()>
<android.media.CamcorderProfile: boolean hasProfile(int)>
<android.alsa.LineTokenizer: void <init>(java.lang.String)>
<com.android.internal.widget.TextProgressBar: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>
<android.media.IRemoteControlClient: void setCurrentClientGenerationId(int)>
<android.provider.Settings.Secure: android.net.Uri getUriFor(java.lang.String)>
<android.media.Tokenizer.OnTokenListener: void onEnd(java.lang.String)>
<android.hardware.input.InputManager.InputDeviceListener: void onInputDeviceAdded(int)>
<android.print.PrinterDiscoverySession: boolean isDestroyed()>
<android.net.LinkProperties: boolean hasIPv6DnsServer()>
<com.android.internal.view.IInputMethodManager: java.util.List getInputMethodList()>
<android.widget.AdapterViewFlipper: boolean isFlipping()>
<android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)>
<android.security.KeyStoreParameter: int getFlags()>
<android.os.BatteryStats.Uid: java.util.Map getProcessStats()>
<android.hardware.Camera.Parameters: void setFlashMode(java.lang.String)>
<android.database.sqlite.SQLiteGlobal: int getWALAutoCheckpoint()>
<android.telephony.PreciseCallState: boolean equals(java.lang.Object)>
<android.filterpacks.imageproc.LomoishFilter: void setupPorts()>
<android.view.ViewDebug: void dump(android.view.View,boolean,boolean,java.io.OutputStream)>
<com.android.internal.inputmethod.InputMethodSubtypeSwitchingController: com.android.internal.inputmethod.InputMethodSubtypeSwitchingController createInstanceLocked(com.android.internal.inputmethod.InputMethodUtils.InputMethodSettings,android.content.Context)>
<android.webkit.WebViewProvider: void setInitialScale(int)>
<com.android.internal.textservice.ITextServicesManager: void setSpellCheckerEnabled(boolean)>
<android.view.animation.Animation: void scaleCurrentDuration(float)>
<android.content.Intent: android.content.Intent addFlags(int)>
<android.widget.DatePicker.DatePickerDelegate: int getFirstDayOfWeek()>
<android.appwidget.AppWidgetManager: void updateAppWidget(int[],android.widget.RemoteViews)>
<android.view.View: android.content.Context getContext()>
<android.content.ContextWrapper: int checkUriPermission(android.net.Uri,int,int,int)>
<android.opengl.GLES20: void glColorMask(boolean,boolean,boolean,boolean)>
<android.net.NetworkInfo: boolean isConnected()>
<com.android.internal.widget.multiwaveview.TargetDrawable: void setDrawable(android.content.res.Resources,int)>
<android.app.UiAutomation: void clearWindowAnimationFrameStats()>
<android.view.MotionEvent: float getHistoricalToolMajor(int)>
<android.media.audiofx.AudioEffect: int getId()>
<android.telecom.Log: void wtf(java.lang.Object,java.lang.String,java.lang.Object[])>
<android.opengl.GLES30: void glCopyBufferSubData(int,int,int,int,int)>
<android.renderscript.Float4: void add(float)>
<android.ddm.DdmHandleProfiling: void connected()>
<android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>
<android.content.Context: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)>
<android.print.PrintJobInfo: void setCreationTime(long)>
<android.net.DhcpResults: boolean hasMeteredHint()>
<android.service.dreams.DreamService: void wakeUp()>
<android.app.Notification.InboxStyle: void <init>(android.app.Notification.Builder)>
<android.print.PrinterInfo: int describeContents()>
<android.net.DhcpInfo: java.lang.String toString()>
<android.net.http.Headers: java.lang.String getProxyAuthenticate()>
<android.text.style.TtsSpan.DateBuilder: void <init>(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)>
<android.app.admin.DeviceAdminReceiver: void onProfileProvisioningComplete(android.content.Context,android.content.Intent)>
<android.database.AbstractCursor: boolean moveToNext()>
<android.app.ActionBar: void setHomeActionContentDescription(int)>
<android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Object[])>
<com.google.android.gles_jni.GLImpl: void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.os.Parcel: void setDataSize(int)>
<android.widget.RemoteViews: void setDouble(int,java.lang.String,double)>
<android.drm.ProcessedData: java.lang.String getSubscriptionId()>
<android.widget.ActionMenuView: int getPopupTheme()>
<android.os.Parcel: int dataAvail()>
<android.media.MediaRouter.UserRouteInfo: void setIconResource(int)>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor adoptFd(int)>
<android.media.MediaDescription: java.lang.String getMediaId()>
<android.os.RecoverySystem: void rebootWipeUserData(android.content.Context)>
<android.os.Handler: void removeCallbacks(java.lang.Runnable,java.lang.Object)>
<android.os.INetworkManagementService: void addInterfaceToNetwork(java.lang.String,int)>
<com.android.internal.os.BackgroundThread: android.os.Handler getHandler()>
<android.graphics.Matrix: void setSkew(float,float)>
<com.android.internal.http.multipart.Part: byte[] getPartBoundary()>
<android.webkit.WebViewFragment: void onPause()>
<android.transition.TransitionSet: void resume(android.view.View)>
<android.opengl.GLES11: void glGetMaterialfv(int,int,float[],int)>
<com.android.internal.content.PackageMonitor: void register(android.content.Context,android.os.Looper,boolean)>
<com.google.android.gles_jni.GLImpl: void glActiveTexture(int)>
<android.service.voice.AlwaysOnHotwordDetector.EventPayload: java.lang.Integer getCaptureSession()>
<android.webkit.GeolocationPermissions: void clear(java.lang.String)>
<com.android.internal.policy.IKeyguardService: void onDreamingStarted()>
<android.preference.PreferenceGroup: void notifyDependencyChange(boolean)>
<android.opengl.GLES11Ext: void glTexGenxOES(int,int,int)>
<android.view.ViewGroup: void dispatchVisibilityChanged(android.view.View,int)>
<com.google.android.gles_jni.GLImpl: void glFrustumx(int,int,int,int,int,int)>
<android.app.ActivityManagerProxy: int startActivityAsCaller(android.app.IApplicationThread,java.lang.String,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,android.app.ProfilerInfo,android.os.Bundle,int)>
<android.graphics.Matrix: boolean preTranslate(float,float)>
<android.media.tv.ITvInputManager: void setVolume(android.os.IBinder,float,int)>
<com.android.internal.app.MediaRouteChooserDialogFragment: com.android.internal.app.MediaRouteChooserDialog onCreateChooserDialog(android.content.Context,android.os.Bundle)>
<android.telecom.InCallService.VideoCall: void setPreviewSurface(android.view.Surface)>
<android.webkit.WebSettings: void setVideoOverlayForEmbeddedEncryptedVideoEnabled(boolean)>
<android.text.Spannable: void removeSpan(java.lang.Object)>
<android.content.UndoManager: boolean isInUpdate()>
<android.view.InputDevice: boolean hasButtonUnderPad()>
<android.app.usage.UsageEvents: boolean getNextEvent(android.app.usage.UsageEvents.Event)>
<android.app.Dialog: void takeKeyEvents(boolean)>
<android.location.GpsNavigationMessage: void writeToParcel(android.os.Parcel,int)>
<android.opengl.GLES31: void glProgramUniform3uiv(int,int,int,int[],int)>
<com.android.internal.app.IVoiceInteractionManagerService: boolean isEnrolledForKeyphrase(android.service.voice.IVoiceInteractionService,int,java.lang.String)>
<android.transition.ChangeClipBounds: android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)>
<android.view.WindowManagerPolicy: boolean isKeyguardLocked()>
<android.view.RenderNode: boolean setProjectionReceiver(boolean)>
<android.widget.TextView: boolean onKeyShortcut(int,android.view.KeyEvent)>
<android.security.KeyChain: boolean isBoundKeyAlgorithm(java.lang.String)>
<android.telecom.PhoneAccount.Builder: android.telecom.PhoneAccount build()>
<android.text.style.AlignmentSpan.Standard: int describeContents()>
<android.graphics.Camera: float getLocationY()>
<android.service.notification.NotificationListenerService: android.service.notification.StatusBarNotification[] getActiveNotifications(int)>
<android.widget.Toolbar: void dismissPopupMenus()>
<android.view.Menu: void clear()>
<android.view.accessibility.AccessibilityRecord: void setBeforeText(java.lang.CharSequence)>
<android.webkit.URLUtil: boolean isContentUrl(java.lang.String)>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle addAccountFromCredentials(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,android.os.Bundle)>
<android.graphics.drawable.BitmapDrawable: void applyTheme(android.content.res.Resources.Theme)>
<android.media.AudioManagerInternal: void adjustStreamVolumeForUid(int,int,int,java.lang.String,int)>
<android.os.BatteryStats: boolean getNextHistoryLocked(android.os.BatteryStats.HistoryItem)>
<android.widget.ActionMenuView: boolean isOverflowMenuShowPending()>
<android.os.Bundle: boolean getBoolean(java.lang.String)>
<android.os.RecoverySystem: void rebootWipeCache(android.content.Context)>
<android.inputmethodservice.InputMethodService: int getCandidatesHiddenVisibility()>
<android.renderscript.ScriptIntrinsicBlend: void forEachSubtract(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>
<android.app.ActionBar: void setCustomView(int)>
<android.view.DisplayInfo: void copyFrom(android.view.DisplayInfo)>
<android.os.Message: void setAsynchronous(boolean)>
<android.widget.RemoteViews: void setString(int,java.lang.String,java.lang.String)>
<com.android.internal.widget.LockPatternUtils: boolean getPowerButtonInstantlyLocks()>
<android.mtp.MtpDatabase: void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String[])>
<android.widget.TextView: float getTextScaleX()>
<com.android.internal.view.StandaloneActionMode: void setSubtitle(int)>
<android.media.MediaCodec: int dequeueOutputBuffer(android.media.MediaCodec.BufferInfo,long)>
<com.android.internal.view.InputConnectionWrapper: boolean reportFullscreenMode(boolean)>
<com.android.internal.os.BatteryStatsImpl: void noteStartWakeLocked(int,int,java.lang.String,java.lang.String,int,boolean,long,long)>
<android.app.AppOpsManager.PackageOps: void <init>(java.lang.String,int,java.util.List)>
<com.google.android.util.AbstractMessageParser: void parse()>
<android.provider.Settings.System: void setShowGTalkServiceStatusForUser(android.content.ContentResolver,boolean,int)>
<android.view.animation.Animation: boolean hasEnded()>
<com.android.internal.os.BatteryStatsImpl.Uid: java.util.Map getProcessStats()>
<com.android.internal.app.ToolbarActionBar: void setHomeActionContentDescription(java.lang.CharSequence)>
<android.text.format.Time: java.lang.String format(java.lang.String)>
<android.app.Notification.Style: void applyTopPadding(android.widget.RemoteViews)>
<android.bluetooth.BluetoothHeadset: boolean startVoiceRecognition(android.bluetooth.BluetoothDevice)>
<android.util.TypedValue: int complexToDimensionPixelOffset(int,android.util.DisplayMetrics)>
<android.filterpacks.imageproc.ToGrayFilter: android.filterfw.core.Program getShaderProgram(android.filterfw.core.FilterContext)>
<android.telecom.TelecomManager: void setUserSelectedOutgoingPhoneAccount(android.telecom.PhoneAccountHandle)>
<android.inputmethodservice.InputMethodService: boolean onKeyDown(int,android.view.KeyEvent)>
<android.net.wifi.IWifiManager: int getWifiEnabledState()>
<android.view.animation.OvershootInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.internal.os.BatteryStatsHelper: java.util.List getUsageList()>
<android.net.NetworkTemplate: android.net.NetworkTemplate buildTemplateWifi(java.lang.String)>
<android.nfc.tech.IsoDep: byte[] transceive(byte[])>
<android.content.pm.PackageParser.Permission: void <init>(android.content.pm.PackageParser.Package,android.content.pm.PermissionInfo)>
<android.view.MotionEvent: java.lang.String axisToString(int)>
<android.util.TimingLogger: void <init>(java.lang.String,java.lang.String)>
<com.android.internal.util.TypedProperties: void load(java.io.Reader)>
<android.text.style.SuggestionSpan: void <init>(android.content.Context,java.lang.String[],int)>
<android.app.ActivityThread: void installSystemApplicationInfo(android.content.pm.ApplicationInfo,java.lang.ClassLoader)>
<com.android.internal.view.menu.BaseMenuPresenter: com.android.internal.view.menu.MenuPresenter.Callback getCallback()>
<android.text.style.SuggestionRangeSpan: int describeContents()>
<android.widget.MultiAutoCompleteTextView: void performFiltering(java.lang.CharSequence,int,int,int)>
<android.app.TabActivity: void setDefaultTab(java.lang.String)>
<android.database.sqlite.SQLiteDatabase: boolean yieldIfContendedSafely(long)>
<android.content.pm.PackageInstaller.Session: java.io.OutputStream openWrite(java.lang.String,long,long)>
<android.widget.TableRow.LayoutParams: void setBaseAttributes(android.content.res.TypedArray,int,int)>
<com.android.internal.policy.IKeyguardService: void dispatch(android.view.MotionEvent)>
<com.android.internal.view.menu.BaseMenuPresenter: boolean onSubMenuSelected(com.android.internal.view.menu.SubMenuBuilder)>
<android.media.IAudioService: boolean loadSoundEffects()>
<android.bluetooth.BluetoothHeadsetClientCall: int describeContents()>
<android.telecom.VideoCallImpl: void setPauseImage(java.lang.String)>
<android.nfc.INfcAdapter: void removeNfcUnlockHandler(android.nfc.INfcUnlockHandler)>
<android.hardware.SensorManager: void getRotationMatrixFromVector(float[],float[])>
<com.android.internal.os.BatteryStatsImpl.Uid: int getUserActivityCount(int,int)>
<android.inputmethodservice.InputMethodService: void onExtractedCursorMovement(int,int)>
<android.database.sqlite.SQLiteCursor: void setWindow(android.database.CursorWindow)>
<com.android.internal.util.StateMachine: java.lang.String getName()>
<android.util.JsonReader: java.lang.String nextName()>
<android.filterpacks.imageproc.CropFilter: void setupPorts()>
<android.renderscript.RSTextureView: void pause()>
<android.telecom.RemoteConference.Callback: void onConferenceableConnectionsChanged(android.telecom.RemoteConference,java.util.List)>
<android.content.res.Resources: android.content.res.AssetManager getAssets()>
<android.app.backup.BackupTransport: int abortFullRestore()>
<android.hardware.usb.UsbManager: void setMassStorageBackingFile(java.lang.String)>
<android.appwidget.AppWidgetProvider: void onEnabled(android.content.Context)>
<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.net.InetAddress,int)>
<android.widget.ActivityChooserView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.view.InputQueue: void dispose()>
<android.widget.ListPopupWindow: int getPromptPosition()>
<android.widget.DatePicker.DatePickerDelegate: void setCalendarViewShown(boolean)>
<com.android.internal.view.menu.MenuBuilder: void setCallback(com.android.internal.view.menu.MenuBuilder.Callback)>
<android.hardware.location.GeofenceHardwareRequest: int getUnknownTimer()>
<android.net.http.SslError: java.lang.String getUrl()>
<com.android.internal.widget.AbsActionBarView: boolean canShowOverflowMenu()>
<android.app.FragmentTransaction: boolean isEmpty()>
<android.content.ClipData: int getItemCount()>
<android.bluetooth.BluetoothGattCharacteristic: void <init>(java.util.UUID,int,int)>
<android.app.ListFragment: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
<android.view.WindowAnimationFrameStats: void init(long,long[])>
<android.app.FragmentManagerImpl: void removeFragment(android.app.Fragment,int,int)>
<android.app.Activity: boolean moveTaskToBack(boolean)>
<android.app.LauncherActivity: android.content.Intent intentForPosition(int)>
<android.opengl.GLES20: void glClear(int)>
<android.database.sqlite.SQLiteOutOfMemoryException: void <init>(java.lang.String)>
<android.graphics.Path: boolean isConvex()>
<android.media.AudioRecord: void startRecording(android.media.MediaSyncEvent)>
<com.android.ims.internal.IImsCallSessionListener: void callSessionInviteParticipantsRequestFailed(com.android.ims.internal.IImsCallSession,com.android.ims.ImsReasonInfo)>
<android.view.View: void requestUnbufferedDispatch(android.view.MotionEvent)>
<android.renderscript.Element: android.renderscript.Element I64_4(android.renderscript.RenderScript)>
<android.webkit.WebViewProvider.ViewDelegate: boolean onKeyMultiple(int,int,android.view.KeyEvent)>
<android.util.LongSparseArray: void delete(long)>
<com.android.internal.telephony.ISub: int clearSubInfo()>
<android.hardware.location.IGeofenceHardware: void setGpsGeofenceHardware(android.location.IGpsGeofenceHardware)>
<android.net.wifi.ScanSettings: int describeContents()>
<com.android.internal.telephony.ISms: void sendStoredText(long,java.lang.String,android.net.Uri,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>
<android.media.AudioManager: void setBluetoothA2dpOn(boolean)>
<android.view.ViewGroup: void addView(android.view.View)>
<android.view.GraphicBuffer: void writeToParcel(android.os.Parcel,int)>
<android.media.MediaRecorder: int getAudioSourceMax()>
<android.telecom.Connection: java.lang.String stateToString(int)>
<android.webkit.WebView: boolean overlayVerticalScrollbar()>
<android.graphics.Rect: void scaleRoundIn(float)>
<android.telephony.ServiceState: void setCdmaEriIconMode(int)>
<android.media.MediaExtractor: void setDataSource(android.media.DataSource)>
<com.google.android.gles_jni.GLImpl: void glTexGenf(int,int,float)>
<android.os.PowerManager: boolean isInteractive()>
<android.app.ActivityManagerProxy: android.app.IActivityManager.ContentProviderHolder getContentProvider(android.app.IApplicationThread,java.lang.String,int,boolean)>
<android.content.ContextWrapper: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<android.widget.ScrollBarDrawable: void setParameters(int,int,int,boolean)>
<android.hardware.Camera.Parameters: boolean isSmoothZoomSupported()>
<android.text.SpannableStringBuilder: void clearSpans()>
<android.animation.ValueAnimator: void start()>
<android.opengl.GLES30: void glBlitFramebuffer(int,int,int,int,int,int,int,int,int,int)>
<android.media.session.MediaSession.CallbackStub: void onNext()>
<android.accessibilityservice.IAccessibilityServiceConnection: boolean focusSearch(int,long,int,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,long)>
<android.app.admin.IDevicePolicyManager: boolean isActivePasswordSufficient(int)>
<android.content.ContentProviderOperation: android.content.ContentProviderOperation.Builder newAssertQuery(android.net.Uri)>
<android.app.FragmentBreadCrumbs.OnBreadCrumbClickListener: boolean onBreadCrumbClick(android.app.FragmentManager.BackStackEntry,int)>
<android.content.ContentValues: java.lang.Double getAsDouble(java.lang.String)>
<android.widget.TextView: boolean onTouchEvent(android.view.MotionEvent)>
<android.os.SystemProperties: int getInt(java.lang.String,int)>
<android.service.persistentdata.PersistentDataBlockManager: byte[] read()>
<android.graphics.SurfaceTexture.OnFrameAvailableListener: void onFrameAvailable(android.graphics.SurfaceTexture)>
<android.service.fingerprint.FingerprintManager: void startListening(android.service.fingerprint.FingerprintManagerReceiver)>
<android.media.AudioManager: int getMasterVolume()>
<android.net.UrlQuerySanitizer: boolean getAllowUnregisteredParamaters()>
<com.android.internal.view.menu.ListMenuItemView: void initialize(com.android.internal.view.menu.MenuItemImpl,int)>
<android.opengl.GLES10: void glTranslatef(float,float,float)>
<android.view.animation.BounceInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>
<android.media.SubtitleController: void registerRenderer(android.media.SubtitleController.Renderer)>
<android.media.MediaCodecInfo: android.media.MediaCodecInfo makeRegular()>
<android.os.Parcel: void writeBinderList(java.util.List)>
<android.speech.RecognitionListener: void onResults(android.os.Bundle)>
<android.net.VpnService: android.os.IBinder onBind(android.content.Intent)>
<android.widget.Switch: void <init>(android.content.Context)>
<android.hardware.Camera: android.hardware.Camera.Parameters getParametersCopy(android.hardware.Camera.Parameters)>
<android.hardware.hdmi.HdmiControlManager.HotplugEventListener: void onReceived(android.hardware.hdmi.HdmiHotplugEvent)>
<android.view.View: void setTag(java.lang.Object)>
<com.android.internal.backup.LocalTransport: long getCurrentRestoreSet()>
<android.database.sqlite.SQLiteDatabase: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,android.database.sqlite.SQLiteDatabase.CursorFactory,android.database.DatabaseErrorHandler)>
<android.widget.ZoomControls: void setIsZoomInEnabled(boolean)>
<android.filterpacks.imageproc.ToGrayFilter: void <init>(java.lang.String)>
<android.media.effect.EffectContext: android.media.effect.EffectFactory getFactory()>
<android.transition.Crossfade: void captureEndValues(android.transition.TransitionValues)>
<android.bluetooth.BluetoothGattService: boolean isAdvertisePreferred()>
<android.view.View: boolean getFitsSystemWindows()>
<android.bluetooth.BluetoothA2dp: boolean shouldSendVolumeKeys(android.bluetooth.BluetoothDevice)>
<com.android.internal.os.BaseCommand: void onShowUsage(java.io.PrintStream)>
<android.widget.DialerFilter: void <init>(android.content.Context,android.util.AttributeSet)>
<android.media.effect.effects.PosterizeEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>
<android.content.pm.PackageManager: void addPreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName)>
<android.view.TextureView.SurfaceTextureListener: void onSurfaceTextureUpdated(android.graphics.SurfaceTexture)>
<android.widget.EditText: void <init>(android.content.Context)>
<android.print.PrintDocumentInfo: java.lang.String getName()>
<android.app.Activity: boolean startActivityIfNeeded(android.content.Intent,int,android.os.Bundle)>
<com.android.internal.util.BitwiseOutputStream: void write(int,int)>
<android.util.MonthDisplayHelper: int getNumberOfDaysInMonth()>
<com.android.ims.ImsCallProfile: void setCallExtraBoolean(java.lang.String,boolean)>
<android.os.Trace: boolean isTagEnabled(long)>
<android.bluetooth.IBluetoothManager: android.bluetooth.IBluetooth registerAdapter(android.bluetooth.IBluetoothManagerCallback)>
<android.filterpacks.imageproc.DrawRectFilter: void setupPorts()>
<android.net.wifi.p2p.WifiP2pManager.PeerListListener: void onPeersAvailable(android.net.wifi.p2p.WifiP2pDeviceList)>
<com.android.internal.os.BatteryStatsImpl.Uid.Proc: long getSystemTime(int)>
<android.database.AbstractCursor: void copyStringToBuffer(int,android.database.CharArrayBuffer)>
<android.net.NetworkUtils: boolean bindProcessToNetwork(int)>
<android.location.GpsNavigationMessage: java.lang.String toString()>
<android.media.effect.SingleFilterEffect: void <init>(android.media.effect.EffectContext,java.lang.String,java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>
<android.telephony.SignalStrength: int getEvdoAsuLevel()>
<android.net.ConnectivityManager: android.net.LinkProperties getLinkProperties(int)>
<com.android.internal.widget.ActionBarContextView: void onDetachedFromWindow()>
<android.view.Window: void setOnWindowDismissedCallback(android.view.Window.OnWindowDismissedCallback)>
<android.opengl.GLES10: void glGenTextures(int,java.nio.IntBuffer)>
<android.security.AndroidKeyPairGenerator: void initialize(int,java.security.SecureRandom)>
<android.util.StateSet: int[] trimStateSet(int[],int)>
<android.text.SpannableStringBuilder: void setSpan(java.lang.Object,int,int,int)>
<android.content.ContentProvider: void setPathPermissions(android.content.pm.PathPermission[])>
<android.view.WindowManagerPolicy.PointerEventListener: void onPointerEvent(android.view.MotionEvent)>
<android.app.admin.IDevicePolicyManager: android.os.Bundle getApplicationRestrictions(android.content.ComponentName,java.lang.String)>
<android.view.ScaleGestureDetector: float getCurrentSpanY()>
<android.media.MediaPlayer: void setOnSeekCompleteListener(android.media.MediaPlayer.OnSeekCompleteListener)>
<android.media.session.MediaSessionManager: void addOnActiveSessionsChangedListener(android.media.session.MediaSessionManager.OnActiveSessionsChangedListener,android.content.ComponentName,android.os.Handler)>
<android.telecom.InCallService: void onPhoneCreated(android.telecom.Phone)>
<android.nfc.BeamShareData: void <init>(android.nfc.NdefMessage,android.net.Uri[],int)>
<android.text.util.Rfc822Token: void setComment(java.lang.String)>
<com.android.internal.app.ProcessStats.ServiceState: void setRestarting(boolean,int,long)>
<android.view.LayoutInflater: android.view.LayoutInflater cloneInContext(android.content.Context)>
<android.view.View.AttachInfo.Callbacks: boolean performHapticFeedback(int,boolean)>
<com.android.internal.widget.PointerLocationView: void onAttachedToWindow()>
<android.media.tv.ITvInputSessionCallback: void onContentAllowed()>
<android.graphics.RectF: void writeToParcel(android.os.Parcel,int)>
<android.widget.GridLayout: void setRowOrderPreserved(boolean)>
<android.app.IApplicationThread: void schedulePauseActivity(android.os.IBinder,boolean,boolean,int,boolean)>
<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>
<android.widget.AdapterView: void onLayout(boolean,int,int,int,int)>
<android.renderscript.FieldPacker: void addI8(android.renderscript.Byte4)>
<android.graphics.TemporaryBuffer: void recycle(char[])>
<android.widget.CursorTreeAdapter: void <init>(android.database.Cursor,android.content.Context)>
<android.graphics.drawable.BitmapDrawable: void setMipMap(boolean)>
<android.widget.TextView: android.text.method.MovementMethod getMovementMethod()>
<android.bluetooth.BluetoothActivityEnergyInfo: long getTimeStamp()>
<android.content.pm.PackageParser: android.content.pm.ApplicationInfo generateApplicationInfo(android.content.pm.PackageParser.Package,int,android.content.pm.PackageUserState)>
<android.content.pm.ApplicationInfo: java.lang.String getResourcePath()>
<android.filterfw.core.GLFrame: float[] getFloats()>
<android.text.LoginFilter: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>
<android.view.OrientationListener: void onSensorChanged(int,float[])>
<android.media.AudioManager: void startBluetoothSco()>
<android.content.pm.LauncherActivityInfo: int getApplicationFlags()>
<android.renderscript.Long2: android.renderscript.Long2 div(android.renderscript.Long2,long)>
<android.app.ListFragment: void setListAdapter(android.widget.ListAdapter)>
<android.view.RenderNode: void getInverseMatrix(android.graphics.Matrix)>
<com.android.internal.app.ResolverActivity: void onStop()>
<android.bluetooth.IBluetoothGatt: void clearServices(int)>
<android.widget.PopupWindow: void setContentView(android.view.View)>
<android.database.BulkCursorToCursorAdaptor: boolean onMove(int,int)>
<android.provider.DocumentsContract: boolean isDocumentUri(android.content.Context,android.net.Uri)>
<android.webkit.WebView: void resumeTimers()>
<android.telephony.CellSignalStrengthWcdma: int getAsuLevel()>
<android.filterfw.core.FilterFactory: void addFilterLibrary(java.lang.String)>
<android.net.DnsPinger: void cancelPings()>
<android.content.Context: java.io.File getFilesDir()>
<com.android.internal.view.menu.MenuView.ItemView: void setEnabled(boolean)>
<android.media.AudioManager: int registerAudioPolicy(android.media.audiopolicy.AudioPolicy)>
<android.opengl.GLES11Ext: void glPointParameterxOES(int,int)>
<android.telecom.Connection: void setStatusHints(android.telecom.StatusHints)>
<android.opengl.GLES31: void glGetBooleani_v(int,int,boolean[],int)>
<android.graphics.Paint: java.util.Locale getTextLocale()>
<android.widget.GridView: void onInitializeAccessibilityNodeInfoForItem(android.view.View,int,android.view.accessibility.AccessibilityNodeInfo)>
<android.app.admin.IDevicePolicyManager: void reportFailedPasswordAttempt(int)>
<android.service.dreams.DreamService: boolean dispatchTrackballEvent(android.view.MotionEvent)>
<android.renderscript.FieldPacker: void reset(int)>
<android.app.SearchableInfo: java.lang.String getSuggestSelection()>
<android.util.Base64InputStream: void close()>
<android.text.style.ForegroundColorSpan: void writeToParcel(android.os.Parcel,int)>
<android.view.inputmethod.InputMethodManager: boolean isAcceptingText()>
<android.app.ApplicationErrorReport.RunningServiceInfo: void writeToParcel(android.os.Parcel,int)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,int[])>
<android.app.KeyguardManager: boolean isKeyguardLocked()>
<android.telephony.TelephonyManager: java.lang.String getCdmaEriText()>
<android.net.http.Headers: java.util.ArrayList getSetCookie()>
<android.util.NtpTrustedTime: long getCacheAge()>
<android.print.PrintAttributes: void setMediaSize(android.print.PrintAttributes.MediaSize)>
<android.content.ContentQueryMap: void requery()>
<android.printservice.PrintJob: boolean isCompleted()>
<android.filterpacks.imageproc.ToRGBAFilter: void <init>(java.lang.String)>
<android.net.wifi.WifiEnterpriseConfig: void setIdentity(java.lang.String)>
<android.net.http.ErrorStrings: int getResource(int)>
<android.nfc.INfcAdapter: boolean isNdefPushEnabled()>
<android.view.MotionEvent: float getHistoricalTouchMajor(int)>
<android.media.AudioService: boolean registerRemoteController(android.media.IRemoteControlDisplay,int,int,android.content.ComponentName)>
<android.net.ConnectivityManager.NetworkCallback: void onLosing(android.net.Network,int)>
<android.widget.ActionMenuView: void setPopupTheme(int)>
<android.net.INetworkManagementEventObserver: void interfaceAdded(java.lang.String)>
<com.android.internal.app.AlertActivity: void cancel()>
<android.view.InputEvent: android.view.InputDevice getDevice()>
<android.net.NetworkStats: android.net.NetworkStats.Entry getTotal(android.net.NetworkStats.Entry,java.util.HashSet)>
<android.view.inputmethod.InputMethodInfo: boolean equals(java.lang.Object)>
<android.media.MediaMetadata.Builder: void <init>(android.media.MediaMetadata)>
<android.view.WindowManagerPolicy: void showGlobalActions()>
<android.graphics.Bitmap: void eraseColor(int)>
<android.service.textservice.SpellCheckerService.Session: android.view.textservice.SentenceSuggestionsInfo[] onGetSentenceSuggestionsMultiple(android.view.textservice.TextInfo[],int)>
<android.view.KeyEvent: boolean isWakeKey(int)>
<com.android.internal.os.BatteryStatsImpl: boolean isScreenOn()>
<android.content.DefaultDataHandler: void endElement(java.lang.String,java.lang.String,java.lang.String)>
<android.preference.Preference: void saveHierarchyState(android.os.Bundle)>
<android.net.Uri: java.lang.String getAuthority()>
<android.telephony.PhoneStateListener: void onSignalStrengthsChanged(android.telephony.SignalStrength)>
<android.graphics.CanvasProperty: android.graphics.CanvasProperty createPaint(android.graphics.Paint)>
<android.opengl.GLES11: void glTexEnviv(int,int,int[],int)>
<com.android.internal.app.WindowDecorActionBar.ActionModeImpl: void invalidate()>
<android.content.pm.LauncherApps: void unregisterCallback(android.content.pm.LauncherApps.Callback)>
<android.hardware.camera2.TotalCaptureResult: java.util.List getPartialResults()>
<android.view.accessibility.AccessibilityNodeInfo: void setError(java.lang.CharSequence)>
<com.google.android.gles_jni.GLImpl: void glDrawTexxvOES(java.nio.IntBuffer)>
<android.content.pm.ContainerEncryptionParams: int describeContents()>
<android.graphics.Canvas: void drawBitmap(int[],int,int,float,float,int,int,boolean,android.graphics.Paint)>
<android.net.NetworkStateTracker: boolean reconnect()>
<android.view.ViewDebug: void profileViewAndChildren(android.view.View,java.io.BufferedWriter)>
<android.media.AudioTrack: int getChannelCount()>
<android.app.admin.IDevicePolicyManager: void addCrossProfileIntentFilter(android.content.ComponentName,android.content.IntentFilter,int)>
<android.widget.SimpleAdapter: void setViewImage(android.widget.ImageView,int)>
<android.net.wifi.WifiManager.WifiLock: boolean isHeld()>
<android.hardware.camera2.legacy.ParameterUtils.WeightedRectangle: android.hardware.camera2.params.Face toFace()>
<android.media.ExifInterface: java.lang.String getAttribute(java.lang.String)>
<android.app.backup.BackupHelper: void restoreEntity(android.app.backup.BackupDataInputStream)>
<android.preference.VolumePreference: android.os.Parcelable onSaveInstanceState()>
<android.opengl.GLES20: void glShaderBinary(int,int[],int,int,java.nio.Buffer,int)>
<android.graphics.Matrix: void setValues(float[])>
<android.widget.Spinner: void onClick(android.content.DialogInterface,int)>
<android.view.Window: android.transition.Transition getExitTransition()>
<com.android.internal.os.BatteryStatsImpl.Counter: void onTimeStopped(long,long,long)>
<com.android.internal.view.InputConnectionWrapper: boolean deleteSurroundingText(int,int)>
<com.android.internal.widget.DecorToolbar: boolean hasExpandedActionView()>
<android.opengl.GLES31: void glProgramUniformMatrix3x2fv(int,int,int,boolean,java.nio.FloatBuffer)>
<android.media.Rating: boolean hasHeart()>
<android.opengl.GLES31: boolean glIsProgramPipeline(int)>
<com.android.internal.telephony.ISms: void updateSmsSendStatus(int,boolean)>
<android.database.CursorWindow: double getDouble(int,int)>
<android.widget.TextView: boolean getShowSoftInputOnFocus()>
<android.os.Bundle: void putCharSequence(java.lang.String,java.lang.CharSequence)>
<android.content.Context: java.lang.String getPackageResourcePath()>
<android.media.AudioPatch: android.media.AudioPortConfig[] sources()>
<android.media.audiofx.Equalizer: short getBandLevel(short)>
<android.print.PrintJobInfo: int getAppId()>
<android.telecom.Connection: void onConferenceWith(android.telecom.Connection)>
<android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener: void onGetSuggestions(android.view.textservice.SuggestionsInfo[])>
<android.os.storage.StorageManager: boolean unmountObb(java.lang.String,boolean,android.os.storage.OnObbStateChangeListener)>
<com.android.internal.app.IAppOpsService: void finishOperation(android.os.IBinder,int,int,java.lang.String)>
<android.media.AudioAttributes.Builder: android.media.AudioAttributes.Builder setFlags(int)>
<com.google.android.gles_jni.GLImpl: void glBindFramebufferOES(int,int)>
<android.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View.OnFocusChangeListener)>
<android.net.Uri.Builder: android.net.Uri.Builder encodedAuthority(java.lang.String)>
<android.print.PrintDocumentAdapter.LayoutResultCallback: void onLayoutFailed(java.lang.CharSequence)>
<android.drm.DrmInfo: int getInfoType()>
<com.android.internal.view.IInputMethodManager: java.util.List getShortcutInputMethodsAndSubtypes()>
<android.graphics.Bitmap: int getScaledHeight(int)>
<android.print.IPrintManager: void startPrinterStateTracking(android.print.PrinterId,int)>
<android.media.MediaMuxer: void start()>
<android.os.IUserManager: void setUserEnabled(int)>
<android.view.textservice.SpellCheckerInfo: void writeToParcel(android.os.Parcel,int)>
<android.webkit.WebSettings: boolean getPluginsEnabled()>
<android.view.View: boolean requestFocus(int)>
<android.widget.CursorAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>
<android.transition.Visibility: android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>
<android.text.BidiFormatter: java.lang.String unicodeWrap(java.lang.String,boolean)>
<android.net.http.Headers: int getConnectionType()>
<android.appwidget.AppWidgetHostView: void <init>(android.content.Context)>
<android.view.KeyEvent: boolean isCanceled()>
<android.os.storage.StorageManager: android.os.storage.StorageVolume[] getVolumeList()>
<android.view.InputFilter: void filterInputEvent(android.view.InputEvent,int)>
<android.telecom.Call.Details: int getCallCapabilities()>
<android.renderscript.Type.Builder: android.renderscript.Type.Builder setFaces(boolean)>
<android.app.ActivityOptions: void <init>(android.os.Bundle)>
<android.service.dreams.DreamService: void onWindowFocusChanged(boolean)>
<android.location.LocationRequest: void setHideFromAppOps(boolean)>
<android.hardware.display.WifiDisplay: boolean hasSameAddress(android.hardware.display.WifiDisplay)>
<android.app.WallpaperManager: android.content.ComponentName getDefaultWallpaperComponent(android.content.Context)>
<android.content.RestrictionEntry: void <init>(java.lang.String,boolean)>
<android.media.tv.TvInputService.Session: boolean onKeyMultiple(int,int,android.view.KeyEvent)>
<android.content.Loader: void unregisterOnLoadCanceledListener(android.content.Loader.OnLoadCanceledListener)>
<android.provider.ContactsContract.CommonDataKinds.Event: int getTypeResource(java.lang.Integer)>
<com.android.internal.os.BatteryStatsImpl: void readFromParcel(android.os.Parcel)>
<com.android.internal.telecom.RemoteServiceCallback: void onResult(java.util.List,java.util.List)>
<android.transition.TransitionSet: android.transition.TransitionSet removeTarget(int)>
<android.view.animation.Animation: boolean getTransformation(long,android.view.animation.Transformation,float)>
<android.net.wifi.WifiNetworkConnectionStatistics: int describeContents()>
<android.media.session.MediaSession: void setPlaybackState(android.media.session.PlaybackState)>
<android.view.inputmethod.InputMethodManager: void restartInput(android.view.View)>
<android.telephony.TelephonyManager: int getDataNetworkType()>
<android.media.ToneGenerator: boolean startTone(int,int)>
<android.print.IPrintDocumentAdapterObserver: void onDestroy()>
<android.content.pm.PackageManager: void replacePreferredActivityAsUser(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,int)>
<android.filterfw.core.ShaderProgram: void setAttributeValues(java.lang.String,float[],int)>
<android.renderscript.Element: android.renderscript.Element U8_4(android.renderscript.RenderScript)>
<android.content.pm.PackageManager: void clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver)>
<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int,int)>
<android.text.style.DrawableMarginSpan: void <init>(android.graphics.drawable.Drawable,int)>
<android.util.EventLog.Event: long getTimeNanos()>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor[] createReliableSocketPair()>
<android.hardware.camera2.impl.CameraCaptureSessionImpl: int setRepeatingBurst(java.util.List,android.hardware.camera2.CameraCaptureSession.CaptureCallback,android.os.Handler)>
<android.net.NetworkInfo: void setFailover(boolean)>
<android.view.View: boolean isRootNamespace()>
<android.content.IntentFilter: void dump(android.util.Printer,java.lang.String)>
<android.widget.StackView: boolean onGenericMotionEvent(android.view.MotionEvent)>
<android.app.Instrumentation: void sendPointerSync(android.view.MotionEvent)>
<android.hardware.location.IFusedLocationHardware: boolean supportsDiagnosticDataInjection()>
<android.graphics.drawable.RotateDrawable: android.graphics.drawable.Drawable getDrawable()>
<android.bluetooth.BluetoothGatt: boolean executeReliableWrite()>
<android.service.voice.AlwaysOnHotwordDetector.Callback: void onRecognitionPaused()>
<android.telephony.TelephonyManager: boolean isOffhook()>
<android.hardware.camera2.impl.CameraDeviceImpl.FrameNumberTracker: java.util.List popPartialResults(long)>
<android.app.Activity: android.view.WindowManager getWindowManager()>
<android.renderscript.RenderScript.RSMessageHandler: void run()>
<android.database.sqlite.SQLiteQueryBuilder: java.lang.String buildUnionSubQuery(java.lang.String,java.lang.String[],java.util.Set,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.app.Fragment: android.app.FragmentManager getFragmentManager()>
<android.media.RemoteControlClient.OnPlaybackPositionUpdateListener: void onPlaybackPositionUpdate(long)>
<android.app.ActivityManager: android.util.Size getAppTaskThumbnailSize()>
<android.widget.StackView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<android.filterfw.core.FieldPort: void setFieldFrame(android.filterfw.core.Frame,boolean)>
<android.media.tv.TvInputManager.Hardware: void setStreamVolume(float)>
<android.renderscript.Long3: void mod(android.renderscript.Long3)>
<android.preference.PreferenceFragment: android.preference.PreferenceManager getPreferenceManager()>
<android.widget.Switch: android.graphics.drawable.Drawable getThumbDrawable()>
<android.webkit.WebChromeClient: void onReachedMaxAppCacheSize(long,long,android.webkit.WebStorage.QuotaUpdater)>
<android.widget.TextView: android.content.res.ColorStateList getHintTextColors()>
<android.opengl.GLES20: void glVertexAttrib4fv(int,float[],int)>
<android.renderscript.Long3: void addMultiple(android.renderscript.Long3,long)>
<android.renderscript.Float3: java.lang.Float elementSum()>
<com.android.internal.content.PackageMonitor: void register(android.content.Context,android.os.Looper,android.os.UserHandle,boolean)>
<android.content.Context: boolean stopService(android.content.Intent)>
<android.bluetooth.BluetoothGattServer: boolean removeService(android.bluetooth.BluetoothGattService)>
<android.view.View: boolean hasFocusable()>
<android.widget.Gallery: void setGravity(int)>
<android.media.tv.TvContract: android.net.Uri buildChannelsUriForInput(java.lang.String)>
<android.bluetooth.le.ScanSettings: int getCallbackType()>
<android.app.IActivityManager.ContentProviderHolder: void <init>(android.content.pm.ProviderInfo)>
<android.animation.LayoutTransition: void removeTransitionListener(android.animation.LayoutTransition.TransitionListener)>
<android.webkit.WebView: boolean onKeyMultiple(int,int,android.view.KeyEvent)>
<android.app.admin.DevicePolicyManager: void setActiveAdmin(android.content.ComponentName,boolean)>
<android.os.StrictMode: boolean vmFileUriExposureEnabled()>
<com.android.internal.os.HandlerCaller: android.os.Message obtainMessageBOO(int,boolean,java.lang.Object,java.lang.Object)>
<android.view.ViewGroup: boolean addViewInLayout(android.view.View,int,android.view.ViewGroup.LayoutParams,boolean)>
<android.filterfw.io.TextGraphReader: android.filterfw.core.FilterGraph readGraphString(java.lang.String)>
<android.view.ViewGroup.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<android.net.nsd.NsdManager: void resolveService(android.net.nsd.NsdServiceInfo,android.net.nsd.NsdManager.ResolveListener)>
<android.view.WindowManagerPolicy: int interceptMotionBeforeQueueingNonInteractive(long,int)>
<android.webkit.JsPromptResult: void confirm(java.lang.String)>
<android.text.style.TtsSpan.MeasureBuilder: android.text.style.TtsSpan.MeasureBuilder setFractionalPart(java.lang.String)>
<android.app.ExpandableListActivity: void onGroupExpand(int)>
<android.text.style.TtsSpan.ElectronicBuilder: android.text.style.TtsSpan.ElectronicBuilder setPassword(java.lang.String)>
<android.app.PendingIntent: void send(android.content.Context,int,android.content.Intent,android.app.PendingIntent.OnFinished,android.os.Handler,java.lang.String)>
<android.app.admin.IDevicePolicyManager: void setPasswordMinimumLength(android.content.ComponentName,int,int)>
<com.google.android.gles_jni.GLImpl: int glCheckFramebufferStatusOES(int)>
<android.webkit.WebViewProvider.ViewDelegate: void onStartTemporaryDetach()>
<android.app.SearchableInfo: int getSettingsDescriptionId()>
<android.text.style.EasyEditSpan: void writeToParcel(android.os.Parcel,int)>
<android.database.DatabaseUtils.InsertHelper: void prepareForInsert()>
<android.webkit.CacheManager.CacheResult: java.lang.String getLocalPath()>
<android.bluetooth.IBluetoothHeadsetClient: android.os.Bundle getCurrentAgEvents(android.bluetooth.BluetoothDevice)>
<android.location.GpsMeasurement: double getCarrierPhaseUncertainty()>
<android.hardware.location.GeofenceHardwareRequestParcelable: int getLastTransition()>
<com.android.internal.util.StateMachine: void sendMessageAtFrontOfQueue(int)>
<android.view.ViewRootImpl: android.view.AccessibilityInteractionController getAccessibilityInteractionController()>
<android.media.audiopolicy.AudioPolicy.Builder: android.media.audiopolicy.AudioPolicy.Builder addMix(android.media.audiopolicy.AudioMix)>
<android.text.style.SuggestionSpan: void <init>(java.util.Locale,java.lang.String[],int)>
<android.renderscript.ScriptIntrinsicYuvToRGB: void forEach(android.renderscript.Allocation)>
<android.hardware.hdmi.IHdmiControlService: void startOneTouchRecord(int,byte[])>
<android.content.ContextWrapper: android.graphics.drawable.Drawable peekWallpaper()>
<android.widget.PopupWindow: void <init>(android.view.View)>
<android.view.animation.Animation: boolean getFillBefore()>
<android.webkit.CacheManager.CacheResult: java.lang.String getEncoding()>
<android.print.PrinterId: java.lang.String getLocalId()>
<android.gesture.GestureStore: void setSequenceType(int)>
<android.media.MediaScanner: void scanMtpFile(java.lang.String,java.lang.String,int,int)>
<android.view.Menu: void close()>
<android.telephony.Rlog: int d(java.lang.String,java.lang.String,java.lang.Throwable)>
<android.graphics.drawable.NinePatchDrawable: android.graphics.Region getTransparentRegion()>
<android.app.Service: void stopSelf(int)>
<android.app.Activity: void setDefaultKeyMode(int)>
<android.util.Pair: void <init>(java.lang.Object,java.lang.Object)>
<android.print.PrintDocumentAdapter: void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter.WriteResultCallback)>
<android.app.IActivityManager: void takePersistableUriPermission(android.net.Uri,int,int)>
<com.android.internal.app.IBatteryStats: void noteUserActivity(int,int)>
<android.app.TimePickerDialog: void onRestoreInstanceState(android.os.Bundle)>
<android.media.tv.ITvInputManager: void unregisterCallback(android.media.tv.ITvInputManagerCallback,int)>
<android.net.wifi.p2p.WifiP2pManager: void clearLocalServices(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ActionListener)>
<android.database.AbstractCursor: boolean moveToPrevious()>
<android.widget.BaseAdapter: boolean isEmpty()>
<android.drm.DrmManagerClient: void setOnInfoListener(android.drm.DrmManagerClient.OnInfoListener)>
<android.bluetooth.le.AdvertiseSettings: void writeToParcel(android.os.Parcel,int)>
<android.content.Intent: java.util.ArrayList getCharSequenceArrayListExtra(java.lang.String)>
<android.content.Loader: void unregisterListener(android.content.Loader.OnLoadCompleteListener)>
<android.app.Activity: void onPostResume()>
<android.util.SparseIntArray: int get(int,int)>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getApplicationIcon(java.lang.String)>
<android.app.Fragment: void onHiddenChanged(boolean)>
<android.widget.FrameLayout: android.graphics.PorterDuff.Mode getForegroundTintMode()>
<android.text.method.BaseMovementMethod: boolean scrollPageUp(android.widget.TextView,android.text.Spannable)>
<android.net.wifi.WifiManager: boolean isAdditionalStaSupported()>
<android.text.HtmlToSpannedConverter: void skippedEntity(java.lang.String)>
<android.os.INetworkManagementService: void disableNat(java.lang.String,java.lang.String)>
<android.service.dreams.DreamService: void setContentView(android.view.View,android.view.ViewGroup.LayoutParams)>
<android.filterfw.io.PatternScanner: int lineNo()>
<android.widget.Gallery: boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float)>
<android.app.ListActivity: long getSelectedItemId()>
<android.media.MediaPlayer: void setAudioStreamType(int)>
<android.renderscript.Allocation: android.renderscript.Allocation createTyped(android.renderscript.RenderScript,android.renderscript.Type,int)>
<android.renderscript.Byte2: void sub(android.renderscript.Byte2)>
<android.ddm.DdmHandleHeap: void register()>
<android.media.session.PlaybackState.Builder: android.media.session.PlaybackState.Builder addCustomAction(android.media.session.PlaybackState.CustomAction)>
<android.filterpacks.videosrc.SurfaceTextureSource.SurfaceTextureSourceListener: void onSurfaceTextureSourceReady(android.graphics.SurfaceTexture)>
<android.view.animation.AccelerateInterpolator: long createNativeInterpolator()>
<com.android.internal.app.IBatteryStats: void noteWifiMulticastEnabled(int)>
<android.view.ViewParent: boolean isTextDirectionResolved()>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getUserBadgedDrawableForDensity(android.graphics.drawable.Drawable,android.os.UserHandle,android.graphics.Rect,int)>
<android.nfc.NfcAdapter: void setBeamPushUris(android.net.Uri[],android.app.Activity)>
<android.content.ContextWrapper: android.graphics.drawable.Drawable getWallpaper()>
<android.os.Parcel: java.lang.Object[] readArray(java.lang.ClassLoader)>
<android.net.NetworkCapabilities: int getLinkDownstreamBandwidthKbps()>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getSpaceLegal()>
<android.hardware.camera2.impl.CameraMetadataNative: void writeToParcel(android.os.Parcel,int)>
<android.media.audiofx.AudioEffect: boolean isEffectTypeAvailable(java.util.UUID)>
<android.view.View: boolean isSoundEffectsEnabled()>
<android.media.tv.TvInputInfo: boolean equals(java.lang.Object)>
<android.media.RemoteDisplayState.RemoteDisplayInfo: void <init>(android.media.RemoteDisplayState.RemoteDisplayInfo)>
<com.android.internal.view.menu.ContextMenuBuilder: void <init>(android.content.Context)>
<android.transition.Scene: void <init>(android.view.ViewGroup,android.view.ViewGroup)>
<android.media.AudioPort: java.lang.String toString()>
<android.service.dreams.DreamManagerInternal: void stopDream(boolean)>
<android.filterfw.core.ShaderProgram: void setSourceRegion(android.filterfw.geometry.Quad)>
<android.view.accessibility.AccessibilityRecord: void setEnabled(boolean)>
<com.android.internal.view.IInputContext: void setSelection(int,int)>
<android.animation.ValueAnimator: int getCurrentAnimationsCount()>
<android.os.Debug: void resetGlobalClassInitCount()>
<android.graphics.drawable.LayerDrawable: void setPaddingMode(int)>
<android.hardware.camera2.params.Face: android.graphics.Point getRightEyePosition()>
<android.filterfw.io.PatternScanner: java.lang.String unexpectedTokenMessage(java.lang.String)>
<android.media.MediaCodecInfo: java.lang.String getName()>
<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>
<android.view.WindowManagerPolicy: long interceptKeyBeforeDispatching(android.view.WindowManagerPolicy.WindowState,android.view.KeyEvent,int)>
<android.widget.ListView: void addHeaderView(android.view.View)>
<android.bluetooth.le.AdvertiseCallback: void onStartSuccess(android.bluetooth.le.AdvertiseSettings)>
<android.provider.ContactsContract.Contacts.AggregationSuggestions: android.provider.ContactsContract.Contacts.AggregationSuggestions.Builder builder()>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle getAccountRemovalAllowed(android.accounts.AccountAuthenticatorResponse,android.accounts.Account)>
<android.opengl.GLSurfaceView: void setRenderMode(int)>
<android.filterfw.core.FilterContext: android.filterfw.core.FrameManager getFrameManager()>
<com.google.android.gles_jni.GLImpl: void glNormal3x(int,int,int)>
<android.view.accessibility.AccessibilityNodeInfo: boolean isEditable()>
<android.net.LocalSocketAddress: java.lang.String getName()>
<android.renderscript.ProgramStore: boolean isColorMaskAlphaEnabled()>
<android.text.BoringLayout: android.text.BoringLayout replaceOrMake(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,android.text.BoringLayout.Metrics,boolean)>
<android.media.AudioTrack: void setState(int)>
<android.telephony.ServiceState: java.lang.String getOperatorNumeric()>
<android.telephony.SignalStrength: int getLteLevel()>
<android.view.inputmethod.SparseRectFArray.SparseRectFArrayBuilder: boolean isEmpty()>
<android.net.BaseNetworkStateTracker: void dispatchStateChanged()>
<android.filterpacks.ui.SurfaceTargetFilter: void updateRenderMode()>
<android.app.FragmentManagerImpl: void dispatchStop()>
<com.google.android.util.AbstractMessageParser: java.lang.String getRawText()>
<android.app.backup.IBackupManager: boolean setBackupPassword(java.lang.String,java.lang.String)>
<com.android.internal.view.menu.MenuBuilder: boolean expandItemActionView(com.android.internal.view.menu.MenuItemImpl)>
<android.hardware.display.DisplayManagerGlobal: void connectWifiDisplay(java.lang.String)>
<com.android.internal.view.menu.MenuBuilder.ItemInvoker: boolean invokeItem(com.android.internal.view.menu.MenuItemImpl)>
<android.widget.CalendarView: void setWeekDayTextAppearance(int)>
<com.android.internal.widget.AutoScrollHelper: com.android.internal.widget.AutoScrollHelper setEdgeType(int)>
<android.telecom.Connection: int getVideoState()>
<com.android.internal.view.menu.ListMenuPresenter: boolean collapseItemActionView(com.android.internal.view.menu.MenuBuilder,com.android.internal.view.menu.MenuItemImpl)>
<android.app.IUiAutomationConnection: boolean setRotation(int)>
<com.android.internal.view.menu.MenuItemImpl: boolean hasCollapsibleActionView()>
<android.net.wifi.BatchedScanSettings: void clear()>
<android.filterpacks.base.FrameSource: void process(android.filterfw.core.FilterContext)>
<android.widget.TextView: void setText(int,android.widget.TextView.BufferType)>
<android.os.BatteryStats: long getWifiOnTime(long,int)>
<android.bluetooth.BluetoothSocket: void connect()>
<android.hardware.usb.UsbDevice: java.lang.String toString()>
<com.android.internal.widget.DecorToolbar: void setNavigationIcon(int)>
<android.text.style.AlignmentSpan.Standard: android.text.Layout.Alignment getAlignment()>
<android.graphics.drawable.AnimationDrawable: int getDuration(int)>
<android.os.BatteryStats: void dumpCheckinLocked(android.content.Context,java.io.PrintWriter,java.util.List,int,long)>
<android.preference.MultiSelectListPreference: java.lang.CharSequence[] getEntries()>
<android.content.pm.PackageInfoLite: java.lang.String toString()>
<android.view.View: android.view.View findViewWithTagTraversal(java.lang.Object)>
<android.widget.AdapterView.AdapterContextMenuInfo: void <init>(android.view.View,int,long)>
<android.hardware.camera2.legacy.RequestHandlerThread: boolean hasAnyMessages(int[])>
<android.hardware.location.IFusedLocationHardware: void registerSink(android.hardware.location.IFusedLocationHardwareSink)>
<android.telephony.CellInfoGsm: int describeContents()>
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setShortcut(char,char)>
<android.database.sqlite.SQLiteDatabase: void finalize()>
<android.widget.AbsSeekBar: void onDraw(android.graphics.Canvas)>
<android.net.LinkProperties: java.util.List getLinkAddresses()>
<android.provider.MediaStore.Audio.Genres: android.net.Uri getContentUriForAudioId(java.lang.String,int)>
<com.android.internal.app.IBatteryStats: void notePhoneSignalStrength(android.telephony.SignalStrength)>
<android.app.TaskStackBuilder: android.content.Intent[] getIntents()>
<android.os.Process: int[] getPidsForCommands(java.lang.String[])>
<android.graphics.drawable.InsetDrawable: void setTintList(android.content.res.ColorStateList)>
<android.bluetooth.le.BluetoothLeScanner: void flushPendingScanResults(android.bluetooth.le.ScanCallback)>
<android.view.Window: int getLocalFeatures()>
<android.database.sqlite.SQLiteDatabase: void beginTransaction()>
<android.hardware.camera2.legacy.CameraDeviceUserShim: int flush(android.hardware.camera2.utils.LongParcelable)>
<android.net.BaseNetworkStateTracker: void stopSampling(android.net.SamplingDataTracker.SamplingSnapshot)>
<com.android.internal.widget.DecorContentParent: void setWindowTitle(java.lang.CharSequence)>
<android.widget.ImageView: void setSelected(boolean)>
<android.view.ViewRootImpl: boolean onNestedFling(android.view.View,float,float,boolean)>
<android.widget.ExpandableListView: void setOnChildClickListener(android.widget.ExpandableListView.OnChildClickListener)>
<android.media.MediaCodec: int dequeueInputBuffer(long)>
<android.graphics.drawable.GradientDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>
<com.android.internal.os.InstallerConnection: void disconnect()>
<android.filterfw.core.SimpleFrame: java.nio.ByteBuffer getData()>
<android.view.Menu: int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[])>
<android.renderscript.FieldPacker: void addU64(android.renderscript.Long4)>
<com.android.internal.http.multipart.Part: void sendTransferEncodingHeader(java.io.OutputStream)>
<com.android.internal.statusbar.StatusBarIconList: void writeToParcel(android.os.Parcel,int)>
<android.renderscript.ScriptIntrinsicResize: android.renderscript.ScriptIntrinsicResize create(android.renderscript.RenderScript)>
<com.google.android.gles_jni.EGLContextImpl: javax.microedition.khronos.opengles.GL getGL()>
<android.preference.PreferenceActivity: void onListItemClick(android.widget.ListView,android.view.View,int,long)>
<android.view.Surface: java.lang.String toString()>
<android.opengl.GLES30: void glClearBufferuiv(int,int,int[],int)>
<android.filterpacks.imageproc.ColorTemperatureFilter: void initProgram(android.filterfw.core.FilterContext,int)>
<android.media.session.ISessionController: void seekTo(long)>
<android.telecom.PhoneAccount: int describeContents()>
<android.widget.RemoteViewsAdapter: int getItemViewType(int)>
<android.telephony.SignalStrength: void writeToParcel(android.os.Parcel,int)>
<android.media.tv.TvTrackInfo.Builder: android.media.tv.TvTrackInfo.Builder setExtra(android.os.Bundle)>
<com.android.internal.widget.multiwaveview.TargetDrawable: void setX(float)>
<android.os.IPowerManager: void setTemporaryScreenAutoBrightnessAdjustmentSettingOverride(float)>
<com.android.internal.widget.LockPatternView.Cell: java.lang.String toString()>
<android.filterpacks.imageproc.ToRGBAFilter: android.filterfw.core.FrameFormat getConvertedFormat(android.filterfw.core.FrameFormat)>
<com.android.ims.internal.IImsUtListener: void utConfigurationUpdateFailed(com.android.ims.internal.IImsUt,int,com.android.ims.ImsReasonInfo)>
<com.android.internal.app.WindowDecorActionBar: void setIcon(int)>
<android.bluetooth.IBluetoothPan: boolean isTetheringOn()>
<com.android.internal.os.InstallerConnection: int patchoat(java.lang.String,int,boolean,java.lang.String,java.lang.String)>
<android.renderscript.Double2: void copyTo(double[],int)>
<android.os.Process: int getUidForPid(int)>
<android.app.trust.TrustManager.TrustListener: void onTrustManagedChanged(boolean,int)>
<android.graphics.drawable.RippleDrawable: void setColorFilter(android.graphics.ColorFilter)>
<android.media.tv.TvTrackInfo.Builder: android.media.tv.TvTrackInfo.Builder setVideoHeight(int)>
<android.net.NetworkRequest: boolean equals(java.lang.Object)>
<android.bluetooth.BluetoothPan: boolean isTetheringOn()>
<android.view.SurfaceControl: void setMatrix(float,float,float,float)>
<android.content.ClipData: android.content.ClipData newRawUri(java.lang.CharSequence,android.net.Uri)>
<android.app.ActivityManagerProxy: long[] getProcessPss(int[])>
<android.animation.ValueAnimator: void setFloatValues(float[])>
<android.os.FileUtils: void stringToFile(java.lang.String,java.lang.String)>
<android.accounts.AccountManagerResponse: void <init>(android.os.Parcel)>
<android.filterfw.core.VertexFrame: void releaseNativeAllocation()>
<android.renderscript.Matrix3f: void rotate(float,float,float,float)>
<android.telephony.TelephonyManager: int hasCarrierPrivileges()>
<android.widget.ZoomControls: boolean onTouchEvent(android.view.MotionEvent)>
<android.app.RemoteInput: java.lang.CharSequence getLabel()>
<android.speech.RecognitionService.Callback: void partialResults(android.os.Bundle)>
<android.media.AudioManager: void setStreamMute(int,boolean)>
<com.android.internal.os.BatteryStatsImpl: long getProcessWakeTime(int,int,long)>
<android.net.LinkProperties: java.util.List getAllAddresses()>
<android.app.IActivityManager: void setUserIsMonkey(boolean)>
<android.media.MediaCodecInfo.VideoCapabilities: android.media.MediaCodecInfo.VideoCapabilities create(android.media.MediaFormat,android.media.MediaCodecInfo.CodecCapabilities)>
<android.graphics.drawable.DrawableContainer: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>
<android.widget.LinearLayout.LayoutParams: void <init>(int,int)>
<android.content.pm.PackageManager: android.graphics.drawable.Drawable getApplicationBanner(java.lang.String)>
<android.os.PowerManager: void wakeUp(long)>
<android.widget.StackView: boolean onTouchEvent(android.view.MotionEvent)>
<android.preference.PreferenceGroup: void <init>(android.content.Context,android.util.AttributeSet)>
<android.webkit.WebView: void setWebChromeClient(android.webkit.WebChromeClient)>
<android.view.GestureDetector.SimpleOnGestureListener: boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float)>
<com.android.internal.widget.ToolbarWidgetWrapper: void setLogo(int)>
<android.filterpacks.base.FrameSource: void <init>(java.lang.String)>
<android.view.ViewGroup: void drawableStateChanged()>
<com.android.internal.app.WindowDecorActionBar: void addTab(android.app.ActionBar.Tab)>
<android.media.audiofx.Equalizer: android.media.audiofx.Equalizer.Settings getProperties()>
<com.android.internal.net.VpnProfile: byte[] encode()>
<android.os.INetworkManagementService: void detachPppd(java.lang.String)>
<android.os.StrictMode: void onVmPolicyViolation(java.lang.String,java.lang.Throwable)>
<android.filterpacks.videoproc.BackDropperFilter.LearningDoneListener: void onLearningDone(android.filterpacks.videoproc.BackDropperFilter)>
<com.android.internal.util.ImageUtils: boolean isGrayscale(int)>
<android.app.IActivityManager: boolean convertToTranslucent(android.os.IBinder,android.app.ActivityOptions)>
<android.text.format.DateFormat: java.text.DateFormat getLongDateFormat(android.content.Context)>
<android.renderscript.Short2: void <init>(short)>
<android.media.AudioService: void setMasterMute(boolean,int,java.lang.String,android.os.IBinder)>
<android.view.Surface: void readFromParcel(android.os.Parcel)>
<android.media.session.MediaSession: void sendSessionEvent(java.lang.String,android.os.Bundle)>
<android.content.IntentSender.SendIntentException: void <init>(java.lang.String)>
<android.print.PrintAttributes: void copyFrom(android.print.PrintAttributes)>
<com.android.internal.widget.ToolbarWidgetWrapper: boolean isSplit()>
<android.telecom.ParcelableCall: java.lang.String toString()>
<android.app.IActivityManager: void activityDestroyed(android.os.IBinder)>
<android.hardware.camera2.utils.ArrayUtils: int getArrayIndex(java.lang.Object[],java.lang.Object)>
<android.text.TextUtils.SimpleStringSplitter: java.lang.String next()>
<android.graphics.PointF: int hashCode()>
<android.hardware.soundtrigger.SoundTrigger.ModuleProperties: java.lang.String toString()>
<android.bluetooth.BluetoothGattCallbackWrapper: void onGetIncludedService(java.lang.String,int,int,android.os.ParcelUuid,int,int,android.os.ParcelUuid)>
<android.net.wifi.WifiLinkLayerStats: int describeContents()>
<android.net.NetworkAgent: void unwanted()>
<android.app.ListFragment: void setEmptyText(java.lang.CharSequence)>
<android.bluetooth.BluetoothHeadsetClientCall: java.lang.String toString()>
<android.renderscript.ScriptIntrinsicBlend: void forEachDstOut(android.renderscript.Allocation,android.renderscript.Allocation)>
<android.app.Activity: android.view.ActionMode startActionMode(android.view.ActionMode.Callback)>
<android.app.Application: void unregisterOnProvideAssistDataListener(android.app.Application.OnProvideAssistDataListener)>
<android.filterfw.core.FieldPort: android.filterfw.core.Frame pullFrame()>
<android.drm.DrmInfoEvent: void <init>(int,int,java.lang.String,java.util.HashMap)>
<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setActionView(android.view.View)>
<android.graphics.drawable.DrawableContainer: void jumpToCurrentState()>
<android.location.GpsClock: double getDriftUncertaintyInNsPerSec()>
<android.hardware.camera2.legacy.LegacyFaceDetectMapper: void mapResultFaces(android.hardware.camera2.impl.CameraMetadataNative,android.hardware.camera2.legacy.LegacyRequest)>
<android.media.Ringtone: android.media.AudioAttributes getAudioAttributes()>
<android.view.KeyCharacterMap: int describeContents()>
<android.widget.TextView: boolean onCheckIsTextEditor()>
<android.net.NetworkStats.Entry: boolean isEmpty()>
<android.net.Uri: java.lang.String encode(java.lang.String)>
<android.renderscript.Double4: void div(double)>
<android.app.ActivityManagerProxy: void activityResumed(android.os.IBinder)>
<android.view.View: void outputDirtyFlags(java.lang.String,boolean,int)>
<android.widget.SimpleAdapter: java.lang.Object getItem(int)>
<android.bluetooth.le.TruncatedFilter: void <init>(android.bluetooth.le.ScanFilter,java.util.List)>
<android.opengl.GLES10: void glGenTextures(int,int[],int)>
<android.gesture.Gesture: int getStrokesCount()>
<android.app.ActivityManagerProxy: void setProcessForeground(android.os.IBinder,int,boolean)>
<android.service.trust.TrustAgentService: void setManagingTrust(boolean)>
<android.hardware.usb.UsbDeviceConnection: android.hardware.usb.UsbRequest requestWait()>
<android.graphics.NinePatch: android.graphics.Paint getPaint()>
<android.os.storage.IMountService: int formatVolume(java.lang.String)>
<android.app.IActivityManager: int stopUser(int,android.app.IStopUserCallback)>
<android.hardware.soundtrigger.IRecognitionStatusCallback: void onRecognitionPaused()>
<android.media.AudioPortConfig: java.lang.String toString()>
<android.app.backup.BackupAgent: void fullBackupFileTree(java.lang.String,java.lang.String,java.lang.String,java.util.HashSet,android.app.backup.FullBackupDataOutput)>
<android.provider.DocumentsContract: java.lang.String getDocumentId(android.net.Uri)>
<com.android.internal.telephony.ISms: boolean copyMessageToIccEf(java.lang.String,int,byte[],byte[])>
<com.android.internal.os.BatteryStatsImpl: void noteWifiBatchedScanStoppedLocked(int)>
<android.widget.RemoteViews.ActionException: void <init>(java.lang.String)>
<android.os.UserHandle: void formatUid(java.lang.StringBuilder,int)>
<android.app.ActivityManager: void dumpPackageState(java.io.FileDescriptor,java.lang.String)>
<android.telecom.Conference: void setConferenceableConnections(java.util.List)>
<android.bluetooth.BluetoothPan: java.util.List getConnectedDevices()>
<android.view.animation.Animation: long getStartTime()>
<android.renderscript.Double3: android.renderscript.Double3 div(android.renderscript.Double3,android.renderscript.Double3)>
<android.net.ConnectivityManager: void setDataDependency(int,boolean)>
<android.app.Instrumentation: void callActivityOnCreate(android.app.Activity,android.os.Bundle,android.os.PersistableBundle)>
<android.opengl.GLES30: void glGetActiveUniformBlockiv(int,int,int,java.nio.IntBuffer)>
<android.provider.SearchIndexableData: java.lang.String toString()>
<com.android.internal.view.menu.ActionMenuItem: android.view.MenuItem setNumericShortcut(char)>
<android.media.IAudioService: void startBluetoothSco(android.os.IBinder,int)>
<android.hardware.camera2.marshal.impl.MarshalQueryableNativeByteToInteger: boolean isTypeMappingSupported(android.hardware.camera2.utils.TypeReference,int)>
<android.preference.MultiCheckPreference: void onDialogClosed(boolean)>
<android.app.Notification.WearableExtender: android.app.Notification.WearableExtender setDisplayIntent(android.app.PendingIntent)>
<android.view.View: int getTopPaddingOffset()>
<android.widget.TextView: void sendAccessibilityEvent(int)>
<android.view.ViewGroup.MarginLayoutParams: boolean isLayoutRtl()>
<android.app.PendingIntent: android.os.UserHandle getCreatorUserHandle()>
<com.android.internal.widget.LockPatternUtils: int getRequestedPasswordMinimumNonLetter()>
<android.bluetooth.BluetoothGattDescriptor: int getPermissions()>
<android.telecom.VideoProfile: int describeContents()>
<android.app.ActivityManagerProxy: void restart()>
<android.media.MediaDrm: void removeKeys(byte[])>
<android.media.MediaFile: boolean isVideoFileType(int)>
<com.android.internal.os.BatteryStatsImpl: void writeHistoryDelta(android.os.Parcel,android.os.BatteryStats.HistoryItem,android.os.BatteryStats.HistoryItem)>
<android.app.admin.IDevicePolicyManager: int setStorageEncryption(android.content.ComponentName,boolean,int)>
<android.app.LoadedApk: void setCompatibilityInfo(android.content.res.CompatibilityInfo)>
<android.net.wifi.p2p.WifiP2pManager: void responderReportNfcHandover(android.net.wifi.p2p.WifiP2pManager.Channel,java.lang.String,android.net.wifi.p2p.WifiP2pManager.ActionListener)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface.OnClickListener)>
<android.opengl.GLES30: void glDrawRangeElements(int,int,int,int,int,java.nio.Buffer)>
<android.widget.Chronometer: void setOnChronometerTickListener(android.widget.Chronometer.OnChronometerTickListener)>
<android.os.INetworkManagementService: void setInterfaceDown(java.lang.String)>
<android.provider.ContactsContract.CommonDataKinds.Relation: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>
<android.app.ActivityThread: android.app.ActivityThread.ApplicationThread getApplicationThread()>
<android.net.wifi.WifiConfiguration: boolean isValid()>
<android.content.BroadcastReceiver.PendingResult: void sendFinished(android.app.IActivityManager)>
<com.android.internal.appwidget.IAppWidgetHost: void providersChanged()>
<android.app.WallpaperManager: void setStream(java.io.InputStream)>
<android.media.UnstyledTextExtractor: void onData(java.lang.String)>
<android.opengl.GLES10Ext: int glQueryMatrixxOES(int[],int,int[],int)>
<android.widget.TextView: boolean onTrackballEvent(android.view.MotionEvent)>
<android.content.Intent: java.lang.String getType()>
<android.filterpacks.imageproc.BitmapSource: void loadImage(android.filterfw.core.FilterContext)>
<android.renderscript.Sampler.Builder: void setMagnification(android.renderscript.Sampler.Value)>
<android.content.CursorLoader: void setSelectionArgs(java.lang.String[])>
<android.widget.Toolbar: void setTitle(java.lang.CharSequence)>
<android.view.ScaleGestureDetector: boolean isInProgress()>
<android.telephony.PhoneNumberFormattingTextWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>
<android.renderscript.Short3: android.renderscript.Short3 mod(android.renderscript.Short3,android.renderscript.Short3)>
<android.app.IActivityManager: void notifyLaunchTaskBehindComplete(android.os.IBinder)>
<android.bluetooth.BluetoothInputDevice: boolean getProtocolMode(android.bluetooth.BluetoothDevice)>
<android.webkit.WebView.PrivateAccess: void super_onDrawVerticalScrollBar(android.graphics.Canvas,android.graphics.drawable.Drawable,int,int,int,int)>
<android.print.IPrintJobStateChangeListener: void onPrintJobStateChanged(android.print.PrintJobId)>
<com.google.android.gles_jni.GLImpl: void glSampleCoverage(float,boolean)>
<com.android.internal.app.ProcessStats.PackageState: void <init>(java.lang.String,int)>
<android.hardware.hdmi.HdmiClient: void sendVendorCommand(int,byte[],boolean)>
<android.content.pm.PackageInstaller: void abandonSession(int)>
<android.database.AbstractCursor.SelfContentObserver: void onChange(boolean)>
<android.widget.SimpleExpandableListAdapter: java.lang.Object getGroup(int)>
<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuBuilder setHeaderTitleInt(int)>
<android.os.CommonClock: android.os.CommonClock create()>
<android.renderscript.Mesh.Builder: android.renderscript.Mesh.Builder addVertexType(android.renderscript.Type)>
<android.os.PowerManager.WakeLock: void acquire()>
<android.app.PendingIntent: android.content.IIntentSender getTarget()>
<android.view.MotionEvent: long getEventTimeNano()>
<android.util.TimeUtils: void formatDuration(long,long,java.io.PrintWriter)>
<android.content.res.Configuration: java.lang.String resourceQualifierString(android.content.res.Configuration)>
<android.telephony.CellInfoLte: android.telephony.CellIdentityLte getCellIdentity()>
<android.os.INetworkManagementService: boolean isNetworkActive()>
<android.app.Activity: void overridePendingTransition(int,int)>
<android.bluetooth.IBluetoothGattServerCallback: void onServerRegistered(int,int)>
<com.android.internal.telephony.CallerInfo: boolean isEmergencyNumber()>
<android.service.dreams.DreamService: void onContentChanged()>
<android.net.wifi.p2p.WifiP2pManager: void createGroup(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.ActionListener)>
<android.view.inputmethod.BaseInputConnection: boolean reportFullscreenMode(boolean)>
<android.bluetooth.BluetoothHeadsetClient: boolean acceptIncomingConnect(android.bluetooth.BluetoothDevice)>
<android.media.IMediaRouterService: void unregisterClient(android.media.IMediaRouterClient)>
<android.hardware.camera2.params.StreamConfigurationDuration: int getWidth()>
<android.app.Fragment: void onResume()>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofMultiInt(java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,android.animation.Keyframe[])>
<com.google.android.gles_jni.EGLDisplayImpl: int hashCode()>
<android.widget.ListPopupWindow: boolean isShowing()>
<android.media.tv.TvContract: android.net.Uri buildWatchedProgramUri(long)>
<android.net.NetworkCapabilities: void writeToParcel(android.os.Parcel,int)>
<android.app.ActivityManagerProxy: boolean isBackgroundVisibleBehind(android.os.IBinder)>
<com.android.internal.util.StateMachine: void sendMessageAtFrontOfQueue(android.os.Message)>
<android.widget.PopupWindow: void setOutsideTouchable(boolean)>
<android.widget.EdgeEffect: void setColor(int)>
<android.filterfw.core.FilterPort: android.filterfw.core.Frame pullFrame()>
<android.telecom.RemoteConnection.Callback: void onCallerDisplayNameChanged(android.telecom.RemoteConnection,java.lang.String,int)>
<android.net.wifi.p2p.WifiP2pWfdInfo: void setMaxThroughput(int)>
<android.speech.RecognitionService.Callback: void readyForSpeech(android.os.Bundle)>
<android.view.accessibility.AccessibilityRecord: int getScrollY()>
<com.google.android.gles_jni.GLImpl: void glMultMatrixf(java.nio.FloatBuffer)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofMultiInt(java.lang.String,int[][])>
<android.provider.Browser: void clearSearches(android.content.ContentResolver)>
<android.gesture.GestureOverlayView: void setOrientation(int)>
<android.opengl.GLES10: void glNormal3x(int,int,int)>
<com.android.internal.policy.IKeyguardService: int setOccluded(boolean)>
<android.content.pm.ILauncherApps: void startActivityAsUser(android.content.ComponentName,android.graphics.Rect,android.os.Bundle,android.os.UserHandle)>
<android.app.ActivityGroup: void onDestroy()>
<android.webkit.WebIconDatabase: void requestIconForPageUrl(java.lang.String,android.webkit.WebIconDatabase.IconListener)>
<android.text.style.TtsSpan.OrdinalBuilder: android.text.style.TtsSpan.OrdinalBuilder setNumber(long)>
<android.net.NetworkAgent: void explicitlySelected()>
<android.graphics.Region: boolean op(android.graphics.Region,android.graphics.Region,android.graphics.Region.Op)>
<android.content.pm.PermissionInfo: int describeContents()>
<android.widget.DatePicker.DatePickerDelegate: void setMaxDate(long)>
<android.view.accessibility.AccessibilityWindowInfo: int getId()>
<com.android.internal.widget.ScrollingTabContainerView.VisibilityAnimListener: void onAnimationRepeat(android.animation.Animator)>
<android.location.LocationManager: void requestSingleUpdate(java.lang.String,android.app.PendingIntent)>
<android.graphics.drawable.RotateDrawable: float getPivotX()>
<android.database.AbstractWindowedCursor: boolean hasWindow()>
<com.android.internal.policy.IKeyguardService: boolean isShowing()>
<android.os.Debug: void startMethodTracingDdms(int,int,boolean,int)>
<android.widget.SlidingDrawer: boolean isOpened()>
<android.content.pm.PackageManager: java.util.List queryIntentContentProvidersAsUser(android.content.Intent,int,int)>
<android.view.KeyEvent: boolean isModifierKey(int)>
<android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance()>
<android.renderscript.ProgramFragmentFixedFunction.Builder: android.renderscript.ProgramFragmentFixedFunction.Builder setVaryingColor(boolean)>
<android.view.inputmethod.InputMethodManager: void registerSuggestionSpansForNotification(android.text.style.SuggestionSpan[])>
<android.graphics.drawable.PictureDrawable: void draw(android.graphics.Canvas)>
<android.widget.ListPopupWindow: void setOnItemSelectedListener(android.widget.AdapterView.OnItemSelectedListener)>
<android.media.AudioManager: void handleKeyUp(android.view.KeyEvent,int)>
<android.content.UndoOperation: void <init>(android.os.Parcel,java.lang.ClassLoader)>
<android.view.TextureView: android.graphics.Bitmap getBitmap()>
<android.view.View: void getLocationOnScreen(int[])>
<android.filterfw.core.Frame: void setData(java.nio.ByteBuffer)>
<android.animation.ValueAnimator: void setFrameDelay(long)>
<android.app.admin.IDevicePolicyManager: void setPasswordExpirationTimeout(android.content.ComponentName,long,int)>
<android.widget.Chronometer: void <init>(android.content.Context)>
<android.location.GpsNavigationMessageEvent: void writeToParcel(android.os.Parcel,int)>
<android.hardware.camera2.impl.CameraDeviceImpl.CameraDeviceCallbacks: void onDeviceError(int,android.hardware.camera2.impl.CaptureResultExtras)>
<android.telephony.TelephonyManager: void enableLocationUpdates(long)>
<android.telephony.SubscriptionManager: long getDefaultSubId()>
<android.bluetooth.BluetoothAdapter: boolean isMultipleAdvertisementSupported()>
<android.webkit.WebView: void clearMatches()>
<android.widget.ResourceCursorTreeAdapter: android.view.View newChildView(android.content.Context,android.database.Cursor,boolean,android.view.ViewGroup)>
<android.media.session.ISessionControllerCallback: void onExtrasChanged(android.os.Bundle)>
<android.app.Notification.WearableExtender: int getGravity()>
<android.app.usage.UsageStatsManagerInternal: void reportConfigurationChange(android.content.res.Configuration,int)>
<android.view.View: void addTouchables(java.util.ArrayList)>
<android.app.Notification.Builder: android.os.Bundle getExtras()>
<android.renderscript.Allocation: void ioSend()>
<android.telecom.Connection.Listener: void onAudioModeIsVoipChanged(android.telecom.Connection,boolean)>
<android.hardware.camera2.params.BlackLevelPattern: void <init>(int[])>
<android.view.View: int computeHorizontalScrollRange()>
<android.filterpacks.imageproc.LomoishFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<com.android.internal.app.IBatteryStats: void noteSyncStart(java.lang.String,int)>
<android.widget.DatePickerController: int getMinDay()>
<android.app.ActivityManager.TaskDescription: int describeContents()>
<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getLine1AlphaTag()>
<android.view.WindowManagerGlobal: void trimForeground()>
<android.location.Location: void <init>(android.location.Location)>
<android.media.AmrInputStream: void close()>
<android.graphics.Canvas: void drawPoint(float,float,android.graphics.Paint)>
<android.net.wifi.WifiConfiguration: java.lang.String getPrintableSsid()>
<android.widget.ViewAnimator: void setInAnimation(android.view.animation.Animation)>
<com.android.internal.view.menu.MenuView.ItemView: void setTitle(java.lang.CharSequence)>
<android.view.ActionMode: boolean isTitleOptional()>
<android.os.StrictMode.ViolationInfo: void dump(android.util.Printer,java.lang.String)>
<android.view.MotionEvent.PointerCoords: void copyFrom(android.view.MotionEvent.PointerCoords)>
<android.app.Dialog: void addContentView(android.view.View,android.view.ViewGroup.LayoutParams)>
<android.widget.RemoteViewsService.RemoteViewsFactory: int getViewTypeCount()>
<com.android.internal.app.ProcessStats: void computeTotalMemoryUse(com.android.internal.app.ProcessStats.TotalMemoryUseCollection,long)>
<com.android.internal.widget.AbsActionBarView.VisibilityAnimListener: void onAnimationEnd(android.animation.Animator)>
<android.text.Editable: void clear()>
<com.google.android.gles_jni.EGLImpl: boolean eglCopyBuffers(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,java.lang.Object)>
<android.widget.FrameLayout.LayoutParams: void <init>(int,int,int)>
<android.media.MediaActionSound: void release()>
<android.telecom.PhoneAccountHandle: boolean equals(java.lang.Object)>
<com.android.internal.os.ProcessCpuTracker: void init()>
<android.graphics.pdf.PdfRenderer.Page: void render(android.graphics.Bitmap,android.graphics.Rect,android.graphics.Matrix,int)>
<android.media.MediaRecorder.OnInfoListener: void onInfo(android.media.MediaRecorder,int,int)>
<android.media.AudioPort: int[] channelMasks()>
<android.opengl.GLES10: void glClearDepthf(float)>
<android.renderscript.Int3: android.renderscript.Int3 mul(android.renderscript.Int3,int)>
<android.widget.ViewFlipper: void setAutoStart(boolean)>
<android.webkit.WebViewProvider: void setDownloadListener(android.webkit.DownloadListener)>
<android.filterpacks.base.GLTextureTarget: void process(android.filterfw.core.FilterContext)>
<android.os.Bundle: java.lang.Byte getByte(java.lang.String,byte)>
<android.hardware.location.IActivityRecognitionHardware: boolean registerSink(android.hardware.location.IActivityRecognitionHardwareSink)>
<com.android.internal.telecom.IInCallAdapter: void answerCall(java.lang.String,int)>
<android.app.IActivityManager: android.os.Debug.MemoryInfo[] getProcessMemoryInfo(int[])>
<android.graphics.BitmapRegionDecoder: void finalize()>
<android.widget.ScrollView: boolean isSmoothScrollingEnabled()>
<android.alsa.AlsaDevicesParser.AlsaDeviceRecord: java.lang.String textFormat()>
<android.graphics.drawable.NinePatchDrawable: void setAlpha(int)>
<com.google.android.gles_jni.GLImpl: void glFogf(int,float)>
<android.text.TextUtils: int getOffsetBefore(java.lang.CharSequence,int)>
<android.widget.NumberPicker: float getBottomFadingEdgeStrength()>
<com.google.android.gles_jni.GLImpl: void glBufferSubData(int,int,int,java.nio.Buffer)>
<android.webkit.WebSettings: void setDefaultTextEncodingName(java.lang.String)>
<android.widget.CalendarView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.app.backup.BackupManager: void backupNow()>
<android.widget.ScrollView: android.os.Parcelable onSaveInstanceState()>
<android.hardware.camera2.legacy.LegacyRequestMapper: void convertRequestMetadata(android.hardware.camera2.legacy.LegacyRequest)>
<android.app.Instrumentation.ActivityMonitor: android.app.Activity getLastActivity()>
<com.android.internal.widget.LockPatternView: boolean onTouchEvent(android.view.MotionEvent)>
<android.content.ComponentName: void writeToParcel(android.content.ComponentName,android.os.Parcel)>
<android.os.SystemVibrator: boolean hasVibrator()>
<android.widget.ActionMenuView: int getWindowAnimations()>
<com.android.internal.widget.DecorToolbar: void setMenu(android.view.Menu,com.android.internal.view.menu.MenuPresenter.Callback)>
<android.view.animation.Animation: boolean isFillEnabled()>
<android.app.DownloadManager: void setAccessAllDownloads(boolean)>
<android.widget.PopupWindow: void setWindowLayoutMode(int,int)>
<android.animation.LayoutTransition: void removeChild(android.view.ViewGroup,android.view.View)>
<android.content.res.AssetManager.AssetInputStream: void close()>
<android.opengl.GLES11: void glDeleteBuffers(int,int[],int)>
<android.widget.AdapterView: int getLastVisiblePosition()>
<android.hardware.camera2.legacy.CameraDeviceState.CameraDeviceStateListener: void onCaptureStarted(android.hardware.camera2.legacy.RequestHolder,long)>
<android.provider.MediaStore.Images.Thumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,int,android.graphics.BitmapFactory.Options)>
<android.widget.LinearLayout: void setHorizontalGravity(int)>
<android.os.INetworkManagementService: void startAccessPoint(android.net.wifi.WifiConfiguration,java.lang.String)>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources.Theme)>
<android.app.IActivityContainer: void checkEmbeddedAllowed(android.content.Intent)>
<android.content.pm.PackageManager: void addPackageToPreferred(java.lang.String)>
<android.widget.TextView: int getCurrentTextColor()>
<android.content.pm.PackageInstaller: void registerSessionCallback(android.content.pm.PackageInstaller.SessionCallback,android.os.Handler)>
<android.webkit.WebChromeClient: void onGeolocationPermissionsHidePrompt()>
<com.android.internal.view.animation.NativeInterpolatorFactoryHelper: long createBounceInterpolator()>
<android.transition.Transition: android.transition.Transition excludeTarget(java.lang.Class,boolean)>
<android.hardware.camera2.impl.CaptureResultExtras: int getPrecaptureTriggerId()>
<android.widget.DatePicker: boolean getCalendarViewShown()>
<android.app.ProgressDialog: void <init>(android.content.Context)>
<android.print.PrintJobInfo: void setState(int)>
<com.android.internal.app.IBatteryStats: android.os.ParcelFileDescriptor getStatisticsStream()>
<android.animation.ValueAnimator: void removeUpdateListener(android.animation.ValueAnimator.AnimatorUpdateListener)>
<com.google.android.util.AbstractMessageParser.FlickrPhoto: java.lang.String getRssUrl(java.lang.String)>
<android.view.View: boolean hasShadow()>
<android.app.Activity: void startActivityAsUser(android.content.Intent,android.os.Bundle,android.os.UserHandle)>
<android.app.IBackupAgent: void doFullBackup(android.os.ParcelFileDescriptor,int,android.app.backup.IBackupManager)>
<android.app.admin.IDevicePolicyManager: boolean installCaCert(android.content.ComponentName,byte[])>
<android.content.Loader: void registerOnLoadCanceledListener(android.content.Loader.OnLoadCanceledListener)>
<android.media.effect.EffectFactory: boolean isEffectSupported(java.lang.String)>
<android.preference.ListPreference: void setEntryValues(int)>
<android.os.ServiceManagerProxy: java.lang.String[] listServices()>
<android.opengl.GLSurfaceView.Renderer: void onSurfaceCreated(javax.microedition.khronos.opengles.GL10,javax.microedition.khronos.egl.EGLConfig)>
<android.telecom.RemoteConnection: void unhold()>
<android.app.FragmentManagerImpl: void removeOnBackStackChangedListener(android.app.FragmentManager.OnBackStackChangedListener)>
<com.android.internal.view.menu.ActionMenuItemView: void onClick(android.view.View)>
<android.nfc.tech.TagTechnology: void connect()>
<android.preference.Preference: boolean persistBoolean(boolean)>
<android.widget.ProgressBar: boolean isIndeterminate()>
<com.android.internal.app.RestrictionsPinActivity: boolean verifyingPin()>
<com.google.android.gles_jni.GLImpl: void glTranslatef(float,float,float)>
<com.android.internal.view.IInputContext: void commitText(java.lang.CharSequence,int)>
<android.filterfw.core.GLFrame: int[] getInts()>
<android.app.ActivityManagerProxy: void registerProcessObserver(android.app.IProcessObserver)>
<android.content.pm.PackageManager: java.util.List getPreferredPackages(int)>
<android.database.sqlite.SQLiteDatabase: android.database.Cursor rawQuery(java.lang.String,java.lang.String[],android.os.CancellationSignal)>
<android.net.RouteInfo: boolean matches(java.net.InetAddress)>
<android.util.PrintStreamPrinter: void <init>(java.io.PrintStream)>
<android.graphics.SurfaceTexture: void setOnFrameAvailableListener(android.graphics.SurfaceTexture.OnFrameAvailableListener,android.os.Handler)>
<android.content.ContentProvider: android.net.Uri rejectInsert(android.net.Uri,android.content.ContentValues)>
<android.printservice.IPrintService: void destroyPrinterDiscoverySession()>
<android.renderscript.Double4: android.renderscript.Double4 sub(android.renderscript.Double4,android.renderscript.Double4)>
<com.android.ims.internal.IImsCallSession: com.android.ims.ImsCallProfile getLocalCallProfile()>
<android.media.IAudioService: int setHdmiSystemAudioSupported(boolean)>
<android.os.BatteryStats.Uid: java.util.Map getWakelockStats()>
<com.android.internal.view.BaseSurfaceHolder: void setSizeFromLayout()>
<android.media.tv.TvView: boolean dispatchUnhandledInputEvent(android.view.InputEvent)>
<android.view.ViewRootImpl: void loadSystemProperties()>
<android.filterpacks.videosrc.SurfaceTextureTarget: void process(android.filterfw.core.FilterContext)>
<com.android.internal.telecom.IConnectionServiceAdapter: void removeCall(java.lang.String)>
<android.net.UrlQuerySanitizer: void setAllowUnregisteredParamaters(boolean)>
<com.android.internal.util.StateMachine: void haltedProcessMessage(android.os.Message)>
<android.telecom.Connection.VideoProvider: void onSetPreviewSurface(android.view.Surface)>
<android.media.audiofx.Visualizer: int setScalingMode(int)>
<android.webkit.WebSettings: void setStandardFontFamily(java.lang.String)>
<android.telecom.CameraCapabilities: int describeContents()>
<android.view.Surface: void transferFrom(android.view.Surface)>
<android.security.KeyChain.KeyChainConnection: android.security.IKeyChainService getService()>
<android.drm.DrmInfo: void put(java.lang.String,java.lang.Object)>
<com.android.ims.internal.IImsUt: void close()>
<android.location.GpsMeasurement: void setTimeFromLastBitInMs(short)>
<android.content.pm.PackageParser.Package: java.util.List getAllCodePaths()>
<android.bluetooth.le.AdvertiseData.Builder: android.bluetooth.le.AdvertiseData build()>
<com.google.android.gles_jni.EGLImpl: javax.microedition.khronos.egl.EGLContext eglCreateContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,javax.microedition.khronos.egl.EGLContext,int[])>
<android.location.GpsMeasurement: void setCodePhaseUncertaintyInChips(double)>
<android.view.KeyEvent: void <init>(android.view.KeyEvent)>
<android.opengl.GLES10: void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)>
<android.database.CursorToBulkCursorAdaptor: void close()>
<android.widget.AutoCompleteTextView: void setForceIgnoreOutsideTouch(boolean)>
<android.opengl.GLES11Ext: void glClipPlanefOES(int,float[],int)>
<android.util.Pools.SimplePool: java.lang.Object acquire()>
<android.view.GhostView: android.view.GhostView addGhost(android.view.View,android.view.ViewGroup,android.graphics.Matrix)>
<android.hardware.CameraInfo: int describeContents()>
<android.provider.DocumentsProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String,android.os.CancellationSignal)>
<android.net.LinkProperties: java.util.List getDnsServers()>
<android.content.res.Resources: void getValue(int,android.util.TypedValue,boolean)>
<android.media.AudioManager: void handleKeyDown(android.view.KeyEvent,int)>
<android.widget.ScrollBarDrawable: void setColorFilter(android.graphics.ColorFilter)>
<android.filterfw.core.FrameFormat: int getSize()>
<android.app.IApplicationThread: void scheduleStopActivity(android.os.IBinder,boolean,int)>
<android.view.ViewConfiguration: int getEdgeSlop()>
<android.view.textservice.SpellCheckerSubtype: java.util.Locale constructLocaleFromString(java.lang.String)>
<android.graphics.Path: void addRoundRect(android.graphics.RectF,float,float,android.graphics.Path.Direction)>
<android.provider.MediaStore.Images.Thumbnails: android.net.Uri getContentUri(java.lang.String)>
<android.webkit.WebViewProvider: android.webkit.WebView.HitTestResult getHitTestResult()>
<android.content.Context: int checkUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int)>
<android.hardware.camera2.params.Face: int getScore()>
<android.location.GpsNavigationMessage: void setData(byte[])>
<android.app.ApplicationThreadProxy: void scheduleReceiver(android.content.Intent,android.content.pm.ActivityInfo,android.content.res.CompatibilityInfo,int,java.lang.String,android.os.Bundle,boolean,int,int)>
<android.app.ActivityManager.RunningServiceInfo: int describeContents()>
<android.widget.ActionMenuView.LayoutParams: void <init>(int,int,boolean)>
<android.graphics.PointF: float length(float,float)>
<android.content.ReceiverCallNotAllowedException: void <init>(java.lang.String)>
<com.android.internal.app.ProcessStats: void dumpCheckinLocked(java.io.PrintWriter,java.lang.String)>
<android.widget.CheckedTextView: void setCheckMarkDrawable(android.graphics.drawable.Drawable)>
<android.hardware.usb.UsbInterface: int getAlternateSetting()>
<android.view.View: void onDrawVerticalScrollBar(android.graphics.Canvas,android.graphics.drawable.Drawable,int,int,int,int)>
<android.app.UiAutomationConnection: boolean setRotation(int)>
<android.widget.RemoteViewsAdapter.RemoteAdapterConnectionCallback: void deferNotifyDataSetChanged()>
<android.os.StrictMode: void conditionallyCheckInstanceCounts()>
<android.text.style.TtsSpan.DigitsBuilder: android.text.style.TtsSpan.DigitsBuilder setDigits(java.lang.String)>
<android.view.View: boolean isAccessibilitySelectionExtendable()>
<android.view.View.BaseSavedState: void <init>(android.os.Parcelable)>
<android.bluetooth.BluetoothSocket: boolean isConnected()>
<android.os.Parcel: void readBooleanArray(boolean[])>
<com.android.internal.app.IBatteryStats: void noteStopWakelockFromSource(android.os.WorkSource,int,java.lang.String,java.lang.String,int)>
<android.os.storage.StorageManager: void <init>(android.content.ContentResolver,android.os.Looper)>
<android.net.wifi.BatchedScanResult: int describeContents()>
<android.preference.RingtonePreference: void onAttachedToHierarchy(android.preference.PreferenceManager)>
<android.opengl.GLES20: void glBlendFunc(int,int)>
<android.hardware.camera2.CameraAccessException: void <init>(int)>
<android.hardware.hdmi.IHdmiControlService: void sendStandby(int,int)>
<android.media.audiofx.EnvironmentalReverb: short getRoomLevel()>
<android.app.ActivityManagerProxy: java.lang.String getPackageForIntentSender(android.content.IIntentSender)>
<com.android.ims.ImsReasonInfo: int getExtraCode()>
<android.view.MenuItem: android.view.MenuItem setActionProvider(android.view.ActionProvider)>
<android.animation.ObjectAnimator: void setPropertyName(java.lang.String)>
<android.util.JsonReader: void endArray()>
<android.webkit.WebSettings: void setPluginsPath(java.lang.String)>
<android.renderscript.ScriptIntrinsicBlur: android.renderscript.Script.FieldID getFieldID_Input()>
<android.graphics.Path: void addRoundRect(float,float,float,float,float,float,android.graphics.Path.Direction)>
<android.app.backup.RestoreSet: void <init>(java.lang.String,java.lang.String,long)>
<android.renderscript.Double3: void addMultiple(android.renderscript.Double3,double)>
<android.app.ActionBar: void setCustomView(android.view.View,android.app.ActionBar.LayoutParams)>
<android.os.AsyncTask: void onCancelled()>
<android.provider.CalendarContract.Instances: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],long,long)>
<android.content.pm.ApplicationInfo: java.lang.String getCodePath()>
<android.graphics.Bitmap: void setPixel(int,int,int)>
<android.view.View: void setLayerType(int,android.graphics.Paint)>
<android.webkit.WebViewClient: void onUnhandledKeyEvent(android.webkit.WebView,android.view.KeyEvent)>
<android.media.tv.TvInputInfo: android.content.Intent createSetupIntent()>
<android.nfc.tech.MifareClassic: int getBlockCount()>
<android.gesture.GestureOverlayView: boolean isFadeEnabled()>
<android.view.View: boolean isTextAlignmentResolved()>
<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuBuilder setHeaderViewInt(android.view.View)>
<android.media.ImageReader: void finalize()>
<android.widget.TimePicker.TimePickerDelegate: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.renderscript.FileA3D.IndexEntry: android.renderscript.Mesh getMesh()>
<com.android.internal.widget.SizeAdaptiveLayout.LayoutParams: void <init>(int,int,int,int)>
<android.widget.TextView: void setEditableFactory(android.text.Editable.Factory)>
<android.renderscript.ProgramVertex: int getInputCount()>
<android.text.style.TtsSpan.MeasureBuilder: android.text.style.TtsSpan.MeasureBuilder setDenominator(long)>
<android.graphics.Color: int HSVToColor(int,float[])>
<com.android.internal.widget.LinearLayoutWithDefaultTouchRecepient: void <init>(android.content.Context,android.util.AttributeSet)>
<android.media.MediaFile: android.media.MediaFile.MediaFileType getFileType(java.lang.String)>
<android.renderscript.ScriptIntrinsicBlur: void forEach(android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>
<android.view.accessibility.AccessibilityRecord: int getRemovedCount()>
<com.android.internal.inputmethod.InputMethodUtils.InputMethodSettings: boolean isCurrentProfile(int)>
<android.location.LocationManager: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>
<android.provider.MediaStore.Images.Media: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.speech.IRecognitionListener: void onBufferReceived(byte[])>
<android.content.ClipData: android.content.ClipDescription getDescription()>
<android.net.TrafficStats: long getRxPackets(java.lang.String)>
<android.app.ApplicationThreadProxy: void scheduleBackgroundVisibleBehindChanged(android.os.IBinder,boolean)>
<android.renderscript.Double4: int length()>
<android.content.pm.LabeledIntent: java.lang.CharSequence getNonLocalizedLabel()>
<android.view.MotionEvent: void getHistoricalPointerCoords(int,int,android.view.MotionEvent.PointerCoords)>
<android.opengl.GLES30: void glVertexAttribI4i(int,int,int,int,int)>
<android.webkit.WebViewProvider: void onPause()>
<android.net.wifi.p2p.WifiP2pWfdInfo: void readFromParcel(android.os.Parcel)>
<android.animation.ObjectAnimator: android.animation.ObjectAnimator ofArgb(java.lang.Object,java.lang.String,int[])>
<android.hardware.Sensor: float getResolution()>
<android.view.ViewStub: void dispatchDraw(android.graphics.Canvas)>
<android.database.ContentObserver: void dispatchChange(boolean,android.net.Uri)>
<android.renderscript.Mesh.AllocationBuilder: android.renderscript.Mesh.AllocationBuilder addIndexSetAllocation(android.renderscript.Allocation,android.renderscript.Mesh.Primitive)>
<android.graphics.Interpolator: void setKeyFrame(int,int,float[],float[])>
<android.text.method.PasswordTransformationMethod: void afterTextChanged(android.text.Editable)>
<android.view.Display: int getHeight()>
<android.print.PrintManager: android.print.PrintJob print(java.lang.String,android.print.PrintDocumentAdapter,android.print.PrintAttributes)>
<android.view.SurfaceView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.graphics.drawable.LayerDrawable: void setTintList(android.content.res.ColorStateList)>
<android.view.ViewRootImpl: void recomputeViewAttributes(android.view.View)>
<android.view.IApplicationToken: void windowsGone()>
<android.graphics.Region: boolean op(int,int,int,int,android.graphics.Region.Op)>
<android.location.Criteria: boolean isSpeedRequired()>
<android.view.InputQueue.Callback: void onInputQueueDestroyed(android.view.InputQueue)>
<android.widget.RadioButton: void toggle()>
<android.graphics.drawable.shapes.RoundRectShape: void onResize(float,float)>
<android.speech.IRecognitionListener: void onRmsChanged(float)>
<android.preference.EditTextPreference: void setText(java.lang.String)>
<android.os.Message: void updateCheckRecycle(int)>
<android.view.RenderNode: void endAllAnimators()>
<android.text.style.SuggestionSpan: void updateDrawState(android.text.TextPaint)>
<android.view.KeyEvent: boolean isFunctionPressed()>
<com.android.internal.util.XmlUtils: void writeByteArrayAttribute(org.xmlpull.v1.XmlSerializer,java.lang.String,byte[])>
<android.content.BroadcastReceiver.PendingResult: int getSendingUserId()>
<android.app.usage.UsageEvents: void finalize()>
<android.view.RenderNodeAnimator: void setAllowRunningAsynchronously(boolean)>
<android.provider.DocumentsProvider: boolean isChildDocument(java.lang.String,java.lang.String)>
<android.nfc.NdefMessage: void <init>(byte[])>
<android.widget.AdapterViewAnimator: android.view.View getCurrentView()>
<android.view.WindowInsets: void <init>(android.view.WindowInsets)>
<android.view.DisplayInfo: void <init>(android.view.DisplayInfo)>
<com.android.internal.os.BatteryStatsImpl: boolean startIteratingHistoryLocked()>
<android.location.Location: android.os.Bundle getExtras()>
<android.renderscript.ScriptIntrinsicBlend: void forEachXor(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>
<com.android.internal.widget.SizeAdaptiveLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>
<android.text.method.TimeKeyListener: char[] getAcceptedChars()>
<android.widget.LinearLayout: void setBaselineAlignedChildIndex(int)>
<android.media.tv.ITvInputManager: void requestUnblockContent(android.os.IBinder,java.lang.String,int)>
<android.telephony.SubscriptionManager: int setDisplayNumberFormat(int,long)>
<android.widget.ViewFlipper: void stopFlipping()>
<android.util.LongSparseArray: void setValueAt(int,java.lang.Object)>
<com.android.internal.view.menu.MenuBuilder: void removeGroup(int)>
<android.view.KeyCharacterMap: android.view.KeyEvent[] getEvents(char[])>
<com.android.internal.view.menu.SubMenuBuilder: android.view.SubMenu setIcon(android.graphics.drawable.Drawable)>
<android.net.wifi.WifiManager: int compareSignalLevel(int,int)>
<android.os.Parcel: boolean hasFileDescriptors()>
<android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceResponse: int getVersion()>
<android.widget.HeterogeneousExpandableList: int getChildType(int,int)>
<android.opengl.GLES20: void glTexParameterfv(int,int,java.nio.FloatBuffer)>
<android.view.WindowManagerPolicy.WindowState: boolean getGivenInsetsPendingLw()>
<android.bluetooth.BluetoothHeadset: boolean setPriority(android.bluetooth.BluetoothDevice,int)>
<android.view.ViewRootImpl: boolean isLayoutRequested()>
<com.android.internal.app.MediaRouteChooserDialog: void onAttachedToWindow()>
<android.net.wifi.WifiScanner.ScanSettings: int describeContents()>
<android.app.SharedElementCallback: void onMapSharedElements(java.util.List,java.util.Map)>
<android.content.SyncResult: void clear()>
<android.graphics.BitmapRegionDecoder: int getHeight()>
<android.widget.AutoCompleteTextView: boolean isInputMethodNotNeeded()>
<android.transition.Slide: android.animation.Animator onAppear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>
<android.appwidget.AppWidgetHostView: android.graphics.Rect getDefaultPaddingForWidget(android.content.Context,android.content.ComponentName,android.graphics.Rect)>
<android.text.method.AllCapsTransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)>
<android.util.LongSparseArray: int indexOfKey(long)>
<com.android.internal.app.WindowDecorActionBar: void setHomeAsUpIndicator(android.graphics.drawable.Drawable)>
<android.widget.TimePicker.ValidationCallback: void onValidationChanged(boolean)>
<android.util.TimingLogger: void dumpToLog()>
<android.net.wifi.IWifiManager: int getAggressiveHandover()>
<android.widget.RemoteViews: void reapply(android.content.Context,android.view.View,android.widget.RemoteViews.OnClickHandler)>
<android.renderscript.Long2: long length()>
<android.util.LongSparseArray: void removeAt(int)>
<android.os.Parcel: void writeCharSequenceArray(java.lang.CharSequence[])>
<android.inputmethodservice.InputMethodService: void setExtractViewShown(boolean)>
<android.view.DisplayInfo: int describeContents()>
<android.content.pm.ApplicationInfo: boolean hasRtlSupport()>
<android.filterfw.format.PrimitiveFormat: android.filterfw.core.MutableFrameFormat createFloatFormat(int,int)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setIconAttribute(int)>
<android.net.wifi.WifiManager: boolean startScan()>
<android.net.wifi.p2p.IWifiP2pManager: android.os.Messenger getP2pStateMachineMessenger()>
<android.net.http.HttpResponseCache: void flush()>
<android.media.SRTRenderer: boolean supports(android.media.MediaFormat)>
<android.view.View: void setTransitionAlpha(float)>
<android.widget.AbsListView: boolean showContextMenu(float,float,int)>
<android.os.SystemService: void waitForState(java.lang.String,android.os.SystemService.State,long)>
<android.view.animation.PathInterpolator: float getInterpolation(float)>
<android.database.sqlite.SQLiteSession: int executeForChangedRowCount(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal)>
<android.view.inputmethod.InputMethodSubtypeArray: android.view.inputmethod.InputMethodSubtype get(int)>
<android.mtp.MtpObjectInfo: int getProtectionStatus()>
<android.media.MediaPlayer: void addTimedTextSource(android.content.Context,android.net.Uri,java.lang.String)>
<com.google.android.util.AbstractMessageParser.YouTubeVideo: java.lang.String getDocID()>
<android.widget.GridLayout.LayoutParams: boolean equals(java.lang.Object)>
<android.location.Geocoder: java.util.List getFromLocationName(java.lang.String,int,double,double,double,double)>
<android.media.audiofx.EnvironmentalReverb: void setDiffusion(short)>
<com.android.internal.app.IVoiceInteractorCallback: void deliverAbortVoiceResult(com.android.internal.app.IVoiceInteractorRequest,android.os.Bundle)>
<android.media.ThumbnailUtils: android.graphics.Bitmap extractThumbnail(android.graphics.Bitmap,int,int,int)>
<android.opengl.ETC1Util.ETC1Texture: int getWidth()>
<android.service.dreams.DreamService: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.app.admin.IDevicePolicyManager: boolean addCrossProfileWidgetProvider(android.content.ComponentName,java.lang.String)>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder detectLeakedRegistrationObjects()>
<android.widget.ImageView: void jumpDrawablesToCurrentState()>
<android.view.WindowManagerGlobal: void trimMemory(int)>
<android.app.AppGlobals: java.lang.String getInitialPackage()>
<com.android.internal.util.XmlUtils: double[] readThisDoubleArrayXml(org.xmlpull.v1.XmlPullParser,java.lang.String,java.lang.String[])>
<android.net.wifi.WifiManager.TxPacketCountListener: void onFailure(int)>
<android.print.PrintJobId: void writeToParcel(android.os.Parcel,int)>
<android.view.accessibility.AccessibilityNodeInfo: void setBoundsInScreen(android.graphics.Rect)>
<android.filterpacks.imageproc.CrossProcessFilter: void <init>(java.lang.String)>
<android.net.ConnectivityManager: android.net.LinkQualityInfo getActiveLinkQualityInfo()>
<android.telecom.CameraCapabilities: void writeToParcel(android.os.Parcel,int)>
<android.opengl.GLES11Ext: void glMaterialxvOES(int,int,java.nio.IntBuffer)>
<android.net.Uri: java.lang.String toString()>
<android.os.Environment.UserEnvironment: java.io.File[] getExternalDirsForVold()>
<android.media.ImageReader: android.media.Image acquireLatestImage()>
<android.net.nsd.NsdManager: void stopServiceDiscovery(android.net.nsd.NsdManager.DiscoveryListener)>
<com.android.internal.widget.AbsActionBarView: void setSplitToolbar(boolean)>
<android.net.wifi.IWifiScanner: android.os.Bundle getAvailableChannels(int)>
<android.widget.CalendarView: int getFocusedMonthDateColor()>
<android.media.tv.ITvInputSession: void relayoutOverlayView(android.graphics.Rect)>
<android.media.projection.MediaProjection: void registerCallback(android.media.projection.MediaProjection.Callback,android.os.Handler)>
<android.speech.srec.Recognizer.Grammar: void resetAllSlots()>
<com.android.internal.app.ProcessStats: com.android.internal.app.ProcessStats.ProcessState getProcessStateLocked(java.lang.String,int,int,java.lang.String)>
<com.android.internal.util.XmlUtils: void writeDoubleArrayXml(double[],java.lang.String,org.xmlpull.v1.XmlSerializer)>
<android.view.View: void setTextAlignment(int)>
<android.media.tv.TvInputManager: void <init>(android.media.tv.ITvInputManager,int)>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: android.graphics.drawable.Drawable[] getChildren()>
<android.app.Fragment: android.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle)>
<android.view.ViewParent: boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean)>
<android.view.View.OnHoverListener: boolean onHover(android.view.View,android.view.MotionEvent)>
<android.text.Layout: boolean getLineContainsTab(int)>
<android.hardware.location.ActivityChangedEvent: void writeToParcel(android.os.Parcel,int)>
<android.renderscript.Long3: android.renderscript.Long3 add(android.renderscript.Long3,android.renderscript.Long3)>
<android.filterpacks.imageproc.BrightnessFilter: android.filterfw.core.Program getShaderProgram(android.filterfw.core.FilterContext)>
<com.google.android.gles_jni.GLImpl: void glPointSizex(int)>
<android.text.Selection.PositionIterator: int preceding(int)>
<android.hardware.camera2.params.TonemapCurve: int getPointCount(int)>
<android.graphics.Rect: void setEmpty()>
<android.bluetooth.BluetoothHeadset: boolean connectAudio()>
<com.android.internal.app.IBatteryStats: long computeChargeTimeRemaining()>
<android.webkit.PermissionRequest: android.net.Uri getOrigin()>
<android.filterpacks.imageproc.DrawOverlayFilter: void process(android.filterfw.core.FilterContext)>
<android.content.IContentService: void addStatusChangeListener(int,android.content.ISyncStatusObserver)>
<android.inputmethodservice.InputMethodService: boolean getCurrentInputStarted()>
<android.speech.srec.UlawEncoderInputStream: int maxAbsPcm(byte[],int,int)>
<android.speech.srec.Recognizer: java.lang.String getAcousticState()>
<android.telecom.DisconnectCause: java.lang.CharSequence getDescription()>
<android.provider.Contacts.Settings: void setSetting(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String)>
<android.widget.ExpandableListView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.content.RestrictionEntry: java.lang.String toString()>
<android.content.ContentProviderOperation.Builder: android.content.ContentProviderOperation.Builder withValues(android.content.ContentValues)>
<com.android.internal.widget.AbsActionBarView: int next(int,int,boolean)>
<android.accessibilityservice.AccessibilityService.Callbacks: boolean onGesture(int)>
<android.net.NetworkUtils: java.lang.String trimV4AddrZeros(java.lang.String)>
<android.app.ActivityThread: boolean releaseProvider(android.content.IContentProvider,boolean)>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumSymbols(android.content.ComponentName)>
<com.android.internal.view.menu.IconMenuView: void onDraw(android.graphics.Canvas)>
<android.location.GpsMeasurement: void setUsedInFix(boolean)>
<android.os.Parcel: java.io.FileDescriptor readRawFileDescriptor()>
<com.android.server.net.DnsServerRepository: boolean addServers(long,java.lang.String[])>
<android.accounts.AccountManager: void setUserData(android.accounts.Account,java.lang.String,java.lang.String)>
<android.media.AudioAttributes: java.lang.String usageToString(int)>
<android.media.session.MediaController: android.media.session.MediaController.PlaybackInfo getPlaybackInfo()>
<android.bluetooth.BluetoothHeadset: int getAudioState(android.bluetooth.BluetoothDevice)>
<android.os.WorkSource: int describeContents()>
<android.widget.SearchView: int getMaxWidth()>
<android.opengl.GLES20: java.lang.String glGetActiveUniform(int,int,java.nio.IntBuffer,java.nio.IntBuffer)>
<android.media.tv.TvView: void onAttachedToWindow()>
<android.location.IFusedGeofenceHardware: void addGeofences(android.hardware.location.GeofenceHardwareRequestParcelable[])>
<android.webkit.WebView: void setMapTrackballToArrowKeys(boolean)>
<com.google.android.gles_jni.GLImpl: void glClipPlanex(int,java.nio.IntBuffer)>
<android.webkit.Plugin.PreferencesClickHandler: void handleClickEvent(android.content.Context)>
<android.widget.Switch: void setChecked(boolean)>
<android.media.tv.TvInputService: android.media.tv.TvInputService.Session onCreateSession(java.lang.String)>
<android.webkit.Plugin: java.lang.String getPath()>
<android.hardware.camera2.impl.CameraMetadataNative: int getNativeType(int)>
<android.telephony.PhoneStateListener: void <init>(android.os.Looper)>
<android.preference.SwitchPreference: void onBindView(android.view.View)>
<android.bluetooth.BluetoothHeadsetClient: boolean connectAudio()>
<android.text.util.Linkify: void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,android.text.util.Linkify.MatchFilter,android.text.util.Linkify.TransformFilter)>
<android.view.View: void setNextFocusUpId(int)>
<android.app.SearchManager: android.app.SearchableInfo getSearchableInfo(android.content.ComponentName)>
<com.google.android.gles_jni.GLImpl: void glTexEnvfv(int,int,float[],int)>
<com.android.internal.widget.ActionBarView: void setCustomView(android.view.View)>
<android.app.backup.IFullBackupRestoreObserver: void onBackupPackage(java.lang.String)>
<android.content.ContextWrapper: int getThemeResId()>
<android.hardware.camera2.CameraCharacteristics.Key: android.hardware.camera2.impl.CameraMetadataNative.Key getNativeKey()>
<android.telephony.TelephonyManager: byte[] iccExchangeSimIO(int,int,int,int,int,java.lang.String)>
<android.widget.TimePicker.TimePickerDelegate: void setCurrentMinute(java.lang.Integer)>
<android.hardware.hdmi.IHdmiControlService: void setSystemAudioVolume(int,int,int)>
<android.os.Trace: void traceBegin(long,java.lang.String)>
<android.speech.srec.Recognizer.Grammar: void setupRecognizer()>
<android.os.PowerManager.WakeLock: void release(int)>
<android.media.MediaPlayer: void setVolume(float)>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumNumeric(android.content.ComponentName,int)>
<android.graphics.drawable.DrawableContainer: int getChangingConfigurations()>
<android.filterpacks.ui.SurfaceTargetFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>
<android.telecom.VideoCallImpl: void setDeviceOrientation(int)>
<android.view.View: int getDrawingCacheQuality()>
<android.webkit.WebViewProvider.ViewDelegate: void onConfigurationChanged(android.content.res.Configuration)>
<android.util.SparseArray: int indexOfKey(int)>
<android.media.AmrInputStream: void <init>(java.io.InputStream)>
<android.os.Bundle: android.os.Parcelable[] getParcelableArray(java.lang.String)>
<android.telephony.CellSignalStrengthCdma: int getDbm()>
<android.app.usage.UsageEvents: void <init>(java.util.List,java.lang.String[])>
<android.content.pm.RegisteredServicesCache.ServiceInfo: void <init>(java.lang.Object,android.content.ComponentName,int)>
<android.content.ContentProviderProxy: android.os.IBinder asBinder()>
<android.content.IntentFilter: void addDataAuthority(java.lang.String,java.lang.String)>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setTitle(java.lang.CharSequence)>
<android.location.GpsMeasurement: void setCarrierPhaseUncertainty(double)>
<android.webkit.HttpAuthHandler: boolean suppressDialog()>
<android.security.KeyChainException: void <init>(java.lang.Throwable)>
<android.database.sqlite.SQLiteOpenHelper: void onCreate(android.database.sqlite.SQLiteDatabase)>
<android.bluetooth.BluetoothMasInstance: boolean equals(java.lang.Object)>
<android.os.ICancellationSignal: void cancel()>
<android.webkit.FindActionModeCallback: boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu)>
<com.android.server.backup.SystemBackupAgent: void onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>
<android.filterfw.core.NativeFrame: void setFloats(float[])>
<android.bluetooth.IBluetoothGattCallback: void onReadRemoteRssi(java.lang.String,int,int)>
<android.widget.ActivityChooserModel.ActivityResolveInfo: int hashCode()>
<com.android.internal.backup.LocalTransport: int finishBackup()>
<android.net.NetworkPolicy: void <init>(android.net.NetworkTemplate,int,java.lang.String,long,long,long,long,boolean,boolean)>
<android.print.IPrintSpooler: void getPrintJobInfos(android.print.IPrintSpoolerCallbacks,android.content.ComponentName,int,int,int)>
<android.hardware.SerialPort: java.lang.String getName()>
<android.net.NetworkQuotaInfo: long getSoftLimitBytes()>
<android.renderscript.ScriptIntrinsicConvolve3x3: void setCoefficients(float[])>
<android.database.sqlite.SQLiteDatabase: boolean yieldIfContendedSafely()>
<android.net.LocalSocket: boolean isConnected()>
<android.database.MergeCursor: int getCount()>
<android.net.INetworkScoreService: void registerNetworkScoreCache(int,android.net.INetworkScoreCache)>
<android.location.LocationManager: void removeUpdates(android.app.PendingIntent)>
<android.view.ViewGroup: void requestChildFocus(android.view.View,android.view.View)>
<android.view.View: boolean isHorizontalFadingEdgeEnabled()>
<android.content.Intent: java.lang.String getDataString()>
<android.hardware.location.IGeofenceHardware: boolean resumeGeofence(int,int,int)>
<android.os.BatteryStats.HistoryItem: boolean sameNonEvent(android.os.BatteryStats.HistoryItem)>
<android.net.NetworkUtils: android.util.Pair parseIpAndMask(java.lang.String)>
<android.text.style.ImageSpan: void <init>(android.graphics.drawable.Drawable,java.lang.String,int)>
<android.opengl.GLES11: void glGetTexParameterfv(int,int,java.nio.FloatBuffer)>
<android.media.RemoteDisplay: void pause()>
<android.os.UserManager: long getSerialNumberForUser(android.os.UserHandle)>
<android.hardware.display.DisplayManager: android.view.Display[] getDisplays(java.lang.String)>
<android.widget.AbsListView: android.os.Parcelable onSaveInstanceState()>
<com.android.internal.widget.multiwaveview.GlowPadView: void suspendAnimations()>
<android.net.wifi.WifiScanner.ActionListener: void onFailure(int,java.lang.String)>
<android.widget.Switch: void jumpDrawablesToCurrentState()>
<android.widget.CalendarView.CalendarViewDelegate: long getDate()>
<android.preference.PreferenceGroup: boolean onPrepareAddPreference(android.preference.Preference)>
<android.app.ActivityManagerProxy: boolean isTopOfTask(android.os.IBinder)>
<android.app.ActivityOptions.OnAnimationStartedListener: void onAnimationStarted()>
<android.filterfw.geometry.Quad: java.lang.String toString()>
<android.graphics.PaintFlagsDrawFilter: void <init>(int,int)>
<android.widget.LinearLayout: void setMeasureWithLargestChildEnabled(boolean)>
<android.view.View: int getSolidColor()>
<android.content.res.ResourcesKey: int hashCode()>
<android.net.http.Headers.HeaderCallback: void header(java.lang.String,java.lang.String)>
<android.graphics.ComposePathEffect: void <init>(android.graphics.PathEffect,android.graphics.PathEffect)>
<android.nfc.tech.NfcF: int getMaxTransceiveLength()>
<android.util.SparseLongArray: void <init>(int)>
<android.bluetooth.le.ScanFilter: android.os.ParcelUuid getServiceUuid()>
<android.widget.AbsListView.LayoutParams: void <init>(int,int,int)>
<android.view.ContextThemeWrapper: java.lang.Object getSystemService(java.lang.String)>
<android.widget.AdapterView: android.widget.AdapterView.OnItemClickListener getOnItemClickListener()>
<android.widget.PopupMenu: android.view.MenuInflater getMenuInflater()>
<android.inputmethodservice.KeyboardView: void setPopupParent(android.view.View)>
<android.nfc.tech.MifareUltralight: int getMaxTransceiveLength()>
<android.view.ViewDebug.ViewOperation: void post(java.lang.Object[])>
<com.android.internal.widget.PasswordEntryKeyboardHelper: void <init>(android.content.Context,android.inputmethodservice.KeyboardView,android.view.View)>
<android.app.Activity: void onBackPressed()>
<android.graphics.Paint: void setTextLocale(java.util.Locale)>
<android.net.wifi.IWifiManager: void setWifiApEnabled(android.net.wifi.WifiConfiguration,boolean)>
<com.android.internal.widget.LockPatternUtilsCache: void unregisterObserver(com.android.internal.widget.ILockSettingsObserver)>
<com.android.internal.app.AlertController: android.widget.ListView getListView()>
<android.content.res.Resources: android.graphics.Movie getMovie(int)>
<android.hardware.input.InputManager: boolean injectInputEvent(android.view.InputEvent,int)>
<android.util.LongSparseArray: long keyAt(int)>
<android.bluetooth.le.ScanRecord: java.lang.String toString()>
<android.filterpacks.videosrc.CameraSource: void open(android.filterfw.core.FilterContext)>
<android.os.Parcel: void writeSparseArray(android.util.SparseArray)>
<android.animation.ValueAnimator: void setValues(android.animation.PropertyValuesHolder[])>
<android.view.View: boolean hasFocus()>
<android.filterfw.core.OutputPort: void <init>(android.filterfw.core.Filter,java.lang.String)>
<android.text.style.StyleSpan: int getSpanTypeId()>
<android.os.Handler: void <init>(android.os.Looper,android.os.Handler.Callback,boolean)>
<android.widget.TextClock: void onAttachedToWindow()>
<android.app.Notification.Builder: android.app.Notification.Builder addExtras(android.os.Bundle)>
<android.widget.ScrollView: boolean isFillViewport()>
<android.renderscript.Allocation: void copy1DRangeFromUnchecked(int,int,float[])>
<android.view.inputmethod.BaseInputConnection: android.text.Editable getEditable()>
<android.util.Pools.SimplePool: boolean release(java.lang.Object)>
<android.text.style.BulletSpan: void <init>(int)>
<android.database.sqlite.SQLiteConnection: java.lang.String toString()>
<android.bluetooth.le.ScanSettings: int getScanResultType()>
<android.widget.AdapterViewAnimator: void setDisplayedChild(int)>
<android.telephony.PhoneNumberUtils: int getFormatTypeForLocale(java.util.Locale)>
<android.content.res.Resources: void flushLayoutCache()>
<com.android.internal.telecom.IConnectionServiceAdapter: void setAddress(java.lang.String,android.net.Uri,int)>
<android.graphics.drawable.Drawable: void setColorFilter(int,android.graphics.PorterDuff.Mode)>
<android.media.MediaTimeProvider: void cancelNotifications(android.media.MediaTimeProvider.OnMediaTimeListener)>
<android.graphics.drawable.BitmapDrawable: void setColorFilter(android.graphics.ColorFilter)>
<android.filterpacks.imageproc.FlipFilter: void initProgram(android.filterfw.core.FilterContext,int)>
<android.os.FileUtils: java.io.File rewriteAfterRename(java.io.File,java.io.File,java.io.File)>
<android.view.LayoutInflater: android.view.LayoutInflater.Factory2 getFactory2()>
<android.hardware.camera2.utils.HashCodeHelpers: int hashCode(float[])>
<android.content.ContextWrapper: boolean deleteDatabase(java.lang.String)>
<android.opengl.GLES11: void glGetBufferParameteriv(int,int,java.nio.IntBuffer)>
<android.renderscript.FileA3D.IndexEntry: android.renderscript.BaseObj getObject()>
<android.os.Handler: void <init>(android.os.Looper)>
<android.view.InputChannel: android.view.InputChannel[] openInputChannelPair(java.lang.String)>
<android.media.projection.MediaProjection: void unregisterCallback(android.media.projection.MediaProjection.Callback)>
<android.database.CursorWindow: void finalize()>
<android.util.LongSparseLongArray: long keyAt(int)>
<android.database.DatabaseUtils: void bindObjectToProgram(android.database.sqlite.SQLiteProgram,int,java.lang.Object)>
<android.webkit.WebSettings: int getMinimumFontSize()>
<com.android.internal.database.SortCursor: void registerDataSetObserver(android.database.DataSetObserver)>
<android.widget.DatePicker: void init(int,int,int,android.widget.DatePicker.OnDateChangedListener)>
<android.net.SamplingDataTracker: void getSamplingSnapshots(java.util.Map)>
<android.view.KeyEvent: java.lang.String actionToString(int)>
<android.filterpacks.imageproc.FisheyeFilter: void setupPorts()>
<android.app.SearchableInfo: int getVoicePromptTextId()>
<android.content.res.CompatibilityInfo: void <init>(android.content.pm.ApplicationInfo,int,int,boolean)>
<com.android.internal.app.ToolbarActionBar: void addTab(android.app.ActionBar.Tab,int)>
<android.transition.TransitionUtils: android.transition.Transition mergeTransitions(android.transition.Transition[])>
<android.app.Notification.BigPictureStyle: android.app.Notification.BigPictureStyle setBigContentTitle(java.lang.CharSequence)>
<android.view.inputmethod.InputMethodManager: void hideStatusIcon(android.os.IBinder)>
<android.media.audiopolicy.AudioMix.Builder: android.media.audiopolicy.AudioMix.Builder setFormat(android.media.AudioFormat)>
<android.hardware.camera2.utils.LongParcelable: void readFromParcel(android.os.Parcel)>
<android.view.accessibility.AccessibilityManager: android.view.accessibility.IAccessibilityManagerClient getClient()>
<android.net.LocalSocket: java.lang.String toString()>
<com.android.internal.backup.IBackupTransport: android.app.backup.RestoreSet[] getAvailableRestoreSets()>
<android.widget.TextView: void setCompoundDrawablePadding(int)>
<android.view.animation.CycleInterpolator: void <init>(float)>
<android.app.admin.IDevicePolicyManager: boolean isLockTaskPermitted(java.lang.String)>
<android.widget.AbsListView: android.view.View findViewByAccessibilityIdTraversal(int)>
<android.app.ActivityThread: void requestRelaunchActivity(android.os.IBinder,java.util.List,java.util.List,int,boolean,android.content.res.Configuration,boolean)>
<android.location.GpsMeasurement: void setPseudorangeRateInMetersPerSec(double)>
<android.graphics.Rect: void <init>(int,int,int,int)>
<android.net.LinkProperties: void setTcpBufferSizes(java.lang.String)>
<android.filterfw.core.ShaderProgram: void setClearColor(float,float,float)>
<android.graphics.drawable.ShapeDrawable.ShaderFactory: android.graphics.Shader resize(int,int)>
<android.graphics.ColorMatrix: float[] getArray()>
<android.app.ActionBar: java.lang.CharSequence getTitle()>
<android.net.wifi.p2p.nsd.WifiP2pServiceRequest: int describeContents()>
<android.os.ParcelFileDescriptor: void releaseResources()>
<android.bluetooth.IBluetoothHeadsetClient: boolean sendDTMF(android.bluetooth.BluetoothDevice,byte)>
<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getGroupIdLevel1()>
<android.net.wifi.WifiManager: int updateNetwork(android.net.wifi.WifiConfiguration)>
<android.opengl.GLES11Ext: void glTexGenfvOES(int,int,java.nio.FloatBuffer)>
<android.widget.TextView: int getHighlightColor()>
<android.net.DhcpResults: boolean setGateway(java.lang.String)>
<android.view.View: int getDrawingCacheBackgroundColor()>
<android.graphics.Matrix: void toShortString(java.lang.StringBuilder)>
<android.hardware.Camera.Parameters: void setPreviewFrameRate(int)>
<android.database.sqlite.SQLiteConnectionPool: android.database.sqlite.SQLiteConnectionPool open(android.database.sqlite.SQLiteDatabaseConfiguration)>
<android.app.usage.UsageStatsManager: java.util.Map queryAndAggregateUsageStats(long,long)>
<android.app.admin.DevicePolicyManager: android.content.ComponentName setGlobalProxy(android.content.ComponentName,java.net.Proxy,java.util.List)>
<android.bluetooth.BluetoothDevice: boolean fetchUuidsWithSdp()>
<android.view.animation.Animation: void setListenerHandler(android.os.Handler)>
<android.service.dreams.DreamService: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode.Callback)>
<android.opengl.GLES31: void glGetProgramPipelineiv(int,int,java.nio.IntBuffer)>
<android.widget.AutoCompleteTextView: android.widget.AutoCompleteTextView.Validator getValidator()>
<com.android.internal.widget.DecorContentParent: boolean canShowOverflowMenu()>
<android.nfc.NfcAdapter: void disableReaderMode(android.app.Activity)>
<com.android.internal.content.PackageMonitor: void onFinishPackageChanges()>
<android.content.pm.PackageInstaller.SessionInfo: java.lang.String getAppPackageName()>
<android.hardware.display.DisplayManagerGlobal: void setVirtualDisplaySurface(android.hardware.display.IVirtualDisplayCallback,android.view.Surface)>
<android.renderscript.Int2: void sub(android.renderscript.Int2)>
<android.content.ContentResolver: android.content.ContentResolver.OpenResourceIdResult getResourceId(android.net.Uri)>
<android.media.MediaScanner: byte[] extractAlbumArt(java.io.FileDescriptor)>
<android.os.Bundle: void putParcelableArray(java.lang.String,android.os.Parcelable[])>
<android.content.pm.PackageItemInfo: void <init>(android.os.Parcel)>
<android.widget.GridLayout: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>
<android.graphics.Region: boolean contains(int,int)>
<android.hardware.usb.UsbDevice: int getVendorId()>
<android.view.ViewParent: void onNestedPreScroll(android.view.View,int,int,int[])>
<android.app.DialogFragment: void onStop()>
<android.text.Annotation: int describeContents()>
<android.webkit.WebSettings: java.lang.String getSansSerifFontFamily()>
<android.net.NetworkCapabilities: int[] getCapabilities()>
<android.content.pm.PackageInstaller.Session: void addProgress(float)>
<android.hardware.location.GeofenceHardwareImpl: void reportGeofenceMonitorStatus(int,int,android.location.Location,int)>
<android.service.voice.VoiceInteractionSession.Request: void sendAbortVoiceResult(android.os.Bundle)>
<android.app.ActivityThread: android.app.LoadedApk getPackageInfoNoCheck(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo)>
<android.net.MobileLinkQualityInfo: void setMobileNetworkType(int)>
<android.bluetooth.BluetoothDevice: java.lang.String getAliasName()>
<android.widget.AbsListView: void sendAccessibilityEvent(int)>
<android.net.wifi.IWifiManager: java.util.List getChannelList()>
<com.android.internal.util.LocalLog: void w(java.lang.String)>
<android.location.GpsMeasurement: double getCn0InDbHz()>
<android.telephony.CellInfoWcdma: android.telephony.CellSignalStrengthWcdma getCellSignalStrength()>
<android.content.CursorEntityIterator: void reset()>
<android.renderscript.Double2: void sub(double)>
<android.widget.TextView: boolean getDefaultEditable()>
<android.os.BatteryStats: int getDischargeStartLevel()>
<com.android.internal.app.IBatteryStats: void noteWifiMulticastEnabledFromSource(android.os.WorkSource)>
<android.content.pm.PackageItemInfo: void <init>(android.content.pm.PackageItemInfo)>
<android.view.accessibility.AccessibilityManager: int addAccessibilityInteractionConnection(android.view.IWindow,android.view.accessibility.IAccessibilityInteractionConnection)>
<android.widget.TextView: boolean onGenericMotionEvent(android.view.MotionEvent)>
<android.print.PrintJobInfo: void <init>(android.print.PrintJobInfo)>
<android.media.MediaPlayer.OnSubtitleDataListener: void onSubtitleData(android.media.MediaPlayer,android.media.SubtitleData)>
<android.os.BaseBundle: void putString(java.lang.String,java.lang.String)>
<android.net.http.AndroidHttpClientConnection: org.apache.http.HttpConnectionMetrics getMetrics()>
<com.android.internal.telephony.ISms: boolean isImsSmsSupported()>
<android.opengl.GLES11Ext: void glPolygonOffsetxOES(int,int)>
<android.view.ViewDebug: android.view.View findView(android.view.View,java.lang.String)>
<android.widget.TextView: void setTextScaleX(float)>
<com.android.internal.util.StateMachine: void loge(java.lang.String)>
<android.database.Cursor: boolean isFirst()>
<com.android.internal.view.menu.SubMenuBuilder: android.view.SubMenu setHeaderIcon(int)>
<com.android.internal.widget.ResolverDrawerLayout.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>
<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>
<android.app.Notification.InboxStyle: android.app.Notification.InboxStyle setSummaryText(java.lang.CharSequence)>
<android.app.Fragment: void onDestroyOptionsMenu()>
<com.android.internal.statusbar.IStatusBar: void notificationLightPulse(int,int,int)>
<android.graphics.Movie: android.graphics.Movie decodeByteArray(byte[],int,int)>
<android.text.style.AbsoluteSizeSpan: void updateMeasureState(android.text.TextPaint)>
<android.bluetooth.BluetoothMap: android.bluetooth.BluetoothDevice getClient()>
<android.text.BidiFormatter: android.text.BidiFormatter getInstance(java.util.Locale)>
<com.android.internal.view.menu.MenuPresenter.Callback: void onCloseMenu(com.android.internal.view.menu.MenuBuilder,boolean)>
<android.webkit.WebView: void savePassword(java.lang.String,java.lang.String,java.lang.String)>
<android.opengl.GLES30: void glGetVertexAttribIuiv(int,int,int[],int)>
<android.text.style.TtsSpan: void <init>(android.os.Parcel)>
<android.location.Location: java.lang.String toString()>
<android.service.fingerprint.FingerprintManagerReceiver: void onProcessed(int)>
<android.security.KeyStore: boolean isHardwareBacked()>
<android.os.CommonTimeConfig: int setNetworkBinding(java.lang.String)>
<com.google.android.util.AbstractMessageParser.YouTubeVideo: java.lang.String getURL(java.lang.String,java.lang.String)>
<com.android.internal.widget.IRemoteViewsAdapterConnection: void onServiceConnected(android.os.IBinder)>
<android.graphics.drawable.AnimationDrawable: int getNumberOfFrames()>
<android.security.KeyStore: boolean ungrant(java.lang.String,int)>
<android.print.PrintFileDocumentAdapter: void <init>(android.content.Context,java.io.File,android.print.PrintDocumentInfo)>
<android.net.TrafficStats: void incrementOperationCount(int,int)>
<android.view.ViewRootImpl: void detachFunctor(long)>
<android.opengl.GLES31: void glProgramUniformMatrix3fv(int,int,int,boolean,float[],int)>
<android.location.Location: void setAltitude(double)>
<com.android.internal.widget.ActionBarOverlayLayout.LayoutParams: void <init>(android.view.ViewGroup.MarginLayoutParams)>
<android.os.BaseBundle: void putLong(java.lang.String,long)>
<com.android.internal.widget.ActionBarContainer: void onMeasure(int,int)>
<android.text.style.ScaleXSpan: void writeToParcel(android.os.Parcel,int)>
<android.widget.GridLayout.LayoutParams: void <init>(android.widget.GridLayout.Spec,android.widget.GridLayout.Spec)>
<android.app.backup.IBackupManager: void restoreAtInstall(java.lang.String,int)>
<android.animation.Keyframe: java.lang.Object getValue()>
<android.telephony.CellInfo: void setTimeStampType(int)>
<android.mtp.MtpDevice: void close()>
<android.media.ClosedCaptionWidget: void <init>(android.content.Context,android.util.AttributeSet)>
<android.os.BatteryStats: int getDischargeAmountScreenOnSinceCharge()>
<android.service.fingerprint.IFingerprintServiceReceiver: void onProcessed(int)>
<android.bluetooth.IBluetoothHeadset: boolean startVoiceRecognition(android.bluetooth.BluetoothDevice)>
<com.android.internal.statusbar.IStatusBar: void buzzBeepBlinked()>
<android.app.FragmentManagerImpl: android.app.Fragment findFragmentByTag(java.lang.String)>
<android.content.pm.PackageManager: void freeStorage(long,android.content.IntentSender)>
<android.net.wifi.p2p.WifiP2pWfdInfo: void setControlPort(int)>
<android.net.http.RequestHandle: void <init>(android.net.http.RequestQueue,java.lang.String,android.net.WebAddress,java.lang.String,java.util.Map,java.io.InputStream,int,android.net.http.Request)>
<android.filterfw.core.GLEnvironment: void setSurfaceTimestamp(long)>
<android.view.SurfaceHolder: void addCallback(android.view.SurfaceHolder.Callback)>
<android.content.PeriodicSync: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.app.ProcessMap: void remove(java.lang.String,int)>
<android.text.style.TtsSpan.ElectronicBuilder: android.text.style.TtsSpan.ElectronicBuilder setProtocol(java.lang.String)>
<android.service.dreams.DreamService: void setContentView(int)>
<android.renderscript.Double3: void div(double)>
<android.net.INetworkPolicyManager: void setUidPolicy(int,int)>
<android.preference.DialogPreference: void onDismiss(android.content.DialogInterface)>
<android.animation.LayoutTransition: void setStartDelay(int,long)>
<android.view.GestureDetector.SimpleOnGestureListener: boolean onSingleTapConfirmed(android.view.MotionEvent)>
<android.widget.ProgressBar: void setProgressDrawableTiled(android.graphics.drawable.Drawable)>
<android.app.AppOpsManager: android.os.IBinder getToken(com.android.internal.app.IAppOpsService)>
<android.content.pm.PackageInstaller.SessionParams: void dump(com.android.internal.util.IndentingPrintWriter)>
<android.hardware.SensorManager: boolean registerListener(android.hardware.SensorEventListener,android.hardware.Sensor,int,int,android.os.Handler)>
<android.widget.ListView: boolean areHeaderDividersEnabled()>
<com.android.internal.view.RotationPolicy: boolean isRotationSupported(android.content.Context)>
<android.view.ViewRootImpl: void setView(android.view.View,android.view.WindowManager.LayoutParams,android.view.View)>
<android.bluetooth.IBluetoothInputDevice: java.util.List getConnectedDevices()>
<android.app.Dialog: void dismiss()>
<android.content.pm.ManifestDigest: java.lang.String toString()>
<android.telephony.VoLteServiceState: void <init>(int)>
<android.hardware.hdmi.HdmiControlManager: void addHotplugEventListener(android.hardware.hdmi.HdmiControlManager.HotplugEventListener)>
<android.view.ViewParent: int getTextAlignment()>
<android.hardware.input.InputManager: void registerInputDeviceListener(android.hardware.input.InputManager.InputDeviceListener,android.os.Handler)>
<com.android.internal.view.IInputMethodSession: void updateExtractedText(int,android.view.inputmethod.ExtractedText)>
<android.webkit.CookieManager: java.lang.String getCookie(java.lang.String,boolean)>
<android.filterfw.core.NativeBuffer: android.filterfw.core.NativeBuffer retain()>
<android.os.SELinux: boolean isSELinuxEnforced()>
<android.content.ContentProvider: android.content.res.AssetFileDescriptor openAssetFile(android.net.Uri,java.lang.String,android.os.CancellationSignal)>
<com.android.internal.widget.ResolverDrawerLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<android.view.InputDevice: java.lang.String getName()>
<android.view.ViewGroup: void setChildrenDrawingOrderEnabled(boolean)>
<android.widget.SimpleAdapter: void setDropDownViewResource(int)>
<android.app.ActivityManager.TaskDescription: java.lang.String getLabel()>
<android.util.SparseArray: java.lang.Object valueAt(int)>
<com.android.internal.textservice.ITextServicesManager: void finishSpellCheckerService(com.android.internal.textservice.ISpellCheckerSessionListener)>
<android.view.animation.AccelerateDecelerateInterpolator: long createNativeInterpolator()>
<android.graphics.Matrix: void mapVectors(float[],int,float[],int,int)>
<android.media.tv.ITvInputSessionWrapper: void requestUnblockContent(java.lang.String)>
<android.telephony.CellSignalStrengthCdma: void copyFrom(android.telephony.CellSignalStrengthCdma)>
<android.database.sqlite.SQLiteConnection: int executeForChangedRowCount(java.lang.String,java.lang.Object[],android.os.CancellationSignal)>
<android.text.TextPaint: void <init>(android.graphics.Paint)>
<android.service.wallpaper.WallpaperService.Engine: void onOffsetsChanged(float,float,float,float,int,int)>
<android.media.MediaActionSound: void play(int)>
<android.graphics.RectF: boolean contains(android.graphics.RectF)>
<com.android.internal.backup.LocalTransport: int sendBackupData(int)>
<android.nfc.cardemulation.ApduServiceInfo: java.util.ArrayList getAidGroups()>
<android.content.pm.LauncherApps.Callback: void onPackageRemoved(java.lang.String,android.os.UserHandle)>
<android.util.SparseIntArray: int indexOfKey(int)>
<com.android.internal.app.IBatteryStats: void noteStartWakelockFromSource(android.os.WorkSource,int,java.lang.String,java.lang.String,int,boolean)>
<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable.Callback)>
<android.media.browse.MediaBrowser.MediaItem: java.lang.String toString()>
<android.widget.RemoteViews: void setContentDescription(int,java.lang.CharSequence)>
<android.print.PrintJobId: boolean equals(java.lang.Object)>
<android.webkit.GeolocationPermissions.Callback: void invoke(java.lang.String,boolean,boolean)>
<android.view.ViewRootImpl: android.view.accessibility.AccessibilityNodeInfo getAccessibilityFocusedVirtualView()>
<android.opengl.GLES11Ext: void glOrthoxOES(int,int,int,int,int,int)>
<android.bluetooth.BluetoothHeadsetClient: boolean stopVoiceRecognition(android.bluetooth.BluetoothDevice)>
<android.service.notification.NotificationListenerService: void cancelNotifications(java.lang.String[])>
<android.renderscript.Path: android.renderscript.Allocation getVertexAllocation()>
<android.media.AudioAttributes.Builder: android.media.AudioAttributes.Builder setCapturePreset(int)>
<android.view.inputmethod.InputMethodManager: void showInputMethodPicker()>
<android.net.http.DelegatingSSLSession: java.security.Principal getPeerPrincipal()>
<android.view.ViewGroup: boolean drawChild(android.graphics.Canvas,android.view.View,long)>
<android.database.sqlite.SqliteWrapper: boolean requery(android.content.Context,android.database.Cursor)>
<android.database.CursorWindow: boolean putBlob(byte[],int,int)>
<android.content.res.Resources.Theme: void dump(int,java.lang.String,java.lang.String)>
<android.widget.HeaderViewListAdapter: int getCount()>
<android.util.MonthDisplayHelper: int getYear()>
<com.android.internal.content.PackageMonitor: boolean isReplacing()>
<android.location.GpsClock: int describeContents()>
<android.renderscript.RenderScriptGL: void resume()>
<android.net.SntpClient: long getRoundTripTime()>
<android.database.sqlite.SQLiteReadOnlyDatabaseException: void <init>(java.lang.String)>
<com.android.internal.telecom.ITelecomService: int getCurrentTtyMode()>
<android.hardware.soundtrigger.SoundTriggerModule: void finalize()>
<android.telephony.SignalStrength: int getLteRsrq()>
<android.opengl.GLES10: void glClearColor(float,float,float,float)>
<android.os.Parcel: void writeBundle(android.os.Bundle)>
<android.content.pm.PackageParser.ProviderIntentInfo: void <init>(android.content.pm.PackageParser.Provider)>
<android.widget.Chronometer: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.database.DatabaseUtils: void cursorRowToContentValues(android.database.Cursor,android.content.ContentValues)>
<com.android.internal.app.MediaRouteChooserDialog: void onDetachedFromWindow()>
<android.net.NetworkCapabilities: void <init>(android.net.NetworkCapabilities)>
<android.media.SubtitleTrack: void show()>
<android.renderscript.Int2: void addMultiple(android.renderscript.Int2,int)>
<android.security.KeyStore: boolean delete(java.lang.String)>
<android.widget.AbsListView: void onInitializeAccessibilityNodeInfoForItem(android.view.View,int,android.view.accessibility.AccessibilityNodeInfo)>
<android.print.PrintAttributes.MediaSize: java.lang.String getId()>
<android.net.http.Headers: java.lang.String getWwwAuthenticate()>
<android.content.UndoManager: void endUpdate()>
<android.opengl.GLES20: java.lang.String glGetShaderSource(int)>
<android.media.session.MediaController.Callback: void onMetadataChanged(android.media.MediaMetadata)>
<android.transition.Transition: android.transition.Transition addTarget(int)>
<android.hardware.camera2.legacy.RequestHolder: boolean requestFailed()>
<android.app.SearchableInfo: boolean useBadgeIcon()>
<android.webkit.WebSettings: void setAppCacheMaxSize(long)>
<android.service.notification.StatusBarNotification: int describeContents()>
<android.app.ActionBar.LayoutParams: void <init>(int)>
<android.media.tv.ITvInputSession: void selectTrack(int,java.lang.String)>
<android.os.RecoverySystem.ProgressListener: void onProgress(int)>
<android.graphics.Picture: void <init>(android.graphics.Picture)>
<android.widget.AbsListView: void beforeTextChanged(java.lang.CharSequence,int,int,int)>
<android.widget.TabHost: void <init>(android.content.Context,android.util.AttributeSet)>
<android.hardware.camera2.legacy.LegacyCameraDevice: long flush()>
<android.media.audiofx.Equalizer: short getCurrentPreset()>
<android.graphics.Matrix: boolean preSkew(float,float)>
<android.telephony.ServiceState: java.lang.String getOperatorAlphaShort()>
<android.opengl.GLSurfaceView.EGLContextFactory: javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig)>
<android.graphics.Bitmap: android.graphics.Bitmap copy(android.graphics.Bitmap.Config,boolean)>
<com.android.internal.widget.AbsActionBarView: boolean isOverflowMenuShowing()>
<android.accounts.IAccountManager: void getAccountsByFeatures(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String[])>
<android.view.ThreadedRenderer: void finalize()>
<android.net.LocalSocket: int getSoTimeout()>
<android.telecom.Call.Listener: void onParentChanged(android.telecom.Call,android.telecom.Call)>
<android.graphics.drawable.ShapeDrawable: void setPadding(int,int,int,int)>
<android.text.style.ReplacementSpan: void updateMeasureState(android.text.TextPaint)>
<android.net.WifiKey: int describeContents()>
<com.android.internal.backup.LocalTransport: void <init>(android.content.Context)>
<android.media.IRemoteDisplayProvider: void disconnect(java.lang.String)>
<android.graphics.drawable.AnimatedRotateDrawable: void setTintList(android.content.res.ColorStateList)>
<android.preference.Preference: boolean getShouldDisableView()>
<android.filterpacks.imageproc.Invert: void <init>(java.lang.String)>
<com.android.internal.app.IVoiceInteractorRequest: void cancel()>
<android.widget.RadialTimePickerView: void onMeasure(int,int)>
<android.util.PathParser.PathDataNode: void nodesToPath(android.util.PathParser.PathDataNode[],android.graphics.Path)>
<android.service.voice.VoiceInteractionSession: void onCompleteVoice(android.service.voice.VoiceInteractionSession.Caller,android.service.voice.VoiceInteractionSession.Request,java.lang.CharSequence,android.os.Bundle)>
<android.widget.TableLayout: void addView(android.view.View,int)>
<android.view.Window: android.transition.Transition getEnterTransition()>
<android.graphics.SurfaceTexture: void <init>(int)>
<android.bluetooth.le.AdvertiseSettings: int describeContents()>
<android.widget.Filter: void publishResults(java.lang.CharSequence,android.widget.Filter.FilterResults)>
<android.hardware.hdmi.IHdmiRecordListener: void onOneTouchRecordResult(int)>
<android.view.ViewGroup: void dispatchRestoreInstanceState(android.util.SparseArray)>
<android.security.KeyStore: boolean clearUid(int)>
<android.app.RemoteInput.Builder: android.app.RemoteInput build()>
<android.view.ViewGroup: boolean onNestedPreFling(android.view.View,float,float)>
<com.android.internal.util.IndentingPrintWriter: void <init>(java.io.Writer,java.lang.String,int)>
<android.view.View: void setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)>
<android.renderscript.Long4: void <init>(android.renderscript.Long4)>
<android.animation.AnimatorSet: boolean canReverse()>
<android.service.voice.VoiceInteractionSessionService: android.os.IBinder onBind(android.content.Intent)>
<android.bluetooth.IBluetoothGattCallback: void onGetIncludedService(java.lang.String,int,int,android.os.ParcelUuid,int,int,android.os.ParcelUuid)>
<android.view.GraphicBuffer: int getUsage()>
<android.os.Looper: java.lang.String toString()>
<android.content.ContentResolver: android.content.res.AssetFileDescriptor openAssetFileDescriptor(android.net.Uri,java.lang.String,android.os.CancellationSignal)>
<android.widget.SpellChecker: void spellCheck(int,int)>
<android.content.RestrictionEntry: int getIntValue()>
<android.media.SubtitleController: void finalize()>
<com.android.internal.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)>
<android.os.Parcel: void setDataCapacity(int)>
<com.android.internal.util.GrowingArrayUtils: long[] append(long[],int,long)>
<android.widget.TextView: boolean hasSelection()>
<android.util.Patterns: java.lang.String concatGroups(java.util.regex.Matcher)>
<android.accounts.IAccountManager: android.accounts.Account[] getAccountsByTypeForPackage(java.lang.String,java.lang.String)>
<android.widget.ListPopupWindow: android.view.View getAnchorView()>
<android.webkit.WebView: boolean setFrame(int,int,int,int)>
<android.widget.VideoView: void setVideoPath(java.lang.String)>
<com.android.internal.telephony.ISms: void sendStoredMultipartText(long,java.lang.String,android.net.Uri,java.lang.String,java.util.List,java.util.List)>
<android.net.LocalSocket: java.io.FileDescriptor[] getAncillaryFileDescriptors()>
<android.app.usage.ConfigurationStats: long getLastTimeStamp()>
<android.preference.Preference: void setTitle(int)>
<android.os.Debug.InstructionCount: boolean resetAndStart()>
<android.graphics.drawable.AnimatedRotateDrawable: void stop()>
<android.widget.AbsSeekBar: boolean getSplitTrack()>
<android.transition.Crossfade: android.transition.Crossfade setFadeBehavior(int)>
<android.accounts.GrantCredentialsPermissionActivity: void finish()>
<android.animation.BidirectionalTypeConverter: java.lang.Object convertBack(java.lang.Object)>
<android.renderscript.Type.Builder: android.renderscript.Type.Builder setZ(int)>
<android.app.Notification.WearableExtender: int getCustomSizePreset()>
<android.animation.Keyframe: android.animation.Keyframe ofFloat(float,float)>
<android.telephony.gsm.GsmCellLocation: int getLac()>
<android.filterfw.core.FilterGraph: void setTypeCheckMode(int)>
<android.app.ProfilerInfo: int describeContents()>
<com.android.internal.inputmethod.InputMethodUtils: boolean containsSubtypeOf(android.view.inputmethod.InputMethodInfo,java.util.Locale,boolean,java.lang.String)>
<android.view.ViewRootImpl: boolean onNestedPreFling(android.view.View,float,float)>
<android.graphics.LightingColorFilter: void setColorAdd(int)>
<android.preference.PreferenceGroupAdapter: int getItemViewType(int)>
<android.content.ContextWrapper: void startActivity(android.content.Intent,android.os.Bundle)>
<android.os.Handler: void dispatchMessage(android.os.Message)>
<android.media.tv.TvView: void tune(java.lang.String,android.net.Uri)>
<com.android.internal.os.ProcessCpuTracker: com.android.internal.os.ProcessCpuTracker.Stats getWorkingStats(int)>
<android.graphics.Bitmap: void setPixels(int[],int,int,int,int,int,int)>
<android.net.wifi.p2p.WifiP2pWfdInfo: void setSessionAvailable(boolean)>
<com.android.internal.net.VpnProfile: void <init>(android.os.Parcel)>
<android.hardware.Camera.Parameters: java.util.List getSupportedPictureSizes()>
<com.android.internal.preference.YesNoPreference: void onDialogClosed(boolean)>
<android.animation.Animator: void end()>
<android.content.ContextWrapper: void enforceCallingOrSelfUriPermission(android.net.Uri,int,java.lang.String)>
<android.provider.DocumentsProvider: android.net.Uri canonicalize(android.net.Uri)>
<android.widget.RelativeLayout.LayoutParams: void addRule(int)>
<android.filterfw.core.FrameFormat: android.filterfw.core.FrameFormat unspecified()>
<android.view.View: boolean getKeepScreenOn()>
<android.filterfw.FilterFunctionEnvironment: void <init>(android.filterfw.core.FrameManager)>
<android.hardware.camera2.impl.CaptureResultExtras: int getAfTriggerId()>
<android.content.ContentInsertHandler: void insert(android.content.ContentResolver,java.io.InputStream)>
<android.app.ActivityView: boolean isAttachedToDisplay()>
<com.android.internal.database.SortCursor: int getType(int)>
<android.graphics.drawable.InsetDrawable: void getOutline(android.graphics.Outline)>
<android.net.LocalSocket: android.net.LocalSocketAddress getRemoteSocketAddress()>
<android.widget.AbsListView.RecyclerListener: void onMovedToScrapHeap(android.view.View)>
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)>
<android.view.accessibility.AccessibilityInteractionClient: android.view.accessibility.AccessibilityNodeInfo getRootInActiveWindow(int)>
<com.android.internal.widget.ToolbarWidgetWrapper: java.lang.CharSequence getTitle()>
<android.renderscript.Float3: android.renderscript.Float3 add(android.renderscript.Float3,float)>
<android.drm.DrmSupportInfo: java.lang.String getDescription()>
<com.android.internal.util.State: boolean processMessage(android.os.Message)>
<android.net.DhcpResults: void writeToParcel(android.os.Parcel,int)>
<android.graphics.Matrix: void finalize()>
<android.net.PacProxySelector: void connectFailed(java.net.URI,java.net.SocketAddress,java.io.IOException)>
<android.emoji.EmojiFactory: android.emoji.EmojiFactory newInstance(java.lang.String)>
<android.app.ActivityManager.RecentTaskInfo: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.widget.multiwaveview.GlowPadView: void onDraw(android.graphics.Canvas)>
<android.app.ISearchManager: android.content.ComponentName getGlobalSearchActivity()>
<android.widget.TextView: void setAccessibilitySelection(int,int)>
<android.nfc.Tag: void <init>(byte[],int[],android.os.Bundle[],int,android.nfc.INfcTag)>
<android.view.View: boolean isVerticalScrollBarEnabled()>
<android.widget.AbsListView: void onWindowFocusChanged(boolean)>
<android.nfc.ApduList: int describeContents()>
<android.content.res.AssetManager: int addAssetPath(java.lang.String)>
<android.text.method.MetaKeyKeyListener: int getMetaState(java.lang.CharSequence,int,android.view.KeyEvent)>
<android.widget.FrameLayout: void setForeground(android.graphics.drawable.Drawable)>
<android.hardware.input.InputManager: boolean[] deviceHasKeys(int,int[])>
<android.media.MediaMetadataEditor: java.lang.String getString(int,java.lang.String)>
<android.view.View: int getWidth()>
<com.android.internal.os.BatteryStatsHelper: void dropFile(android.content.Context,java.lang.String)>
<android.app.Notification.Style: android.app.Notification build()>
<android.util.PathParser: android.util.PathParser.PathDataNode[] createNodesFromPathData(java.lang.String)>
<com.android.internal.widget.ActionBarView: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>
<android.os.SELinux: java.lang.String getPidContext(int)>
<android.app.Notification.Builder: android.app.Notification.Builder setSound(android.net.Uri,android.media.AudioAttributes)>
<android.database.AbstractWindowedCursor: void copyStringToBuffer(int,android.database.CharArrayBuffer)>
<android.hardware.usb.UsbDevice: void setConfigurations(android.os.Parcelable[])>
<android.app.Notification.Builder: android.app.Notification.Builder addAction(android.app.Notification.Action)>
<android.view.RenderNode: void addAnimator(android.view.RenderNodeAnimator)>
<android.widget.NumberPicker: int getMaxValue()>
<android.app.PackageDeleteObserver: android.content.pm.IPackageDeleteObserver2 getBinder()>
<android.util.MathUtils: float min(int,int)>
<android.os.BatteryStats: boolean startIteratingOldHistoryLocked()>
<android.media.tv.TvInputManager.Session: void setSurface(android.view.Surface)>
<android.database.Cursor: double getDouble(int)>
<com.google.android.util.AbstractMessageParser.TrieNode: java.lang.String getText()>
<android.net.TrafficStats: long getMobileTcpTxPackets()>
<android.app.ActionBar: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<android.app.IApplicationThread: void setProcessState(int)>
<android.content.ContentResolver: java.lang.Object addStatusChangeListener(int,android.content.SyncStatusObserver)>
<android.telephony.SubscriptionManager: long[] getActiveSubIdList()>
<com.android.internal.app.IVoiceInteractorCallback: void deliverConfirmationResult(com.android.internal.app.IVoiceInteractorRequest,boolean,android.os.Bundle)>
<android.app.ActivityManager: boolean isLowRamDevice()>
<android.widget.Spinner: int getDropDownWidth()>
<android.speech.tts.ITextToSpeechService: int loadLanguage(android.os.IBinder,java.lang.String,java.lang.String,java.lang.String)>
<android.app.IActivityManager: void notifyEnterAnimationComplete(android.os.IBinder)>
<android.telephony.CellIdentityLte: int getTac()>
<android.util.Log.TerribleFailureHandler: void onTerribleFailure(java.lang.String,android.util.Log.TerribleFailure,boolean)>
<com.android.internal.util.AsyncChannel: void connect(com.android.internal.util.AsyncService,android.os.Messenger)>
<android.hardware.display.WifiDisplayStatus: java.lang.String toString()>
<com.android.internal.widget.ActionBarOverlayLayout: int getActionBarHideOffset()>
<android.view.inputmethod.InputMethodInfo: boolean isDefault(android.content.Context)>
<com.google.android.gles_jni.GLImpl: void glCurrentPaletteMatrixOES(int)>
<android.renderscript.Sampler: android.renderscript.Sampler.Value getWrapT()>
<android.print.PrinterDiscoverySession: void startPrinterStateTracking(android.print.PrinterId)>
<android.widget.TextView: void setTextColor(int)>
<android.text.style.SuggestionSpan: int getSpanTypeId()>
<android.view.GestureDetector.OnDoubleTapListener: boolean onSingleTapConfirmed(android.view.MotionEvent)>
<android.content.pm.ILauncherApps: void addOnAppsChangedListener(android.content.pm.IOnAppsChangedListener)>
<android.view.InputEventConsistencyVerifier: void onTouchEvent(android.view.MotionEvent,int)>
<com.android.internal.view.menu.MenuPopupHelper: void onRestoreInstanceState(android.os.Parcelable)>
<android.media.MediaCodecInfo.EncoderCapabilities: boolean supportsFormat(android.media.MediaFormat)>
<android.renderscript.Program.BaseProgramBuilder: void <init>(android.renderscript.RenderScript)>
<android.graphics.Canvas: void skew(float,float)>
<android.view.WindowManagerPolicy.WindowState: android.graphics.RectF getShownFrameLw()>
<android.app.LauncherActivity: boolean onEvaluateShowIcons()>
<android.app.ActivityManager: int getLargeMemoryClass()>
<android.app.IActivityManager: int checkUriPermission(android.net.Uri,int,int,int,int)>
<android.media.audiofx.EnvironmentalReverb: short getReflectionsLevel()>
<android.graphics.pdf.PdfDocument: void finishPage(android.graphics.pdf.PdfDocument.Page)>
<android.content.res.AssetManager: int[] addAssetPaths(java.lang.String[])>
<android.media.JetPlayer: boolean clearQueue()>
<android.app.FragmentManager: void invalidateOptionsMenu()>
<android.renderscript.Float3: void addMultiple(android.renderscript.Float3,float)>
<android.view.TextureView.SurfaceTextureListener: void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int)>
<android.view.WindowManagerImpl: void <init>(android.view.Display)>
<com.android.internal.widget.SizeAdaptiveLayout: android.animation.Animator getTransitionAnimation()>
<android.nfc.tech.NfcV: android.nfc.tech.NfcV get(android.nfc.Tag)>
<android.widget.Gallery: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>
<com.android.internal.view.menu.IconMenuView: boolean invokeItem(com.android.internal.view.menu.MenuItemImpl)>
<android.print.PrinterInfo.Builder: android.print.PrinterInfo.Builder setCapabilities(android.print.PrinterCapabilitiesInfo)>
<android.webkit.WebViewClient: void onReceivedLoginRequest(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String)>
<android.os.Parcel: void writeLongArray(long[])>
<android.net.NetworkStats: java.lang.String toString()>
<android.content.res.Configuration: void setToDefaults()>
<android.net.LinkProperties: void setHttpProxy(android.net.ProxyInfo)>
<android.inputmethodservice.InputMethodService: void onConfigureWindow(android.view.Window,boolean,boolean)>
<android.widget.ImageView: void setBaseline(int)>
<android.drm.DrmManagerClient: java.lang.String[] getAvailableDrmEngines()>
<android.opengl.GLU: java.lang.String gluErrorString(int)>
<android.text.BoringLayout: android.text.BoringLayout make(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,android.text.BoringLayout.Metrics,boolean)>
<android.app.backup.BackupDataInputStream: java.lang.String getKey()>
<android.renderscript.Float2: void sub(android.renderscript.Float2)>
<android.preference.Preference: android.content.SharedPreferences getSharedPreferences()>
<android.widget.CompoundButton: android.os.Parcelable onSaveInstanceState()>
<android.os.Binder: boolean unlinkToDeath(android.os.IBinder.DeathRecipient,int)>
<com.android.internal.view.menu.MenuPopupHelper: void <init>(android.content.Context,com.android.internal.view.menu.MenuBuilder,android.view.View,boolean,int)>
<android.app.IActivityManager: boolean isTopOfTask(android.os.IBinder)>
<android.net.ConnectivityManager: java.lang.String[] getTetheredDhcpRanges()>
<android.net.http.AndroidHttpClientConnection: org.apache.http.HttpEntity receiveResponseEntity(android.net.http.Headers)>
<android.location.Address: java.lang.String getCountryCode()>
<android.preference.SeekBarVolumizer: void <init>(android.content.Context,int,android.net.Uri,android.preference.SeekBarVolumizer.Callback)>
<android.app.backup.RestoreSession: int restoreSome(long,android.app.backup.RestoreObserver,java.lang.String[])>
<android.service.voice.VoiceInteractionSession: android.app.Dialog getWindow()>
<android.hardware.GeomagneticField: float getHorizontalStrength()>
<android.os.HandlerThread: int getThreadId()>
<android.app.ActivityManagerProxy: void showBootMessage(java.lang.CharSequence,boolean)>
<android.bluetooth.BluetoothGatt: android.bluetooth.BluetoothDevice getDevice()>
<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<android.text.Editable: void clearSpans()>
<android.text.style.TtsSpan.CardinalBuilder: void <init>(long)>
<android.graphics.drawable.Drawable: void copyBounds(android.graphics.Rect)>
<android.view.InputEventReceiver: void finishInputEvent(android.view.InputEvent,boolean)>
<android.hardware.camera2.utils.ParamsUtils: android.util.Rational createRational(float)>
<android.content.pm.PackageManager: android.content.ComponentName getHomeActivities(java.util.List)>
<android.widget.Toolbar: void onRtlPropertiesChanged(int)>
<android.graphics.drawable.NinePatchDrawable: boolean getPadding(android.graphics.Rect)>
<android.widget.AbsSpinner: void setSelection(int,boolean)>
<android.app.ActivityManagerProxy: android.content.pm.UserInfo getCurrentUser()>
<com.android.internal.util.AsyncService: int onStartCommand(android.content.Intent,int,int)>
<android.telecom.RemoteConference: void unhold()>
<com.android.internal.view.menu.MenuPopupHelper: void onViewAttachedToWindow(android.view.View)>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder detectCustomSlowCalls()>
<com.google.android.gles_jni.GLImpl: void glFogx(int,int)>
<android.os.BatteryStats: long getNetworkActivityBytes(int,int)>
<android.net.http.DelegatingSSLSession: java.lang.String getProtocol()>
<android.widget.FrameLayout: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.app.Notification.Builder: android.app.Notification.Builder setSound(android.net.Uri)>
<android.content.Intent: android.content.Intent setType(java.lang.String)>
<android.database.CursorWindow: long getLong(int,int)>
<com.android.internal.widget.PointerLocationView: void onPointerEvent(android.view.MotionEvent)>
<android.os.Message: void copyFrom(android.os.Message)>
<android.filterfw.core.AsyncRunner: void close()>
<android.media.session.PlaybackState.Builder: void <init>(android.media.session.PlaybackState)>
<android.content.Intent: short[] getShortArrayExtra(java.lang.String)>
<android.graphics.Movie: int duration()>
<android.media.MediaCodecInfo: java.lang.String[] getSupportedTypes()>
<android.widget.CalendarView: long getMaxDate()>
<android.bluetooth.IBluetoothHealth: boolean registerAppConfiguration(android.bluetooth.BluetoothHealthAppConfiguration,android.bluetooth.IBluetoothHealthCallback)>
<com.google.android.gles_jni.GLImpl: void glRotatex(int,int,int,int)>
<android.widget.ViewAnimator: android.view.View getCurrentView()>
<android.view.PointerIcon: float getHotSpotX()>
<android.net.wifi.WifiSsid: java.lang.String getHexString()>
<android.hardware.location.GeofenceHardwareRequest: int getLastTransition()>
<android.view.inputmethod.BaseInputConnection: java.lang.CharSequence getTextAfterCursor(int,int)>
<android.media.session.ISessionController: java.lang.CharSequence getQueueTitle()>
<android.media.MediaCodec: void release()>
<android.media.ExifInterface: boolean hasThumbnail()>
<com.android.internal.telephony.CallerInfo: com.android.internal.telephony.CallerInfo getCallerInfo(android.content.Context,java.lang.String)>
<android.telephony.CellSignalStrengthCdma: int getEvdoLevel()>
<android.security.AndroidKeyStore: java.lang.String engineGetCertificateAlias(java.security.cert.Certificate)>
<android.app.ListActivity: int getSelectedItemPosition()>
<com.android.internal.statusbar.IStatusBar: void topAppWindowChanged(boolean)>
<android.net.LinkQualityInfo: void setTheoreticalRxBandwidth(int)>
<android.media.audiofx.AudioEffect: short byteArrayToShort(byte[],int)>
<android.app.usage.UsageEvents.Event: int getEventType()>
<android.net.Uri: boolean isOpaque()>
<android.view.inputmethod.EditorInfo: int describeContents()>
<android.graphics.drawable.Drawable.ConstantState: android.graphics.drawable.Drawable newDrawable()>
<android.view.animation.AnimationSet: java.util.List getAnimations()>
<android.app.RemoteInput: boolean getAllowFreeFormInput()>
<android.service.dreams.DreamService: boolean dispatchTouchEvent(android.view.MotionEvent)>
<android.opengl.GLU: void gluPerspective(javax.microedition.khronos.opengles.GL10,float,float,float,float)>
<android.view.MotionEvent: boolean isTouchEvent()>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder replace(int,int,java.lang.CharSequence,int,int)>
<android.opengl.GLES20: void glUniformMatrix3fv(int,int,boolean,java.nio.FloatBuffer)>
<android.os.BatteryStats.Uid.Proc: boolean isActive()>
<android.opengl.GLES11Ext: void glLightModelxOES(int,int)>
<android.app.AppImportanceMonitor: int getImportance(int)>
<android.app.admin.DevicePolicyManager: void setActivePasswordState(int,int,int,int,int,int,int,int,int)>
<android.content.pm.Signature: void <init>(byte[])>
<android.animation.AnimatorListenerAdapter: void onAnimationPause(android.animation.Animator)>
<com.android.internal.content.PackageHelper: long extractPublicFiles(java.io.File,java.io.File)>
<android.view.MotionEvent: int axisFromString(java.lang.String)>
<android.renderscript.Byte4: void <init>(byte,byte,byte,byte)>
<android.webkit.WebView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.os.BatteryStats.Uid: void noteWifiRunningLocked(long)>
<android.renderscript.Element: android.renderscript.Element U8_3(android.renderscript.RenderScript)>
<android.filterfw.core.MutableFrameFormat: void setDimensions(int)>
<android.net.wifi.p2p.WifiP2pDevice: boolean wpsDisplaySupported()>
<android.widget.ExpandableListView: void <init>(android.content.Context)>
<android.os.WorkSource: java.lang.String getName(int)>
<android.widget.AdapterViewAnimator: int getDisplayedChild()>
<android.nfc.NdefMessage: java.lang.String toString()>
<android.webkit.WebView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.graphics.BitmapRegionDecoder: boolean isRecycled()>
<android.net.NetworkUtils: boolean bindProcessToNetworkForHostResolution(int)>
<android.gesture.GesturePoint: void <init>(float,float,long)>
<android.widget.Toolbar: boolean hideOverflowMenu()>
<com.android.internal.os.BatteryStatsImpl.Uid: android.os.BatteryStats.Uid.Pid getPidStatsLocked(int)>
<android.renderscript.ScriptIntrinsicBlend: void forEachMultiply(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>
<android.app.Fragment.InstantiationException: void <init>(java.lang.String,java.lang.Exception)>
<android.view.ViewGroup: boolean dispatchDragEvent(android.view.DragEvent)>
<com.google.android.util.AbstractMessageParser.YouTubeVideo: java.lang.String getPrefixedURL(boolean,java.lang.String,java.lang.String,java.lang.String)>
<android.preference.TwoStatePreference: void onClick()>
<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getSubscriberId()>
<android.view.inputmethod.BaseInputConnection: void setComposingSpans(android.text.Spannable,int,int)>
<android.bluetooth.IBluetooth: boolean setMessageAccessPermission(android.bluetooth.BluetoothDevice,int)>
<android.database.sqlite.SQLiteCursor: void setSelectionArguments(java.lang.String[])>
<android.view.KeyEvent: void <init>(long,long,int,int,int,int)>
<android.graphics.drawable.Drawable: int getLayoutDirection()>
<android.view.Window: void setVolumeControlStream(int)>
<android.app.ApplicationThreadProxy: void requestAssistContextExtras(android.os.IBinder,android.os.IBinder,int)>
<android.util.LruCache: void evictAll()>
<android.view.PointerIcon: int getStyle()>
<android.transition.ChangeText: void captureStartValues(android.transition.TransitionValues)>
<android.media.MediaDescription.Builder: android.media.MediaDescription.Builder setExtras(android.os.Bundle)>
<com.android.internal.inputmethod.InputMethodUtils.InputMethodSettings: boolean buildAndPutEnabledInputMethodsStrRemovingIdLocked(java.lang.StringBuilder,java.util.List,java.lang.String)>
<com.android.internal.util.XmlUtils: boolean convertValueToBoolean(java.lang.CharSequence,boolean)>
<android.graphics.Point: void <init>(int,int)>
<android.net.http.HttpAuthHeader: boolean isSupportedScheme()>
<android.media.MediaPlayer: void addSubtitleSource(java.io.InputStream,android.media.MediaFormat)>
<android.widget.ExpandableListAdapter: long getChildId(int,int)>
<android.widget.RatingBar: void setNumStars(int)>
<android.webkit.FindActionModeCallback: boolean onCreateActionMode(android.view.ActionMode,android.view.Menu)>
<android.os.INetworkManagementService: void addRoute(int,android.net.RouteInfo)>
<android.webkit.ConsoleMessage: android.webkit.ConsoleMessage.MessageLevel messageLevel()>
<android.gesture.GestureOverlayView: void cancelGesture()>
<com.android.internal.widget.ActionBarOverlayLayout: void setIcon(int)>
<android.graphics.Interpolator: void reset(int,int)>
<android.telephony.PhoneNumberUtils: boolean isDialable(char)>
<android.webkit.WebViewProvider: android.webkit.WebSettings getSettings()>
<android.location.Location: void setLongitude(double)>
<android.nfc.cardemulation.HostApduService: android.os.IBinder onBind(android.content.Intent)>
<android.speech.srec.WaveHeader: android.speech.srec.WaveHeader setNumChannels(short)>
<com.android.internal.app.IBatteryStats: void noteScreenState(int)>
<android.widget.ViewFlipper: void <init>(android.content.Context)>
<android.view.Menu: android.view.SubMenu addSubMenu(java.lang.CharSequence)>
<android.opengl.GLES10: void glMultMatrixx(int[],int)>
<android.graphics.drawable.RippleDrawable: void onBoundsChange(android.graphics.Rect)>
<android.widget.NumberPicker: int computeVerticalScrollOffset()>
<android.media.MediaMetadataRetriever: void finalize()>
<android.drm.DrmSupportInfo: java.util.Iterator getMimeTypeIterator()>
<android.view.InputEventSender: void finalize()>
<android.preference.PreferenceGroup: int getPreferenceCount()>
<android.accounts.IAccountManager: void setUserData(android.accounts.Account,java.lang.String,java.lang.String)>
<android.widget.ListPopupWindow.ForwardingListener: boolean onForwardingStopped()>
<android.opengl.GLES30: void glCopyTexSubImage3D(int,int,int,int,int,int,int,int,int)>
<android.text.method.DateTimeKeyListener: char[] getAcceptedChars()>
<com.android.internal.view.menu.IconMenuItemView: void onLayout(boolean,int,int,int,int)>
<android.renderscript.Float4: android.renderscript.Float4 add(android.renderscript.Float4,android.renderscript.Float4)>
<android.inputmethodservice.KeyboardView: boolean handleBack()>
<android.speech.tts.ITextToSpeechService: java.util.List getVoices()>
<com.android.server.BootReceiver: void onReceive(android.content.Context,android.content.Intent)>
<android.media.session.MediaController.PlaybackInfo: int getPlaybackType()>
<android.telecom.TelecomManager: void registerPhoneAccount(android.telecom.PhoneAccount)>
<android.hardware.location.ActivityRecognitionHardware: java.lang.String[] getSupportedActivities()>
<android.view.inputmethod.InputConnectionWrapper: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)>
<android.net.VpnService.Builder: android.net.VpnService.Builder setConfigureIntent(android.app.PendingIntent)>
<android.renderscript.Short2: android.renderscript.Short2 mod(android.renderscript.Short2,short)>
<android.app.Activity: android.database.Cursor managedQuery(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String)>
<android.view.ViewGroup: boolean hasHoveredChild()>
<android.view.ActionProvider: boolean isVisible()>
<com.android.internal.widget.ScrollingTabContainerView: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<android.graphics.Paint: android.graphics.Rasterizer setRasterizer(android.graphics.Rasterizer)>
<android.filterfw.core.NativeFrame: java.nio.ByteBuffer getData()>
<android.opengl.GLES30: void glTransformFeedbackVaryings(int,java.lang.String[],int)>
<android.os.MemoryFile: void close()>
<android.hardware.camera2.impl.CallbackProxies.SessionStateCallbackProxy: void onReady(android.hardware.camera2.CameraCaptureSession)>
<android.graphics.Rect: void union(int,int,int,int)>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDSubtract()>
<android.bluetooth.BluetoothGattService: void setInstanceId(int)>
<android.renderscript.Short4: void mod(android.renderscript.Short4)>
<android.service.wallpaper.IWallpaperConnection: android.os.ParcelFileDescriptor setWallpaper(java.lang.String)>
<android.telecom.Conference: android.telecom.PhoneAccountHandle getPhoneAccountHandle()>
<android.view.ViewDebug: void dumpCapturedView(java.lang.String,java.lang.Object)>
<android.telecom.RemoteConnection.VideoProvider.Listener: void onCameraCapabilitiesChanged(android.telecom.RemoteConnection.VideoProvider,android.telecom.CameraCapabilities)>
<com.android.internal.app.ToolbarActionBar: void removeTabAt(int)>
<android.os.INetworkManagementService: boolean isFirewallEnabled()>
<com.android.internal.telephony.ITelephonyRegistry: void notifySignalStrengthForSubscriber(long,android.telephony.SignalStrength)>
<android.renderscript.Short4: void div(short)>
<com.google.android.gles_jni.GLImpl: void glClipPlanef(int,float[],int)>
<android.text.method.QwertyKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>
<android.service.voice.IVoiceInteractionSession: void closeSystemDialogs()>
<android.os.ResultReceiver: void <init>(android.os.Handler)>
<android.hardware.camera2.legacy.CameraDeviceUserShim: int cancelRequest(int,android.hardware.camera2.utils.LongParcelable)>
<android.emoji.EmojiFactory: int getMinimumAndroidPua()>
<android.widget.ActionMenuPresenter: boolean dismissPopupMenus()>
<android.view.MotionEvent.PointerProperties: int hashCode()>
<com.android.internal.app.WindowDecorActionBar: int getNavigationItemCount()>
<android.renderscript.Short3: android.renderscript.Short3 sub(android.renderscript.Short3,short)>
<com.android.internal.database.SortCursor: double getDouble(int)>
<android.service.trust.ITrustAgentServiceCallback: void grantTrust(java.lang.CharSequence,long,boolean)>
<android.widget.ListPopupWindow: int getSoftInputMode()>
<android.widget.NumberPicker: void <init>(android.content.Context)>
<android.filterfw.core.ShaderProgram: boolean setSourceRegion(float,float,float,float,float,float,float,float)>
<android.widget.AutoCompleteTextView: boolean onKeyDown(int,android.view.KeyEvent)>
<android.bluetooth.BluetoothHeadset: boolean connect(android.bluetooth.BluetoothDevice)>
<android.text.SpanWatcher: void onSpanRemoved(android.text.Spannable,java.lang.Object,int,int)>
<android.graphics.Canvas: void getMatrix(android.graphics.Matrix)>
<android.hardware.camera2.impl.CameraCaptureSessionImpl: int captureBurst(java.util.List,android.hardware.camera2.CameraCaptureSession.CaptureCallback,android.os.Handler)>
<android.nfc.tech.MifareUltralight: int getTimeout()>
<android.animation.LayoutTransition: java.util.List getTransitionListeners()>
<android.filterfw.core.FilterContext: void initGLEnvironment(android.filterfw.core.GLEnvironment)>
<android.widget.Chronometer: void start()>
<android.os.Environment.UserEnvironment: void <init>(int)>
<android.view.View: void findViewsWithText(java.util.ArrayList,java.lang.CharSequence,int)>
<android.webkit.WebViewClient: void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String)>
<android.app.job.JobScheduler: int schedule(android.app.job.JobInfo)>
<android.app.admin.IDevicePolicyManager: boolean getCrossProfileCallerIdDisabled(android.content.ComponentName)>
<android.filterfw.geometry.Quad: android.filterfw.geometry.Quad scaled(float)>
<android.content.ContentProviderClient: void setDetectNotResponding(long)>
<android.hardware.camera2.utils.CameraBinderDecorator: void throwOnError(int)>
<com.android.internal.widget.LockPatternUtils: int getRequestedPasswordQuality()>
<android.app.Dialog: void onStop()>
<android.bluetooth.IBluetoothManagerCallback: void onBluetoothServiceDown()>
<android.renderscript.FieldPacker: void addF64(android.renderscript.Double4)>
<android.hardware.Camera.Parameters: java.util.List getSupportedAntibanding()>
<android.net.IConnectivityManager: void setProvisioningNotificationVisible(boolean,int,java.lang.String)>
<android.app.Instrumentation: android.app.Activity startActivitySync(android.content.Intent)>
<android.view.ViewGroup: void endViewTransition(android.view.View)>
<com.android.internal.os.BatteryStatsImpl.Timer: long computeRunTimeLocked(long)>
<android.renderscript.Int2: android.renderscript.Int2 div(android.renderscript.Int2,android.renderscript.Int2)>
<android.app.Notification.BigTextStyle: void populateBigContentView(android.app.Notification)>
<android.net.wifi.WifiManager: void setFrequencyBand(int,boolean)>
<android.gesture.GestureUtils: android.gesture.OrientedBoundingBox computeOrientedBoundingBox(java.util.ArrayList)>
<android.bluetooth.BluetoothAdapter: boolean isOffloadedScanBatchingSupported()>
<com.android.internal.content.PackageMonitor: void onBeginPackageChanges()>
<com.android.internal.telephony.ISms: java.util.List getAllMessagesFromIccEf(java.lang.String)>
<android.app.ProgressDialog: int getProgress()>
<android.nfc.BeamShareData: int describeContents()>
<android.drm.DrmManagerClient: int removeRights(android.net.Uri)>
<android.view.ViewGroup: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.filterfw.core.MutableFrameFormat: void setBaseType(int)>
<android.app.ActivityManagerProxy: void moveTaskToFront(int,int,android.os.Bundle)>
<android.transition.Transition: boolean canRemoveViews()>
<android.view.ViewStub: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.util.NtpTrustedTime: android.util.NtpTrustedTime getInstance(android.content.Context)>
<com.android.ims.ImsStreamMediaProfile: int describeContents()>
<com.android.internal.widget.LockPatternUtils: void saveLockPattern(java.util.List,boolean)>
<android.renderscript.ScriptIntrinsicHistogram: void forEach(android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>
<android.webkit.WebView: void <init>(android.content.Context)>
<android.net.wifi.WifiInfo: void setInetAddress(java.net.InetAddress)>
<com.android.internal.os.Zygote: int forkAndSpecialize(int,int,int[],int,int[][],int,java.lang.String,java.lang.String,int[],java.lang.String,java.lang.String)>
<android.text.style.SuperscriptSpan: int describeContents()>
<com.android.internal.widget.DecorToolbar: void collapseActionView()>
<android.telecom.Connection: void setAddress(android.net.Uri,int)>
<android.view.InputChannel: int describeContents()>
<android.content.pm.PackageParser.PermissionGroup: void <init>(android.content.pm.PackageParser.Package,android.content.pm.PermissionGroupInfo)>
<android.hardware.camera2.utils.TaskDrainer: void taskStarted(java.lang.Object)>
<android.provider.Settings.System: float getFloatForUser(android.content.ContentResolver,java.lang.String,float,int)>
<android.database.CursorWindow: int getInt(int,int)>
<android.app.ActivityManagerProxy: void revokeUriPermissionFromOwner(android.os.IBinder,android.net.Uri,int,int)>
<android.net.nsd.NsdManager.RegistrationListener: void onServiceRegistered(android.net.nsd.NsdServiceInfo)>
<android.media.RemoteControlClient.MetadataEditor: android.media.RemoteControlClient.MetadataEditor putLong(int,long)>
<android.content.pm.Signature: boolean areEffectiveMatch(android.content.pm.Signature[],android.content.pm.Signature[])>
<android.view.KeyEvent: android.view.KeyEvent changeFlags(android.view.KeyEvent,int)>
<android.bluetooth.BluetoothHeadset: boolean sendVendorSpecificResultCode(android.bluetooth.BluetoothDevice,java.lang.String,java.lang.String)>
<android.webkit.WebViewProvider.ViewDelegate: void setLayerType(int,android.graphics.Paint)>
<android.database.CursorWrapper: double getDouble(int)>
<com.android.internal.widget.IRemoteViewsFactory: void onDataSetChanged()>
<android.graphics.drawable.RotateDrawable: int getChangingConfigurations()>
<android.text.style.TtsSpan.Builder: android.text.style.TtsSpan.Builder setStringArgument(java.lang.String,java.lang.String)>
<android.media.session.ISessionCallback: void onCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)>
<com.android.internal.util.JournaledFile: java.io.File chooseForRead()>
<android.bluetooth.le.ScanFilter: void writeToParcel(android.os.Parcel,int)>
<android.view.ViewConfiguration: int getHoverTapSlop()>
<android.hardware.camera2.marshal.MarshalHelpers: boolean isPrimitiveClass(java.lang.Class)>
<android.renderscript.Short3: android.renderscript.Short3 add(android.renderscript.Short3,short)>
<android.view.WindowContentFrameStats: long getFramePostedTimeNano(int)>
<android.webkit.CookieManager: android.webkit.CookieManager getInstance()>
<android.widget.AnalogClock: void <init>(android.content.Context)>
<android.hardware.SensorManager: android.hardware.Sensor getDefaultSensor(int)>
<android.location.Criteria: int getAccuracy()>
<android.view.ActionMode: void setTitleOptionalHint(boolean)>
<android.view.WindowManagerPolicy: int checkAddPermission(android.view.WindowManager.LayoutParams,int[])>
<android.media.MediaRouter: android.media.MediaRouter.RouteInfo getDefaultRoute()>
<android.renderscript.Matrix3f: void multiply(android.renderscript.Matrix3f)>
<android.media.session.MediaController: void setVolumeTo(int,int)>
<com.android.internal.util.Preconditions: int checkArgumentNonnegative(int,java.lang.String)>
<android.view.View: void onLayout(boolean,int,int,int,int)>
<android.net.NetworkQuotaInfo: void <init>(android.os.Parcel)>
<android.widget.TextView: void setSpan_internal(java.lang.Object,int,int,int)>
<android.widget.ImageView: android.graphics.PorterDuff.Mode getImageTintMode()>
<android.widget.RadioGroup: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.content.BroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>
<android.opengl.Matrix: boolean invertM(float[],int,float[],int)>
<android.os.IPowerManager: void shutdown(boolean,boolean)>
<android.text.style.SubscriptSpan: void writeToParcel(android.os.Parcel,int)>
<android.media.AudioRecord: int getAudioFormat()>
<android.view.MotionEvent: boolean addBatch(android.view.MotionEvent)>
<android.widget.HorizontalScrollView: void requestDisallowInterceptTouchEvent(boolean)>
<android.app.IUiAutomationConnection: void connect(android.accessibilityservice.IAccessibilityServiceClient)>
<android.net.NetworkQuotaInfo: void writeToParcel(android.os.Parcel,int)>
<android.filterpacks.imageproc.VignetteFilter: void <init>(java.lang.String)>
<android.content.Context: java.lang.String getString(int,java.lang.Object[])>
<android.content.SharedPreferences.Editor: android.content.SharedPreferences.Editor clear()>
<android.preference.MultiSelectListPreference: void setEntryValues(int)>
<android.nfc.cardemulation.CardEmulation: java.util.List getAidsForService(android.content.ComponentName,java.lang.String)>
<android.media.MediaRecorder: void prepare()>
<com.android.internal.widget.LockPatternUtils: void setCurrentUser(int)>
<com.android.internal.widget.ActionBarView: java.lang.CharSequence getSubtitle()>
<android.view.Display: int getType()>
<android.bluetooth.IBluetooth: boolean setScanMode(int,int)>
<android.os.Parcel: android.os.Parcelable readCreator(android.os.Parcelable.Creator,java.lang.ClassLoader)>
<android.media.SoundPool: int load(android.content.res.AssetFileDescriptor,int)>
<android.media.AudioRoutesInfo: void <init>(android.media.AudioRoutesInfo)>
<android.app.Notification: void <init>(int,java.lang.CharSequence,long)>
<android.media.MediaFormat: int getInteger(java.lang.String)>
<android.renderscript.Short2: android.renderscript.Short2 mod(android.renderscript.Short2,android.renderscript.Short2)>
<android.view.Window: void setTransitionManager(android.transition.TransitionManager)>
<android.content.pm.PackageManager: int installExistingPackage(java.lang.String)>
<android.hardware.camera2.DngCreator: void <init>(android.hardware.camera2.CameraCharacteristics,android.hardware.camera2.CaptureResult)>
<android.app.Activity: int getRequestedOrientation()>
<android.hardware.ConsumerIrManager.CarrierFrequencyRange: int getMinFrequency()>
<com.android.internal.database.SortCursor: boolean requery()>
<android.hardware.camera2.CaptureResult.Key: boolean equals(java.lang.Object)>
<android.location.GpsMeasurement: void setReceivedGpsTowUncertaintyInNs(long)>
<android.util.LogWriter: void flush()>
<android.view.RenderNodeAnimator: int mapViewPropertyToRenderProperty(int)>
<android.provider.Browser: void sendString(android.content.Context,java.lang.String)>
<android.location.GpsClock: void setDriftInNsPerSec(double)>
<android.telecom.ConnectionRequest: void writeToParcel(android.os.Parcel,int)>
<android.renderscript.FieldPacker: byte subI8()>
<android.widget.ArrayAdapter: void sort(java.util.Comparator)>
<android.content.ContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver)>
<android.app.Fragment: void setSharedElementReturnTransition(android.transition.Transition)>
<android.printservice.PrintJob: boolean equals(java.lang.Object)>
<android.speech.srec.Recognizer.Grammar: void save(java.lang.String)>
<android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
<android.util.TypedValue: float complexToDimensionNoisy(int,android.util.DisplayMetrics)>
<android.media.session.MediaSessionManager: void addOnActiveSessionsChangedListener(android.media.session.MediaSessionManager.OnActiveSessionsChangedListener,android.content.ComponentName,int,android.os.Handler)>
<android.net.RouteInfo: int describeContents()>
<android.net.wifi.WifiConfiguration: int describeContents()>
<android.widget.AbsListView: void afterTextChanged(android.text.Editable)>
<android.net.wifi.p2p.WifiP2pWfdInfo: java.lang.String toString()>
<com.android.internal.util.FastPrintWriter: java.io.PrintWriter append(java.lang.CharSequence,int,int)>
<android.widget.AbsListView: void deferNotifyDataSetChanged()>
<android.graphics.Paint: void setBidiFlags(int)>
<com.android.internal.view.IInputConnectionWrapper: void beginBatchEdit()>
<android.filterpacks.imageproc.ImageSlicer: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<com.android.internal.textservice.ITextServicesManager: void setCurrentSpellChecker(java.lang.String,java.lang.String)>
<com.android.internal.app.IBatteryStats: void noteFlashlightOn()>
<com.android.internal.widget.LockPatternView.OnPatternListener: void onPatternCleared()>
<android.hardware.GeomagneticField: void <init>(float,float,float,long)>
<android.widget.AbsListView: void setStackFromBottom(boolean)>
<android.widget.AbsSeekBar: android.content.res.ColorStateList getThumbTintList()>
<android.widget.AdapterView: void setOnItemLongClickListener(android.widget.AdapterView.OnItemLongClickListener)>
<android.app.admin.DevicePolicyManager: java.lang.String getDeviceOwnerName()>
<android.inputmethodservice.KeyboardView: void swipeDown()>
<android.app.FragmentTransaction: android.app.FragmentTransaction setCustomAnimations(int,int,int,int)>
<android.os.BadParcelableException: void <init>(java.lang.Exception)>
<android.view.accessibility.AccessibilityNodeInfo: android.view.accessibility.AccessibilityNodeInfo obtain(android.view.View,int)>
<android.content.ClipData.Item: void <init>(java.lang.CharSequence,java.lang.String,android.content.Intent,android.net.Uri)>
<android.graphics.Paint: void clearShadowLayer()>
<android.opengl.GLES30: void glUniform1uiv(int,int,int[],int)>
<com.android.internal.widget.EditableInputConnection: android.text.Editable getEditable()>
<android.view.View: void initializeFadingEdgeInternal(android.content.res.TypedArray)>
<android.location.Location: boolean hasAccuracy()>
<android.widget.PopupMenu: void show()>
<android.app.usage.UsageStats: void add(android.app.usage.UsageStats)>
<android.preference.PreferenceFrameLayout.LayoutParams: void <init>(int,int)>
<android.service.fingerprint.IFingerprintServiceReceiver: void onEnrollResult(int,int)>
<android.sax.RootElement: org.xml.sax.ContentHandler getContentHandler()>
<android.renderscript.Int4: void div(android.renderscript.Int4)>
<com.android.internal.widget.ToolbarWidgetWrapper: int getNavigationMode()>
<android.provider.SearchIndexablesProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
<android.database.sqlite.SQLiteException: void <init>(java.lang.String,java.lang.Throwable)>
<com.android.internal.telephony.ISms: boolean copyMessageToIccEfForSubscriber(long,java.lang.String,int,byte[],byte[])>
<android.renderscript.Int4: void mod(int)>
<com.android.internal.app.WindowDecorActionBar.TabImpl: android.app.ActionBar.Tab setText(int)>
<com.android.internal.app.WindowDecorActionBar: void onWindowVisibilityChanged(int)>
<android.graphics.drawable.ShapeDrawable: int getIntrinsicWidth()>
<android.hardware.Camera: void setPreviewTexture(android.graphics.SurfaceTexture)>
<com.android.internal.widget.ActionBarView: void initProgress()>
<android.widget.SimpleCursorTreeAdapter: void <init>(android.content.Context,android.database.Cursor,int,int,java.lang.String[],int[],int,java.lang.String[],int[])>
<android.view.MenuItem: android.view.MenuItem setIcon(int)>
<com.android.internal.widget.AbsActionBarView: void <init>(android.content.Context)>
<android.media.MediaRouter.UserRouteInfo: void setName(java.lang.CharSequence)>
<android.content.ContentProvider: boolean matchesOurAuthorities(java.lang.String)>
<android.view.Window: void alwaysReadCloseOnTouchAttr()>
<android.app.ActionBar: void setHideOffset(int)>
<android.widget.TableLayout: void setShrinkAllColumns(boolean)>
<android.nfc.tech.NfcA: void <init>(android.nfc.Tag)>
<android.opengl.GLES30: void glCompressedTexImage3D(int,int,int,int,int,int,int,int,int)>
<android.app.ActivityManagerProxy: int getUidForIntentSender(android.content.IIntentSender)>
<android.view.accessibility.AccessibilityNodeInfo: boolean refresh()>
<android.app.IActivityManager: void revokeUriPermission(android.app.IApplicationThread,android.net.Uri,int,int)>
<android.app.admin.DevicePolicyManager: int getCurrentFailedPasswordAttempts()>
<android.content.ContentQueryMap: void setKeepUpdated(boolean)>
<com.android.ims.internal.IImsCallSession: com.android.ims.internal.IImsVideoCallProvider getVideoCallProvider()>
<android.os.WorkSource: void <init>(android.os.WorkSource)>
<android.net.wifi.p2p.WifiP2pDeviceList: java.util.Collection getDeviceList()>
<android.media.MediaCodecInfo: android.media.MediaCodecInfo.CodecCapabilities getCapabilitiesForType(java.lang.String)>
<android.view.View: android.view.ActionMode startActionMode(android.view.ActionMode.Callback)>
<android.hardware.input.InputManager: void setCurrentKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,java.lang.String)>
<android.nfc.INfcAdapterExtras: android.os.Bundle open(java.lang.String,android.os.IBinder)>
<android.widget.RelativeLayout: void setHorizontalGravity(int)>
<android.widget.ProgressBar: android.content.res.ColorStateList getIndeterminateTintList()>
<android.opengl.GLES11: void glGetTexEnvfv(int,int,java.nio.FloatBuffer)>
<android.view.MotionEvent: int getPointerId(int)>
<android.nfc.NfcAdapter: void dispatch(android.nfc.Tag)>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>
<android.service.notification.ZenModeConfig: boolean equals(java.lang.Object)>
<com.android.internal.widget.LockPatternUtils: boolean checkPassword(java.lang.String)>
<android.text.InputFilter.LengthFilter: void <init>(int)>
<com.android.internal.app.WindowDecorActionBar: void setDisplayHomeAsUpEnabled(boolean)>
<android.security.Credentials: java.util.List convertFromPem(byte[])>
<android.net.http.RequestQueue.ConnectionManager: boolean recycleConnection(android.net.http.Connection)>
<android.net.IConnectivityManager: java.lang.String[] getTetherableUsbRegexs()>
<android.widget.AutoCompleteTextView: int getDropDownHeight()>
<android.content.Intent: android.content.Intent putExtra(java.lang.String,int[])>
<android.webkit.WebViewProvider: void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<android.hardware.input.InputDeviceIdentifier: int getProductId()>
<android.widget.DatePickerController: void onDayOfMonthSelected(int,int,int)>
<android.opengl.GLES20: void glBufferSubData(int,int,int,java.nio.Buffer)>
<com.android.internal.widget.ActionBarOverlayLayout: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.speech.srec.MicrophoneInputStream: int read(byte[],int,int)>
<android.media.TimedText.HyperText: void <init>(int,int,java.lang.String,java.lang.String)>
<android.widget.Toolbar: boolean canShowOverflowMenu()>
<android.content.res.CompatibilityInfo.Translator: void translateRectInAppWindowToScreen(android.graphics.Rect)>
<com.android.internal.os.HandlerCaller: void <init>(android.content.Context,android.os.Looper,com.android.internal.os.HandlerCaller.Callback,boolean)>
<android.text.TextUtils: java.lang.CharSequence getReverse(java.lang.CharSequence,int,int)>
<android.media.Ringtone: java.lang.String getTitle(android.content.Context)>
<android.renderscript.Long3: void negate()>
<android.widget.TextView: int getSelectionStart()>
<android.app.ActionBar: void addTab(android.app.ActionBar.Tab,boolean)>
<android.content.Intent: void <init>(android.content.Intent)>
<android.widget.ExpandableListAdapter: boolean isChildSelectable(int,int)>
<android.text.style.CharacterStyle: android.text.style.CharacterStyle wrap(android.text.style.CharacterStyle)>
<android.util.SizeF: float getHeight()>
<android.net.NetworkStats: android.net.NetworkStats subtract(android.net.NetworkStats,android.net.NetworkStats,android.net.NetworkStats.NonMonotonicObserver,java.lang.Object)>
<android.filterfw.core.GLEnvironment: void initWithNewContext()>
<android.view.MotionEvent: float getHistoricalSize(int)>
<android.database.sqlite.SQLiteDirectCursorDriver: void setBindArguments(java.lang.String[])>
<android.app.ApplicationThreadProxy: void scheduleResumeActivity(android.os.IBinder,int,boolean,android.os.Bundle)>
<android.net.wifi.IWifiManager: java.util.List getConfiguredNetworks()>
<android.graphics.RadialGradient: android.graphics.Shader copy()>
<android.net.wifi.WifiSsid: int describeContents()>
<android.app.Activity: void setTitleColor(int)>
<android.gesture.GestureStroke: android.gesture.OrientedBoundingBox computeOrientedBoundingBox()>
<com.android.internal.telephony.ISub: int setColor(int,long)>
<android.renderscript.Long2: void negate()>
<android.hardware.display.DisplayManagerGlobal: android.hardware.display.WifiDisplayStatus getWifiDisplayStatus()>
<android.app.FragmentManagerImpl: void performPendingDeferredStart(android.app.Fragment)>
<android.widget.AdapterView: void setOnClickListener(android.view.View.OnClickListener)>
<android.text.method.MovementMethod: boolean onGenericMotionEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>
<com.android.internal.widget.LockPatternUtils: int getActivePasswordQuality()>
<android.widget.CalendarView: void setShownWeekCount(int)>
<android.content.pm.ApplicationInfo: void setBaseResourcePath(java.lang.String)>
<android.view.accessibility.AccessibilityEvent: void writeToParcel(android.os.Parcel,int)>
<android.print.PrinterDiscoverySession: void destroy()>
<android.os.BinderProxy: void dump(java.io.FileDescriptor,java.lang.String[])>
<android.os.Environment: java.io.File getRootDirectory()>
<android.location.Address: void setCountryCode(java.lang.String)>
<android.view.SurfaceView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.util.MathUtils: float pow(float,float)>
<com.android.internal.widget.SizeAdaptiveLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<android.text.method.LinkMovementMethod: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>
<android.speech.srec.Recognizer: void destroy()>
<android.view.AbsSavedState: void writeToParcel(android.os.Parcel,int)>
<android.animation.ValueAnimator: android.animation.ValueAnimator ofFloat(float[])>
<com.android.internal.app.IBatteryStats: void noteVibratorOn(int,long)>
<android.content.pm.Signature: boolean equals(java.lang.Object)>
<android.preference.MultiSelectListPreference: void <init>(android.content.Context)>
<android.text.method.BaseKeyListener: boolean onKeyOther(android.view.View,android.text.Editable,android.view.KeyEvent)>
<android.net.wifi.BatchedScanResult: void writeToParcel(android.os.Parcel,int)>
<android.bluetooth.IBluetooth: boolean enableNoAutoConnect()>
<android.app.ActivityManager.MemoryInfo: int describeContents()>
<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>
<android.filterfw.core.VertexFrame: boolean hasNativeAllocation()>
<android.app.IActivityManager: void restart()>
<android.location.Geofence: java.lang.String toString()>
<android.app.PendingIntent: boolean isActivity()>
<android.widget.TextView: int getFadeHeight(boolean)>
<android.renderscript.Float4: void addAt(int,float)>
<android.view.animation.AnticipateOvershootInterpolator: void <init>(android.content.Context,android.util.AttributeSet)>
<android.app.admin.DeviceAdminInfo: java.util.ArrayList getUsedPolicies()>
<android.widget.AbsListView: boolean onTouchEvent(android.view.MotionEvent)>
<android.media.effect.effects.SepiaEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>
<android.net.LinkQualityInfo: void setTheoreticalTxBandwidth(int)>
<android.preference.PreferenceGroupAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.view.inputmethod.InputMethodSession: void updateSelection(int,int,int,int,int,int)>
<android.nfc.NfcAdapter: void disableForegroundDispatch(android.app.Activity)>
<com.android.internal.telephony.CallerInfo: void updateGeoDescription(android.content.Context,java.lang.String)>
<android.gesture.Gesture: android.graphics.Bitmap toBitmap(int,int,int,int)>
<com.android.ims.internal.IImsEcbmListener: void enteredECBM()>
<android.speech.tts.TextToSpeech: java.lang.String getDefaultEngine()>
<android.bluetooth.IBluetoothGatt: void readRemoteRssi(int,java.lang.String)>
<com.android.internal.util.GrowingArrayUtils: boolean[] insert(boolean[],int,int,boolean)>
<android.security.KeyStore: java.lang.String[] saw(java.lang.String)>
<android.renderscript.ScriptIntrinsicColorMatrix: void setGreyscale()>
<android.media.MediaCodec.MediaImage: void <init>(java.nio.ByteBuffer,java.nio.ByteBuffer,boolean,long,int,int,android.graphics.Rect)>
<com.android.internal.util.FastPrintWriter: void println(long)>
<android.net.SSLCertificateSocketFactory: void setNpnProtocols(byte[][])>
<com.android.internal.os.BatteryStatsImpl.SamplingTimer: void writeToParcel(android.os.Parcel,long)>
<com.android.internal.util.StateMachine: void deferMessage(android.os.Message)>
<android.opengl.GLSurfaceView: void finalize()>
<android.widget.AbsoluteLayout.LayoutParams: void <init>(int,int,int,int)>
<android.view.MenuItem: int getOrder()>
<android.app.IActivityManager: void registerUserSwitchObserver(android.app.IUserSwitchObserver)>
<android.hardware.camera2.CaptureRequest: boolean containsTarget(android.view.Surface)>
<android.content.pm.UserInfo: boolean isPrimary()>
<android.speech.tts.Voice: int describeContents()>
<android.text.Layout: void getSelectionPath(int,int,android.graphics.Path)>
<android.opengl.GLES20: void glDetachShader(int,int)>
<android.widget.Toolbar: boolean hasExpandedActionView()>
<android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter)>
<android.content.pm.PackageItemInfo: void dumpBack(android.util.Printer,java.lang.String)>
<android.media.AudioManager: int setHdmiSystemAudioSupported(boolean)>
<android.widget.CalendarView.CalendarViewDelegate: boolean getShowWeekNumber()>
<android.telephony.SubscriptionManager: long getDefaultVoiceSubId()>
<android.view.ViewGroup: android.view.View getFocusedChild()>
<android.os.RegistrantList: void notifyRegistrants(android.os.AsyncResult)>
<android.preference.PreferenceFrameLayout: void addView(android.view.View)>
<android.widget.TabHost: android.widget.TabWidget getTabWidget()>
<android.view.ViewGroup: void childHasTransientStateChanged(android.view.View,boolean)>
<android.media.AudioTrack: float getMinVolume()>
<android.os.Vibrator: void cancel()>
<com.android.internal.view.menu.MenuBuilder: android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence)>
<android.view.inputmethod.BaseInputConnection: boolean performEditorAction(int)>
<android.media.browse.MediaBrowser: java.lang.String getRoot()>
<android.net.IConnectivityManager: java.lang.String[] getTetheredDhcpRanges()>
<android.view.RenderNodeAnimator: void onFinished()>
<android.graphics.Camera: void finalize()>
<com.android.internal.app.IBatteryStats: void noteStartSensor(int,int)>
<android.content.res.TypedArray: android.util.TypedValue peekValue(int)>
<android.widget.TimePicker.OnTimeChangedListener: void onTimeChanged(android.widget.TimePicker,int,int)>
<android.net.WifiLinkQualityInfo: void setBssid(java.lang.String)>
<android.animation.ValueAnimator: java.lang.Object getAnimatedValue(java.lang.String)>
<android.database.sqlite.SQLiteDatabase: boolean isInMemoryDatabase()>
<android.content.UndoManager: void beginUpdate(java.lang.CharSequence)>
<android.telecom.Connection.VideoProvider: void onSetPauseImage(java.lang.String)>
<android.widget.AppSecurityPermissions: android.view.View getPermissionsViewWithRevokeButtons()>
<android.app.admin.IDevicePolicyManager: void uninstallCaCert(android.content.ComponentName,java.lang.String)>
<android.nfc.INfcAdapter: android.nfc.INfcAdapterExtras getNfcAdapterExtrasInterface(java.lang.String)>
<android.app.Activity: void setResult(int,android.content.Intent)>
<android.content.ComponentName: void appendShortString(java.lang.StringBuilder,java.lang.String,java.lang.String)>
<android.widget.TextView: android.view.ActionMode.Callback getCustomSelectionActionModeCallback()>
<android.filterpacks.base.OutputStreamTarget: void <init>(java.lang.String)>
<android.service.notification.NotificationListenerService: void requestInterruptionFilter(int)>
<com.google.android.gles_jni.GLImpl: void glRenderbufferStorageOES(int,int,int,int)>
<android.net.http.SslCertificate.DName: java.lang.String getUName()>
<android.graphics.Canvas: void drawPosText(char[],int,int,float[],android.graphics.Paint)>
<android.telecom.PhoneAccountHandle: java.lang.String getId()>
<com.android.internal.widget.ResolverDrawerLayout: boolean onNestedPreFling(android.view.View,float,float)>
<android.bluetooth.BluetoothDevice: int hashCode()>
<android.widget.CompoundButton: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.opengl.GLES10: void glMaterialfv(int,int,java.nio.FloatBuffer)>
<android.bluetooth.IBluetoothHealthCallback: void onHealthAppConfigurationStatusChange(android.bluetooth.BluetoothHealthAppConfiguration,int)>
<android.filterpacks.imageproc.FlipFilter: void <init>(java.lang.String)>
<android.app.AppOpsManager: boolean opAllowSystemBypassRestriction(int)>
<android.net.wifi.IWifiManager: void enableTdlsWithMacAddress(java.lang.String,boolean)>
<android.widget.GridLayout: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>
<android.media.AudioService.VolumeController: android.os.IBinder asBinder()>
<com.android.internal.app.IMediaContainerService: long[] getFileSystemStats(java.lang.String)>
<android.nfc.tech.Ndef: java.lang.String getType()>
<android.view.Window: void setIcon(int)>
<android.widget.Toolbar: android.widget.Toolbar.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.animation.AnimatorSet: android.animation.AnimatorSet setDuration(long)>
<android.graphics.drawable.BitmapDrawable: android.graphics.drawable.Drawable mutate()>
<android.app.Dialog: void registerForContextMenu(android.view.View)>
<com.android.internal.util.Predicates: com.android.internal.util.Predicate not(com.android.internal.util.Predicate)>
<android.opengl.GLES31: void glProgramUniform2iv(int,int,int,int[],int)>
<android.graphics.drawable.ScaleDrawable: int getAlpha()>
<android.filterfw.core.FilterPort: void setPortFormat(android.filterfw.core.FrameFormat)>
<android.webkit.WebSettings: boolean supportMultipleWindows()>
<com.android.internal.app.IBatteryStats: void notePhoneOn()>
<android.renderscript.Short2: android.renderscript.Short2 add(android.renderscript.Short2,android.renderscript.Short2)>
<android.net.NetworkStateTracker: java.lang.String getNetworkInterfaceName()>
<android.hardware.location.GeofenceHardware: boolean resumeGeofence(int,int,int)>
<android.widget.DatePicker.DatePickerDelegate: boolean isEnabled()>
<android.media.MediaScannerConnection: void onServiceDisconnected(android.content.ComponentName)>
<android.text.DynamicLayout: int getTopPadding()>
<android.os.BatteryStats: int getHistoryStringPoolSize()>
<android.content.pm.KeySet: void <init>(android.os.IBinder)>
<com.android.internal.widget.LockPatternUtils: android.app.admin.DevicePolicyManager getDevicePolicyManager()>
<android.os.Binder: void setThreadStrictModePolicy(int)>
<android.util.AttributeSet: java.lang.String getAttributeName(int)>
<android.renderscript.Long2: void copyTo(long[],int)>
<android.net.http.AndroidHttpClient: java.lang.Object execute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>
<android.preference.PreferenceManager.OnActivityDestroyListener: void onActivityDestroy()>
<android.content.pm.LauncherApps: void startMainActivity(android.content.ComponentName,android.os.UserHandle,android.graphics.Rect,android.os.Bundle)>
<android.ddm.DdmHandleViewDebug: org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)>
<android.opengl.GLES31: void glGetProgramInterfaceiv(int,int,int,java.nio.IntBuffer)>
<android.widget.AutoCompleteTextView: int getDropDownHorizontalOffset()>
<android.widget.ArrayAdapter: void <init>(android.content.Context,int,int)>
<android.view.View: void resetRtlProperties()>
<android.renderscript.Long2: void mod(android.renderscript.Long2)>
<android.nfc.NfcAdapter: boolean isNdefPushEnabled()>
<android.util.SparseLongArray: long get(int,long)>
<android.renderscript.Path: android.renderscript.Path createStaticPath(android.renderscript.RenderScript,android.renderscript.Path.Primitive,float,android.renderscript.Allocation)>
<android.media.session.MediaSessionLegacyHelper: void sendAdjustVolumeBy(int,int,int)>
<android.widget.TabHost: android.widget.FrameLayout getTabContentView()>
<android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder: android.view.inputmethod.InputMethodSubtype.InputMethodSubtypeBuilder setSubtypeIconResId(int)>
<android.os.IUserManager: boolean isRestricted()>
<android.hardware.camera2.impl.CameraDeviceImpl.FrameNumberTracker: long getCompletedFrameNumber()>
<android.media.MediaMetadataEditor: android.graphics.Bitmap getBitmap(int,android.graphics.Bitmap)>
<android.os.Debug: void resetGlobalGcInvocationCount()>
<android.text.style.BackgroundColorSpan: int describeContents()>
<android.location.Country: long getTimestamp()>
<android.view.DisplayEventReceiver: void <init>(android.os.Looper)>
<android.animation.TimeAnimator: void start()>
<android.media.audiofx.Visualizer: int getScalingMode()>
<com.android.internal.os.BatteryStatsImpl: void updateKernelWakelocksLocked()>
<com.android.internal.view.IInputConnectionWrapper: void clearMetaKeyStates(int)>
<android.nfc.NdefMessage: int hashCode()>
<android.os.ParcelUuid: int hashCode()>
<android.widget.TabWidget: void dispatchDraw(android.graphics.Canvas)>
<android.app.ISearchManager: android.content.ComponentName getWebSearchActivity()>
<android.animation.AnimatorSet.Builder: android.animation.AnimatorSet.Builder after(long)>
<android.content.SharedPreferences.Editor: android.content.SharedPreferences.Editor remove(java.lang.String)>
<android.content.IntentFilter: boolean hasDataScheme(java.lang.String)>
<android.text.BoringLayout: android.text.BoringLayout replaceOrMake(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,android.text.BoringLayout.Metrics,boolean,android.text.TextUtils.TruncateAt,int)>
<android.renderscript.Long2: long get(int)>
<android.net.wifi.WifiScanner.HotlistSettings: void writeToParcel(android.os.Parcel,int)>
<android.os.Environment: java.io.File[] buildExternalStorageAndroidDataDirs()>
<android.renderscript.Short2: void negate()>
<android.bluetooth.IBluetoothA2dp: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.widget.LinearLayout: int getBaseline()>
<android.app.LocalActivityManager: android.view.Window destroyActivity(java.lang.String,boolean)>
<android.util.TypedValue: float complexToFraction(int,float,float)>
<android.app.ActionBar: void setTitle(int)>
<android.view.OrientationEventListener: void onOrientationChanged(int)>
<android.view.WindowContentFrameStats: int describeContents()>
<android.animation.AnimatorListenerAdapter: void onAnimationStart(android.animation.Animator)>
<android.location.GpsMeasurement: byte getPrn()>
<android.telecom.VideoProfile: void <init>(int)>
<android.widget.EdgeEffect: void onPull(float,float)>
<android.widget.TabWidget: void setLeftStripDrawable(int)>
<android.telephony.SignalStrength: int getEvdoSnr()>
<android.widget.CalendarView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.util.MathUtils: float dist(float,float,float,float,float,float)>
<android.util.LruCache: int missCount()>
<android.media.MediaExtractor: boolean advance()>
<android.view.ViewRootImpl: void bringChildToFront(android.view.View)>
<android.os.Parcel: void readList(java.util.List,java.lang.ClassLoader)>
<android.app.ActivityThread: void onNewActivityOptions(android.os.IBinder,android.app.ActivityOptions)>
<android.app.UiAutomation: int getConnectionId()>
<android.net.NetworkStats.Entry: void add(android.net.NetworkStats.Entry)>
<android.os.BatteryStats.LongCounter: long getCountLocked(int)>
<android.view.MotionEvent: float getTouchMajor()>
<android.net.wifi.p2p.WifiP2pManager.UpnpServiceResponseListener: void onUpnpServiceAvailable(java.util.List,android.net.wifi.p2p.WifiP2pDevice)>
<android.net.EthernetManager: void setConfiguration(android.net.IpConfiguration)>
<android.location.LocationManager: void setTestProviderLocation(java.lang.String,android.location.Location)>
<android.telephony.VoLteServiceState: int describeContents()>
<android.view.View: void forceLayout()>
<android.hardware.camera2.utils.ArrayUtils: int[] convertStringListToIntArray(java.util.List,java.lang.String[],int[])>
<com.google.android.gles_jni.GLImpl: void glMatrixIndexPointerOES(int,int,int,java.nio.Buffer)>
<android.app.backup.IBackupManager: boolean isBackupEnabled()>
<android.media.AudioManager: boolean isVolumeFixed()>
<android.view.SurfaceView: void dispatchDraw(android.graphics.Canvas)>
<android.preference.PreferenceFrameLayout: android.preference.PreferenceFrameLayout.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.opengl.GLES11Ext: void glEGLImageTargetRenderbufferStorageOES(int,java.nio.Buffer)>
<android.util.SparseArray: void <init>(int)>
<com.android.internal.widget.SizeAdaptiveLayout: void onLayout(boolean,int,int,int,int)>
<android.renderscript.Element: android.renderscript.Element U16_4(android.renderscript.RenderScript)>
<android.preference.PreferenceActivity: android.content.Intent onBuildStartFragmentIntent(java.lang.String,android.os.Bundle,int,int)>
<android.widget.GridLayout: android.widget.GridLayout.LayoutParams generateDefaultLayoutParams()>
<android.media.audiofx.Visualizer: int getMeasurementPeakRms(android.media.audiofx.Visualizer.MeasurementPeakRms)>
<android.renderscript.FieldPacker: void addF32(android.renderscript.Float2)>
<android.webkit.CookieSyncManager: void syncFromRamToFlash()>
<android.inputmethodservice.InputMethodService: void onFinishCandidatesView(boolean)>
<android.renderscript.Int3: int dotProduct(android.renderscript.Int3)>
<android.bluetooth.BluetoothAdapter: boolean disable(boolean)>
<android.widget.BaseAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>
<android.webkit.GeolocationPermissions: void allow(java.lang.String)>
<android.os.INetworkManagementService: void removeIdleTimer(java.lang.String)>
<android.widget.TableRow.LayoutParams: void <init>(int,int)>
<android.filterfw.MffEnvironment: void setGLEnvironment(android.filterfw.core.GLEnvironment)>
<android.view.textservice.SuggestionsInfo: int getSuggestionsCount()>
<android.widget.AbsSeekBar: void onMeasure(int,int)>
<android.filterfw.geometry.Rectangle: float getHeight()>
<android.renderscript.Script: android.renderscript.Script.FieldID createFieldID(int,android.renderscript.Element)>
<android.media.AudioService: boolean isBluetoothScoOn()>
<android.view.WindowManagerPolicy.OnKeyguardExitResult: void onKeyguardExitResult(boolean)>
<android.util.ArrayMap: void validate()>
<android.speech.RecognitionListener: void onReadyForSpeech(android.os.Bundle)>
<android.net.Uri.Builder: android.net.Uri.Builder encodedQuery(java.lang.String)>
<android.net.MobileLinkQualityInfo: int getEvdoSnr()>
<android.renderscript.FileA3D.IndexEntry: java.lang.String getName()>
<android.telephony.cdma.CdmaSmsCbProgramData: java.lang.String toString()>
<android.bluetooth.BluetoothHeadsetClient: int getPriority(android.bluetooth.BluetoothDevice)>
<com.android.internal.widget.ActionBarOverlayLayout: void <init>(android.content.Context)>
<android.widget.TableLayout: void setStretchAllColumns(boolean)>
<com.android.internal.widget.multiwaveview.GlowPadView.OnTriggerListener: void onGrabbed(android.view.View,int)>
<android.app.admin.DeviceAdminReceiver: android.content.ComponentName getWho(android.content.Context)>
<android.app.PendingIntent: boolean isTargetedToPackage()>
<android.widget.AdapterViewFlipper: void onAttachedToWindow()>
<android.net.NetworkStats: long getElapsedRealtimeAge()>
<android.media.tv.ITvInputSessionWrapper: void executeMessage(android.os.Message)>
<android.view.ScaleGestureDetector: float getScaleFactor()>
<android.os.ParcelFileDescriptor: void <init>(java.io.FileDescriptor,java.io.FileDescriptor)>
<android.widget.OverScroller: void <init>(android.content.Context)>
<android.accounts.IAccountManager: boolean addSharedAccountAsUser(android.accounts.Account,int)>
<com.android.internal.util.StateMachine: boolean isQuit(android.os.Message)>
<android.net.http.RequestQueue: boolean haveRequest(org.apache.http.HttpHost)>
<android.inputmethodservice.InputMethodService: android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl onCreateInputMethodSessionInterface()>
<android.provider.CalendarContract.Instances: android.database.Cursor query(android.content.ContentResolver,java.lang.String[],long,long,java.lang.String)>
<android.net.wifi.p2p.WifiP2pManager: void removeLocalService(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.nsd.WifiP2pServiceInfo,android.net.wifi.p2p.WifiP2pManager.ActionListener)>
<android.hardware.camera2.CaptureRequest.Builder: void set(android.hardware.camera2.CaptureRequest.Key,java.lang.Object)>
<com.android.internal.telecom.IVideoProvider: void setCamera(java.lang.String)>
<android.media.audiofx.LoudnessEnhancer: void setTargetGain(int)>
<com.android.internal.app.ToolbarActionBar: void addOnMenuVisibilityListener(android.app.ActionBar.OnMenuVisibilityListener)>
<android.media.tv.TvInputInfo: android.hardware.hdmi.HdmiDeviceInfo getHdmiDeviceInfo()>
<android.view.WindowManagerInternal: android.view.MagnificationSpec getCompatibleMagnificationSpecForWindow(android.os.IBinder)>
<com.android.internal.os.SamplingProfilerIntegration: void writeSnapshot(java.lang.String,android.content.pm.PackageInfo)>
<android.location.LocationManager: boolean addGpsMeasurementListener(android.location.GpsMeasurementsEvent.Listener)>
<android.widget.ListPopupWindow: void setPromptView(android.view.View)>
<android.speech.srec.Recognizer: void finalize()>
<android.graphics.Bitmap: void copyPixelsToBuffer(java.nio.Buffer)>
<android.webkit.WebViewProvider: android.view.View findHierarchyView(java.lang.String,int)>
<android.hardware.location.GeofenceHardwareService: void onCreate()>
<android.location.GpsMeasurement: int getBitNumber()>
<android.telephony.gsm.GsmCellLocation: void fillInNotifierBundle(android.os.Bundle)>
<android.filterpacks.imageproc.DrawRectFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<android.hardware.Camera.Parameters: boolean isVideoStabilizationSupported()>
<android.net.UidRange: void <init>(int,int)>
<com.android.internal.view.IInputMethod: void bindInput(android.view.inputmethod.InputBinding)>
<android.widget.GridView: void setNumColumns(int)>
<android.media.tv.ITvInputSession: void removeOverlayView()>
<android.view.WindowManager.LayoutParams: void <init>(android.os.Parcel)>
<android.opengl.GLES20: void glShaderBinary(int,java.nio.IntBuffer,int,java.nio.Buffer,int)>
<android.content.pm.IPackageDeleteObserver2: void onPackageDeleted(java.lang.String,int,java.lang.String)>
<com.android.internal.policy.IPolicy: android.view.LayoutInflater makeNewLayoutInflater(android.content.Context)>
<com.android.internal.app.WindowDecorActionBar.ActionModeImpl: void setSubtitle(java.lang.CharSequence)>
<android.renderscript.Float3: java.lang.Float dotProduct(android.renderscript.Float3)>
<android.app.ActionBar: void removeOnMenuVisibilityListener(android.app.ActionBar.OnMenuVisibilityListener)>
<android.telephony.CellInfoGsm: void writeToParcel(android.os.Parcel,int)>
<android.filterpacks.videosrc.CameraSource: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>
<android.renderscript.Float2: void add(float)>
<android.net.StaticIpConfiguration: void <init>(android.net.StaticIpConfiguration)>
<com.google.android.util.AbstractMessageParser.Photo: boolean isMedia()>
<android.view.ViewConfiguration: int getScaledEdgeSlop()>
<android.app.Activity: void finishFromChild(android.app.Activity)>
<android.graphics.drawable.ShapeDrawable: int getOpacity()>
<android.renderscript.Path: android.renderscript.Allocation getLoopAllocation()>
<com.android.internal.widget.AutoScrollHelper: void <init>(android.view.View)>
<android.provider.Downloads.Impl: boolean isStatusError(int)>
<android.view.SurfaceControl: void show()>
<android.app.PendingIntent: android.app.PendingIntent getService(android.content.Context,int,android.content.Intent,int)>
<android.util.Size: android.util.Size parseSize(java.lang.String)>
<android.net.NetworkPolicyManager: int getUidPolicy(int)>
<android.text.TextUtils: long packRangeInLong(int,int)>
<android.database.CursorWindow: boolean putString(java.lang.String,int,int)>
<android.widget.PopupMenu: void dismiss()>
<android.os.IServiceManager: android.os.IBinder checkService(java.lang.String)>
<android.widget.TextView: void onEndBatchEdit()>
<android.util.JsonReader: boolean isLenient()>
<android.content.ContentResolver: android.os.Bundle call(android.net.Uri,java.lang.String,java.lang.String,android.os.Bundle)>
<android.media.IAudioService: void forceVolumeControlStream(int,android.os.IBinder)>
<android.app.backup.BackupAgent: void onCreate()>
<android.preference.SeekBarVolumizer: void onStopTrackingTouch(android.widget.SeekBar)>
<android.widget.HorizontalScrollView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.provider.MediaStore.Images.Media: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String)>
<android.widget.CalendarView.CalendarViewDelegate: void setMaxDate(long)>
<android.os.Bundle: java.lang.CharSequence[] getCharSequenceArray(java.lang.String)>
<android.view.KeyEvent: int getDeviceId()>
<android.net.wifi.WifiScanner.OperationResult: void <init>(int,java.lang.String)>
<com.android.net.IProxyCallback: void getProxyPort(android.os.IBinder)>
<android.media.AudioManager: boolean isMusicActive()>
<android.os.BadParcelableException: void <init>(java.lang.String)>
<android.speech.srec.Recognizer: void stop()>
<android.app.admin.IDevicePolicyManager: int getPasswordMinimumNumeric(android.content.ComponentName,int)>
<android.app.admin.DevicePolicyManager: android.content.ComponentName getGlobalProxyAdmin()>
<android.view.Surface: void unlockCanvasAndPost(android.graphics.Canvas)>
<android.view.Window.Callback: boolean onCreatePanelMenu(int,android.view.Menu)>
<android.app.backup.BackupManager: java.lang.String[] listAllTransports()>
<android.app.ActivityManager.TaskDescription: void <init>(android.app.ActivityManager.TaskDescription)>
<com.android.internal.widget.SlidingTab.OnTriggerListener: void onGrabbedStateChange(android.view.View,int)>
<android.media.tv.TvInputManager.SessionCallback: void onLayoutSurface(android.media.tv.TvInputManager.Session,int,int,int,int)>
<android.filterpacks.text.StringSource: void process(android.filterfw.core.FilterContext)>
<android.view.Choreographer: android.view.Choreographer getInstance()>
<android.media.RemoteControlClient: void setPlaybackPositionUpdateListener(android.media.RemoteControlClient.OnPlaybackPositionUpdateListener)>
<android.accounts.ChooseTypeAndAccountActivity: void onDestroy()>
<android.filterfw.geometry.Quad: float getBoundingHeight()>
<android.app.IActivityContainer: boolean injectEvent(android.view.InputEvent)>
<android.opengl.GLES20: void glCullFace(int)>
<android.filterpacks.videosink.MediaEncoderFilter: void process(android.filterfw.core.FilterContext)>
<android.os.INetworkManagementService: void clearPermission(int[])>
<android.security.KeyStore: long getmtime(java.lang.String)>
<com.android.internal.telecom.IInCallAdapter: void unholdCall(java.lang.String)>
<com.android.internal.view.menu.BaseMenuPresenter: android.view.View getItemView(com.android.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup)>
<android.widget.TabWidget: boolean isStripEnabled()>
<android.content.BroadcastReceiver: java.lang.String getResultData()>
<android.media.session.PlaybackState: long getBufferedPosition()>
<android.view.SurfaceHolder.Callback: void surfaceCreated(android.view.SurfaceHolder)>
<android.provider.Settings.System: int getInt(android.content.ContentResolver,java.lang.String,int)>
<android.telecom.RemoteConnection.VideoProvider: void requestCallDataUsage()>
<android.mtp.MtpStorageInfo: java.lang.String getDescription()>
<android.bluetooth.IBluetoothManager: void unregisterStateChangeCallback(android.bluetooth.IBluetoothStateChangeCallback)>
<com.android.internal.view.menu.ActionMenuItemView: void setCheckable(boolean)>
<android.app.admin.DevicePolicyManager: java.util.List getPermittedInputMethodsForCurrentUser()>
<android.text.format.DateFormat: java.text.DateFormat getDateFormatForSetting(android.content.Context,java.lang.String)>
<android.location.Location: void setSpeed(float)>
<android.view.ViewGroup.LayoutParams: java.lang.String debug(java.lang.String)>
<android.net.http.SslCertificate: void <init>(java.security.cert.X509Certificate)>
<android.media.audiofx.EnvironmentalReverb: void setDecayTime(int)>
<android.telecom.Log: void i(java.lang.Object,java.lang.String,java.lang.Object[])>
<android.widget.ActionMenuView: void setPresenter(android.widget.ActionMenuPresenter)>
<android.media.AudioService: void disableSafeMediaVolume()>
<android.os.ParcelFileDescriptor.AutoCloseInputStream: void <init>(android.os.ParcelFileDescriptor)>
<com.android.internal.view.InputBindResult: void writeToParcel(android.os.Parcel,int)>
<android.nfc.NfcActivityManager: void setOnNdefPushCompleteCallback(android.app.Activity,android.nfc.NfcAdapter.OnNdefPushCompleteCallback)>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory.Options)>
<android.hardware.camera2.CameraCaptureSession.CaptureCallback: void onCaptureSequenceAborted(android.hardware.camera2.CameraCaptureSession,int)>
<android.os.storage.StorageVolume: int getMtpReserveSpace()>
<android.bluetooth.BluetoothGattCharacteristic: void setWriteType(int)>
<android.view.View: float getY()>
<android.service.notification.NotificationListenerService.RankingMap: int describeContents()>
<android.widget.SlidingDrawer: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofObject(android.util.Property,android.animation.TypeConverter,android.animation.TypeEvaluator,java.lang.Object[])>
<android.nfc.NfcActivityManager: void onActivityResumed(android.app.Activity)>
<android.media.tv.TvView: java.lang.String getSelectedTrack(int)>
<android.app.admin.IDevicePolicyManager: java.lang.String[] getLockTaskPackages(android.content.ComponentName)>
<android.view.View: void cancelLongPress()>
<android.graphics.Bitmap: byte[] getNinePatchChunk()>
<com.google.android.util.AbstractMessageParser.Resources: com.google.android.util.AbstractMessageParser.TrieNode getAcronyms()>
<com.android.ims.internal.IImsUt: int queryCOLR()>
<android.bluetooth.le.ScanSettings.Builder: android.bluetooth.le.ScanSettings.Builder setScanMode(int)>
<android.location.GpsMeasurement: double getAzimuthUncertaintyInDeg()>
<android.preference.SeekBarVolumizer: void onStartTrackingTouch(android.widget.SeekBar)>
<android.widget.Toast: void setView(android.view.View)>
<android.view.ViewRootImpl: boolean getChildVisibleRect(android.view.View,android.graphics.Rect,android.graphics.Point)>
<android.telecom.Connection: void onAudioStateChanged(android.telecom.AudioState)>
<android.os.Binder: void restoreCallingIdentity(long)>
<android.hardware.camera2.marshal.impl.MarshalQueryableStreamConfiguration: android.hardware.camera2.marshal.Marshaler createMarshaler(android.hardware.camera2.utils.TypeReference,int)>
<android.widget.Scroller: int getFinalX()>
<android.app.MediaRouteButton: void drawableStateChanged()>
<android.widget.SimpleCursorTreeAdapter: void bindChildView(android.view.View,android.content.Context,android.database.Cursor,boolean)>
<android.bluetooth.BluetoothAdapter: boolean startLeScan(java.util.UUID[],android.bluetooth.BluetoothAdapter.LeScanCallback)>
<android.content.SyncResult: java.lang.String toString()>
<android.location.LocationProvider: boolean supportsAltitude()>
<android.widget.SearchView: boolean onKeyDown(int,android.view.KeyEvent)>
<android.widget.ActionMenuView: android.widget.ActionMenuView.LayoutParams generateDefaultLayoutParams()>
<android.media.AudioTrack: void <init>(int,int,int,int,int,int)>
<android.media.session.ISessionControllerCallback: void onVolumeInfoChanged(android.media.session.ParcelableVolumeInfo)>
<android.service.wallpaper.IWallpaperEngine: void dispatchPointer(android.view.MotionEvent)>
<android.hardware.hdmi.IHdmiRecordListener: void onTimerRecordingResult(int)>
<android.telephony.CellInfoLte: boolean equals(java.lang.Object)>
<android.widget.Toolbar: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.provider.Settings.System: void getConfiguration(android.content.ContentResolver,android.content.res.Configuration)>
<android.provider.ContactsContract.CommonDataKinds.Event: java.lang.CharSequence getTypeLabel(android.content.res.Resources,int,java.lang.CharSequence)>
<android.media.audiofx.BassBoost: void setParameterListener(android.media.audiofx.BassBoost.OnParameterChangeListener)>
<android.renderscript.Int3: android.renderscript.Int3 add(android.renderscript.Int3,android.renderscript.Int3)>
<android.os.INetworkManagementService: void setFirewallUidRule(int,boolean)>
<android.opengl.GLES31: void glProgramUniformMatrix3x4fv(int,int,int,boolean,java.nio.FloatBuffer)>
<android.media.session.MediaSession.CallbackStub: void onCustomAction(java.lang.String,android.os.Bundle)>
<android.opengl.GLES11Ext: void glGetClipPlanexOES(int,int[],int)>
<android.view.Display: int getPixelFormat()>
<android.content.res.ColorStateList: android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser)>
<android.os.INetworkManagementService: void setGlobalAlert(long)>
<android.view.View: void onCancelPendingInputEvents()>
<android.app.Notification.WearableExtender: int getContentIcon()>
<android.media.MediaScanner: void setLocale(java.lang.String)>
<android.inputmethodservice.Keyboard: int getKeyWidth()>
<android.widget.AdapterViewAnimator: void onRestoreInstanceState(android.os.Parcelable)>
<android.service.notification.ConditionProviderService: void onConnected()>
<android.net.NetworkPolicyManager: boolean isUidValidForPolicy(android.content.Context,int)>
<android.view.animation.Animation: boolean getDetachWallpaper()>
<android.bluetooth.BluetoothManager: java.util.List getDevicesMatchingConnectionStates(int,int[])>
<com.android.internal.app.WindowDecorActionBar: void addTab(android.app.ActionBar.Tab,int)>
<android.content.res.ObbScanner: android.content.res.ObbInfo getObbInfo(java.lang.String)>
<android.telephony.SubscriptionManager: void putPhoneIdAndSubIdExtra(android.content.Intent,int,long)>
<com.android.internal.view.menu.MenuPopupHelper: void <init>(android.content.Context,com.android.internal.view.menu.MenuBuilder,android.view.View)>
<android.media.tv.TvContentRating: java.lang.String flattenToString()>
<android.filterfw.core.Filter: void addMaskedInputPort(java.lang.String,android.filterfw.core.FrameFormat)>
<android.view.View.DragShadowBuilder: void onDrawShadow(android.graphics.Canvas)>
<android.net.MobileDataStateTracker: void setTeardownRequested(boolean)>
<com.android.internal.os.BatteryStatsImpl.StopwatchTimer: void logState(android.util.Printer,java.lang.String)>
<android.text.style.TabStopSpan.Standard: void <init>(int)>
<android.mtp.MtpDevice: java.lang.String getDeviceName()>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setDestinationInExternalPublicDir(java.lang.String,java.lang.String)>
<android.widget.Scroller: void extendDuration(int)>
<android.location.Address: void setSubLocality(java.lang.String)>
<android.util.Log: int println(int,java.lang.String,java.lang.String)>
<android.net.INetworkStatsService: void incrementOperationCount(int,int,int)>
<android.location.GpsClock: void resetDriftInNsPerSec()>
<android.app.usage.UsageEvents: boolean hasNextEvent()>
<android.widget.AdapterView: long getSelectedItemId()>
<com.android.internal.widget.multiwaveview.TargetDrawable: int getWidth()>
<android.content.Context: void startActivity(android.content.Intent)>
<android.view.View: void onDisplayHint(int)>
<android.media.JetPlayer: int getMaxTracks()>
<android.util.AttributeSet: int getAttributeIntValue(int,int)>
<android.widget.TableRow: void <init>(android.content.Context,android.util.AttributeSet)>
<android.media.tv.TvInputHardwareInfo: int getType()>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getChangingConfigurations()>
<android.content.res.Configuration: boolean needNewResources(int,int)>
<android.app.ActivityManagerProxy: boolean finishActivity(android.os.IBinder,int,android.content.Intent,boolean)>
<android.hardware.camera2.marshal.Marshaler: int calculateMarshalSize(java.lang.Object)>
<android.hardware.Camera.Parameters: java.lang.String getFocusMode()>
<android.hardware.SensorManager: boolean requestTriggerSensor(android.hardware.TriggerEventListener,android.hardware.Sensor)>
<android.service.fingerprint.IFingerprintService: void remove(android.os.IBinder,int,int)>
<android.app.Notification.Builder: android.app.Notification rebuild(android.content.Context,android.app.Notification)>
<android.app.ActionBar: void setDisplayUseLogoEnabled(boolean)>
<com.android.internal.telephony.IPhoneStateListener: void onSignalStrengthChanged(int)>
<android.os.Environment.UserEnvironment: java.io.File[] buildExternalStorageAppObbDirs(java.lang.String)>
<android.app.IntentService: void onHandleIntent(android.content.Intent)>
<android.content.IntentFilter: java.lang.String getCategory(int)>
<android.security.SystemKeyStore: java.lang.String generateNewKeyHexString(int,java.lang.String,java.lang.String)>
<android.transition.Visibility: void captureEndValues(android.transition.TransitionValues)>
<android.app.backup.BackupAgent: void onBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>
<android.net.wifi.WifiManager: boolean addToBlacklist(java.lang.String)>
<android.os.storage.StorageVolume: boolean isPrimary()>
<android.widget.EdgeEffect: void finish()>
<android.opengl.GLES30: void glGenQueries(int,int[],int)>
<android.media.tv.TvInputService.Session: void notifyContentBlocked(android.media.tv.TvContentRating)>
<android.app.IActivityManager: void grantUriPermissionFromOwner(android.os.IBinder,int,java.lang.String,android.net.Uri,int,int,int)>
<android.renderscript.Long2: void mod(long)>
<android.view.View: void onDrawHorizontalScrollBar(android.graphics.Canvas,android.graphics.drawable.Drawable,int,int,int,int)>
<android.text.BidiFormatter.Builder: android.text.BidiFormatter.Builder stereoReset(boolean)>
<android.hardware.camera2.legacy.SurfaceTextureRenderer: void flush()>
<android.bluetooth.BluetoothGatt: boolean writeDescriptor(android.bluetooth.BluetoothGattDescriptor)>
<android.telephony.Rlog: int i(java.lang.String,java.lang.String)>
<com.android.internal.os.ProcessCpuTracker: int countWorkingStats()>
<android.content.ContextWrapper: android.content.ComponentName startServiceAsUser(android.content.Intent,android.os.UserHandle)>
<android.content.ContentProvider: android.content.res.AssetFileDescriptor openTypedAssetFile(android.net.Uri,java.lang.String,android.os.Bundle)>
<android.media.session.ISession: void destroy()>
<android.os.PowerManager: void setBacklightBrightness(int)>
<android.opengl.GLES31: void glProgramUniform1iv(int,int,int,int[],int)>
<android.util.AttributeSet: java.lang.String getClassAttribute()>
<android.renderscript.Long3: void add(android.renderscript.Long3)>
<android.content.ContentProvider: void setAuthorities(java.lang.String)>
<android.net.TrafficStats: long getUidRxBytes(int)>
<android.text.method.TextKeyListener: void <init>(android.text.method.TextKeyListener.Capitalize,boolean)>
<android.widget.CheckBox: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.android.internal.os.BatteryStatsImpl: void writeSummaryToParcel(android.os.Parcel,boolean)>
<android.view.View: boolean canResolveTextAlignment()>
<android.text.SpanSet: void init(android.text.Spanned,int,int)>
<android.app.ActivityManagerProxy: android.app.IActivityContainer getEnclosingActivityContainer(android.os.IBinder)>
<android.app.job.JobInfo.Builder: android.app.job.JobInfo.Builder setPeriodic(long)>
<com.android.internal.app.ToolbarActionBar: void dispatchMenuVisibilityChanged(boolean)>
<android.location.GpsMeasurement: void setPrn(byte)>
<android.hardware.soundtrigger.SoundTrigger.StatusListener: void onServiceStateChange(int)>
<android.widget.Chronometer: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.android.ims.internal.IImsService: com.android.ims.internal.IImsEcbm getEcbmInterface(int)>
<android.telephony.PhoneNumberUtils: boolean is12Key(char)>
<android.view.ViewGroup: android.view.animation.Animation.AnimationListener getLayoutAnimationListener()>
<android.os.storage.StorageVolume: boolean isRemovable()>
<android.os.Parcel: java.lang.String[] readStringArray()>
<android.net.MailTo: java.lang.String toString()>
<android.view.View: void setAccessibilityDelegate(android.view.View.AccessibilityDelegate)>
<android.widget.SimpleCursorAdapter: void <init>(android.content.Context,int,android.database.Cursor,java.lang.String[],int[],int)>
<android.database.CursorWindow: boolean allocRow()>
<android.bluetooth.BluetoothDevice: boolean setPhonebookAccessPermission(int)>
<android.location.GpsMeasurement: void setAzimuthInDeg(double)>
<android.hardware.camera2.marshal.impl.MarshalQueryableSize: boolean isTypeMappingSupported(android.hardware.camera2.utils.TypeReference,int)>
<android.preference.PreferenceActivity: void switchToHeader(android.preference.PreferenceActivity.Header)>
<android.net.IConnectivityManager: int getRestoreDefaultNetworkDelay(int)>
<android.hardware.location.GeofenceHardwareRequestParcelable: int getMonitorTransitions()>
<com.google.android.gles_jni.GLImpl: void glGenBuffers(int,java.nio.IntBuffer)>
<android.view.accessibility.IAccessibilityManager: int addClient(android.view.accessibility.IAccessibilityManagerClient,int)>
<android.telephony.SubscriptionManager: int getDefaultVoicePhoneId()>
<android.bluetooth.BluetoothGatt: void disconnect()>
<android.app.Activity: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle)>
<android.webkit.FindActionModeCallback: void finish()>
<android.net.wifi.WifiManager: android.net.wifi.WifiActivityEnergyInfo getControllerActivityEnergyInfo(int)>
<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>
<android.content.ContentValues: void put(java.lang.String,java.lang.Boolean)>
<android.renderscript.Program.BaseProgramBuilder: android.renderscript.Program.BaseProgramBuilder setShader(java.lang.String)>
<com.android.internal.app.IBatteryStats: byte[] getStatistics()>
<android.content.pm.PackageParser: android.content.pm.ActivityInfo generateActivityInfo(android.content.pm.ActivityInfo,int,android.content.pm.PackageUserState,int)>
<android.renderscript.Element: boolean isComplex()>
<android.net.ProxyInfo: android.net.ProxyInfo buildDirectProxy(java.lang.String,int)>
<android.filterfw.core.GLEnvironment: boolean isContextActive()>
<android.os.BaseBundle: java.lang.String getString(java.lang.String)>
<android.nfc.INfcAdapter: android.nfc.INfcCardEmulation getNfcCardEmulationInterface()>
<android.view.TextureView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.service.dreams.DreamService: void setFullscreen(boolean)>
<android.database.sqlite.SQLiteDatabase: void beginTransactionWithListener(android.database.sqlite.SQLiteTransactionListener)>
<android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothServerSocket listenUsingRfcommWithServiceRecord(java.lang.String,java.util.UUID)>
<com.android.internal.app.WindowDecorActionBar: void setHomeAsUpIndicator(int)>
<android.os.Parcel: java.util.HashMap readHashMap(java.lang.ClassLoader)>
<android.widget.AbsListView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>
<android.hardware.camera2.params.BlackLevelPattern: boolean equals(java.lang.Object)>
<android.preference.PreferenceGroupAdapter: boolean isEnabled(int)>
<android.widget.SimpleCursorAdapter: void setViewBinder(android.widget.SimpleCursorAdapter.ViewBinder)>
<android.view.RenderNode: boolean setLayerPaint(android.graphics.Paint)>
<android.os.UserHandle: int getUserGid(int)>
<android.widget.TimePicker: android.os.Parcelable onSaveInstanceState()>
<android.graphics.drawable.DrawableContainer: boolean getPadding(android.graphics.Rect)>
<android.view.inputmethod.CursorAnchorInfo: int getSelectionEnd()>
<com.android.internal.app.ProcessStats: void read(java.io.InputStream)>
<android.os.SystemService: void restart(java.lang.String)>
<android.widget.ListPopupWindow.ForwardingListener: boolean onTouch(android.view.View,android.view.MotionEvent)>
<android.telephony.TelephonyManager: boolean hasIccCard()>
<com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm7BitPacked(java.lang.String)>
<android.print.PrintAttributes.Builder: android.print.PrintAttributes.Builder setMediaSize(android.print.PrintAttributes.MediaSize)>
<android.graphics.Paint: int breakText(java.lang.CharSequence,int,int,boolean,float,float[])>
<android.os.Environment: java.io.File buildPath(java.io.File,java.lang.String[])>
<android.widget.ScrollBarDrawable: void drawTrack(android.graphics.Canvas,android.graphics.Rect,boolean)>
<android.content.res.Configuration: int reduceScreenLayout(int,int,int)>
<android.preference.DialogPreference: void setDialogIcon(int)>
<android.content.res.Resources.Theme: void applyStyle(int,boolean)>
<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,android.net.Uri,android.view.SurfaceHolder,android.media.AudioAttributes,int)>
<android.widget.SimpleCursorAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
<android.widget.CalendarView: void setSelectedDateVerticalBar(android.graphics.drawable.Drawable)>
<android.widget.ProgressBar: void onMeasure(int,int)>
<android.os.StatFs: void restat(java.lang.String)>
<android.content.ContentValues: boolean equals(java.lang.Object)>
<android.accessibilityservice.AccessibilityService: boolean performGlobalAction(int)>
<android.os.Bundle: void putByteArray(java.lang.String,byte[])>
<android.widget.HorizontalScrollView: void addView(android.view.View,int)>
<android.util.MathUtils: float atan(float)>
<android.widget.PopupWindow: boolean isShowing()>
<android.content.pm.ComponentInfo: android.graphics.drawable.Drawable loadDefaultLogo(android.content.pm.PackageManager)>
<android.widget.TextView: void setRawInputType(int)>
<android.text.method.ArrowKeyMovementMethod: boolean lineEnd(android.widget.TextView,android.text.Spannable)>
<android.telephony.CellSignalStrengthLte: void writeToParcel(android.os.Parcel,int)>
<android.filterpacks.imageproc.ImageCombineFilter: void <init>(java.lang.String,java.lang.String[],java.lang.String,java.lang.String)>
<android.view.SubMenu: android.view.SubMenu setHeaderView(android.view.View)>
<android.net.DhcpResults: java.lang.String toString()>
<android.hardware.location.GeofenceHardwareRequest: void setNotificationResponsiveness(int)>
<android.preference.TwoStatePreference: boolean getDisableDependentsState()>
<com.android.internal.os.BatteryStatsImpl.Uid: com.android.internal.os.BatteryStatsImpl.Uid.Proc getProcessStatsLocked(java.lang.String)>
<android.os.AsyncTask: void onCancelled(java.lang.Object)>
<com.android.internal.view.InputConnectionWrapper: boolean sendKeyEvent(android.view.KeyEvent)>
<android.util.SparseBooleanArray: int indexOfValue(boolean)>
<android.media.audiofx.Visualizer: int getSamplingRate()>
<com.android.internal.view.StandaloneActionMode: android.view.View getCustomView()>
<android.view.animation.Animation: void setRepeatCount(int)>
<android.widget.Filter.Delayer: long getPostingDelay(java.lang.CharSequence)>
<android.graphics.PointF: void writeToParcel(android.os.Parcel,int)>
<android.text.style.SpellCheckSpan: boolean isSpellCheckInProgress()>
<android.alsa.AlsaCardsParser.AlsaCardRecord: boolean parse(java.lang.String,int)>
<android.net.UrlQuerySanitizer: int decodeHexDigit(char)>
<com.android.internal.inputmethod.InputMethodUtils: boolean canAddToLastInputMethod(android.view.inputmethod.InputMethodSubtype)>
<android.content.pm.LabeledIntent: void writeToParcel(android.os.Parcel,int)>
<android.app.TaskStackBuilder: android.app.TaskStackBuilder addParentStack(android.app.Activity)>
<android.preference.Preference: void <init>(android.content.Context)>
<android.opengl.GLES10: void glEnableClientState(int)>
<android.view.animation.Transformation: void setAlpha(float)>
<android.os.Parcel: void writeParcelableArray(android.os.Parcelable[],int)>
<android.filterpacks.imageproc.ToRGBFilter: void createProgram(android.filterfw.core.FilterContext,android.filterfw.core.FrameFormat)>
<android.text.method.LinkMovementMethod: boolean left(android.widget.TextView,android.text.Spannable)>
<android.location.Address: java.lang.String getThoroughfare()>
<android.app.ActionBar: void addTab(android.app.ActionBar.Tab,int)>
<android.renderscript.Program: void bindTexture(android.renderscript.Allocation,int)>
<com.android.internal.util.AsyncChannel: void sendMessage(int)>
<android.webkit.WebView: boolean onTouchEvent(android.view.MotionEvent)>
<android.print.pdf.PrintedPdfDocument: void <init>(android.content.Context,android.print.PrintAttributes)>
<com.android.internal.widget.LockPatternUtils: boolean isDeviceEncryptionEnabled()>
<android.media.session.ISession: void setPlaybackToRemote(int,int)>
<android.drm.DrmRights: java.lang.String getSubscriptionId()>
<android.app.IActivityManager: void deleteActivityContainer(android.app.IActivityContainer)>
<com.google.android.util.AbstractMessageParser.Photo: java.lang.String getAlbumURL(java.lang.String,java.lang.String)>
<android.app.FragmentBreadCrumbs: void setMaxVisible(int)>
<android.telecom.RemoteConnection: android.telecom.RemoteConference getConference()>
<android.bluetooth.IBluetoothGatt: void startMultiAdvertising(int,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseData,android.bluetooth.le.AdvertiseSettings)>
<android.view.inputmethod.InputMethodManager: boolean shouldOfferSwitchingToNextInputMethod(android.os.IBinder)>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setNotificationVisibility(int)>
<android.speech.tts.TextToSpeech: int addEarcon(java.lang.String,java.io.File)>
<android.bluetooth.IBluetoothPan: boolean connect(android.bluetooth.BluetoothDevice)>
<android.util.SizeF: void <init>(float,float)>
<android.app.Notification.Action.Builder: android.app.Notification.Action.Builder extend(android.app.Notification.Action.Extender)>
<android.widget.TextView: int getAccessibilitySelectionStart()>
<android.net.http.RequestQueue: void startTiming()>
<android.transition.Transition: android.transition.Transition addTarget(android.view.View)>
<android.graphics.RectF: void <init>(android.graphics.RectF)>
<android.transition.Transition: java.util.List getTargetViewNames()>
<android.graphics.Shader: android.graphics.Shader copy()>
<android.view.Window: int getStatusBarColor()>
<android.os.Debug.MemoryInfo: int getOtherSharedDirty(int)>
<android.hardware.IConsumerIrService: boolean hasIrEmitter()>
<android.media.MediaPlayer.TrackInfo: int getTrackType()>
<android.content.ClipboardManager: void setText(java.lang.CharSequence)>
<android.animation.LayoutTransition: void setStagger(int,long)>
<android.media.session.MediaSessionManager.OnActiveSessionsChangedListener: void onActiveSessionsChanged(java.util.List)>
<android.print.PrintJobId: void <init>(java.lang.String)>
<com.google.android.util.AbstractMessageParser.Link: boolean isHtml()>
<android.app.Fragment: android.app.Fragment getTargetFragment()>
<android.graphics.PointF: void set(float,float)>
<android.renderscript.Double2: void <init>(android.renderscript.Double2)>
<android.net.wifi.WifiManager: boolean is5GHzBandSupported()>
<com.android.internal.widget.PasswordEntryKeyboardHelper: void <init>(android.content.Context,android.inputmethodservice.KeyboardView,android.view.View,boolean)>
<android.renderscript.Script.LaunchOptions: android.renderscript.Script.LaunchOptions setZ(int,int)>
<android.transition.ChangeTransform: boolean getReparentWithOverlay()>
<android.gesture.GestureUtils: android.gesture.OrientedBoundingBox computeOrientedBoundingBox(float[])>
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()>
<com.android.internal.app.ToolbarActionBar: void setWindowTitle(java.lang.CharSequence)>
<android.view.SurfaceControl: java.lang.String toString()>
<com.android.internal.os.BatteryStatsImpl.Uid: long getAudioTurnedOnTime(long,int)>
<android.net.http.DelegatingSSLSession: javax.net.ssl.SSLSessionContext getSessionContext()>
<android.content.SyncRequest: long getSyncRunTime()>
<android.media.MediaRecorder: void setAudioSource(int)>
<android.database.DefaultDatabaseErrorHandler: void onCorruption(android.database.sqlite.SQLiteDatabase)>
<android.renderscript.Byte4: void <init>(android.renderscript.Byte4)>
<android.os.IUserManager: android.os.Bundle getUserRestrictions(int)>
<android.filterpacks.imageproc.ImageStitcher: void process(android.filterfw.core.FilterContext)>
<android.net.NetworkCapabilities: android.net.NetworkCapabilities addCapability(int)>
<android.print.PrinterId: int describeContents()>
<android.app.SearchableInfo: android.content.Context getActivityContext(android.content.Context)>
<android.widget.Spinner: void onDetachedFromWindow()>
<android.location.GpsMeasurement: double getAccumulatedDeltaRangeUncertaintyInMeters()>
<android.app.backup.BackupTransport: int getNextFullRestoreDataChunk(android.os.ParcelFileDescriptor)>
<android.text.SpannableStringBuilder: void drawText(android.graphics.Canvas,int,int,float,float,android.graphics.Paint)>
<android.view.animation.LayoutAnimationController: void <init>(android.view.animation.Animation,float)>
<android.telecom.CameraCapabilities: int getHeight()>
<android.bluetooth.BluetoothHealth: java.util.List getConnectedDevices()>
<android.database.CursorWrapper: short getShort(int)>
<android.view.WindowId: boolean isFocused()>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDDst()>
<android.view.accessibility.CaptioningManager.CaptionStyle: boolean hasEdgeColor()>
<android.media.AudioSystem: boolean getMasterMute()>
<android.preference.RingtonePreference: android.net.Uri onRestoreRingtone()>
<android.content.pm.PackageManager: int getApplicationEnabledSetting(java.lang.String)>
<android.app.Activity: void onContentChanged()>
<android.content.IOnPrimaryClipChangedListener: void dispatchPrimaryClipChanged()>
<com.android.internal.inputmethod.InputMethodSubtypeSwitchingController.ImeSubtypeListItem: boolean equals(java.lang.Object)>
<android.renderscript.Allocation: void copyTo(float[])>
<android.view.textservice.TextInfo: void <init>(java.lang.CharSequence,int,int,int,int)>
<android.opengl.GLUtils: void texImage2D(int,int,int,android.graphics.Bitmap,int)>
<android.filterpacks.imageproc.Invert: android.filterfw.core.Program getNativeProgram(android.filterfw.core.FilterContext)>
<android.media.AudioManager: void setRingerMode(int,boolean)>
<android.net.ConnectivityManager: void setGlobalProxy(android.net.ProxyInfo)>
<android.media.tv.TvTrackInfo: android.os.Bundle getExtra()>
<com.android.internal.widget.multiwaveview.TargetDrawable: void setAlpha(float)>
<android.text.method.TextKeyListener: boolean onKeyUp(android.view.View,android.text.Editable,int,android.view.KeyEvent)>
<android.app.ResultInfo: void <init>(android.os.Parcel)>
<android.widget.AbsListView: int getListPaddingRight()>
<android.widget.SpellChecker: void closeSession()>
<com.android.internal.telephony.IPhoneStateListener: void onOemHookRawEvent(byte[])>
<com.android.internal.util.CharSequences: java.lang.CharSequence forAsciiBytes(byte[],int,int)>
<android.net.ProxyDataTracker: void startMonitoring(android.content.Context,android.os.Handler)>
<android.os.UserManager: void setUserRestriction(java.lang.String,boolean,android.os.UserHandle)>
<android.graphics.drawable.BitmapDrawable: void setTargetDensity(android.graphics.Canvas)>
<android.os.Handler: boolean sendEmptyMessageAtTime(int,long)>
<com.android.internal.view.menu.ListMenuPresenter: void updateMenuView(boolean)>
<android.app.ActivityOptions: android.os.ResultReceiver getResultReceiver()>
<android.app.LauncherActivity: android.content.Intent getTargetIntent()>
<android.media.browse.MediaBrowser.MediaItem: int describeContents()>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setMessage(int)>
<android.graphics.Canvas: int getMaximumBitmapWidth()>
<android.os.BatteryStats: long getWifiStateTime(int,long,int)>
<android.content.pm.PackageManager: void replacePreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName)>
<android.graphics.drawable.RotateDrawable: void setAlpha(int)>
<android.content.RestrictionsManager: android.os.Bundle getApplicationRestrictions()>
<android.telephony.CellIdentityLte: int describeContents()>
<android.widget.MediaController.MediaPlayerControl: int getDuration()>
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: int getStatus()>
<com.android.internal.widget.PasswordEntryKeyboardHelper: void setKeyboardMode(int)>
<android.bluetooth.BluetoothHeadsetClient: boolean terminateCall(android.bluetooth.BluetoothDevice,int)>
<android.view.Gravity: void apply(int,int,int,android.graphics.Rect,android.graphics.Rect)>
<android.bluetooth.BluetoothUuid: boolean isMas(android.os.ParcelUuid)>
<android.view.InputDevice: int getId()>
<android.os.Registrant: void notifyResult(java.lang.Object)>
<android.bluetooth.IBluetoothA2dpSink: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.util.PrintWriterPrinter: void println(java.lang.String)>
<android.opengl.GLES20: void glGetBooleanv(int,boolean[],int)>
<android.graphics.LayerRasterizer: void addLayer(android.graphics.Paint)>
<com.android.internal.util.MemInfoReader: long getFreeSize()>
<android.graphics.drawable.InsetDrawable: boolean onStateChange(int[])>
<android.app.ApplicationErrorReport.CrashInfo: void <init>(android.os.Parcel)>
<android.filterfw.core.ShaderProgram: void beginDrawing()>
<android.filterfw.core.GLFrame: void setTextureParameter(int,int)>
<android.content.res.AssetFileDescriptor.AutoCloseInputStream: void reset()>
<android.hardware.location.GeofenceHardwareRequestParcelable: double getRadius()>
<android.media.session.MediaSessionManager: void addOnActiveSessionsChangedListener(android.media.session.MediaSessionManager.OnActiveSessionsChangedListener,android.content.ComponentName)>
<android.media.MediaMetadata: java.util.Set keySet()>
<android.accessibilityservice.IAccessibilityServiceClient: void onKeyEvent(android.view.KeyEvent,int)>
<com.android.internal.widget.DecorToolbar: int getNavigationMode()>
<android.text.style.LeadingMarginSpan.Standard: int getSpanTypeId()>
<android.filterpacks.text.StringSource: void <init>(java.lang.String)>
<android.media.audiofx.BassBoost: boolean getStrengthSupported()>
<android.widget.FrameLayout: void draw(android.graphics.Canvas)>
<android.renderscript.AllocationAdapter: void setFace(android.renderscript.Type.CubemapFace)>
<android.os.Environment: java.io.File getLegacyExternalStorageDirectory()>
<android.view.animation.AnimationUtils: android.view.animation.Interpolator loadInterpolator(android.content.res.Resources,android.content.res.Resources.Theme,int)>
<android.widget.Toolbar: java.lang.CharSequence getSubtitle()>
<com.android.internal.widget.ActionBarView: void setMenu(android.view.Menu,com.android.internal.view.menu.MenuPresenter.Callback)>
<android.view.KeyEvent: boolean isCtrlPressed()>
<android.app.Activity: void openContextMenu(android.view.View)>
<android.app.Activity: android.transition.TransitionManager getContentTransitionManager()>
<android.app.admin.DevicePolicyManager: java.lang.String[] getLockTaskPackages(android.content.ComponentName)>
<android.accounts.IAccountManager: android.accounts.Account[] getSharedAccountsAsUser(int)>
<android.widget.Spinner: void setPrompt(java.lang.CharSequence)>
<android.renderscript.Script: boolean getVarB(int)>
<android.os.IUserManager: android.content.pm.UserInfo createProfileForUser(java.lang.String,int,int)>
<android.preference.Preference: boolean persistFloat(float)>
<android.webkit.WebChromeClient: void getVisitedHistory(android.webkit.ValueCallback)>
<com.android.internal.app.IBatteryStats: void noteMobileRadioPowerState(int,long)>
<android.telecom.Connection.Listener: void onStateChanged(android.telecom.Connection,int)>
<android.webkit.CookieManager: void removeExpiredCookie()>
<android.widget.ImageSwitcher: void <init>(android.content.Context)>
<android.speech.RecognitionService: void onStopListening(android.speech.RecognitionService.Callback)>
<android.webkit.UrlInterceptRegistry: boolean urlInterceptDisabled()>
<android.provider.MediaStore.Audio.Artists.Albums: android.net.Uri getContentUri(java.lang.String,long)>
<android.hardware.display.WifiDisplay: boolean isRemembered()>
<android.app.IUiAutomationConnection: android.graphics.Bitmap takeScreenshot(int,int)>
<com.google.android.gles_jni.GLImpl: void glCullFace(int)>
<android.view.Window: void setReenterTransition(android.transition.Transition)>
<android.preference.Preference: float getPersistedFloat(float)>
<android.media.AudioManager: void setStreamSolo(int,boolean)>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: int getConstantMinimumHeight()>
<android.media.MediaPlayer: int native_pullBatteryData(android.os.Parcel)>
<android.view.View: int getAccessibilitySelectionEnd()>
<android.widget.AppSecurityPermissions: int getPermissionCount()>
<android.view.RenderNode: boolean setOutline(android.graphics.Outline)>
<android.util.Rational: int intValue()>
<android.widget.Toolbar: void setSubtitle(int)>
<android.os.UserManager: android.content.pm.UserInfo getProfileParent(int)>
<android.app.admin.DevicePolicyManager: boolean setDeviceOwner(java.lang.String,java.lang.String)>
<android.text.style.URLSpan: void <init>(java.lang.String)>
<android.graphics.drawable.LayerDrawable: void setDither(boolean)>
<android.text.method.NumberKeyListener: boolean onKeyDown(android.view.View,android.text.Editable,int,android.view.KeyEvent)>
<android.app.admin.DevicePolicyManager: java.lang.String getDeviceOwner()>
<android.content.pm.PackageParser.Component: void printComponentShortName(java.io.PrintWriter)>
<android.media.MediaPlayer: android.media.MediaPlayer create(android.content.Context,android.net.Uri)>
<android.net.wifi.ScanResult: int describeContents()>
<com.android.internal.os.BatteryStatsImpl: void noteWifiBatchedScanStartedLocked(int,int)>
<com.android.internal.view.menu.MenuBuilder: int findItemIndex(int)>
<android.util.LruCache: int createCount()>
<android.media.ImageReader: android.media.ImageReader newInstance(int,int,int,int)>
<android.widget.EdgeEffect: void onPull(float)>
<android.hardware.camera2.marshal.MarshalQueryable: boolean isTypeMappingSupported(android.hardware.camera2.utils.TypeReference,int)>
<android.app.admin.IDevicePolicyManager: int getPasswordHistoryLength(android.content.ComponentName,int)>
<android.view.WindowManagerPolicy.WindowState: int getSurfaceLayer()>
<android.content.SyncRequest: android.accounts.Account getAccount()>
<android.view.View: boolean isDirty()>
<android.transition.ChangeScroll: void captureEndValues(android.transition.TransitionValues)>
<android.accounts.OperationCanceledException: void <init>(java.lang.String,java.lang.Throwable)>
<com.android.internal.os.BatteryStatsImpl: int getPhoneOnCount(int)>
<android.media.tv.TvContentRating: java.lang.String getMainRating()>
<android.widget.Editor: android.text.method.WordIterator getWordIterator()>
<android.graphics.drawable.Drawable: void invalidateSelf()>
<android.filterfw.core.GLEnvironment: void finalize()>
<com.android.internal.util.SizedInputStream: void <init>(java.io.InputStream,long)>
<com.android.internal.view.menu.MenuBuilder: void savePresenterStates(android.os.Bundle)>
<android.opengl.GLES11Ext: void glGetTexGenfvOES(int,int,java.nio.FloatBuffer)>
<android.app.Notification.MediaStyle: android.app.Notification buildStyled(android.app.Notification)>
<android.transition.Scene: void setEnterAction(java.lang.Runnable)>
<android.graphics.drawable.BitmapDrawable: boolean hasAntiAlias()>
<android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>
<android.os.AsyncTask: java.lang.Object get(long,java.util.concurrent.TimeUnit)>
<android.content.pm.PackageParser: android.content.pm.ApplicationInfo generateApplicationInfo(android.content.pm.ApplicationInfo,int,android.content.pm.PackageUserState,int)>
<android.view.RenderNode: boolean setProjectBackwards(boolean)>
<android.os.WorkSource: boolean remove(android.os.WorkSource)>
<android.service.dreams.DreamService: boolean onSearchRequested()>
<android.content.IContentService: int getIsSyncable(android.accounts.Account,java.lang.String)>
<android.graphics.Canvas: void throwIfCannotDraw(android.graphics.Bitmap)>
<com.android.internal.util.FastPrintWriter: void print(char)>
<android.view.accessibility.AccessibilityRecord: android.view.accessibility.AccessibilityNodeInfo getSource()>
<android.webkit.WebChromeClient.FileChooserParams: int getMode()>
<com.android.internal.os.BatteryStatsImpl: void <init>(java.io.File,android.os.Handler)>
<android.content.SyncStatusInfo: void removePeriodicSyncTime(int)>
<android.graphics.drawable.RotateDrawable: int getIntrinsicHeight()>
<android.widget.RatingBar: void onMeasure(int,int)>
<android.text.method.DialerKeyListener: int getInputType()>
<android.app.ActionBar.Tab: android.app.ActionBar.Tab setContentDescription(java.lang.CharSequence)>
<android.widget.RatingBar: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.widget.AbsListView: void setSelectionFromTop(int,int)>
<android.app.ActivityManagerProxy: boolean killProcessesBelowForeground(java.lang.String)>
<android.app.admin.DevicePolicyManager: void setLockTaskPackages(android.content.ComponentName,java.lang.String[])>
<android.media.session.MediaController: void <init>(android.content.Context,android.media.session.MediaSession.Token)>
<android.media.projection.MediaProjection: android.media.projection.IMediaProjection getProjection()>
<android.telecom.Conference: void onAudioStateChanged(android.telecom.AudioState)>
<android.app.admin.DevicePolicyManager: void addCrossProfileIntentFilter(android.content.ComponentName,android.content.IntentFilter,int)>
<com.android.internal.view.menu.ListMenuPresenter: boolean onSubMenuSelected(com.android.internal.view.menu.SubMenuBuilder)>
<android.net.http.DelegatingSSLSession: java.lang.String getPeerHost()>
<android.widget.AbsSeekBar: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.internal.os.BatteryStatsImpl.Uid: com.android.internal.os.BatteryStatsImpl.BatchTimer createVibratorOnTimerLocked()>
<com.android.internal.inputmethod.InputMethodSubtypeSwitchingController.ImeSubtypeListItem: void <init>(java.lang.CharSequence,java.lang.CharSequence,android.view.inputmethod.InputMethodInfo,int,java.lang.String,java.lang.String)>
<android.webkit.ConsoleMessage: void <init>(java.lang.String,java.lang.String,int,android.webkit.ConsoleMessage.MessageLevel)>
<android.hardware.camera2.marshal.impl.MarshalQueryableHighSpeedVideoConfiguration: boolean isTypeMappingSupported(android.hardware.camera2.utils.TypeReference,int)>
<android.bluetooth.IBluetoothGatt: void readCharacteristic(int,java.lang.String,int,int,android.os.ParcelUuid,int,android.os.ParcelUuid,int)>
<android.speech.RecognitionListener: void onRmsChanged(float)>
<android.app.backup.WallpaperBackupHelper: void performBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>
<android.opengl.GLES20: void glVertexAttrib2fv(int,float[],int)>
<android.renderscript.Matrix3f: void loadScale(float,float)>
<android.content.ContentResolver: void startSync(android.net.Uri,android.os.Bundle)>
<com.android.internal.widget.multiwaveview.GlowPadView: void setTargetResources(int)>
<android.os.storage.StorageVolume: int hashCode()>
<android.net.http.RequestQueue: void shutdown()>
<android.os.INetworkManagementService: void untetherInterface(java.lang.String)>
<android.app.DownloadManager.Request: android.app.DownloadManager.Request setDestinationUri(android.net.Uri)>
<android.text.method.HideReturnsTransformationMethod: char[] getReplacement()>
<android.accounts.AbstractAccountAuthenticator: android.os.Bundle editProperties(android.accounts.AccountAuthenticatorResponse,java.lang.String)>
<android.content.ContextWrapper: boolean isRestricted()>
<com.android.internal.telecom.RemoteServiceCallback: void onError()>
<android.text.Layout: int getParagraphDirection(int)>
<android.content.Intent: android.content.Intent createChooser(android.content.Intent,java.lang.CharSequence)>
<android.view.ViewGroup: boolean getTouchscreenBlocksFocus()>
<android.net.INetworkManagementEventObserver: void interfaceLinkStateChanged(java.lang.String,boolean)>
<android.preference.PreferenceGroup: void dispatchSaveInstanceState(android.os.Bundle)>
<android.graphics.drawable.Drawable: int getChangingConfigurations()>
<android.graphics.Camera: void applyToCanvas(android.graphics.Canvas)>
<android.hardware.camera2.CameraAccessException: int getReason()>
<android.widget.SeekBar.OnSeekBarChangeListener: void onProgressChanged(android.widget.SeekBar,int,boolean)>
<android.hardware.hdmi.HdmiTvClient: void startOneTouchRecord(int,android.hardware.hdmi.HdmiRecordSources.RecordSource)>
<android.media.tv.TvInputManager: java.util.List getHardwareList()>
<android.media.effect.EffectContext: void release()>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setMessage(java.lang.CharSequence)>
<com.android.internal.os.BatteryStatsImpl.Uid.Proc: void onTimeStopped(long,long,long)>
<android.telephony.CellSignalStrength: boolean equals(java.lang.Object)>
<android.bluetooth.IBluetoothA2dp: boolean connect(android.bluetooth.BluetoothDevice)>
<android.gesture.GestureStore: void load(java.io.InputStream,boolean)>
<android.telephony.PhoneStateListener: void onDataConnectionRealTimeInfoChanged(android.telephony.DataConnectionRealTimeInfo)>
<android.os.DropBoxManager.Entry: int describeContents()>
<android.os.CommonTimeConfig: void setServerDiedListener(android.os.CommonTimeConfig.OnServerDiedListener)>
<android.preference.PreferenceActivity: void loadHeadersFromResource(int,java.util.List)>
<android.telephony.TelephonyManager: android.telephony.CellLocation getCellLocation()>
<android.widget.SimpleCursorAdapter: void setViewImage(android.widget.ImageView,java.lang.String)>
<android.bluetooth.le.ScanCallback: void onScanFailed(int)>
<com.android.internal.widget.ActionBarView: int getDropdownItemCount()>
<android.widget.TimePicker.TimePickerDelegate: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.android.ims.internal.IImsCallSession: boolean isInCall()>
<android.renderscript.Float2: int length()>
<android.app.IActivityManager: android.app.IActivityManager.ContentProviderHolder getContentProvider(android.app.IApplicationThread,java.lang.String,int,boolean)>
<com.android.internal.widget.AutoScrollHelper.AbsListViewAutoScroller: void scrollTargetBy(int,int)>
<android.app.admin.DeviceAdminReceiver: void onReceive(android.content.Context,android.content.Intent)>
<android.widget.ListPopupWindow: boolean onKeyPreIme(int,android.view.KeyEvent)>
<android.content.ContentProviderClient: android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle)>
<android.opengl.GLES20: void glFlush()>
<android.filterpacks.imageproc.ColorTemperatureFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>
<android.widget.ZoomButton: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.nfc.Tag: android.nfc.INfcTag getTagService()>
<android.opengl.GLES10: void glTranslatex(int,int,int)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setTitle(int)>
<android.os.SELinux: boolean restoreconRecursive(java.io.File)>
<android.widget.RatingBar: float getStepSize()>
<android.net.wifi.WifiManager: android.os.Messenger getWifiServiceMessenger()>
<android.telephony.SignalStrength: int getCdmaAsuLevel()>
<com.android.internal.util.MemInfoReader: long getCachedSize()>
<android.util.SizeF: java.lang.String toString()>
<android.widget.Switch: void setSplitTrack(boolean)>
<android.preference.Preference: void performClick(android.preference.PreferenceScreen)>
<android.text.SpannableStringBuilder: boolean equals(java.lang.Object)>
<android.renderscript.Float4: void setAt(int,float)>
<android.renderscript.Allocation: void copyFromUnchecked(short[])>
<android.opengl.GLES10: void glDisableClientState(int)>
<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase.CursorFactory,int)>
<android.speech.srec.Recognizer: java.lang.String[] getResultKeys(int)>
<android.renderscript.Short3: void div(android.renderscript.Short3)>
<android.content.pm.PackageManager: boolean isSignedByExactly(java.lang.String,android.content.pm.KeySet)>
<android.view.MenuItem.OnActionExpandListener: boolean onMenuItemActionCollapse(android.view.MenuItem)>
<android.location.GpsNavigationMessageEvent: void <init>(android.location.GpsNavigationMessage)>
<android.content.ClipData: android.graphics.Bitmap getIcon()>
<android.database.sqlite.SQLiteSession: void setTransactionSuccessful()>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture confirmCredentialsAsUser(android.accounts.Account,android.os.Bundle,android.app.Activity,android.accounts.AccountManagerCallback,android.os.Handler,android.os.UserHandle)>
<android.view.FocusFinderHelper: int majorAxisDistanceToFarEdge(int,android.graphics.Rect,android.graphics.Rect)>
<android.nfc.cardemulation.ApduServiceInfo: android.nfc.cardemulation.AidGroup getDynamicAidGroupForCategory(java.lang.String)>
<android.app.ActivityThread: android.app.ContextImpl getSystemContext()>
<android.emoji.EmojiFactory: int getAndroidPuaFromVendorSpecificPua(int)>
<android.app.IActivityManager: void appNotRespondingViaProvider(android.os.IBinder)>
<android.view.RenderNodeAnimator: void end()>
<android.renderscript.Matrix4f: void loadPerspective(float,float,float,float)>
<android.graphics.drawable.BitmapDrawable: android.graphics.ColorFilter getColorFilter()>
<com.android.internal.app.WindowDecorActionBar: int getNavigationMode()>
<android.opengl.GLES30: void glUniform2uiv(int,int,int[],int)>
<android.media.IAudioService: void setStreamVolume(int,int,int,java.lang.String)>
<android.media.MediaRouter.RouteInfo: java.lang.String getDeviceAddress()>
<com.android.internal.widget.ActionBarOverlayLayout: com.android.internal.widget.ActionBarOverlayLayout.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.graphics.Matrix: boolean rectStaysRect()>
<android.hardware.hdmi.HdmiClient: void <init>(android.hardware.hdmi.IHdmiControlService)>
<com.android.internal.view.menu.MenuBuilder: void close()>
<android.view.View: void setEnabled(boolean)>
<android.appwidget.AppWidgetProvider: void onAppWidgetOptionsChanged(android.content.Context,android.appwidget.AppWidgetManager,int,android.os.Bundle)>
<android.app.WallpaperInfo: int describeContents()>
<android.net.IConnectivityManager: java.lang.String getMobileProvisioningUrl()>
<android.content.ContentResolver: android.content.IContentService getContentService()>
<android.util.MathUtils: float random(float)>
<android.app.admin.IDevicePolicyManager: boolean setPermittedInputMethods(android.content.ComponentName,java.util.List)>
<com.android.internal.os.BatteryStatsImpl.OverflowArrayMap: void cleanup()>
<android.graphics.drawable.ColorDrawable: int getOpacity()>
<android.telephony.CellSignalStrengthCdma: int getCdmaEcio()>
<android.os.Handler: boolean runWithScissors(java.lang.Runnable,long)>
<android.preference.DialogPreference: void setDialogTitle(int)>
<android.widget.ActionMenuView.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>
<android.net.wifi.p2p.WifiP2pGroup: java.lang.String toString()>
<com.android.internal.os.BatteryStatsImpl: long computeBatteryUptime(long,int)>
<android.graphics.drawable.InsetDrawable: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>
<com.android.internal.widget.DecorToolbar: void setNavigationIcon(android.graphics.drawable.Drawable)>
<android.view.View: void setRotationY(float)>
<android.net.IpPrefix: boolean equals(java.lang.Object)>
<android.widget.StackView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.os.Parcel: void writeSerializable(java.io.Serializable)>
<android.os.Binder: android.os.UserHandle getCallingUserHandle()>
<android.renderscript.Allocation: void copyFrom(byte[])>
<android.app.TimePickerDialog: android.os.Bundle onSaveInstanceState()>
<android.widget.ZoomButtonsController: boolean isVisible()>
<com.android.internal.telephony.GsmAlphabet: boolean isGsmSeptets(char)>
<com.android.internal.telecom.IVideoCallback: void handleCallSessionEvent(int)>
<android.content.pm.PackageParser.SplitPermissionInfo: void <init>(java.lang.String,java.lang.String[],int)>
<android.filterfw.core.Frame: void releaseNativeAllocation()>
<android.hardware.Camera: void startPreview()>
<android.text.method.MovementMethod: boolean onKeyDown(android.widget.TextView,android.text.Spannable,int,android.view.KeyEvent)>
<com.android.internal.widget.ResolverDrawerLayout.LayoutParams: void <init>(com.android.internal.widget.ResolverDrawerLayout.LayoutParams)>
<android.service.dreams.DreamService: int getDozeScreenState()>
<android.net.NetworkStatsHistory: void recordEntireHistory(android.net.NetworkStatsHistory)>
<android.media.audiofx.AudioEffect: byte[] shortToByteArray(short)>
<android.content.ContentValues: void <init>(android.content.ContentValues)>
<com.android.internal.os.BatteryStatsImpl.Timer: void onTimeStarted(long,long,long)>
<android.database.sqlite.SQLiteDatabaseConfiguration: boolean isInMemoryDb()>
<android.view.Display: void getRectSize(android.graphics.Rect)>
<android.view.View: int getNextFocusDownId()>
<com.android.internal.view.IInputContextCallback: void setCursorCapsMode(int,int)>
<com.android.internal.view.BaseSurfaceHolder: android.graphics.Canvas lockCanvas(android.graphics.Rect)>
<android.location.GpsMeasurement: boolean hasElevationInDeg()>
<android.media.session.MediaController.PlaybackInfo: int getVolumeControl()>
<android.media.AudioAttributes.Builder: android.media.AudioAttributes.Builder setLegacyStreamType(int)>
<android.content.AsyncTaskLoader: void waitForLoader()>
<android.content.SyncResult: boolean hasSoftError()>
<android.renderscript.ProgramStore: boolean isColorMaskRedEnabled()>
<android.app.admin.DevicePolicyManager: android.content.ComponentName getProfileOwnerAsUser(int)>
<android.bluetooth.BluetoothGattServer: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.util.StateSet: java.lang.String dump(int[])>
<android.webkit.FindActionModeCallback: void onTextChanged(java.lang.CharSequence,int,int,int)>
<android.os.StrictMode: boolean conditionallyEnableDebugLogging()>
<com.android.internal.util.ProcFileReader: void close()>
<android.text.SpanWatcher: void onSpanAdded(android.text.Spannable,java.lang.Object,int,int)>
<android.hardware.hdmi.HdmiRecordSources.DigitalChannelData: android.hardware.hdmi.HdmiRecordSources.DigitalChannelData ofTwoNumbers(int,int)>
<android.os.StrictMode: int getThreadPolicyMask()>
<android.hardware.location.GeofenceHardwareRequestParcelable: double getLongitude()>
<android.view.SurfaceView: void updateWindow(boolean,boolean)>
<android.security.KeyPairGeneratorSpec: java.util.Date getStartDate()>
<android.hardware.camera2.params.StreamConfigurationMap: android.util.Range[] getHighSpeedVideoFpsRanges()>
<android.inputmethodservice.InputMethodService: boolean sendDefaultEditorAction(boolean)>
<android.content.ContentProviderResult: void <init>(android.net.Uri)>
<android.content.res.CompatibilityInfo.Translator: android.graphics.Rect getTranslatedVisibleInsets(android.graphics.Rect)>
<android.graphics.Atlas: void <init>(android.graphics.Atlas.Type,int,int,int)>
<android.view.View: void dispatchDraw(android.graphics.Canvas)>
<android.widget.TextView: void debug(int)>
<android.graphics.Paint: void setStrokeCap(android.graphics.Paint.Cap)>
<android.hardware.camera2.TotalCaptureResult: void <init>(android.hardware.camera2.impl.CameraMetadataNative,int)>
<com.android.internal.widget.DecorToolbar: void initProgress()>
<android.media.effect.effects.NegativeEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>
<com.android.internal.content.PackageMonitor: void onUidRemoved(int)>
<android.preference.DialogPreference: void setNegativeButtonText(int)>
<android.opengl.GLES31Ext: void glGetTexParameterIuivEXT(int,int,java.nio.IntBuffer)>
<android.util.SparseBooleanArray: java.lang.String toString()>
<android.net.MobileDataStateTracker: void privateDnsRouteSet(boolean)>
<android.location.ILocationListener: void onLocationChanged(android.location.Location)>
<com.android.internal.app.ToolbarActionBar: void hide()>
<android.content.res.TypedArray: int getType(int)>
<android.media.MediaFormat: android.media.MediaFormat createVideoFormat(java.lang.String,int,int)>
<com.android.internal.util.ArrayUtils: int[] appendInt(int[],int)>
<android.filterpacks.base.GLTextureSource: void process(android.filterfw.core.FilterContext)>
<android.location.FusedBatchOptions: boolean isFlagSet(int)>
<android.location.GpsClock: void reset()>
<android.net.VpnService.Builder: android.net.VpnService.Builder addDnsServer(java.net.InetAddress)>
<android.widget.ScrollView: boolean arrowScroll(int)>
<android.graphics.Paint: boolean isAntiAlias()>
<android.view.Window: void closePanel(int)>
<android.view.WindowManagerPolicy: android.view.animation.Animation createForceHideEnterAnimation(boolean,boolean)>
<com.android.internal.os.BatteryStatsImpl.TimeBaseObs: void onTimeStarted(long,long,long)>
<android.print.PrintDocumentInfo.Builder: android.print.PrintDocumentInfo.Builder setPageCount(int)>
<android.hardware.camera2.legacy.ParameterUtils: java.util.List convertSizeList(java.util.List)>
<com.google.android.util.AbstractMessageParser.Resources: java.util.Set getSchemes()>
<android.inputmethodservice.InputMethodService: void onInitializeInterface()>
<android.print.PrintAttributes.MediaSize: java.lang.String toString()>
<android.telephony.CellIdentityLte: void <init>(int,int,int,int,int)>
<android.text.method.DigitsKeyListener: void <init>(boolean,boolean)>
<android.graphics.drawable.DrawableContainer: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>
<com.android.ims.ImsReasonInfo: int getCode()>
<android.net.ConnectivityManager: boolean getBackgroundDataSetting()>
<android.preference.PreferenceManager: void unregisterOnActivityStopListener(android.preference.PreferenceManager.OnActivityStopListener)>
<android.telephony.CellIdentityLte: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.backup.IBackupTransport: long requestFullBackupTime()>
<android.util.DayOfMonthCursor: void setSelectedRowColumn(int,int)>
<android.opengl.GLDebugHelper: javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL,int,java.io.Writer)>
<android.printservice.PrintJob: boolean isFailed()>
<android.graphics.RectF: boolean contains(float,float,float,float)>
<android.media.tv.TvView: void onMeasure(int,int)>
<com.android.internal.view.menu.ActionMenuItemView: boolean showsIcon()>
<android.content.pm.InstrumentationInfo: void writeToParcel(android.os.Parcel,int)>
<android.hardware.display.VirtualDisplay: void release()>
<android.view.ViewGroup: void dispatchSetPressed(boolean)>
<android.media.tv.TvTrackInfo.Builder: void <init>(int,java.lang.String)>
<android.hardware.camera2.marshal.impl.MarshalQueryableSizeF: android.hardware.camera2.marshal.Marshaler createMarshaler(android.hardware.camera2.utils.TypeReference,int)>
<android.graphics.Paint: void setStrokeMiter(float)>
<android.nfc.NfcAdapter: android.nfc.INfcAdapter getService()>
<android.accessibilityservice.AccessibilityService: boolean onGesture(int)>
<android.widget.DatePicker: android.widget.CalendarView getCalendarView()>
<android.content.Intent: android.content.pm.ActivityInfo resolveActivityInfo(android.content.pm.PackageManager,int)>
<android.util.AttributeSet: int getStyleAttribute()>
<com.android.internal.util.JournaledFile: void rollback()>
<com.android.internal.app.WindowDecorActionBar: void removeTabAt(int)>
<android.security.KeyPairGeneratorSpec.Builder: android.security.KeyPairGeneratorSpec.Builder setKeySize(int)>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumLetters(android.content.ComponentName)>
<com.android.internal.http.multipart.Part: void sendContentTypeHeader(java.io.OutputStream)>
<android.telecom.DisconnectCause: void <init>(int)>
<android.content.CursorLoader: void onStartLoading()>
<android.media.AudioAttributes.Builder: android.media.AudioAttributes.Builder setInternalCapturePreset(int)>
<android.media.AudioService: int getLastAudibleMasterVolume()>
<android.telecom.ParcelableCall: int getHandlePresentation()>
<android.view.OrientationListener: void <init>(android.content.Context,int)>
<android.renderscript.Float3: void addAt(int,float)>
<android.preference.Preference: void setSummary(int)>
<android.media.session.PlaybackState: int getRccControlFlagsFromActions(long)>
<android.app.admin.DevicePolicyManager: boolean getScreenCaptureDisabled(android.content.ComponentName)>
<com.android.internal.os.BatteryStatsImpl.SamplingTimer: int getUpdateVersion()>
<android.net.NetworkStats: void combineAllValues(android.net.NetworkStats)>
<com.android.internal.os.BatteryStatsImpl.Uid.Pkg.Serv: void stopRunningLocked()>
<android.location.GpsSatellite: float getSnr()>
<android.widget.TimePicker.TimePickerDelegate: void onRestoreInstanceState(android.os.Parcelable)>
<android.app.Fragment: void onOptionsMenuClosed(android.view.Menu)>
<android.net.NetworkStats: android.net.NetworkStats.Entry getTotal(android.net.NetworkStats.Entry)>
<com.android.internal.view.menu.MenuItemImpl: boolean isExclusiveCheckable()>
<android.os.storage.StorageManager: android.os.storage.StorageVolume getPrimaryVolume(android.os.storage.StorageVolume[])>
<android.renderscript.Double2: android.renderscript.Double2 sub(android.renderscript.Double2,double)>
<android.renderscript.Float3: android.renderscript.Float3 mul(android.renderscript.Float3,float)>
<android.net.wifi.p2p.WifiP2pManager: android.os.Messenger getP2pStateMachineMessenger()>
<android.graphics.pdf.PdfRenderer.Page: void close()>
<android.app.Fragment: void setRetainInstance(boolean)>
<android.util.Rational: android.util.Rational parseRational(java.lang.String)>
<android.net.wifi.IWifiManager: android.net.wifi.WifiActivityEnergyInfo reportActivityInfo()>
<com.android.internal.app.ResolverActivity: void onCreate(android.os.Bundle,android.content.Intent,java.lang.CharSequence,int,android.content.Intent[],java.util.List,boolean)>
<android.bluetooth.le.AdvertiseData: int describeContents()>
<android.media.MediaRouter.RouteGroup: void setIconResource(int)>
<android.graphics.drawable.shapes.Shape: void onResize(float,float)>
<android.widget.AutoCompleteTextView: void setAdapter(android.widget.ListAdapter)>
<android.filterpacks.videosrc.SurfaceTextureSource: void open(android.filterfw.core.FilterContext)>
<android.app.ActivityThread: android.app.Application currentApplication()>
<android.content.ClipboardManager: void addPrimaryClipChangedListener(android.content.ClipboardManager.OnPrimaryClipChangedListener)>
<android.telecom.ParcelableCall: int getVideoState()>
<android.speech.srec.WaveHeader: android.speech.srec.WaveHeader setNumBytes(int)>
<com.android.internal.util.StateMachine: void logAndAddLogRec(java.lang.String)>
<android.nfc.INfcTag: int getMaxTransceiveLength(int)>
<android.net.Uri: java.lang.String getEncodedPath()>
<com.android.internal.util.FileRotator: void maybeRotate(long)>
<android.view.Display: long getPresentationDeadlineNanos()>
<android.app.Instrumentation.ActivityResult: int getResultCode()>
<android.view.ViewStub: void setInflatedId(int)>
<android.widget.TextView: void removeTextChangedListener(android.text.TextWatcher)>
<android.app.Activity: android.content.ComponentName getComponentName()>
<android.content.pm.ConfigurationInfo: java.lang.String toString()>
<android.webkit.WebSettings: int getTextZoom()>
<com.android.internal.app.IBatteryStats: void noteWifiOff()>
<android.graphics.Bitmap: int getGenerationId()>
<com.android.internal.util.XmlUtils: void beginDocument(org.xmlpull.v1.XmlPullParser,java.lang.String)>
<android.graphics.Matrix: void mapVectors(float[],float[])>
<android.content.Context: android.content.Context createPackageContext(java.lang.String,int)>
<android.os.WorkSource: void set(android.os.WorkSource)>
<android.renderscript.ProgramFragment.Builder: android.renderscript.ProgramFragment create()>
<android.renderscript.Short3: void mul(android.renderscript.Short3)>
<android.view.View: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>
<android.content.pm.PathPermission: void <init>(java.lang.String,int,java.lang.String,java.lang.String)>
<android.net.LinkAddress: void <init>(java.net.InetAddress,int)>
<android.filterfw.core.Filter: int getSleepDelay()>
<android.widget.AbsListView: void onRestoreInstanceState(android.os.Parcelable)>
<android.view.Window: void setContentView(android.view.View,android.view.ViewGroup.LayoutParams)>
<android.app.ActivityManagerProxy: android.app.ActivityManager.StackInfo getStackInfo(int)>
<android.view.ViewGroup: void resetResolvedDrawables()>
<android.renderscript.Element: java.lang.String getSubElementName(int)>
<android.webkit.WebResourceResponse: java.lang.String getEncoding()>
<android.preference.ListPreference: void onDialogClosed(boolean)>
<android.view.inputmethod.BaseInputConnection: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)>
<android.view.ViewConfiguration: int getScaledMaximumDrawingCacheSize()>
<android.media.TextTrackCue: java.lang.StringBuilder appendStringsToBuilder(java.lang.StringBuilder)>
<android.hardware.camera2.impl.CameraDeviceImpl: java.lang.String getId()>
<android.telecom.RemoteConference: void unregisterCallback(android.telecom.RemoteConference.Callback)>
<android.media.MediaFocusControl: void discardAudioFocusOwner()>
<android.app.admin.DevicePolicyManager: boolean setPermittedInputMethods(android.content.ComponentName,java.util.List)>
<com.android.internal.app.WindowDecorActionBar: android.app.ActionBar.Tab newTab()>
<android.telephony.TelephonyManager: java.lang.String getDeviceId(int)>
<android.os.BatteryStats.HistoryTag: void setTo(java.lang.String,int)>
<android.os.PersistableBundle: void writeUnknownObject(java.lang.Object,java.lang.String,org.xmlpull.v1.XmlSerializer)>
<android.print.ILayoutResultCallback: void onLayoutFinished(android.print.PrintDocumentInfo,boolean,int)>
<android.opengl.GLES30: int glGetFragDataLocation(int,java.lang.String)>
<android.app.ActivityManager: int getMemoryClass()>
<com.google.android.gles_jni.EGLImpl: boolean eglSwapBuffers(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface)>
<com.android.internal.widget.ActionBarContainer: void onResolveDrawables(int)>
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(android.net.Network)>
<android.telephony.VoLteServiceState: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.os.BatteryStatsImpl: int describeContents()>
<com.android.internal.os.BatteryStatsImpl: void noteVideoOffLocked(int)>
<android.os.UserHandle: void <init>(int)>
<android.bluetooth.IBluetoothHeadsetClient: boolean explicitCallTransfer(android.bluetooth.BluetoothDevice)>
<android.graphics.drawable.RippleDrawable: android.graphics.drawable.Drawable mutate()>
<android.os.storage.IMountService: int changeEncryptionPassword(int,java.lang.String)>
<android.database.DataSetObservable: void notifyInvalidated()>
<com.android.internal.util.FileRotator: void deleteAll()>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory.Options)>
<com.android.internal.widget.multiwaveview.GlowPadView: void onMeasure(int,int)>
<android.view.ViewGroup: android.view.animation.LayoutAnimationController getLayoutAnimation()>
<android.text.Layout: android.text.Layout.Alignment getParagraphAlignment(int)>
<android.text.method.DigitsKeyListener: android.text.method.DigitsKeyListener getInstance(java.lang.String)>
<android.telephony.CellSignalStrengthLte: boolean equals(java.lang.Object)>
<android.database.MergeCursor: float getFloat(int)>
<com.android.internal.util.XmlUtils: long readLongAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String,long)>
<com.android.internal.os.HandlerCaller: void sendMessageDelayed(android.os.Message,long)>
<com.android.internal.view.BaseSurfaceHolder: void setFormat(int)>
<android.telephony.TelephonyManager: java.lang.String getImei(int)>
<android.view.ActionMode: boolean isUiFocusable()>
<android.app.Notification: void <init>(android.os.Parcel)>
<android.content.pm.UserInfo: boolean isManagedProfile()>
<android.view.WindowManagerPolicy: void showBootMessage(java.lang.CharSequence,boolean)>
<android.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()>
<android.app.IActivityManager: java.util.List getRecentTasks(int,int,int)>
<android.media.MediaCodec.MediaImage: int getFormat()>
<android.renderscript.Double3: void <init>(android.renderscript.Double3)>
<android.view.View: void setFocusableInTouchMode(boolean)>
<android.renderscript.Float2: void <init>(android.renderscript.Float2)>
<android.hardware.camera2.legacy.RequestHolder.Builder: android.hardware.camera2.legacy.RequestHolder build(long)>
<android.graphics.Matrix: boolean postSkew(float,float)>
<android.os.Looper: void prepare()>
<android.content.res.Resources.Theme: android.content.res.Resources getResources()>
<android.opengl.GLES30: void glSamplerParameteri(int,int,int)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setCancelable(boolean)>
<android.graphics.Shader: void setLocalMatrix(android.graphics.Matrix)>
<android.opengl.GLES10: void glTexCoordPointer(int,int,int,java.nio.Buffer)>
<android.nfc.NfcActivityManager: void onNdefPushComplete()>
<android.hardware.camera2.marshal.impl.MarshalQueryableRange: android.hardware.camera2.marshal.Marshaler createMarshaler(android.hardware.camera2.utils.TypeReference,int)>
<android.content.Intent: android.content.ComponentName resolveActivity(android.content.pm.PackageManager)>
<android.widget.CompoundButton: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.os.Messenger: void send(android.os.Message)>
<android.webkit.WebViewFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<android.widget.AutoCompleteTextView: void ensureImeVisible(boolean)>
<android.app.backup.IBackupManager: java.lang.String getCurrentTransport()>
<android.content.IContentService: void setIsSyncable(android.accounts.Account,java.lang.String,int)>
<android.graphics.Path: void addArc(float,float,float,float,float,float)>
<android.webkit.WebView.PrivateAccess: int super_getScrollBarStyle()>
<android.location.GpsClock: void resetBiasUncertaintyInNs()>
<android.os.Environment: java.io.File getEmulatedStorageSource(int)>
<android.view.InputEvent: int describeContents()>
<android.provider.Settings.System: float getFloat(android.content.ContentResolver,java.lang.String,float)>
<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<android.preference.VolumePreference: void onDialogClosed(boolean)>
<android.text.method.MetaKeyKeyListener: int getMetaState(long,int)>
<com.android.internal.os.BatteryStatsImpl: java.lang.String getHistoryTagPoolString(int)>
<android.widget.ListAdapter: boolean areAllItemsEnabled()>
<android.widget.DatePickerController: java.util.Calendar getSelectedDay()>
<android.printservice.PrintJob: boolean isStarted()>
<android.drm.DrmInfoRequest: java.util.Iterator keyIterator()>
<com.android.internal.view.menu.MenuBuilder: void removeMenuPresenter(com.android.internal.view.menu.MenuPresenter)>
<android.telephony.CellSignalStrengthCdma: void writeToParcel(android.os.Parcel,int)>
<android.filterpacks.imageproc.SharpenFilter: void initProgram(android.filterfw.core.FilterContext,int)>
<android.media.RemoteController: boolean setSynchronizationMode(int)>
<android.graphics.drawable.BitmapDrawable: boolean hasMipMap()>
<android.media.audiofx.Equalizer: void setParameterListener(android.media.audiofx.Equalizer.OnParameterChangeListener)>
<android.graphics.drawable.AnimatedStateListDrawable: boolean isStateful()>
<android.renderscript.RenderScriptGL: void bindProgramRaster(android.renderscript.ProgramRaster)>
<android.view.ViewTreeObserver.OnPreDrawListener: boolean onPreDraw()>
<android.widget.ArrayAdapter: java.lang.Object getItem(int)>
<android.os.CommonTimeConfig: java.lang.String getInterfaceBinding()>
<android.inputmethodservice.InputMethodService: boolean isShowInputRequested()>
<android.content.pm.PackageParser.Provider: void setPackageName(java.lang.String)>
<android.net.NetworkRequest.Builder: android.net.NetworkRequest.Builder removeTransportType(int)>
<android.filterfw.core.FrameFormat: boolean isBinaryDataType()>
<android.hardware.Camera: android.hardware.Camera openLegacy(int,int)>
<android.net.WifiLinkQualityInfo: void setTxBad(long)>
<android.webkit.WebView: boolean isPrivateBrowsingEnabled()>
<android.telephony.SignalStrength: int getEvdoDbm()>
<android.widget.Switch: void setShowText(boolean)>
<android.app.NativeActivity: void onInputQueueCreated(android.view.InputQueue)>
<android.media.session.ISessionManager: void addSessionsListener(android.media.session.IActiveSessionsListener,android.content.ComponentName,int)>
<android.media.IMediaHTTPConnection: void disconnect()>
<android.filterpacks.videoproc.BackDropperFilter: void close(android.filterfw.core.FilterContext)>
<android.util.StringBuilderPrinter: void <init>(java.lang.StringBuilder)>
<android.transition.Transition.TransitionListener: void onTransitionStart(android.transition.Transition)>
<android.nfc.cardemulation.ApduServiceInfo: java.lang.String getCategoryForAid(java.lang.String)>
<android.view.View: void setTouchDelegate(android.view.TouchDelegate)>
<android.webkit.WebHistoryItem: java.lang.String getTitle()>
<android.content.pm.PackageInstaller.SessionParams: void setAppPackageName(java.lang.String)>
<android.hardware.input.InputManagerInternal: void setDisplayViewports(android.hardware.display.DisplayViewport,android.hardware.display.DisplayViewport)>
<android.text.StaticLayout: int getLineCount()>
<android.media.tv.ITvInputSessionCallback: void onVideoAvailable()>
<android.content.res.TypedArray: boolean hasValue(int)>
<com.android.internal.telephony.IPhoneStateListener: void onCellInfoChanged(java.util.List)>
<com.android.ims.ImsCallProfile: void updateCallExtras(com.android.ims.ImsCallProfile)>
<android.app.PendingIntent.CanceledException: void <init>(java.lang.Exception)>
<com.google.android.gles_jni.EGLContextImpl: void <init>(long)>
<android.net.IConnectivityManager: android.net.Network getNetworkForType(int)>
<android.os.Message: void recycle()>
<android.hardware.camera2.legacy.ParameterUtils: android.util.Size getLargestSupportedJpegSizeByArea(android.hardware.Camera.Parameters)>
<android.gesture.GestureLibraries: android.gesture.GestureLibrary fromPrivateFile(android.content.Context,java.lang.String)>
<com.android.internal.app.AlertController: int getIconAttributeResId(int)>
<android.bluetooth.BluetoothPbap: int getState()>
<android.location.LocationProvider: boolean requiresCell()>
<com.android.internal.telecom.IVideoProvider: void requestCameraCapabilities()>
<android.inputmethodservice.AbstractInputMethodService: android.os.IBinder onBind(android.content.Intent)>
<android.telephony.PhoneNumberUtils: java.lang.String formatNumber(java.lang.String,java.lang.String)>
<com.android.internal.widget.LockPatternUtils: java.lang.String getOwnerInfo(int)>
<android.media.MediaCodecInfo.VideoCapabilities: android.util.Range getBlocksPerSecondRange()>
<android.media.tv.TvContentRatingSystemInfo: void writeToParcel(android.os.Parcel,int)>
<android.mtp.MtpStorage: int getStorageId(int)>
<com.google.android.gles_jni.GLImpl: void glTexGeniv(int,int,int[],int)>
<com.google.android.util.AbstractMessageParser.MusicTrack: java.lang.String getTrack()>
<com.android.internal.widget.ActionBarView: void setDisplayOptions(int)>
<android.renderscript.Long3: void setAt(int,long)>
<android.bluetooth.BluetoothMap: int getPriority(android.bluetooth.BluetoothDevice)>
<android.opengl.GLES30: void glCompressedTexSubImage3D(int,int,int,int,int,int,int,int,int,int,int)>
<android.app.Fragment: boolean getAllowEnterTransitionOverlap()>
<android.database.sqlite.SQLiteDatabase: boolean deleteDatabase(java.io.File)>
<android.text.method.MultiTapKeyListener: android.text.method.MultiTapKeyListener getInstance(boolean,android.text.method.TextKeyListener.Capitalize)>
<android.os.storage.StorageVolume: void setUuid(java.lang.String)>
<android.location.Address: java.util.Locale getLocale()>
<android.animation.ArgbEvaluator: android.animation.ArgbEvaluator getInstance()>
<android.net.MobileDataStateTracker: void setDependencyMet(boolean)>
<android.text.style.TtsSpan.MeasureBuilder: android.text.style.TtsSpan.MeasureBuilder setDenominator(java.lang.String)>
<android.graphics.drawable.ClipDrawable: void setTintMode(android.graphics.PorterDuff.Mode)>
<android.renderscript.Double4: void <init>(double,double,double,double)>
<android.location.CountryListener: void onCountryDetected(android.location.Country)>
<android.app.IActivityManager: void stopLockTaskMode()>
<android.hardware.camera2.legacy.LegacyFocusStateMapper: void <init>(android.hardware.Camera)>
<android.media.effect.effects.CrossProcessEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>
<android.graphics.Region: void <init>(int,int,int,int)>
<android.app.Fragment: void onLowMemory()>
<android.media.tv.ITvInputSessionWrapper: void setSurface(android.view.Surface)>
<android.app.admin.IDevicePolicyManager: int getPasswordMinimumNonLetter(android.content.ComponentName,int)>
<android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>
<android.bluetooth.IBluetoothGatt: void endReliableWrite(int,java.lang.String,boolean)>
<android.os.Process: void readProcLines(java.lang.String,java.lang.String[],long[])>
<android.widget.ListView: android.widget.ListAdapter getAdapter()>
<android.os.RemoteCallbackList: void kill()>
<android.text.HtmlToSpannedConverter: void <init>(java.lang.String,android.text.Html.ImageGetter,android.text.Html.TagHandler,org.ccil.cowan.tagsoup.Parser)>
<android.widget.AutoCompleteTextView: boolean onKeyPreIme(int,android.view.KeyEvent)>
<android.filterfw.core.VertexFrame: int[] getInts()>
<android.animation.AnimatorSet: void setInterpolator(android.animation.TimeInterpolator)>
<android.telephony.CellIdentityWcdma: int getPsc()>
<android.hardware.hdmi.HdmiRecordSources.DigitalServiceIdentification: int toByteArray(byte[],int)>
<android.view.Menu: android.view.MenuItem add(int,int,int,int)>
<android.renderscript.Int4: void setValues(int,int,int,int)>
<android.content.IntentFilter.MalformedMimeTypeException: void <init>(java.lang.String)>
<android.hardware.camera2.legacy.CaptureCollector: boolean waitForRequestCompleted(android.hardware.camera2.legacy.RequestHolder,long,java.util.concurrent.TimeUnit,android.util.MutableLong)>
<android.app.IActivityManager: void publishContentProviders(android.app.IApplicationThread,java.util.List)>
<android.widget.AdapterView: void removeView(android.view.View)>
<android.media.TtmlRenderingWidget: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.internal.widget.ActionBarOverlayLayout: void onConfigurationChanged(android.content.res.Configuration)>
<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>
<com.android.internal.widget.PointerLocationView: void onInputDeviceChanged(int)>
<android.os.Environment: boolean isExternalStorageEmulated()>
<com.android.internal.telecom.ITelecomService: java.util.List getPhoneAccountsForPackage(java.lang.String)>
<android.app.Activity: boolean isTaskRoot()>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setIcon(int)>
<android.app.Fragment: void setHasOptionsMenu(boolean)>
<android.gesture.GestureOverlayView: void setEventsInterceptionEnabled(boolean)>
<android.view.Menu: android.view.MenuItem add(int,int,int,java.lang.CharSequence)>
<android.renderscript.ScriptIntrinsicBlend: void forEachSrcOver(android.renderscript.Allocation,android.renderscript.Allocation,android.renderscript.Script.LaunchOptions)>
<android.content.pm.ApplicationInfo: int describeContents()>
<android.hardware.camera2.marshal.Marshaler: int getNativeType()>
<android.opengl.GLES20: void glUniform1f(int,float)>
<android.widget.Toast: void show()>
<android.nfc.NdefRecord: boolean equals(java.lang.Object)>
<android.os.NullVibrator: boolean hasVibrator()>
<android.hardware.camera2.params.StreamConfiguration: boolean isOutput()>
<android.net.NetworkCapabilities: int hashCode()>
<android.view.DisplayAdjustments: void setCompatibilityInfo(android.content.res.CompatibilityInfo)>
<android.net.nsd.NsdManager.DiscoveryListener: void onServiceLost(android.net.nsd.NsdServiceInfo)>
<android.location.LocationProvider: boolean hasMonetaryCost()>
<android.app.ActivityManagerProxy: void stopLockTaskModeOnCurrent()>
<android.widget.CalendarView.CalendarViewDelegate: int getWeekNumberColor()>
<android.content.ContentProviderOperation: android.content.ContentProviderOperation.Builder newInsert(android.net.Uri)>
<android.net.http.SslError: void <init>(int,android.net.http.SslCertificate,java.lang.String)>
<android.os.Broadcaster: void request(int,android.os.Handler,int)>
<android.text.AndroidCharacter: void getDirectionalities(char[],byte[],int)>
<android.preference.PreferenceActivity: boolean hasNextButton()>
<android.widget.ArrayAdapter: void remove(java.lang.Object)>
<android.media.tv.TvContentRating: boolean contains(android.media.tv.TvContentRating)>
<android.view.View: void setVerticalScrollBarEnabled(boolean)>
<android.os.BatteryStats: int getPhoneOnCount(int)>
<android.print.PrintAttributes: java.lang.String toString()>
<android.net.http.AndroidHttpClientConnection: java.net.InetAddress getLocalAddress()>
<android.telecom.RemoteConnection.VideoProvider.Listener: void onReceiveSessionModifyRequest(android.telecom.RemoteConnection.VideoProvider,android.telecom.VideoProfile)>
<android.app.IInstrumentationWatcher: void instrumentationStatus(android.content.ComponentName,int,android.os.Bundle)>
<android.view.RenderNode: boolean setRevealClip(boolean,float,float,float)>
<android.media.AudioService.VolumeStreamState: void readSettings()>
<android.content.pm.UserInfo: java.lang.String toString()>
<android.renderscript.FieldPacker: android.renderscript.Long2 subLong2()>
<android.location.Address: void setAdminArea(java.lang.String)>
<android.app.job.JobService: android.os.IBinder onBind(android.content.Intent)>
<android.content.IContentService: boolean getMasterSyncAutomatically()>
<com.android.internal.http.multipart.PartBase: java.lang.String getContentType()>
<com.android.internal.http.multipart.FilePart: long lengthOfData()>
<android.view.TextureView.SurfaceTextureListener: boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture)>
<android.location.LocationManager: void removeTestProvider(java.lang.String)>
<android.view.KeyCharacterMap: int getDeadChar(int,int)>
<com.android.internal.widget.LockPatternUtils: void clearEncryptionPassword()>
<android.view.ViewDebug: void outputDisplayList(android.view.View,android.view.View)>
<android.opengl.GLES20: void glVertexAttribPointer(int,int,int,boolean,int,java.nio.Buffer)>
<android.service.voice.VoiceInteractionSession: void onTaskFinished(android.content.Intent,int)>
<android.net.wifi.WifiManager: boolean isTdlsSupported()>
<android.widget.MediaController: void hide()>
<android.telephony.CellSignalStrengthWcdma: int getLevel()>
<android.widget.AbsSeekBar: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<android.service.voice.AlwaysOnHotwordDetector: int getSupportedRecognitionModes()>
<android.app.Notification.Builder: android.app.Notification.Builder setCategory(java.lang.String)>
<com.android.internal.widget.PasswordEntryKeyboard: android.inputmethodservice.Keyboard.Key createKeyFromXml(android.content.res.Resources,android.inputmethodservice.Keyboard.Row,int,int,android.content.res.XmlResourceParser)>
<android.bluetooth.BluetoothGattCallbackWrapper: void onBatchScanResults(java.util.List)>
<com.android.internal.app.IBatteryStats: void noteStopGps(int)>
<android.net.Network: javax.net.SocketFactory getSocketFactory()>
<android.text.method.ScrollingMovementMethod: boolean pageUp(android.widget.TextView,android.text.Spannable)>
<android.view.ViewGroup: void dispatchDraw(android.graphics.Canvas)>
<android.media.tv.ITvInputManager: void sendAppPrivateCommand(android.os.IBinder,java.lang.String,android.os.Bundle,int)>
<com.android.internal.widget.RotarySelector: void setOnDialTriggerListener(com.android.internal.widget.RotarySelector.OnDialTriggerListener)>
<android.os.MemoryFile: java.io.FileDescriptor getFileDescriptor()>
<android.text.style.TabStopSpan: int getTabStop()>
<android.database.sqlite.SQLiteDatabase: void reopenReadWrite()>
<android.bluetooth.BluetoothHealth: boolean disconnectChannel(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration,int)>
<android.net.wifi.WifiInfo: java.lang.String getSSID()>
<android.database.AbstractCursor: boolean isBeforeFirst()>
<com.google.android.gles_jni.GLImpl: void glDrawTexfvOES(java.nio.FloatBuffer)>
<android.view.Window: android.view.View getDecorView()>
<android.os.ParcelFileDescriptor: java.lang.String toString()>
<android.widget.PopupWindow: void <init>(android.content.Context)>
<android.util.MathUtils: float mag(float,float)>
<android.view.View: void setVisibility(int)>
<android.media.AudioManager: int listAudioPorts(java.util.ArrayList)>
<android.hardware.camera2.impl.CameraDeviceImpl.FrameNumberTracker: void updateTracker(long,boolean)>
<android.renderscript.ScriptIntrinsicHistogram: android.renderscript.Script.FieldID getFieldID_Input()>
<android.media.AudioGainConfig: int rampDurationMs()>
<android.opengl.GLES31Ext: void glDebugMessageCallbackKHR(android.opengl.GLES31Ext.DebugProcKHR)>
<android.content.SyncRequest.Builder: android.content.SyncRequest.Builder syncPeriodic(long,long)>
<android.telecom.InCallService.VideoCall: void setCamera(java.lang.String)>
<android.os.StrictMode.ThreadPolicy.Builder: android.os.StrictMode.ThreadPolicy.Builder permitCustomSlowCalls()>
<android.net.LinkQualityInfo: int getTheoreticalLatency()>
<android.media.TtmlRenderingWidget: void setSize(int,int)>
<com.android.internal.content.NativeLibraryHelper: int copyNativeBinariesWithOverride(com.android.internal.content.NativeLibraryHelper.Handle,java.io.File,java.lang.String)>
<com.android.internal.util.ArrayUtils: java.lang.Object[] newUnpaddedObjectArray(int)>
<android.view.inputmethod.BaseInputConnection: boolean endBatchEdit()>
<android.telephony.TelephonyManager: void dial(java.lang.String)>
<android.webkit.WebView: void disablePlatformNotifications()>
<android.nfc.tech.TagTechnology: android.nfc.Tag getTag()>
<android.telecom.Connection: void setVideoState(int)>
<com.android.internal.util.Preconditions: long checkArgumentNonnegative(long,java.lang.String)>
<android.transition.Transition: android.util.ArrayMap getNameOverrides()>
<android.hardware.Camera.Parameters: int getZoom()>
<android.util.MathUtils: float exp(float)>
<android.bluetooth.BluetoothDevice: boolean setAlias(java.lang.String)>
<android.service.voice.VoiceInteractionSession: void <init>(android.content.Context,android.os.Handler)>
<android.media.tv.TvInputHardwareInfo: void writeToParcel(android.os.Parcel,int)>
<android.database.CursorWrapper: int getColumnIndex(java.lang.String)>
<android.media.browse.MediaBrowser.MediaItem: boolean isPlayable()>
<com.android.internal.widget.AutoScrollHelper: com.android.internal.widget.AutoScrollHelper setMaximumEdges(float,float)>
<android.telephony.ServiceState: void setOperatorAlphaLong(java.lang.String)>
<android.drm.DrmInfoRequest: java.lang.Object get(java.lang.String)>
<android.widget.CheckedTextView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.telephony.CellInfo: void <init>(android.os.Parcel)>
<android.media.tv.TvView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.os.Bundle: void putFloat(java.lang.String,float)>
<android.view.ViewParent: void createContextMenu(android.view.ContextMenu)>
<android.location.GpsMeasurementsEvent: void <init>(android.location.GpsClock,android.location.GpsMeasurement[])>
<android.content.res.AssetManager: android.content.res.XmlResourceParser openXmlResourceParser(int,java.lang.String)>
<android.widget.ViewFlipper: void onWindowVisibilityChanged(int)>
<android.telephony.TelephonyManager: boolean getDataEnabled()>
<android.graphics.ColorMatrix: void set(float[])>
<android.app.admin.IDevicePolicyManager: android.content.ComponentName setGlobalProxy(android.content.ComponentName,java.lang.String,java.lang.String,int)>
<android.view.View: void dispatchStartTemporaryDetach()>
<android.content.CursorLoader: java.lang.String[] getSelectionArgs()>
<com.android.internal.telephony.ITelephonyRegistry: void notifyVoLteServiceStateChanged(android.telephony.VoLteServiceState)>
<android.net.RouteInfo: boolean hasGateway()>
<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>
<android.database.sqlite.SQLiteClosable: void releaseReferenceFromContainer()>
<android.app.MediaRouteButton: void setRouteTypes(int)>
<android.net.http.DelegatingSSLSession: int getPacketBufferSize()>
<android.view.inputmethod.CursorAnchorInfo: int getCharacterBoundsFlags(int)>
<android.view.ViewRootImpl: void onHardwarePreDraw(android.view.HardwareCanvas)>
<android.hardware.location.GeofenceHardwareRequest: void setUnknownTimer(int)>
<android.app.admin.DeviceAdminInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>
<android.widget.TableRow.LayoutParams: void <init>(int,int,float)>
<android.bluetooth.BluetoothDevice: boolean removeBond()>
<android.net.http.SslCertificate.DName: java.lang.String getCName()>
<android.media.browse.MediaBrowser: android.os.Bundle getExtras()>
<android.drm.DrmEvent: int getType()>
<android.net.TrafficStats: long getUidTcpRxBytes(int)>
<android.view.IWindow: void dispatchWallpaperCommand(java.lang.String,int,int,int,android.os.Bundle,boolean)>
<android.transition.Transition: java.util.List getTargetNames()>
<android.renderscript.FieldPacker: void addI16(android.renderscript.Short4)>
<android.print.PrintJobInfo: java.lang.String getAdvancedStringOption(java.lang.String)>
<android.opengl.GLES10: void glPopMatrix()>
<android.widget.ActionMenuPresenter: void bindItemView(com.android.internal.view.menu.MenuItemImpl,com.android.internal.view.menu.MenuView.ItemView)>
<android.os.UserManager: boolean isUserRunning(android.os.UserHandle)>
<android.content.ContextWrapper: android.content.pm.PackageManager getPackageManager()>
<android.media.JetPlayer: boolean setMuteArray(boolean[],boolean)>
<android.util.PrefixPrinter: android.util.Printer create(android.util.Printer,java.lang.String)>
<android.opengl.GLES30: void glTexSubImage3D(int,int,int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.view.ViewRootImpl: android.view.View getAccessibilityFocusedHost()>
<android.webkit.WebResourceRequest: java.lang.String getMethod()>
<android.view.ViewGroup: void attachViewToParent(android.view.View,int,android.view.ViewGroup.LayoutParams)>
<android.content.res.ColorStateList: android.content.res.ColorStateList addFirstIfMissing(android.content.res.ColorStateList,int,int)>
<android.accounts.NetworkErrorException: void <init>(java.lang.String)>
<android.hardware.display.DisplayManagerGlobal: android.view.Display getCompatibleDisplay(int,android.view.DisplayAdjustments)>
<android.telecom.Call.Details: int getCallerDisplayNamePresentation()>
<com.android.internal.widget.ActionBarView: boolean hasEmbeddedTabs()>
<android.preference.PreferenceGroupAdapter: void onPreferenceHierarchyChange(android.preference.Preference)>
<android.widget.TextView: java.util.Locale getSpellCheckerLocale()>
<android.text.style.TtsSpan.CardinalBuilder: android.text.style.TtsSpan.CardinalBuilder setNumber(java.lang.String)>
<android.hardware.soundtrigger.KeyphraseMetadata: java.lang.String toString()>
<android.app.ActivityManager.RunningServiceInfo: void readFromParcel(android.os.Parcel)>
<android.net.wifi.WifiInfo: java.lang.String getBSSID()>
<android.database.sqlite.SQLiteConnection: void prepare(java.lang.String,android.database.sqlite.SQLiteStatementInfo)>
<android.os.BatteryStats.Uid: android.os.BatteryStats.Timer getVibratorOnTimer()>
<android.net.nsd.NsdManager: void <init>(android.content.Context,android.net.nsd.INsdManager)>
<android.net.wifi.IWifiManager: boolean setWifiEnabled(boolean)>
<android.widget.QuickContactBadge: void setImageToDefault()>
<android.net.NetworkCapabilities: java.lang.String toString()>
<android.app.ApplicationThreadProxy: void scheduleTrimMemory(int)>
<android.media.MediaCodecList: android.media.MediaCodecInfo getCodecInfoAt(int)>
<android.content.ContextWrapper: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>
<android.util.AndroidException: void <init>(java.lang.String)>
<android.net.wifi.RttManager: void <init>(android.content.Context,android.net.wifi.IRttManager)>
<android.view.View: void onFinishTemporaryDetach()>
<android.net.MobileLinkQualityInfo: int getCdmaEcio()>
<android.app.admin.IDevicePolicyManager: long getPasswordExpiration(android.content.ComponentName,int)>
<com.google.android.gles_jni.GLImpl: void glStencilOp(int,int,int)>
<android.widget.AbsSpinner: android.view.View getSelectedView()>
<android.accounts.IAccountManagerResponse: void onError(int,java.lang.String)>
<android.app.ApplicationErrorReport: void dump(android.util.Printer,java.lang.String)>
<android.app.FragmentBreadCrumbs: void onLayout(boolean,int,int,int,int)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setMultiChoiceItems(int,boolean[],android.content.DialogInterface.OnMultiChoiceClickListener)>
<android.util.SparseIntArray: void removeAt(int)>
<android.media.AudioPort: int[] formats()>
<android.graphics.drawable.ScaleDrawable: void setTintMode(android.graphics.PorterDuff.Mode)>
<android.net.WebAddress: java.lang.String getHost()>
<android.content.pm.PackageManager: android.content.pm.ProviderInfo resolveContentProviderAsUser(java.lang.String,int,int)>
<android.telecom.RemoteConference: void swap()>
<android.app.ActivityThread: void handleCancelVisibleBehind(android.os.IBinder)>
<android.hardware.Camera.Parameters: void set(java.lang.String,java.lang.String)>
<android.app.backup.FileBackupHelper: void restoreEntity(android.app.backup.BackupDataInputStream)>
<android.app.Service: void onRebind(android.content.Intent)>
<android.content.DefaultDataHandler: void endDocument()>
<android.bluetooth.le.ScanRecord: byte[] getBytes()>
<android.net.NetworkStats.NonMonotonicObserver: void foundNonMonotonic(android.net.NetworkStats,int,android.net.NetworkStats,int,java.lang.Object)>
<android.filterpacks.imageproc.ImageSlicer: void <init>(java.lang.String)>
<com.android.internal.app.IBatteryStats: void noteStartAudio(int)>
<android.view.animation.Transformation: void postCompose(android.view.animation.Transformation)>
<android.text.style.QuoteSpan: void drawLeadingMargin(android.graphics.Canvas,android.graphics.Paint,int,int,int,int,int,java.lang.CharSequence,int,int,boolean,android.text.Layout)>
<android.content.res.AssetFileDescriptor: void close()>
<android.view.accessibility.AccessibilityNodeInfo: void setMultiLine(boolean)>
<android.telephony.SubscriptionManager: boolean isValidSubId(long)>
<android.widget.PopupWindow: void update(android.view.View,int,int,int,int)>
<com.android.internal.util.ParcelableString: void writeToParcel(android.os.Parcel,int)>
<android.widget.DatePickerController: java.util.Calendar getMinDate()>
<android.net.http.DelegatingSSLSession: java.lang.String getCipherSuite()>
<android.hardware.hdmi.IHdmiControlService: void clearTimerRecording(int,int,byte[])>
<android.location.GpsMeasurement: void setReceivedGpsTowInNs(long)>
<android.app.ActivityThread: android.app.Activity startActivityNow(android.app.Activity,java.lang.String,android.content.Intent,android.content.pm.ActivityInfo,android.os.IBinder,android.os.Bundle,android.app.Activity.NonConfigurationInstances)>
<android.view.SurfaceControl: android.os.IBinder getBuiltInDisplay(int)>
<android.widget.ActionMenuView: void onMeasure(int,int)>
<android.filterpacks.videosink.MediaRecorderStopException: void <init>(java.lang.String)>
<android.view.animation.TranslateAnimation: void <init>(float,float,float,float)>
<android.widget.ImageView: void drawableStateChanged()>
<android.media.MediaCodec.CryptoException: int getErrorCode()>
<android.app.ActivityManagerProxy: boolean testIsSystemReady()>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofMultiFloat(java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,android.animation.Keyframe[])>
<android.filterfw.core.AsyncRunner: void stop()>
<android.view.VelocityTracker.Estimator: float getXCoeff(int)>
<android.webkit.JsDialogHelper: void showDialog(android.content.Context)>
<com.android.internal.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)>
<android.opengl.GLES10: void glPolygonOffsetx(int,int)>
<android.renderscript.Sampler.Builder: void setAnisotropy(float)>
<android.provider.Settings.Bookmarks: android.content.Intent getIntentForShortcut(android.content.ContentResolver,char)>
<android.database.sqlite.SQLiteDatabase: java.util.List getAttachedDbs()>
<android.text.method.ScrollingMovementMethod: boolean up(android.widget.TextView,android.text.Spannable)>
<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>
<android.database.sqlite.SQLiteClosable: void releaseReference()>
<android.app.usage.UsageStats: int describeContents()>
<android.os.CancellationSignal: void throwIfCanceled()>
<com.android.internal.widget.LockPatternUtils: void setPermanentlyLocked(boolean)>
<android.hardware.camera2.impl.CallbackProxies.DeviceStateCallbackProxy: void onClosed(android.hardware.camera2.CameraDevice)>
<android.filterpacks.ui.SurfaceTargetFilter: void <init>(java.lang.String)>
<android.os.CountDownTimer: void onTick(long)>
<android.filterfw.core.FrameFormat: boolean hasMetaKey(java.lang.String,java.lang.Class)>
<android.preference.PreferenceGroup: void setOrderingAsAdded(boolean)>
<android.telecom.TelecomManager: void setSimCallManager(android.telecom.PhoneAccountHandle)>
<android.net.http.AndroidHttpClient: void enableCurlLogging(java.lang.String,int)>
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setActionProvider(android.view.ActionProvider)>
<android.content.ContextWrapper: void sendBroadcast(android.content.Intent,java.lang.String,int)>
<android.preference.TwoStatePreference: boolean isChecked()>
<android.widget.Switch: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.opengl.GLES31: void glProgramUniform3iv(int,int,int,java.nio.IntBuffer)>
<android.hardware.camera2.CameraCaptureSession.CaptureCallback: void onCaptureStarted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,long)>
<android.opengl.GLU: void gluLookAt(javax.microedition.khronos.opengles.GL10,float,float,float,float,float,float,float,float,float)>
<android.widget.ScrollView: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.widget.GridLayout: android.widget.GridLayout.Spec spec(int,int,float)>
<android.text.Editable.Factory: android.text.Editable.Factory getInstance()>
<com.android.internal.view.menu.MenuItemImpl: boolean invoke()>
<android.os.UserHandle: int getAppId(int)>
<com.android.internal.os.BatteryStatsImpl: int getLowDischargeAmountSinceCharge()>
<android.os.WorkSource: boolean add(android.os.WorkSource)>
<android.nfc.tech.MifareClassic: int getSectorCount()>
<android.telephony.PhoneNumberUtils: byte[] networkPortionToCalledPartyBCDWithLength(java.lang.String)>
<android.net.wifi.p2p.WifiP2pManager: void setDnsSdResponseListeners(android.net.wifi.p2p.WifiP2pManager.Channel,android.net.wifi.p2p.WifiP2pManager.DnsSdServiceResponseListener,android.net.wifi.p2p.WifiP2pManager.DnsSdTxtRecordListener)>
<com.android.internal.util.StateMachine: void sendMessageDelayed(int,java.lang.Object,long)>
<android.net.http.AndroidHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)>
<android.view.View: android.graphics.Rect getClipBounds()>
<android.hardware.display.IVirtualDisplayCallback: void onResumed()>
<android.widget.SimpleCursorTreeAdapter: android.widget.SimpleCursorTreeAdapter.ViewBinder getViewBinder()>
<android.filterpacks.imageproc.SepiaFilter: void initProgram(android.filterfw.core.FilterContext,int)>
<android.webkit.WebViewProvider.ViewDelegate: void setOverScrollMode(int)>
<android.util.Rational: int compareTo(android.util.Rational)>
<android.inputmethodservice.ExtractEditText: boolean isFocused()>
<android.content.pm.LabeledIntent: java.lang.String getSourcePackage()>
<android.bluetooth.IBluetoothHeadset: boolean isAudioOn()>
<android.widget.AdapterViewAnimator: void setAnimateFirstView(boolean)>
<android.media.MediaScanner: void scanDirectories(java.lang.String[],java.lang.String)>
<android.os.UEventObserver: void startObserving(java.lang.String)>
<android.service.voice.AlwaysOnHotwordDetector.Callback: void onDetected(android.service.voice.AlwaysOnHotwordDetector.EventPayload)>
<android.view.InputEventSender: void dispose()>
<android.media.MediaCodec: android.media.Image getInputImage(int)>
<android.os.IPowerManager: void setMaximumScreenOffTimeoutFromDeviceAdmin(int)>
<com.google.android.util.AbstractMessageParser: java.util.List getParts()>
<com.android.ims.internal.IImsCallSession: void inviteParticipants(java.lang.String[])>
<android.app.Dialog: void onStart()>
<android.app.ProgressDialog: void setMessage(java.lang.CharSequence)>
<android.database.sqlite.SQLiteDatabase: long replace(java.lang.String,java.lang.String,android.content.ContentValues)>
<android.content.res.TypedArray: int getDimensionPixelOffset(int,int)>
<android.view.Window: void setCallback(android.view.Window.Callback)>
<com.android.internal.widget.LockPatternUtilsCache: void setLockPattern(java.lang.String,int)>
<com.android.internal.os.BatteryStatsImpl.Uid.Sensor: com.android.internal.os.BatteryStatsImpl.Timer getSensorTime()>
<com.android.server.net.BaseNetworkObserver: void interfaceRemoved(java.lang.String)>
<android.view.inputmethod.InputMethod: void changeInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)>
<android.renderscript.Float3: void div(android.renderscript.Float3)>
<android.widget.ActionMenuView.ActionMenuChildView: boolean needsDividerBefore()>
<android.net.ProxyInfo: void writeToParcel(android.os.Parcel,int)>
<android.opengl.EGL14: boolean eglReleaseThread()>
<com.android.internal.widget.WaveView: int getSuggestedMinimumWidth()>
<com.android.internal.view.menu.ListMenuPresenter: android.os.Parcelable onSaveInstanceState()>
<android.graphics.drawable.AnimatedRotateDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>
<android.view.PointerIcon: boolean isLoaded()>
<com.android.internal.statusbar.StatusBarIconList: com.android.internal.statusbar.StatusBarIcon getIcon(int)>
<com.google.android.util.AbstractMessageParser.Acronym: java.util.List getInfo()>
<android.app.Fragment: void setEnterTransition(android.transition.Transition)>
<android.accessibilityservice.AccessibilityServiceInfo: int getCapabilities()>
<android.widget.AbsListView: int[] onCreateDrawableState(int)>
<android.webkit.WebSettings: void setGeolocationDatabasePath(java.lang.String)>
<android.media.tv.TvInputService.Session: void onUnblockContent(android.media.tv.TvContentRating)>
<android.renderscript.Short3: void copyTo(short[],int)>
<android.hardware.soundtrigger.SoundTrigger.RecognitionEvent: boolean equals(java.lang.Object)>
<android.widget.ScrollBarDrawable: void drawThumb(android.graphics.Canvas,android.graphics.Rect,int,int,boolean)>
<android.app.NativeActivity: void surfaceCreated(android.view.SurfaceHolder)>
<android.webkit.MimeTypeMap: boolean hasMimeType(java.lang.String)>
<android.view.GestureDetector.SimpleOnGestureListener: boolean onDown(android.view.MotionEvent)>
<android.os.ParcelUuid: java.util.UUID getUuid()>
<android.telephony.PhoneNumberUtils: java.lang.String extractNetworkPortionAlt(java.lang.String)>
<android.view.WindowManagerPolicy: void screenTurningOn(android.view.WindowManagerPolicy.ScreenOnListener)>
<android.view.View: android.graphics.Insets getOpticalInsets()>
<android.webkit.WebView.PrivateAccess: void setScrollYRaw(int)>
<android.app.IntentService: void onDestroy()>
<android.widget.CalendarView: void setDate(long)>
<android.speech.srec.MicrophoneInputStream: void finalize()>
<android.os.UserHandle: android.os.UserHandle getCallingUserHandle()>
<android.app.Notification.BigTextStyle: void restoreFromExtras(android.os.Bundle)>
<android.net.ConnectivityManager: java.lang.String[] getTetherableUsbRegexs()>
<android.app.IActivityManager: android.graphics.Point getAppTaskThumbnailSize()>
<com.google.android.gles_jni.GLImpl: void glGenTextures(int,java.nio.IntBuffer)>
<android.app.TaskStackBuilder: android.app.TaskStackBuilder addNextIntent(android.content.Intent)>
<android.security.IKeyChainAliasCallback: void alias(java.lang.String)>
<android.text.method.ReplacementTransformationMethod: java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View)>
<android.media.audiopolicy.AudioMix.Builder: void <init>(android.media.audiopolicy.AudioMixingRule)>
<android.accounts.AccountManager: java.lang.String peekAuthToken(android.accounts.Account,java.lang.String)>
<android.text.Editable: android.text.Editable replace(int,int,java.lang.CharSequence)>
<android.app.ProgressDialog: void setProgressStyle(int)>
<android.app.LoaderManager: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.location.GeocoderParams: void <init>(android.content.Context,java.util.Locale)>
<android.view.ContextThemeWrapper: android.content.res.Resources getResources()>
<android.widget.SlidingDrawer: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.security.IKeystoreService: java.lang.String[] saw(java.lang.String,int)>
<android.media.session.MediaSession.Callback: void onSeekTo(long)>
<android.media.tv.TvInputInfo: boolean isHidden(android.content.Context)>
<android.app.ActivityManagerProxy: void updatePersistentConfiguration(android.content.res.Configuration)>
<android.widget.TableLayout: boolean isShrinkAllColumns()>
<android.app.Dialog: void openOptionsMenu()>
<android.view.inputmethod.InputMethod: void startInput(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo)>
<android.webkit.DateSorter: void <init>(android.content.Context)>
<android.net.Uri.Builder: android.net.Uri.Builder fragment(java.lang.String)>
<android.content.Context: boolean startInstrumentation(android.content.ComponentName,java.lang.String,android.os.Bundle)>
<android.net.NetworkUtils: java.net.InetAddress unparcelInetAddress(android.os.Parcel)>
<android.filterfw.core.GraphRunner: boolean activateGlContext()>
<android.transition.Transition: android.transition.Transition addTarget(java.lang.String)>
<android.content.pm.VerificationParams: void setInstallerUid(int)>
<android.hardware.hdmi.HdmiTvClient: void setSystemAudioMute(boolean)>
<android.animation.Animator: android.animation.TimeInterpolator getInterpolator()>
<android.app.Notification: android.app.Notification clone()>
<android.util.NtpTrustedTime: long getCachedNtpTime()>
<android.text.format.DateUtils: java.lang.CharSequence getRelativeTimeSpanString(long,long,long)>
<android.content.Context: int checkCallingOrSelfUriPermission(android.net.Uri,int)>
<android.app.admin.DeviceAdminInfo: void <init>(android.content.Context,android.content.pm.ResolveInfo)>
<android.view.Window: void setFlags(int,int)>
<android.media.SoundPool.SoundPoolDelegate: void stop(int)>
<android.hardware.display.DisplayManagerGlobal: void releaseVirtualDisplay(android.hardware.display.IVirtualDisplayCallback)>
<com.android.internal.widget.multiwaveview.GlowPadView: void resumeAnimations()>
<android.telecom.ParcelableConnection: java.lang.String toString()>
<android.widget.TextView: void onScrollChanged(int,int,int,int)>
<android.renderscript.Byte2: android.renderscript.Byte2 div(android.renderscript.Byte2,byte)>
<android.os.FileBridge.FileBridgeOutputStream: void <init>(android.os.ParcelFileDescriptor)>
<android.widget.CursorTreeAdapter: void onGroupCollapsed(int)>
<android.net.MobileLinkQualityInfo: int getEvdoDbm()>
<android.telecom.VideoCallImpl: void requestCameraCapabilities()>
<com.android.internal.view.menu.IconMenuPresenter: boolean filterLeftoverView(android.view.ViewGroup,int)>
<android.location.Geocoder: java.util.List getFromLocationName(java.lang.String,int)>
<android.telecom.Log: void d(java.lang.Object,java.lang.String,java.lang.Object[])>
<android.graphics.drawable.NinePatchDrawable: int getAlpha()>
<android.app.admin.IDevicePolicyManager: void getRemoveWarning(android.content.ComponentName,android.os.RemoteCallback,int)>
<android.text.Selection: boolean moveToRightEdge(android.text.Spannable,android.text.Layout)>
<android.graphics.drawable.AnimatedRotateDrawable: int getAlpha()>
<android.view.SurfaceControl: void setDisplayProjection(android.os.IBinder,int,android.graphics.Rect,android.graphics.Rect)>
<android.graphics.pdf.PdfRenderer.Page: int getIndex()>
<android.view.RenderNode: boolean hasOverlappingRendering()>
<android.filterfw.core.VertexFrame: android.graphics.Bitmap getBitmap()>
<android.os.ParcelUuid: int describeContents()>
<android.text.format.Formatter: java.lang.String formatShortFileSize(android.content.Context,long)>
<android.text.style.ImageSpan: java.lang.String getSource()>
<android.speech.srec.Recognizer: int advance()>
<android.telephony.CellInfo: long getTimeStamp()>
<android.net.wifi.p2p.WifiP2pWfdInfo: int getControlPort()>
<android.media.MediaPlayer: void onSubtitleTrackSelected(android.media.SubtitleTrack)>
<android.transition.Slide: android.animation.Animator onDisappear(android.view.ViewGroup,android.view.View,android.transition.TransitionValues,android.transition.TransitionValues)>
<android.renderscript.ScriptIntrinsicBlend: void forEachMultiply(android.renderscript.Allocation,android.renderscript.Allocation)>
<android.speech.RecognitionService: void onDestroy()>
<android.content.ClipData.Item: void toShortString(java.lang.StringBuilder)>
<android.widget.AlphabetIndexer: void <init>(android.database.Cursor,int,java.lang.CharSequence)>
<android.service.voice.VoiceInteractionSession: boolean onKeyUp(int,android.view.KeyEvent)>
<android.view.ViewGroup: void findNamedViews(java.util.Map)>
<android.webkit.WebView: void setScrollBarStyle(int)>
<android.app.Notification: void setLatestEventInfo(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)>
<com.android.internal.widget.ResolverDrawerLayout: boolean onTouchEvent(android.view.MotionEvent)>
<android.content.Context: void enforceUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int,java.lang.String)>
<android.app.ActivityManager.AppTask: void moveToFront()>
<com.android.internal.widget.LockPatternUtils: java.lang.String patternToString(java.util.List)>
<android.media.SubtitleTrack: android.media.SubtitleTrack.RenderingWidget getRenderingWidget()>
<android.app.AlertDialog: void setButton(java.lang.CharSequence,android.content.DialogInterface.OnClickListener)>
<android.ddm.DdmHandleExit: void connected()>
<android.content.ContentProviderProxy: int delete(java.lang.String,android.net.Uri,java.lang.String,java.lang.String[])>
<android.opengl.GLES10: void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer)>
<android.app.Instrumentation.ActivityMonitor: int getHits()>
<android.app.ActivityManagerProxy: void activitySlept(android.os.IBinder)>
<android.view.View: boolean hasOpaqueScrollbars()>
<android.media.IAudioService: void adjustMasterVolume(int,int,java.lang.String)>
<android.widget.TextView: int getMinWidth()>
<android.telephony.TelephonyManager: int getNetworkType()>
<android.app.Notification.InboxStyle: android.app.Notification.InboxStyle addLine(java.lang.CharSequence)>
<android.accounts.AccountManager: android.accounts.Account[] getAccountsByTypeForPackage(java.lang.String,java.lang.String)>
<android.app.admin.IDevicePolicyManager: boolean hasGrantedPolicy(android.content.ComponentName,int,int)>
<android.content.pm.VerificationParams: int describeContents()>
<android.speech.tts.TtsEngines: void <init>(android.content.Context)>
<android.widget.PopupMenu.OnMenuItemClickListener: boolean onMenuItemClick(android.view.MenuItem)>
<android.text.GraphicsOperations: int getTextRunCursor(int,int,int,int,int,android.graphics.Paint)>
<android.view.OrientationEventListener: void disable()>
<android.view.View: boolean dispatchTrackballEvent(android.view.MotionEvent)>
<android.widget.ListPopupWindow: void setModal(boolean)>
<com.android.server.net.NetlinkTracker: void routeRemoved(android.net.RouteInfo)>
<android.print.PrinterInfo: android.print.PrinterId getId()>
<android.content.ContentResolver: boolean invalidPeriodicExtras(android.os.Bundle)>
<android.view.ViewConfiguration: int getFadingEdgeLength()>
<android.provider.ContactsContract.SyncState: android.content.ContentProviderOperation newSetOperation(android.accounts.Account,byte[])>
<android.content.ClipData: android.content.ClipData newUri(android.content.ContentResolver,java.lang.CharSequence,android.net.Uri)>
<com.android.internal.view.menu.ActionMenuItemView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.animation.ValueAnimator: boolean isRunning()>
<android.webkit.WebSettings: java.lang.String getDefaultUserAgent(android.content.Context)>
<android.print.PrintAttributes.Resolution: int getHorizontalDpi()>
<android.hardware.camera2.legacy.SurfaceTextureRenderer: void cleanupEGLContext()>
<android.content.UndoManager: int getHistorySize()>
<android.view.inputmethod.CorrectionInfo: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.view.menu.MenuPresenter: boolean flagActionItems()>
<android.hardware.soundtrigger.SoundTrigger.KeyphraseRecognitionExtra: boolean equals(java.lang.Object)>
<android.widget.AbsSeekBar: void setSplitTrack(boolean)>
<com.android.internal.app.ResolverActivity: void onCreate(android.os.Bundle)>
<android.media.tv.TvInputInfo: java.lang.String getParentId()>
<android.widget.TextView: android.text.TextUtils.TruncateAt getEllipsize()>
<android.app.Instrumentation: void sendTrackballEventSync(android.view.MotionEvent)>
<android.net.wifi.IWifiManager: boolean disableNetwork(int)>
<android.filterfw.core.InputPort: void transfer(android.filterfw.core.FilterContext)>
<android.app.Notification: java.lang.String toString()>
<com.android.internal.backup.IBackupTransport: int abortFullRestore()>
<android.text.SpannableStringBuilder: void clear()>
<android.nfc.tech.Ndef: boolean makeReadOnly()>
<android.widget.ViewAnimator: void removeView(android.view.View)>
<android.app.admin.DevicePolicyManager: void setUninstallBlocked(android.content.ComponentName,java.lang.String,boolean)>
<android.renderscript.Byte3: void setValues(byte,byte,byte)>
<android.webkit.WebResourceRequest: boolean hasGesture()>
<android.media.AudioSystem: boolean isSourceActive(int)>
<android.opengl.GLES31Ext: void glTexParameterIivEXT(int,int,java.nio.IntBuffer)>
<android.content.pm.ProviderInfo: void writeToParcel(android.os.Parcel,int)>
<android.app.Notification.Builder: android.app.Notification.Builder setContentInfo(java.lang.CharSequence)>
<android.app.Instrumentation: void stopAllocCounting()>
<com.android.internal.view.menu.MenuBuilder: boolean collapseItemActionView(com.android.internal.view.menu.MenuItemImpl)>
<android.view.ViewGroup: void requestTransparentRegion(android.view.View)>
<android.telecom.DisconnectCause: java.lang.CharSequence getLabel()>
<android.os.BatteryStats.Timer: void logState(android.util.Printer,java.lang.String)>
<android.nfc.tech.NfcB: byte[] getApplicationData()>
<android.net.SSLCertificateSocketFactory: javax.net.ssl.SSLSocketFactory getInsecure(int,android.net.SSLSessionCache)>
<android.os.FileUtils: boolean copyToFile(java.io.InputStream,java.io.File)>
<android.opengl.GLES10: void glCopyTexImage2D(int,int,int,int,int,int,int,int)>
<android.app.AlertDialog: void onCreate(android.os.Bundle)>
<android.nfc.cardemulation.CardEmulation: boolean setDefaultForNextTap(android.content.ComponentName)>
<android.opengl.GLES11: void glGetClipPlanex(int,int[],int)>
<android.util.AtomicFile: void failWrite(java.io.FileOutputStream)>
<android.view.DragEvent: void writeToParcel(android.os.Parcel,int)>
<android.widget.EditText: android.text.method.MovementMethod getDefaultMovementMethod()>
<android.app.IApplicationThread: void scheduleSleeping(android.os.IBinder,boolean)>
<android.app.ApplicationThreadProxy: void updatePackageCompatibilityInfo(java.lang.String,android.content.res.CompatibilityInfo)>
<android.widget.VideoView: int getAudioSessionId()>
<android.bluetooth.IBluetooth: boolean disable()>
<android.graphics.drawable.DrawableContainer: boolean onStateChange(int[])>
<android.view.View: boolean startDrag(android.content.ClipData,android.view.View.DragShadowBuilder,java.lang.Object,int)>
<android.view.ViewParent: boolean canResolveTextAlignment()>
<android.net.IConnectivityManager: int untether(java.lang.String)>
<android.content.SyncAdaptersCache: void <init>(android.content.Context)>
<android.net.NetworkRequest.Builder: android.net.NetworkRequest.Builder removeCapability(int)>
<android.hardware.Sensor: java.lang.String toString()>
<android.webkit.WebViewFactoryProvider: android.webkit.WebViewFactoryProvider.Statics getStatics()>
<android.view.MenuItem: android.view.MenuItem setEnabled(boolean)>
<android.view.inputmethod.BaseInputConnection: boolean performPrivateCommand(java.lang.String,android.os.Bundle)>
<android.graphics.drawable.VectorDrawable: void setAlpha(int)>
<android.widget.PopupWindow: boolean isLayoutInScreenEnabled()>
<android.app.UiAutomation: android.view.WindowAnimationFrameStats getWindowAnimationFrameStats()>
<android.media.effect.effects.GrainEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>
<android.app.FragmentManagerImpl: android.app.Fragment findFragmentByWho(java.lang.String)>
<com.google.android.collect.Sets: java.util.HashSet newHashSet()>
<android.graphics.Canvas: int getDensity()>
<com.android.internal.util.StateMachine: void loge(java.lang.String,java.lang.Throwable)>
<android.content.pm.PackageInstaller: void removeSessionCallback(android.content.pm.PackageInstaller.SessionCallback)>
<android.media.MediaRouter: void addRouteInt(android.media.MediaRouter.RouteInfo)>
<android.mtp.MtpStorage: long getMaxFileSize()>
<android.opengl.GLES30: void glGetInteger64i_v(int,int,java.nio.LongBuffer)>
<android.view.KeyEvent: int getUnicodeChar(int)>
<android.graphics.drawable.AnimatedVectorDrawable: void setTintList(android.content.res.ColorStateList)>
<com.android.server.NetworkManagementSocketTagger: void setThreadSocketStatsTag(int)>
<android.drm.DrmManagerClient: android.content.ContentValues getConstraints(android.net.Uri,int)>
<android.content.Context: void setWallpaper(java.io.InputStream)>
<android.content.BroadcastReceiver: void setResult(int,java.lang.String,android.os.Bundle)>
<android.os.INetworkManagementService: void stopClatd()>
<android.filterpacks.performance.ThroughputFilter: void open(android.filterfw.core.FilterContext)>
<android.app.admin.IDevicePolicyManager: void notifyLockTaskModeChanged(boolean,java.lang.String,int)>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder detectLeakedSqlLiteObjects()>
<android.opengl.GLES30: void glGetUniformuiv(int,int,int[],int)>
<android.content.ClipData: android.content.ClipData newHtmlText(java.lang.CharSequence,java.lang.CharSequence,java.lang.String)>
<android.nfc.INfcAdapter: int getState()>
<android.net.TrafficStats: long getMobileTxPackets()>
<android.view.WindowManagerPolicy.WindowState: int getSystemUiVisibility()>
<android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings.Builder setTimeout(int)>
<android.hardware.camera2.utils.Decorator: java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])>
<android.content.res.Configuration: void <init>(android.content.res.Configuration)>
<android.widget.FrameLayout: int getForegroundGravity()>
<android.app.Fragment: android.os.Bundle getArguments()>
<com.google.android.gles_jni.GLImpl: void glGetClipPlanex(int,java.nio.IntBuffer)>
<android.bluetooth.BluetoothHeadsetClient: boolean getLastVoiceTagNumber(android.bluetooth.BluetoothDevice)>
<android.text.format.DateFormat: java.text.DateFormat getMediumDateFormat(android.content.Context)>
<android.renderscript.ProgramStore: android.renderscript.ProgramStore.DepthFunc getDepthFunc()>
<android.webkit.WebViewProvider: void loadUrl(java.lang.String,java.util.Map)>
<android.app.IActivityManager: boolean removeTask(int,int)>
<android.view.WindowManagerPolicy: void keepScreenOnStoppedLw()>
<android.opengl.GLES20: void glTexParameteriv(int,int,java.nio.IntBuffer)>
<com.android.internal.database.SortCursor: int getInt(int)>
<android.media.session.ISessionController: void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver)>
<android.os.ConditionVariable: boolean block(long)>
<android.view.InputEvent: void recycleIfNeededAfterDispatch()>
<android.widget.TextView: void setAutoLinkMask(int)>
<android.content.Intent: java.lang.String getScheme()>
<android.os.Messenger: int describeContents()>
<android.widget.RelativeLayout: int getBaseline()>
<android.location.LocationManager: void removeUpdates(android.location.LocationListener)>
<android.content.ContentResolver: int resolveUserId(android.net.Uri)>
<android.animation.BidirectionalTypeConverter: android.animation.BidirectionalTypeConverter invert()>
<android.provider.Settings.Secure: boolean putString(android.content.ContentResolver,java.lang.String,java.lang.String)>
<android.text.method.ArrowKeyMovementMethod: boolean handleMovementKey(android.widget.TextView,android.text.Spannable,int,int,android.view.KeyEvent)>
<android.filterpacks.imageproc.TintFilter: void process(android.filterfw.core.FilterContext)>
<android.webkit.CookieManager: void removeAllCookie()>
<android.telephony.PreciseDataConnectionState: java.lang.String getDataConnectionAPN()>
<android.view.View: void bringToFront()>
<android.app.admin.DevicePolicyManager: void reportFailedPasswordAttempt(int)>
<android.database.sqlite.SQLiteQueryBuilder: void setDistinct(boolean)>
<android.database.sqlite.SQLiteConnection: java.lang.String executeForString(java.lang.String,java.lang.Object[],android.os.CancellationSignal)>
<com.android.internal.view.menu.MenuItemImpl: android.view.MenuItem setIcon(int)>
<com.android.internal.widget.TextProgressBar: void <init>(android.content.Context)>
<android.text.SpannableStringBuilder: java.lang.String substring(int,int)>
<android.opengl.GLES30: void glBeginQuery(int,int)>
<android.location.Location: double convert(java.lang.String)>
<android.media.MediaDrm: void release()>
<android.bluetooth.BluetoothHealth: int getConnectionState(android.bluetooth.BluetoothDevice)>
<android.media.AudioFormat: int getEncoding()>
<android.widget.DialerFilter: java.lang.CharSequence getDigits()>
<android.text.Layout: int getOffsetToRightOf(int)>
<android.media.AudioService: void reloadAudioSettings()>
<android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration,android.content.res.CompatibilityInfo,android.os.IBinder)>
<android.print.IPrintSpoolerCallbacks: void onGetPrintJobInfosResult(java.util.List,int)>
<android.net.IpConfiguration: boolean equals(java.lang.Object)>
<android.printservice.PrintService: void onConnected()>
<android.webkit.WebChromeClient: android.view.View getVideoLoadingProgressView()>
<android.bluetooth.BluetoothGattCallbackWrapper: void onGetDescriptor(java.lang.String,int,int,android.os.ParcelUuid,int,android.os.ParcelUuid,int,android.os.ParcelUuid)>
<com.android.internal.util.StateMachine: void addState(com.android.internal.util.State,com.android.internal.util.State)>
<com.android.internal.telephony.ISms: int getPremiumSmsPermissionForSubscriber(long,java.lang.String)>
<android.widget.ResourceCursorAdapter: void <init>(android.content.Context,int,android.database.Cursor)>
<android.alsa.AlsaCardsParser: android.alsa.AlsaCardsParser.AlsaCardRecord getCardRecordAt(int)>
<android.nfc.INfcCardEmulation: boolean supportsAidPrefixRegistration()>
<android.text.Layout: float getLineWidth(int)>
<android.app.ApplicationThreadProxy: void scheduleCreateService(android.os.IBinder,android.content.pm.ServiceInfo,android.content.res.CompatibilityInfo,int)>
<com.android.internal.widget.DecorContentParent: void setIcon(android.graphics.drawable.Drawable)>
<android.widget.AbsListView: int getSolidColor()>
<android.nfc.INfcAdapter: void invokeBeam()>
<android.media.audiofx.Equalizer: int getCenterFreq(short)>
<android.view.Display: boolean hasAccess(int,int,int)>
<android.accounts.AccountAndUser: int hashCode()>
<android.text.Editable: android.text.Editable delete(int,int)>
<android.net.wifi.IWifiManager: void setCountryCode(java.lang.String,boolean)>
<android.telecom.RemoteConnection: android.telecom.DisconnectCause getDisconnectCause()>
<android.preference.RingtonePreference: void onSaveRingtone(android.net.Uri)>
<android.view.animation.AlphaAnimation: boolean willChangeBounds()>
<android.location.LocationManager: void clearTestProviderLocation(java.lang.String)>
<android.os.Bundle: float getFloat(java.lang.String)>
<android.view.View: void setOnGenericMotionListener(android.view.View.OnGenericMotionListener)>
<android.print.PrintAttributes.Builder: android.print.PrintAttributes.Builder setColorMode(int)>
<android.opengl.GLES20: void glStencilMaskSeparate(int,int)>
<android.hardware.display.IDisplayManager: void connectWifiDisplay(java.lang.String)>
<android.service.voice.VoiceInteractionSession: android.view.View onCreateContentView()>
<android.preference.Preference: void onAttachedToHierarchy(android.preference.PreferenceManager)>
<android.graphics.drawable.RotateDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>
<com.google.android.gles_jni.GLImpl: void glBufferData(int,int,java.nio.Buffer,int)>
<com.android.internal.util.NotificationColorUtil: com.android.internal.util.NotificationColorUtil getInstance(android.content.Context)>
<android.transition.VisibilityPropagation: java.lang.String[] getPropagationProperties()>
<android.graphics.Canvas: boolean quickReject(android.graphics.Path,android.graphics.Canvas.EdgeType)>
<android.webkit.WebView: boolean savePicture(android.os.Bundle,java.io.File)>
<android.text.style.QuoteSpan: int getSpanTypeId()>
<com.android.internal.database.SortCursor: boolean onMove(int,int)>
<android.graphics.drawable.AnimatedRotateDrawable: void setTintMode(android.graphics.PorterDuff.Mode)>
<android.telecom.RemoteConference.Callback: void onStateChanged(android.telecom.RemoteConference,int,int)>
<android.widget.SimpleCursorAdapter: android.widget.SimpleCursorAdapter.ViewBinder getViewBinder()>
<android.bluetooth.BluetoothAdapter: boolean cancelDiscovery()>
<android.content.ContentResolver: void requestSync(android.content.SyncRequest)>
<com.android.internal.widget.ActionBarContextView: void setSplitToolbar(boolean)>
<android.media.RingtoneManager: void setActualDefaultRingtoneUri(android.content.Context,int,android.net.Uri)>
<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable getCurrent()>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl: boolean isRevoked()>
<com.android.internal.telephony.IMms: void sendMessage(long,java.lang.String,android.net.Uri,java.lang.String,android.os.Bundle,android.app.PendingIntent)>
<com.android.internal.util.Predicates: com.android.internal.util.Predicate and(com.android.internal.util.Predicate[])>
<android.inputmethodservice.ExtractEditText: void startInternalChanges()>
<android.nfc.INfcTag: int reconnect(int)>
<com.android.ims.internal.IImsCallSession: java.lang.String getCallId()>
<com.android.internal.widget.ScrollingTabContainerView.VisibilityAnimListener: void onAnimationStart(android.animation.Animator)>
<com.android.internal.widget.SizeAdaptiveLayout.LayoutParams: java.lang.String debug(java.lang.String)>
<android.os.BatteryStats.Uid: long getNetworkActivityBytes(int,int)>
<android.app.Notification.BigPictureStyle: void <init>(android.app.Notification.Builder)>
<android.view.View: android.view.WindowInsets computeSystemWindowInsets(android.view.WindowInsets,android.graphics.Rect)>
<android.view.accessibility.AccessibilityRecord: void setAddedCount(int)>
<android.media.session.MediaSessionManager: void <init>(android.content.Context)>
<android.location.GpsClock: boolean hasTimeUncertaintyInNs()>
<android.hardware.camera2.impl.CameraDeviceImpl.CaptureCallback: void onCaptureSequenceCompleted(android.hardware.camera2.CameraDevice,int,long)>
<android.telephony.TelephonyManager: java.lang.String getCdmaMin()>
<android.app.FragmentBreadCrumbs: void setActivity(android.app.Activity)>
<android.location.GpsMeasurement: void setSnrInDb(double)>
<android.app.trust.ITrustManager: void reportRequireCredentialEntry(int)>
<android.media.tv.TvInputService.Session: void onAppPrivateCommand(java.lang.String,android.os.Bundle)>
<android.hardware.location.GeofenceHardwareRequest: double getLongitude()>
<android.app.admin.DevicePolicyManager: void setProfileName(android.content.ComponentName,java.lang.String)>
<android.view.accessibility.AccessibilityRecord: java.lang.CharSequence getContentDescription()>
<android.view.ViewRootImpl: void dispatchDragEvent(android.view.DragEvent)>
<android.os.Parcel: android.os.PersistableBundle readPersistableBundle(java.lang.ClassLoader)>
<android.net.TrafficStats: long getUidUdpTxBytes(int)>
<android.hardware.camera2.utils.ParamsUtils: android.graphics.Rect createRect(android.util.Size)>
<com.android.internal.view.InputConnectionWrapper: boolean commitCorrection(android.view.inputmethod.CorrectionInfo)>
<android.app.Notification.Builder: android.app.Notification build()>
<android.widget.TextView: boolean onDragEvent(android.view.DragEvent)>
<android.nfc.tech.NfcF: int getTimeout()>
<android.util.MathUtils: int random(int,int)>
<android.hardware.camera2.legacy.CaptureCollector: void failNextJpeg()>
<android.view.View: boolean onSetAlpha(int)>
<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.telephony.CellSignalStrengthWcdma: java.lang.String toString()>
<android.app.FragmentManagerImpl: void dispatchStart()>
<android.webkit.WebView.HitTestResult: void setType(int)>
<android.app.AlarmManager: android.app.AlarmManager.AlarmClockInfo getNextAlarmClock()>
<com.android.internal.view.menu.MenuBuilder: void flagActionItems()>
<android.telecom.Phone: android.telecom.AudioState getAudioState()>
<android.app.Instrumentation.ActivityMonitor: boolean isBlocking()>
<android.content.ContentResolver: android.net.Uri canonicalize(android.net.Uri)>
<android.media.IAudioService: void unregisterAudioFocusClient(java.lang.String)>
<android.content.ContextWrapper: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>
<android.transition.TransitionSet: android.transition.TransitionSet clone()>
<android.database.Cursor: boolean moveToPrevious()>
<android.graphics.Path: void addPath(android.graphics.Path,android.graphics.Matrix)>
<android.hardware.location.GeofenceHardwareCallback: void onGeofenceAdd(int,int)>
<android.hardware.Camera.Parameters: boolean getAutoExposureLock()>
<android.app.IApplicationThread: void scheduleStopService(android.os.IBinder)>
<android.text.method.ArrowKeyMovementMethod: boolean leftWord(android.widget.TextView,android.text.Spannable)>
<android.graphics.drawable.TransitionDrawable: boolean isCrossFadeEnabled()>
<com.android.internal.widget.DrawableHolder: void clearAnimations()>
<android.app.SearchDialog: void setListSelection(int)>
<android.speech.tts.TextToSpeech: int setOnUtteranceCompletedListener(android.speech.tts.TextToSpeech.OnUtteranceCompletedListener)>
<com.android.internal.telephony.GsmAlphabet: byte[] stringToGsm7BitPackedWithHeader(java.lang.String,byte[],int,int)>
<com.android.internal.http.HttpDateTime: long parse(java.lang.String)>
<android.graphics.Movie: int width()>
<com.android.internal.widget.DecorContentParent: void dismissPopups()>
<android.app.WallpaperInfo: java.lang.String getSettingsActivity()>
<android.hardware.location.ActivityRecognitionHardware: boolean unregisterSink(android.hardware.location.IActivityRecognitionHardwareSink)>
<com.android.internal.view.menu.ListMenuPresenter: boolean flagActionItems()>
<android.widget.AutoCompleteTextView.OnDismissListener: void onDismiss()>
<android.media.RemoteDisplay: void dispose()>
<android.media.MediaRouter.RouteGroup: void requestUpdateVolume(int)>
<android.text.style.LeadingMarginSpan.Standard: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.view.animation.NativeInterpolatorFactoryHelper: long createLutInterpolator(float[])>
<android.telephony.ServiceState: android.telephony.ServiceState newFromBundle(android.os.Bundle)>
<android.app.Instrumentation: void execStartActivitiesAsUser(android.content.Context,android.os.IBinder,android.os.IBinder,android.app.Activity,android.content.Intent[],android.os.Bundle,int)>
<android.hardware.location.IGeofenceHardware: boolean pauseGeofence(int,int)>
<android.widget.Scroller: void <init>(android.content.Context,android.view.animation.Interpolator)>
<android.app.ActivityManager: int staticGetLargeMemoryClass()>
<android.app.Activity: void onVisibleBehindCanceled()>
<android.filterfw.MffEnvironment: void createGLEnvironment()>
<android.renderscript.Double4: void addAt(int,double)>
<android.content.res.TypedArray: java.lang.String getString(int)>
<android.net.wifi.ScanResult: void <init>(android.net.wifi.ScanResult)>
<android.util.Base64: java.lang.String encodeToString(byte[],int)>
<android.content.pm.ApplicationInfo: java.lang.CharSequence loadDescription(android.content.pm.PackageManager)>
<android.filterpacks.imageproc.DrawOverlayFilter: void setupPorts()>
<android.print.PrintJob: boolean equals(java.lang.Object)>
<com.android.internal.view.menu.BaseMenuPresenter: com.android.internal.view.menu.MenuView.ItemView createItemView(android.view.ViewGroup)>
<android.telephony.PhoneNumberUtils: java.lang.String stripSeparators(java.lang.String)>
<android.graphics.PointF: void offset(float,float)>
<android.content.res.Resources.Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>
<android.os.UserManager: android.graphics.drawable.Drawable getBadgedDrawableForUser(android.graphics.drawable.Drawable,android.os.UserHandle,android.graphics.Rect,int)>
<android.graphics.drawable.Drawable: int getLevel()>
<android.bluetooth.BluetoothHeadsetClientCall: void setNumber(java.lang.String)>
<android.filterfw.core.FilterPort: android.filterfw.core.FrameFormat getPortFormat()>
<android.webkit.WebViewProvider: void setWebViewClient(android.webkit.WebViewClient)>
<android.app.WallpaperManager: void setResource(int)>
<android.widget.ActionMenuView: boolean isOverflowMenuShowing()>
<android.database.AbstractCursor: int getColumnIndexOrThrow(java.lang.String)>
<com.android.internal.os.BatteryStatsImpl: long getLowPowerModeEnabledTime(long,int)>
<android.content.BroadcastReceiver.PendingResult: void abortBroadcast()>
<android.view.WindowManagerPolicy.WindowManagerFuncs: void rebootSafeMode(boolean)>
<android.util.ArraySet: boolean remove(java.lang.Object)>
<android.media.AudioService: void setVolumeController(android.media.IVolumeController)>
<android.filterfw.core.FrameFormat: int getTarget()>
<android.view.HardwareCanvas: void drawRoundRect(android.graphics.CanvasProperty,android.graphics.CanvasProperty,android.graphics.CanvasProperty,android.graphics.CanvasProperty,android.graphics.CanvasProperty,android.graphics.CanvasProperty,android.graphics.CanvasProperty)>
<android.view.IOnKeyguardExitResult: void onKeyguardExitResult(boolean)>
<android.graphics.drawable.DrawableContainer: android.graphics.drawable.Drawable mutate()>
<android.database.AbstractCursor: void registerContentObserver(android.database.ContentObserver)>
<android.ddm.DdmHandleProfiling: void disconnected()>
<android.mtp.MtpObjectInfo: int getImagePixHeight()>
<android.speech.tts.SynthesisRequest: android.os.Bundle getParams()>
<android.location.GpsMeasurement: long getReceivedGpsTowInNs()>
<android.os.Message: void setData(android.os.Bundle)>
<android.transition.Visibility: void <init>(android.content.Context,android.util.AttributeSet)>
<android.bluetooth.BluetoothDevice: android.bluetooth.BluetoothSocket createInsecureRfcommSocket(int)>
<android.net.SSLCertificateSocketFactory: void verifyHostname(java.net.Socket,java.lang.String)>
<android.widget.AutoCompleteTextView: void onAttachedToWindow()>
<com.android.internal.widget.multiwaveview.TargetDrawable: void setPositionY(float)>
<android.graphics.Bitmap: void setDensity(int)>
<com.android.server.backup.SystemBackupAgent: void onRestoreFile(android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long)>
<android.net.ConnectivityManager: android.net.NetworkCapabilities getNetworkCapabilities(android.net.Network)>
<android.database.sqlite.SQLiteCantOpenDatabaseException: void <init>(java.lang.String)>
<android.opengl.Matrix: void orthoM(float[],int,float,float,float,float,float,float)>
<android.telephony.TelephonyManager: int getCurrentPhoneType(long)>
<android.preference.Preference: void onSetInitialValue(boolean,java.lang.Object)>
<com.android.internal.view.menu.ActionMenuItemView: void onConfigurationChanged(android.content.res.Configuration)>
<android.widget.ScrollView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.nfc.tech.NfcB: byte[] getProtocolInfo()>
<com.android.internal.widget.ToolbarWidgetWrapper: void setIcon(int)>
<android.app.IApplicationThread: void unstableProviderDied(android.os.IBinder)>
<android.widget.Adapter: void unregisterDataSetObserver(android.database.DataSetObserver)>
<android.speech.srec.Recognizer: void <init>(java.lang.String)>
<android.webkit.URLUtil: byte[] decode(byte[])>
<android.text.style.StyleSpan: void updateDrawState(android.text.TextPaint)>
<android.webkit.WebChromeClient: boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult)>
<android.widget.AbsListView: int computeVerticalScrollExtent()>
<android.app.backup.IBackupManager: void acknowledgeFullBackupOrRestore(int,boolean,java.lang.String,java.lang.String,android.app.backup.IFullBackupRestoreObserver)>
<android.opengl.GLES11Ext: void glMatrixIndexPointerOES(int,int,int,java.nio.Buffer)>
<android.net.wifi.WifiConfiguration: void setIpConfiguration(android.net.IpConfiguration)>
<android.graphics.Matrix: void setSinCos(float,float,float,float)>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder detectFileUriExposure()>
<com.android.internal.app.ProcessStats.ProcessState: void makeActive()>
<android.filterfw.core.Filter: void tearDown(android.filterfw.core.FilterContext)>
<com.android.internal.telephony.ISms: void sendText(java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.PendingIntent,android.app.PendingIntent)>
<android.view.View: android.view.ViewParent getParentForAccessibility()>
<android.content.ClipDescription: void <init>(android.content.ClipDescription)>
<com.android.internal.widget.DecorContentParent: boolean hasIcon()>
<android.app.IActivityContainerCallback: void onAllActivitiesComplete(android.os.IBinder)>
<android.graphics.drawable.Drawable: void setAutoMirrored(boolean)>
<android.animation.Animator: android.animation.Animator clone()>
<android.view.ViewGroup: void onAttachedToWindow()>
<android.graphics.drawable.DrawableContainer: boolean setVisible(boolean,boolean)>
<android.ddm.DdmHandleNativeHeap: org.apache.harmony.dalvik.ddmc.Chunk handleChunk(org.apache.harmony.dalvik.ddmc.Chunk)>
<android.view.View: void getFocusedRect(android.graphics.Rect)>
<android.app.ActivityManagerProxy: void enterSafeMode()>
<android.widget.NumberPicker: void setMaxValue(int)>
<android.graphics.drawable.NinePatchDrawable: void getOutline(android.graphics.Outline)>
<android.bluetooth.IBluetoothPan: java.util.List getConnectedDevices()>
<android.net.http.AndroidHttpClient: void disableCurlLogging()>
<android.net.SSLCertificateSocketFactory: void setChannelIdPrivateKey(java.security.PrivateKey)>
<android.telecom.Connection: void setConnectionService(android.telecom.ConnectionService)>
<android.telecom.CameraCapabilities: int getWidth()>
<android.view.SurfaceControl: android.graphics.Bitmap screenshot(int,int)>
<android.service.voice.VoiceInteractionService: android.hardware.soundtrigger.KeyphraseEnrollmentInfo getKeyphraseEnrollmentInfo()>
<android.graphics.Canvas: boolean clipRect(android.graphics.Rect)>
<android.drm.DrmManagerClient: int saveRights(android.drm.DrmRights,java.lang.String,java.lang.String)>
<android.view.ViewGroup: boolean resolveTextDirection()>
<android.renderscript.ScriptGroup: void execute()>
<android.nfc.NfcActivityManager: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)>
<com.android.internal.app.MediaRouteChooserDialog: void onCreate(android.os.Bundle)>
<android.speech.tts.Voice: java.lang.String getName()>
<android.net.wifi.p2p.nsd.WifiP2pServiceResponse: boolean equals(java.lang.Object)>
<android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>
<android.media.audiofx.Visualizer: void release()>
<com.android.internal.view.InputBindResult: int describeContents()>
<android.widget.OverScroller: void startScroll(int,int,int,int,int)>
<com.android.internal.app.IMediaContainerService: int copyPackage(java.lang.String,com.android.internal.os.IParcelFileDescriptorFactory)>
<android.hardware.Camera: boolean enableShutterSound(boolean)>
<android.app.PendingIntent: java.lang.String toString()>
<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
<android.app.ActionBar.Tab: android.app.ActionBar.Tab setText(java.lang.CharSequence)>
<android.media.tv.ITvInputClient: void onLayoutSurface(int,int,int,int,int)>
<android.util.Log: int i(java.lang.String,java.lang.String)>
<android.telephony.CellInfoCdma: android.telephony.CellSignalStrengthCdma getCellSignalStrength()>
<android.inputmethodservice.KeyboardView: boolean onHoverEvent(android.view.MotionEvent)>
<android.util.MathUtils: float tan(float)>
<android.widget.PopupWindow: android.view.View getContentView()>
<android.app.SearchableInfo: java.lang.String getSuggestPath()>
<android.hardware.Camera.Parameters: void getPreviewFpsRange(int[])>
<android.media.MediaRouter.UserRouteInfo: void setDescription(java.lang.CharSequence)>
<android.hardware.Camera.Parameters: android.hardware.Camera.Size getPictureSize()>
<android.os.ParcelUuid: boolean equals(java.lang.Object)>
<android.view.ViewGroup: void suppressLayout(boolean)>
<android.widget.SlidingDrawer.OnDrawerScrollListener: void onScrollStarted()>
<android.app.Dialog: void setDismissMessage(android.os.Message)>
<android.app.admin.DevicePolicyManager: java.lang.String getProfileOwnerName()>
<com.android.internal.telephony.IPhoneSubInfo: java.lang.String getVoiceMailNumberForSubscriber(long)>
<android.os.Process: android.os.Process.ProcessStartResult start(java.lang.String,java.lang.String,int,int,int[],int,int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>
<android.content.pm.FeatureInfo: java.lang.String getGlEsVersion()>
<com.android.internal.widget.ActionBarContainer: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.internal.app.LocalePicker.LocaleSelectionListener: void onLocaleSelected(java.util.Locale)>
<com.android.internal.telephony.CallInfo: java.lang.String getHandle()>
<android.content.res.TypedArray: float getFraction(int,int,int,float)>
<com.android.internal.widget.LockPatternUtils: void setVisiblePatternEnabled(boolean)>
<android.net.SSLCertificateSocketFactory: java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int)>
<com.android.ims.internal.IImsCallSessionListener: void callSessionHandover(com.android.ims.internal.IImsCallSession,int,int,com.android.ims.ImsReasonInfo)>
<android.renderscript.Short4: android.renderscript.Short4 sub(android.renderscript.Short4,android.renderscript.Short4)>
<android.app.admin.DevicePolicyManager: android.os.UserHandle createAndInitializeUser(android.content.ComponentName,java.lang.String,java.lang.String,android.content.ComponentName,android.os.Bundle)>
<android.content.pm.LauncherApps.Callback: void onPackagesUnavailable(java.lang.String[],android.os.UserHandle,boolean)>
<android.graphics.PathMeasure: boolean getMatrix(float,android.graphics.Matrix,int)>
<android.widget.ScrollView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.net.NetworkStatsHistory: int size()>
<com.android.internal.telephony.ISub: long[] getSubId(int)>
<android.app.backup.IBackupManager: void setBackupProvisioned(boolean)>
<android.view.View: void setFilterTouchesWhenObscured(boolean)>
<android.app.ActivityManagerProxy: boolean launchAssistIntent(android.content.Intent,int,java.lang.String,int)>
<android.hardware.Camera.Parameters: void setGpsAltitude(double)>
<android.hardware.soundtrigger.SoundTrigger.RecognitionConfig: java.lang.String toString()>
<android.media.MediaRouter.UserRouteInfo: void setStatus(java.lang.CharSequence)>
<android.sax.Element: void setElementListener(android.sax.ElementListener)>
<android.bluetooth.IBluetooth: boolean setDiscoverableTimeout(int)>
<android.app.admin.DeviceAdminReceiver: void onLockTaskModeExiting(android.content.Context,android.content.Intent)>
<android.view.ViewParent: int getTextDirection()>
<android.view.PointerIcon: android.graphics.Bitmap getBitmap()>
<android.opengl.GLSurfaceView: void queueEvent(java.lang.Runnable)>
<android.security.KeyStore: boolean isUnlocked()>
<android.filterfw.core.FrameFormat: java.lang.String targetToString(int)>
<android.net.wifi.IWifiManager: int getWifiApEnabledState()>
<com.android.internal.view.menu.ActionMenu: boolean hasVisibleItems()>
<android.widget.AbsSpinner: android.os.Parcelable onSaveInstanceState()>
<android.app.Instrumentation: void startAllocCounting()>
<android.net.WifiKey: java.lang.String toString()>
<android.widget.Toolbar: android.view.Menu getMenu()>
<android.text.LoginFilter.PasswordFilterGMail: boolean isAllowed(char)>
<android.view.WindowManagerPolicy.WindowState: android.view.IApplicationToken getAppToken()>
<android.content.ContentProviderProxy: android.content.ContentProviderResult[] applyBatch(java.lang.String,java.util.ArrayList)>
<android.content.pm.PackageInstaller.SessionParams: void setInstallFlagsExternal()>
<android.os.Message: android.os.Message obtain(android.os.Handler,int,int,int)>
<com.android.ims.internal.IImsUt: int queryCOLP()>
<android.os.BatteryStats.Timer: int getCountLocked(int)>
<android.media.IRemoteControlDisplay: void setPlaybackState(int,int,long,long,float)>
<android.graphics.Camera: void rotateY(float)>
<android.animation.LayoutTransition.TransitionListener: void endTransition(android.animation.LayoutTransition,android.view.ViewGroup,android.view.View,int)>
<android.graphics.drawable.DrawableContainer: boolean isAutoMirrored()>
<android.app.Dialog: void <init>(android.content.Context,boolean,android.content.DialogInterface.OnCancelListener)>
<android.service.voice.IVoiceInteractionSession: void destroy()>
<android.renderscript.Short3: void <init>(short,short,short)>
<android.net.http.AndroidHttpClient: java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)>
<android.os.Parcel: android.os.Bundle readBundle(java.lang.ClassLoader)>
<android.net.IpPrefix: void writeToParcel(android.os.Parcel,int)>
<android.media.tv.TvInputInfo: android.media.tv.TvInputInfo createTvInputInfo(android.content.Context,android.content.pm.ResolveInfo,android.hardware.hdmi.HdmiDeviceInfo,java.lang.String,java.lang.String,android.net.Uri)>
<android.provider.Settings.Secure: float getFloatForUser(android.content.ContentResolver,java.lang.String,int)>
<android.hardware.camera2.legacy.CameraDeviceUserShim: android.hardware.camera2.legacy.CameraDeviceUserShim connectBinderShim(android.hardware.camera2.ICameraDeviceCallbacks,int)>
<android.graphics.drawable.Drawable: android.graphics.Rect copyBounds()>
<android.renderscript.FileA3D: android.renderscript.FileA3D createFromFile(android.renderscript.RenderScript,java.io.File)>
<android.widget.PopupWindow: void setSoftInputMode(int)>
<android.service.dreams.DreamService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.app.FragmentTransaction: boolean isAddToBackStackAllowed()>
<android.content.ContentResolver: java.util.List getCurrentSyncs()>
<android.os.storage.StorageVolume: int getDescriptionId()>
<android.widget.Spinner: void setGravity(int)>
<android.app.DownloadManager.Query: android.app.DownloadManager.Query setFilterById(long[])>
<android.content.Intent: void setClipData(android.content.ClipData)>
<android.provider.DocumentsContract: android.net.Uri buildDocumentUriMaybeUsingTree(android.net.Uri,java.lang.String)>
<android.nfc.cardemulation.ApduServiceInfo: void <init>(android.content.pm.PackageManager,android.content.pm.ResolveInfo,boolean)>
<android.app.Dialog: void onContextMenuClosed(android.view.Menu)>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDDstAtop()>
<android.util.DayOfMonthCursor: void <init>(int,int,int,int)>
<android.location.GpsMeasurement: void setPseudorangeUncertaintyInMeters(double)>
<android.content.SyncResult: boolean hasError()>
<android.view.View: void setNextFocusLeftId(int)>
<android.os.PowerManager: int getDefaultScreenBrightnessSetting()>
<android.renderscript.ProgramRaster: boolean isPointSpriteEnabled()>
<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl.Uid.Pkg.Serv getServiceStatsLocked(int,java.lang.String,java.lang.String)>
<android.graphics.Paint: void setHinting(int)>
<android.app.Activity: void setFeatureDrawableAlpha(int,int)>
<android.service.trust.ITrustAgentService: void onUnlockAttempt(boolean)>
<android.graphics.SurfaceTexture: void attachToGLContext(int)>
<com.android.internal.widget.AbsActionBarView: boolean isOverflowMenuShowPending()>
<android.preference.PreferenceActivity: boolean isValidFragment(java.lang.String)>
<android.graphics.Insets: boolean equals(java.lang.Object)>
<android.telecom.Conference: void onHold()>
<com.android.internal.app.WindowDecorActionBar: android.content.Context getThemedContext()>
<android.filterpacks.performance.Throughput: void <init>(int,int,int,int)>
<android.database.MatrixCursor: int getCount()>
<android.opengl.GLES10: void glDrawArrays(int,int,int)>
<android.nfc.cardemulation.ApduServiceInfo: boolean hasCategory(java.lang.String)>
<com.android.internal.app.WindowDecorActionBar: void setShowHideAnimationEnabled(boolean)>
<android.view.WindowCallbackWrapper: void onPanelClosed(int,android.view.Menu)>
<android.util.MathUtils: float lerp(float,float,float)>
<android.app.Activity: void onAttachedToWindow()>
<android.content.ComponentName: java.lang.String flattenToString()>
<android.telephony.cdma.CdmaCellLocation: void setStateInvalid()>
<com.android.internal.widget.LockPatternUtilsCache: void registerObserver(com.android.internal.widget.ILockSettingsObserver)>
<com.android.internal.app.AlertController: void setIcon(android.graphics.drawable.Drawable)>
<android.text.StaticLayout: void <init>(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout.Alignment,float,float,boolean)>
<android.hardware.soundtrigger.KeyphraseMetadata: void <init>(int,java.lang.String,android.util.ArraySet,int)>
<com.android.internal.os.AtomicFile: void failWrite(java.io.FileOutputStream)>
<android.content.ContentValues: java.util.ArrayList getStringArrayList(java.lang.String)>
<android.widget.OverScroller: void startScroll(int,int,int,int)>
<android.app.Instrumentation: android.app.Application newApplication(java.lang.ClassLoader,java.lang.String,android.content.Context)>
<android.content.Context: android.view.DisplayAdjustments getDisplayAdjustments(int)>
<android.webkit.CookieManager: void removeAllCookies(android.webkit.ValueCallback)>
<android.transition.Visibility: int getMode()>
<android.webkit.FindActionModeCallback: void showSoftInput()>
<android.telephony.TelephonyManager: boolean isNetworkRoaming(long)>
<android.nfc.NfcAdapter: boolean disableNdefPush()>
<android.graphics.ComposeShader: void <init>(android.graphics.Shader,android.graphics.Shader,android.graphics.PorterDuff.Mode)>
<android.text.style.TtsSpan.MoneyBuilder: android.text.style.TtsSpan.MoneyBuilder setFractionalPart(java.lang.String)>
<android.content.SyncStatusInfo: int getLastFailureMesgAsInt(int)>
<android.graphics.drawable.DrawableContainer: android.graphics.Insets getOpticalInsets()>
<android.graphics.Rect: boolean setIntersect(android.graphics.Rect,android.graphics.Rect)>
<android.media.AudioGainConfig: int mode()>
<android.media.tv.TvInputManager.Session: void tune(android.net.Uri)>
<com.android.internal.view.menu.ContextMenuBuilder: android.view.ContextMenu setHeaderIcon(int)>
<android.net.NetworkRequest.Builder: android.net.NetworkRequest.Builder setLinkUpstreamBandwidthKbps(int)>
<android.gesture.GestureOverlayView: android.graphics.Path getGesturePath(android.graphics.Path)>
<android.os.storage.IMountService: java.lang.String getPassword()>
<android.telecom.RemoteConference: java.util.List getConnections()>
<android.app.admin.DevicePolicyManager: void setMasterVolumeMuted(android.content.ComponentName,boolean)>
<android.provider.MediaStore.Images.Thumbnails: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[])>
<android.widget.EditText: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.app.Notification.Builder: void populateExtras(android.os.Bundle)>
<android.view.Choreographer: void postCallback(int,java.lang.Runnable,java.lang.Object)>
<android.app.SearchManager: android.content.Intent getAssistIntent(android.content.Context,boolean,int)>
<android.app.AlertDialog: void setButton(java.lang.CharSequence,android.os.Message)>
<android.accounts.AccountManager: android.accounts.AccountManagerFuture getAuthTokenByFeatures(java.lang.String,java.lang.String,java.lang.String[],android.app.Activity,android.os.Bundle,android.os.Bundle,android.accounts.AccountManagerCallback,android.os.Handler)>
<com.android.internal.http.multipart.MultipartEntity: void <init>(com.android.internal.http.multipart.Part[])>
<android.os.Environment: java.io.File[] buildPaths(java.io.File[],java.lang.String[])>
<android.view.FallbackEventHandler: boolean dispatchKeyEvent(android.view.KeyEvent)>
<com.android.internal.app.ToolbarActionBar: int getDisplayOptions()>
<android.graphics.drawable.ClipDrawable: void onBoundsChange(android.graphics.Rect)>
<android.text.style.TtsSpan.DateBuilder: android.text.style.TtsSpan.DateBuilder setDay(int)>
<android.accounts.AccountManagerResponse: void onResult(android.os.Bundle)>
<android.os.INetworkManagementService: void removeNetwork(int)>
<android.widget.CheckedTextView: android.content.res.ColorStateList getCheckMarkTintList()>
<android.net.LinkProperties: boolean isIdenticalTcpBufferSizes(android.net.LinkProperties)>
<android.app.AlertDialog: void setTitle(java.lang.CharSequence)>
<com.android.internal.app.IBatteryStats: void setBatteryState(int,int,int,int,int,int)>
<android.widget.TableLayout.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.internal.view.menu.ListMenuItemView: void setShortcut(boolean,char)>
<android.app.ResultInfo: int describeContents()>
<android.media.session.ISession: void setPlaybackState(android.media.session.PlaybackState)>
<android.filterfw.core.SimpleFrameManager: android.filterfw.core.Frame releaseFrame(android.filterfw.core.Frame)>
<android.view.KeyEvent: int getMaxKeyCode()>
<android.net.LinkProperties: boolean addDnsServer(java.net.InetAddress)>
<android.nfc.FormatException: void <init>(java.lang.String,java.lang.Throwable)>
<com.android.internal.app.WindowDecorActionBar.ActionModeImpl: android.view.Menu getMenu()>
<android.renderscript.Mesh.TriangleMeshBuilder: android.renderscript.Mesh.TriangleMeshBuilder setNormal(float,float,float)>
<com.android.internal.telephony.ITelephonyRegistry: void notifyCallStateForSubscriber(long,int,java.lang.String)>
<android.hardware.camera2.marshal.MarshalHelpers: int checkNativeTypeEquals(int,int)>
<android.net.PacProxySelector: java.util.List select(java.net.URI)>
<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>
<android.hardware.camera2.params.HighSpeedVideoConfiguration: void <init>(int,int,int,int)>
<android.hardware.camera2.legacy.LegacyExceptionUtils.BufferQueueAbandonedException: void <init>(java.lang.Exception)>
<android.view.ViewGroup: void resetResolvedPadding()>
<android.media.AudioRecord: int getNotificationMarkerPosition()>
<android.content.Intent: android.content.ComponentName getComponent()>
<android.content.res.AssetManager: java.lang.String getCookieName(int)>
<android.hardware.SensorManager: boolean getRotationMatrix(float[],float[],float[],float[])>
<android.media.tv.TvInputManager.SessionCallback: void onVideoUnavailable(android.media.tv.TvInputManager.Session,int)>
<android.net.INetworkStatsService: void forceUpdate()>
<android.app.IActivityManager: void getMemoryInfo(android.app.ActivityManager.MemoryInfo)>
<android.graphics.PointF: void negate()>
<android.webkit.WebViewProvider: boolean isPaused()>
<android.content.ContentProvider: android.content.ContentProviderResult[] applyBatch(java.util.ArrayList)>
<android.widget.TextView: void setOnEditorActionListener(android.widget.TextView.OnEditorActionListener)>
<android.app.KeyguardManager: android.content.Intent createConfirmDeviceCredentialIntent(java.lang.CharSequence,java.lang.CharSequence)>
<android.app.UiAutomation: void setRunAsMonkey(boolean)>
<android.app.Activity: void setTitle(java.lang.CharSequence)>
<android.database.SQLException: void <init>(java.lang.String)>
<com.android.internal.app.WindowDecorActionBar: java.lang.CharSequence getTitle()>
<android.widget.TextView: android.graphics.drawable.Drawable[] getCompoundDrawables()>
<android.view.InflateException: void <init>(java.lang.String)>
<com.android.internal.database.SortCursor: float getFloat(int)>
<android.widget.SlidingDrawer: void lock()>
<android.speech.srec.WaveHeader: int getNumBytes()>
<android.app.Dialog: void setCancelMessage(android.os.Message)>
<android.graphics.drawable.InsetDrawable: void setAlpha(int)>
<android.renderscript.Long4: void setValues(long,long,long,long)>
<android.telephony.TelephonyManager: int getIntAtIndex(android.content.ContentResolver,java.lang.String,int)>
<android.widget.RemoteViews: void setRemoteAdapter(int,android.content.Intent)>
<android.content.pm.InstrumentationInfo: int describeContents()>
<android.filterfw.core.ShaderProgram: void setTargetRegion(android.filterfw.geometry.Quad)>
<android.renderscript.Short3: android.renderscript.Short3 div(android.renderscript.Short3,android.renderscript.Short3)>
<android.webkit.Plugin: void setDescription(java.lang.String)>
<android.widget.CheckedTextView: android.graphics.PorterDuff.Mode getCheckMarkTintMode()>
<android.media.MediaPlayer.OnTimedTextListener: void onTimedText(android.media.MediaPlayer,android.media.TimedText)>
<android.hardware.camera2.legacy.LegacyRequest: void <init>(android.hardware.camera2.CameraCharacteristics,android.hardware.camera2.CaptureRequest,android.util.Size,android.hardware.Camera.Parameters)>
<android.graphics.Interpolator: void reset(int)>
<android.service.voice.VoiceInteractionService: boolean isActiveService(android.content.Context,android.content.ComponentName)>
<android.opengl.GLES20: void glGetRenderbufferParameteriv(int,int,java.nio.IntBuffer)>
<android.view.View: boolean isDuplicateParentStateEnabled()>
<android.view.Window: long getTransitionBackgroundFadeDuration()>
<com.android.internal.os.BatteryStatsImpl: com.android.internal.os.BatteryStatsImpl.SamplingTimer getWakeupReasonTimerLocked(java.lang.String)>
<android.database.MatrixCursor: void <init>(java.lang.String[],int)>
<com.google.android.gles_jni.GLImpl: void glPushMatrix()>
<com.android.internal.os.BatteryStatsImpl: void noteWifiMulticastEnabledLocked(int)>
<android.view.ContextThemeWrapper: android.content.res.Resources.Theme getTheme()>
<android.view.RenderNodeAnimator: long getDuration()>
<android.app.Instrumentation: void onStart()>
<android.graphics.Rect: java.lang.String flattenToString()>
<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>
<android.webkit.WebView: boolean canGoBackOrForward(int)>
<android.telecom.RemoteConference: void setAudioState(android.telecom.AudioState)>
<android.preference.PreferenceFragment: void addPreferencesFromIntent(android.content.Intent)>
<android.graphics.drawable.ScaleDrawable: void draw(android.graphics.Canvas)>
<android.app.IActivityManager: long inputDispatchingTimedOut(int,boolean,java.lang.String)>
<android.view.KeyEvent: void writeToParcel(android.os.Parcel,int)>
<android.hardware.display.DisplayManagerInternal.DisplayTransactionListener: void onDisplayTransaction()>
<android.os.UserManager: int getMaxSupportedUsers()>
<android.app.UiAutomation.OnAccessibilityEventListener: void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor fromDatagramSocket(java.net.DatagramSocket)>
<android.media.TtmlRenderer: void <init>(android.content.Context)>
<android.media.IAudioRoutesObserver: void dispatchAudioRoutesChanged(android.media.AudioRoutesInfo)>
<android.app.Activity: boolean dispatchTrackballEvent(android.view.MotionEvent)>
<android.hardware.hdmi.IHdmiHotplugEventListener: void onReceived(android.hardware.hdmi.HdmiHotplugEvent)>
<android.text.format.DateUtils: java.lang.String formatElapsedTime(java.lang.StringBuilder,long)>
<android.os.PowerManager: void userActivity(long,boolean)>
<android.print.PrinterDiscoverySession: void stopPrinterStateTracking(android.print.PrinterId)>
<android.os.IUserManager: android.os.Bundle getDefaultGuestRestrictions()>
<android.net.Uri: java.lang.String getFragment()>
<android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>
<android.hardware.camera2.dispatch.NullDispatcher: java.lang.Object dispatch(java.lang.reflect.Method,java.lang.Object[])>
<com.google.android.gles_jni.GLImpl: void glGenFramebuffersOES(int,java.nio.IntBuffer)>
<android.transition.TransitionManager: void go(android.transition.Scene,android.transition.Transition)>
<android.opengl.GLES11: void glGetTexEnvfv(int,int,float[],int)>
<com.android.internal.util.TypedProperties: short getShort(java.lang.String,short)>
<android.opengl.Matrix: void multiplyMV(float[],int,float[],int,float[],int)>
<android.app.Notification.BigTextStyle: void <init>(android.app.Notification.Builder)>
<android.view.inputmethod.InputMethodInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>
<android.view.WindowId.FocusObserver: void onFocusGained(android.view.WindowId)>
<android.os.FileObserver: void onEvent(int,java.lang.String)>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder penaltyDropBox()>
<android.renderscript.Allocation: void copyFrom(java.lang.Object)>
<android.widget.AdapterViewAnimator: void showNext()>
<android.bluetooth.BluetoothA2dp: void setAvrcpAbsoluteVolume(int)>
<android.widget.Gallery: void setSpacing(int)>
<android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder clone()>
<android.bluetooth.BluetoothServerSocket: android.bluetooth.BluetoothSocket accept()>
<android.view.KeyEvent: android.view.KeyEvent copy()>
<android.print.PrinterCapabilitiesInfo: boolean equals(java.lang.Object)>
<android.renderscript.Short3: android.renderscript.Short3 sub(android.renderscript.Short3,android.renderscript.Short3)>
<android.os.PowerManager: void reboot(java.lang.String)>
<android.telephony.PreciseCallState: int getPreciseDisconnectCause()>
<android.view.WindowManagerGlobal: void changeCanvasOpacity(android.os.IBinder,boolean)>
<com.android.internal.widget.AbsActionBarView: int getAnimatedVisibility()>
<android.app.Notification.Builder: android.app.Notification.Builder setSortKey(java.lang.String)>
<android.app.ActionBar.OnNavigationListener: boolean onNavigationItemSelected(int,long)>
<android.media.MediaPlayer: void setOnSubtitleDataListener(android.media.MediaPlayer.OnSubtitleDataListener)>
<android.opengl.GLES10: void glClearDepthx(int)>
<android.net.NetworkStats: int internalSize()>
<android.media.SubtitleController.Renderer: android.media.SubtitleTrack createTrack(android.media.MediaFormat)>
<android.content.ContentProviderOperation: android.net.Uri getUri()>
<android.content.IClipboard: boolean hasPrimaryClip(java.lang.String)>
<android.database.CursorWrapper: android.os.Bundle respond(android.os.Bundle)>
<android.print.PrintJobInfo: void setAdvancedOptions(android.os.Bundle)>
<android.filterfw.core.FilterPort: android.filterfw.core.Filter getFilter()>
<android.os.NullVibrator: void vibrate(int,java.lang.String,long[],int,android.media.AudioAttributes)>
<android.preference.TwoStatePreference: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.internal.widget.multiwaveview.PointCloud: float getScale()>
<android.widget.RemoteViewsAdapter: void finalize()>
<android.view.WindowManagerInternal: void setInputFilter(android.view.IInputFilter)>
<android.media.session.MediaController.TransportControls: void skipToNext()>
<com.android.internal.widget.LockPatternUtils: boolean isInCall()>
<android.view.View.OnTouchListener: boolean onTouch(android.view.View,android.view.MotionEvent)>
<android.app.Notification.Action.Builder: void <init>(android.app.Notification.Action)>
<android.view.View: java.lang.String getTransitionName()>
<android.os.PersistableBundle: java.lang.String toString()>
<android.media.MediaFocusControl: void dispatchMediaKeyEventUnderWakelock(android.view.KeyEvent)>
<android.location.GpsMeasurement: void setCn0InDbHz(double)>
<android.media.session.PlaybackState.Builder: android.media.session.PlaybackState build()>
<com.android.ims.ImsConferenceState: void <init>(android.os.Parcel)>
<android.preference.SeekBarPreference: int getProgress()>
<android.text.method.Touch: boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent)>
<android.opengl.GLES31Ext: void glPrimitiveBoundingBoxEXT(float,float,float,float,float,float,float,float)>
<android.opengl.GLES30: void glGetIntegeri_v(int,int,int[],int)>
<android.widget.SpellChecker: void onSelectionChanged()>
<com.android.internal.telecom.ITelecomService: java.util.List getAllPhoneAccounts()>
<android.inputmethodservice.SoftInputWindow: boolean onKeyUp(int,android.view.KeyEvent)>
<android.renderscript.FieldPacker: void addI32(android.renderscript.Int4)>
<com.android.internal.widget.PointerLocationView.PointerState: void addTrace(float,float,boolean)>
<android.net.ConnectivityManager: void enforceTetherChangePermission(android.content.Context)>
<com.android.internal.os.BatteryStatsImpl.Uid.Pkg: com.android.internal.os.BatteryStatsImpl getBatteryStats()>
<android.app.admin.DevicePolicyManager: int getPasswordMinimumUpperCase(android.content.ComponentName)>
<android.util.FloatProperty: void <init>(java.lang.String)>
<android.app.backup.RestoreDescription: void <init>(java.lang.String,int)>
<com.android.ims.internal.IImsEcbmListener: void exitedECBM()>
<com.android.internal.content.PackageMonitor: void onPackageAdded(java.lang.String,int)>
<android.media.AudioService: boolean registerAudioPolicy(android.media.audiopolicy.AudioPolicyConfig,android.os.IBinder)>
<android.webkit.PluginData: long getContentLength()>
<android.widget.AbsSpinner: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.telecom.Phone: void setProximitySensorOff(boolean)>
<android.renderscript.Script.LaunchOptions: int getZStart()>
<android.content.Context: void enforceCallingOrSelfUriPermission(android.net.Uri,int,java.lang.String)>
<android.opengl.GLES11Ext: void glGetRenderbufferParameterivOES(int,int,java.nio.IntBuffer)>
<android.drm.DrmManagerClient: void setOnEventListener(android.drm.DrmManagerClient.OnEventListener)>
<android.preference.PreferenceActivity.Header: void readFromParcel(android.os.Parcel)>
<android.media.AudioManager: void adjustSuggestedStreamVolume(int,int,int)>
<android.widget.ScrollView: void setOverScrollMode(int)>
<android.bluetooth.le.BluetoothLeAdvertiser: void stopAdvertising(android.bluetooth.le.AdvertiseCallback)>
<android.util.Spline.MonotoneCubicSpline: void <init>(float[],float[])>
<android.webkit.WebSettings: boolean getLoadsImagesAutomatically()>
<android.media.MediaPlayer: void setVideoScalingMode(int)>
<com.android.internal.app.ToolbarActionBar: void setHomeActionContentDescription(int)>
<android.telephony.TelephonyManager: java.lang.String getSimOperator(long)>
<android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>
<android.opengl.GLSurfaceView: void setPreserveEGLContextOnPause(boolean)>
<android.telecom.RemoteConnection: boolean isVoipAudioMode()>
<android.filterpacks.videosrc.MediaSource: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>
<android.view.Window: boolean getAllowReturnTransitionOverlap()>
<android.text.Spanned: int getSpanStart(java.lang.Object)>
<android.hardware.Camera.Parameters: java.lang.String getAntibanding()>
<android.animation.LayoutTransition: long getStagger(int)>
<android.app.ActivityManager.TaskDescription: android.graphics.Bitmap loadTaskDescriptionIcon(java.lang.String)>
<android.widget.GridLayout: void setRowCount(int)>
<android.widget.RelativeLayout: android.view.ViewGroup.LayoutParams generateDefaultLayoutParams()>
<android.animation.AnimatorSet: void pause()>
<android.net.LinkProperties: java.util.List getAddresses()>
<com.android.internal.widget.LockPatternUtils: void saveLockPassword(java.lang.String,int)>
<android.media.AudioManager: void setMasterMute(boolean)>
<android.widget.AlphabetIndexer: int getSectionForPosition(int)>
<com.android.internal.statusbar.StatusBarIconList: int size()>
<com.android.internal.content.PackageHelper: java.lang.String[] getSecureContainerList()>
<android.widget.SearchView: void setQuery(java.lang.CharSequence,boolean)>
<android.os.Debug: int getGlobalFreedSize()>
<android.content.ComponentCallbacks2: void onTrimMemory(int)>
<android.accounts.AccountAuthenticatorActivity: void finish()>
<android.view.WindowManagerPolicy: void hideBootMessages()>
<android.filterfw.core.FieldPort: void pushFrame(android.filterfw.core.Frame)>
<android.telecom.Call: void splitFromConference()>
<com.android.internal.app.ToolbarActionBar: void setDisplayShowTitleEnabled(boolean)>
<android.bluetooth.IBluetooth: boolean setPin(android.bluetooth.BluetoothDevice,boolean,int,byte[])>
<com.android.internal.os.HandlerCaller.Callback: void executeMessage(android.os.Message)>
<android.app.Notification.Style: void populateContentView(android.app.Notification)>
<android.webkit.WebChromeClient: void onPermissionRequestCanceled(android.webkit.PermissionRequest)>
<android.widget.SimpleExpandableListAdapter: java.lang.Object getChild(int,int)>
<android.app.backup.BackupManager: void setBackupEnabled(boolean)>
<com.android.internal.os.BatteryStatsImpl.Uid: void noteWifiScanStartedLocked(long)>
<android.media.tv.TvStreamConfig.Builder: android.media.tv.TvStreamConfig build()>
<android.content.pm.IPackageInstallerCallback: void onSessionProgressChanged(int,float)>
<android.service.persistentdata.IPersistentDataBlockService: int getDataBlockSize()>
<com.google.android.gles_jni.EGLImpl: boolean eglInitialize(javax.microedition.khronos.egl.EGLDisplay,int[])>
<android.hardware.camera2.marshal.MarshalHelpers: java.lang.String toStringNativeType(int)>
<com.android.internal.util.StateMachine.LogRec: long getTime()>
<android.app.ActivityManager.TaskDescription: java.lang.String toString()>
<android.filterfw.core.FilterSurfaceView: void bindToListener(android.view.SurfaceHolder.Callback,android.filterfw.core.GLEnvironment)>
<android.media.session.MediaSession: void setCallback(android.media.session.MediaSession.Callback,android.os.Handler)>
<android.widget.VideoView: void <init>(android.content.Context)>
<android.net.LocalSocket: android.net.LocalSocketAddress getLocalSocketAddress()>
<android.renderscript.Double2: android.renderscript.Double2 mul(android.renderscript.Double2,double)>
<android.view.accessibility.AccessibilityEvent: int getEventType()>
<android.view.View: void invalidateParentCaches()>
<android.bluetooth.BluetoothGattDescriptor: void <init>(java.util.UUID,int)>
<android.renderscript.AllocationAdapter: void subData2D(int,int,int,int,int[])>
<android.text.method.MetaKeyKeyListener: void resetLockedMeta(android.text.Spannable)>
<android.speech.SpeechRecognizer: android.speech.SpeechRecognizer createSpeechRecognizer(android.content.Context,android.content.ComponentName)>
<android.content.Context: void sendOrderedBroadcast(android.content.Intent,java.lang.String)>
<android.provider.Contacts.People: void markAsContacted(android.content.ContentResolver,long)>
<android.webkit.WebViewProvider: void loadData(java.lang.String,java.lang.String,java.lang.String)>
<android.media.MediaCodec: android.media.MediaCodec createDecoderByType(java.lang.String)>
<android.webkit.WebSettings: android.webkit.WebSettings.ZoomDensity getDefaultZoom()>
<android.opengl.GLES30: void glClearBufferfi(int,int,float,int)>
<com.android.internal.os.BatteryStatsImpl.Uid.Pkg.Serv: int getLaunches(int)>
<android.content.pm.RegisteredServicesCache: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int)>
<android.media.CamcorderProfile: android.media.CamcorderProfile get(int)>
<android.renderscript.Long4: void set(android.renderscript.Long4)>
<android.app.Fragment: android.app.Activity getActivity()>
<android.widget.SlidingDrawer: void onLayout(boolean,int,int,int,int)>
<com.android.internal.app.ToolbarActionBar: void setElevation(float)>
<android.transition.Slide: void captureEndValues(android.transition.TransitionValues)>
<android.bluetooth.le.ScanResult: void <init>(android.bluetooth.BluetoothDevice,android.bluetooth.le.ScanRecord,int,long)>
<android.opengl.GLES20: void glUniformMatrix3fv(int,int,boolean,float[],int)>
<com.android.internal.telephony.ISub: java.util.List getSubInfoUsingSlotId(int)>
<android.view.WindowManagerPolicy: void removeStartingWindow(android.os.IBinder,android.view.View)>
<android.content.IContentProvider: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)>
<android.telecom.RemoteConference: java.util.List getConferenceableConnections()>
<com.android.internal.http.multipart.FilePart: void sendData(java.io.OutputStream)>
<com.android.internal.widget.PasswordEntryKeyboardHelper: void swipeRight()>
<android.transition.Rotate: void captureEndValues(android.transition.TransitionValues)>
<android.telecom.Call.Details: android.os.Bundle getExtras()>
<android.webkit.WebSettings: boolean getJavaScriptCanOpenWindowsAutomatically()>
<android.content.ClipData: void <init>(java.lang.CharSequence,java.lang.String[],android.content.ClipData.Item)>
<com.android.internal.view.menu.SubMenuBuilder: android.view.Menu getParentMenu()>
<android.app.Activity: void setProgressBarVisibility(boolean)>
<android.content.pm.PackageManager: java.lang.String[] getSystemSharedLibraryNames()>
<android.text.method.MovementMethod: boolean onKeyOther(android.widget.TextView,android.text.Spannable,android.view.KeyEvent)>
<android.opengl.GLSurfaceView: void requestRender()>
<android.graphics.Outline: void setEmpty()>
<android.app.backup.RestoreSession: void endRestoreSession()>
<android.content.pm.PackageManager: void clearCrossProfileIntentFilters(int)>
<android.animation.Animator: void setupEndValues()>
<android.media.IAudioService: void setVolumeController(android.media.IVolumeController)>
<android.app.Activity: boolean hasWindowFocus()>
<android.view.accessibility.AccessibilityNodeInfo: void setEnabled(boolean)>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: android.graphics.Rect getConstantPadding()>
<android.database.DatabaseUtils: void readExceptionFromParcel(android.os.Parcel)>
<android.telephony.PreciseCallState: int getRingingCallState()>
<com.android.internal.app.ExternalMediaFormatActivity: void onCreate(android.os.Bundle)>
<android.webkit.MimeTypeMap: android.webkit.MimeTypeMap getSingleton()>
<android.content.ContentProviderNative: java.lang.String getProviderName()>
<android.telephony.Rlog: int println(int,java.lang.String,java.lang.String)>
<android.net.MobileDataStateTracker: void enableMobileProvisioning(java.lang.String)>
<android.accounts.IAccountManager: android.accounts.Account[] getAccountsAsUser(java.lang.String,int)>
<android.widget.RelativeLayout: void setIgnoreGravity(int)>
<android.opengl.GLES30: void glGenSamplers(int,java.nio.IntBuffer)>
<com.android.internal.location.GpsNetInitiatedHandler: boolean getSuplEsEnabled()>
<android.content.pm.PackageItemInfo: android.graphics.drawable.Drawable loadDefaultBanner(android.content.pm.PackageManager)>
<android.content.res.TypedArray: android.content.res.Resources getResources()>
<android.graphics.drawable.LayerDrawable: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>
<android.service.notification.INotificationListener: void onNotificationRemoved(android.service.notification.IStatusBarNotificationHolder,android.service.notification.NotificationRankingUpdate)>
<android.os.BatteryStats.Counter: void logState(android.util.Printer,java.lang.String)>
<android.widget.VideoView: void addSubtitleSource(java.io.InputStream,android.media.MediaFormat)>
<com.android.internal.telephony.IPhoneStateListener: void onOtaspChanged(int)>
<android.text.method.DateKeyListener: android.text.method.DateKeyListener getInstance()>
<android.filterfw.core.SerializedFrame: java.lang.String toString()>
<android.app.Instrumentation: boolean isProfiling()>
<android.accounts.AccountAuthenticatorResponse: int describeContents()>
<android.widget.DigitalClock: void onDetachedFromWindow()>
<android.util.SparseBooleanArray: void <init>(int)>
<android.widget.ActionMenuView: void onConfigurationChanged(android.content.res.Configuration)>
<android.database.sqlite.SQLiteCursor: void <init>(android.database.sqlite.SQLiteCursorDriver,java.lang.String,android.database.sqlite.SQLiteQuery)>
<android.renderscript.Double4: void copyTo(double[],int)>
<android.text.method.DigitsKeyListener: char[] getAcceptedChars()>
<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager getInstance()>
<android.renderscript.Long2: android.renderscript.Long2 mod(android.renderscript.Long2,android.renderscript.Long2)>
<android.transition.TransitionSet: android.transition.TransitionSet removeTransition(android.transition.Transition)>
<android.telecom.RemoteConference.Callback: void onDisconnected(android.telecom.RemoteConference,android.telecom.DisconnectCause)>
<android.app.Dialog: void unregisterForContextMenu(android.view.View)>
<android.media.MediaCodecInfo.CodecCapabilities: boolean isFeatureRequired(java.lang.String)>
<android.renderscript.Matrix4f: float get(int,int)>
<android.os.Bundle: boolean hasFileDescriptors()>
<android.util.Spline.MonotoneCubicSpline: float interpolate(float)>
<android.net.NetworkCapabilities: void setNetworkSpecifier(java.lang.String)>
<com.android.internal.util.ArrayUtils: byte[] newUnpaddedByteArray(int)>
<android.location.Country: void writeToParcel(android.os.Parcel,int)>
<android.media.MediaMetadata: android.graphics.Bitmap getBitmap(java.lang.String)>
<android.view.WindowManagerPolicy: boolean performHapticFeedbackLw(android.view.WindowManagerPolicy.WindowState,int,boolean)>
<android.app.admin.IDevicePolicyManager: boolean resetPassword(java.lang.String,int,int)>
<android.net.dhcp.DhcpStateMachine: void onAckReceived(java.net.InetAddress,java.net.InetAddress,java.net.InetAddress,java.util.List,java.net.InetAddress,int)>
<android.app.ActivityManagerNative: void broadcastStickyIntent(android.content.Intent,java.lang.String,int)>
<android.app.TabActivity: void setDefaultTab(int)>
<android.net.wifi.p2p.WifiP2pGroup: void <init>(android.net.wifi.p2p.WifiP2pGroup)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setTitle(java.lang.CharSequence)>
<android.app.RemoteInput: int describeContents()>
<android.renderscript.Matrix2f: void set(int,int,float)>
<com.google.android.gles_jni.GLImpl: void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<com.android.internal.widget.PasswordEntryKeyboardHelper: void swipeLeft()>
<android.view.WindowId: void <init>(android.view.IWindowId)>
<android.media.AudioTrack: int getNativeOutputSampleRate(int)>
<android.hardware.usb.UsbConfiguration: void <init>(int,java.lang.String,int,int)>
<android.webkit.WebViewProvider: void savePassword(java.lang.String,java.lang.String,java.lang.String)>
<android.provider.CalendarContract.CalendarAlerts: long findNextAlarmTime(android.content.ContentResolver,long)>
<android.hardware.camera2.legacy.CameraDeviceState: void setCameraDeviceCallbacks(android.os.Handler,android.hardware.camera2.legacy.CameraDeviceState.CameraDeviceStateListener)>
<android.renderscript.Int3: void div(int)>
<android.print.PrintJobInfo.Builder: void putAdvancedOption(java.lang.String,java.lang.String)>
<android.net.wifi.WifiConfiguration: android.net.IpConfiguration.IpAssignment getIpAssignment()>
<android.content.ContentValues: java.lang.Boolean getAsBoolean(java.lang.String)>
<android.text.method.DateTimeKeyListener: android.text.method.DateTimeKeyListener getInstance()>
<android.view.ViewConfiguration: int getScaledWindowTouchSlop()>
<android.content.ClipData: void toShortString(java.lang.StringBuilder)>
<android.graphics.ColorMatrix: void setConcat(android.graphics.ColorMatrix,android.graphics.ColorMatrix)>
<android.os.BatteryStats: boolean getIsOnBattery()>
<android.renderscript.Double3: android.renderscript.Double3 add(android.renderscript.Double3,double)>
<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int)>
<android.preference.ListPreference: java.lang.CharSequence getSummary()>
<android.print.IPrintSpoolerCallbacks: void onSetPrintJobStateResult(boolean,int)>
<android.os.Process: void setArgV0(java.lang.String)>
<android.app.DatePickerDialog: void <init>(android.content.Context,int,android.app.DatePickerDialog.OnDateSetListener,int,int,int)>
<android.graphics.drawable.NinePatchDrawable: boolean isStateful()>
<com.android.internal.telephony.ITelephonyRegistry: void notifyCallForwardingChanged(boolean)>
<android.media.MediaRecorder: void setPreviewDisplay(android.view.Surface)>
<android.content.RestrictionsManager: void <init>(android.content.Context,android.content.IRestrictionsManager)>
<android.content.res.TypedArray: float getDimension(int,float)>
<android.widget.TextView: android.content.UndoManager getUndoManager()>
<android.graphics.drawable.ShapeDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>
<android.app.ActivityThread: java.lang.String currentPackageName()>
<android.print.IPrintSpoolerCallbacks: void onSetPrintJobTagResult(boolean,int)>
<android.widget.LinearLayout: void setGravity(int)>
<android.print.PrintDocumentAdapter: void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter.LayoutResultCallback,android.os.Bundle)>
<android.bluetooth.BluetoothGattDescriptor: byte[] getValue()>
<android.os.Looper: android.os.MessageQueue myQueue()>
<android.database.sqlite.SQLiteDatabaseConfiguration: void updateParametersFrom(android.database.sqlite.SQLiteDatabaseConfiguration)>
<android.media.IAudioService: int getRingerMode()>
<android.transition.Rotate: android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)>
<android.view.LayoutInflater: android.view.View inflate(org.xmlpull.v1.XmlPullParser,android.view.ViewGroup,boolean)>
<android.opengl.GLES31: void glProgramUniformMatrix2x4fv(int,int,int,boolean,float[],int)>
<android.util.JsonWriter: void close()>
<android.nfc.NdefRecord: android.nfc.NdefRecord createUri(java.lang.String)>
<android.renderscript.Element: android.renderscript.Element A_8(android.renderscript.RenderScript)>
<android.renderscript.RSSurfaceView: void <init>(android.content.Context)>
<com.android.internal.telecom.IConnectionService: void hold(java.lang.String)>
<android.opengl.GLES30: void glClearBufferfv(int,int,float[],int)>
<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>
<android.hardware.camera2.legacy.RequestHandlerThread: void <init>(java.lang.String,android.os.Handler.Callback)>
<android.hardware.Sensor: java.lang.String getName()>
<android.net.wifi.WifiManager: boolean isNanSupported()>
<android.filterpacks.base.GLTextureSource: void tearDown(android.filterfw.core.FilterContext)>
<android.opengl.GLES11: void glPointParameterf(int,float)>
<android.renderscript.Program: java.lang.String getTextureName(int)>
<com.android.internal.net.NetworkStatsFactory: void assertEquals(android.net.NetworkStats,android.net.NetworkStats)>
<android.gesture.GestureStroke: android.graphics.Path getPath()>
<android.speech.RecognitionService: void onStartListening(android.content.Intent,android.speech.RecognitionService.Callback)>
<android.graphics.drawable.InsetDrawable: boolean setVisible(boolean,boolean)>
<android.service.notification.Condition: boolean equals(java.lang.Object)>
<com.android.internal.util.StateMachine: void quitNow()>
<android.renderscript.Short4: android.renderscript.Short4 sub(android.renderscript.Short4,short)>
<android.app.ActivityView: void startActivity(android.content.IntentSender)>
<android.widget.HeaderViewListAdapter: void registerDataSetObserver(android.database.DataSetObserver)>
<android.os.Bundle: void putCharSequenceArray(java.lang.String,java.lang.CharSequence[])>
<android.graphics.RectF: void <init>(android.graphics.Rect)>
<android.opengl.GLES11: void glGetBooleanv(int,java.nio.IntBuffer)>
<android.transition.TransitionSet: android.transition.Transition excludeTarget(android.view.View,boolean)>
<android.view.WindowCallbackWrapper: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode.Callback)>
<android.app.LoadedApk: java.lang.String[] getOverlayDirs()>
<android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl: void setEnabled(boolean)>
<android.text.style.ImageSpan: void <init>(android.graphics.drawable.Drawable)>
<android.media.ExifInterface: void <init>(java.lang.String)>
<android.app.ProgressDialog: void setProgressNumberFormat(java.lang.String)>
<android.view.ViewParent: void onNestedScroll(android.view.View,int,int,int,int)>
<com.google.android.gles_jni.GLImpl: void glClearDepthx(int)>
<android.opengl.GLES30: void glTexImage3D(int,int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.renderscript.Allocation: void copy3DRangeFrom(int,int,int,int,int,int,android.renderscript.Allocation,int,int,int)>
<android.net.INetworkScoreService: boolean setActiveScorer(java.lang.String)>
<android.view.View: boolean overScrollBy(int,int,int,int,int,int,int,int,boolean)>
<android.database.AbstractCursor: int getColumnCount()>
<android.webkit.WebIconDatabase: void removeAllIcons()>
<android.view.accessibility.AccessibilityNodeInfo: void setLabelFor(android.view.View,int)>
<android.hardware.location.GeofenceHardwareService: boolean onUnbind(android.content.Intent)>
<android.app.ActivityManagerProxy: void activityIdle(android.os.IBinder,android.content.res.Configuration,boolean)>
<android.net.INetworkStatsService: android.net.INetworkStatsSession openSession()>
<android.view.accessibility.AccessibilityManager: boolean isEnabled()>
<android.widget.AbsSeekBar: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.accessibilityservice.AccessibilityServiceInfo: int describeContents()>
<android.widget.AbsListView: void setFilterText(java.lang.String)>
<android.telephony.cdma.CdmaSmsCbProgramData: int getLanguage()>
<android.app.backup.BackupDataInput: java.lang.String getKey()>
<android.content.IContentService: java.util.List getCurrentSyncs()>
<android.view.View: void invalidateOutline()>
<android.opengl.GLES20: void glUniform2i(int,int,int)>
<com.android.internal.util.XmlUtils: java.lang.Object readValueXml(org.xmlpull.v1.XmlPullParser,java.lang.String[])>
<android.media.tv.TvInputService.Session: boolean onTrackballEvent(android.view.MotionEvent)>
<android.app.IActivityManager: void setImmersive(android.os.IBinder,boolean)>
<android.content.ContextWrapper: int getUserId()>
<com.android.internal.util.FileRotator.Writer: void write(java.io.OutputStream)>
<android.telecom.Connection: boolean getAudioModeIsVoip()>
<android.app.FragmentManagerImpl: int reverseTransit(int)>
<com.android.internal.preference.YesNoPreference: boolean shouldDisableDependents()>
<android.appwidget.AppWidgetManager: void bindAppWidgetId(int,android.content.ComponentName)>
<android.accessibilityservice.AccessibilityServiceInfo: void setComponentName(android.content.ComponentName)>
<android.view.ViewTreeObserver.OnGlobalLayoutListener: void onGlobalLayout()>
<android.print.PrinterCapabilitiesInfo: java.lang.String toString()>
<android.bluetooth.BluetoothHeadsetClient: boolean rejectCall(android.bluetooth.BluetoothDevice)>
<android.telecom.ConnectionService: android.os.IBinder onBind(android.content.Intent)>
<android.os.AsyncTask: void onPostExecute(java.lang.Object)>
<com.android.internal.app.WindowDecorActionBar.TabImpl: android.app.ActionBar.Tab setIcon(int)>
<android.view.Menu: boolean isShortcutKey(int,android.view.KeyEvent)>
<android.telephony.TelephonyManager: int[] supplyPinReportResult(java.lang.String)>
<android.os.StrictMode.VmPolicy.Builder: android.os.StrictMode.VmPolicy.Builder detectActivityLeaks()>
<android.content.AbstractThreadedSyncAdapter: void <init>(android.content.Context,boolean)>
<android.telecom.ConnectionService: void addConference(android.telecom.Conference)>
<com.android.internal.content.PackageHelper: boolean unMountSdDir(java.lang.String)>
<android.mtp.MtpDevice: byte[] getObject(int,int)>
<android.graphics.Paint: android.graphics.PathEffect setPathEffect(android.graphics.PathEffect)>
<android.nfc.NfcAdapter: boolean enable()>
<android.graphics.Matrix: boolean postRotate(float,float,float)>
<android.net.IpPrefix: int describeContents()>
<android.view.WindowManagerPolicy: void wakingUp()>
<android.telephony.PhoneStateListener: void onCellLocationChanged(android.telephony.CellLocation)>
<android.hardware.camera2.legacy.RequestThreadManager: int submitCaptureRequests(java.util.List,boolean,android.hardware.camera2.utils.LongParcelable)>
<android.view.View: int getScrollY()>
<android.media.MediaRouter.RouteCategory: boolean isSystem()>
<android.media.AudioDevice: boolean isInputDevice()>
<com.android.internal.view.menu.MenuPresenter: boolean collapseItemActionView(com.android.internal.view.menu.MenuBuilder,com.android.internal.view.menu.MenuItemImpl)>
<android.filterfw.core.OutputPort: void pushFrame(android.filterfw.core.Frame)>
<android.telephony.TelephonyManager: int getLteOnCdmaMode()>
<android.media.RemoteControlClient.MetadataEditor: void clear()>
<android.telephony.PhoneStateListener: void <init>(long,android.os.Looper)>
<com.android.internal.telephony.SmsRawData: void writeToParcel(android.os.Parcel,int)>
<android.text.Selection: int getSelectionStart(java.lang.CharSequence)>
<android.preference.PreferenceScreen: void onRestoreInstanceState(android.os.Parcelable)>
<android.widget.TableLayout.LayoutParams: void setBaseAttributes(android.content.res.TypedArray,int,int)>
<android.net.BaseNetworkStateTracker: android.os.Handler getTargetHandler()>
<android.widget.Editor: void stopSelectionActionMode()>
<android.media.session.MediaSession.Callback: void onStop()>
<android.app.Activity: void startActivityAsCaller(android.content.Intent,android.os.Bundle,int)>
<android.net.NetworkUtils: boolean runDhcp(java.lang.String,android.net.DhcpResults)>
<android.animation.Keyframe: android.animation.Keyframe ofObject(float,java.lang.Object)>
<android.printservice.PrinterDiscoverySession: void removePrinters(java.util.List)>
<android.os.BatteryStats.Uid: android.util.SparseArray getSensorStats()>
<com.android.internal.widget.LockScreenWidgetInterface: boolean providesClock()>
<android.hardware.location.GeofenceHardware: boolean registerForMonitorStateChangeCallback(int,android.hardware.location.GeofenceHardwareMonitorCallback)>
<android.widget.ActivityChooserModel.ActivityChooserModelClient: void setActivityChooserModel(android.widget.ActivityChooserModel)>
<android.renderscript.Script: void setTimeZone(java.lang.String)>
<android.widget.HorizontalScrollView: void requestLayout()>
<android.net.http.Headers: java.lang.String getExpires()>
<android.telephony.PhoneNumberUtils: boolean isPotentialEmergencyNumber(java.lang.String,java.lang.String)>
<android.app.job.JobScheduler: void cancelAll()>
<com.android.internal.app.WindowDecorActionBar.ActionModeImpl: void setCustomView(android.view.View)>
<android.app.job.JobInfo: int describeContents()>
<android.media.AudioAttributes: void writeToParcel(android.os.Parcel,int)>
<android.preference.PreferenceScreen: void onClick()>
<android.opengl.GLES10: void glTexEnvxv(int,int,int[],int)>
<android.media.IAudioService: void setMasterMute(boolean,int,java.lang.String,android.os.IBinder)>
<android.view.animation.OvershootInterpolator: void <init>(float)>
<android.os.DropBoxManager: void addData(java.lang.String,byte[],int)>
<android.filterpacks.imageproc.FisheyeFilter: void fieldPortValueUpdated(java.lang.String,android.filterfw.core.FilterContext)>
<com.android.internal.telecom.IInCallAdapter: void stopDtmfTone(java.lang.String)>
<android.util.AndroidRuntimeException: void <init>(java.lang.String)>
<com.android.internal.widget.SizeAdaptiveLayout: com.android.internal.widget.SizeAdaptiveLayout.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.media.AudioFormat.Builder: android.media.AudioFormat build()>
<android.webkit.WebChromeClient: boolean onJsTimeout()>
<android.net.wifi.WifiManager: boolean pingSupplicant()>
<android.bluetooth.BluetoothGatt: boolean readRemoteRssi()>
<android.util.TimeFormatException: void <init>(java.lang.String)>
<android.transition.Transition: long getDuration()>
<android.opengl.EGL14: boolean eglCopyBuffers(android.opengl.EGLDisplay,android.opengl.EGLSurface,int)>
<android.widget.TabWidget: void onFocusChange(android.view.View,boolean)>
<android.view.ViewGroup: int getDescendantFocusability()>
<android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>
<com.android.internal.util.XmlUtils.WriteMapCallback: void writeUnknownObject(java.lang.Object,java.lang.String,org.xmlpull.v1.XmlSerializer)>
<android.telephony.CellSignalStrengthLte: void initialize(android.telephony.SignalStrength,int)>
<android.telephony.SignalStrength: int getLteAsuLevel()>
<android.os.DropBoxManager.Entry: void <init>(java.lang.String,long,android.os.ParcelFileDescriptor,int)>
<android.text.style.BulletSpan: void <init>(android.os.Parcel)>
<android.media.MediaDescription: void writeToParcel(android.os.Parcel,int)>
<android.os.FileUtils: java.lang.String rewriteAfterRename(java.io.File,java.io.File,java.lang.String)>
<android.widget.Switch: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.internal.widget.ToolbarWidgetWrapper: void setLogo(android.graphics.drawable.Drawable)>
<android.view.WindowManagerPolicy.WindowState: boolean hasDrawnLw()>
<android.content.pm.PackageCleanItem: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.telephony.ISms: void sendData(java.lang.String,java.lang.String,java.lang.String,int,byte[],android.app.PendingIntent,android.app.PendingIntent)>
<android.provider.MediaStore.Audio.Playlists.Members: boolean moveItem(android.content.ContentResolver,long,int,int)>
<android.bluetooth.IBluetooth: int getDiscoverableTimeout()>
<com.android.internal.widget.LockPatternUtilsCache: boolean checkVoldPassword(int)>
<android.content.IntentFilter: java.util.Iterator categoriesIterator()>
<com.android.internal.widget.ActionBarView: android.os.Parcelable onSaveInstanceState()>
<android.telecom.Response: void onResult(java.lang.Object,java.lang.Object[])>
<android.media.TtmlRenderingWidget: void setVisible(boolean)>
<android.graphics.drawable.RippleDrawable: void setHotspot(float,float)>
<android.provider.MediaStore.Video: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[])>
<android.app.IActivityManager: void killAllBackgroundProcesses()>
<android.view.View: void setBackgroundTintList(android.content.res.ColorStateList)>
<com.android.internal.widget.PreferenceImageView: void onMeasure(int,int)>
<android.net.NetworkKey: void writeToParcel(android.os.Parcel,int)>
<android.telephony.CellIdentityWcdma: int getCid()>
<android.net.NetworkStatsHistory.DataStreamUtils: long[] readFullLongArray(java.io.DataInputStream)>
<android.accounts.IAccountManager: void updateCredentials(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,android.os.Bundle)>
<com.android.internal.widget.ActionBarView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.hardware.Camera.Parameters: void setJpegThumbnailQuality(int)>
<android.media.audiofx.PresetReverb.Settings: void <init>(java.lang.String)>
<android.location.GpsMeasurement: void resetAzimuthUncertaintyInDeg()>
<android.telecom.PhoneAccountHandle: android.content.ComponentName getComponentName()>
<android.view.ViewRootImpl: android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect)>
<android.graphics.Region: boolean op(android.graphics.Rect,android.graphics.Region.Op)>
<android.app.ActivityManager: int staticGetMemoryClass()>
<android.util.AttributeSet: java.lang.String getPositionDescription()>
<android.filterfw.core.FrameManager: android.filterfw.core.FilterContext getContext()>
<android.text.style.QuoteSpan: void writeToParcel(android.os.Parcel,int)>
<android.net.wifi.p2p.WifiP2pInfo: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.view.menu.MenuBuilder: boolean hasVisibleItems()>
<com.android.internal.widget.multiwaveview.GlowPadView.OnTriggerListener: void onReleased(android.view.View,int)>
<com.android.internal.widget.IRemoteViewsFactory: android.widget.RemoteViews getLoadingView()>
<android.hardware.camera2.utils.CameraRuntimeException: int getReason()>
<android.net.VpnService.Builder: android.net.VpnService.Builder addRoute(java.lang.String,int)>
<android.widget.SearchView: void setQueryRefinementEnabled(boolean)>
<android.view.WindowInfo: void recycle()>
<android.view.WindowInfo: android.view.WindowInfo obtain(android.view.WindowInfo)>
<android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int)>
<android.nfc.tech.MifareClassic: int sectorToBlock(int)>
<android.graphics.drawable.AnimatedRotateDrawable: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>
<android.filterpacks.ui.SurfaceRenderFilter: void open(android.filterfw.core.FilterContext)>
<android.accounts.ChooseTypeAndAccountActivity: void onCreate(android.os.Bundle)>
<android.util.FastImmutableArraySet: java.util.Iterator iterator()>
<android.app.admin.DevicePolicyManager: boolean hasCaCertInstalled(android.content.ComponentName,byte[])>
<android.widget.TextView: void setLinkTextColor(android.content.res.ColorStateList)>
<android.nfc.NdefRecord: android.net.Uri toUri()>
<android.graphics.PixelFormat: void getPixelFormatInfo(int,android.graphics.PixelFormat)>
<android.view.inputmethod.InputMethodSubtypeArray: void <init>(android.os.Parcel)>
<android.view.KeyEvent: boolean isNumLockOn()>
<android.hardware.camera2.utils.ParamsUtils: android.util.Size createSize(android.graphics.Rect)>
<android.widget.ViewFlipper: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.view.animation.LayoutAnimationController: boolean isDone()>
<android.text.style.TtsSpan: java.lang.String getType()>
<android.view.IWindowSessionCallback: void onAnimatorScaleChanged(float)>
<android.media.IAudioService: boolean isBluetoothA2dpOn()>
<android.hardware.camera2.impl.CallbackProxies.SessionStateCallbackProxy: void onConfigured(android.hardware.camera2.CameraCaptureSession)>
<android.emoji.EmojiFactory: void finalize()>
<android.app.Activity: void setProgress(int)>
<android.service.notification.NotificationListenerService.Ranking: boolean isAmbient()>
<android.view.ViewGroup: void dispatchDisplayHint(int)>
<android.provider.MediaStore.Images.Thumbnails: void cancelThumbnailRequest(android.content.ContentResolver,long)>
<com.android.internal.widget.ActionBarView: void setLogo(int)>
<android.content.RestrictionEntry: void <init>(java.lang.String,java.lang.String)>
<com.android.internal.telecom.IConnectionServiceAdapter: void addConferenceCall(java.lang.String,android.telecom.ParcelableConference)>
<android.bluetooth.BluetoothHeadset: boolean isAudioOn()>
<android.net.nsd.NsdServiceInfo: int getPort()>
<android.hardware.location.ActivityRecognitionEvent: int describeContents()>
<android.media.IAudioService: void unloadSoundEffects()>
<android.content.pm.ContainerEncryptionParams: long getAuthenticatedDataStart()>
<android.telephony.TelephonyManager: boolean nvWriteItem(int,java.lang.String)>
<android.hardware.Camera: void setZoomChangeListener(android.hardware.Camera.OnZoomChangeListener)>
<android.os.UserManager: void setUserRestriction(java.lang.String,boolean)>
<android.hardware.camera2.legacy.RequestHolder: long getFrameNumber()>
<android.graphics.drawable.ColorDrawable: void <init>(int)>
<android.content.ComponentName: java.lang.String flattenToShortString()>
<android.os.BaseBundle: void remove(java.lang.String)>
<android.security.AndroidKeyStore: void engineStore(java.io.OutputStream,char[])>
<android.database.sqlite.SQLiteMisuseException: void <init>(java.lang.String)>
<android.net.NetworkStatsHistory: void <init>(long)>
<android.app.job.JobService: boolean onStopJob(android.app.job.JobParameters)>
<android.net.MobileDataStateTracker: void setInternalDataEnable(boolean)>
<android.os.Handler: boolean post(java.lang.Runnable)>
<android.telecom.DisconnectCause: java.lang.String toString()>
<android.os.Trace: void setTracingEnabled(boolean)>
<android.widget.CalendarView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.google.android.gles_jni.GLImpl: void glFrontFace(int)>
<android.net.NetworkScorerAppManager: android.net.NetworkScorerAppManager.NetworkScorerAppData getActiveScorer(android.content.Context)>
<android.widget.AppSecurityPermissions: void <init>(android.content.Context,java.lang.String)>
<android.widget.VideoView: boolean onTrackballEvent(android.view.MotionEvent)>
<android.view.animation.AnimationSet: void initialize(int,int,int,int)>
<android.filterfw.core.FilterContext: android.filterfw.core.Frame fetchFrame(java.lang.String)>
<android.bluetooth.BluetoothGattCallbackWrapper: void onGetCharacteristic(java.lang.String,int,int,android.os.ParcelUuid,int,android.os.ParcelUuid,int)>
<android.renderscript.Allocation: void setFromFieldPacker(int,int,android.renderscript.FieldPacker)>
<android.opengl.GLES10: void glHint(int,int)>
<android.graphics.drawable.Drawable: int resolveOpacity(int,int)>
<android.net.IConnectivityManager: android.net.LinkQualityInfo getActiveLinkQualityInfo()>
<android.net.http.Headers: java.lang.String getRefresh()>
<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()>
<com.android.internal.widget.DecorToolbar: int getDropdownSelectedPosition()>
<android.app.FragmentManagerImpl: boolean popBackStackImmediate(java.lang.String,int)>
<android.app.Activity: android.view.Window getWindow()>
<android.text.method.AllCapsTransformationMethod: void setLengthChangesAllowed(boolean)>
<com.android.internal.view.BaseSurfaceHolder: boolean onAllowLockCanvas()>
<android.net.wifi.WifiManager: void enableAggressiveHandover(int)>
<android.opengl.GLES10: void glTexEnvfv(int,int,java.nio.FloatBuffer)>
<android.net.VpnService.Builder: android.net.VpnService.Builder addSearchDomain(java.lang.String)>
<android.hardware.camera2.params.LensShadingMap: boolean equals(java.lang.Object)>
<android.os.storage.StorageEventListener: void onStorageStateChanged(java.lang.String,java.lang.String,java.lang.String)>
<com.google.android.gles_jni.GLImpl: void glDeleteTextures(int,int[],int)>
<android.renderscript.ProgramStore: android.renderscript.ProgramStore.BlendDstFunc getBlendDstFunc()>
<android.os.BatteryStats: int getDischargeAmount(int)>
<android.content.CursorLoader: java.lang.String getSortOrder()>
<android.util.JsonReader: int nextInt()>
<com.android.internal.app.WindowDecorActionBar: void showForSystem()>
<android.widget.PopupWindow: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.view.textservice.SpellCheckerInfo: android.content.ComponentName getComponent()>
<android.app.IApplicationThread: void dumpService(java.io.FileDescriptor,android.os.IBinder,java.lang.String[])>
<android.media.effect.SingleFilterEffect: void setParameter(java.lang.String,java.lang.Object)>
<android.graphics.drawable.Drawable: boolean setLevel(int)>
<android.hardware.SensorManager: int getSensors()>
<android.os.FileBridge: boolean isClosed()>
<android.media.SubtitleTrack.RenderingWidget: void onAttachedToWindow()>
<android.bluetooth.IBluetoothGattCallback: void onSearchComplete(java.lang.String,int)>
<android.graphics.drawable.ShapeDrawable: int getAlpha()>
<android.hardware.camera2.params.MeteringRectangle: int getHeight()>
<com.android.internal.location.GpsNetInitiatedHandler: boolean getLocationEnabled()>
<android.widget.ActivityChooserModel: android.widget.ActivityChooserModel get(android.content.Context,java.lang.String)>
<android.nfc.tech.MifareClassic: boolean authenticateSectorWithKeyA(int,byte[])>
<android.os.UserManager: android.content.pm.UserInfo createProfileForUser(java.lang.String,int,int)>
<android.widget.AdapterViewAnimator: boolean onRemoteAdapterConnected()>
<android.view.ViewGroup: void removeAllViewsInLayout()>
<android.app.ActionBar: void setCustomView(android.view.View)>
<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>
<android.view.WindowInsets: boolean hasInsets()>
<android.inputmethodservice.InputMethodService: void onExtractedReplaceText(int,int,java.lang.CharSequence)>
<android.database.sqlite.SQLiteCursor: java.lang.String[] getColumnNames()>
<android.widget.RelativeLayout.LayoutParams: void <init>(android.widget.RelativeLayout.LayoutParams)>
<android.bluetooth.BluetoothGattCallbackWrapper: void onReadRemoteRssi(java.lang.String,int,int)>
<android.net.http.HttpAuthHeader: void setProxy()>
<android.widget.ZoomButton: boolean onKeyUp(int,android.view.KeyEvent)>
<android.animation.ValueAnimator: int getRepeatMode()>
<android.os.BatteryStats: int getScreenOnCount(int)>
<android.database.AbstractWindowedCursor: boolean isBlob(int)>
<com.android.internal.widget.LockPatternUtils: void removeUser(int)>
<android.webkit.FindActionModeCallback.NoAction: void onDestroyActionMode(android.view.ActionMode)>
<android.provider.DocumentsProvider: void deleteDocument(java.lang.String)>
<android.os.SELinux: boolean isSELinuxEnabled()>
<android.view.TextureView: void setSurfaceTextureListener(android.view.TextureView.SurfaceTextureListener)>
<android.webkit.WebView.PrivateAccess: void super_computeScroll()>
<android.media.MediaRouter.RouteInfo: void select()>
<android.database.sqlite.SQLiteSession: void beginTransaction(int,android.database.sqlite.SQLiteTransactionListener,int,android.os.CancellationSignal)>
<com.android.internal.widget.DecorToolbar: void setCustomView(android.view.View)>
<com.android.internal.view.menu.MenuBuilder: android.view.SubMenu addSubMenu(int)>
<android.bluetooth.IBluetoothA2dpSink: boolean disconnect(android.bluetooth.BluetoothDevice)>
<android.view.WindowManagerGlobal: void addView(android.view.View,android.view.ViewGroup.LayoutParams,android.view.Display,android.view.Window)>
<android.widget.TableLayout.LayoutParams: void <init>(int,int,float)>
<android.opengl.GLES10: void glPointSize(float)>
<android.view.inputmethod.InputBinding: int getPid()>
<android.telephony.VoLteServiceState: void fillInNotifierBundle(android.os.Bundle)>
<android.bluetooth.IBluetoothGatt: java.util.List getDevicesMatchingConnectionStates(int[])>
<android.webkit.WebViewProvider.ViewDelegate: void onSizeChanged(int,int,int,int)>
<android.print.PageRange: boolean equals(java.lang.Object)>
<android.widget.TextView: int getMaxWidth()>
<android.net.LinkAddress: boolean isGlobalPreferred()>
<android.opengl.GLES30: void glGetVertexAttribIiv(int,int,int[],int)>
<android.widget.AdapterView: android.view.View getEmptyView()>
<android.widget.Adapter: int getCount()>
<android.media.SoundPool.SoundPoolDelegate: void setVolume(int,float,float)>
<android.webkit.WebViewDatabase: android.webkit.WebViewDatabase getInstance(android.content.Context)>
<android.view.inputmethod.InputConnectionWrapper: boolean reportFullscreenMode(boolean)>
<android.text.style.LeadingMarginSpan.LeadingMarginSpan2: int getLeadingMarginLineCount()>
<android.media.CamcorderProfile: boolean hasProfile(int,int)>
<android.app.IActivityManager: void unregisterProcessObserver(android.app.IProcessObserver)>
<android.os.BatteryStats.HistoryItem: void setTo(android.os.BatteryStats.HistoryItem)>
<android.app.IUiModeManager: void disableCarMode(int)>
<android.graphics.drawable.Drawable.Callback: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>
<android.database.AbstractWindowedCursor: float getFloat(int)>
<android.graphics.drawable.AnimatedRotateDrawable: android.graphics.drawable.Drawable mutate()>
<android.content.res.Resources: int selectDefaultTheme(int,int)>
<android.os.Bundle: void clear()>
<com.android.internal.util.StateMachine: android.os.Handler getHandler()>
<android.net.LinkQualityInfo: void setLastDataSampleTime(long)>
<android.hardware.camera2.params.RggbChannelVector: float getGreenOdd()>
<android.telecom.PhoneAccount: android.telecom.PhoneAccountHandle getAccountHandle()>
<android.view.ViewRootImpl: void createContextMenu(android.view.ContextMenu)>
<android.os.Debug.MemoryInfo: int getTotalSharedDirty()>
<com.android.internal.logging.AndroidHandler: void publish(java.util.logging.Logger,java.lang.String,java.util.logging.Level,java.lang.String)>
<com.google.android.gles_jni.GLImpl: void glDeleteTextures(int,java.nio.IntBuffer)>
<android.app.IActivityManager: boolean profileControl(java.lang.String,int,boolean,android.app.ProfilerInfo,int)>
<android.app.LocalActivityManager: void dispatchResume()>
<android.app.ApplicationThreadProxy: void scheduleWindowVisibility(android.os.IBinder,boolean)>
<android.graphics.drawable.ClipDrawable: void setTintList(android.content.res.ColorStateList)>
<com.android.internal.os.BatteryStatsImpl.Timer: void onTimeStopped(long,long,long)>
<android.app.ActivityManagerProxy: boolean isIntentSenderAnActivity(android.content.IIntentSender)>
<android.hardware.camera2.impl.CameraCaptureSessionImpl: void abortCaptures()>
<android.os.Process: int getParentPid(int)>
<android.view.inputmethod.InputMethodInfo: int hashCode()>
<android.nfc.Tag: void writeToParcel(android.os.Parcel,int)>
<android.hardware.camera2.legacy.CaptureCollector: void <init>(int,android.hardware.camera2.legacy.CameraDeviceState)>
<com.android.internal.os.BatteryStatsImpl.Timer: int computeCurrentCountLocked()>
<android.service.notification.NotificationListenerService: void onNotificationRemoved(android.service.notification.StatusBarNotification,android.service.notification.NotificationListenerService.RankingMap)>
<android.hardware.camera2.params.StreamConfigurationDuration: int getFormat()>
<android.widget.HorizontalScrollView: void measureChildWithMargins(android.view.View,int,int,int,int)>
<android.net.IpPrefix: void <init>(java.lang.String)>
<android.security.IKeystoreService: int reset()>
<android.view.WindowManager.LayoutParams: java.lang.CharSequence getTitle()>
<android.renderscript.Double4: void addMultiple(android.renderscript.Double4,double)>
<com.android.internal.app.WindowDecorActionBar: void hide()>
<android.net.NetworkCapabilities: java.lang.String getNetworkSpecifier()>
<android.net.NetworkInfo: android.net.NetworkInfo.DetailedState getDetailedState()>
<android.os.BatteryManagerInternal: boolean isPowered(int)>
<android.view.inputmethod.CompletionInfo: java.lang.String toString()>
<android.service.wallpaper.WallpaperService.Engine: int getDesiredMinimumHeight()>
<android.os.AsyncTask: boolean cancel(boolean)>
<android.renderscript.Allocation: android.renderscript.Element getElement()>
<android.animation.Keyframes: java.util.ArrayList getKeyframes()>
<android.graphics.Path: void <init>(android.graphics.Path)>
<android.content.CursorEntityIterator: android.content.Entity next()>
<android.app.Activity: void setImmersive(boolean)>
<android.widget.RadioGroup: void setOnCheckedChangeListener(android.widget.RadioGroup.OnCheckedChangeListener)>
<android.widget.CalendarView.CalendarViewDelegate: void setFocusedMonthDateColor(int)>
<android.preference.Preference: void setWidgetLayoutResource(int)>
<android.filterfw.core.ShaderProgram: void <init>(android.filterfw.core.FilterContext,java.lang.String)>
<android.transition.ChangeBounds: void captureStartValues(android.transition.TransitionValues)>
<android.bluetooth.le.ScanFilter: byte[] getServiceData()>
<android.widget.TimePicker.TimePickerDelegate: void setCurrentHour(java.lang.Integer)>
<android.animation.Animator: boolean isStarted()>
<android.bluetooth.BluetoothMasInstance: java.lang.String getName()>
<android.renderscript.Float2: android.renderscript.Float2 sub(android.renderscript.Float2,float)>
<android.os.DropBoxManager.Entry: void close()>
<android.provider.DocumentsProvider: android.database.Cursor queryDocument(java.lang.String,java.lang.String[])>
<android.view.textservice.SpellCheckerSession: com.android.internal.textservice.ITextServicesSessionListener getTextServicesSessionListener()>
<android.app.DialogFragment: void onDismiss(android.content.DialogInterface)>
<android.app.Activity: void onChildTitleChanged(android.app.Activity,java.lang.CharSequence)>
<android.webkit.WebView: void requestImageRef(android.os.Message)>
<android.telephony.PhoneNumberUtils: boolean isReallyDialable(char)>
<android.content.UndoOperation: boolean hasData()>
<android.util.JsonWriter: void <init>(java.io.Writer)>
<android.view.View: java.lang.String toString()>
<android.app.usage.UsageStatsManager: android.app.usage.UsageEvents queryEvents(long,long)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface.OnClickListener)>
<com.android.internal.app.DisableCarModeActivity: void onCreate(android.os.Bundle)>
<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator alphaBy(float)>
<android.view.DragEvent: void recycle()>
<android.view.ViewParent: boolean onNestedFling(android.view.View,float,float,boolean)>
<android.filterpacks.imageproc.SaturateFilter: android.filterfw.core.FrameFormat getOutputFormat(java.lang.String,android.filterfw.core.FrameFormat)>
<com.android.internal.view.menu.ListMenuItemView: void setChecked(boolean)>
<com.android.internal.os.ProcessCpuTracker: int countStats()>
<android.renderscript.FieldPacker: void addI16(android.renderscript.Short3)>
<com.android.internal.app.WindowDecorActionBar.ActionModeImpl: boolean dispatchOnCreate()>
<android.webkit.URLUtil: boolean isHttpUrl(java.lang.String)>
<android.util.MonthDisplayHelper: int getWeekStartDay()>
<android.text.SpannableStringBuilder: java.lang.String toString()>
<android.service.voice.VoiceInteractionService: android.os.IBinder onBind(android.content.Intent)>
<android.app.Notification.WearableExtender: void <init>(android.app.Notification)>
<android.graphics.Paint: void setStrokeWidth(float)>
<android.opengl.GLES10: void glDrawElements(int,int,int,java.nio.Buffer)>
<android.view.ViewStub: void setOnInflateListener(android.view.ViewStub.OnInflateListener)>
<com.android.internal.os.IDropBoxManagerService: void add(android.os.DropBoxManager.Entry)>
<android.app.ProgressDialog: void setSecondaryProgress(int)>
<android.filterpacks.imageproc.ToRGBAFilter: void process(android.filterfw.core.FilterContext)>
<android.widget.MultiAutoCompleteTextView: void setTokenizer(android.widget.MultiAutoCompleteTextView.Tokenizer)>
<android.media.MediaCodec: void start()>
<android.media.MediaFormat: void setByteBuffer(java.lang.String,java.nio.ByteBuffer)>
<android.app.ApplicationThreadProxy: void schedulePauseActivity(android.os.IBinder,boolean,boolean,int,boolean)>
<android.renderscript.Byte3: void setAt(int,byte)>
<android.location.GpsClock: void resetTimeUncertaintyInNs()>
<android.inputmethodservice.KeyboardView.OnKeyboardActionListener: void onRelease(int)>
<com.android.internal.app.WindowDecorActionBar: int getDisplayOptions()>
<android.media.MediaMetadataEditor: java.lang.Object getObject(int,java.lang.Object)>
<android.opengl.GLSurfaceView: void setEGLContextFactory(android.opengl.GLSurfaceView.EGLContextFactory)>
<android.preference.PreferenceGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.appwidget.AppWidgetManager: void partiallyUpdateAppWidget(int,android.widget.RemoteViews)>
<com.android.internal.widget.ScrollingTabContainerView: void addTab(android.app.ActionBar.Tab,int,boolean)>
<android.hardware.hdmi.HdmiDeviceInfo: void <init>(int,int,int,int,int,java.lang.String)>
<android.widget.AbsListView: void setVerticalScrollbarPosition(int)>
<com.android.internal.backup.LocalTransport: int getNextFullRestoreDataChunk(android.os.ParcelFileDescriptor)>
<android.content.pm.PackageParser: void setSeparateProcesses(java.lang.String[])>
<android.app.FragmentTransaction: android.app.FragmentTransaction replace(int,android.app.Fragment,java.lang.String)>
<android.app.Notification.MediaStyle: void <init>(android.app.Notification.Builder)>
<android.widget.AbsListView: void layoutChildren()>
<com.android.internal.view.menu.ActionMenu: boolean isShortcutKey(int,android.view.KeyEvent)>
<android.provider.Settings.System: boolean putLongForUser(android.content.ContentResolver,java.lang.String,long,int)>
<android.view.WindowManagerPolicy: void setCurrentUserLw(int)>
<android.hardware.camera2.legacy.BurstHolder: int getNumberOfRequests()>
<android.content.ContentResolver: java.io.OutputStream openOutputStream(android.net.Uri,java.lang.String)>
<android.view.ViewGroup: void onChildVisibilityChanged(android.view.View,int,int)>
<android.hardware.camera2.params.RggbChannelVector: boolean equals(java.lang.Object)>
<android.app.ActivityManagerProxy: int stopService(android.app.IApplicationThread,android.content.Intent,java.lang.String,int)>
<android.provider.Settings.Secure: boolean putLongForUser(android.content.ContentResolver,java.lang.String,long,int)>
<android.filterfw.core.Filter: void addProgramPort(java.lang.String,java.lang.String,java.lang.reflect.Field,java.lang.Class,boolean)>
<android.media.tv.ITvInputManagerCallback: void onInputStateChanged(java.lang.String,int)>
<android.graphics.BitmapFactory: android.graphics.Bitmap decodeFileDescriptor(java.io.FileDescriptor,android.graphics.Rect,android.graphics.BitmapFactory.Options)>
<android.net.wifi.WifiManager.WifiLock: void finalize()>
<android.filterpacks.videosrc.SurfaceTextureSource: void <init>(java.lang.String)>
<android.os.IBinder: boolean pingBinder()>
<android.os.Parcel: void writeException(java.lang.Exception)>
<android.webkit.WebChromeClient.FileChooserParams: java.lang.CharSequence getTitle()>
<android.content.pm.PackageInstaller: void registerSessionCallback(android.content.pm.PackageInstaller.SessionCallback)>
<com.android.internal.app.ProcessStats: void printScreenLabelCsv(java.io.PrintWriter,int)>
<android.view.accessibility.AccessibilityNodeInfo: boolean isScrollable()>
<android.content.ClipDescription: boolean hasMimeType(java.lang.String)>
<android.text.BidiFormatter: boolean isRtlContext()>
<android.database.DatabaseUtils: void cursorDoubleToContentValuesIfPresent(android.database.Cursor,android.content.ContentValues,java.lang.String)>
<android.webkit.WebView: void clearClientCertPreferences(java.lang.Runnable)>
<android.widget.CursorTreeAdapter: android.widget.Filter getFilter()>
<android.net.Uri: int hashCode()>
<android.opengl.GLES20: void glActiveTexture(int)>
<android.opengl.GLES20: void glFinish()>
<android.app.admin.IDevicePolicyManager: void removeActiveAdmin(android.content.ComponentName,int)>
<android.location.Criteria: int getPowerRequirement()>
<android.bluetooth.le.AdvertiseSettings.Builder: android.bluetooth.le.AdvertiseSettings.Builder setConnectable(boolean)>
<android.app.IApplicationThread: void dumpProvider(java.io.FileDescriptor,android.os.IBinder,java.lang.String[])>
<android.widget.ExpandableListView: void setAdapter(android.widget.ExpandableListAdapter)>
<android.telecom.Conference: void onPlayDtmfTone(char)>
<android.view.View: boolean isInLayout()>
<android.content.ContentProvider: android.content.Context getContext()>
<android.service.notification.NotificationListenerService: void cancelAllNotifications()>
<android.app.DialogFragment: void dismissAllowingStateLoss()>
<android.webkit.WebSettings: void setSupportZoom(boolean)>
<android.view.Window: android.transition.Scene getContentScene()>
<android.media.session.ISessionController: void stop()>
<android.content.pm.PackageManager: java.util.List queryIntentServicesAsUser(android.content.Intent,int,int)>
<com.android.internal.view.menu.IconMenuView: void onWindowFocusChanged(boolean)>
<android.hardware.SensorManager: boolean cancelTriggerSensorImpl(android.hardware.TriggerEventListener,android.hardware.Sensor,boolean)>
<android.transition.TransitionInflater: android.transition.Transition inflateTransition(int)>
<android.media.AudioAttributes: int toLegacyStreamType(android.media.AudioAttributes)>
<android.os.PatternMatcher: void writeToParcel(android.os.Parcel,int)>
<android.os.RegistrantList: void add(android.os.Handler,int,java.lang.Object)>
<android.drm.DrmManagerClient: int checkRightsStatus(android.net.Uri)>
<android.content.Intent: long[] getLongArrayExtra(java.lang.String)>
<android.os.HandlerThread: void <init>(java.lang.String)>
<android.os.BatteryStats: long getInteractiveTime(long,int)>
<com.android.internal.net.LegacyVpnInfo: int stateFromNetworkInfo(android.net.NetworkInfo)>
<android.content.SyncActivityTooManyDeletes: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<android.content.IContentService: java.util.List getPeriodicSyncs(android.accounts.Account,java.lang.String,android.content.ComponentName)>
<android.telephony.cdma.CdmaSmsCbProgramData: java.lang.String getCategoryName()>
<android.content.Context: java.io.File getExternalFilesDir(java.lang.String)>
<android.media.MediaCodec: android.media.MediaFormat getOutputFormat()>
<android.widget.ViewAnimator: void <init>(android.content.Context)>
<android.content.OperationApplicationException: void <init>(java.lang.Throwable)>
<android.app.Fragment: android.transition.Transition getSharedElementEnterTransition()>
<com.android.internal.app.ProcessStats.ProcessState: void setState(int,int,long,android.util.ArrayMap)>
<com.android.internal.util.ArrayUtils: int[] removeInt(int[],int)>
<android.hardware.Camera.Parameters: boolean isAutoExposureLockSupported()>
<com.android.internal.widget.ToolbarWidgetWrapper: void setNavigationMode(int)>
<android.app.Activity: void onOptionsMenuClosed(android.view.Menu)>
<com.android.internal.widget.ActionBarContextView: void setContentHeight(int)>
<com.android.internal.widget.AutoScrollHelper: com.android.internal.widget.AutoScrollHelper setRelativeVelocity(float,float)>
<android.renderscript.Matrix2f: void loadIdentity()>
<android.provider.DocumentsContract: android.net.Uri renameDocument(android.content.ContentResolver,android.net.Uri,java.lang.String)>
<android.media.AudioManager: void unregisterAudioPortUpdateListener(android.media.AudioManager.OnAudioPortUpdateListener)>
<android.media.tv.ITvInputSessionWrapper: void createOverlayView(android.os.IBinder,android.graphics.Rect)>
<com.android.internal.app.ProcessStats: void writeToParcel(android.os.Parcel,long,int)>
<android.provider.Contacts.Settings: java.lang.String getSetting(android.content.ContentResolver,java.lang.String,java.lang.String)>
<android.os.Parcel: android.util.SparseBooleanArray readSparseBooleanArray()>
<android.hardware.camera2.params.StreamConfigurationMap: boolean equals(java.lang.Object)>
<android.view.accessibility.AccessibilityEvent: int getAction()>
<android.widget.FrameLayout: boolean getMeasureAllChildren()>
<android.app.AppOpsManager: int noteOp(int)>
<android.widget.RemoteViewsService.RemoteViewsFactory: android.widget.RemoteViews getViewAt(int)>
<android.telecom.TelecomManager: boolean hasMultipleCallCapableAccounts()>
<android.app.ActivityManager.StackInfo: java.lang.String toString()>
<android.net.wifi.WifiManager.MulticastLock: java.lang.String toString()>
<android.opengl.Visibility: int frustumCullSpheres(float[],int,float[],int,int,int[],int,int)>
<android.os.BatteryStats: int getCpuSpeedSteps()>
<com.android.internal.widget.LinearLayoutWithDefaultTouchRecepient: boolean dispatchTouchEvent(android.view.MotionEvent)>
<android.net.nsd.NsdServiceInfo: java.lang.String getServiceName()>
<android.content.res.TypedArray: java.lang.CharSequence getText(int)>
<android.content.ContentProvider: java.lang.String getAuthorityWithoutUserId(java.lang.String)>
<android.location.Country: boolean equalsIgnoreSource(android.location.Country)>
<com.android.internal.app.WindowDecorActionBar: void addTab(android.app.ActionBar.Tab,int,boolean)>
<android.appwidget.AppWidgetManager: void updateAppWidget(int,android.widget.RemoteViews)>
<com.android.internal.telecom.IInCallAdapter: void disconnectCall(java.lang.String)>
<com.android.internal.widget.LinearLayoutWithDefaultTouchRecepient: void <init>(android.content.Context)>
<android.graphics.drawable.InsetDrawable: void setColorFilter(android.graphics.ColorFilter)>
<android.accounts.AccountsException: void <init>(java.lang.String,java.lang.Throwable)>
<android.app.ActivityManager: android.app.ActivityManager.TaskThumbnail getTaskThumbnail(int)>
<android.telephony.SignalStrength: int getLevel()>
<android.provider.MediaStore.Images.Media: java.lang.String insertImage(android.content.ContentResolver,java.lang.String,java.lang.String,java.lang.String)>
<android.app.Fragment: void onViewStateRestored(android.os.Bundle)>
<android.service.dreams.DreamService: boolean onPreparePanel(int,android.view.View,android.view.Menu)>
<android.net.RouteInfo: int hashCode()>
<android.database.sqlite.SQLiteDatabase.CustomFunction: void callback(java.lang.String[])>
<android.graphics.RectF: boolean intersects(android.graphics.RectF,android.graphics.RectF)>
<android.view.View: void dispatchSystemUiVisibilityChanged(int)>
<android.view.accessibility.AccessibilityNodeInfo: void setContentDescription(java.lang.CharSequence)>
<com.android.internal.app.AlertController.RecycleListView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.media.IRemoteDisplayProvider: void setCallback(android.media.IRemoteDisplayCallback)>
<android.content.Context: void startActivityAsUser(android.content.Intent,android.os.Bundle,android.os.UserHandle)>
<android.media.audiofx.EnvironmentalReverb: short getRoomHFLevel()>
<android.widget.ExpandableListView: boolean collapseGroup(int)>
<android.view.ActionProvider: void setVisibilityListener(android.view.ActionProvider.VisibilityListener)>
<android.content.ClipData.Item: void <init>(android.net.Uri)>
<android.graphics.drawable.ScaleDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>
<android.app.Activity: android.view.View findViewById(int)>
<com.android.internal.os.TransferPipe: void kill()>
<android.service.wallpaper.WallpaperService.Engine: android.view.SurfaceHolder getSurfaceHolder()>
<android.view.animation.AnticipateOvershootInterpolator: void <init>(float,float)>
<android.widget.TextView: int getShadowColor()>
<android.media.audiofx.EnvironmentalReverb: int getReverbDelay()>
<com.android.internal.view.menu.MenuItemImpl: boolean requiresActionButton()>
<android.hardware.camera2.CameraDevice.StateCallback: void onOpened(android.hardware.camera2.CameraDevice)>
<android.content.Entity: java.util.ArrayList getSubValues()>
<android.webkit.WebViewDatabase: void clearUsernamePassword()>
<android.hardware.display.VirtualDisplay: void resize(int,int,int)>
<android.telecom.Conference: boolean addConnection(android.telecom.Connection)>
<android.location.GpsSatellite: boolean usedInFix()>
<android.ddm.DdmHandleViewDebug: void register()>
<android.media.AudioSystem: int setForceUse(int,int)>
<android.media.AudioService.VolumeController: void loadSettings(android.content.ContentResolver)>
<android.widget.ZoomButtonsController: void setZoomInEnabled(boolean)>
<android.net.wifi.p2p.WifiP2pDevice: void update(android.net.wifi.p2p.WifiP2pDevice)>
<android.view.RenderNode: boolean setRotationY(float)>
<android.animation.Keyframe: float getFraction()>
<android.app.TaskStackBuilder: void startActivities(android.os.Bundle,android.os.UserHandle)>
<android.content.res.Configuration: boolean equals(android.content.res.Configuration)>
<com.android.internal.widget.PreferenceImageView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.net.Uri: void writeToParcel(android.os.Parcel,android.net.Uri)>
<android.graphics.drawable.AnimatedRotateDrawable: void setColorFilter(android.graphics.ColorFilter)>
<android.service.notification.ZenModeConfig: int hashCode()>
<android.net.http.RequestHandle: void setupBasicAuthResponse(boolean,java.lang.String,java.lang.String)>
<android.media.audiofx.LoudnessEnhancer: void <init>(int)>
<com.android.internal.widget.ExploreByTouchHelper: int getFocusedVirtualView()>
<android.location.GpsClock: boolean hasLeapSecond()>
<android.util.AttributeSet: int getAttributeResourceValue(java.lang.String,java.lang.String,int)>
<android.net.wifi.WifiEnterpriseConfig: void resetClientKeyEntry()>
<android.widget.AbsListView: boolean onKeyDown(int,android.view.KeyEvent)>
<android.net.wifi.RttManager: void startRanging(android.net.wifi.RttManager.RttParams[],android.net.wifi.RttManager.RttListener)>
<android.app.Dialog: void hide()>
<android.hardware.hdmi.HdmiRecordListener.TimerStatusData: boolean isProgrammed()>
<android.telephony.TelephonyManager: java.util.List getNeighboringCellInfo()>
<android.app.WallpaperManager: void setWallpaperOffsetSteps(float,float)>
<android.util.Log: int wtf(java.lang.String,java.lang.Throwable)>
<com.android.internal.util.AsyncChannel: void replyToMessage(android.os.Message,int,java.lang.Object)>
<android.hardware.hdmi.HdmiDeviceInfo: java.lang.String toString()>
<android.text.method.AllCapsTransformationMethod: void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect)>
<android.app.IActivityManager: void updatePersistentConfiguration(android.content.res.Configuration)>
<android.nfc.cardemulation.CardEmulation: boolean removeAidsForService(android.content.ComponentName,java.lang.String)>
<android.telephony.ServiceState: int getSystemId()>
<android.text.style.TextAppearanceSpan: android.content.res.ColorStateList getLinkTextColor()>
<android.graphics.drawable.AnimatedRotateDrawable: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>
<android.media.Rating: android.media.Rating newPercentageRating(float)>
<android.speech.tts.TtsEngines: boolean isEngineInstalled(java.lang.String)>
<android.media.MediaDescription.Builder: android.media.MediaDescription.Builder setIconBitmap(android.graphics.Bitmap)>
<android.preference.Preference: void onRestoreInstanceState(android.os.Parcelable)>
<android.opengl.GLES31: void glGenProgramPipelines(int,int[],int)>
<android.app.IUiAutomationConnection: void shutdown()>
<com.google.android.gles_jni.GLImpl: void glGetMaterialxv(int,int,int[],int)>
<android.view.SurfaceHolder: void setFixedSize(int,int)>
<android.media.FaceDetector: int findFaces(android.graphics.Bitmap,android.media.FaceDetector.Face[])>
<android.view.View: int resolveSizeAndState(int,int,int)>
<android.graphics.drawable.Drawable: void setDither(boolean)>
<android.os.Debug: java.lang.String getCallers(int)>
<android.view.accessibility.CaptioningManager: boolean isEnabled()>
<android.view.inputmethod.CompletionInfo: void <init>(long,int,java.lang.CharSequence,java.lang.CharSequence)>
<android.accounts.AccountManager: void <init>(android.content.Context,android.accounts.IAccountManager,android.os.Handler)>
<android.security.IKeystoreService: int is_hardware_backed(java.lang.String)>
<android.widget.CalendarView.CalendarViewDelegate: int getDateTextAppearance()>
<android.graphics.drawable.ClipDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>
<android.view.accessibility.CaptioningManager: float getFontScale()>
<com.android.internal.os.BatteryStatsHelper: void <init>(android.content.Context,boolean)>
<android.filterfw.core.SerializedFrame: void releaseNativeAllocation()>
<android.net.ConnectivityManager: void registerNetworkAgent(android.os.Messenger,android.net.NetworkInfo,android.net.LinkProperties,android.net.NetworkCapabilities,int,android.net.NetworkMisc)>
<android.view.View: boolean canScrollHorizontally(int)>
<android.widget.PopupWindow: void setHeight(int)>
<android.nfc.cardemulation.AidGroup: java.util.List getAids()>
<android.telephony.Rlog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>
<android.view.ActionProvider: void <init>(android.content.Context)>
<com.android.internal.http.multipart.FilePart: com.android.internal.http.multipart.PartSource getSource()>
<android.bluetooth.IBluetoothGatt: void stopScan(int,boolean)>
<android.view.ViewGroup: boolean hasTransientState()>
<android.opengl.GLES30: void glBindBufferBase(int,int,int)>
<android.view.animation.LayoutAnimationController: void <init>(android.view.animation.Animation)>
<com.android.internal.view.menu.MenuBuilder: android.view.SubMenu addSubMenu(int,int,int,int)>
<android.gesture.GestureOverlayView.OnGesturePerformedListener: void onGesturePerformed(android.gesture.GestureOverlayView,android.gesture.Gesture)>
<android.media.session.ISessionCallback: void onSetVolumeTo(int)>
<android.view.MenuItem: void setShowAsAction(int)>
<android.graphics.SurfaceTexture: void <init>(int,boolean)>
<android.util.TimeUtils: void formatDuration(long,java.io.PrintWriter,int)>
<android.telecom.ParcelableCall: android.telecom.StatusHints getStatusHints()>
<com.android.internal.widget.multiwaveview.TargetDrawable: float getAlpha()>
<android.opengl.GLES31Ext: void glTexStorage3DMultisampleOES(int,int,int,int,int,int,boolean)>
<android.webkit.DateSorter: long getBoundary(int)>
<android.net.NetworkConfig: boolean isDefault()>
<android.net.TrafficStats: long getMobileTxBytes()>
<android.webkit.WebView.PrivateAccess: void setScrollXRaw(int)>
<android.view.KeyEvent: long getEventTimeNano()>
<android.os.BatteryStats: long getBatteryUptime(long)>
<android.provider.SearchRecentSuggestions: void <init>(android.content.Context,java.lang.String,int)>
<android.view.accessibility.AccessibilityRecord: void setClassName(java.lang.CharSequence)>
<android.view.Window: boolean hasSoftInputMode()>
<android.opengl.GLES20: void glBindRenderbuffer(int,int)>
<android.webkit.WebSettings: java.lang.String getUserAgentString()>
<android.view.inputmethod.InputMethod: void createSession(android.view.inputmethod.InputMethod.SessionCallback)>
<android.opengl.GLES20: void glClearStencil(int)>
<android.widget.GridLayout: android.util.Printer getPrinter()>
<android.preference.PreferenceGroupAdapter: void setHighlighted(int)>
<android.telecom.Connection: void onReject()>
<android.media.MediaRouter.SimpleCallback: void onRouteUnselected(android.media.MediaRouter,int,android.media.MediaRouter.RouteInfo)>
<android.widget.ListView: android.view.View findViewByPredicateTraversal(com.android.internal.util.Predicate,android.view.View)>
<android.media.MutableBackgroundColorSpan: void <init>(android.os.Parcel)>
<android.media.Rating: void writeToParcel(android.os.Parcel,int)>
<android.widget.AdapterView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.hardware.camera2.CaptureRequest.Builder: java.lang.Object get(android.hardware.camera2.CaptureRequest.Key)>
<android.widget.TableLayout: boolean isStretchAllColumns()>
<android.net.wifi.p2p.WifiP2pConfig: void writeToParcel(android.os.Parcel,int)>
<android.graphics.drawable.DrawableContainer.DrawableContainerState: boolean canApplyTheme()>
<android.webkit.WebStorage: void deleteAllData()>
<com.android.internal.os.BatteryStatsImpl: void noteBluetoothStateLocked(int)>
<android.app.ListFragment: android.widget.ListView getListView()>
<android.text.style.StrikethroughSpan: int describeContents()>
<android.widget.DialerFilter: void setFilterWatcher(android.text.TextWatcher)>
<android.security.KeyStoreParameter.Builder: android.security.KeyStoreParameter build()>
<android.provider.MediaStore.Video.Thumbnails: android.net.Uri getContentUri(java.lang.String)>
<android.telecom.ParcelableCall: android.telecom.DisconnectCause getDisconnectCause()>
<android.widget.TabHost: void dispatchWindowFocusChanged(boolean)>
<android.widget.FrameLayout.LayoutParams: void <init>(android.view.ViewGroup.MarginLayoutParams)>
<android.media.SubtitleTrack: void finishedRun(long)>
<android.app.backup.IBackupManager: void agentConnected(java.lang.String,android.os.IBinder)>
<android.os.UserManager: boolean setRestrictionsChallenge(java.lang.String)>
<android.telephony.ServiceState: int getDataRegState()>
<android.hardware.camera2.utils.ListUtils: java.lang.String listToString(java.util.List)>
<android.os.UserManager: boolean isUserSwitcherEnabled()>
<android.hardware.camera2.legacy.LegacyMetadataMapper: void convertRequestMetadata(android.hardware.camera2.legacy.LegacyRequest)>
<android.opengl.GLES30: void glGetInternalformativ(int,int,int,int,java.nio.IntBuffer)>
<android.renderscript.Float3: void mul(android.renderscript.Float3)>
<android.net.RouteInfo: void <init>(android.net.LinkAddress,java.net.InetAddress)>
<android.webkit.WebViewProvider: android.webkit.WebViewProvider.ScrollDelegate getScrollDelegate()>
<com.android.internal.view.menu.ActionMenu: android.view.MenuItem findItem(int)>
<android.telecom.Log: void e(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Object[])>
<android.graphics.Bitmap: int getDensity()>
<android.webkit.WebViewFactory: void onWebViewUpdateInstalled()>
<android.text.style.TtsSpan.Builder: android.text.style.TtsSpan build()>
<android.os.storage.IMountService: int renameSecureContainer(java.lang.String,java.lang.String)>
<android.telephony.CellSignalStrengthLte: int hashCode()>
<android.webkit.WebViewProvider: void clearView()>
<android.os.BatteryStats: int getNumChargeStepDurations()>
<android.graphics.RectF: float centerY()>
<com.android.internal.view.menu.MenuPresenter: void initForMenu(android.content.Context,com.android.internal.view.menu.MenuBuilder)>
<android.widget.SeekBar.OnSeekBarChangeListener: void onStopTrackingTouch(android.widget.SeekBar)>
<android.webkit.CacheManager.CacheResult: java.lang.String getMimeType()>
<com.android.internal.util.FastPrintWriter: void <init>(java.io.Writer)>
<android.app.Application.ActivityLifecycleCallbacks: void onActivityStopped(android.app.Activity)>
<android.app.IUiAutomationConnection: boolean clearWindowContentFrameStats(int)>
<android.hardware.Camera.Parameters: void copyFrom(android.hardware.Camera.Parameters)>
<android.net.NetworkStateTracker: boolean teardown()>
<com.android.internal.os.BatteryStatsImpl: void noteWifiSupplicantStateChangedLocked(int,boolean)>
<android.telephony.cdma.CdmaCellLocation: java.lang.String toString()>
<android.net.LinkAddress: int getScope()>
<android.preference.PreferenceActivity: void startWithFragment(java.lang.String,android.os.Bundle,android.app.Fragment,int,int,int)>
<android.filterfw.core.Filter: void addOutputBasedOnInput(java.lang.String,java.lang.String)>
<android.print.PrintJob: boolean isCompleted()>
<android.content.pm.PackageManager: void removePackageFromPreferred(java.lang.String)>
<android.view.inputmethod.InputMethodSubtype: boolean containsExtraValueKey(java.lang.String)>
<android.graphics.Canvas: void drawText(java.lang.String,int,int,float,float,android.graphics.Paint)>
<android.webkit.WebViewFragment: android.webkit.WebView getWebView()>
<android.opengl.GLES11: void glPointParameterxv(int,int[],int)>
<android.util.LongSparseArray: int size()>
<android.os.MemoryFile: boolean allowPurging(boolean)>
<android.text.SpannableString: void removeSpan(java.lang.Object)>
<android.net.BaseNetworkStateTracker: android.net.LinkQualityInfo getLinkQualityInfo()>
<android.media.tv.TvTrackInfo: void writeToParcel(android.os.Parcel,int)>
<android.bluetooth.BluetoothPbap.ServiceListener: void onServiceConnected(android.bluetooth.BluetoothPbap)>
<android.graphics.SurfaceTexture: void releaseTexImage()>
<android.widget.ActionMenuPresenter: boolean filterLeftoverView(android.view.ViewGroup,int)>
<android.nfc.cardemulation.CardEmulation: java.util.List getServices(java.lang.String)>
<android.content.CursorEntityIterator: void <init>(android.database.Cursor)>
<android.view.WindowCallbackWrapper: boolean dispatchTouchEvent(android.view.MotionEvent)>
<android.app.ActivityManagerProxy: int startActivityIntentSender(android.app.IApplicationThread,android.content.IntentSender,android.content.Intent,java.lang.String,android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle)>
<android.media.AudioRecord: void release()>
<android.media.IRemoteControlDisplay: void setMetadata(int,android.os.Bundle)>
<android.telecom.StatusHints: boolean equals(java.lang.Object)>
<android.widget.RadialTimePickerView: boolean performAccessibilityAction(int,android.os.Bundle)>
<android.security.AndroidKeyStore: java.security.cert.Certificate engineGetCertificate(java.lang.String)>
<com.android.internal.widget.ResolverDrawerLayout: void onRestoreInstanceState(android.os.Parcelable)>
<android.transition.TransitionSet: void captureStartValues(android.transition.TransitionValues)>
<android.renderscript.Allocation: void copyTo(android.graphics.Bitmap)>
<android.app.SearchableInfo: boolean getVoiceSearchLaunchWebSearch()>
<android.os.Message: android.os.Message obtain(android.os.Handler)>
<android.net.UrlQuerySanitizer: android.net.UrlQuerySanitizer.ValueSanitizer getAmpLegal()>
<android.media.session.MediaController: void adjustVolume(int,int)>
<android.preference.PreferenceGroupAdapter: void onPreferenceChange(android.preference.Preference)>
<android.mtp.MtpObjectInfo: int getAssociationType()>
<android.widget.RemoteViews: void setRemoteAdapter(int,java.util.ArrayList,int)>
<android.widget.VideoView: void pause()>
<android.net.ConnectivityManager: java.lang.String getMobileProvisioningUrl()>
<com.google.android.gles_jni.GLImpl: void glGetTexEnvxv(int,int,java.nio.IntBuffer)>
<com.android.internal.widget.SizeAdaptiveLayout.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<android.content.UndoOperation: java.lang.Object getOwnerData()>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder insert(int,java.lang.CharSequence,int,int)>
<android.widget.CalendarView.CalendarViewDelegate: void setShownWeekCount(int)>
<android.view.accessibility.AccessibilityRecord: android.view.accessibility.AccessibilityRecord obtain()>
<android.view.Window: android.transition.Transition getSharedElementEnterTransition()>
<android.app.admin.IDevicePolicyManager: void setAutoTimeRequired(android.content.ComponentName,int,boolean)>
<com.android.internal.view.IInputMethodManager: android.view.inputmethod.InputMethodSubtype getLastInputMethodSubtype()>
<android.hardware.camera2.CameraCaptureSession.StateCallback: void onConfigured(android.hardware.camera2.CameraCaptureSession)>
<android.opengl.GLES11: void glGenBuffers(int,int[],int)>
<android.preference.RingtonePreference: int getRingtoneType()>
<android.transition.Fade: void <init>(int)>
<android.database.IBulkCursor: void deactivate()>
<android.opengl.GLES20: boolean glIsEnabled(int)>
<com.android.internal.view.StandaloneActionMode: void setTitle(java.lang.CharSequence)>
<android.media.audiofx.AudioEffect: android.media.audiofx.AudioEffect.Descriptor[] queryEffects()>
<android.bluetooth.IBluetoothHeadset: boolean disableWBS()>
<android.widget.RemoteViews: void <init>(java.lang.String,int)>
<android.content.SharedPreferences.Editor: void apply()>
<com.android.internal.policy.IFaceLockCallback: void reportFailedAttempt()>
<android.telephony.CellIdentityCdma: int getLongitude()>
<com.google.android.util.AbstractMessageParser.Part: void add(com.google.android.util.AbstractMessageParser.Token)>
<android.graphics.Typeface: android.graphics.Typeface createFromFamilies(android.graphics.FontFamily[])>
<android.view.View: boolean dispatchTouchEvent(android.view.MotionEvent)>
<android.media.session.ISessionController: boolean isTransportControlEnabled()>
<android.content.SyncRequest: long getSyncFlexTime()>
<android.webkit.WebView: void setLayerType(int,android.graphics.Paint)>
<android.os.FileUtils: boolean contains(java.io.File,java.io.File)>
<android.media.AudioManager: boolean registerRemoteController(android.media.RemoteController)>
<android.net.MobileLinkQualityInfo: void setLteRsrp(int)>
<android.telephony.PhoneNumberUtils: boolean compare(java.lang.String,java.lang.String,boolean)>
<android.graphics.drawable.shapes.OvalShape: void draw(android.graphics.Canvas,android.graphics.Paint)>
<android.view.KeyCharacterMap: char getMatch(int,char[])>
<android.view.View: boolean isFocused()>
<android.graphics.drawable.shapes.RectShape: void onResize(float,float)>
<android.view.Window: void setMediaController(android.media.session.MediaController)>
<com.android.internal.widget.PointerLocationView: void onDetachedFromWindow()>
<android.database.sqlite.SQLiteSession: android.os.ParcelFileDescriptor executeForBlobFileDescriptor(java.lang.String,java.lang.Object[],int,android.os.CancellationSignal)>
<android.telephony.gsm.GsmCellLocation: int hashCode()>
<android.view.View: boolean setFrame(int,int,int,int)>
<android.telephony.DataConnectionRealTimeInfo: boolean equals(java.lang.Object)>
<android.net.IConnectivityManager: android.net.NetworkInfo getProvisioningOrActiveNetworkInfo()>
<android.view.accessibility.CaptioningManager: java.util.Locale getLocale()>
<android.app.NativeActivity: void onInputQueueDestroyed(android.view.InputQueue)>
<android.media.browse.MediaBrowser.SubscriptionCallback: void onError(java.lang.String)>
<android.telephony.CellSignalStrengthWcdma: int describeContents()>
<com.android.internal.telecom.IInCallService: void setPostDialWait(java.lang.String,java.lang.String)>
<com.android.internal.widget.DecorContentParent: void setMenuPrepared()>
<android.widget.RemoteViews: void reapply(android.content.Context,android.view.View)>
<android.os.storage.StorageVolume: java.lang.String toString()>
<android.bluetooth.BluetoothHealth: boolean registerAppConfiguration(java.lang.String,int,int,int,android.bluetooth.BluetoothHealthCallback)>
<android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer: java.lang.String sanitize(java.lang.String)>
<android.os.TokenWatcher: boolean isAcquired()>
<android.text.SpannableStringBuilder: android.text.SpannableStringBuilder append(java.lang.CharSequence,int,int)>
<android.telephony.PhoneStateListener: void onVoLteServiceStateChanged(android.telephony.VoLteServiceState)>
<android.widget.DialerFilter: void removeFilterWatcher(android.text.TextWatcher)>
<android.media.audiofx.EnvironmentalReverb: short getReverbLevel()>
<android.app.admin.DevicePolicyManager: boolean isUninstallBlocked(android.content.ComponentName,java.lang.String)>
<android.os.Debug: void setFieldsOn(java.lang.Class)>
<android.app.Notification.Style: void setBuilder(android.app.Notification.Builder)>
<com.android.internal.util.StateMachine.LogRec: com.android.internal.util.IState getDestState()>
<android.os.Debug: void resetThreadAllocSize()>
<android.preference.EditTextPreference: void onBindDialogView(android.view.View)>
<android.app.AlertDialog.Builder: android.app.AlertDialog.Builder setItems(int,android.content.DialogInterface.OnClickListener)>
<com.android.internal.app.ToolbarActionBar: void setSubtitle(int)>
<com.android.ims.internal.IImsConfig: void getFeatureValue(int,int,com.android.ims.ImsConfigListener)>
<android.app.ActivityManager: java.util.List getRecentTasksForUser(int,int,int)>
<android.preference.PreferenceGroup: boolean addPreference(android.preference.Preference)>
<android.provider.Contacts.ContactMethods: java.lang.String lookupProviderNameFromId(int)>
<android.view.ViewGroup: void resolvePadding()>
<android.telephony.SubscriptionManager: boolean allDefaultsSelected()>
<android.widget.StackView: void <init>(android.content.Context)>
<com.android.internal.util.AsyncChannel: int connectSync(android.content.Context,android.os.Handler,android.os.Messenger)>
<android.print.PrintJobInfo: void setAttributes(android.print.PrintAttributes)>
<android.opengl.GLES30: java.nio.Buffer glGetBufferPointerv(int,int)>
<android.animation.PropertyValuesHolder: java.lang.String getPropertyName()>
<android.app.Notification.Builder: android.app.Notification.Builder setDefaults(int)>
<com.android.internal.os.BatteryStatsImpl: void setRecordAllHistoryLocked(boolean)>
<android.database.AbstractWindowedCursor: double getDouble(int)>
<com.android.internal.view.menu.ContextMenuBuilder: android.view.ContextMenu setHeaderView(android.view.View)>
<android.hardware.usb.UsbInterface: int getInterfaceSubclass()>
<android.view.KeyCharacterMap: boolean[] deviceHasKeys(int[])>
<com.android.internal.telephony.IPhoneSubInfo: java.lang.String[] getIsimPcscf()>
<android.preference.PreferenceActivity: android.preference.PreferenceActivity.Header onGetNewHeader()>
<android.content.pm.PackageManager: android.content.res.Resources getResourcesForActivity(android.content.ComponentName)>
<android.database.DatabaseUtils: int cursorPickFillWindowStartPosition(int,int)>
<android.transition.Transition: android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues)>
<android.app.ActionBar: boolean onMenuKeyEvent(android.view.KeyEvent)>
<android.renderscript.Element: android.renderscript.Element I64_2(android.renderscript.RenderScript)>
<android.media.session.MediaSession: void setSessionActivity(android.app.PendingIntent)>
<android.telephony.PhoneNumberUtils: java.lang.String getStrippedReversed(java.lang.String)>
<android.preference.PreferenceActivity: void setPreferenceScreen(android.preference.PreferenceScreen)>
<com.android.internal.app.MediaRouteChooserDialog: void refreshRoutes()>
<android.hardware.IConsumerIrService: void transmit(java.lang.String,int,int[])>
<android.text.HtmlToSpannedConverter: void startDocument()>
<android.app.ListFragment: android.widget.ListAdapter getListAdapter()>
<android.os.PowerManager.WakeLock: void setUnimportantForLogging(boolean)>
<android.opengl.GLSurfaceView.GLWrapper: javax.microedition.khronos.opengles.GL wrap(javax.microedition.khronos.opengles.GL)>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDMultiply()>
<android.print.IPrintManager: void startPrinterDiscovery(android.print.IPrinterDiscoveryObserver,java.util.List,int)>
<android.view.MenuItem: char getNumericShortcut()>
<android.telephony.Rlog: int w(java.lang.String,java.lang.Throwable)>
<android.database.CrossProcessCursor: boolean onMove(int,int)>
<android.database.BulkCursorProxy: android.os.Bundle respond(android.os.Bundle)>
<android.widget.ScrollView: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.internal.http.multipart.FilePartSource: void <init>(java.lang.String,java.io.File)>
<android.renderscript.ScriptIntrinsicBlend: android.renderscript.Script.KernelID getKernelIDDstIn()>
<android.view.accessibility.AccessibilityWindowInfo: void setBoundsInScreen(android.graphics.Rect)>
<android.preference.PreferenceActivity: void addPreferencesFromResource(int)>
<android.renderscript.Long3: void <init>(android.renderscript.Long3)>
<android.net.NetworkIdentity: int getType()>
<android.bluetooth.BluetoothGattCharacteristic: boolean setValue(byte[])>
<android.service.wallpaper.WallpaperService.Engine: void onCreate(android.view.SurfaceHolder)>
<android.opengl.GLES20: void glGetIntegerv(int,int[],int)>
<android.media.effect.effects.SharpenEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>
<android.filterfw.core.FilterPort: void setFrame(android.filterfw.core.Frame)>
<android.media.audiofx.AudioEffect: int setEnabled(boolean)>
<android.view.accessibility.AccessibilityRecord: android.os.Parcelable getParcelableData()>
<android.opengl.GLES10: void glStencilOp(int,int,int)>
<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources.Theme)>
<com.android.internal.util.StateMachine: void addLogRec(java.lang.String)>
<com.android.internal.app.WindowDecorActionBar.TabImpl: android.app.ActionBar.Tab setText(java.lang.CharSequence)>
<android.app.SearchableInfo: boolean queryAfterZeroResults()>
<android.app.admin.DevicePolicyManager: boolean getCameraDisabled(android.content.ComponentName)>
<android.net.INetworkPolicyManager: void setRestrictBackground(boolean)>
<android.renderscript.Int4: void addMultiple(android.renderscript.Int4,int)>
<android.bluetooth.BluetoothGattCallback: void onServicesDiscovered(android.bluetooth.BluetoothGatt,int)>
<android.view.Display: int getOwnerUid()>
<android.view.ViewGroup: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<android.webkit.WebHistoryItem: int getId()>
<android.content.IContentService: void setMasterSyncAutomaticallyAsUser(boolean,int)>
<com.android.ims.internal.IImsCallSession: void setMute(boolean)>
<android.print.PrinterInfo.Builder: android.print.PrinterInfo.Builder setName(java.lang.String)>
<android.view.accessibility.AccessibilityEvent: void setEventType(int)>
<android.widget.AbsListView: boolean isStackFromBottom()>
<android.util.LocalLog: void log(java.lang.String)>
<android.location.GpsNavigationMessage: byte getPrn()>
<android.view.accessibility.AccessibilityNodeInfo: long getSourceNodeId()>
<android.os.PowerManager.WakeLock: java.lang.String toString()>
<android.content.pm.PackageInstaller.SessionInfo: android.content.Intent createDetailsIntent()>
<android.database.sqlite.SQLiteProgram: int getConnectionFlags()>
<android.view.animation.DecelerateInterpolator: long createNativeInterpolator()>
<android.view.accessibility.AccessibilityNodeInfo: void setInputType(int)>
<com.android.internal.util.HexDump: byte[] toByteArray(byte)>
<android.mtp.MtpServer: void <init>(android.mtp.MtpDatabase,boolean)>
<android.graphics.drawable.VectorDrawable: int getOpacity()>
<android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.util.DisplayMetrics,int[],int,int,android.graphics.Bitmap.Config)>
<com.google.android.gles_jni.GLImpl: void glGenBuffers(int,int[],int)>
<android.accounts.ChooseTypeAndAccountActivity: void onOkButtonClicked(android.view.View)>
<android.bluetooth.BluetoothA2dp: boolean isA2dpPlaying(android.bluetooth.BluetoothDevice)>
<android.hardware.camera2.utils.ParamsUtils: android.graphics.Rect createRect(android.graphics.RectF)>
<android.content.IContentService: void removeStatusChangeListener(android.content.ISyncStatusObserver)>
<android.media.MediaRouter.RouteCategory: java.lang.CharSequence getName(android.content.Context)>
<android.view.textservice.SpellCheckerInfo: android.content.pm.ServiceInfo getServiceInfo()>
<android.widget.LinearLayout: void setBaselineAligned(boolean)>
<android.view.MotionEvent: float getHistoricalTouchMajor(int,int)>
<android.widget.AppSecurityPermissions: android.view.View getPermissionsView(int)>
<android.telephony.CellInfoCdma: void setCellIdentity(android.telephony.CellIdentityCdma)>
<android.app.NotificationManager: void cancel(int)>
<com.android.server.NetworkManagementSocketTagger: void untag(java.io.FileDescriptor)>
<android.widget.ExpandableListAdapter: long getGroupId(int)>
<android.renderscript.RSDriverException: void <init>(java.lang.String)>
<android.widget.SpellChecker: void onGetSentenceSuggestions(android.view.textservice.SentenceSuggestionsInfo[])>
<android.app.ActivityManagerProxy: boolean finishActivityAffinity(android.os.IBinder)>
<android.webkit.WebViewProvider: int getProgress()>
<android.net.NetworkStatsHistory: long randomLong(java.util.Random,long,long)>
<android.net.UrlQuerySanitizer: java.lang.String getValue(java.lang.String)>
<android.widget.TextClock: java.lang.String getTimeZone()>
<android.app.backup.IFullBackupRestoreObserver: void onStartRestore()>
<android.hardware.hdmi.HdmiPortInfo: boolean isCecSupported()>
<android.media.effect.effects.SaturateEffect: void <init>(android.media.effect.EffectContext,java.lang.String)>
<android.opengl.Visibility: void computeBoundingSphere(float[],int,int,float[],int)>
<android.telephony.cdma.CdmaCellLocation: int getBaseStationId()>
<com.android.internal.widget.LockPatternUtils: boolean isBiometricWeakEverChosen()>
<android.media.tv.TvTrackInfo: float getVideoFrameRate()>
<android.opengl.GLES20: boolean glIsTexture(int)>
<android.hardware.camera2.impl.CameraCaptureSessionImpl: int setRepeatingRequest(android.hardware.camera2.CaptureRequest,android.hardware.camera2.CameraCaptureSession.CaptureCallback,android.os.Handler)>
<android.media.MediaCodec.CodecException: boolean isTransient()>
<android.renderscript.RSTextureView: void setRenderScriptGL(android.renderscript.RenderScriptGL)>
<android.service.dreams.DreamService: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.media.AudioFormat: int convertChannelOutMaskToNativeMask(int)>
<android.view.ViewGroup: void setAlwaysDrawnWithCacheEnabled(boolean)>
<android.view.RenderNode: int getDebugSize()>
<android.media.effect.Effect: void release()>
<android.content.UndoManager: android.content.UndoOperation getLastOperation(android.content.UndoOwner,int)>
<android.provider.ContactsContract.Contacts.AggregationSuggestions.Builder: android.net.Uri build()>
<android.view.inputmethod.InputMethodSession: void viewClicked(boolean)>
<android.os.NullVibrator: android.os.NullVibrator getInstance()>
<android.app.Notification.Builder: int calculateTopPadding(android.content.Context,boolean,float)>
<android.filterpacks.imageproc.DuotoneFilter: void initProgram(android.filterfw.core.FilterContext,int)>
<com.android.internal.inputmethod.InputMethodUtils.InputMethodSettings: java.lang.String getEnabledInputMethodsStr()>
<android.view.ViewOutlineProvider: void getOutline(android.view.View,android.graphics.Outline)>
<android.widget.DatePicker.DatePickerDelegate: void setMinDate(long)>
<android.opengl.GLES20: void glDeleteTextures(int,int[],int)>
<com.android.internal.os.BatteryStatsImpl: long getFlashlightOnTime(long,int)>
<android.telephony.ServiceState: void setIsManualSelection(boolean)>
<android.location.Location: boolean hasBearing()>
<android.media.RemoteDisplay.Listener: void onDisplayDisconnected()>
<android.widget.MultiAutoCompleteTextView.CommaTokenizer: int findTokenEnd(java.lang.CharSequence,int)>
<android.ddm.DdmHandleExit: void register()>
<android.media.session.ISessionCallback: void onPlay()>
<android.widget.AdapterViewAnimator: void setSelection(int)>
<android.nfc.INfcTag: boolean isPresent(int)>
<android.print.PrintManager: android.print.PrintJob getPrintJob(android.print.PrintJobId)>
<android.mtp.MtpObjectInfo: int getSequenceNumber()>
<android.view.inputmethod.InputConnectionWrapper: boolean setComposingRegion(int,int)>
<android.hardware.hdmi.HdmiTimerRecordSources: android.hardware.hdmi.HdmiTimerRecordSources.TimerRecordSource ofDigitalSource(android.hardware.hdmi.HdmiTimerRecordSources.TimerInfo,android.hardware.hdmi.HdmiRecordSources.DigitalServiceSource)>
