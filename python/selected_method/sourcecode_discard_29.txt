<com.android.server.slice.SliceManagerService.Lifecycle: void onBootPhase(int)>
<com.android.server.location.LocationBasedCountryDetector: void <init>(android.content.Context)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: float getPulseHeight()>
<com.android.systemui.statusbar.policy.SignalController: int getContentDescription()>
<com.android.server.notification.RankingConfig: void createNotificationChannelGroup(java.lang.String,int,android.app.NotificationChannelGroup,boolean)>
<com.google.android.startop.iorap.SystemServiceEvent: java.lang.String toString()>
<com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem: void handleRoutingChangeAndInformation(int,com.android.server.hdmi.HdmiCecMessage)>
<com.android.server.textclassifier.TextClassificationManagerService: void onSelectionEvent(android.view.textclassifier.TextClassificationSessionId,android.view.textclassifier.SelectionEvent)>
<com.android.settingslib.deviceinfo.StorageManagerVolumeProvider: long getFreeBytes(android.app.usage.StorageStatsManager,android.os.storage.VolumeInfo)>
<com.android.keyguard.SecurityMessageDisplay: void formatMessage(int,java.lang.Object[])>
<com.android.systemui.statusbar.phone.PanelView: void instantCollapse()>
<com.android.server.policy.PhoneWindowManager: void updateSettings()>
<com.android.systemui.recents.views.TaskViewTransform: void copyFrom(com.android.systemui.recents.views.TaskViewTransform)>
<com.android.server.locksettings.LockSettingsStrongAuth: void unregisterStrongAuthTracker(android.app.trust.IStrongAuthTracker)>
<com.android.gallery3d.glrenderer.UploadedTexture: boolean isContentValid()>
<com.android.systemui.qs.QSFooter: void setExpandClickListener(android.view.View.OnClickListener)>
<com.android.systemui.statusbar.notification.stack.AmbientState: void setPanelTracking(boolean)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setCrossProfileContactsSearchDisabled(android.content.ComponentName,boolean)>
<com.android.server.usb.descriptors.UsbInterfaceAssoc: byte getFunctionClass()>
<com.google.android.startop.iorap.AppLaunchEvent: void writeToParcel(android.os.Parcel,int)>
<com.android.keyguard.KeyguardSecurityView: void setLockPatternUtils(com.android.internal.widget.LockPatternUtils)>
<com.android.settingslib.bluetooth.BluetoothUtils: android.graphics.drawable.Drawable buildBtRainbowDrawable(android.content.Context,android.graphics.drawable.Drawable,int)>
<javax.microedition.khronos.opengles.GL10: void glScissor(int,int,int,int)>
<com.android.settingslib.bluetooth.MapClientProfile: void finalize()>
<com.android.systemui.statusbar.policy.KeyButtonDrawable: void setShadowProperties(int,int,int,int)>
<com.android.server.voiceinteraction.VoiceInteractionManagerService: void <init>(android.content.Context)>
<com.android.server.statusbar.StatusBarManagerService: void onPanelHidden()>
<com.android.systemui.MultiListLayout: android.view.ViewGroup getSeparatedView()>
<android.net.TcpKeepalivePacketData: android.net.TcpKeepalivePacketDataParcelable toStableParcelable()>
<com.android.server.NsdService.DaemonConnection: void stop()>
<com.android.keyguard.KeyguardPatternView: void cleanUp()>
<com.android.systemui.keyguard.KeyguardSliceProvider: void onZenChanged(int)>
<com.android.location.provider.ActivityRecognitionProvider: boolean isActivitySupported(java.lang.String)>
<com.android.systemui.statusbar.phone.NavigationBarView: void onDetachedFromWindow()>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper.Callback: void onAnimationToSideStarted(boolean,float,float)>
<com.android.server.notification.ManagedServices: android.os.IInterface asInterface(android.os.IBinder)>
<javax.microedition.khronos.opengles.GL11: void glTexParameterxv(int,int,java.nio.IntBuffer)>
<com.android.server.midi.MidiService: void openDevice(android.os.IBinder,android.media.midi.MidiDeviceInfo,android.media.midi.IMidiDeviceOpenCallback)>
<com.android.externalstorage.ExternalStorageProvider: android.database.Cursor querySearchDocuments(java.lang.String,java.lang.String[],android.os.Bundle)>
<com.android.printspooler.model.RemotePrintDocument: void finish()>
<com.android.systemui.statusbar.phone.KeyguardBouncer: boolean isShowing()>
<com.android.server.accessibility.AccessibilityManagerService: boolean performActionOnAccessibilityFocusedItem(android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction)>
<com.android.server.timedetector.TimeDetectorStrategyCallbackImpl: long systemClockMillis()>
<com.android.server.usb.descriptors.UsbACMidiEndpoint: byte getNumJacks()>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.android.systemui.statusbar.notification.FakeShadowView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setBackgroundTintColor(int)>
<com.android.packageinstaller.PackageInstallerActivity: void onPause()>
<com.android.systemui.qs.tiles.FlashlightTile: com.android.systemui.plugins.qs.QSTile.BooleanState newTileState()>
<com.android.server.SystemServiceManager: void switchUser(int)>
<com.android.server.soundtrigger.SoundTriggerService.LocalSoundTriggerService: android.hardware.soundtrigger.SoundTrigger.ModuleProperties getModuleProperties()>
<com.android.server.voiceinteraction.DatabaseHelper: boolean deleteKeyphraseSoundModel(int,int,java.lang.String)>
<com.android.server.print.PrintManagerService: void onUnlockUser(int)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector resourceIdMatches(java.lang.String)>
<com.android.systemui.qs.tileimpl.QSTileImpl.H: void handleMessage(android.os.Message)>
<com.android.server.location.ContextHubService: void disableNanoApp(int,android.hardware.location.IContextHubTransactionCallback,long)>
<com.android.systemui.statusbar.policy.BluetoothController: boolean isBluetoothConnected()>
<com.android.photos.BitmapRegionTileSource.ResourceBitmapSource: boolean readExif(com.android.gallery3d.exif.ExifInterface)>
<com.android.systemui.recents.misc.SystemServicesProxy: void setRecentsVisibility(boolean)>
<com.android.systemui.statusbar.notification.TransformState: void transformViewFullyTo(com.android.systemui.statusbar.notification.TransformState,float)>
<javax.microedition.khronos.opengles.GL10: void glClearStencil(int)>
<com.android.systemui.biometrics.FingerprintDialogView: void handleResetMessage()>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: android.graphics.Point getRevealAnimationOrigin()>
<com.android.server.DeviceIdleController: int[] getAppIdWhitelistExceptIdleInternal()>
<com.android.systemui.appops.AppOpsControllerImpl: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.classifier.brightline.BrightLineFalsingManager: void onLeftAffordanceOn()>
<com.android.printspooler.util.MediaSizeUtils: android.print.PrintAttributes.MediaSize getDefault(android.content.Context)>
<com.android.systemui.shared.plugins.PluginInstanceManager.PluginContextWrapper: void <init>(android.content.Context,java.lang.ClassLoader)>
<com.android.server.notification.NotificationManagerService: void <init>(android.content.Context)>
<android.media.MediaPlayer2: android.media.MediaPlayer2.DrmInfo getDrmInfo(android.media.DataSourceDesc)>
<com.android.server.content.SyncManager: boolean syncExtrasEquals(android.os.Bundle,android.os.Bundle,boolean)>
<com.android.systemui.statusbar.phone.NavigationPrototypeController.OnPrototypeChangedListener: void onBackButtonVisibilityChanged(boolean)>
<com.android.server.audio.AudioService: int addMixForPolicy(android.media.audiopolicy.AudioPolicyConfig,android.media.audiopolicy.IAudioPolicyCallback)>
<com.android.systemui.qs.QuickStatusBarHeader: void onNextAlarmChanged(android.app.AlarmManager.AlarmClockInfo)>
<com.android.server.audio.AudioService: boolean loadSoundEffects()>
<com.android.server.pm.PackageManagerServiceCompilerMapping: java.lang.String getDefaultCompilerFilter()>
<com.android.systemui.stackdivider.Divider: com.android.systemui.stackdivider.DividerView getView()>
<com.android.server.lights.LightsService: void onStart()>
<com.android.systemui.statusbar.KeyguardAffordanceView: void setPreviewView(android.view.View)>
<com.android.systemui.recents.OverviewProxyService: void notifyQuickStepStarted()>
<com.android.systemui.globalactions.GlobalActionsColumnLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.pm.PackageManagerServiceCompilerMapping: java.lang.String getCompilerFilterForReason(int)>
<com.android.systemui.statusbar.phone.StatusBar: void showScreenPinningRequest(int,boolean)>
<com.android.systemui.pip.PipUI: void hidePipMenu(java.lang.Runnable,java.lang.Runnable)>
<com.android.server.notification.NotificationUsageStats.SingleNotificationStats: long getCurrentAirtimeExpandedMs()>
<com.android.systemui.statusbar.NotificationMediaManager: android.media.MediaMetadata getMediaMetadata()>
<com.android.systemui.qs.SignalTileView: android.view.View createIcon()>
<com.android.server.systemcaptions.SystemCaptionsManagerService: com.android.server.systemcaptions.SystemCaptionsManagerPerUserService newServiceLocked(int,boolean)>
<com.android.systemui.statusbar.phone.NavigationHandle: void setDelayTouchFeedback(boolean)>
<com.android.settingslib.wifi.AccessPoint: java.lang.String getSettingsSummary(boolean)>
<com.android.server.media.RemoteDisplayProviderWatcher.Callback: void addProvider(com.android.server.media.RemoteDisplayProviderProxy)>
<com.android.server.notification.NotificationRecord: int getSuppressedVisualEffects()>
<com.android.settingslib.drawable.UserIconDrawable: boolean isStateful()>
<com.android.server.content.SyncOperation: void <init>(android.accounts.Account,int,int,java.lang.String,int,int,java.lang.String,android.os.Bundle,boolean,int)>
<com.android.systemui.statusbar.phone.LightBarTransitionsController: void appTransitionCancelled(int)>
<com.android.systemui.plugins.FalsingManager: void setNotificationExpanded()>
<com.android.systemui.statusbar.phone.NavigationPrototypeController: void setOnPrototypeChangedListener(com.android.systemui.statusbar.phone.NavigationPrototypeController.OnPrototypeChangedListener)>
<com.android.systemui.MultiListLayout.MultiListAdapter: void onClickItem(int)>
<com.android.systemui.statusbar.phone.NotificationGroupAlertTransferHelper: void setHeadsUpManager(com.android.systemui.statusbar.policy.HeadsUpManager)>
<android.text.StaticLayoutMultithreadPerfTest: void testCreate_RandomText_Thread_1()>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: void setWifiEnabled(boolean)>
<com.android.systemui.statusbar.phone.StatusBarIconController: void setIconVisibility(java.lang.String,boolean)>
<com.android.systemui.recents.LegacyRecentsImpl: void onBusEvent(com.android.systemui.recents.events.component.RecentsVisibilityChangedEvent)>
<com.android.server.appop.AppOpsService: android.os.IBinder getToken(android.os.IBinder)>
<com.android.systemui.classifier.HumanInteractionClassifier: boolean isFalseTouch()>
<com.android.server.usb.descriptors.report.TextReportCanvas: void openHeader(int)>
<com.android.systemui.recents.views.grid.GridTaskView: com.android.systemui.recents.views.AnimateableViewBounds createOutlineProvider()>
<android.net.IpMemoryStoreClient: void retrieveBlob(java.lang.String,java.lang.String,java.lang.String,android.net.ipmemorystore.OnBlobRetrievedListener)>
<com.android.systemui.volume.VolumeDialogControllerImpl: void register()>
<com.android.systemui.statusbar.notification.row.ExpandableView: boolean areChildrenExpanded()>
<com.android.systemui.recents.LegacyRecentsImpl: void onBusEvent(com.android.systemui.recents.events.activity.LaunchTaskFailedEvent)>
<com.android.settingslib.RestrictedPreferenceHelper: void onBindViewHolder(androidx.preference.PreferenceViewHolder)>
<android.graphics.perftests.PathPerfTest: void testIsEmpty()>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverySessionStorage.Entry: byte[] getLskfHash()>
<com.android.keyguard.KeyguardSecurityView: void setKeyguardCallback(com.android.keyguard.KeyguardSecurityCallback)>
<com.android.keyguard.ViewMediatorCallback: java.lang.CharSequence consumeCustomMessage()>
<com.android.systemui.statusbar.car.hvac.HvacController: void connectToCarService()>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: float getTranslation()>
<com.android.server.usb.UsbAlsaDevice: int getDeviceNum()>
<com.android.server.pm.Settings: com.android.server.pm.Settings.VersionInfo getInternalVersion()>
<com.android.server.webkit.SystemInterface: boolean systemIsDebuggable()>
<com.android.systemui.statusbar.phone.NotificationIconContainer.IconState: boolean hasCustomTransformHeight()>
<com.android.uiautomator.core.UiObject: boolean clickAndWaitForNewWindow()>
<com.android.systemui.analytics.SensorLoggerSession: int getResult()>
<com.android.gallery3d.exif.ExifTag: void setIfd(int)>
<com.android.server.broadcastradio.hal1.BroadcastRadioService: java.util.List loadModules()>
<com.android.systemui.recents.RecentsOnboarding: boolean show(int)>
<com.android.keyguard.KeyguardUpdateMonitor: boolean isUnlockingWithBiometricAllowed()>
<com.android.server.locksettings.recoverablekeystore.RecoverableKeyStoreManager: int[] getRecoverySecretTypes()>
<com.android.systemui.statusbar.phone.StatusBarTouchableRegionManager: void updateTouchableRegion()>
<com.android.settingslib.suggestions.SuggestionControllerMixinCompat: void onStop()>
<com.android.systemui.statusbar.notification.stack.NotificationSwipeHelper.NotificationCallback: void onSnooze(android.service.notification.StatusBarNotification,com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper.SnoozeOption)>
<com.android.keyguard.CarrierText: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.CommandQueue: void onDisplayRemoved(int)>
<com.android.server.pm.permission.PermissionManagerServiceInternal: int getPermissionFlags(java.lang.String,java.lang.String,int,int)>
<com.android.systemui.statusbar.policy.EthernetSignalController: void <init>(android.content.Context,com.android.systemui.statusbar.policy.CallbackHandler,com.android.systemui.statusbar.policy.NetworkControllerImpl)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: java.lang.String toString()>
<com.android.nfc_extras.EeExternalFieldException: void <init>(java.lang.String)>
<com.android.systemui.util.AsyncSensorManager: void unregisterListenerImpl(android.hardware.SensorEventListener,android.hardware.Sensor)>
<com.android.server.accounts.AccountManagerService: void addSharedAccountsFromParentUser(int,int,java.lang.String)>
<com.android.server.pm.PackageManagerException: void <init>(int,java.lang.String,java.lang.Throwable)>
<com.android.location.provider.ActivityRecognitionProviderWatcher: android.os.IBinder getBinder()>
<com.android.server.NsdService.NsdSettings: com.android.server.NsdService.NsdSettings makeDefault(android.content.Context)>
<com.android.bluetoothmidiservice.PacketDecoder: void decodePacket(byte[],android.media.midi.MidiReceiver)>
<com.android.server.audio.AudioService: int dispatchFocusChange(android.media.AudioFocusInfo,int,android.media.audiopolicy.IAudioPolicyCallback)>
<com.android.server.notification.ManagedServices: java.util.Set getRemovableConnectedServices()>
<com.android.systemui.statusbar.notification.row.ExpandableView: int getClipBottomAmount()>
<com.android.keyguard.KeyguardPasswordView: void setPasswordEntryInputEnabled(boolean)>
<com.android.server.PinnerService: void update(android.util.ArraySet,boolean)>
<com.android.server.locksettings.recoverablekeystore.RecoverableKeyStoreManager: void setSnapshotCreatedPendingIntent(android.app.PendingIntent)>
<com.android.systemui.statusbar.ScrimView: void setDrawable(android.graphics.drawable.Drawable)>
<com.android.systemui.recents.views.grid.GridTaskViewThumbnail: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.systemui.statusbar.phone.CollapsedStatusBarFragment: void onSaveInstanceState(android.os.Bundle)>
<com.android.uiautomator.core.UiScrollable: com.android.uiautomator.core.UiObject getChildByText(com.android.uiautomator.core.UiSelector,java.lang.String)>
<com.android.server.pm.ShortcutDumpFiles: void dumpAll(java.io.PrintWriter)>
<com.android.systemui.plugins.qs.DetailAdapter: android.view.View createDetailView(android.content.Context,android.view.View,android.view.ViewGroup)>
<com.android.printspooler.ui.PrintActivity: void onOptionsClosed()>
<android.net.ipmemorystore.OnNetworkAttributesRetrievedListener: void onNetworkAttributesRetrieved(android.net.ipmemorystore.Status,java.lang.String,android.net.ipmemorystore.NetworkAttributes)>
<com.android.future.usb.UsbAccessory: java.lang.String getUri()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout.OnEmptySpaceClickListener: void onEmptySpaceClicked(float,float)>
<com.android.settingslib.bluetooth.CachedBluetoothDeviceManager: java.util.Collection getCachedDevicesCopy()>
<com.android.systemui.tuner.CustomListPreference.CustomListPreferenceDialogFragment: void setClickedDialogEntryIndex(int)>
<com.android.server.NetworkManagementService: void enableNat(java.lang.String,java.lang.String)>
<com.android.systemui.recents.views.RecentsView: void onBusEvent(com.android.systemui.recents.events.activity.ShowStackActionButtonEvent)>
<com.android.systemui.statusbar.notification.row.ExpandableView: boolean isGroupExpansionChanging()>
<android.media.MediaSession2Service.MediaNotification: android.app.Notification getNotification()>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.server.pm.permission.BasePermission: boolean isSoftRestricted()>
<com.android.systemui.PluginInflateContainer: void onPluginConnected(com.android.systemui.plugins.ViewProvider,android.content.Context)>
<com.android.server.biometrics.iris.IrisService: boolean hasEnrolledBiometrics(int)>
<com.android.server.pm.ShortcutService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: boolean isPinnedHeadsUp(android.view.View)>
<com.android.systemui.assist.AssistHandleCallbacks: void showAndStay()>
<com.android.systemui.statusbar.phone.StatusIconContainer: void setIgnoredSlots(java.util.List)>
<javax.obex.ClientOperation: java.io.DataOutputStream openDataOutputStream()>
<com.android.server.notification.NotificationRecord: void setVisibility(boolean,int,int)>
<com.android.powermodel.ActivityReport: com.android.powermodel.ComponentActivity findGlobalComponent(com.android.powermodel.Component)>
<com.android.settingslib.CustomEditTextPreferenceCompat.CustomPreferenceDialogFragment: void onClick(android.content.DialogInterface,int)>
<com.android.server.notification.PreferencesHelper: android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String,java.lang.String,int)>
<com.android.keyguard.clock.BubbleClockController: android.graphics.Bitmap getPreview(int,int)>
<com.android.server.usb.descriptors.report.ReportCanvas: java.lang.String getBCDString(int)>
<com.android.systemui.statusbar.phone.PhoneStatusBarPolicy: void onUserSetupChanged()>
<com.android.systemui.assist.AssistOrbView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.systemui.statusbar.policy.KeyguardMonitorImpl: boolean isShowing()>
<android.media.MediaPlayer2.SubtitleData: android.media.MediaPlayer2.TrackInfo getTrackInfo()>
<com.android.statementservice.retriever.Relation: java.lang.String getDetail()>
<com.android.preload.ui.IUI: void showWaitDialog()>
<com.android.server.policy.WindowOrientationListener: void onProposedRotationChanged(int)>
<com.android.server.pm.PackageManagerService: boolean hasSystemUidErrors()>
<com.android.server.autofill.RemoteFillService.FillServiceCallbacks: void onSaveRequestSuccess(java.lang.String,android.content.IntentSender)>
<com.android.systemui.statusbar.phone.StatusBarIconController.DarkIconManager: void destroy()>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: boolean isDrawingAppearAnimation()>
<com.android.systemui.classifier.DurationCountClassifier: java.lang.String getTag()>
<com.android.systemui.plugins.FalsingManager: void onTouchEvent(android.view.MotionEvent,int,int)>
<com.android.keyguard.clock.AnalogClockController: android.view.View getBigClockView()>
<com.android.server.slice.PinnedSliceState: void mergeSpecs(android.app.slice.SliceSpec[])>
<com.android.systemui.pip.tv.PipManager.Listener: void onPipEntered()>
<com.android.systemui.statusbar.RemoteInputController: void removeRemoteInput(com.android.systemui.statusbar.notification.collection.NotificationEntry,java.lang.Object)>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: int getState()>
<com.android.server.policy.WindowManagerPolicy: boolean hasNavigationBar()>
<com.android.server.usb.descriptors.UsbDescriptorParser: java.util.ArrayList getACInterfaceDescriptors(byte,int)>
<com.android.systemui.statusbar.NotificationLockscreenUserManagerImpl: boolean shouldHideNotifications(int)>
<com.android.settingslib.CustomDialogPreferenceCompat: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.printservice.recommendation.PrintServicePlugin: void stop()>
<com.android.systemui.statusbar.car.FullscreenUserSwitcher: void show()>
<com.android.server.audio.AudioService: void notifyVolumeControllerVisible(android.media.IVolumeController,boolean)>
<com.android.systemui.recents.views.RecentsViewTouchHandler: void <init>(com.android.systemui.recents.views.RecentsView)>
<com.android.systemui.statusbar.phone.NavigationBarView: void onNavigationModeChanged(int)>
<com.android.server.testing.shadows.ShadowBackupDataInput: int readEntityData(byte[],int,int)>
<com.android.systemui.plugins.NotificationListenerController: boolean onNotificationRemoved(android.service.notification.StatusBarNotification,android.service.notification.NotificationListenerService.RankingMap)>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: void onServiceConnected()>
<com.android.settingslib.HelpUtils: android.content.Intent getHelpIntent(android.content.Context,java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.notification.row.NotificationUndoLayout: void onMeasure(int,int)>
<com.android.systemui.statusbar.phone.BarTransitions.BarBackgroundDrawable: void setColorFilter(android.graphics.ColorFilter)>
<com.android.commands.sm.Sm: void main(java.lang.String[])>
<com.android.printspooler.model.RemotePrintDocument: void destroy()>
<com.android.server.input.InputManagerService.WindowManagerCallbacks: void notifyConfigurationChanged()>
<com.android.server.biometrics.ClientMonitor: int[] getAcquireVendorIgnorelist()>
<com.android.systemui.keyguard.DismissCallbackWrapper: void notifyDismissError()>
<com.android.systemui.statusbar.phone.DemoStatusIcons: void dispatchDemoCommand(java.lang.String,android.os.Bundle)>
<com.android.systemui.plugins.FalsingManager: void onNotificatonStopDraggingDown()>
<com.android.packageinstaller.television.UninstallAlertFragment: void onGuidedActionClicked(androidx.leanback.widget.GuidedAction)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void notifyHeightChanged(boolean)>
<com.android.systemui.statusbar.phone.StatusBar: void remQsTile(android.content.ComponentName)>
<com.android.server.policy.WindowManagerPolicy: void systemBooted()>
<com.android.server.DeviceIdleController: java.lang.String[] getFullPowerWhitelistExceptIdleInternal()>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: void setDismissRtl(boolean)>
<com.android.server.appbinding.finders.AppServiceFinder: java.lang.Class getServiceClass()>
<com.android.server.autofill.ui.FillUi.Callback: void onResponsePicked(android.service.autofill.FillResponse)>
<com.android.server.pm.PackageManagerService: void revokeRuntimePermission(java.lang.String,java.lang.String,int)>
<com.android.systemui.statusbar.notification.TransformState: void initFrom(android.view.View,com.android.systemui.statusbar.notification.TransformState.TransformInfo)>
<com.android.settingslib.bluetooth.HeadsetProfile: int getOrdinal()>
<com.android.systemui.statusbar.FlingAnimationUtils: void apply(android.view.ViewPropertyAnimator,float,float,float)>
<com.android.server.notification.NotificationUsageStats: void <init>(android.content.Context)>
<com.android.server.policy.WindowManagerPolicy.WindowManagerFuncs: void triggerAnimationFailsafe()>
<com.android.systemui.qs.QSFragment: void closeDetail()>
<com.android.server.notification.ImportanceExtractor: void initialize(android.content.Context,com.android.server.notification.NotificationUsageStats)>
<com.android.server.ConnectivityService: void registerTetheringEventCallback(android.net.ITetheringEventCallback,java.lang.String)>
<com.android.systemui.statusbar.notification.AnimatableProperty: com.android.systemui.statusbar.notification.AnimatableProperty from(java.lang.String,java.util.function.BiConsumer,java.util.function.Function,int,int,int)>
<com.android.systemui.qs.TouchAnimator.Listener: void onAnimationAtStart()>
<com.android.systemui.statusbar.car.CarStatusBar: void dismissKeyguard()>
<com.android.systemui.qs.QSTileHost: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.settingslib.widget.BarChartPreference: void <init>(android.content.Context)>
<com.android.preload.ui.SequenceUI: boolean showConfirmDialog(java.lang.String,java.lang.String)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void addCrossProfileIntentFilter(android.content.ComponentName,android.content.IntentFilter,int)>
<com.android.systemui.util.AsyncSensorManager: boolean initDataInjectionImpl(boolean)>
<com.android.systemui.pip.tv.PipControlButtonView: void setOnClickListener(android.view.View.OnClickListener)>
<com.android.systemui.tuner.LockscreenFragment: void onDestroy()>
<com.android.systemui.statusbar.policy.ZenModeController: android.service.notification.ZenModeConfig.ZenRule getManualRule()>
<com.android.server.accessibility.MagnificationController.ControllerContext: void putMagnificationScale(float,int)>
<com.android.systemui.usb.UsbConfirmActivity: void onCreate(android.os.Bundle)>
<com.android.server.UpdateLockService: void acquireUpdateLock(android.os.IBinder,java.lang.String)>
<com.android.systemui.classifier.Stroke: long getLastEventTimeNano()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isActivePasswordSufficient(int,boolean)>
<com.android.systemui.recents.events.activity.LaunchTaskEvent: void <init>(com.android.systemui.recents.views.TaskView,com.android.systemui.shared.recents.model.Task,android.graphics.Rect,boolean)>
<com.android.settingslib.bluetooth.PanProfile: int getConnectionStatus(android.bluetooth.BluetoothDevice)>
<com.android.settingslib.wifi.WifiTracker: android.net.wifi.WifiManager getManager()>
<javax.obex.ObexTransport: java.io.DataOutputStream openDataOutputStream()>
<com.android.systemui.statusbar.phone.StatusBar: boolean hideStatusBarIconsWhenExpanded()>
<com.android.server.pm.PackageSetting: void writeToProto(android.util.proto.ProtoOutputStream,long,java.util.List)>
<com.android.server.timezone.PackageManagerHelper: boolean usesPermission(java.lang.String,java.lang.String)>
<android.net.ip.IpClientCallbacks: void onQuit()>
<com.android.server.location.MockProvider: int getStatus(android.os.Bundle)>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper: void onRtlPropertiesChanged()>
<com.android.settingslib.bluetooth.PanProfile: int getDrawableResource(android.bluetooth.BluetoothClass)>
<com.android.server.pm.permission.PermissionManagerService: com.android.server.pm.permission.PermissionManagerServiceInternal create(android.content.Context,java.lang.Object)>
<com.android.systemui.recents.views.grid.TaskGridLayoutAlgorithm: android.graphics.Rect getStackActionButtonRect()>
<com.android.systemui.doze.DozeMachine: void requestState(com.android.systemui.doze.DozeMachine.State)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void onUpdateRowStates()>
<com.android.systemui.util.wakelock.WakeLock: com.android.systemui.util.wakelock.WakeLock createPartial(android.content.Context,java.lang.String)>
<com.android.server.notification.NotificationManagerService.NotificationListeners: int getBindFlags()>
<com.android.settingslib.bluetooth.MapProfile: int getSummaryResourceForDevice(android.bluetooth.BluetoothDevice)>
<com.android.systemui.recents.views.ViewPool.ViewPoolConsumer: void onPickUpViewFromPool(java.lang.Object,java.lang.Object,boolean)>
<com.android.powermodel.ComponentActivity: void <init>(com.android.powermodel.AttributionKey)>
<com.android.systemui.LatencyTester: void start()>
<com.android.keyguard.CarrierTextController.CarrierTextCallback: void updateCarrierInfo(com.android.keyguard.CarrierTextController.CarrierTextCallbackInfo)>
<com.android.systemui.statusbar.AnimatedImageView: void <init>(android.content.Context)>
<com.android.systemui.recents.RecentsImplementation: void preloadRecentApps()>
<com.android.systemui.statusbar.phone.StatusBar: void onPhoneHintStarted()>
<com.android.systemui.statusbar.car.CarBatteryController.BatteryViewHandler: void hideBatteryView()>
<com.android.systemui.statusbar.KeyguardAffordanceView: void setCircleRadiusWithoutAnimation(float)>
<com.android.systemui.statusbar.phone.NotificationPanelView: com.android.systemui.statusbar.notification.row.ActivatableNotificationView getActivatedChild()>
<com.android.uiautomator.core.UiObject: boolean swipeDown(int)>
<com.android.systemui.statusbar.NotificationHeaderUtil.ViewComparator: boolean isEmpty(android.view.View)>
<com.android.server.pm.Installer: boolean reconcileSecondaryDexFile(java.lang.String,java.lang.String,int,java.lang.String[],java.lang.String,int)>
<com.android.server.timezone.RulesManagerService: java.lang.String toString()>
<com.android.server.uri.UriPermissionOwner: void removeWritePermission(com.android.server.uri.UriPermission)>
<com.android.settingslib.bluetooth.MapProfile: void setPreferred(android.bluetooth.BluetoothDevice,boolean)>
<com.android.server.audio.AudioEventLogger: void dump(java.io.PrintWriter)>
<com.android.server.PruneInstantAppsJobService: boolean onStartJob(android.app.job.JobParameters)>
<com.android.systemui.statusbar.policy.UserSwitcherController: void onDensityOrFontScaleChanged()>
<com.android.printservice.recommendation.plugin.hp.ServiceResolveQueue.ResolveCallback: void serviceResolved(android.net.nsd.NsdServiceInfo)>
<com.android.systemui.qs.QSTileHost: java.util.Collection getTiles()>
<com.android.server.pm.ShortcutParser: java.util.List parseShortcuts(com.android.server.pm.ShortcutService,java.lang.String,int,java.util.List)>
<android.os.LooperStatsPerfTest: void timeHundredPercentSampling()>
<com.android.systemui.qs.tiles.BluetoothTile.BluetoothDetailAdapter: android.view.View createDetailView(android.content.Context,android.view.View,android.view.ViewGroup)>
<com.android.settingslib.core.lifecycle.ObservablePreferenceFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>
<com.android.systemui.statusbar.notification.row.ExpandableView: void setChangingPosition(boolean)>
<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: boolean canBeDismissed()>
<javax.microedition.khronos.opengles.GL10: int glGetError()>
<com.android.server.accessibility.AccessibilityManagerService.SecurityPolicy: boolean canControlMagnification(com.android.server.accessibility.AbstractAccessibilityServiceConnection)>
<com.android.statsd.loadtest.BatteryStatsParser: java.lang.String parseLine(java.lang.String)>
<com.android.systemui.statusbar.notification.row.AppOpsInfo: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.android.systemui.statusbar.phone.StatusBar: void onCameraLaunchGestureDetected(int)>
<com.android.systemui.tuner.PluginFragment: void onCreate(android.os.Bundle)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onDreamingStateChanged(boolean)>
<com.android.systemui.statusbar.phone.NotificationIconContainer: void setChangingViewPositions(boolean)>
<com.android.server.biometrics.BiometricServiceBase: void authenticateInternal(com.android.server.biometrics.BiometricServiceBase.AuthenticationClientImpl,long,java.lang.String)>
<com.android.systemui.util.InjectionInflationController: void <init>(com.android.systemui.SystemUIFactory.SystemUIRootComponent)>
<com.android.systemui.statusbar.policy.HeadsUpManager: int getContentFlag()>
<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantDefaultPermissionsToDefaultSimCallManager(java.lang.String,int)>
<com.android.systemui.statusbar.policy.SmartReplyView: void resetSmartSuggestions(android.view.View)>
<com.android.systemui.statusbar.NotificationPresenter: boolean isDeviceInVrMode()>
<com.android.settingslib.utils.ThreadUtils: void ensureMainThread()>
<android.net.ipmemorystore.Status: boolean isSuccess()>
<com.android.settingslib.core.lifecycle.Lifecycle: void setPreferenceScreen(androidx.preference.PreferenceScreen)>
<com.android.server.VibratorService: void onInputDeviceAdded(int)>
<com.android.server.inputmethod.InputMethodManagerService: boolean showSoftInput(com.android.internal.view.IInputMethodClient,int,android.os.ResultReceiver)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void onFinishedGoingToSleep()>
<com.android.systemui.statusbar.StatusBarIconView: java.lang.String contentDescForNotification(android.content.Context,android.app.Notification)>
<com.android.server.midi.MidiService: void <init>(android.content.Context)>
<com.android.server.policy.PhoneWindowManager: boolean canDismissBootAnimation()>
<com.android.systemui.shared.recents.view.AppTransitionAnimationSpecsFuture: java.util.List composeSpecs()>
<com.android.shell.BugreportStorageProvider: boolean onCreate()>
<com.android.server.accessibility.AccessibilityManagerService.SecurityPolicy: void updateActiveAndAccessibilityFocusedWindowLocked(int,long,int,int)>
<com.android.server.input.InputManagerService: void setInputFilter(android.view.IInputFilter)>
<com.android.server.testing.shadows.ShadowSlog: int d(java.lang.String,java.lang.String)>
<com.android.server.pm.InstructionSets: java.lang.String getDexCodeInstructionSet(java.lang.String)>
<com.android.systemui.classifier.brightline.TimeLimitedMotionEventBuffer: boolean addAll(java.util.Collection)>
<javax.microedition.khronos.opengles.GL11Ext: void glEnable(int)>
<android.net.IpMemoryStoreClient: void storeNetworkAttributes(java.lang.String,android.net.ipmemorystore.NetworkAttributes,android.net.ipmemorystore.OnStatusListener)>
<android.processor.view.inspector.InspectableClassModel.IntEnumEntry: void <init>(int,java.lang.String)>
<com.android.server.autofill.ui.AutoFillUI: void showError(java.lang.CharSequence,com.android.server.autofill.ui.AutoFillUI.AutoFillUiCallback)>
<com.android.server.IpSecService: void removeTransportModeTransforms(android.os.ParcelFileDescriptor)>
<com.android.server.autofill.AutofillManagerService: void onServiceEnabledLocked(com.android.server.autofill.AutofillManagerServiceImpl,int)>
<com.android.server.SensorNotificationService: void onProviderEnabled(java.lang.String)>
<com.android.systemui.stackdivider.ForcedResizableInfoActivity: void setTaskDescription(android.app.ActivityManager.TaskDescription)>
<com.android.systemui.statusbar.phone.StatusBarRemoteInputCallback: void onStateChanged(int)>
<com.android.systemui.bubbles.animation.StackAnimationController: void magnetToDismiss(float,float,float,java.lang.Runnable)>
<javax.obex.ClientOperation: void abort()>
<javax.microedition.khronos.opengles.GL11: void glGetFixedv(int,int[],int)>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationViewWrapper: void transformTo(com.android.systemui.statusbar.TransformableView,java.lang.Runnable)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isApplicationHidden(android.content.ComponentName,java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.phone.StatusBarIconController.IconManager: void dispatchDemoCommand(java.lang.String,android.os.Bundle)>
<com.android.server.media.MediaSessionRecord: void adjustVolume(java.lang.String,java.lang.String,int,int,android.media.session.ISessionControllerCallback,boolean,int,int,boolean)>
<com.android.server.biometrics.BiometricServiceBase: void doTemplateCleanupForUser(int)>
<com.android.settingslib.CustomDialogPreference.CustomPreferenceDialogFragment: void onPrepareDialogBuilder(android.app.AlertDialog.Builder)>
<android.media.MediaPlayer2.DrmPreparationInfo: int getKeyType()>
<com.android.systemui.shared.plugins.PluginManagerImpl: boolean dependsOn(com.android.systemui.plugins.Plugin,java.lang.Class)>
<com.android.server.autofill.ui.FillUi.Callback: void onCanceled()>
<com.android.server.ConnectivityService: boolean addVpnAddress(java.lang.String,int)>
<com.android.uiautomator.core.UiDevice: boolean isScreenOn()>
<com.android.server.usb.descriptors.report.TextReportCanvas: void writeParagraph(java.lang.String,boolean)>
<com.android.server.audio.AudioEventLogger.Event: com.android.server.audio.AudioEventLogger.Event printLog(java.lang.String)>
<com.android.settingslib.accounts.AuthenticatorHelper: java.lang.String[] getEnabledAccountTypes()>
<com.android.systemui.pip.tv.PipControlsView: void onFinishInflate()>
<com.android.systemui.plugins.ClockPlugin: android.graphics.Bitmap getPreview(int,int)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setOnExpandClickListener(com.android.systemui.statusbar.notification.row.ExpandableNotificationRow.OnExpandClickListener)>
<com.android.systemui.shared.system.DockedStackListenerCompat: void onDockSideChanged(int)>
<com.android.systemui.statusbar.policy.EmergencyCryptkeeperText: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.qs.touch.OverScroll: int dampedScroll(float,int)>
<com.android.server.notification.ZenModeHelper: void recordCaller(com.android.server.notification.NotificationRecord)>
<com.android.systemui.pip.phone.PipManager: void dump(java.io.PrintWriter)>
<com.android.settingslib.bluetooth.HeadsetProfile: void setPreferred(android.bluetooth.BluetoothDevice,boolean)>
<com.android.systemui.statusbar.notification.row.NotificationBackgroundView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.content.SyncManager: void onStopUser(int)>
<com.android.systemui.statusbar.policy.UserSwitcherController.BaseUserAdapter: com.android.systemui.statusbar.policy.UserSwitcherController.UserRecord getItem(int)>
<com.android.server.notification.SystemConditionProviderService: boolean isValidConditionId(android.net.Uri)>
<com.android.server.pm.PackageSetting: boolean isSharedUser()>
<com.android.server.pm.PackageManagerService.IntentFilterVerifier: void receiveVerificationResponse(int)>
<com.android.server.os.BugreportManagerService: void onStart()>
<com.android.systemui.statusbar.notification.row.ExpandableView: void setBelowSpeedBump(boolean)>
<com.android.printservice.recommendation.plugin.mdnsFilter.MDNSFilterPlugin: void <init>(android.content.Context,java.lang.String,java.lang.CharSequence,java.util.List)>
<com.android.systemui.statusbar.CrossFadeHelper: void fadeOut(android.view.View,float,boolean)>
<com.android.settingslib.deviceinfo.AbstractIpAddressPreferenceController: boolean isAvailable()>
<com.android.printspooler.model.RemotePrintDocument: void clearUpdateError()>
<com.android.uiautomator.core.UiDevice: boolean pressDPadDown()>
<com.android.keyguard.EmergencyButton: void takeEmergencyCallAction()>
<com.android.systemui.recents.RecentsImplementation: void growRecents()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void reportPasswordChanged(int)>
<com.example.android.networkusage.SettingsActivity: void onResume()>
<com.android.settingslib.bluetooth.LocalBluetoothProfile: int getSummaryResourceForDevice(android.bluetooth.BluetoothDevice)>
<com.android.systemui.volume.VolumeDialogImpl: void initRingerH()>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: void setInitializationTime(long)>
<com.android.systemui.statusbar.CommandQueue: void startAssist(android.os.Bundle)>
<com.android.server.notification.NotificationManagerService.EnqueueNotificationRunnable: void run()>
<com.android.systemui.statusbar.phone.NavigationBarView: boolean isQuickStepSwipeUpEnabled()>
<com.android.systemui.statusbar.policy.RotationLockController: boolean isRotationLockAffordanceVisible()>
<com.android.uiautomator.core.UiObject: boolean setText(java.lang.String)>
<com.android.settingslib.net.SignalStrengthUtil: boolean shouldInflateSignalStrength(android.content.Context,int)>
<com.android.server.slice.SliceFullAccessList: void grantFullAccess(java.lang.String,int)>
<com.android.preload.ui.SwingUI: java.lang.String showInputDialog(java.lang.String)>
<com.android.systemui.usb.UsbDebuggingSecondaryUserActivity: void onStop()>
<com.android.server.content.SyncStorageEngine.PeriodicSyncAddedListener: void onPeriodicSyncAdded(com.android.server.content.SyncStorageEngine.EndPoint,android.os.Bundle,long,long)>
<com.android.settingslib.widget.LinkTextView: void <init>(android.content.Context)>
<com.android.server.role.RoleUserState: void setVersion(int)>
<com.android.statsd.shelltools.Utils: com.android.os.StatsLog.ConfigMetricsReportList getReportList(long,boolean,boolean,java.util.logging.Logger)>
<com.android.settingslib.suggestions.SuggestionController: void start()>
<com.android.systemui.recents.TriangleShape: com.android.systemui.recents.TriangleShape create(float,float,boolean)>
<com.android.systemui.statusbar.phone.StatusIconContainer: void addIgnoredSlots(java.util.List)>
<javax.obex.ObexTransport: void disconnect()>
<com.android.systemui.statusbar.phone.NavigationBarInflaterView: java.lang.String extractImage(java.lang.String)>
<com.android.systemui.statusbar.StatusIconDisplayable: boolean isIconBlocked()>
<com.android.powermodel.RawBatteryStats: com.android.powermodel.RawBatteryStats parse(java.io.InputStream)>
<com.android.location.provider.LocationProviderBase: void onInit()>
<android.widget.TextViewPrecomputedTextPerfTest: void testNewLayout_PrecomputedText_Selectable()>
<com.android.server.biometrics.BiometricServiceBase.AuthenticationClientImpl: int statsClient()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: int getMaxExpandHeight()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setKeepUninstalledPackages(android.content.ComponentName,java.lang.String,java.util.List)>
<com.android.commands.svc.Svc: void main(java.lang.String[])>
<com.android.systemui.shared.system.ActivityCompat: int getDisplayId()>
<com.android.settingslib.net.UidDetailProvider: int buildKeyForUser(int)>
<android.processor.view.inspector.PlatformInspectableProcessor: boolean process(java.util.Set,javax.annotation.processing.RoundEnvironment)>
<com.android.systemui.qs.QSPanel: void onCollapse()>
<com.android.systemui.DependencyBinder: com.android.systemui.statusbar.policy.FlashlightController provideFlashlightController(com.android.systemui.statusbar.policy.FlashlightControllerImpl)>
<com.android.systemui.volume.CarVolumeItem: void setGroupId(int)>
<javax.microedition.khronos.opengles.GL10: void glColor4f(float,float,float,float)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void enforceCanManageCaCerts(android.content.ComponentName,java.lang.String)>
<com.android.server.notification.GroupHelper.Callback: void addAutoGroup(java.lang.String)>
<com.android.systemui.recents.views.TaskViewThumbnail: void <init>(android.content.Context,android.util.AttributeSet)>
<android.view.ViewShowHidePerfTest: void <init>(android.view.ViewShowHidePerfTest.SubTreeFactory,int)>
<com.android.systemui.statusbar.phone.NavigationBarFragment: boolean isNavBarWindowVisible()>
<com.android.settingslib.media.BluetoothMediaManager: void onServiceConnected()>
<javax.microedition.khronos.opengles.GL10: void glMatrixMode(int)>
<com.android.server.location.AbstractLocationProvider: void setEnabled(boolean)>
<com.android.uiautomator.testrunner.UiAutomatorTestCase: com.android.uiautomator.core.UiDevice getUiDevice()>
<com.android.server.content.SyncManager: void dumpPeriodicSyncs(java.io.PrintWriter,com.android.server.content.SyncAdapterStateFetcher)>
<com.android.settingslib.CustomDialogPreference: void onPrepareDialogBuilder(android.app.AlertDialog.Builder,android.content.DialogInterface.OnClickListener)>
<com.android.systemui.statusbar.notification.row.ExpandableView: long performRemoveAnimation(long,long,float,boolean,float,java.lang.Runnable,android.animation.AnimatorListenerAdapter)>
<com.android.server.ConnectivityService: void pendingListenForNetwork(android.net.NetworkCapabilities,android.app.PendingIntent)>
<com.android.systemui.recents.views.lowram.TaskStackLowRamLayoutAlgorithm: float getScrollPForTask(int)>
<com.android.server.pm.KeySetManagerService: com.android.server.pm.KeySetHandle getSigningKeySetByPackageNameLPr(java.lang.String)>
<com.android.server.devicepolicy.DevicePolicyConstants: void dump(java.lang.String,java.io.PrintWriter)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isBackupServiceEnabled(android.content.ComponentName)>
<com.android.systemui.tuner.LockscreenFragment.Adapter: com.android.systemui.tuner.LockscreenFragment.Holder onCreateViewHolder(android.view.ViewGroup,int)>
<android.net.ip.IpServer: void stop()>
<com.android.settingslib.drawable.UserIconDrawable: void setTintList(android.content.res.ColorStateList)>
<com.android.gallery3d.exif.ExifInterface: void readExif(java.io.InputStream)>
<com.android.settingslib.dream.DreamBackend: boolean isActivatedOnDock()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isPackageAllowedToAccessCalendarForUser(java.lang.String,int)>
<com.android.server.notification.PreferencesHelper: void onUserRemoved(int)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: boolean bouncerNeedsScrimming()>
<com.android.systemui.statusbar.policy.KeyButtonView: void setOnClickListener(android.view.View.OnClickListener)>
<com.android.systemui.qs.tiles.HotspotTile: boolean isAvailable()>
<com.android.systemui.recents.views.RecentsView: void showEmptyView(int)>
<com.android.systemui.statusbar.TransformableView: void transformFrom(com.android.systemui.statusbar.TransformableView)>
<com.android.server.notification.PreferencesHelper: boolean badgingEnabled(android.os.UserHandle)>
<com.android.server.audio.AudioEventLogger.StringEvent: java.lang.String eventToString()>
<com.android.systemui.statusbar.notification.NotificationAlertingManager: boolean alertAgain(com.android.systemui.statusbar.notification.collection.NotificationEntry,android.app.Notification)>
<com.android.systemui.pip.PipUI: void showPictureInPictureMenu()>
<com.android.systemui.glwallpaper.GLWallpaperRenderer: android.util.Size reportSurfaceSize()>
<com.android.server.slice.SlicePermissionManager: void removePkg(java.lang.String,int)>
<com.android.systemui.qs.QSPanel.QSTileLayout: void setExpansion(float)>
<com.android.systemui.biometrics.DialogViewCallback: void onUserCanceled()>
<com.android.server.pm.permission.PermissionsState: boolean hasRequestedPermission(java.lang.String)>
<com.android.server.policy.PowerAction: void <init>(android.content.Context,com.android.server.policy.WindowManagerPolicy.WindowManagerFuncs)>
<com.android.server.display.DisplayModeDirector: com.android.server.display.DisplayModeDirector.AppRequestObserver getAppRequestObserver()>
<com.android.systemui.shared.plugins.VersionInfo: int getDefaultVersion()>
<com.android.systemui.qs.tiles.HotspotTile: void <init>(com.android.systemui.qs.QSHost,com.android.systemui.statusbar.policy.HotspotController,com.android.systemui.statusbar.policy.DataSaverController)>
<com.android.systemui.statusbar.policy.HeadsUpManager: void onAlertEntryRemoved(com.android.systemui.statusbar.AlertingNotificationManager.AlertEntry)>
<com.android.settingslib.widget.BarChartPreference: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: java.lang.String getCarConnectionSummary()>
<com.android.systemui.qs.tileimpl.QSIconViewImpl: void <init>(android.content.Context)>
<com.android.systemui.qs.external.CustomTile: android.metrics.LogMaker populate(android.metrics.LogMaker)>
<com.android.systemui.shared.system.ActivityManagerWrapper: android.app.ActivityManager.RunningTaskInfo getRunningTask()>
<com.android.systemui.statusbar.notification.row.StackScrollerDecorView: boolean isVisible()>
<com.android.systemui.recents.views.TaskStackView: void setRelativeFocusedTask(boolean,boolean,boolean,boolean,int)>
<com.android.server.gpu.GpuService: void onStart()>
<com.android.systemui.recents.model.TaskStack: void removeAllTasks(boolean)>
<com.android.server.content.SyncOperation: java.lang.Object[] toEventLog(int)>
<javax.microedition.khronos.opengles.GL11: void glGetTexParameterxv(int,int,int[],int)>
<com.android.systemui.statusbar.GestureRecorder.Gesture.MotionEventRecord: java.lang.String toJson()>
<com.android.systemui.bubbles.BubbleStackView: void onDetachedFromWindow()>
<android.database.SQLiteDatabasePerfTest: void testCursorIterateForward()>
<com.android.settingslib.net.DataUsageController: void setCallback(com.android.settingslib.net.DataUsageController.Callback)>
<com.android.systemui.statusbar.phone.DemoStatusIcons: void setColor(int)>
<com.android.settingslib.core.AbstractPreferenceController: java.lang.CharSequence getSummary()>
<com.android.systemui.recents.misc.SysUiTaskStackChangeListener: boolean checkCurrentUserId(android.content.Context,boolean)>
<com.android.systemui.pip.phone.PipDismissViewController: void destroyDismissTarget()>
<com.android.systemui.recents.views.TaskStackViewScroller: float setDeltaStackScroll(float,float)>
<com.google.android.startop.iorap.TaskResult: int describeContents()>
<com.android.systemui.tuner.BatteryPreference: void onTuningChanged(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.phone.NavigationBarView: void setNavigationIconHints(int)>
<com.android.systemui.settings.BrightnessController: void registerCallbacks()>
<com.android.systemui.statusbar.phone.StatusBarIconList.Slot: void removeForTag(int)>
<com.android.systemui.doze.DozeService: void onCreate()>
<com.android.systemui.tuner.CustomListPreference: void onDialogStateRestored(android.app.DialogFragment,android.app.Dialog,android.os.Bundle)>
<com.android.server.location.GeofenceManager: void <init>(android.content.Context,com.android.server.location.LocationBlacklist)>
<com.android.keyguard.clock.ClockManager.ClockChangedListener: void onClockChanged(com.android.systemui.plugins.ClockPlugin)>
<com.android.systemui.shared.plugins.PluginManagerImpl: void addPluginListener(com.android.systemui.plugins.PluginListener,java.lang.Class)>
<com.android.server.ConnectivityService: android.net.NetworkStackClient getNetworkStack()>
<com.android.server.devicepolicy.OverlayPackagesProvider: java.util.Set getNonRequiredApps(android.content.ComponentName,int,java.lang.String)>
<com.android.systemui.qs.tiles.BluetoothTile.BluetoothDetailAdapter: int getMetricsCategory()>
<com.android.server.usb.descriptors.Usb10ACInputTerminal: void <init>(int,byte,byte,int)>
<com.android.systemui.keyguard.KeyguardViewMediator: void onShortPowerPressedGoHome()>
<com.android.systemui.volume.CaptionsToggleImageButton: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: boolean setScanMode(int,int)>
<com.android.server.audio.AudioService: java.lang.String registerAudioPolicy(android.media.audiopolicy.AudioPolicyConfig,android.media.audiopolicy.IAudioPolicyCallback,boolean,boolean,boolean,boolean,android.media.projection.IMediaProjection)>
<com.android.server.notification.ManagedServices: void readExtraTag(java.lang.String,org.xmlpull.v1.XmlPullParser)>
<com.android.server.usb.descriptors.UsbDescriptorParser: float getOutputHeadsetProbability()>
<com.google.android.startop.iorap.AppLaunchEvent.IntentStarted: void <init>(long,android.content.Intent)>
<com.android.systemui.statusbar.car.CarNavigationButton: void setSelected(boolean)>
<com.android.server.DeviceIdleController: void exitIdleInternal(java.lang.String)>
<android.perftests.utils.StateManager: java.lang.Object get()>
<com.android.systemui.statusbar.TransformableView: void setVisible(boolean)>
<com.android.systemui.appops.AppOpsControllerImpl: void setListening(boolean)>
<com.android.systemui.qs.QSDetailItems: void setTagSuffix(java.lang.String)>
<com.android.systemui.recents.misc.DozeTrigger: void <init>(int,java.lang.Runnable)>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: void panelScrimMinFractionChanged(float)>
<com.android.systemui.bubbles.animation.ExpandedAnimationController: void dragBubbleOut(android.view.View,float,float)>
<com.android.server.infra.ServiceNameResolver: boolean isDefaultServiceEnabled(int)>
<com.android.server.accessibility.AccessibilityGestureDetector.Listener: void onDoubleTapAndHold(android.view.MotionEvent,int)>
<com.android.systemui.plugins.PluginInitializerImpl: android.os.Looper getBgLooper()>
<com.android.systemui.statusbar.policy.SmartReplyView.SmartActions: void <init>(java.util.List,boolean)>
<com.android.settingslib.Utils: boolean isWifiOnly(android.content.Context)>
<com.android.server.biometrics.Constants: java.lang.String tagAuthStartError()>
<com.android.systemui.pip.phone.PipMenuActivityController.Listener: void onPipDismiss()>
<com.android.systemui.statusbar.notification.row.StackScrollerDecorView: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.shared.system.ActivityOptionsCompat: android.app.ActivityOptions makeSplitScreenOptions(boolean)>
<com.android.server.notification.NotificationManagerService: android.companion.ICompanionDeviceManager getCompanionManager()>
<com.android.systemui.statusbar.NotificationLifetimeExtender: void setShouldManageLifetime(com.android.systemui.statusbar.notification.collection.NotificationEntry,boolean)>
<com.android.gallery3d.glrenderer.GLCanvas: float getAlpha()>
<com.android.settingslib.media.ConnectionRecordManager: int fetchConnectionRecord(android.content.Context,java.lang.String)>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationHeaderViewWrapper: void transformTo(com.android.systemui.statusbar.TransformableView,java.lang.Runnable)>
<com.android.server.usb.descriptors.UsbDeviceDescriptor: int getProductID()>
<com.android.systemui.assist.ui.DefaultUiController: void hide()>
<com.android.gallery3d.glrenderer.GLES20Canvas: void save()>
<com.android.server.pm.PackageManagerService: int getFlagsForUid(int)>
<com.android.future.usb.UsbAccessory: int hashCode()>
<com.android.systemui.statusbar.phone.StatusBar: java.lang.Object createHandler()>
<com.android.settingslib.inputmethod.InputMethodAndSubtypeEnablerManager: boolean onPreferenceChange(androidx.preference.Preference,java.lang.Object)>
<com.android.server.usb.descriptors.UsbDescriptorParser: boolean isOutputHeadset()>
<com.android.server.policy.PermissionPolicyService: void onBootPhase(int)>
<com.android.systemui.Prefs: java.util.Map getAll(android.content.Context)>
<com.android.server.notification.NotificationManagerService: void readDefaultApprovedServices(int)>
<com.android.server.ConnectivityService: void startLegacyVpn(com.android.internal.net.VpnProfile)>
<com.google.android.startop.iorap.PackageEvent: java.lang.String toString()>
<com.android.externalstorage.ExternalStorageProvider: java.lang.String getDocIdForFile(java.io.File)>
<com.android.systemui.statusbar.phone.StatusBarIconController: void setExternalIcon(java.lang.String)>
<com.android.server.uri.UriGrantsManagerService.Lifecycle: void onStart()>
<android.widget.TextViewPrecomputedTextPerfTest: void testOnDraw_RandomText_Selectable()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setIsLowPriority(boolean)>
<com.android.server.usb.descriptors.tree.UsbDescriptorsInterfaceNode: void <init>(com.android.server.usb.descriptors.UsbInterfaceDescriptor)>
<com.android.server.policy.RestartAction: boolean showBeforeProvisioning()>
<com.android.printspooler.ui.PageAdapter: android.support.v7.widget.RecyclerView.ViewHolder onCreateViewHolder(android.view.ViewGroup,int)>
<com.android.systemui.ForegroundServicesDialog: void onClick(android.content.DialogInterface,int)>
<com.android.systemui.doze.DozeSensors.Callback: void onSensorPulse(int,boolean,float,float,float[])>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb: void invalidateKeysForUser(int)>
<com.android.gallery3d.glrenderer.BasicTexture: boolean isLoaded()>
<com.android.server.policy.WindowManagerPolicy: android.view.animation.Animation createKeyguardWallpaperExit(boolean)>
<com.google.android.startop.iorap.AppLaunchEvent: boolean equals(java.lang.Object)>
<com.android.systemui.qs.QSDetail: void animateDetailVisibleDiff(int,int,boolean,android.animation.Animator.AnimatorListener)>
<com.android.server.deviceidle.TvConstraintController: void stop()>
<com.android.systemui.statusbar.policy.KeyguardMonitorImpl: long calculateGoingToFullShadeDelay()>
<com.android.systemui.statusbar.phone.ScrimController: android.os.Handler getHandler()>
<com.android.server.contentcapture.ContentCaptureManagerService: com.android.server.contentcapture.ContentCapturePerUserService newServiceLocked(int,boolean)>
<com.android.printspooler.model.PrintSpoolerService: android.graphics.drawable.Icon getCustomPrinterIcon(android.print.PrinterId)>
<com.android.settingslib.drawer.Tile: java.lang.CharSequence getTitle(android.content.Context)>
<com.android.systemui.statusbar.NotificationLockscreenUserManager: android.util.SparseArray getCurrentProfiles()>
<com.android.settingslib.applications.ApplicationsState: java.lang.String normalize(java.lang.String)>
<com.android.systemui.statusbar.notification.stack.NotificationSwipeHelper.NotificationCallback: void handleChildViewDismissed(android.view.View)>
<com.android.server.usb.descriptors.UsbACAudioStreamEndpoint: void <init>(int,byte,int)>
<com.android.server.slice.SliceClientPermissions: com.android.server.slice.SliceClientPermissions createFrom(org.xmlpull.v1.XmlPullParser,com.android.server.slice.DirtyTracker)>
<com.android.server.notification.ZenModeHelper: void <init>(android.content.Context,android.os.Looper,com.android.server.notification.ConditionProviders)>
<com.android.systemui.statusbar.phone.NavigationBarFrame: void <init>(android.content.Context)>
<com.android.server.policy.WindowManagerPolicy: void dump(java.lang.String,java.io.PrintWriter,java.lang.String[])>
<com.android.settingslib.core.instrumentation.EventLogWriter: void hidden(android.content.Context,int)>
<android.media.MediaPlayer2: java.lang.Object setWakeLock(android.os.PowerManager.WakeLock)>
<com.android.systemui.volume.VolumeDialogImpl: void destroy()>
<com.android.server.webkit.SystemInterface: void enableFallbackLogic(boolean)>
<android.util.perftests.LogPerfTest: void testLogPerf()>
<com.android.systemui.classifier.LengthCountClassifier: float getFalseTouchEvaluation(int,com.android.systemui.classifier.Stroke)>
<com.android.systemui.statusbar.phone.StatusBarIconController.IconManager: void onSetIconHolder(int,com.android.systemui.statusbar.phone.StatusBarIconHolder)>
<com.android.server.timedetector.TimeDetectorService: void <init>(android.content.Context,com.android.server.timedetector.TimeDetectorStrategy.Callback,com.android.server.timedetector.TimeDetectorStrategy)>
<com.android.systemui.statusbar.notification.stack.AmbientState: void setSpeedBumpIndex(int)>
<com.android.systemui.statusbar.policy.ExtensionController.Extension: void addCallback(java.util.function.Consumer)>
<com.android.systemui.statusbar.phone.ScrimController: void doOnTheNextFrame(java.lang.Runnable)>
<com.android.packageinstaller.UninstallUninstalling: void onCreate(android.os.Bundle)>
<com.android.powermodel.BatteryStatsReader: com.android.powermodel.ActivityReport parse(java.io.InputStream)>
<com.android.systemui.statusbar.notification.row.NotificationGutsManager: boolean shouldExtendLifetime(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onDozeAmountChanged(float,float)>
<com.example.android.networkusage.NetworkActivity: void onDestroy()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: float getHeaderVisibleAmount()>
<com.android.server.pm.dex.DexoptOptions: void <init>(java.lang.String,java.lang.String,int)>
<com.android.server.location.GnssNavigationMessageProvider: int registerWithService()>
<com.android.settingslib.drawer.TileUtils: java.lang.String getTextFromUri(android.content.Context,java.lang.String,java.util.Map,java.lang.String)>
<com.android.systemui.statusbar.notification.row.NotificationGuts: boolean isLeavebehind()>
<com.android.gallery3d.common.Utils: int clamp(int,int,int)>
<com.android.systemui.statusbar.phone.CollapsedStatusBarFragment: void onResume()>
<com.android.server.audio.AudioService.VolumeController: void postVolumeChanged(int,int)>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcher.Adapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<com.android.settingslib.CustomDialogPreferenceCompat.CustomPreferenceDialogFragment: void onClick(android.content.DialogInterface,int)>
<com.android.server.pm.PackageKeySetData: void addUpgradeKeySet(java.lang.String)>
<com.android.systemui.statusbar.KeyguardIndicationController: void showTransientIndication(java.lang.CharSequence)>
<com.android.server.notification.NotificationManagerService.NotificationAssistants: void disallowAdjustmentType(java.lang.String)>
<com.android.server.biometrics.BiometricUserState: void addBiometric(android.hardware.biometrics.BiometricAuthenticator.Identifier)>
<com.android.keyguard.EmergencyButton: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.settingslib.core.instrumentation.MetricsFeatureProvider: void action(android.content.Context,int,java.lang.String)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isProfileOwner(android.content.ComponentName,int)>
<com.android.settingslib.utils.StringUtil: java.lang.CharSequence formatRelativeTime(android.content.Context,double,boolean,android.icu.text.RelativeDateTimeFormatter.Style)>
<com.android.keyguard.KeyguardHostView: boolean shouldEnableMenuKey()>
<com.android.settingslib.media.LocalMediaManager: void connectDevice(com.android.settingslib.media.MediaDevice)>
<com.android.printspooler.renderer.IPdfEditor: void closeDocument()>
<com.android.server.usb.descriptors.UsbInterfaceAssoc: byte getFunction()>
<com.android.settingslib.net.NetworkCycleData.Builder: com.android.settingslib.net.NetworkCycleData getObject()>
<android.media.MediaPlayer2: android.media.AudioAttributes getAudioAttributes()>
<com.android.settingslib.widget.FooterPreferenceMixin: com.android.settingslib.widget.FooterPreference createFooterPreference()>
<com.android.systemui.statusbar.notification.row.ExpandableOutlineView: void setClipBottomAmount(int)>
<com.android.location.provider.ActivityRecognitionProvider: boolean disableActivityEvent(java.lang.String,int)>
<com.android.keyguard.KeyguardAbsKeyInputView: void showPromptReason(int)>
<com.android.systemui.statusbar.AlertingNotificationManager.AlertEntry: void setEntry(com.android.systemui.statusbar.notification.collection.NotificationEntry,java.lang.Runnable)>
<com.android.systemui.recents.views.ViewPool: void <init>(android.content.Context,com.android.systemui.recents.views.ViewPool.ViewPoolConsumer)>
<com.android.systemui.biometrics.FingerprintDialogView: boolean shouldAnimateForTransition(int,int)>
<com.android.systemui.statusbar.CrossFadeHelper: void fadeOut(android.view.View,java.lang.Runnable)>
<com.android.systemui.statusbar.notification.TransformState: void transformViewFrom(com.android.systemui.statusbar.notification.TransformState,int,com.android.systemui.statusbar.ViewTransformationHelper.CustomTransformation,float)>
<com.android.systemui.qs.PagedTileLayout: void saveInstanceState(android.os.Bundle)>
<com.android.systemui.plugins.ClockPlugin: void onTimeTick()>
<com.android.server.display.WifiDisplayController.Listener: void onDisplayConnectionFailed()>
<com.android.systemui.statusbar.phone.HeadsUpTouchHelper.Callback: android.content.Context getContext()>
<com.android.server.testing.shadows.ShadowInternalRecoveryServiceException: java.lang.String getMessage()>
<com.android.systemui.tuner.StatusBarSwitch: void <init>(android.content.Context,android.util.AttributeSet)>
<javax.microedition.khronos.opengles.GL11: void glTexParameteriv(int,int,java.nio.IntBuffer)>
<com.android.systemui.biometrics.BiometricDialogView: android.view.WindowManager.LayoutParams getLayoutParams()>
<com.android.printservice.recommendation.util.Preconditions: java.util.Collection checkCollectionNotEmpty(java.util.Collection,java.lang.String)>
<com.android.server.LocationManagerService: void setTestProviderLocation(java.lang.String,android.location.Location,java.lang.String)>
<com.android.server.SystemService: void onStopUser(int)>
<com.android.systemui.plugins.statusbar.StatusBarStateController: int getState()>
<com.android.server.locksettings.recoverablekeystore.RecoverableKeyStoreManager: java.util.Map getRecoveryStatus()>
<com.android.gallery3d.exif.ExifInterface: int getTagDefinitionForTag(com.android.gallery3d.exif.ExifTag)>
<com.android.systemui.settings.ToggleSlider.Listener: void onInit(com.android.systemui.settings.ToggleSlider)>
<com.android.keyguard.KeyguardUpdateMonitor: void dispatchBootCompleted()>
<com.android.uiautomator.core.UiScrollable: void <init>(com.android.uiautomator.core.UiSelector)>
<com.android.server.pm.UserManagerService: int getUserSerialNumber(int)>
<com.google.android.startop.iorap.IorapForwardingService: android.os.IBinder.DeathRecipient provideDeathRecipient()>
<com.android.server.PersistentDataBlockManagerInternal: byte[] getFrpCredentialHandle()>
<com.android.systemui.statusbar.phone.StatusBarIconController: void setIcon(java.lang.String,com.android.internal.statusbar.StatusBarIcon)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setStatusAccessibilityImportance(int)>
<com.android.server.biometrics.ClientMonitor: boolean onEnrollResult(android.hardware.biometrics.BiometricAuthenticator.Identifier,int)>
<com.android.server.deviceidle.IDeviceIdleConstraint: void startMonitoring()>
<javax.microedition.khronos.opengles.GL10: void glGenTextures(int,int[],int)>
<com.android.systemui.qs.tileimpl.QSTileBaseView: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: boolean isScrolledToTop()>
<com.android.settingslib.bluetooth.PbapClientProfile: boolean disconnect(android.bluetooth.BluetoothDevice)>
<com.android.systemui.qs.QSContainerImpl: void updateExpansion()>
<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.ClientMonitor getPendingClient()>
<com.android.settingslib.RestrictedPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void onFinishedGoingToSleep(int,boolean)>
<com.android.server.autofill.Helper: android.app.assist.AssistStructure.ViewNode sanitizeUrlBar(android.app.assist.AssistStructure,java.lang.String[])>
<com.android.server.pm.UserManagerService: void setUserAdmin(int)>
<android.media.UriDataSourceDesc: java.util.List getCookies()>
<com.android.systemui.statusbar.phone.FloatingRotationButton: boolean isVisible()>
<com.android.server.location.LocationBasedCountryDetector: long getQueryLocationTimeout()>
<com.android.server.location.GnssLocationProvider: android.location.INetInitiatedListener getNetInitiatedListener()>
<com.android.photos.SimpleBitmapRegionDecoder: int getHeight()>
<com.android.settingslib.RestrictedLockUtilsInternal: android.graphics.drawable.Drawable getRestrictedPadlock(android.content.Context)>
<com.android.systemui.statusbar.phone.RegionSamplingHelper: void onViewDetachedFromWindow(android.view.View)>
<com.android.systemui.statusbar.phone.StatusBar: void startPendingIntentDismissingKeyguard(android.app.PendingIntent,java.lang.Runnable,android.view.View)>
<com.android.keyguard.KeyguardAbsKeyInputView: void resetState()>
<com.android.systemui.statusbar.phone.KeyguardBouncer: boolean onBackPressed()>
<com.android.systemui.biometrics.FaceDialogView: void onErrorReceived(java.lang.String)>
<com.android.server.biometrics.face.FaceUserState: java.lang.String getBiometricsTag()>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: boolean rowExists()>
<android.os.CpuUsageTrackingPerfTest: void timeReadStatFileDirectly()>
<com.android.server.SystemService: android.content.Context getContext()>
<android.net.util.PrefixUtils: java.util.Set getNonForwardablePrefixes()>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: void <init>(android.content.Context,android.os.Looper,com.android.settingslib.bluetooth.LocalBluetoothManager)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void addChildNotification(com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<com.android.settingslib.bluetooth.A2dpProfile: boolean disconnect(android.bluetooth.BluetoothDevice)>
<com.android.systemui.doze.DozeHost: void startDozing()>
<com.android.systemui.shared.system.TaskStackChangeListener: void onTaskStackChanged()>
<com.android.commands.uiautomator.DumpCommand: java.lang.String shortHelp()>
<com.android.systemui.qs.car.CarQSFragment: int getDesiredHeight()>
<com.android.systemui.pip.phone.PipManager: void initialize(android.content.Context)>
<com.android.systemui.statusbar.phone.StatusBar: int getStatusBarHeight()>
<com.android.systemui.statusbar.policy.ZenModeController.Callback: void onZenAvailableChanged(boolean)>
<com.android.systemui.statusbar.NotificationLockscreenUserManagerImpl: void onStateChanged(int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isAccessibilityServicePermittedByAdmin(android.content.ComponentName,java.lang.String,int)>
<com.android.server.utils.ManagedApplicationService.BinderChecker: boolean checkType(android.os.IInterface)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer getChildrenContainer()>
<com.android.systemui.fragments.FragmentHostManager: com.android.systemui.fragments.FragmentHostManager addTagListener(java.lang.String,com.android.systemui.fragments.FragmentHostManager.FragmentListener)>
<com.android.systemui.statusbar.phone.ButtonInterface: void setDarkIntensity(float)>
<com.android.settingslib.wifi.AccessPointPreference: int getWidgetLayoutResourceId()>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void setRemoteInputVisible(boolean)>
<android.processor.view.inspector.InspectableClassModel: java.util.Collection getAllProperties()>
<com.android.systemui.ScreenDecorations.DisplayCutoutView: boolean shouldInterceptTouch()>
<com.android.settingslib.CustomDialogPreferenceCompat.CustomPreferenceDialogFragment: void onBindDialogView(android.view.View)>
<com.android.systemui.keyguard.KeyguardViewMediator: boolean isShowingAndNotOccluded()>
<com.android.sharedstoragebackup.SharedStorageAgent: void onRestoreFile(android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long)>
<android.net.ipmemorystore.NetworkAttributes: void <init>(android.net.ipmemorystore.NetworkAttributesParcelable)>
<com.android.server.notification.ZenLog: void traceSubscribe(android.net.Uri,android.service.notification.IConditionProvider,android.os.RemoteException)>
<com.android.server.midi.MidiService: android.media.midi.MidiDeviceStatus getDeviceStatus(android.media.midi.MidiDeviceInfo)>
<com.android.systemui.shared.system.ActivityManagerWrapper: void startActivityFromRecentsAsync(com.android.systemui.shared.recents.model.Task.TaskKey,android.app.ActivityOptions,int,int,java.util.function.Consumer,android.os.Handler)>
<com.android.server.NetworkManagementService: void unregisterTetheringStatsProvider(android.net.ITetheringStatsProvider)>
<com.android.systemui.statusbar.phone.StatusBarIconList.Slot: void clear()>
<com.android.systemui.qs.tileimpl.QSTileView: void createLabel()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGenRenderbuffersOES(int,int[],int)>
<com.android.server.notification.NotificationRecord: long[] getVibration()>
<com.android.systemui.recents.events.ui.DeleteTaskDataEvent: void <init>(com.android.systemui.shared.recents.model.Task)>
<com.android.systemui.statusbar.NavigationBarController: void checkNavBarModes(int)>
<com.android.server.trust.TrustAgentWrapper: void <init>(android.content.Context,com.android.server.trust.TrustManagerService,android.content.Intent,android.os.UserHandle)>
<android.net.ip.IIpClient: void stop()>
<com.android.settingslib.deviceinfo.AbstractIpAddressPreferenceController: java.lang.String[] getConnectivityIntents()>
<com.android.preload.DumpDataIO: java.lang.String serialize(java.util.Collection)>
<com.android.systemui.statusbar.notification.stack.ExpandableViewState: void copyFrom(com.android.systemui.statusbar.notification.stack.ViewState)>
<com.android.systemui.analytics.SensorLoggerSession: void addMotionEvent(android.view.MotionEvent)>
<com.android.systemui.statusbar.policy.InflatedSmartReplies: com.android.systemui.statusbar.policy.SmartReplyView getSmartReplyView()>
<com.android.server.location.RemoteListenerHelper: void foreach(com.android.server.location.RemoteListenerHelper.ListenerOperation)>
<android.net.netlink.NetlinkConstants: java.lang.String stringForNlMsgType(short)>
<android.net.shared.ProvisioningConfiguration.Builder: android.net.shared.ProvisioningConfiguration.Builder withoutMultinetworkPolicyTracker()>
<com.android.systemui.statusbar.notification.TransformState: com.android.systemui.statusbar.notification.TransformState obtain()>
<com.android.systemui.SwipeHelper.Callback: void onChildDismissed(android.view.View)>
<com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer: com.android.systemui.statusbar.notification.row.ExpandableNotificationRow getContainingNotification()>
<com.android.server.vr.VrStateListener: void onVrStateChanged(boolean)>
<com.android.server.inputmethod.InputMethodManagerInternal: com.android.server.inputmethod.InputMethodManagerInternal get()>
<javax.obex.Operation: void abort()>
<javax.obex.Operation: java.io.DataOutputStream openDataOutputStream()>
<com.android.keyguard.KeyguardSimPinView: java.lang.CharSequence getTitle()>
<android.text.StaticLayoutPerfTest: void testDraw_PrecomputedText_Styled_WithoutCache()>
<com.android.server.media.MediaSessionRecord: int getVolumeControl()>
<com.android.server.notification.ManagedServices.ManagedServiceInfo: void <init>(android.os.IInterface,android.content.ComponentName,int,boolean,android.content.ServiceConnection,int)>
<com.android.keyguard.clock.ClockOptionsProvider: java.lang.String getType(android.net.Uri)>
<com.android.server.policy.WindowManagerPolicy.WindowState: android.graphics.Rect getDisplayFrameLw()>
<com.android.systemui.appops.AppOpsControllerImpl: void onOpNoted(int,int,java.lang.String,int)>
<com.android.systemui.statusbar.phone.HeadsUpManagerPhone: void addSwipedOutNotification(java.lang.String)>
<com.android.systemui.statusbar.phone.MultiUserSwitch: void setClickable(boolean)>
<com.android.systemui.statusbar.phone.StatusBarWindowController: void setBubblesShowing(boolean)>
<com.android.gallery3d.exif.ExifInterface: void readExif(byte[])>
<com.android.systemui.statusbar.phone.StatusBarWindowController: void setKeyguardNeedsInput(boolean)>
<com.android.systemui.statusbar.policy.Clock: void onAttachedToWindow()>
<com.android.systemui.statusbar.phone.BiometricUnlockController: int getMode()>
<com.android.server.pm.PackageSetting: java.lang.String toString()>
<com.android.systemui.statusbar.policy.CallbackHandler: void setEthernetIndicators(com.android.systemui.statusbar.policy.NetworkController.IconState)>
<com.android.systemui.statusbar.notification.VisualStabilityManager: void setPanelExpanded(boolean)>
<com.android.systemui.statusbar.policy.UserSwitcherController: void addAdapter(java.lang.ref.WeakReference)>
<com.android.systemui.recents.model.TaskStack: void setCallbacks(com.android.systemui.recents.model.TaskStack.TaskStackCallbacks)>
<com.android.server.hdmi.HdmiCecController.NativeWrapper: void nativeSetLanguage(long,java.lang.String)>
<com.android.systemui.SystemUIFactory.SystemUIRootComponent: com.android.systemui.Dependency.DependencyInjector createDependency()>
<com.android.statementservice.retriever.AbstractAsset: com.android.statementservice.retriever.AbstractAsset create(java.lang.String)>
<com.android.systemui.statusbar.notification.row.NotificationContentInflater: void <init>(com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<com.android.systemui.statusbar.notification.row.ExpandableView: float getTranslation()>
<com.android.server.AnyMotionDetector: boolean hasSensor()>
<com.android.systemui.plugins.OverlayPlugin: void setCollapseDesired(boolean)>
<com.android.systemui.statusbar.phone.NavigationBarFragment: android.view.View create(android.content.Context,com.android.systemui.fragments.FragmentHostManager.FragmentListener)>
<com.android.systemui.statusbar.policy.LocationControllerImpl: void addCallback(com.android.systemui.statusbar.policy.LocationController.LocationChangeCallback)>
<com.android.server.DynamicSystemService: boolean isInUse()>
<com.android.systemui.statusbar.notification.stack.ViewState: boolean isAnimating(android.view.View,com.android.systemui.statusbar.notification.AnimatableProperty)>
<com.android.systemui.statusbar.phone.StatusBar: void updateVisibleToUser()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isManagedKiosk()>
<com.android.server.pm.PackageSetting: boolean hasChildPackages()>
<com.android.settingslib.core.lifecycle.events.SetPreferenceScreen: void setPreferenceScreen(androidx.preference.PreferenceScreen)>
<com.android.systemui.qs.customize.QSCustomizer: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.locksettings.recoverablekeystore.RecoverableKeyStoreManager: byte[] startRecoverySessionWithCertPath(java.lang.String,java.lang.String,android.security.keystore.recovery.RecoveryCertPath,byte[],byte[],java.util.List)>
<com.android.systemui.statusbar.policy.BluetoothController: boolean isBluetoothConnecting()>
<com.android.systemui.statusbar.phone.NotificationIconContainer: void setActualPaddingEnd(float)>
<com.android.server.location.ContextHubService: void loadNanoAppOnHub(int,android.hardware.location.IContextHubTransactionCallback,android.hardware.location.NanoAppBinary)>
<com.android.systemui.statusbar.phone.ScrimController: void onTrackingStarted()>
<com.android.systemui.volume.ZenModePanel: void onFinishInflate()>
<com.android.systemui.recents.views.TaskStackViewScroller: void fling(float,int,int,int,int,int,int)>
<com.android.systemui.dock.DockManager: boolean isDocked()>
<com.android.systemui.util.wakelock.KeepAwakeAnimationListener: void onAnimationStart(android.animation.Animator)>
<com.android.systemui.fragments.FragmentService.FragmentCreator: com.android.systemui.statusbar.phone.NavigationBarFragment createNavigationBarFragment()>
<com.android.systemui.doze.DozeLog: void tracePulseFinish()>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void startAssist(android.os.Bundle)>
<com.android.systemui.qs.tileimpl.QSTileView: void <init>(android.content.Context,com.android.systemui.plugins.qs.QSIconView)>
<com.android.server.notification.SnoozeHelper: void repost(java.lang.String,int)>
<com.android.systemui.statusbar.HeadsUpStatusBarView: void onAttachedToWindow()>
<com.android.server.notification.NotificationRecord: void setAudiblyAlerted(boolean)>
<com.android.systemui.statusbar.notification.stack.AmbientState: int getAnchorViewIndex()>
<android.os.BinderCallsStatsPerfTest: void timeCallSession_100_buckets_cpuNotRecorded()>
<com.android.systemui.statusbar.StatusBarIconView: boolean set(com.android.internal.statusbar.StatusBarIcon)>
<com.android.systemui.statusbar.notification.TransformState: int[] getLaidOutLocationOnScreen()>
<com.android.systemui.plugins.FalsingPlugin: void dataCollected(boolean,byte[])>
<android.net.netlink.RtNetlinkNeighborMessage: byte[] newNewNeighborMessage(int,java.net.InetAddress,short,int,byte[])>
<android.net.INetworkMonitorCallbacks: void onNetworkMonitorCreated(android.net.INetworkMonitor)>
<com.android.systemui.volume.ZenModePanel: void init(com.android.systemui.statusbar.policy.ZenModeController)>
<com.android.settingslib.bluetooth.LocalBluetoothManager: com.android.settingslib.bluetooth.LocalBluetoothAdapter getBluetoothAdapter()>
<com.android.server.location.ContextHubService: android.hardware.location.IContextHubClient createClient(int,android.hardware.location.IContextHubClientCallback)>
<com.android.server.slice.SlicePermissionManager: boolean hasPermission(java.lang.String,int,android.net.Uri)>
<android.processor.view.inspector.InspectableClassModel.IntFlagEntry: void <init>(int,int,java.lang.String)>
<android.os.LooperStatsPerfTest: void timeCollectionDisabled()>
<com.android.systemui.util.leak.GarbageMonitor.MemoryTile: android.content.Intent getLongClickIntent()>
<com.android.systemui.statusbar.policy.SmartReplyConstants: int getMaxSqueezeRemeasureAttempts()>
<com.android.systemui.util.leak.TrackedGarbage: int countOldGarbage()>
<com.android.keyguard.KeyguardHostView: void setLockPatternUtils(com.android.internal.widget.LockPatternUtils)>
<com.android.systemui.globalactions.GlobalActionsLayout: void onMeasure(int,int)>
<com.android.server.usb.descriptors.UsbACHeaderInterface: int getADCRelease()>
<com.android.systemui.assist.AssistHandleCallbacks: void showAndGo()>
<com.android.server.pm.ShortcutNonPersistentUser: void setShortcutHostPackage(java.lang.String,java.lang.String)>
<javax.microedition.khronos.opengles.GL10: void glLightxv(int,int,int[],int)>
<com.android.server.NetworkManagementService: void stopTethering()>
<com.android.systemui.statusbar.notification.stack.StackScrollAlgorithm.SectionProvider: boolean beginsSection(android.view.View)>
<com.android.server.audio.AudioService: void unregisterRecordingCallback(android.media.IRecordingConfigDispatcher)>
<android.multiuser.UserLifecycleTests: void lockedBootCompleted()>
<com.android.systemui.statusbar.NavigationBarController: void transitionTo(int,int,boolean)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: com.android.systemui.statusbar.KeyguardAffordanceView getLeftView()>
<com.android.server.content.SyncStorageEngine: void writeAllState()>
<com.android.systemui.recents.views.SystemBarScrimViews: void onBusEvent(com.android.systemui.recents.events.ui.dragndrop.DragEndCancelledEvent)>
<com.android.preload.DeviceUtils: com.android.ddmlib.IDevice findDevice(java.lang.String,int)>
<com.android.server.contentcapture.ContentCaptureManagerService: void onServiceNameChanged(int,java.lang.String,boolean)>
<com.android.systemui.bubbles.BubbleStackView: com.android.systemui.bubbles.BubbleView getBubbleAt(int)>
<com.android.systemui.classifier.AnglesClassifier: void <init>(com.android.systemui.classifier.ClassifierData)>
<com.android.server.usb.descriptors.UsbDescriptorParser: int getUsbSpec()>
<com.android.systemui.recents.model.TaskStack: android.util.ArraySet computeComponentsRemoved(java.lang.String,int)>
<com.android.systemui.statusbar.notification.row.ExpandableView: void setClipTopAmount(int)>
<com.android.settingslib.dream.DreamBackend.DreamInfo: java.lang.String toString()>
<com.android.providers.settings.SettingsBackupAgent: void onFullBackup(android.app.backup.FullBackupDataOutput)>
<com.android.systemui.qs.tileimpl.QSTileImpl: com.android.systemui.plugins.qs.QSIconView createTileView(android.content.Context)>
<com.android.server.pm.permission.PermissionSettings: boolean isPermissionInstant(java.lang.String)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setUseIncreasedHeadsUpHeight(boolean)>
<com.android.server.webkit.SystemInterface: void killPackageDependents(java.lang.String)>
<com.android.systemui.tuner.CustomListPreference.CustomListPreferenceDialogFragment: androidx.preference.ListPreferenceDialogFragment newInstance(java.lang.String)>
<com.android.settingslib.inputmethod.InputMethodAndSubtypeUtil: java.lang.String buildInputMethodsAndSubtypesString(java.util.HashMap)>
<android.media.MediaSession2.Builder: android.media.MediaSession2.Builder setId(java.lang.String)>
<android.app.backup.BackupUtilsTest: void testIsFileSpecifiedInPathList_whenFileAndPathListEmpty()>
<com.android.systemui.SystemUIFactory.SystemUIRootComponent: com.android.systemui.statusbar.phone.StatusBar.StatusBarInjector getStatusBarInjector()>
<com.android.statsd.loadtest.PerfDataRecorder: void onAlarm(android.content.Context)>
<com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer: boolean showingAsLowPriority()>
<com.android.settingslib.bluetooth.PbapClientProfile: int getPreferred(android.bluetooth.BluetoothDevice)>
<javax.obex.PrivateOutputStream: void write(byte[],int,int)>
<com.android.systemui.qs.tiles.CastTile: void handleSetListening(boolean)>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: boolean hasEmergencyCryptKeeperText()>
<com.android.systemui.statusbar.phone.NavigationPrototypeController.OnPrototypeChangedListener: void onGestureRemap(int[])>
<com.android.systemui.statusbar.notification.stack.AnimationFilter: com.android.systemui.statusbar.notification.stack.AnimationFilter hasDelays()>
<android.media.MediaController2.ControllerCallback: void onDisconnected(android.media.MediaController2)>
<com.android.statementservice.retriever.AndroidPackageInfoFetcher: java.util.List getCertFingerprints(java.lang.String)>
<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void setLocationPackagesProvider(android.content.pm.PackageManagerInternal.PackagesProvider)>
<com.android.settingslib.drawable.CircleFramedDrawable: void setAlpha(int)>
<com.android.systemui.statusbar.phone.StatusBar.StatusBarInjector: void createStatusBar(com.android.systemui.statusbar.phone.StatusBar)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void initView()>
<com.android.systemui.statusbar.phone.LightBarController: void setDirectReplying(boolean)>
<com.android.systemui.shared.system.TransactionCompat: com.android.systemui.shared.system.TransactionCompat setMatrix(com.android.systemui.shared.system.SurfaceControlCompat,float,float,float,float)>
<com.android.systemui.classifier.FalsingManagerProxy: void onNotificatonStartDraggingDown()>
<android.media.MediaPlayer2: java.lang.Object seekTo(long,int)>
<com.android.settingslib.development.AbstractLogdSizePreferenceController: void displayPreference(androidx.preference.PreferenceScreen)>
<com.android.systemui.qs.tiles.DataSaverTile: android.content.Intent getLongClickIntent()>
<com.android.server.ConnectivityService: void onSendFinished(android.app.PendingIntent,android.content.Intent,int,java.lang.String,android.os.Bundle)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setAmbientPulsing(boolean)>
<com.android.server.locksettings.LockSettingsService.Lifecycle: void onBootPhase(int)>
<com.android.server.notification.NotificationRecord: boolean getEditChoicesBeforeSending()>
<com.android.server.rollback.AppDataRollbackHelper: void destroyAppDataSnapshot(int,android.content.rollback.PackageRollbackInfo,int)>
<android.media.BufferingParams: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.plugins.PluginDependencyProvider: void allowPluginDependency(java.lang.Class,java.lang.Object)>
<com.android.systemui.settings.BrightnessDialog: void onStart()>
<com.android.systemui.statusbar.phone.StatusBar: void toggleKeyboardShortcutsMenu(int)>
<com.android.systemui.recents.model.RecentsTaskLoader: void <init>(android.content.Context,int,int,int)>
<com.android.settingslib.net.DataUsageController: long getDefaultWarningLevel()>
<com.android.server.pm.permission.PermissionManagerServiceInternal.PermissionCallback: void onPermissionChanged()>
<com.android.server.notification.PreferencesHelper: int getBlockedAppCount(int)>
<com.android.server.storage.DeviceStorageMonitorInternal: long getMemoryLowThreshold()>
<com.android.powermodel.RawBatteryStats.Warning: java.lang.String[] getExtras()>
<com.android.settingslib.graph.BatteryMeterDrawableBase: void draw(android.graphics.Canvas)>
<com.android.systemui.statusbar.notification.row.AppOpsInfo: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.pip.tv.PipMenuActivity: void onDestroy()>
<android.net.ip.InterfaceController: boolean addAddress(java.net.InetAddress,int)>
<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void setVoiceInteractionPackagesProvider(android.content.pm.PackageManagerInternal.PackagesProvider)>
<com.android.server.pm.PackageManagerService: int getApplicationEnabledSetting(java.lang.String,int)>
<javax.obex.ServerOperation: boolean continueOperation(boolean,boolean)>
<com.android.systemui.power.PowerNotificationWarnings: void dump(java.io.PrintWriter)>
<com.android.systemui.statusbar.notification.DynamicPrivacyController: void onUnlockMethodStateChanged()>
<com.android.systemui.qs.QSPanel: void setCallback(com.android.systemui.qs.QSDetail.Callback)>
<com.android.systemui.statusbar.StatusBarIconView: void setDotAppearAmount(float)>
<com.android.settingslib.CustomDialogPreferenceCompat: void onBindDialogView(android.view.View)>
<com.android.systemui.statusbar.DragDownHelper: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.systemui.util.InjectionInflationController.ViewInstanceCreator: com.android.systemui.qs.QuickQSPanel createQuickQSPanel()>
<com.android.systemui.statusbar.phone.NavigationBarView: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.systemui.tuner.TunerService.ClearReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.android.systemui.recents.misc.SystemServicesProxy: boolean isRecentsActivityVisible()>
<com.android.server.notification.ZenModeFiltering: void <init>(android.content.Context,com.android.internal.util.NotificationMessagingUtil)>
<com.android.systemui.statusbar.policy.UserSwitcherController: void switchToUserId(int)>
<com.android.preload.actions.WritePreloadedClassesAction: void run()>
<com.android.systemui.plugins.qs.QS: void setKeyguardShowing(boolean)>
<com.android.systemui.biometrics.FaceDialogView: boolean shouldGrayAreaDismissDialog()>
<com.android.settingslib.core.instrumentation.MetricsFeatureProvider: void hidden(android.content.Context,int)>
<com.android.systemui.DependencyBinder: com.android.systemui.qs.QSHost provideQsHost(com.android.systemui.qs.QSTileHost)>
<com.android.systemui.assist.AssistManager: boolean shouldShowOrb()>
<com.android.server.notification.ZenModeFiltering: boolean isMedia(com.android.server.notification.NotificationRecord)>
<com.android.systemui.statusbar.policy.HeadsUpManager.HeadsUpEntry: void reset()>
<com.android.systemui.tuner.RadioListPreference: void onDialogClosed(boolean)>
<com.android.server.TelephonyRegistry: void notifyCallForwardingChangedForSubscriber(int,boolean)>
<com.android.systemui.recents.views.TaskStackAnimationHelper.Callbacks: void onStartFrontTaskEnterAnimation(boolean)>
<com.android.systemui.statusbar.phone.HeadsUpManagerPhone.HeadsUpEntryPhone: void setEntry(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.settingslib.wifi.AccessPoint: java.lang.String getTitle()>
<com.android.server.usb.descriptors.UsbInterfaceDescriptor: int getProtocol()>
<com.android.server.pm.PackageManagerService: void setApplicationEnabledSetting(java.lang.String,int,int,int,java.lang.String)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector descriptionStartsWith(java.lang.String)>
<com.android.keyguard.KeyguardMessageArea: void onDetachedFromWindow()>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: void dispatchDraw(android.graphics.Canvas)>
<com.android.systemui.qs.QSCarrierGroup: void onClick(android.view.View)>
<com.android.systemui.recents.views.RecentsView: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.statusbar.notification.row.RowInflaterTask.RowInflationFinishedListener: void onInflationFinished(com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<javax.microedition.khronos.opengles.GL10: java.lang.String glGetString(int)>
<com.android.server.policy.WindowManagerPolicy.WindowState: boolean isAlive()>
<com.android.preload.ui.NullProgressMonitor: void stop()>
<com.android.server.accessibility.MagnificationGestureHandler.State: java.lang.String name()>
<com.android.systemui.statusbar.CastDrawable: boolean onLayoutDirectionChanged(int)>
<com.android.systemui.statusbar.notification.stack.AmbientState: void setDozeAmount(float)>
<com.android.printspooler.ui.PrinterRegistry: void setOnPrintersChangeListener(com.android.printspooler.ui.PrinterRegistry.OnPrintersChangeListener)>
<com.android.systemui.statusbar.policy.RemoteInputView: void setRemoved()>
<com.android.printspooler.ui.PageAdapter: void open(android.os.ParcelFileDescriptor,java.lang.Runnable)>
<com.android.systemui.classifier.brightline.BrightLineFalsingManager: void onUnlockHintStarted()>
<com.android.systemui.statusbar.policy.KeyButtonRipple: void setColorFilter(android.graphics.ColorFilter)>
<android.os.StrictModeTest: void timeThreadViolationNoStrictMode()>
<com.android.server.autofill.Helper.ViewNodeFilter: boolean matches(android.app.assist.AssistStructure.ViewNode)>
<com.android.systemui.statusbar.notification.collection.NotificationData: void dump(java.io.PrintWriter,java.lang.String)>
<com.android.commands.svc.BluetoothCommand: java.lang.String longHelp()>
<com.android.server.BatteryService: void <init>(android.content.Context)>
<com.android.server.location.GnssLocationProvider: void <init>(android.content.Context,com.android.server.location.AbstractLocationProvider.LocationProviderManager,android.os.Looper)>
<com.android.server.pm.Installer: void <init>(android.content.Context)>
<com.android.systemui.statusbar.notification.row.NotificationGuts: void onHeightChanged()>
<com.android.server.accessibility.KeyEventDispatcher: void <init>(android.os.Handler,int,java.lang.Object,android.os.PowerManager)>
<com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper.SnoozeOption: java.lang.CharSequence getDescription()>
<com.android.server.content.SyncStorageEngine: com.android.server.content.SyncStorageEngine.DayStats[] getDayStatistics()>
<android.net.IIpMemoryStore: void isSameNetwork(java.lang.String,java.lang.String,android.net.ipmemorystore.IOnSameL3NetworkResponseListener)>
<com.android.location.provider.ActivityRecognitionProvider: void unregisterSink(com.android.location.provider.ActivityRecognitionProvider.Sink)>
<com.android.systemui.statusbar.policy.RemoteInputView: void focusAnimated()>
<android.view.autofill.LoginTest: void testChange_noService()>
<android.media.Session2Command: void <init>(java.lang.String,android.os.Bundle)>
<com.android.server.locksettings.SyntheticPasswordManager: void destroyEscrowData(int)>
<com.android.systemui.statusbar.notification.row.StackScrollerDecorView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.keyguard.KeyguardSecurityContainer: java.lang.CharSequence getTitle()>
<com.android.systemui.bubbles.BubbleStackView: android.view.View getTargetView(android.view.MotionEvent)>
<com.android.server.pm.Installer: void fixupAppData(java.lang.String,int)>
<com.android.systemui.qs.PseudoGridView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.settingslib.core.lifecycle.ObservableFragment: void onSaveInstanceState(android.os.Bundle)>
<com.android.systemui.plugins.ClockPlugin: void setDarkAmount(float)>
<com.android.systemui.statusbar.phone.NotificationPanelView: int getClearAllHeight()>
<com.android.gallery3d.glrenderer.GLES20IdImpl: void glDeleteTextures(javax.microedition.khronos.opengles.GL11,int,int[],int)>
<com.android.server.notification.SnoozeHelper.Callback: void repost(int,com.android.server.notification.NotificationRecord)>
<android.net.shared.PrivateDnsConfig: void <init>(android.net.shared.PrivateDnsConfig)>
<com.android.systemui.shared.system.InputMonitorCompat: com.android.systemui.shared.system.InputChannelCompat.InputEventReceiver getInputReceiver(android.os.Looper,android.view.Choreographer,com.android.systemui.shared.system.InputChannelCompat.InputEventListener)>
<com.android.photos.views.TiledImageView: void setTranslationX(float)>
<com.android.keyguard.KeyguardMessageArea: void formatMessage(int,java.lang.Object[])>
<com.android.systemui.statusbar.notification.DynamicPrivacyController: boolean isDynamicallyUnlocked()>
<com.android.server.TelephonyRegistry: void notifyImsDisconnectCause(int,android.telephony.ims.ImsReasonInfo)>
<android.media.Session2Command: void <init>(int)>
<com.android.server.audio.MediaFocusControl.AudioFocusDeathHandler: void binderDied()>
<com.android.server.location.LocationRequestStatistics.PackageStatistics: long getTimeSinceFirstRequestMs()>
<com.android.server.timezone.RulesManagerService: int requestUninstall(byte[],android.app.timezone.ICallback)>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverySessionStorage: com.android.server.locksettings.recoverablekeystore.storage.RecoverySessionStorage.Entry get(int,java.lang.String)>
<com.android.settingslib.wifi.AccessPoint: int getRssi()>
<com.android.server.pm.AbstractStatsBase: boolean maybeWriteAsync(java.lang.Object)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void appTransitionCancelled(int)>
<com.android.server.pm.Installer: void destroyUserData(java.lang.String,int,int)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void cancelPendingWakeupAction()>
<com.android.gallery3d.exif.ExifInterface: void removeCompressedThumbnail()>
<com.android.systemui.statusbar.phone.StatusBarIconList: void setIcon(int,com.android.systemui.statusbar.phone.StatusBarIconHolder)>
<com.android.server.BinderCallsStatsService.LifeCycle: void <init>(android.content.Context)>
<com.android.server.policy.WindowManagerPolicy.OnKeyguardExitResult: void onKeyguardExitResult(boolean)>
<com.android.printservice.recommendation.util.MDNSFilteredDiscovery: void onServiceLost(android.net.nsd.NsdServiceInfo)>
<com.android.systemui.qs.external.QSTileServiceWrapper: boolean onTileRemoved()>
<com.android.server.appop.AppOpsService: int permissionToOpCode(java.lang.String)>
<com.android.server.policy.WindowManagerPolicy.WindowState: int getWindowingMode()>
<android.perftests.utils.OneTimeSettingsListener: void <init>(android.content.Context,java.lang.String,java.lang.String,int)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: int getPeekHeight()>
<com.android.server.usb.descriptors.report.TextReportCanvas: void write(java.lang.String)>
<com.android.powermodel.component.CpuProfile.Builder: void setCorePower(int,float[])>
<com.android.systemui.statusbar.notification.ActionListTransformState: boolean sameAs(com.android.systemui.statusbar.notification.TransformState)>
<com.android.systemui.qs.external.TileLifecycleManager: android.os.IBinder asBinder()>
<com.android.systemui.statusbar.CommandQueue: void showGlobalActionsMenu()>
<com.android.systemui.recents.Recents: void showRecentApps(boolean)>
<com.android.server.LocationManagerService: boolean startGnssBatch(long,boolean,java.lang.String)>
<com.android.server.locksettings.recoverablekeystore.RecoverySnapshotListenersStorage: void recoverySnapshotAvailable(int)>
<com.android.server.ZramWriteback: boolean onStartJob(android.app.job.JobParameters)>
<com.android.systemui.qs.tileimpl.QSTileImpl: void showDetail(boolean)>
<javax.microedition.khronos.opengles.GL10: void glOrthof(float,float,float,float,float,float)>
<com.android.systemui.statusbar.notification.logging.NotificationLogger: void setUpWithContainer(com.android.systemui.statusbar.notification.stack.NotificationListContainer)>
<com.android.statsd.loadtest.PerfData.PerfAlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.android.settingslib.net.ChartDataLoader: android.os.Bundle buildArgs(android.net.NetworkTemplate,com.android.settingslib.AppItem)>
<com.android.systemui.statusbar.policy.SecurityControllerImpl: void removeCallback(com.android.systemui.statusbar.policy.SecurityController.SecurityControllerCallback)>
<com.android.server.usb.descriptors.Usb10ACInputTerminal: int getChannelConfig()>
<android.net.ip.IpClientManager: boolean addKeepalivePacketFilter(int,android.net.NattKeepalivePacketData)>
<com.android.systemui.tuner.DemoModeFragment: boolean onPreferenceChange(androidx.preference.Preference,java.lang.Object)>
<com.android.server.AnyMotionDetector.Vector3: com.android.server.AnyMotionDetector.Vector3 minus(com.android.server.AnyMotionDetector.Vector3)>
<com.android.server.INativeDaemonConnectorCallbacks: boolean onEvent(int,java.lang.String,java.lang.String[])>
<com.android.server.tv.TvRemoteProviderProxy.ProviderMethods: void sendKeyUp(com.android.server.tv.TvRemoteProviderProxy,android.os.IBinder,int)>
<com.android.systemui.statusbar.policy.DataSaverControllerImpl: void setDataSaverEnabled(boolean)>
<com.android.systemui.Prefs: void putString(android.content.Context,java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.phone.ManagedProfileControllerImpl: void setWorkModeEnabled(boolean)>
<com.android.server.usb.descriptors.UsbACTerminal: byte getAssocTerminal()>
<com.android.systemui.statusbar.policy.SecurityControllerImpl.CACertLoader: void onPostExecute(android.util.Pair)>
<com.android.systemui.statusbar.phone.BiometricUnlockController: void onStartedGoingToSleep(int)>
<com.android.server.appop.AppOpsService: void shutdown()>
<com.android.systemui.doze.DozeService: void onDreamingStarted()>
<com.android.settingslib.applications.ApplicationsState.AppEntry: void ensureLabel(android.content.Context)>
<com.android.systemui.statusbar.notification.row.FooterView: boolean isOnEmptySpace(float,float)>
<com.android.systemui.statusbar.car.hvac.HvacController: void addHvacTextView(com.android.systemui.statusbar.car.hvac.TemperatureView)>
<com.android.server.notification.SnoozeHelper: void snooze(com.android.server.notification.NotificationRecord,long)>
<com.android.gallery3d.glrenderer.GLPaint: float getLineWidth()>
<com.android.settingslib.RestrictedPreferenceHelper: boolean isDisabledByAdmin()>
<com.android.systemui.pip.phone.PipTouchHandler: void onPinnedStackAnimationEnded()>
<com.android.systemui.assist.AssistHandleBehaviorController.BehaviorController: void onModeDeactivated()>
<android.net.shared.InitialConfiguration: boolean all(java.lang.Iterable,java.util.function.Predicate)>
<com.android.systemui.pip.phone.PipMenuActivityController: void hideMenu(java.lang.Runnable,java.lang.Runnable)>
<android.media.Session2CommandGroup: void writeToParcel(android.os.Parcel,int)>
<com.google.android.startop.iorap.ActivityInfo: void <init>(java.lang.String,java.lang.String)>
<com.android.server.pm.PackageManagerService: void grantDefaultPermissionsToEnabledTelephonyDataServices(java.lang.String[],int)>
<com.android.server.NetworkManagementService: boolean isTetheringStarted()>
<com.android.commands.hid.Event: android.util.SparseArray getFeatureReports()>
<com.android.server.hdmi.HdmiCecLocalDevicePlayback: int findKeyReceiverAddress()>
<com.android.systemui.util.wakelock.WakeLock: void acquire(java.lang.String)>
<com.android.systemui.qs.QuickQSPanel: void setTiles(java.util.Collection)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: void setInflationTask(com.android.systemui.statusbar.InflationTask)>
<android.media.MediaPlayer2: long getDuration()>
<com.android.systemui.statusbar.phone.DozeParameters: boolean shouldControlScreenOff()>
<com.android.server.TelephonyRegistry: void systemRunning()>
<com.android.settingslib.bluetooth.MapProfile: boolean isAutoConnectable()>
<com.android.systemui.statusbar.notification.stack.NotificationListContainer: void setMaxDisplayedNotifications(int)>
<javax.obex.Operation: int getMaxPacketSize()>
<javax.obex.ServerOperation: java.io.DataInputStream openDataInputStream()>
<com.android.bluetoothmidiservice.MidiBtleTimeTracker: void <init>(long)>
<com.android.systemui.tuner.LockscreenFragment.LockButtonFactory: void <init>(android.content.Context,java.lang.String)>
<com.android.systemui.HardwareBgDrawable: void <init>(boolean,boolean,android.content.Context)>
<com.google.android.startop.iorap.TaskResult: void <init>(int)>
<com.android.systemui.util.AsyncSensorManager: void registerPluginListener(com.android.systemui.plugins.SensorManagerPlugin.Sensor,com.android.systemui.plugins.SensorManagerPlugin.SensorEventListener)>
<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice getIntentFilterVerifications(java.lang.String)>
<com.android.settingslib.widget.AppEntitiesHeaderController: com.android.settingslib.widget.AppEntitiesHeaderController setHeaderDetails(java.lang.CharSequence)>
<com.android.server.pm.PackageSettingBase: void writeUsersInfoToProto(android.util.proto.ProtoOutputStream,long)>
<com.android.preload.DumpTableModel: java.lang.Object getValueAt(int,int)>
<com.android.server.notification.NotificationRecord: void setSuppressedVisualEffects(int)>
<com.android.server.display.color.ColorDisplayService.ColorTransformController: void applyAppSaturation(float[],float[])>
<com.android.printspooler.model.CustomPrinterIconCache: void removeOldFiles(int)>
<com.android.systemui.statusbar.policy.UserSwitcherController: boolean isSimpleUserSwitcher()>
<com.android.systemui.statusbar.NotificationLockscreenUserManagerImpl: boolean needsRedaction(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: void onBelowSpeedBumpChanged()>
<com.android.server.appbinding.finders.CarrierMessagingClientServiceFinder: java.lang.String getServicePermission()>
<com.android.systemui.plugins.FalsingManager: void onNotificatonStartDismissing()>
<com.android.settingslib.utils.AsyncLoaderCompat: void onDiscardResult(java.lang.Object)>
<com.android.server.usb.descriptors.report.HTMLReportCanvas: void closeParagraph()>
<com.android.systemui.pip.tv.PipControlsView: void setActions(java.util.List)>
<com.android.server.policy.PhoneWindowManager: void setSwitchingUser(boolean)>
<com.android.server.pm.UserManagerService: java.lang.String getUserAccount(int)>
<com.android.systemui.statusbar.phone.MultiUserSwitch: boolean hasMultipleUsers()>
<com.android.server.vr.VrManagerService: void onCleanupUser(int)>
<com.android.server.pm.permission.PermissionManagerServiceInternal: void updatePermissions(java.lang.String,android.content.pm.PackageParser.Package,boolean,java.util.Collection,com.android.server.pm.permission.PermissionManagerServiceInternal.PermissionCallback)>
<com.android.settingslib.net.NetworkCycleDataForUidLoader: com.android.settingslib.net.NetworkCycleDataForUidLoader.Builder builder(android.content.Context)>
<com.android.keyguard.KeyguardSecurityContainer: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<android.net.ip.IIpClient: void startProvisioning(android.net.ProvisioningConfigurationParcelable)>
<com.android.systemui.statusbar.phone.HeadsUpManagerPhone: boolean shouldExtendLifetime(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.server.location.GnssGeofenceProviderTest: void addGeofence_nativeAdded()>
<com.android.statsd.loadtest.PerfDataRecorder: void startRecording(android.content.Context)>
<android.perftests.utils.BenchmarkState: void sendFullStatusReport(android.app.Instrumentation,java.lang.String)>
<com.android.server.pm.PackageManagerService: void revokeDefaultPermissionsFromLuiApps(java.lang.String[],int)>
<android.net.TcpKeepalivePacketData: int describeContents()>
<com.android.server.accessibility.AccessibilityManagerService.AccessibilityDisplayListener: void onDisplayAdded(int)>
<com.android.systemui.volume.VolumeDialogControllerImpl: void setStreamMute(int,boolean)>
<com.android.systemui.globalactions.GlobalActionsDialog.Action: boolean shouldBeSeparated()>
<com.android.systemui.statusbar.CommandQueue: void animateExpandNotificationsPanel()>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: void setHeadsUp(boolean)>
<com.android.server.biometrics.ClientMonitor: void vibrateSuccess()>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb: java.security.PublicKey getRecoveryServicePublicKey(int,int)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void animateTranslateNotification(float)>
<com.android.settingslib.accessibility.AccessibilityUtils: boolean isShortcutEnabled(android.content.Context,int)>
<com.android.server.accessibility.MagnificationController: boolean isMagnifying(int)>
<com.android.systemui.shared.plugins.VersionInfo.InvalidVersionException: void <init>(java.lang.String,boolean)>
<com.android.server.role.RoleUserState: boolean isRoleAvailable(java.lang.String)>
<com.android.systemui.keyguard.WakefulnessLifecycle.Observer: void onFinishedGoingToSleep()>
<com.android.packageinstaller.wear.WearPackageArgs: boolean skipIfLowerVersion(android.os.Bundle)>
<com.android.gallery3d.glrenderer.GLId: void glDeleteBuffers(javax.microedition.khronos.opengles.GL11,int,int[],int)>
<com.android.server.clipboard.HostClipboardMonitor.HostClipboardCallback: void onHostClipboardUpdated(java.lang.String)>
<com.android.statsd.loadtest.PerfDataRecorder: void readDumpData(android.content.Context,java.lang.String,com.android.statsd.loadtest.PerfParser,java.lang.StringBuilder)>
<android.net.ip.InterfaceController: boolean setIPv6PrivacyExtensions(boolean)>
<com.android.systemui.statusbar.phone.NotificationsQuickSettingsContainer: void onDetachedFromWindow()>
<com.android.server.media.MediaRouterService: void setDiscoveryRequest(android.media.IMediaRouterClient,int,boolean)>
<javax.microedition.khronos.opengles.GL10: void glViewport(int,int,int,int)>
<com.android.systemui.util.LifecycleFragment: void onStart()>
<com.android.systemui.media.NotificationPlayer: void stop()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: com.android.systemui.statusbar.notification.stack.StackScrollAlgorithm createStackScrollAlgorithm(android.content.Context)>
<com.android.systemui.statusbar.phone.StatusBar: void createUserSwitcher()>
<com.android.systemui.ForegroundServiceController: boolean isSystemAlertWarningNeeded(int,java.lang.String)>
<javax.obex.ServerRequestHandler: void onClose()>
<com.android.server.usb.descriptors.report.TextReportCanvas: void openParagraph(boolean)>
<com.android.server.role.RoleManagerService: void onStartUser(int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean getScreenCaptureDisabled(android.content.ComponentName,int)>
<com.android.server.pm.UserManagerService: boolean removeUser(int)>
<com.android.systemui.SwipeHelper: float getEscapeVelocity()>
<com.android.systemui.media.MediaProjectionPermissionActivity: void onCreate(android.os.Bundle)>
<com.android.systemui.statusbar.phone.LockIcon: void setTransientBiometricsError(boolean)>
<com.android.server.appprediction.RemoteAppPredictionService: void handleOnConnectedStateChanged(boolean)>
<com.android.systemui.tuner.ClipboardView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: void connect(boolean)>
<com.android.printspooler.ui.PageAdapter: void stopPreloadContent()>
<com.android.settingslib.suggestions.SuggestionControllerMixin: void onStart()>
<com.android.systemui.glwallpaper.EglHelper: boolean createEglContext()>
<com.android.systemui.statusbar.policy.CastControllerImpl: java.util.List getCastDevices()>
<com.android.settingslib.bluetooth.PbapServerProfile: boolean isPreferred(android.bluetooth.BluetoothDevice)>
<com.android.server.DropBoxManagerService: void onStart()>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: void clearUnfocusedTaskOverrides()>
<android.os.ParcelPerfTest: void tearDown()>
<com.android.systemui.net.NetworkOverLimitActivity: void onCreate(android.os.Bundle)>
<com.android.server.webkit.WebViewUpdateService: boolean entirePackageChanged(android.content.Intent)>
<com.android.server.uri.UriPermissionOwner: android.os.Binder getExternalToken()>
<com.android.systemui.statusbar.notification.row.ExpandableView: int getClipTopAmount()>
<javax.obex.ServerOperation: void ensureOpen()>
<com.android.server.firewall.SenderPackageFilter: void <init>(java.lang.String)>
<com.android.uiautomator.core.UiObject: boolean isChecked()>
<com.android.server.media.MediaSessionService: void notifyRemoteVolumeChanged(int,com.android.server.media.MediaSessionRecord)>
<com.android.server.SystemServiceManager: com.android.server.SystemService startService(java.lang.String)>
<com.android.systemui.statusbar.car.CarStatusBar: com.android.systemui.plugins.qs.QS createDefaultQSFragment()>
<com.android.systemui.settings.ToggleSliderView: boolean dispatchTouchEvent(android.view.MotionEvent)>
<com.android.server.pm.Installer: long createAppData(java.lang.String,java.lang.String,int,int,int,java.lang.String,int)>
<com.android.systemui.statusbar.policy.InflatedSmartReplies: java.util.List getSmartSuggestionButtons()>
<android.net.ipmemorystore.OnNetworkAttributesRetrievedListener: android.net.ipmemorystore.IOnNetworkAttributesRetrievedListener toAIDL(android.net.ipmemorystore.OnNetworkAttributesRetrievedListener)>
<com.android.server.utils.PriorityDump: void dump(com.android.server.utils.PriorityDump.PriorityDumper,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.pip.phone.PipMediaController.ActionListener: void onMediaActionsChanged(java.util.List)>
<com.android.gallery3d.exif.ExifInterface: int defineTag(int,short)>
<com.android.systemui.statusbar.phone.PhoneStatusBarPolicy: void onRotationLockStateChanged(boolean,boolean)>
<com.android.server.display.OverlayDisplayWindow.Listener: void onStateChanged(int)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: boolean shouldDisableWindowAnimationsForUnlock()>
<com.android.systemui.volume.VolumeDialogControllerImpl: void userActivity()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void showTransientIndication(int)>
<android.media.Controller2Link: boolean equals(java.lang.Object)>
<com.android.settingslib.users.AppRestrictionsHelper: void <init>(android.content.Context,android.os.UserHandle)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getPasswordMinimumLowerCase(android.content.ComponentName,int,boolean)>
<com.android.systemui.qs.tiles.HotspotTile: android.content.Intent getLongClickIntent()>
<com.android.server.notification.ZenLog: void traceNotIntercepted(com.android.server.notification.NotificationRecord,java.lang.String)>
<android.view.autofill.LoginTest: void testFocus_autofillBothFields()>
<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice queryPermissionsByGroup(java.lang.String,int)>
<com.android.printspooler.util.PageRangeUtils: boolean isAllPages(android.print.PageRange[],int)>
<com.android.settingslib.core.instrumentation.LogWriter: void action(int,int,int,java.lang.String,int)>
<com.android.systemui.tuner.TunerServiceImpl: void clearAll()>
<com.android.systemui.statusbar.phone.KeyguardEnvironmentImpl: boolean isDeviceProvisioned()>
<com.android.systemui.statusbar.phone.NavigationBarTransitions: boolean isLightsOut(int)>
<com.android.server.usb.descriptors.ByteStream: int unpackUsbTriple()>
<com.android.systemui.qs.QSDetailItems: void setItems(com.android.systemui.qs.QSDetailItems.Item[])>
<com.android.systemui.statusbar.phone.StatusBarNotificationPresenter: void onUserSwitched(int)>
<com.android.server.pm.permission.PermissionsState: void setGlobalGids(int[])>
<com.android.server.pm.PackageSetting: boolean isMatch(int)>
<javax.microedition.khronos.opengles.GL10: void glRotatex(int,int,int,int)>
<com.android.systemui.statusbar.notification.collection.NotificationRowBinderImpl: void inflateViews(com.android.systemui.statusbar.notification.collection.NotificationEntry,java.lang.Runnable)>
<com.android.packageinstaller.PackageInstallerActivity.AnonymousSourceDialog: void onCancel(android.content.DialogInterface)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getPasswordQuality(android.content.ComponentName,int,boolean)>
<com.android.systemui.qs.tiles.UiModeNightTile: android.content.Intent getLongClickIntent()>
<com.android.server.usb.descriptors.UsbACFeatureUnit: byte getUnitName()>
<com.android.systemui.statusbar.KeyguardIndicationController.BaseKeyguardCallback: void onScreenTurnedOn()>
<com.android.systemui.qs.tiles.DndTile: int getMetricsCategory()>
<com.android.server.locksettings.LockSettingsService: int[] getRecoverySecretTypes()>
<com.android.server.statusbar.StatusBarManagerInternal: void topAppWindowChanged(int,boolean)>
<com.android.uiautomator.core.UiDevice: boolean click(int,int)>
<com.android.server.pm.SharedUserSetting: java.lang.String toString()>
<com.android.server.storage.CacheQuotaStrategy: void onResult(android.os.Bundle)>
<com.android.systemui.bubbles.BubbleData: void notificationEntryRemoved(com.android.systemui.statusbar.notification.collection.NotificationEntry,int)>
<com.android.systemui.qs.tileimpl.QSTileImpl: void click()>
<com.android.server.appop.AppOpsService: void onShellCommand(java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ShellCallback,android.os.ResultReceiver)>
<com.android.gallery3d.exif.ExifInterface: java.lang.Byte getTagByteValue(int)>
<com.android.settingslib.widget.ActionButtonsPreference: void <init>(android.content.Context)>
<com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer: void updateChildrenHeaderAppearance()>
<com.android.settingslib.core.lifecycle.Lifecycle: void removeObserver(androidx.lifecycle.LifecycleObserver)>
<com.android.server.biometrics.AuthenticationClient: int stop(boolean)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: com.android.systemui.statusbar.NotificationShelf getNotificationShelf()>
<com.android.server.infra.FrameworkResourcesServiceNameResolver: void dumpShort(java.io.PrintWriter,int)>
<com.android.preload.ui.SequenceUI: void updateWaitDialog(java.lang.String)>
<com.android.systemui.SwipeHelper: void onDownUpdate(android.view.View,android.view.MotionEvent)>
<com.android.systemui.volume.SystemUIInterpolators.LogAccelerateInterpolator: float getInterpolation(float)>
<com.android.uiautomator.core.UiAutomatorBridge: boolean takeScreenshot(java.io.File,int)>
<com.android.systemui.bubbles.animation.ExpandedAnimationController: float getExpandedY()>
<com.android.settingslib.widget.AppEntityInfo.Builder: com.android.settingslib.widget.AppEntityInfo.Builder setSummary(java.lang.CharSequence)>
<com.android.server.EntropyMixer: void <init>(android.content.Context)>
<com.android.server.SensorPrivacyService: void onStart()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: int getMinHeight(boolean)>
<com.android.server.vr.EnabledComponentsObserver.EnabledComponentChangeListener: void onEnabledComponentChanged()>
<com.android.settingslib.net.UidDetailProvider: boolean isKeyForUser(int)>
<com.android.systemui.statusbar.phone.NavigationBarEdgePanel: void setIsLeftPanel(boolean)>
<com.android.printservice.recommendation.plugin.xerox.XeroxPrintServiceRecommendationPlugin: int getName()>
<com.android.server.slice.SliceProviderPermissions.SliceAuthority: java.util.Collection getPkgs()>
<android.widget.LayoutPerfTest: java.util.Collection measureSpecs()>
<android.net.ip.IpClientManager: boolean confirmConfiguration()>
<com.android.powermodel.PowerReport: java.util.List getAllApps()>
<com.android.systemui.statusbar.notification.row.NotificationGuts: void setClipBottomAmount(int)>
<com.android.systemui.statusbar.car.CarBatteryController: void setPowerSaveMode(boolean)>
<com.android.packageinstaller.UninstallerActivity: void dispatchAborted()>
<com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer: void updateState(com.android.systemui.statusbar.notification.stack.ExpandableViewState,com.android.systemui.statusbar.notification.stack.AmbientState)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGenerateMipmapOES(int)>
<com.android.systemui.settings.CurrentUserTracker: int getCurrentUserId()>
<com.android.systemui.statusbar.policy.HotspotControllerImpl: void onStateChanged(int,int)>
<com.google.android.startop.iorap.IorapForwardingService.RemoteRunnable: void run()>
<com.android.settingslib.suggestions.SuggestionLoader: void <init>(android.content.Context,com.android.settingslib.suggestions.SuggestionController)>
<com.android.printspooler.model.PrintSpoolerService.PrintSpooler: void setStatusRes(android.print.PrintJobId,int,java.lang.CharSequence)>
<com.android.systemui.qs.QSDetailItems: void onAttachedToWindow()>
<com.android.systemui.pip.PipUI: void expandPip()>
<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo resolveIntent(android.content.Intent,java.lang.String,int,int)>
<com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotSerializer: void serialize(android.security.keystore.recovery.KeyChainSnapshot,java.io.OutputStream)>
<android.net.IpMemoryStoreClient: void findL2Key(android.net.ipmemorystore.NetworkAttributes,android.net.ipmemorystore.OnL2KeyResponseListener)>
<com.android.keyguard.KeyguardSecurityView: void onPause()>
<com.android.systemui.qs.tiles.NightDisplayTile: int getMetricsCategory()>
<com.android.systemui.statusbar.phone.StatusBar: void togglePanel()>
<com.android.server.display.OverlayDisplayWindow.Listener: void onWindowCreated(android.graphics.SurfaceTexture,float,long,int)>
<com.android.systemui.util.AutoMarqueeTextView: void onVisibilityAggregated(boolean)>
<com.android.systemui.statusbar.notification.stack.AnimationFilter: void reset()>
<com.android.server.input.InputManagerService: void registerInputChannel(android.view.InputChannel,android.os.IBinder)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.notification.ManagedServices: void registerService(android.os.IInterface,android.content.ComponentName,int)>
<com.android.server.appop.AppOpsService: void startWatchingModeWithFlags(int,java.lang.String,int,com.android.internal.app.IAppOpsCallback)>
<com.android.photos.BitmapRegionTileSource: android.graphics.Bitmap getTile(int,int,int,android.graphics.Bitmap)>
<com.android.systemui.statusbar.NotificationMediaManager: void findAndUpdateMediaNotifications()>
<com.android.server.pm.Policy.PolicyBuilder: com.android.server.pm.Policy build()>
<com.android.settingslib.display.DisplayDensityUtils: void setForcedDisplayDensity(int,int)>
<com.android.server.pm.CrossProfileAppsServiceImpl: void startActivityAsUser(android.app.IApplicationThread,java.lang.String,android.content.ComponentName,int,boolean)>
<com.android.server.content.ContentService: void notifyChange(android.net.Uri,android.database.IContentObserver,boolean,boolean,java.lang.String)>
<com.android.systemui.qs.external.CustomTile: void handleDestroy()>
<com.android.systemui.recents.views.grid.GridTaskViewThumbnail: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: android.os.IBinder asBinder()>
<com.android.systemui.shortcut.ShortcutKeyServiceProxy: void notifyShortcutKeyPressed(long)>
<com.android.server.MmsServiceBroker: void <init>(android.content.Context)>
<com.android.server.ConnectivityService: android.net.NetworkInfo getActiveNetworkInfoUnfiltered()>
<com.android.location.provider.ProviderRequestUnbundled: java.util.List getLocationRequests()>
<com.android.server.textclassifier.TextClassificationManagerService: void onGenerateLinks(android.view.textclassifier.TextClassificationSessionId,android.view.textclassifier.TextLinks.Request,android.service.textclassifier.ITextClassifierCallback)>
<com.android.server.statusbar.StatusBarManagerService: void onClearAllNotifications(int)>
<com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper.SnoozeOption: android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction getAccessibilityAction()>
<com.android.keyguard.KeyguardSliceView: boolean hasHeader()>
<com.android.systemui.statusbar.phone.StatusBarSignalPolicy.MobileIconState: java.lang.String toString()>
<com.android.server.input.InputManagerService.KeyboardLayoutVisitor: void visitKeyboardLayout(android.content.res.Resources,int,android.hardware.input.KeyboardLayout)>
<com.android.server.usb.descriptors.UsbDescriptorParser: void <init>(java.lang.String,byte[])>
<com.android.systemui.statusbar.phone.StatusBar: void showWirelessChargingAnimation(int)>
<com.android.systemui.statusbar.policy.BrightnessMirrorController: void setLocation(android.view.View)>
<com.android.settingslib.inputmethod.InputMethodPreference: boolean onPreferenceClick(androidx.preference.Preference)>
<com.android.systemui.statusbar.policy.AccessibilityController: boolean isTouchExplorationEnabled()>
<com.android.server.display.BrightnessMappingStrategy: float getBrightness(float)>
<javax.obex.ClientSession: javax.obex.HeaderSet setPath(javax.obex.HeaderSet,boolean,boolean)>
<com.android.systemui.ExpandHelper.Callback: void setExpansionCancelled(android.view.View)>
<com.android.media.remotedisplay.RemoteDisplay: int getVolume()>
<com.android.server.pm.PackageSetting: android.content.pm.PackageParser.Package getPackage()>
<com.android.systemui.statusbar.phone.AutoHideController: void onDisplayRemoved(int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setRestrictionsProvider(android.content.ComponentName,android.content.ComponentName)>
<com.android.server.broadcastradio.hal2.AnnouncementAggregator: void close()>
<com.android.keyguard.KeyguardStatusView: void onLocaleListChanged()>
<com.android.preload.classdataretrieval.jdwp.JDWPClassDataRetriever: java.util.Map getClassData(com.android.ddmlib.Client)>
<com.android.systemui.qs.DataUsageGraph: void setLevels(long,long,long)>
<com.android.server.locksettings.LockSettingsService: java.util.Map recoverKeyChainSnapshot(java.lang.String,byte[],java.util.List)>
<com.android.server.notification.ManagedServices: void onUserUnlocked(int)>
<com.android.systemui.MultiListLayout.MultiListAdapter: boolean onLongClickItem(int)>
<com.android.server.pm.ShortcutService: void validateShortcutForPinRequest(android.content.pm.ShortcutInfo)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: boolean isRowHeadsUp()>
<com.android.systemui.qs.tileimpl.QSTileImpl: java.lang.String composeChangeAnnouncement()>
<com.android.systemui.plugins.GlobalActionsPanelPlugin.Callbacks: void dismissGlobalActionsMenu()>
<com.android.uiautomator.core.UiDevice: boolean pressSearch()>
<com.android.systemui.biometrics.BiometricDialogView: void onAttachedToWindow()>
<com.android.media.remotedisplay.RemoteDisplayProvider: com.android.media.remotedisplay.RemoteDisplay findRemoteDisplay(java.lang.String)>
<com.android.keyguard.ViewMediatorCallback: void userActivity()>
<com.android.keyguard.EmergencyButton: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.ScrimController: void onExpandingFinished()>
<com.android.photos.views.TiledImageRenderer.TileSource: android.graphics.Bitmap getTile(int,int,int,android.graphics.Bitmap)>
<com.android.server.pm.PackageManagerService: void onShellCommand(java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ShellCallback,android.os.ResultReceiver)>
<com.android.systemui.statusbar.phone.NavigationBarTransitions: com.android.systemui.statusbar.phone.LightBarTransitionsController getLightTransitionsController()>
<com.android.systemui.qs.QSFragment: void setQsExpansion(float,float)>
<com.android.gallery3d.glrenderer.GLES20IdImpl: int generateTexture()>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void setCurrentUser(int)>
<com.android.systemui.statusbar.CommandQueue: void onRecentsAnimationStateChanged(boolean)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector index(int)>
<com.android.server.textservices.TextServicesManagerService.Lifecycle: void onStart()>
<com.android.systemui.recents.views.TaskView: void onFinishInflate()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void onChildAnimationFinished()>
<android.net.ipmemorystore.NetworkAttributes.Builder: android.net.ipmemorystore.NetworkAttributes.Builder setGroupHint(java.lang.String)>
<com.android.systemui.statusbar.phone.ScreenPinningNotify: void <init>(android.content.Context)>
<com.android.server.SystemServiceManager: void startService(com.android.server.SystemService)>
<com.android.systemui.shared.system.ActivityOptionsCompat: android.app.ActivityOptions makeRemoteAnimation(com.android.systemui.shared.system.RemoteAnimationAdapterCompat)>
<com.android.printservice.recommendation.plugin.hp.ServiceRecommendationPlugin: void start(com.android.printservice.recommendation.PrintServicePlugin.PrinterDiscoveryCallback)>
<android.media.MediaPlayer2: java.lang.Object prepareDrm(android.media.DataSourceDesc,java.util.UUID)>
<com.android.systemui.statusbar.phone.StatusBarWindowController: void setBouncerShowing(boolean)>
<com.android.systemui.recents.events.ui.dragndrop.DragStartInitializeDropTargetsEvent: void <init>(com.android.systemui.shared.recents.model.Task,com.android.systemui.recents.views.TaskView,com.android.systemui.recents.views.RecentsViewTouchHandler)>
<com.android.server.pm.PackageManagerService: boolean isPackageStateProtected(java.lang.String,int)>
<com.android.systemui.shared.system.SyncRtSurfaceTransactionApplierCompat: void create(android.view.View,java.util.function.Consumer)>
<com.android.settingslib.net.ChartDataLoader: com.android.settingslib.net.ChartData loadInBackground()>
<com.android.systemui.tuner.ShortcutPicker: void onActivityCreated(android.os.Bundle)>
<com.android.systemui.classifier.FalsingManagerProxy: boolean isUnlockingDisabled()>
<com.android.systemui.glwallpaper.ImageWallpaperRenderer: void onDrawFrame()>
<com.android.keyguard.NumPadKey: void <init>(android.content.Context)>
<com.android.systemui.tuner.PluginFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)>
<com.android.proxyhandler.ProxyServer: boolean isBound()>
<com.android.systemui.Prefs: void putLong(android.content.Context,java.lang.String,long)>
<com.android.server.audio.AudioService: int getStreamMaxVolume(int)>
<com.android.systemui.qs.SignalTileView: void <init>(android.content.Context)>
<com.android.server.tv.UinputBridge: void <init>(android.os.IBinder,java.lang.String,int,int,int)>
<com.android.printspooler.model.PrintSpoolerService.PrintSpooler: void setPrintJobCancelling(android.print.PrintJobId,boolean)>
<android.widget.EditTextCursorMovementPerfTest: void <init>(java.lang.String,java.lang.String,int)>
<com.android.systemui.plugins.qs.QSTile.Icon: int getPadding()>
<com.android.systemui.settings.CurrentUserObservable: void <init>(android.content.Context)>
<com.android.systemui.qs.tiles.WifiTile: void handleUpdateState(com.android.systemui.plugins.qs.QSTile.SignalState,java.lang.Object)>
<com.android.server.infra.AbstractMasterSystemService: boolean isDisabledLocked(int)>
<com.android.systemui.statusbar.phone.StatusIconContainer: void <init>(android.content.Context)>
<com.android.settingslib.core.instrumentation.SharedPreferencesLogger: void <init>(android.content.Context,java.lang.String,com.android.settingslib.core.instrumentation.MetricsFeatureProvider)>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcher.Container: void setKeyguardUserSwitcher(com.android.systemui.statusbar.policy.KeyguardUserSwitcher)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getManagedUserId(int)>
<com.android.systemui.recents.events.EventBus.ReusableEvent: java.lang.Object clone()>
<android.widget.TextViewPrecomputedTextPerfTest: void testOnDraw_RandomText()>
<com.android.server.SystemService: void onStartUser(int)>
<com.android.server.appbinding.finders.CarrierMessagingClientServiceFinder: java.lang.String validateService(android.content.pm.ServiceInfo)>
<com.android.printspooler.util.PageRangeUtils: android.print.PageRange[] normalize(android.print.PageRange[])>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector childSelector(com.android.uiautomator.core.UiSelector)>
<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void setSyncAdapterPackagesProvider(android.content.pm.PackageManagerInternal.SyncAdapterPackagesProvider)>
<com.android.systemui.qs.QSDetail: void setFullyExpanded(boolean)>
<com.android.settingslib.bluetooth.MapProfile: boolean disconnect(android.bluetooth.BluetoothDevice)>
<com.android.keyguard.KeyguardClockSwitch: void setShowCurrentUserTime(boolean)>
<com.android.systemui.dock.DockManager: void addListener(com.android.systemui.dock.DockManager.DockEventListener)>
<com.android.systemui.ForegroundServiceLifetimeExtender: void setCallback(com.android.systemui.statusbar.NotificationLifetimeExtender.NotificationSafeToRemoveCallback)>
<com.android.server.policy.PhoneWindowManager: void keepScreenOnStoppedLw()>
<com.android.systemui.plugins.PluginEnablerImpl: int getDisableReason(android.content.ComponentName)>
<com.android.systemui.statusbar.phone.NotificationPanelView: int computeMaxKeyguardNotifications(int)>
<com.android.printservice.recommendation.plugin.samsung.SamsungRecommendationPlugin: int getName()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void draw(android.graphics.Canvas)>
<com.android.server.appop.AppOpsService: java.util.List getUidOps(int,int[])>
<com.android.server.GestureLauncherService: boolean isCameraLaunchSettingEnabled(android.content.Context,int)>
<com.android.keyguard.KeyguardUpdateMonitor: void onLockIconPressed()>
<com.android.systemui.qs.tiles.NightDisplayTile: void handleUpdateState(com.android.systemui.plugins.qs.QSTile.BooleanState,java.lang.Object)>
<com.android.server.slice.SliceClientPermissions: com.android.server.slice.SlicePermissionManager.PkgUser getPkg()>
<com.android.settingslib.RestrictedSwitchPreference: void performClick()>
<com.android.server.notification.ZenModeConditions: void onBootComplete()>
<com.android.server.pm.PackageInstallerService: void unregisterCallback(android.content.pm.IPackageInstallerCallback)>
<com.android.keyguard.KeyguardMessageArea: void onAttachedToWindow()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: com.android.systemui.statusbar.notification.row.NotificationGuts getGuts()>
<com.android.settingslib.wifi.AccessPoint: boolean isEphemeral()>
<com.android.server.textservices.TextServicesManagerService: void finishSpellCheckerService(int,com.android.internal.textservice.ISpellCheckerSessionListener)>
<com.android.systemui.statusbar.phone.NavigationBarTransitions: void onTransition(int,int,boolean)>
<com.android.systemui.statusbar.phone.StatusBarWindowView: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.systemui.recents.views.grid.TaskViewFocusFrame: void moveGridTaskViewFocus(android.view.View)>
<com.android.server.testing.shadows.ShadowEventLog.Entry: int hashCode()>
<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: android.graphics.Point getRevealAnimationOrigin()>
<com.android.systemui.statusbar.policy.DateView: void setDatePattern(java.lang.String)>
<com.android.systemui.volume.VolumeUI: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.pm.ShortcutService: void removeDynamicShortcuts(java.lang.String,java.util.List,int)>
<com.android.server.pm.PackageManagerService: int getMoveStatus(int)>
<com.android.server.trust.TrustAgentWrapper: java.lang.CharSequence getMessage()>
<com.android.settingslib.location.RecentLocationAccesses: java.util.List getAppListSorted()>
<com.android.systemui.statusbar.NotificationLifetimeExtender: void setCallback(com.android.systemui.statusbar.NotificationLifetimeExtender.NotificationSafeToRemoveCallback)>
<com.android.systemui.statusbar.phone.ObservableScrollView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.android.server.hdmi.HdmiControlService: void onBootPhase(int)>
<com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem: void dump(com.android.internal.util.IndentingPrintWriter)>
<android.media.MediaSession2: void cancelSessionCommand(android.media.MediaSession2.ControllerInfo,java.lang.Object)>
<com.android.systemui.qs.tileimpl.SlashImageView: com.android.systemui.qs.SlashDrawable getSlash()>
<com.android.settingslib.core.instrumentation.LogWriter: void action(android.content.Context,int,boolean)>
<com.android.systemui.globalactions.GlobalActionsImpl: void <init>(android.content.Context)>
<javax.microedition.khronos.opengles.GL10: void glDepthRangex(int,int)>
<com.android.settingslib.core.instrumentation.SharedPreferencesLogger: int getInt(java.lang.String,int)>
<com.android.server.AttributeCache: void updateConfiguration(android.content.res.Configuration)>
<com.android.settingslib.wifi.AccessPoint: boolean isConnectable()>
<com.android.media.remotedisplay.RemoteDisplay: void setPresentationDisplayId(int)>
<com.android.server.security.VerityUtils.SetupResult: com.android.server.security.VerityUtils.SetupResult skipped()>
<com.android.server.soundtrigger.SoundTriggerDbHelper: boolean updateGenericSoundModel(android.hardware.soundtrigger.SoundTrigger.GenericSoundModel)>
<com.android.systemui.pip.tv.PipManager: void removeMediaListener(com.android.systemui.pip.tv.PipManager.MediaListener)>
<com.android.systemui.qs.external.CustomTile: void handleSetListening(boolean)>
<com.android.server.appbinding.finders.CarrierMessagingClientServiceFinder: android.service.carrier.ICarrierMessagingClientService asInterface(android.os.IBinder)>
<android.net.ip.IpClientCallbacks: void startReadPacketFilter()>
<com.android.server.audio.AudioService: int getUiSoundsStreamType()>
<com.android.server.locksettings.PasswordSlotManager: java.util.Map loadSlotMap(java.io.InputStream)>
<com.android.settingslib.applications.ServiceListing.Builder: com.android.settingslib.applications.ServiceListing.Builder setNoun(java.lang.String)>
<com.android.settingslib.net.DataUsageController: com.android.settingslib.net.DataUsageController.DataUsageInfo getDataUsageInfo()>
<com.android.server.IntentResolver: java.util.Iterator filterIterator()>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: float getMinimumSwipeDistance()>
<com.android.systemui.statusbar.notification.row.FooterView: com.android.systemui.statusbar.notification.stack.ExpandableViewState createExpandableViewState()>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector className(java.lang.Class)>
<com.android.systemui.statusbar.notification.logging.NotificationLogger: void onDozingChanged(boolean)>
<com.android.server.timedetector.SimpleTimeDetectorStrategy: void handleAutoTimeDetectionToggle(boolean)>
<com.android.server.adb.AdbDebuggingManager: void clearDebuggingKeys()>
<com.android.systemui.statusbar.phone.StatusBarIconController.IconManager: void exitDemoMode()>
<com.android.systemui.assist.ui.EdgeLight: com.android.systemui.assist.ui.EdgeLight[] copy(com.android.systemui.assist.ui.EdgeLight[])>
<com.android.systemui.classifier.LengthCountClassifier: void <init>(com.android.systemui.classifier.ClassifierData)>
<com.android.settingslib.wifi.AccessPoint: void generateOpenNetworkConfig()>
<com.android.systemui.shared.system.BackgroundExecutor: com.android.systemui.shared.system.BackgroundExecutor get()>
<com.android.packageinstaller.television.ErrorFragment: androidx.leanback.widget.GuidanceStylist.Guidance onCreateGuidance(android.os.Bundle)>
<com.android.keyguard.KeyguardPatternView: boolean needsInput()>
<com.android.systemui.plugins.VolumeDialogController.Callbacks: void onCaptionComponentStateChanged(java.lang.Boolean,java.lang.Boolean)>
<com.android.settingslib.bluetooth.HearingAidProfile: int getVolume()>
<com.android.systemui.assist.AssistManager.UiController: void processBundle(android.os.Bundle)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setHeadsUpAnimatingAway(boolean)>
<com.android.server.NetworkScorerAppManager: android.net.NetworkScorerAppData getActiveScorer()>
<android.media.MediaPlayer2.SubtitleData: long getStartTimeUs()>
<com.android.server.accounts.AccountManagerService: void finishSessionAsUser(android.accounts.IAccountManagerResponse,android.os.Bundle,boolean,android.os.Bundle,int)>
<com.android.systemui.qs.QSTileHost: void destroy()>
<com.android.systemui.car.CarNotificationInterruptionStateProvider: boolean shouldHeadsUp(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.systemui.statusbar.policy.ConfigurationController.ConfigurationListener: void onOverlayChanged()>
<com.android.systemui.classifier.brightline.BrightLineFalsingManager: boolean isReportingEnabled()>
<com.android.systemui.bubbles.BubbleData: java.util.List getBubbles()>
<com.android.systemui.assist.AssistOrbContainer: boolean isShowing()>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void animateExpandSettingsPanel(java.lang.String)>
<com.android.systemui.power.PowerUI.WarningsUI: void showUsbHighTemperatureAlarm()>
<com.android.preload.ui.IUI: java.io.File showSaveDialog()>
<com.android.commands.sm.Sm: void runMount()>
<com.android.systemui.assist.ui.EdgeLight: void setColor(int)>
<com.android.server.notification.ZenModeHelper: boolean removeAutomaticZenRules(java.lang.String,java.lang.String)>
<com.android.printspooler.model.PageContentRepository.RenderSpec: boolean equals(java.lang.Object)>
<com.google.android.startop.iorap.AppIntentEvent: boolean equals(java.lang.Object)>
<com.android.server.pm.PackageManagerService: void setCheckPermissionDelegateLocked(android.content.pm.PackageManagerInternal.CheckPermissionDelegate)>
<com.android.systemui.ActivityStarterDelegate: void setActivityStarterImpl(com.android.systemui.plugins.ActivityStarter)>
<com.android.server.pm.PackageInstallerSession: long getUpdatedMillis()>
<com.android.settingslib.WirelessUtils: boolean isAirplaneModeOn(android.content.Context)>
<com.android.systemui.statusbar.ViewTransformationHelper.CustomTransformation: boolean transformFrom(com.android.systemui.statusbar.notification.TransformState,com.android.systemui.statusbar.TransformableView,float)>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: void setBluetoothEnabled(boolean)>
<com.android.systemui.classifier.HumanInteractionClassifier: com.android.systemui.classifier.HumanInteractionClassifier getInstance(android.content.Context)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector resourceId(java.lang.String)>
<com.android.settingslib.bluetooth.LocalBluetoothProfile: void setPreferred(android.bluetooth.BluetoothDevice,boolean)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setInflationCallback(com.android.systemui.statusbar.notification.row.NotificationContentInflater.InflationCallback)>
<com.android.server.webkit.SystemImpl: long getFactoryPackageVersion(java.lang.String)>
<com.android.systemui.recents.utilities.Utilities: android.view.View findParent(android.view.View,java.lang.Class)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void setLegacy(boolean)>
<com.android.systemui.classifier.EndPointRatioEvaluator: float evaluate(float)>
<com.android.server.locksettings.recoverablekeystore.RecoverableKeyStoreManager: void closeSession(java.lang.String)>
<com.android.server.BatteryService.HealthServiceWrapper.IServiceManagerSupplier: android.hidl.manager.V1_0.IServiceManager get()>
<com.android.systemui.plugins.VolumeDialogController: void setCaptionsEnabled(boolean)>
<com.android.server.slice.SliceManagerService: void revokeSlicePermission(java.lang.String,java.lang.String,android.net.Uri)>
<com.android.keyguard.clock.AnalogClockController: int getPreferredY(int)>
<javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLSurface eglCreatePixmapSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object,int[])>
<com.android.uiautomator.core.UiDevice: boolean takeScreenshot(java.io.File)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void appTransitionFinished(int)>
<com.android.systemui.statusbar.phone.StatusBarIconController: void removeIconGroup(com.android.systemui.statusbar.phone.StatusBarIconController.IconManager)>
<com.android.systemui.qs.external.CustomTile: java.lang.String toSpec(android.content.ComponentName)>
<com.android.systemui.recents.RecentsImplementation: boolean splitPrimaryTask(int,android.graphics.Rect,int)>
<com.android.systemui.qs.external.TileServices: boolean isLocked()>
<com.android.systemui.statusbar.notification.row.ExpandableView: boolean hasNoContentHeight()>
<com.android.systemui.statusbar.phone.StatusBarSignalPolicy.WifiIconState: void copyTo(com.android.systemui.statusbar.phone.StatusBarSignalPolicy.WifiIconState)>
<com.android.systemui.doze.DozeScreenStatePreventingAdapter: void setDozeScreenState(int)>
<com.android.systemui.statusbar.policy.NextAlarmControllerImpl: void <init>(android.content.Context)>
<com.android.systemui.recents.views.grid.TaskViewFocusFrame: void <init>(android.content.Context,com.android.systemui.recents.views.TaskStackView,com.android.systemui.recents.views.grid.TaskGridLayoutAlgorithm)>
<com.android.server.policy.RestartAction: void onPress()>
<com.android.server.accessibility.MagnificationController: void <init>(android.content.Context,com.android.server.accessibility.AccessibilityManagerService,java.lang.Object)>
<com.android.systemui.statusbar.notification.row.ExpandableView: int getOutlineTranslation()>
<com.android.server.pm.PreferredIntentResolver: void dumpFilter(java.io.PrintWriter,java.lang.String,com.android.server.pm.PreferredActivity)>
<com.android.server.media.MediaSessionStack.OnMediaButtonSessionChangedListener: void onMediaButtonSessionChanged(com.android.server.media.MediaSessionRecord,com.android.server.media.MediaSessionRecord)>
<android.processor.view.inspector.InspectableClassModel.Property: android.processor.view.inspector.InspectableClassModel.Accessor getAccessor()>
<com.android.systemui.statusbar.policy.UserSwitcherController.BaseUserAdapter: java.lang.String getName(android.content.Context,com.android.systemui.statusbar.policy.UserSwitcherController.UserRecord)>
<com.android.server.tv.UinputBridge: boolean isTokenValid(android.os.IBinder)>
<com.android.server.autofill.AutofillCompatAccessibilityService: void onInterrupt()>
<com.android.server.storage.AppCollector: void <init>(android.content.Context,android.os.storage.VolumeInfo)>
<android.media.UriDataSourceDesc: java.util.Map getHeaders()>
<com.android.server.SystemService: void onBootPhase(int)>
<com.android.settingslib.deviceinfo.StorageMeasurement: void setReceiver(com.android.settingslib.deviceinfo.StorageMeasurement.MeasurementReceiver)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getProfileParentId(int)>
<com.android.systemui.qs.tileimpl.QSTileBaseView: int getDetailY()>
<com.android.systemui.statusbar.phone.NotificationIconAreaController: void setAnimationsEnabled(boolean)>
<com.android.server.usb.UsbService: java.util.List getPorts()>
<com.android.systemui.assist.ui.CornerPathRenderer: android.graphics.Path getInsetPath(com.android.systemui.assist.ui.CornerPathRenderer.Corner,float)>
<com.android.server.NativeDaemonEvent: boolean isClassClientError()>
<com.android.settingslib.notification.EnableZenModeDialog: void <init>(android.content.Context)>
<com.android.systemui.DessertCaseView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.pm.permission.PermissionManagerServiceInternal.PermissionCallback: void onPermissionRevoked(int,int)>
<javax.obex.ObexTransport: void create()>
<com.android.systemui.util.leak.WeakIdentityHashMap: java.lang.Object get(java.lang.Object)>
<com.android.systemui.recents.views.TaskStackView: void onStackTaskAdded(com.android.systemui.recents.model.TaskStack,com.android.systemui.shared.recents.model.Task)>
<com.android.systemui.MultiListLayout.MultiListAdapter: boolean hasSeparatedItems()>
<com.android.systemui.statusbar.phone.BarTransitions: boolean isAlwaysOpaque()>
<com.android.systemui.statusbar.phone.NavigationBarView: com.android.systemui.statusbar.phone.ButtonDispatcher getHomeHandle()>
<com.android.systemui.keyguard.KeyguardViewMediator: void setSwitchingUser(boolean)>
<com.android.systemui.biometrics.BiometricDialogImpl: void onBiometricError(java.lang.String)>
<com.android.systemui.statusbar.phone.StatusBarIconControllerImpl: void removeIcon(java.lang.String)>
<com.android.server.usb.descriptors.Usb10ASGeneral: void report(com.android.server.usb.descriptors.report.ReportCanvas)>
<com.android.server.audio.AudioService: void setVolumeIndexForAttributes(android.media.AudioAttributes,int,int,java.lang.String)>
<com.android.systemui.statusbar.phone.KeyguardDismissUtil: void executeWhenUnlocked(com.android.systemui.plugins.ActivityStarter.OnDismissAction)>
<com.android.systemui.statusbar.phone.HeadsUpManagerPhone: boolean shouldHeadsUpBecomePinned(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void setImeWindowStatus(int,android.os.IBinder,int,int,boolean)>
<android.accounts.AccountManagerPerfTest: void testGetAccounts()>
<com.android.carrierdefaultapp.ProvisionObserver: boolean onStartJob(android.app.job.JobParameters)>
<com.android.server.accounts.AccountManagerService: android.accounts.AccountAndUser[] getRunningAccounts()>
<com.android.keyguard.KeyguardMessageArea: void onThemeChanged()>
<com.android.server.pm.PackageInstallerService: void onPrivateVolumeMounted(java.lang.String)>
<com.android.systemui.qs.external.TileServiceManager: void calculateBindPriority(long)>
<com.android.server.devicepolicy.DevicePolicyManagerService: long forceNetworkLogs()>
<com.android.server.notification.NotificationRecord: int getImportance()>
<com.android.systemui.statusbar.phone.HeadsUpManagerPhone: void onExpandingFinished()>
<com.android.settingslib.wifi.WifiTracker.WifiListener: void onAccessPointsChanged()>
<com.android.systemui.statusbar.phone.NotificationGroupManager.OnGroupChangeListener: void onGroupsChanged()>
<com.android.systemui.power.PowerNotificationWarnings: void <init>(android.content.Context,com.android.systemui.plugins.ActivityStarter)>
<com.android.server.accessibility.AccessibilityManagerService.SecurityPolicy: void updateWindowsLocked(java.util.List)>
<com.android.uiautomator.core.UiScrollable: double getSwipeDeadZonePercentage()>
<com.android.server.location.GnssMeasurementsProvider: void unregisterFromService()>
<com.android.server.testing.shadows.ShadowPerformUnifiedRestoreTask: void __constructor__(com.android.server.backup.UserBackupManagerService,com.android.server.backup.transport.TransportClient,android.app.backup.IRestoreObserver,android.app.backup.IBackupManagerMonitor,long,android.content.pm.PackageInfo,int,boolean,java.lang.String[],com.android.server.backup.internal.OnTaskFinishedListener)>
<com.android.systemui.statusbar.phone.StatusBarNotificationActivityStarter: void <init>(android.content.Context,com.android.systemui.statusbar.CommandQueue,com.android.systemui.assist.AssistManager,com.android.systemui.statusbar.phone.NotificationPanelView,com.android.systemui.statusbar.NotificationPresenter,com.android.systemui.statusbar.notification.NotificationEntryManager,com.android.systemui.statusbar.phone.HeadsUpManagerPhone,com.android.systemui.plugins.ActivityStarter,com.android.systemui.statusbar.notification.ActivityLaunchAnimator,com.android.internal.statusbar.IStatusBarService,com.android.systemui.plugins.statusbar.StatusBarStateController,android.app.KeyguardManager,android.service.dreams.IDreamManager,com.android.systemui.statusbar.NotificationRemoteInputManager,com.android.systemui.statusbar.phone.StatusBarRemoteInputCallback,com.android.systemui.statusbar.phone.NotificationGroupManager,com.android.systemui.statusbar.NotificationLockscreenUserManager,com.android.systemui.statusbar.phone.ShadeController,com.android.systemui.statusbar.policy.KeyguardMonitor,com.android.systemui.statusbar.notification.NotificationInterruptionStateProvider,com.android.internal.logging.MetricsLogger,com.android.internal.widget.LockPatternUtils,android.os.Handler,android.os.Handler,com.android.systemui.ActivityIntentHelper,com.android.systemui.bubbles.BubbleController)>
<com.android.settingslib.Utils: java.lang.String formatPercentage(double,boolean)>
<com.android.systemui.recents.LegacyRecentsImpl: com.android.systemui.recents.RecentsDebugFlags getDebugFlags()>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector descriptionContains(java.lang.String)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setRequiredStrongAuthTimeout(android.content.ComponentName,long,boolean)>
<com.android.server.om.DumpState: void setVerbose(boolean)>
<com.android.settingslib.inputmethod.InputMethodSettingValuesWrapper: boolean isAlwaysCheckedIme(android.view.inputmethod.InputMethodInfo)>
<com.android.settingslib.bluetooth.A2dpProfile: int getPreferred(android.bluetooth.BluetoothDevice)>
<com.android.server.policy.PhoneWindowManager: boolean isKeyguardSecure(int)>
<com.android.systemui.plugins.qs.QS: void setOverscrolling(boolean)>
<com.android.settingslib.core.instrumentation.SharedPreferencesLogger: long getLong(java.lang.String,long)>
<com.android.server.notification.CalendarTracker: void setCallback(com.android.server.notification.CalendarTracker.Callback)>
<android.graphics.perftests.PaintMeasureTextTest: java.util.Collection measureSpecs()>
<com.android.systemui.shared.system.RemoteAnimationTargetCompat: com.android.systemui.shared.system.RemoteAnimationTargetCompat[] wrap(android.view.RemoteAnimationTarget[])>
<com.android.server.IpSecService.RefcountedResource: void binderDied()>
<com.android.keyguard.KeyguardAbsKeyInputView: void setKeyguardCallback(com.android.keyguard.KeyguardSecurityCallback)>
<com.android.server.policy.WakeGestureListener: void dump(java.io.PrintWriter,java.lang.String)>
<com.android.systemui.statusbar.notification.ImageGradientColorizer: android.graphics.Bitmap colorize(android.graphics.drawable.Drawable,int,boolean)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setHeadsUpGoingAwayAnimationsAllowed(boolean)>
<com.android.systemui.recents.events.activity.ConfigurationChangedEvent: void <init>(boolean,boolean,boolean,boolean)>
<com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem: void routeToInputFromPortId(int)>
<com.android.settingslib.wifi.AccessPoint: void clearConfig()>
<com.android.server.notification.SnoozeHelper: boolean cancel(int,java.lang.String)>
<com.android.server.testing.shadows.ShadowAppBackupUtils: boolean appGetsFullBackup(android.content.pm.PackageInfo)>
<com.android.systemui.recents.RecentsImpl: void setWaitingForTransitionStart(boolean)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setContentBackground(int,boolean,com.android.systemui.statusbar.notification.row.NotificationContentView)>
<com.android.keyguard.clock.DefaultClockController: java.lang.String getName()>
<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getUserInfo(int)>
<com.android.systemui.biometrics.BiometricDialogView: void updateState(int)>
<com.android.systemui.statusbar.phone.NavigationPrototypeController.OnPrototypeChangedListener: void onEdgeSensitivityChanged(int,int)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexEnvf(int,int,float)>
<com.android.systemui.statusbar.StatusBarIconView: android.graphics.drawable.Icon getSourceIcon()>
<com.android.systemui.statusbar.policy.UserSwitcherController: void switchTo(int)>
<com.android.systemui.statusbar.notification.stack.StackScrollAlgorithm.StackScrollAlgorithmState: int getIndexOfExpandingNotification()>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: void updateNoSims()>
<com.android.server.usb.descriptors.UsbEndpointDescriptor: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>
<com.android.systemui.qs.QSFragment: void setListening(boolean)>
<com.android.server.tv.TvRemoteProviderProxy.ProviderMethods: void sendKeyDown(com.android.server.tv.TvRemoteProviderProxy,android.os.IBinder,int)>
<com.android.gallery3d.glrenderer.UploadedTexture: void updateContent(com.android.gallery3d.glrenderer.GLCanvas)>
<com.android.server.notification.NotificationUsageStats.SingleNotificationStats: void onCancel()>
<com.android.systemui.statusbar.notification.TextViewTransformState: boolean sameAs(com.android.systemui.statusbar.notification.TransformState)>
<android.net.shared.InitialConfiguration: boolean isProvisionedBy(java.util.List,java.util.List)>
<com.android.systemui.statusbar.notification.stack.AnimationProperties: com.android.systemui.statusbar.notification.stack.AnimationFilter getAnimationFilter()>
<com.android.server.timezone.ConfigHelper: java.lang.String getDataAppPackageName()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onBouncerPreHideAnimation()>
<com.android.systemui.recents.views.TaskView: void onStartLaunchTargetLaunchAnimation(int,boolean,com.android.systemui.recents.misc.ReferenceCountedTrigger)>
<com.android.systemui.globalactions.GlobalActionsDialog: void dismissDialog()>
<android.net.NetworkMonitorManager: boolean notifyNetworkConnected(android.net.LinkProperties,android.net.NetworkCapabilities)>
<com.android.server.devicepolicy.DevicePolicyManagerService: android.content.ComponentName getProfileOwnerAsUser(int)>
<com.android.systemui.statusbar.notification.stack.StackScrollAlgorithm: float updateChildZValue(int,float,com.android.systemui.statusbar.notification.stack.StackScrollAlgorithm.StackScrollAlgorithmState,com.android.systemui.statusbar.notification.stack.AmbientState)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void notifyGroupChildAdded(com.android.systemui.statusbar.notification.row.ExpandableView)>
<com.android.keyguard.clock.ClockManager: void removeOnClockChangedListener(com.android.keyguard.clock.ClockManager.ClockChangedListener)>
<com.android.server.pm.ProtectedPackages: void setDeviceAndProfileOwnerPackages(int,java.lang.String,android.util.SparseArray)>
<com.android.future.usb.UsbAccessory: java.lang.String getSerial()>
<com.android.server.autofill.ui.AutoFillUI: void onPendingSaveUi(int,android.os.IBinder)>
<com.android.server.LooperStatsService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.recents.views.AnimateableViewBounds: void getOutline(android.view.View,android.graphics.Outline)>
<com.android.keyguard.KeyguardHostView: boolean dispatchKeyEvent(android.view.KeyEvent)>
<com.android.printspooler.ui.PrintErrorFragment: void onViewCreated(android.view.View,android.os.Bundle)>
<com.android.systemui.statusbar.phone.ShadeController: void animateCollapsePanels(int,boolean)>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean isInContentBounds(float,float)>
<com.android.server.notification.NotificationManagerService.NotificationListeners: void notifyHiddenLocked(java.util.List)>
<com.android.server.ConnectivityService: java.lang.String[] getTetherableWifiRegexs()>
<com.android.printservice.recommendation.plugin.hp.ServiceListener: void start()>
<com.android.server.testing.shadows.ShadowBinder: android.os.UserHandle getCallingUserHandle()>
<javax.microedition.khronos.opengles.GL10: void glTexEnvfv(int,int,java.nio.FloatBuffer)>
<com.android.server.lights.Light: void pulse()>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationBigTextTemplateViewWrapper: void updateTransformedTypes()>
<com.android.systemui.statusbar.car.DrivingStateHelper: boolean isCurrentlyDriving()>
<com.android.systemui.statusbar.phone.BiometricUnlockController: void onBiometricError(int,java.lang.String,android.hardware.biometrics.BiometricSourceType)>
<com.android.systemui.statusbar.phone.NotificationListenerWithPlugins: boolean onPluginNotificationRemoved(android.service.notification.StatusBarNotification,android.service.notification.NotificationListenerService.RankingMap)>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcherScrim: void setAlpha(int)>
<com.android.systemui.statusbar.phone.HeadsUpManagerPhone: void setIsPanelExpanded(boolean)>
<com.android.settingslib.media.MediaDevice: java.lang.String getName()>
<com.android.packageinstaller.UninstallUninstalling.UninstallUninstallingFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
<com.android.systemui.statusbar.EmptyShadeView: void setText(int)>
<com.android.server.locksettings.LockSettingsService: void resetKeyStore(int)>
<com.android.commands.sm.Sm: void runListVolumes()>
<com.android.systemui.statusbar.policy.BatteryControllerImpl: void removeCallback(com.android.systemui.statusbar.policy.BatteryController.BatteryStateChangeCallback)>
<com.android.server.accessibility.AccessibilityManagerService: java.util.List getEnabledAccessibilityServiceList(int,int)>
<com.android.systemui.statusbar.CommandQueue: void setTopAppHidesStatusBar(boolean)>
<com.android.server.policy.PermissionPolicyInternal: void setOnInitializedCallback(com.android.server.policy.PermissionPolicyInternal.OnInitializedCallback)>
<com.android.server.biometrics.fingerprint.FingerprintService: boolean checkAppOps(int,java.lang.String)>
<com.android.settingslib.widget.ActionButtonsPreference: com.android.settingslib.widget.ActionButtonsPreference setButton3Visible(boolean)>
<com.android.powermodel.component.CpuProfile.Builder: void setSuspendMa(float)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setLogoutEnabled(android.content.ComponentName,boolean)>
<android.graphics.perftests.PathPerfTest: void testRewind()>
<com.android.systemui.qs.tileimpl.QSIconViewImpl: void onMeasure(int,int)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void onBootCompleted()>
<com.android.server.slice.SliceManagerService.Lifecycle: void onUnlockUser(int)>
<com.android.systemui.recents.views.TaskView: void hideActionButton(boolean,int,boolean,android.animation.Animator.AnimatorListener)>
<com.android.server.voiceinteraction.VoiceInteractionManagerService: void onBootPhase(int)>
<com.android.systemui.qs.QSPanel: void setBrightnessListening(boolean)>
<com.android.systemui.statusbar.policy.ZenModeControllerImpl: void fireConfigChanged(android.service.notification.ZenModeConfig)>
<com.android.server.accessibility.MagnificationController: float getScale(int)>
<com.android.server.policy.WindowManagerPolicy: void init(android.content.Context,android.view.IWindowManager,com.android.server.policy.WindowManagerPolicy.WindowManagerFuncs)>
<com.android.systemui.qs.QSDetailItems: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.server.display.WifiDisplayController.Listener: void onScanResults(android.hardware.display.WifiDisplay[])>
<com.android.systemui.statusbar.phone.UserAvatarView: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.StatusBar: void onOverlayChanged()>
<com.android.server.location.GnssStatusListenerHelper: void <init>(android.content.Context,android.os.Handler)>
<lockedregioncodeinjection.LockTarget: java.lang.String getPostMethod()>
<com.android.systemui.statusbar.phone.NotificationIconAreaController: void onStateChanged(int)>
<com.android.companiondevicemanager.DeviceDiscoveryService: void onCreate()>
<com.android.server.devicepolicy.DevicePolicyManagerService: int setStorageEncryption(android.content.ComponentName,boolean)>
<com.android.server.notification.PreferencesHelper: boolean bubblesEnabled(android.os.UserHandle)>
<com.android.keyguard.KeyguardAbsKeyInputView: void onUserInput()>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void setAmbientChild(android.view.View)>
<com.android.systemui.statusbar.phone.ContextualButton: void <init>(int,int)>
<com.android.aapt.namespace.libtwo.TextView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.systemui.shared.recents.view.RecentsTransition: android.os.IRemoteCallback wrapStartedListener(android.os.Handler,java.lang.Runnable)>
<com.android.settingslib.inputmethod.InputMethodAndSubtypeEnablerManagerCompat: boolean onPreferenceChange(androidx.preference.Preference,java.lang.Object)>
<com.android.settingslib.CustomDialogPreference: void setOnShowListener(android.content.DialogInterface.OnShowListener)>
<com.android.server.location.RemoteListenerHelper: void addListener(android.os.IInterface,com.android.server.location.CallerIdentity)>
<com.android.mtp.MtpDocumentsProvider: android.content.res.AssetFileDescriptor openDocumentThumbnail(java.lang.String,android.graphics.Point,android.os.CancellationSignal)>
<android.text.StaticLayoutMultithreadPerfTest: void testCreate_RandomText_Thread_2()>
<com.android.systemui.qs.tiles.ColorInversionTile: void handleDestroy()>
<com.android.server.usb.descriptors.UsbDescriptorParser: boolean hasMic()>
<com.android.keyguard.KeyguardSimPukView: boolean startDisappearAnimation(java.lang.Runnable)>
<android.multiuser.UserLifecycleTests: void switchUser_running()>
<com.android.server.usb.descriptors.Usb20ASGeneral: void <init>(int,byte,byte,int)>
<com.android.systemui.statusbar.notification.NotificationEntryManager: void updateNotificationRanking(android.service.notification.NotificationListenerService.RankingMap)>
<android.widget.TextViewAutoSizeLayoutPerfTest: void testConstruction()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void notifyPendingSystemUpdate(android.app.admin.SystemUpdateInfo)>
<com.android.settingslib.bluetooth.PbapServerProfile: int getNameResource(android.bluetooth.BluetoothDevice)>
<com.android.server.MmsServiceBroker: void onStart()>
<com.android.systemui.statusbar.notification.stack.AmbientState: int getNotificationLaunchHeight(android.content.Context)>
<com.android.systemui.qs.external.QSTileServiceWrapper: boolean onUnlockComplete()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setEntry(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.powermodel.component.ModemProfile.Builder: com.android.powermodel.component.ModemProfile build()>
<com.android.server.utils.ManagedApplicationService: void sendEvent(com.android.server.utils.ManagedApplicationService.PendingEvent)>
<com.android.settingslib.bluetooth.HearingAidProfile: int getDeviceSide(android.bluetooth.BluetoothDevice)>
<com.android.systemui.statusbar.phone.MultiUserSwitch: void onFinishInflate()>
<com.android.server.NetworkScoreService.Lifecycle: void onBootPhase(int)>
<com.android.location.provider.ActivityRecognitionProviderClient: android.os.IBinder getBinder()>
<android.net.NetworkStackClient.NetworkStackCallback: void onNetworkStackConnected(android.net.INetworkStackConnector)>
<android.media.MediaPlayer2: android.media.PlaybackParams getPlaybackParams()>
<android.media.Session2CommandGroup.Builder: android.media.Session2CommandGroup build()>
<com.android.server.accessibility.ActionReplacingCallback: void setPerformAccessibilityActionResult(boolean,int)>
<com.android.systemui.statusbar.phone.FloatingRotationButton: boolean show()>
<com.android.systemui.settings.ToggleSliderView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.PackageWatchdog: com.android.server.PackageWatchdog getInstance(android.content.Context)>
<com.android.server.appbinding.AppBindingService.Lifecycle: void onBootPhase(int)>
<com.android.systemui.statusbar.StatusBarWifiView: java.lang.String getSlot()>
<com.android.systemui.statusbar.notification.VisualStabilityManager.Callback: void onReorderingAllowed()>
<com.android.server.location.GnssLocationProvider: void reportNiNotification(int,int,int,int,int,java.lang.String,java.lang.String,int,int)>
<com.android.server.biometrics.BiometricServiceBase.AuthenticationClientImpl: void onStart()>
<com.android.uiautomator.core.UiCollection: com.android.uiautomator.core.UiObject getChildByInstance(com.android.uiautomator.core.UiSelector,int)>
<com.android.statsd.loadtest.PerfParser: java.lang.String parseLine(java.lang.String)>
<com.android.systemui.qs.QSContainerImpl: void onFinishInflate()>
<com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem: boolean handleReportPowerStatus(com.android.server.hdmi.HdmiCecMessage)>
<com.android.future.usb.UsbAccessory: java.lang.String getVersion()>
<com.android.systemui.statusbar.phone.NavigationBarView: void setLayoutTransitionsEnabled(boolean)>
<com.android.systemui.qs.tileimpl.QSTileImpl: com.android.systemui.plugins.qs.DetailAdapter getDetailAdapter()>
<com.android.commands.svc.PowerCommand: void run(java.lang.String[])>
<com.android.systemui.util.leak.RotationUtils: int getRotation(android.content.Context)>
<com.android.server.testharness.TestHarnessModeService: void onStart()>
<com.android.server.trust.TrustManagerService: void onStart()>
<com.android.systemui.globalactions.GlobalActionsGridLayout: com.android.systemui.globalactions.ListGridLayout getListView()>
<com.android.systemui.SystemBars: void start()>
<com.android.server.pm.permission.PermissionManagerServiceInternal.PermissionCallback: void onInstallPermissionRevoked()>
<com.android.systemui.statusbar.policy.ExtensionController.ExtensionBuilder: com.android.systemui.statusbar.policy.ExtensionController.ExtensionBuilder withPlugin(java.lang.Class,java.lang.String,com.android.systemui.statusbar.policy.ExtensionController.PluginConverter)>
<com.android.settingslib.CustomEditTextPreference.CustomPreferenceDialogFragment: void onClick(android.content.DialogInterface,int)>
<com.android.server.wallpaper.WallpaperManagerService: int getWidthHint(int)>
<com.android.keyguard.KeyguardSecurityView: void startAppearAnimation()>
<com.android.systemui.util.leak.GarbageMonitor: void startHeapTracking()>
<com.android.server.audio.AudioService: android.media.IRingtonePlayer getRingtonePlayer()>
<com.android.systemui.shared.plugins.VersionInfo.InvalidVersionException: boolean isTooNew()>
<android.net.ip.IpServer.Dependencies: void makeDhcpServer(java.lang.String,android.net.dhcp.DhcpServingParamsParcel,android.net.dhcp.DhcpServerCallbacks)>
<com.android.server.adb.AdbDebuggingManager: void denyDebugging()>
<com.android.systemui.ActivityIntentHelper: boolean wouldLaunchResolverActivity(android.content.Intent,int)>
<com.android.systemui.statusbar.notification.NotificationDozeHelper: void updateGrayscale(android.widget.ImageView,boolean)>
<com.android.server.testing.shadows.ShadowPerformUnifiedRestoreTask: void execute()>
<com.android.keyguard.clock.BubbleClockController: void <init>(android.content.res.Resources,android.view.LayoutInflater,com.android.systemui.colorextraction.SysuiColorExtractor)>
<com.android.gallery3d.exif.ExifTag: int getDataSize()>
<com.android.systemui.statusbar.notification.stack.AnimationFilter: com.android.systemui.statusbar.notification.stack.AnimationFilter animateY()>
<com.android.powermodel.component.ModemProfile.Builder: void setRxMa(float)>
<com.android.settingslib.wifi.AccessPoint: int getSecurity()>
<com.android.server.usb.descriptors.UsbDeviceDescriptor: android.hardware.usb.UsbDevice.Builder toAndroid(com.android.server.usb.descriptors.UsbDescriptorParser)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: boolean isSecure(int)>
<com.android.settingslib.fuelgauge.BatterySaverUtils: boolean setPowerSaveMode(android.content.Context,boolean,boolean)>
<com.android.systemui.statusbar.StatusBarWifiView: void <init>(android.content.Context)>
<com.android.settingslib.bluetooth.BluetoothUtils: int getIntMetaData(android.bluetooth.BluetoothDevice,int)>
<com.google.android.startop.iorap.AppLaunchEvent.BaseWithActivityRecordData: void writeToParcelImpl(android.os.Parcel,int)>
<com.android.server.notification.CriticalNotificationExtractor: com.android.server.notification.RankingReconsideration process(com.android.server.notification.NotificationRecord)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void onViewAdded(android.view.View)>
<com.android.systemui.qs.QSPanel: void refreshAllTiles()>
<com.android.settingslib.bluetooth.HidProfile: boolean connect(android.bluetooth.BluetoothDevice)>
<com.android.settingslib.widget.AppEntitiesHeaderController: com.android.settingslib.widget.AppEntitiesHeaderController newInstance(android.content.Context,android.view.View)>
<com.android.server.autofill.AutofillManagerService: int getPartitionMaxCount()>
<com.android.settingslib.bluetooth.MapClientProfile: int getPreferred(android.bluetooth.BluetoothDevice)>
<com.android.systemui.statusbar.phone.ReverseLinearLayout: void onRtlPropertiesChanged(int)>
<com.android.systemui.recents.views.DockState: android.graphics.Rect getPreDockedBounds(int,int,android.graphics.Rect)>
<com.android.systemui.statusbar.phone.PanelBar: void panelExpansionChanged(float,boolean)>
<com.android.settingslib.animation.AppearAnimationUtils.RowTranslationScaler: float getRowTranslationScale(int,int)>
<com.android.server.biometrics.face.FaceUserState: void addBiometric(android.hardware.biometrics.BiometricAuthenticator.Identifier)>
<javax.obex.ClientOperation: java.io.InputStream openInputStream()>
<com.android.server.NetworkScorerAppManager: java.util.List getAllValidScorers()>
<com.android.printspooler.model.PageContentRepository.RenderSpec: boolean hasSameSize(com.android.printspooler.model.PageContentRepository.RenderedPage)>
<com.android.gallery3d.exif.ExifTag: short getDataType()>
<com.android.keyguard.KeyguardSecurityContainer: void onFinishInflate()>
<com.android.server.NetworkManagementService: android.net.NetworkStats getNetworkStatsUidDetail(int,java.lang.String[])>
<com.android.systemui.shared.plugins.PluginManager: void addPluginListener(com.android.systemui.plugins.PluginListener,java.lang.Class)>
<com.android.systemui.qs.external.CustomTile: void handleUpdateState(com.android.systemui.plugins.qs.QSTile.State,java.lang.Object)>
<com.android.preload.classdataretrieval.ClassDataRetriever: java.util.Map getClassData(com.android.ddmlib.Client)>
<com.android.systemui.doze.DozeHost.Callback: void onNotificationAlerted()>
<com.android.server.accounts.AccountManagerService: boolean renameSharedAccountAsUser(android.accounts.Account,java.lang.String,int)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void setWindowState(int,int,int)>
<android.net.ipmemorystore.SameL3NetworkResponse: boolean equals(java.lang.Object)>
<com.android.server.pm.PackageSetting: boolean isVendor()>
<com.android.systemui.statusbar.phone.StatusBar: void createAndAddWindows(com.android.internal.statusbar.RegisterStatusBarResult)>
<com.android.server.usb.descriptors.UsbACInterface: void <init>(int,byte,byte,int)>
<com.android.systemui.keyguard.KeyguardViewMediator: void onStartedGoingToSleep(int)>
<com.android.systemui.shared.recents.model.IconLoader: android.graphics.drawable.Drawable getDefaultIcon(int)>
<com.android.server.usb.descriptors.UsbConfigDescriptor: byte getNumInterfaces()>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: boolean isLastInSection()>
<com.android.systemui.qs.external.TileServices: com.android.systemui.qs.QSTileHost getHost()>
<com.android.systemui.qs.tiles.FlashlightTile: void handleSetListening(boolean)>
<com.android.settingslib.drawable.UserIconDrawable: int getSizeForList(android.content.Context)>
<com.android.server.infra.AbstractPerUserSystemService: android.content.pm.ServiceInfo newServiceInfoLocked(android.content.ComponentName)>
<com.android.systemui.recents.RecentsImpl: void preloadRecents()>
<android.view.autofill.LoginTest: void onCreate(android.perftests.utils.StubActivity)>
<com.android.server.timezone.PackageManagerHelper: boolean contentProviderRegistered(java.lang.String,java.lang.String)>
<com.android.server.statusbar.StatusBarManagerService: void onNotificationSettingsViewed(java.lang.String)>
<com.android.server.usb.descriptors.UsbMSMidiOutputJack: void report(com.android.server.usb.descriptors.report.ReportCanvas)>
<com.android.server.webkit.SystemInterface: java.lang.String getUserChosenWebViewProvider(android.content.Context)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean setApplicationHidden(android.content.ComponentName,java.lang.String,java.lang.String,boolean)>
<com.android.systemui.recents.TriangleShape: com.android.systemui.recents.TriangleShape createHorizontal(float,float,boolean)>
<com.android.server.usb.UsbPortManager: void systemReady()>
<android.text.NonEditableTextGenerator: void <init>(java.util.Random)>
<com.android.systemui.qs.external.TileLifecycleManager: void onTileRemoved()>
<com.android.systemui.statusbar.phone.HeadsUpAppearanceController: void <init>(com.android.systemui.statusbar.phone.NotificationIconAreaController,com.android.systemui.statusbar.phone.HeadsUpManagerPhone,com.android.systemui.statusbar.HeadsUpStatusBarView,com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout,com.android.systemui.statusbar.phone.NotificationPanelView,android.view.View,android.view.View,android.view.View)>
<com.android.systemui.recents.model.RecentsTaskLoader: com.android.systemui.shared.recents.model.IconLoader createNewIconLoader(android.content.Context,com.android.systemui.shared.recents.model.TaskKeyLruCache,android.util.LruCache)>
<com.android.systemui.statusbar.phone.DarkIconDispatcherImpl: void addDarkReceiver(com.android.systemui.plugins.DarkIconDispatcher.DarkReceiver)>
<com.android.systemui.statusbar.notification.TransformState: void prepareFadeIn()>
<com.android.printspooler.ui.PrintActivity: void onUpdateCanceled()>
<com.android.server.ConnectivityService: void <init>(android.content.Context,android.os.INetworkManagementService,android.net.INetworkStatsService,android.net.INetworkPolicyManager)>
<com.android.systemui.statusbar.FlingAnimationUtils: void applyDismissing(android.animation.Animator,float,float,float,float)>
<com.android.keyguard.KeyguardPinBasedInputView: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.StatusBarWindowController: void setScrimsVisibility(int)>
<com.android.server.firewall.IntentFirewall: boolean checkService(android.content.ComponentName,android.content.Intent,int,int,java.lang.String,android.content.pm.ApplicationInfo)>
<com.android.systemui.statusbar.notification.NotificationEntryListener: void onEntryRemoved(com.android.systemui.statusbar.notification.collection.NotificationEntry,com.android.internal.statusbar.NotificationVisibility,boolean)>
<com.android.server.statusbar.StatusBarManagerInternal: void setWindowState(int,int,int)>
<com.android.systemui.qs.external.QSTileServiceWrapper: android.service.quicksettings.IQSTileService getService()>
<com.android.server.NetworkManagementService: java.lang.String[] listInterfaces()>
<com.android.server.hdmi.HdmiCecController.NativeWrapper: void nativeEnableAudioReturnChannel(long,int,boolean)>
<com.android.server.notification.SnoozeHelper: void clearData(int,java.lang.String)>
<com.android.systemui.keyguard.KeyguardSliceProvider: java.lang.String getFormattedDateLocked()>
<com.android.systemui.util.leak.LeakReporter: void <init>(android.content.Context,com.android.systemui.util.leak.LeakDetector,java.lang.String)>
<com.android.server.ExtconUEventObserver: boolean extconExists()>
<javax.microedition.khronos.opengles.GL11: void glGetTexParameterfv(int,int,java.nio.FloatBuffer)>
<android.multiuser.BenchmarkResults: android.os.Bundle getStatsToLog()>
<com.android.server.biometrics.Constants: int acquireVendorCode()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void updateEmptyShadeView(boolean)>
<com.android.settingslib.wifi.WifiUtils: java.lang.String buildLoggingSummary(com.android.settingslib.wifi.AccessPoint,android.net.wifi.WifiConfiguration)>
<com.android.systemui.keyguard.ScreenLifecycle: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.settingslib.bluetooth.PanProfile: void finalize()>
<android.text.PrecomputedTextMemoryUsageTest: void testMemoryUsage_CJK_NoHyphenation()>
<com.android.mediadrm.signer.MediaDrmSigner.Certificate: byte[] getContent()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setOverScrollAmount(float,boolean,boolean,boolean)>
<com.android.systemui.statusbar.policy.ExtensionController.Extension: java.lang.Object get()>
<com.android.systemui.qs.car.CarQSFragment.UserSwitchCallback: boolean isShowing()>
<com.android.keyguard.KeyguardStatusView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.LockGuard: java.lang.Object installLock(java.lang.Object,int,boolean)>
<com.android.preload.ui.SequenceUI: java.io.File[] showOpenDialog(boolean)>
<com.android.printspooler.model.RemotePrintDocument.UpdateResultCallbacks: void onUpdateFailed(java.lang.CharSequence)>
<com.android.systemui.glwallpaper.ImageWallpaperRenderer: void onSurfaceChanged(int,int)>
<com.android.server.notification.NotificationSignalExtractor: void setZenHelper(com.android.server.notification.ZenModeHelper)>
<com.android.systemui.util.leak.TrackedGarbage: void <init>(com.android.systemui.util.leak.TrackedCollections)>
<com.android.server.display.whitebalance.DisplayWhiteBalanceSettings: void dump(java.io.PrintWriter)>
<com.android.server.notification.NotificationRecord: void setPackageVisibilityOverride(int)>
<com.android.systemui.qs.QSDetailClipper: void animateCircularClip(int,int,boolean,android.animation.Animator.AnimatorListener)>
<android.os.BinderCallsStatsPerfTest: void tearDown()>
<android.media.UriDataSourceDesc: android.net.Uri getUri()>
<com.android.commands.svc.UsbCommand: java.lang.String longHelp()>
<com.android.server.NetworkScoreService.ScoringServiceConnection: android.net.NetworkScorerAppData getAppData()>
<com.android.keyguard.KeyguardStatusView: void onDensityOrFontScaleChanged()>
<com.android.systemui.classifier.FalsingManagerProxy: void setShowingAod(boolean)>
<com.android.keyguard.KeyguardPatternView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.settingslib.notification.EnableZenModeDialog: android.app.Dialog createDialog()>
<com.android.server.textclassifier.TextClassificationManagerService: void onSuggestConversationActions(android.view.textclassifier.TextClassificationSessionId,android.view.textclassifier.ConversationActions.Request,android.service.textclassifier.ITextClassifierCallback)>
<com.android.systemui.qs.tileimpl.QSTileImpl: void handleLongClick()>
<com.android.systemui.classifier.FalsingManagerProxy: void onCameraHintStarted()>
<com.android.systemui.keyguard.KeyguardSliceProvider: boolean onCreateSliceProvider()>
<com.android.systemui.egg.MLand: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.keyguard.KeyguardSecurityContainer: void setSecurityCallback(com.android.keyguard.KeyguardSecurityContainer.SecurityCallback)>
<com.android.server.adb.AdbService.Lifecycle: void onBootPhase(int)>
<com.android.server.pm.permission.PermissionManagerServiceInternal: void revokeRuntimePermissionsIfGroupChanged(android.content.pm.PackageParser.Package,android.content.pm.PackageParser.Package,java.util.ArrayList,com.android.server.pm.permission.PermissionManagerServiceInternal.PermissionCallback)>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverySessionStorage.Entry: byte[] getKeyClaimant()>
<com.android.systemui.PluginInflateContainer: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.settingslib.animation.AppearAnimationUtils: android.view.animation.Interpolator getInterpolator()>
<com.android.server.usb.descriptors.report.HTMLReportCanvas: void openList()>
<com.android.server.devicepolicy.DevicePolicyManagerService: long getPasswordExpiration(android.content.ComponentName,int,boolean)>
<com.android.preload.Main: void setDevice(com.android.ddmlib.IDevice)>
<com.android.systemui.statusbar.phone.NavigationModeController.ModeChangedListener: void onNavigationModeChanged(int)>
<com.android.keyguard.KeyguardUpdateMonitor: void dispatchScreenTurnedOff()>
<com.android.server.CountryDetectorService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.accounts.IAccountAuthenticatorCache: void setBindInstantServiceAllowed(int,boolean)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onKeyguardVisibilityChanged(boolean)>
<com.android.server.ConsumerIrService: void transmit(java.lang.String,int,int[])>
<com.android.settingslib.applications.ApplicationsState.Callbacks: void onPackageSizeChanged(java.lang.String)>
<android.net.ip.IIpClient: void setHttpProxy(android.net.ProxyInfo)>
<com.android.systemui.DependencyProvider: com.android.systemui.util.leak.LeakDetector provideLeakDetector()>
<com.android.systemui.statusbar.notification.stack.AmbientState: void setExpansionChanging(boolean)>
<com.android.systemui.classifier.brightline.BrightLineFalsingManager: void onNotificatonStopDismissing()>
<com.android.server.locksettings.recoverablekeystore.KeyStoreProxy: void setEntry(java.lang.String,java.security.KeyStore.Entry,java.security.KeyStore.ProtectionParameter)>
<com.android.keyguard.KeyguardSliceView: void onDetachedFromWindow()>
<com.android.systemui.qs.tileimpl.QSIconViewImpl: int getColor(int)>
<com.android.systemui.statusbar.notification.row.NotificationInlineImageResolver: boolean hasCache()>
<com.android.systemui.statusbar.phone.BiometricUnlockController: void onBiometricAuthenticated(int,android.hardware.biometrics.BiometricSourceType)>
<com.android.server.pm.UserManagerService: int[] getUserIds()>
<com.android.systemui.statusbar.notification.row.FooterView: void onFinishInflate()>
<com.android.server.location.GnssLocationProvider.GnssMetricsProvider: java.lang.String getGnssMetricsAsProtoString()>
<com.android.systemui.assist.ui.EdgeLight: float getOffset()>
<com.android.systemui.statusbar.notification.row.NotificationGuts: void onDraw(android.graphics.Canvas)>
<com.android.settingslib.widget.apppreference.AppPreference: void <init>(android.content.Context)>
<com.android.server.policy.SoftRestrictedPermissionPolicy: com.android.server.policy.SoftRestrictedPermissionPolicy forPermission(android.content.Context,android.content.pm.ApplicationInfo,android.os.UserHandle,java.lang.String)>
<com.android.systemui.SystemUIFactory: com.android.systemui.statusbar.phone.ScrimController createScrimController(com.android.systemui.statusbar.ScrimView,com.android.systemui.statusbar.ScrimView,com.android.systemui.statusbar.phone.LockscreenWallpaper,com.android.internal.util.function.TriConsumer,java.util.function.Consumer,com.android.systemui.statusbar.phone.DozeParameters,android.app.AlarmManager)>
<com.android.systemui.assist.ui.PerimeterPathGuide: float getBottomCornerRadiusPx()>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void onDreamingStarted()>
<com.android.settingslib.suggestions.SuggestionController: void stop()>
<android.text.StaticLayoutPerfTest: void testCreate_RandomText_NoStyled_Greedy_NoHyphenation()>
<com.android.systemui.recents.views.TaskStackView: com.android.systemui.recents.views.TaskStackViewScroller getScroller()>
<com.android.systemui.qs.PagedTileLayout: int getNumVisibleTiles()>
<javax.microedition.khronos.opengles.GL11: void glGetFixedv(int,java.nio.IntBuffer)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: boolean areGutsExposed()>
<android.net.ipmemorystore.NetworkAttributes: boolean equals(java.lang.Object)>
<com.android.systemui.statusbar.policy.ZenModeControllerImpl: boolean isCountdownConditionSupported()>
<com.android.gallery3d.common.Utils: float clamp(float,float,float)>
<com.android.server.pm.PackageManagerService: void notifyDexLoad(java.lang.String,java.util.List,java.util.List,java.lang.String)>
<com.android.gallery3d.exif.ExifTag: boolean equals(java.lang.Object)>
<com.android.systemui.volume.SegmentedButtons: void setSelectedValue(java.lang.Object,boolean)>
<com.android.systemui.statusbar.notification.stack.NotificationListContainer: void setChildTransferInProgress(boolean)>
<com.android.systemui.plugins.qs.QS: void animateHeaderSlidingOut()>
<com.android.server.hdmi.SelectRequestBuffer: void clear()>
<com.android.printspooler.ui.SelectPrinterActivity: void onStart()>
<com.android.systemui.statusbar.notification.NotificationEntryListener: void onEntryInflated(com.android.systemui.statusbar.notification.collection.NotificationEntry,int)>
<com.android.systemui.statusbar.notification.row.ExpandableOutlineView: void setBackgroundTop(int)>
<com.android.statsd.dogfood.DisplayProtoUtils: void displayLogReport(java.lang.StringBuilder,com.android.os.StatsLog.ConfigMetricsReportList)>
<com.android.server.notification.ManagedServices: void onServiceRemovedLocked(com.android.server.notification.ManagedServices.ManagedServiceInfo)>
<com.android.systemui.egg.MLand: void reset()>
<com.android.server.location.ComprehensiveCountryDetector: void stop()>
<com.android.systemui.qs.AutoSizingList: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.util.AsyncSensorManager: void unregisterDynamicSensorCallbackImpl(android.hardware.SensorManager.DynamicSensorCallback)>
<com.android.server.AnimationThread: com.android.server.AnimationThread get()>
<com.android.gallery3d.exif.Rational: long getNumerator()>
<com.android.server.pm.LauncherAppsService: void onStart()>
<com.android.server.broadcastradio.hal2.BroadcastRadioService: android.hardware.radio.ITuner openSession(int,android.hardware.radio.RadioManager.BandConfig,boolean,android.hardware.radio.ITunerCallback)>
<com.android.server.pm.permission.PermissionsState.PermissionState: void <init>(com.android.server.pm.permission.PermissionsState.PermissionState)>
<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: void onConfigurationChanged()>
<com.android.systemui.statusbar.policy.KeyButtonDrawable: com.android.systemui.statusbar.policy.KeyButtonDrawable create(android.content.Context,int,boolean)>
<com.android.server.content.SyncStorageEngine: void reportActiveChange(int)>
<android.net.ip.IpClientManager: boolean shutdown()>
<com.android.systemui.statusbar.phone.HeadsUpManagerPhone: void setMenuShown(com.android.systemui.statusbar.notification.collection.NotificationEntry,boolean)>
<com.android.systemui.qs.tileimpl.QSTileImpl: void setTileSpec(java.lang.String)>
<com.android.settingslib.drawable.UserIconDrawable: com.android.settingslib.drawable.UserIconDrawable setIconDrawable(android.graphics.drawable.Drawable)>
<com.android.systemui.statusbar.phone.ContextualButton.ContextButtonListener: void onVisibilityChanged(com.android.systemui.statusbar.phone.ContextualButton,boolean)>
<com.android.server.timezone.TimeZoneUpdateIdler: void schedule(android.content.Context,long)>
<com.android.server.content.SyncStorageEngine: void setDelayUntilTime(com.android.server.content.SyncStorageEngine.EndPoint,long)>
<com.android.server.hdmi.SelectRequestBuffer.SelectRequest: void <init>(com.android.server.hdmi.HdmiControlService,int,android.hardware.hdmi.IHdmiControlCallback)>
<com.android.systemui.BatteryMeterView: void setColorsFromContext(android.content.Context)>
<com.android.server.autofill.Helper: void printlnRedactedText(java.io.PrintWriter,java.lang.CharSequence)>
<com.android.server.notification.ManagedServices: java.util.Set getAllowedPackages()>
<android.net.dhcp.DhcpServingParamsParcelExt: android.net.dhcp.DhcpServingParamsParcelExt setDhcpLeaseTimeSecs(long)>
<com.android.server.inputmethod.MultiClientInputMethodManagerService.Lifecycle: void onBootPhase(int)>
<com.android.keyguard.KeyguardUpdateMonitor.BatteryStatus: boolean isBatteryLow()>
<com.android.server.locksettings.recoverablekeystore.KeyStoreProxyImpl: void <init>(java.security.KeyStore)>
<com.android.systemui.recents.views.TaskView: void setFocusedState(boolean,boolean)>
<com.android.systemui.recents.OverviewProxyService: void onActiveNavBarRegionChanges(android.graphics.Region)>
<com.android.server.input.InputManagerService.WindowManagerCallbacks: void notifyLidSwitchChanged(long,boolean)>
<com.android.systemui.statusbar.notification.stack.AmbientState: int getBaseZHeight()>
<com.android.server.notification.ZenModeFiltering: void dump(java.io.PrintWriter,java.lang.String)>
<com.android.settingslib.media.BluetoothMediaManager: void onAclConnectionStateChanged(com.android.settingslib.bluetooth.CachedBluetoothDevice,int)>
<com.android.settingslib.wifi.AccessPointPreference: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.recents.views.TaskStackView: void onDetachedFromWindow()>
<com.android.systemui.pip.phone.PipManager: com.android.systemui.pip.phone.PipManager getInstance()>
<com.android.printservice.recommendation.util.Preconditions: float checkArgumentFinite(float,java.lang.String)>
<com.android.settingslib.bluetooth.A2dpProfile: int getProfileId()>
<com.android.server.locksettings.recoverablekeystore.RecoverableKeyStoreManager: java.lang.String generateKeyWithMetadata(java.lang.String,byte[])>
<com.android.server.SystemServiceManager: com.android.server.SystemService startService(java.lang.Class)>
<com.android.server.SensorNotificationService: void onStatusChanged(java.lang.String,int,android.os.Bundle)>
<com.android.systemui.recents.ScreenPinningRequest: void clearPrompt()>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.util.List retrieveNetworkLogs(android.content.ComponentName,java.lang.String,long)>
<android.widget.TextViewPrecomputedTextPerfTest: void testSetText_PrecomputedText()>
<com.android.server.audio.PlaybackActivityMonitor: void releasePlayer(int,int)>
<com.android.server.display.VirtualDisplayAdapter: void resizeVirtualDisplayLocked(android.os.IBinder,int,int,int)>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: void onAclConnectionStateChanged(com.android.settingslib.bluetooth.CachedBluetoothDevice,int)>
<com.android.packageinstaller.PackageInstallerActivity: void onBackPressed()>
<com.android.server.GestureLauncherService: boolean isCameraDoubleTapPowerSettingEnabled(android.content.Context,int)>
<com.android.fakeoemfeatures.FakeBackgroundService: android.os.IBinder onBind(android.content.Intent)>
<com.android.systemui.statusbar.ViewTransformationHelper: void reset()>
<android.net.netlink.StructNlAttr: java.net.InetAddress getValueAsInetAddress()>
<com.android.printspooler.model.PageContentRepository.RenderSpec: void <init>(int,int,android.print.PrintAttributes.MediaSize,android.print.PrintAttributes.Margins)>
<com.android.systemui.statusbar.phone.StatusBar: void setQsExpanded(boolean)>
<javax.microedition.khronos.opengles.GL10: void glFinish()>
<com.android.commands.sm.Sm: void run(java.lang.String[])>
<com.android.systemui.recents.model.RecentsTaskLoader: void setDefaultColors(int,int)>
<android.view.textclassifier.TextClassificationManagerPerfTest: void testGetTextClassifier_systemTextClassifierDisabled()>
<com.android.systemui.classifier.FalsingManagerImpl: void onLeftAffordanceHintStarted()>
<com.android.systemui.statusbar.StatusBarStateControllerImpl: void setDozeAmount(float,boolean)>
<com.android.systemui.util.InjectionInflationController.ViewInstanceCreator: com.android.keyguard.KeyguardClockSwitch createKeyguardClockSwitch()>
<com.android.settingslib.media.BluetoothMediaDevice: void disconnect()>
<com.android.systemui.qs.tileimpl.QSTileImpl: android.content.Intent getLongClickIntent()>
<com.android.systemui.volume.ZenModePanel: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.phone.StatusBar: void resetUserExpandedStates()>
<com.android.server.locksettings.PasswordSlotManager: void saveSlotMap(java.io.OutputStream)>
<com.android.server.notification.SystemConditionProviderService: void dump(java.io.PrintWriter,com.android.server.notification.NotificationManagerService.DumpFilter)>
<com.android.systemui.shared.recents.model.TaskKeyLruCache: void removeCacheEntry(int)>
<com.android.settingslib.bluetooth.HearingAidProfile: boolean accessProfileEnabled()>
<com.android.server.LocationManagerService: java.util.List getProviders(android.location.Criteria,boolean)>
<com.android.systemui.bubbles.BubbleData: void setExpanded(boolean)>
<com.android.systemui.statusbar.phone.BarTransitions: void transitionTo(int,boolean)>
<com.android.server.policy.WindowManagerPolicy.ScreenOffListener: void onScreenOff()>
<com.android.systemui.statusbar.KeyboardShortcutKeysLayout: com.android.systemui.statusbar.KeyboardShortcutKeysLayout.LayoutParams generateDefaultLayoutParams()>
<com.android.settingslib.applications.ApplicationsState: com.android.settingslib.applications.ApplicationsState.AppEntry getEntry(java.lang.String,int)>
<com.android.systemui.statusbar.StatusBarWifiView: int getVisibleState()>
<com.android.server.usb.descriptors.UsbASFormat: int[] getBitDepths()>
<com.android.systemui.statusbar.notification.row.NotificationContentView: int calculateVisibleType()>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationHeaderViewWrapper: void updateExpandability(boolean,android.view.View.OnClickListener)>
<com.android.server.pm.PackageManagerServiceCompilerMapping: java.lang.String getReasonName(int)>
<com.android.systemui.statusbar.phone.KeyguardBouncer: boolean isScrimmed()>
<com.android.systemui.statusbar.phone.HeadsUpAppearanceController: void updatePanelTranslation()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void flingSettings(float,int)>
<com.android.gallery3d.exif.ExifInterface: void deleteTag(int)>
<com.android.systemui.qs.external.TileServiceManager: void setShowingDialog(boolean)>
<com.android.settingslib.bluetooth.PbapClientProfile: boolean pbapClientExists()>
<com.android.systemui.qs.tiles.AirplaneModeTile: java.lang.CharSequence getTileLabel()>
<com.android.systemui.statusbar.AmbientPulseManager: void <init>(android.content.Context)>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.activity.LaunchNextTaskRequestEvent)>
<com.android.photos.views.BlockingGLTextureView: void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int)>
<com.android.systemui.tuner.RadioListPreference: void onPrepareDialogBuilder(android.app.AlertDialog.Builder,android.content.DialogInterface.OnClickListener)>
<android.media.MediaPlayer2: java.lang.Object setPlayerVolume(float)>
<com.android.systemui.statusbar.policy.ZenModeController.Callback: void onConsolidatedPolicyChanged(android.app.NotificationManager.Policy)>
<com.android.localtransport.LocalTransport: int sendBackupData(int)>
<android.net.netlink.NetlinkConstants: java.lang.String hexify(java.nio.ByteBuffer)>
<android.os.LooperStatsPerfTest: void timeOnePercentSampling()>
<com.android.providers.settings.SettingsHelper: java.lang.String onBackupValue(java.lang.String,java.lang.String)>
<android.text.TextPerfUtils: void resetRandom(long)>
<com.android.systemui.qs.tileimpl.QSTileImpl: int getColorForState(android.content.Context,int)>
<com.android.server.notification.NotificationRecord: int getAuthoritativeRank()>
<com.android.server.content.SyncStorageEngine.EndPoint: java.lang.String toString()>
<com.android.systemui.pip.phone.PipMediaController: void <init>(android.content.Context,android.app.IActivityManager)>
<com.android.server.pm.UserManagerService: android.content.pm.UserInfo createRestrictedProfile(java.lang.String,int)>
<com.android.uiautomator.core.UiScrollable: boolean scrollBackward()>
<com.android.systemui.recents.views.grid.TaskViewFocusFrame: void resize()>
<com.android.settingslib.widget.apppreference.AppPreference: void onBindViewHolder(androidx.preference.PreferenceViewHolder)>
<com.android.systemui.egg.MLand: void start(boolean)>
<com.android.systemui.statusbar.phone.DemoStatusIcons: void onRemoveIcon(com.android.systemui.statusbar.StatusIconDisplayable)>
<com.android.systemui.plugins.PluginInitializerImpl: void onPluginManagerInit()>
<android.net.shared.ProvisioningConfiguration.Builder: android.net.shared.ProvisioningConfiguration.Builder withPreDhcpAction(int)>
<javax.microedition.khronos.opengles.GL10: void glFogfv(int,java.nio.FloatBuffer)>
<com.android.server.NetworkManagementService: void setUidCleartextNetworkPolicy(int,int)>
<com.android.systemui.statusbar.CommandQueue: void toggleRecentApps()>
<com.android.server.slice.SliceShellCommand: void <init>(com.android.server.slice.SliceManagerService)>
<com.android.server.usb.descriptors.tree.UsbDescriptorsInterfaceNode: void report(com.android.server.usb.descriptors.report.ReportCanvas)>
<com.android.server.biometrics.fingerprint.FingerprintUtils: java.lang.CharSequence getUniqueName(android.content.Context,int)>
<com.android.systemui.qs.TouchAnimator.ListenerAdapter: void onAnimationAtEnd()>
<com.android.settingslib.fuelgauge.PowerWhitelistBackend: void <init>(android.content.Context)>
<com.android.server.notification.NotificationManagerService.NotificationAssistants: boolean isAdjustmentAllowed(java.lang.String)>
<com.android.systemui.qs.tiles.BluetoothTile.BluetoothDetailAdapter: void setToggleState(boolean)>
<com.android.server.timezone.ConfigHelper: int getCheckTimeAllowedMillis()>
<com.android.systemui.statusbar.phone.ScrimController: void updateScrims()>
<com.android.systemui.statusbar.notification.TextViewTransformState: void recycle()>
<com.android.server.policy.BurnInProtectionHelper: void cancelBurnInProtection()>
<com.android.systemui.qs.AutoSizingList: void setAdapter(android.widget.ListAdapter)>
<com.android.server.content.SyncStorageEngine: void init(android.content.Context,android.os.Looper)>
<com.android.systemui.statusbar.car.AssitantButton: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: boolean isInVisibleLocation(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.systemui.statusbar.policy.LocationController: boolean setLocationEnabled(boolean)>
<com.android.systemui.shared.recents.model.IconLoader: android.graphics.drawable.Drawable createDrawableFromBitmap(android.graphics.Bitmap,int,android.app.ActivityManager.TaskDescription)>
<android.net.NetworkMonitorManager: void <init>(android.net.INetworkMonitor,java.lang.String)>
<com.android.systemui.statusbar.policy.MobileSignalController: void handleBroadcast(android.content.Intent)>
<com.android.systemui.shared.recents.model.Task: void notifyTaskDataUnloaded(android.graphics.drawable.Drawable)>
<javax.obex.ServerOperation: java.io.OutputStream openOutputStream()>
<com.android.systemui.statusbar.phone.NavigationBarView: void onMeasure(int,int)>
<com.android.systemui.statusbar.phone.NavigationBarView: void updateNavButtonIcons()>
<com.android.server.media.MediaSessionRecord: boolean isTransportControlEnabled()>
<com.android.settingslib.bluetooth.MapClientProfile: java.util.List getConnectedDevices()>
<com.android.settingslib.accessibility.AccessibilityButtonHelper: boolean isRequestedByAccessibilityService(android.content.Context)>
<com.android.systemui.qs.tiles.BluetoothTile: void <init>(com.android.systemui.qs.QSHost,com.android.systemui.statusbar.policy.BluetoothController,com.android.systemui.plugins.ActivityStarter)>
<com.android.systemui.statusbar.notification.NotificationInterruptionStateProvider: boolean canAlertCommon(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.server.pm.dex.DexoptOptions: int getFlags()>
<com.android.systemui.bubbles.BubbleStackView: boolean isExpanded()>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcher: void show(boolean)>
<com.android.server.accessibility.AccessibilityManagerService.SecurityPolicy: void onTouchInteractionStart()>
<com.android.systemui.qs.TileLayout: void setListening(boolean)>
<android.os.ParcelPerfTest: void timeReadInt()>
<com.android.systemui.analytics.DataCollector: void onTrackingStopped()>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onTelephonyCapable(boolean)>
<com.android.systemui.statusbar.AlertingNotificationManager: boolean isAlerting(java.lang.String)>
<com.android.systemui.qs.QSTileHost: void collapsePanels()>
<com.android.systemui.statusbar.phone.LockIcon: void onAttachedToWindow()>
<com.android.systemui.classifier.brightline.BrightLineFalsingManager: boolean isFalseTouch()>
<com.android.server.testing.shadows.ShadowSlog: int w(java.lang.String,java.lang.String)>
<com.android.systemui.util.leak.TrackedObjects: boolean isTrackedObject(java.util.Collection)>
<com.android.server.notification.PreferencesHelper: boolean onPackagesChanged(boolean,int,java.lang.String[],int[])>
<com.android.commands.svc.UsbCommand: void run(java.lang.String[])>
<com.android.systemui.recents.OverviewProxyService: void onNavigationModeChanged(int)>
<com.android.server.timedetector.TimeDetectorStrategy.Callback: void setSystemClock(long)>
<com.android.systemui.qs.QSDetail: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.systemui.bubbles.BubbleExpandedView: void <init>(android.content.Context)>
<com.android.commands.sm.Sm: void runBenchmark()>
<com.android.systemui.RegionInterceptingFrameLayout: void onAttachedToWindow()>
<com.android.server.notification.NotificationManagerService: boolean canLaunchInActivityView(android.content.Context,android.app.PendingIntent,java.lang.String)>
<com.android.systemui.bubbles.BubbleStackView: void <init>(android.content.Context,com.android.systemui.bubbles.BubbleData,com.android.systemui.bubbles.BubbleStackView.SurfaceSynchronizer)>
<com.android.systemui.DependencyProvider: com.android.internal.statusbar.IStatusBarService provideIStatusBarService()>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: void onRemoteInputInserted()>
<com.android.server.pm.dex.DexoptOptions: boolean isDexoptOnlySharedDex()>
<com.android.systemui.glwallpaper.GLWallpaperRenderer: void finish()>
<com.android.server.input.InputManagerService: void onDisplayRemoved(int)>
<com.android.server.ConnectivityService: void setAvoidUnvalidated(android.net.Network)>
<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService.PackageFreezer freezePackageForDelete(java.lang.String,int,int,java.lang.String)>
<com.android.systemui.statusbar.phone.StatusBarIconList.Slot: void <init>(java.lang.String,com.android.systemui.statusbar.phone.StatusBarIconHolder)>
<com.android.systemui.classifier.Point: boolean equals(com.android.systemui.classifier.Point)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: float getBottomMostNotificationBottom()>
<com.android.server.devicepolicy.DevicePolicyManagerService: android.content.ComponentName getProfileOwner(int)>
<com.android.systemui.DessertCaseView: void place(android.view.View,boolean)>
<com.android.systemui.fragments.FragmentHostManager: void removeTagListener(java.lang.String,com.android.systemui.fragments.FragmentHostManager.FragmentListener)>
<com.android.settingslib.graph.SignalDrawable: void setTintList(android.content.res.ColorStateList)>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationMessagingTemplateViewWrapper: void <init>(android.content.Context,android.view.View,com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<com.android.systemui.statusbar.SmartReplyController: void setCallback(com.android.systemui.statusbar.SmartReplyController.Callback)>
<com.android.server.tv.TvRemoteProviderProxy.ProviderMethods: void closeInputBridge(com.android.server.tv.TvRemoteProviderProxy,android.os.IBinder)>
<com.android.server.UiModeManagerInternal: boolean isNightMode()>
<com.android.server.locksettings.recoverablekeystore.storage.CleanupManager: void verifyKnownUsers()>
<com.android.systemui.tuner.AutoScrollView: boolean onDragEvent(android.view.DragEvent)>
<android.media.MediaSession2Service.MediaNotification: int getNotificationId()>
<com.android.systemui.tuner.TunerActivity: void onDestroy()>
<com.android.server.policy.keyguard.KeyguardStateMonitor: boolean hasLockscreenWallpaper()>
<com.android.location.fused.FusedLocationService: android.os.IBinder onBind(android.content.Intent)>
<com.android.server.notification.ManagedServices: void unregisterService(android.os.IInterface,int)>
<com.android.settingslib.wifi.AccessPoint: java.lang.String convertToQuotedString(java.lang.String)>
<com.android.server.autofill.ui.SaveUi.OnSaveListener: void onCancel(android.content.IntentSender)>
<com.android.settingslib.bluetooth.LocalBluetoothProfileManager: com.android.settingslib.bluetooth.PbapClientProfile getPbapClientProfile()>
<com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem: boolean handleSystemAudioModeRequest(com.android.server.hdmi.HdmiCecMessage)>
<com.android.server.notification.ZenModeFiltering: void recordCall(com.android.server.notification.NotificationRecord)>
<com.android.systemui.ForegroundServiceLifetimeExtender: void setShouldManageLifetime(com.android.systemui.statusbar.notification.collection.NotificationEntry,boolean)>
<com.android.systemui.tuner.TunerFragment: void onActivityCreated(android.os.Bundle)>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: com.android.systemui.recents.views.TaskViewTransform getStackTransformScreenCoordinates(com.android.systemui.shared.recents.model.Task,float,com.android.systemui.recents.views.TaskViewTransform,com.android.systemui.recents.views.TaskViewTransform,android.graphics.Rect)>
<com.android.systemui.recents.views.RecentsView: void onBusEvent(com.android.systemui.recents.events.ui.dragndrop.DragStartEvent)>
<com.android.server.pm.permission.PermissionManagerServiceInternal: java.util.List getAllPermissionGroups(int,int)>
<com.android.keyguard.KeyguardUpdateMonitor: void sendKeyguardBouncerChanged(boolean)>
<com.android.settingslib.wifi.TestAccessPointBuilder: void <init>(android.content.Context)>
<com.android.server.MountServiceIdler: boolean onStopJob(android.app.job.JobParameters)>
<com.android.systemui.recents.events.EventBus: void send(com.android.systemui.recents.events.EventBus.Event)>
<com.android.server.pm.permission.PermissionManagerService: android.util.ArrayMap getBackgroundPermissions()>
<com.android.systemui.CarSystemUIFactory.ContextHolder: void <init>(android.content.Context)>
<com.android.server.testing.shadows.ShadowSlog: int v(java.lang.String,java.lang.String)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean setPermittedInputMethods(android.content.ComponentName,java.util.List)>
<com.android.printspooler.ui.SelectPrinterActivity: void onStop()>
<com.android.systemui.statusbar.NotificationRemoteInputManager.RemoteInputHistoryExtender: void setShouldManageLifetime(com.android.systemui.statusbar.notification.collection.NotificationEntry,boolean)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: boolean isRemoved()>
<com.android.server.display.BrightnessMappingStrategy: float inferAutoBrightnessAdjustment(float,float,float)>
<com.android.systemui.statusbar.policy.ZenModeControllerImpl: void <init>(android.content.Context,android.os.Handler)>
<com.android.systemui.shared.system.TaskStackChangeListeners: void onTaskProfileLocked(int,int)>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: com.android.systemui.statusbar.policy.DataSaverController getDataSaverController()>
<android.app.backup.ForwardingBackupAgent: void onDestroy()>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: void onDeviceDeleted(com.android.settingslib.bluetooth.CachedBluetoothDevice)>
<android.perftests.SystemPerfTest: void testBenchmarkOverhead()>
<com.android.systemui.qs.car.CarQSFragment.UserSwitchCallback: void hide()>
<com.android.server.notification.PreferencesHelper: void updateDefaultApps(int,android.util.ArraySet,android.util.ArraySet)>
<com.android.statsd.loadtest.BatteryDataRecorder: void onAlarm(android.content.Context)>
<com.android.server.testing.shadows.ShadowPerformUnifiedRestoreTask: android.content.pm.PackageInfo getPackage()>
<com.android.systemui.statusbar.phone.StatusBarIconList.Slot: void addHolder(com.android.systemui.statusbar.phone.StatusBarIconHolder)>
<com.android.systemui.statusbar.phone.ScrimController: void setWallpaperSupportsAmbientMode(boolean)>
<com.android.uiautomator.core.Configurator: com.android.uiautomator.core.Configurator setWaitForSelectorTimeout(long)>
<com.android.systemui.qs.tiles.CellularTile: void <init>(com.android.systemui.qs.QSHost,com.android.systemui.statusbar.policy.NetworkController,com.android.systemui.plugins.ActivityStarter)>
<com.android.systemui.recents.RecentsOnboarding: void hide(boolean)>
<com.android.server.devicepolicy.DevicePolicyManagerService: android.content.pm.ParceledListSlice retrieveSecurityLogs(android.content.ComponentName)>
<android.net.shared.ProvisioningConfiguration: boolean equals(java.lang.Object)>
<com.android.systemui.statusbar.notification.NotificationEntryManager: void performRemoveNotification(android.service.notification.StatusBarNotification,int)>
<com.android.settingslib.deviceinfo.PrivateStorageInfo: void <init>(long,long)>
<com.android.server.tv.TvInputHal.Callback: void onFirstFrameCaptured(int,int)>
<com.google.android.startop.iorap.ActivityHintEvent: java.lang.String toString()>
<android.perftests.utils.PerfManualStatusReporter: android.perftests.utils.ManualBenchmarkState getBenchmarkState()>
<com.android.smspush.WapPushManager: android.os.IBinder onBind(android.content.Intent)>
<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.BiometricUtils getBiometricUtils()>
<com.android.server.usb.descriptors.UsbACSelectorUnit: void <init>(int,byte,byte,int)>
<com.android.systemui.power.PowerNotificationWarnings: boolean isInvalidChargerWarningShowing()>
<com.android.settingslib.graph.BluetoothDeviceLayerDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>
<com.android.systemui.statusbar.phone.NotificationPanelView.PanelExpansionListener: void onPanelExpansionChanged(float,boolean)>
<com.android.packageinstaller.wear.InstallTask: void execute()>
<com.android.server.notification.PreferencesHelper: boolean canShowBadge(java.lang.String,int)>
<com.android.systemui.statusbar.phone.AutoHideController: void <init>(android.content.Context,android.os.Handler)>
<com.android.systemui.qs.external.TileServices: com.android.systemui.qs.external.TileServiceManager getTileWrapper(com.android.systemui.qs.external.CustomTile)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void enableSystemApp(android.content.ComponentName,java.lang.String,java.lang.String)>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.activity.PackagesChangedEvent)>
<com.android.server.ExtconUEventObserver.ExtconInfo: java.lang.String getDevicePath()>
<com.android.systemui.tuner.TunerSwitch: void onTuningChanged(java.lang.String,java.lang.String)>
<com.android.settingslib.media.MediaDevice: boolean connect()>
<com.android.systemui.statusbar.phone.NotificationIconContainer: void setActualLayoutWidth(int)>
<com.android.settingslib.wifi.WifiTracker.WifiListener: void onConnectedChanged()>
<com.android.server.pm.ShortcutService: java.io.File getDumpPath()>
<com.android.printservice.recommendation.util.MDNSUtils: boolean isSupportedServiceType(android.net.nsd.NsdServiceInfo,java.util.Set)>
<com.android.systemui.statusbar.car.CarBatteryController: void onReceive(android.content.Context,android.content.Intent)>
<com.android.systemui.bubbles.BubbleController: int getBubbleStiffness(android.content.Context,int)>
<com.android.server.uri.NeededUriGrants: void <init>(java.lang.String,int,int)>
<com.android.powermodel.ParseException: void <init>(int,java.lang.String)>
<com.android.systemui.statusbar.policy.ScrollAdapter: boolean isScrolledToTop()>
<com.android.systemui.usb.UsbConfirmActivity: void onClick(android.content.DialogInterface,int)>
<com.android.server.pm.permission.BasePermission: boolean isRuntime()>
<com.android.settingslib.AppItem: void <init>(android.os.Parcel)>
<com.android.systemui.statusbar.notification.row.StackScrollerDecorView: android.view.View findContentView()>
<com.android.systemui.classifier.FalsingManagerProxy: void setupFalsingManager(android.content.Context)>
<com.android.systemui.recents.misc.FreePathInterpolator: float getX(float)>
<com.android.server.policy.WindowManagerPolicy: void writeToProto(android.util.proto.ProtoOutputStream,long)>
<com.android.server.MasterClearReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.android.systemui.SwipeHelper: boolean swipedFarEnough()>
<com.android.keyguard.PasswordTextView: void append(char)>
<com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer: int getIntrinsicHeight()>
<com.android.server.policy.LogDecelerateInterpolator: float getInterpolation(float)>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage: void put(int,android.security.keystore.recovery.KeyChainSnapshot)>
<com.android.systemui.shared.recents.model.Task.TaskKey: void <init>(int,int,android.content.Intent,android.content.ComponentName,int,long,int)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void verifyUnlock(com.android.server.policy.WindowManagerPolicy.OnKeyguardExitResult)>
<com.android.server.attention.AttentionManagerService: void onStart()>
<com.android.server.contentcapture.ContentCaptureManagerInternal: boolean isContentCaptureServiceForUser(int,int)>
<com.android.server.tv.UinputBridge: void sendPointerDown(android.os.IBinder,int,int,int)>
<com.android.systemui.statusbar.phone.StatusBarWindowController: boolean getBubbleExpanded()>
<com.android.systemui.qs.external.TileServices: android.service.quicksettings.Tile getTile(android.os.IBinder)>
<android.net.ip.IIpClientCallbacks: void onProvisioningSuccess(android.net.LinkProperties)>
<com.android.systemui.statusbar.phone.ObservableScrollView.Listener: void onOverscrolled(float,float,int)>
<com.android.systemui.qs.GlobalSetting: void handleValueChanged(int)>
<com.android.systemui.qs.QSPanel: void handleShowDetail(com.android.systemui.qs.QSPanel.Record,boolean)>
<com.android.settingslib.bluetooth.BluetoothUtils: android.graphics.drawable.Drawable getBluetoothDrawable(android.content.Context,int)>
<com.android.settingslib.net.NetworkCycleDataForUid.Builder: com.android.settingslib.net.NetworkCycleDataForUid.Builder setBackgroundUsage(long)>
<com.android.systemui.statusbar.RemoteInputController: void remoteInputSent(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.systemui.statusbar.phone.DozeParameters: int getPulseVisibleDuration()>
<com.android.systemui.pip.tv.PipManager: void initialize(android.content.Context)>
<android.net.util.InterfaceParams: void <init>(java.lang.String,int,android.net.MacAddress)>
<com.android.photos.views.TiledImageView: void onResume()>
<com.android.server.pm.DumpState: void setDump(int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.server.usb.descriptors.report.ReportCanvas: void openList()>
<com.android.systemui.qs.tileimpl.QSTileImpl.ResourceIcon: com.android.systemui.plugins.qs.QSTile.Icon get(int)>
<com.android.systemui.statusbar.StatusBarIconView: void onDarkChanged(android.graphics.Rect,float,int)>
<com.android.systemui.classifier.brightline.BrightLineFalsingManager: void onNotificatonStartDraggingDown()>
<com.android.server.notification.ManagedServices: boolean isValidEntry(java.lang.String,int)>
<com.android.settingslib.media.PhoneMediaDevice: java.lang.String getSummary()>
<com.android.systemui.media.MediaProjectionPermissionActivity: void onDestroy()>
<android.net.shared.ProvisioningConfiguration.Builder: android.net.shared.ProvisioningConfiguration.Builder withInitialConfiguration(android.net.shared.InitialConfiguration)>
<com.android.server.biometrics.BiometricServiceBase.AuthenticationClientImpl: int handleFailedAttempt()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setUserRestriction(android.content.ComponentName,java.lang.String,boolean)>
<com.android.keyguard.KeyguardMessageArea: com.android.keyguard.KeyguardMessageArea findSecurityMessageDisplay(android.view.View)>
<com.android.server.twilight.TwilightService: void onProviderEnabled(java.lang.String)>
<com.android.settingslib.core.AbstractPreferenceController: void refreshSummary(androidx.preference.Preference)>
<com.android.systemui.ForegroundServiceController: boolean isSystemAlertNotification(android.service.notification.StatusBarNotification)>
<com.android.server.pm.OtaDexoptService: java.lang.String nextDexoptCommand()>
<android.media.Session2CommandGroup: int describeContents()>
<com.android.systemui.GuestResumeSessionReceiver: void register(android.content.Context)>
<com.android.keyguard.KeyguardSecurityView: java.lang.CharSequence getTitle()>
<com.android.server.biometrics.ClientMonitor: void finalize()>
<com.android.systemui.classifier.FalsingManagerProxy: boolean isFalseTouch()>
<com.android.systemui.statusbar.phone.StatusBarIconController.IconManager: void onIconExternal(int,int)>
<com.android.systemui.qs.SlashDrawable: void setDrawable(android.graphics.drawable.Drawable)>
<com.android.systemui.classifier.brightline.BrightLineFalsingManager: void onBouncerHidden()>
<javax.microedition.khronos.egl.EGL10: boolean eglDestroySurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface)>
<javax.obex.HeaderSet: void createAuthenticationChallenge(java.lang.String,boolean,boolean)>
<com.android.settingslib.bluetooth.LocalBluetoothManager: void setForegroundActivity(android.content.Context)>
<com.android.systemui.classifier.FalsingManagerImpl: boolean isClassiferEnabled()>
<com.android.systemui.statusbar.phone.PanelBar: void onPanelPeeked()>
<com.android.server.role.RoleUserState: void <init>(int,com.android.server.role.RoleUserState.Callback)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setExpansionLogger(com.android.systemui.statusbar.notification.row.ExpandableNotificationRow.ExpansionLogger,java.lang.String)>
<javax.microedition.khronos.opengles.GL10: void glFogf(int,float)>
<com.android.settingslib.widget.FooterPreferenceMixin: void setPreferenceScreen(androidx.preference.PreferenceScreen)>
<android.processor.view.inspector.InspectableClassModel.IntFlagEntry: int getTarget()>
<com.android.systemui.statusbar.notification.stack.SectionHeaderView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.appbinding.finders.CarrierMessagingClientServiceFinder: java.lang.String getTargetPackage(int)>
<com.android.server.pm.permission.PermissionManagerServiceInternal: void updateAllPermissions(java.lang.String,boolean,java.util.Collection,com.android.server.pm.permission.PermissionManagerServiceInternal.PermissionCallback)>
<com.android.systemui.glwallpaper.ImageWallpaperRenderer: void updateOffsets(float,float)>
<com.android.preload.actions.ExportAction: void run()>
<com.android.server.notification.NotificationRecord: boolean canBubble()>
<com.android.systemui.statusbar.phone.StatusBarWindowView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.settingslib.inputmethod.InputMethodAndSubtypeUtil: java.lang.String getSubtypeLocaleNameListAsSentence(java.util.List,android.content.Context,android.view.inputmethod.InputMethodInfo)>
<com.android.systemui.statusbar.KeyguardAffordanceView: void setCircleRadius(float,boolean)>
<com.android.systemui.statusbar.phone.ButtonDispatcher: void setOnHoverListener(android.view.View.OnHoverListener)>
<com.android.packageinstaller.PackageInstallerActivity: void onResume()>
<com.android.systemui.statusbar.phone.DemoStatusIcons: void remove()>
<com.android.systemui.statusbar.FlingAnimationUtils: void <init>(android.content.Context,float)>
<com.android.server.infra.AbstractPerUserSystemService: java.lang.String getComponentNameLocked()>
<com.android.systemui.shared.system.ActivityManagerWrapper: java.lang.String getBadgedContentDescription(android.content.pm.ActivityInfo,int,android.app.ActivityManager.TaskDescription)>
<com.android.systemui.statusbar.AnimatedImageView: boolean hasOverlappingRendering()>
<com.android.systemui.statusbar.phone.DarkIconDispatcherImpl: void removeDarkReceiver(com.android.systemui.plugins.DarkIconDispatcher.DarkReceiver)>
<com.android.server.audio.AudioService: void adjustSuggestedStreamVolume(int,int,int,java.lang.String,java.lang.String)>
<com.android.server.IpSecService: void closeUdpEncapsulationSocket(int)>
<com.android.systemui.usb.UsbDebuggingActivity: void onStop()>
<com.android.systemui.qs.QSCarrier: void setCarrierText(java.lang.CharSequence)>
<com.android.systemui.util.AsyncSensorManager: void onPluginDisconnected(com.android.systemui.plugins.SensorManagerPlugin)>
<com.android.server.infra.FrameworkResourcesServiceNameResolver: boolean isTemporary(int)>
<com.android.systemui.qs.tileimpl.QSTileImpl.DrawableIcon: android.graphics.drawable.Drawable getInvisibleDrawable(android.content.Context)>
<com.android.server.testing.shadows.ShadowBackupDataInput: java.lang.String getKey()>
<com.android.systemui.statusbar.policy.FlashlightController.FlashlightListener: void onFlashlightAvailabilityChanged(boolean)>
<com.android.uiautomator.core.UiDevice: boolean pressKeyCode(int,int)>
<javax.obex.ServerRequestHandler: int onGet(javax.obex.Operation)>
<com.android.gallery3d.glrenderer.GLCanvas: int uploadBuffer(java.nio.FloatBuffer)>
<com.android.systemui.glwallpaper.ImageRevealHelper.RevealStateListener: void onRevealStateChanged()>
<com.android.systemui.bubbles.animation.PhysicsAnimationLayout.PhysicsPropertyAnimator: com.android.systemui.bubbles.animation.PhysicsAnimationLayout.PhysicsPropertyAnimator withDampingRatio(float)>
<com.android.server.location.GnssGeofenceProviderTest: void pauseGeofence_restart_paused()>
<com.android.systemui.qs.external.TileColorPicker: com.android.systemui.qs.external.TileColorPicker getInstance(android.content.Context)>
<com.android.nfc_extras.NfcExecutionEnvironment: byte[] transceive(byte[])>
<com.android.systemui.pip.phone.PipMenuActivityController.Listener: void onPipShowMenu()>
<com.android.systemui.statusbar.phone.NotificationIconAreaController: void setDark(boolean)>
<com.android.printspooler.model.PageContentRepository: void startPreload(android.print.PageRange,android.print.PageRange[],android.print.PageRange[])>
<com.android.systemui.statusbar.notification.NotificationEntryManager: void removeNotification(java.lang.String,android.service.notification.NotificationListenerService.RankingMap,int)>
<com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem: void routeToTvInputFromPortId(int)>
<com.android.systemui.plugins.statusbar.StatusBarStateController: void removeCallback(com.android.systemui.plugins.statusbar.StatusBarStateController.StateListener)>
<com.android.server.hdmi.SelectRequestBuffer: com.android.server.hdmi.SelectRequestBuffer.DeviceSelectRequest newDeviceSelect(com.android.server.hdmi.HdmiControlService,int,android.hardware.hdmi.IHdmiControlCallback)>
<com.android.server.usb.descriptors.UsbHIDDescriptor: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>
<com.android.server.policy.WindowManagerPolicy.WindowManagerFuncs: void switchKeyboardLayout(int,int)>
<com.android.systemui.recents.views.TaskStackView: void onReturnViewToPool(com.android.systemui.recents.views.TaskView)>
<com.android.systemui.assist.ui.InvocationLightsView: void setColors(int,int,int,int)>
<com.android.systemui.statusbar.notification.InstantAppNotifier: void appTransitionStarting(int,long,long,boolean)>
<com.android.photos.DumbBitmapRegionDecoder: int getWidth()>
<com.android.server.usb.descriptors.UsbDeviceDescriptor: int getDeviceRelease()>
<com.android.server.usb.descriptors.UsbDescriptor: void setStatus(int)>
<com.android.server.pm.UserManagerService.LifeCycle: void <init>(android.content.Context)>
<com.android.systemui.shared.system.InputConsumerController: void setRegistrationListener(com.android.systemui.shared.system.InputConsumerController.RegistrationListener)>
<com.android.server.IntentResolver: boolean filterEquals(android.content.IntentFilter,android.content.IntentFilter)>
<com.android.systemui.classifier.brightline.TimeLimitedMotionEventBuffer: java.util.ListIterator listIterator(int)>
<com.android.photos.BitmapRegionTileSource.UriBitmapSource: boolean readExif(com.android.gallery3d.exif.ExifInterface)>
<com.android.systemui.statusbar.phone.StatusBar: void setSystemUiVisibility(int,int,int,int,int,android.graphics.Rect,android.graphics.Rect,boolean)>
<com.android.server.pm.Settings: com.android.server.pm.Settings.VersionInfo findOrCreateVersion(java.lang.String)>
<com.android.server.appwidget.AppWidgetService: void <init>(android.content.Context)>
<com.android.server.pm.InstructionSets: java.lang.String[] getAllDexCodeInstructionSets()>
<com.android.settingslib.deviceinfo.AbstractSimStatusImeiInfoPreferenceController: void <init>(android.content.Context)>
<com.android.server.pm.PackageInstallerSession: void markUpdated()>
<com.android.systemui.doze.DozeSuspendScreenStatePreventingAdapter: void setDozeScreenState(int)>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: android.view.View getMenuView()>
<com.android.keyguard.KeyguardSecurityViewFlipper: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>
<com.android.server.pm.dex.DexoptOptions: boolean isDexoptAsSharedLibrary()>
<com.android.systemui.recents.LegacyRecentsImpl: com.android.systemui.recents.misc.SystemServicesProxy getSystemServices()>
<com.android.systemui.plugins.FalsingManager: void onScreenTurningOn()>
<com.android.server.devicepolicy.DevicePolicyManagerService: int startUserInBackground(android.content.ComponentName,android.os.UserHandle)>
<com.android.systemui.bubbles.BubbleController: int getExpandedDisplayId(android.content.Context)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: com.android.systemui.statusbar.notification.row.NotificationContentInflater getNotificationInflater()>
<com.android.server.notification.NotificationUsageStats.SingleNotificationStats: long getCurrentAirtimeMs()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void requestScrollerTopPaddingUpdate(boolean)>
<com.android.server.usb.descriptors.report.UsbStrings: java.lang.String getClassName(int)>
<com.android.systemui.statusbar.phone.StatusBar: void setWindowState(int,int,int)>
<com.android.keyguard.KeyguardUpdateMonitor: void reportEmergencyCallAction(boolean)>
<com.android.systemui.recents.views.RecentsView: boolean launchPreviousTask()>
<com.android.server.policy.keyguard.KeyguardStateMonitor: boolean isSecure(int)>
<com.android.systemui.qs.GlobalSetting: int getValue()>
<com.android.shell.BugreportWarningActivity: void onClick(android.content.DialogInterface,int)>
<com.android.systemui.HardwareUiLayout: void setCollapse()>
<com.android.gallery3d.glrenderer.GLES20Canvas: void clearBuffer()>
<com.android.keyguard.KeyguardSecurityContainer: void setLockPatternUtils(com.android.internal.widget.LockPatternUtils)>
<com.android.systemui.statusbar.policy.LocationControllerImpl: boolean isLocationActive()>
<com.android.server.NetworkManagementService: java.lang.String[] getDnsForwarders()>
<com.android.server.policy.WakeGestureListener: void requestWakeUpTrigger()>
<com.android.systemui.statusbar.car.CarStatusBar: void onStateChanged(int)>
<com.android.settingslib.net.NetworkCycleDataForUidLoader.Builder: void <init>(android.content.Context)>
<com.android.systemui.statusbar.notification.row.HybridNotificationView: void transformFrom(com.android.systemui.statusbar.TransformableView,float)>
<com.android.systemui.qs.customize.TileAdapter: void resetTileSpecs(com.android.systemui.qs.QSTileHost,java.util.List)>
<com.android.server.biometrics.BiometricServiceBase.ServiceListener: void onAuthenticationSucceeded(long,android.hardware.biometrics.BiometricAuthenticator.Identifier,int)>
<com.android.systemui.qs.tiles.WorkModeTile: com.android.systemui.plugins.qs.QSTile.BooleanState newTileState()>
<com.android.bluetoothmidiservice.BluetoothPacketEncoder: void <init>(com.android.bluetoothmidiservice.PacketEncoder.PacketReceiver,int)>
<com.android.systemui.statusbar.policy.Clock: void useWallpaperTextColor(boolean)>
<com.android.server.ConnectivityService: int registerNetworkFactory(android.os.Messenger,java.lang.String)>
<com.android.systemui.doze.DozeHost: void setDozeScreenBrightness(int)>
<com.android.settingslib.drawer.DashboardCategory: java.util.List getTiles()>
<com.android.server.print.RemotePrintService.PrintServiceCallbacks: void onPrintersRemoved(java.util.List)>
<com.android.systemui.SystemUIService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.net.ip.IIpClientCallbacks: void onPostDhcpAction()>
<com.android.systemui.statusbar.CommandQueue: void remQsTile(android.content.ComponentName)>
<com.android.settingslib.deviceinfo.AbstractImsStatusPreferenceController: boolean isAvailable()>
<com.android.systemui.recents.views.TaskViewHeader: void onLayout(boolean,int,int,int,int)>
<com.android.server.pm.permission.BasePermission: boolean isRemoved()>
<com.android.server.ExtconStateObserver: void updateState(com.android.server.ExtconUEventObserver.ExtconInfo,java.lang.String,java.lang.Object)>
<com.android.keyguard.KeyguardPinBasedInputView: void resetState()>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void setHeadsUp(boolean)>
<com.android.systemui.shared.recents.view.RecentsTransition: android.app.ActivityOptions createAspectScaleAnimation(android.content.Context,android.os.Handler,boolean,com.android.systemui.shared.recents.view.AppTransitionAnimationSpecsFuture,java.lang.Runnable)>
<com.android.server.trust.TrustAgentWrapper: void onDeviceUnlocked()>
<com.android.systemui.power.PowerNotificationWarnings: void showInvalidChargerWarning()>
<com.android.systemui.statusbar.notification.NotificationEntryListener: void onPreEntryUpdated(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.preload.DeviceUtils: boolean overwritePreloaded(com.android.ddmlib.IDevice,java.io.File,long)>
<com.android.systemui.recents.views.RecentsView: void onReload(com.android.systemui.recents.model.TaskStack,boolean)>
<com.android.systemui.qs.tiles.RotationLockTile: void handleUpdateState(com.android.systemui.plugins.qs.QSTile.BooleanState,java.lang.Object)>
<com.android.systemui.statusbar.phone.StatusBar: boolean isFalsingThresholdNeeded()>
<com.android.systemui.biometrics.FingerprintDialogView: android.graphics.drawable.Drawable getAnimationForTransition(int,int)>
<com.android.externalstorage.ExternalStorageProvider: boolean onCreate()>
<com.android.settingslib.media.MediaManager: void unregisterCallback(com.android.settingslib.media.MediaManager.MediaDeviceCallback)>
<com.android.systemui.qs.GlobalSetting: void <init>(android.content.Context,android.os.Handler,java.lang.String)>
<com.android.server.IpSecService: android.net.IpSecTransformResponse createTransform(android.net.IpSecConfig,android.os.IBinder,java.lang.String)>
<com.android.server.pm.PackageInstallerSession: void setClientProgress(float)>
<com.android.systemui.recents.views.DockState: void update(android.content.Context)>
<com.android.server.location.GnssNavigationMessageProviderTest: void unregister_resume_notStarted()>
<com.android.server.location.LocationProviderProxy: long getStatusUpdateTime()>
<com.android.systemui.statusbar.GestureRecorder: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.statsd.loadtest.LoadtestActivity: void onCreate(android.os.Bundle)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getLockTaskFeatures(android.content.ComponentName)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getMaximumFailedPasswordsForWipe(android.content.ComponentName,int,boolean)>
<android.net.dhcp.DhcpServingParamsParcelExt: android.net.dhcp.DhcpServingParamsParcelExt setLinkMtu(int)>
<com.android.settingslib.media.InfoMediaDevice: java.lang.String getSummary()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void reportFailedBiometricAttempt(int)>
<com.android.systemui.ExpandHelper: void setGravity(int)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: void setRowPinned(boolean)>
<com.android.systemui.shared.recents.model.TaskKeyCache: void evictAllCache()>
<com.android.server.pm.UserManagerService: long getUserStartRealtime()>
<com.android.settingslib.applications.StorageStatsSource.AppStorageStats: long getDataBytes()>
<com.android.settingslib.wifi.AccessPoint: android.net.wifi.WifiConfiguration getConfig()>
<com.android.server.audio.AudioService: void releaseRecorder(int)>
<com.android.server.TelephonyRegistry: void notifyCallState(int,java.lang.String)>
<com.android.systemui.tuner.ClockPreference: void onDetached()>
<com.android.systemui.statusbar.phone.NotificationPanelView: float getCurrentPanelAlpha()>
<com.android.photos.SimpleBitmapRegionDecoderWrapper: com.android.photos.SimpleBitmapRegionDecoderWrapper newInstance(java.lang.String,boolean)>
<com.android.systemui.volume.VolumeDialogControllerImpl: boolean hasVibrator()>
<com.android.keyguard.KeyguardSecurityContainer: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.policy.WindowManagerPolicy.WindowState: boolean isVoiceInteraction()>
<com.android.keyguard.KeyguardUpdateMonitor: void registerCallback(com.android.keyguard.KeyguardUpdateMonitorCallback)>
<com.android.server.tv.TvInputManagerService: void <init>(android.content.Context)>
<com.android.systemui.recents.views.TaskView: void setDimAlpha(float)>
<com.android.fakeoemfeatures.FakeApp: void onCreate()>
<com.android.server.pm.PackageSender: void sendPackageBroadcast(java.lang.String,java.lang.String,android.os.Bundle,int,java.lang.String,android.content.IIntentReceiver,int[],int[])>
<com.android.systemui.Dependency: java.lang.Object createDependency(java.lang.Object)>
<com.android.systemui.statusbar.notification.row.ExpandableView: int getPinnedHeadsUpHeight()>
<com.android.server.NewNetworkTimeUpdateService: void <init>(android.content.Context)>
<com.android.server.inputmethod.InputMethodManagerService: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>
<com.android.hotspot2.osu.OsuLoginActivity: void onDestroy()>
<com.android.server.appprediction.RemoteAppPredictionService: void sortAppTargets(android.app.prediction.AppPredictionSessionId,android.content.pm.ParceledListSlice,android.app.prediction.IPredictionCallback)>
<com.android.server.pm.ModuleInfoProvider: void systemReady()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setHideSensitive(boolean,boolean,long,long)>
<com.android.settingslib.license.LicenseHtmlLoaderCompat: void onDiscardResult(java.io.File)>
<com.android.systemui.statusbar.phone.DozeParameters: boolean getDozeSuspendDisplayStateSupported()>
<com.android.systemui.tuner.TunerServiceImpl: java.lang.String getValue(java.lang.String)>
<com.android.systemui.statusbar.KeyguardAffordanceView: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.analytics.DataCollector: void onQsDown()>
<com.android.server.infra.AbstractMasterSystemService.Visitor: void visit(java.lang.Object)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout.OnOverscrollTopChangedListener: void flingTopOverscroll(float,boolean)>
<com.android.settingslib.core.AbstractPreferenceController: void displayPreference(androidx.preference.PreferenceScreen)>
<com.android.server.IpSecService: android.net.IpSecTunnelInterfaceResponse createTunnelInterface(java.lang.String,java.lang.String,android.net.Network,android.os.IBinder,java.lang.String)>
<com.android.server.location.GeofenceManager: void onSendFinished(android.app.PendingIntent,android.content.Intent,int,java.lang.String,android.os.Bundle)>
<com.android.server.pm.dex.DexManager: boolean auditUncompressedDexInApk(java.lang.String)>
<com.android.systemui.classifier.SpeedClassifier: void <init>(com.android.systemui.classifier.ClassifierData)>
<com.android.keyguard.KeyguardUpdateMonitor: void onTrustManagedChanged(boolean,int)>
<com.android.server.pm.PreferredComponent: void writeToXml(org.xmlpull.v1.XmlSerializer,boolean)>
<com.android.systemui.bubbles.animation.ExpandedAnimationController: void <init>(android.graphics.Point,int)>
<com.android.systemui.statusbar.phone.KeyguardPreviewContainer: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)>
<com.android.server.audio.AudioService: void setBluetoothA2dpDeviceConnectionStateSuppressNoisyIntent(android.bluetooth.BluetoothDevice,int,int,boolean,int)>
<com.android.systemui.statusbar.phone.StatusBar: void startActivityDismissingKeyguard(android.content.Intent,boolean,boolean,boolean,android.os.Handler.Callback,int)>
<com.android.server.NetworkScorerAppManager: void updateState()>
<com.android.systemui.egg.MLand: float rlerp(float,float,float)>
<com.android.server.notification.NotificationManagerService.NotificationAssistants: void resetDefaultAssistantsIfNecessary()>
<com.android.systemui.statusbar.hvac.AnimatedTemperatureView: void setDisplayInFahrenheit(boolean)>
<com.android.server.locksettings.SyntheticPasswordCrypto: void destroyBlobKey(java.lang.String)>
<com.android.systemui.statusbar.policy.RotationLockControllerImpl: int getRotationLockOrientation()>
<com.android.settingslib.development.AbstractLogdSizePreferenceController: java.lang.String getPreferenceKey()>
<com.android.gallery3d.exif.ExifInterface: boolean isThumbnailCompressed()>
<com.android.systemui.statusbar.notification.row.NotificationGuts: void setClosedListener(com.android.systemui.statusbar.notification.row.NotificationGuts.OnGutsClosedListener)>
<com.android.systemui.statusbar.car.ConnectedDeviceSignalController: void onReceive(android.content.Context,android.content.Intent)>
<android.perftests.utils.Stats: long getMin()>
<com.android.systemui.statusbar.phone.SystemUIDialog: void setNegativeButton(int,android.content.DialogInterface.OnClickListener)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: boolean isInputRestricted()>
<com.android.systemui.qs.tiles.WifiTile.WifiDetailAdapter: android.view.View createDetailView(android.content.Context,android.view.View,android.view.ViewGroup)>
<com.android.settingslib.applications.InterestingConfigChanges: void <init>(int)>
<javax.obex.Operation: void close()>
<com.android.systemui.statusbar.notification.VisualStabilityManager: void setPulsing(boolean)>
<com.android.systemui.SwipeHelper: void setDensityScale(float)>
<com.android.settingslib.drawable.UserIconDrawable: void setFramePadding(float)>
<com.android.server.devicepolicy.DevicePolicyManagerService: long getLastBugReportRequestTime()>
<android.text.TextViewSetTextMeasurePerfTest: void timeCreate()>
<com.android.systemui.statusbar.notification.stack.StackStateAnimator: void setHeadsUpAppearHeightBottom(int)>
<com.android.systemui.statusbar.phone.SystemUIDialog: void <init>(android.content.Context)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void removeContainerView(android.view.View)>
<com.android.server.notification.ManagedServices: void onUserSwitched(int)>
<com.android.systemui.statusbar.notification.row.NotificationBackgroundView: void setState(int[])>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void doKeyguardTimeout(android.os.Bundle)>
<com.android.systemui.power.EnhancedEstimatesImpl: long getLowWarningThreshold()>
<com.android.media.remotedisplay.RemoteDisplayProvider: android.os.IBinder getBinder()>
<com.android.systemui.statusbar.phone.NavigationBarView: android.util.SparseArray getButtonDispatchers()>
<com.android.statementservice.retriever.AbstractAssetMatcher: int getMatchedLookupKey()>
<com.android.server.usb.UsbService: android.os.ParcelFileDescriptor openDevice(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.phone.NavigationPrototypeController.OnPrototypeChangedListener: void onAssistantGestureEnabled(boolean)>
<com.android.server.timedetector.TimeDetectorService.Lifecycle: void <init>(android.content.Context)>
<com.android.server.location.LocationRequestStatistics.PackageProviderKey: void <init>(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationViewWrapper: com.android.systemui.statusbar.notification.row.wrapper.NotificationViewWrapper wrap(android.content.Context,android.view.View,com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<com.android.systemui.statusbar.GestureRecorder.Gesture: void add(android.view.MotionEvent)>
<com.android.systemui.settings.ToggleSliderView: void setMirror(com.android.systemui.settings.ToggleSliderView)>
<com.android.systemui.qs.PagedTileLayout.PageListener: void onPageChanged(boolean)>
<com.android.commands.uiautomator.EventsCommand: void run(java.lang.String[])>
<com.android.systemui.statusbar.phone.ShadeController: boolean collapsePanel()>
<com.android.systemui.ExpandHelper: void onlyObserveMovements(boolean)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setEmptyShadeView(com.android.systemui.statusbar.EmptyShadeView)>
<com.android.systemui.statusbar.KeyboardShortcutKeysLayout: com.android.systemui.statusbar.KeyboardShortcutKeysLayout.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>
<com.android.printspooler.widget.ClickInterceptSpinner: boolean performClick()>
<com.android.systemui.plugins.statusbar.StatusBarStateController: boolean isDozing()>
<com.android.server.audio.AudioService: int removeUidDeviceAffinity(android.media.audiopolicy.IAudioPolicyCallback,int)>
<android.net.netlink.StructNdMsg: java.lang.String stringForNudState(short)>
<com.android.server.content.SyncStorageEngine: void markPending(com.android.server.content.SyncStorageEngine.EndPoint,boolean)>
<com.android.systemui.statusbar.GestureRecorder: void tag(long,java.lang.String)>
<com.android.systemui.statusbar.FlingAnimationUtils: void apply(android.animation.Animator,float,float,float,float)>
<com.android.server.notification.BubbleExtractor: void initialize(android.content.Context,com.android.server.notification.NotificationUsageStats)>
<com.android.gallery3d.common.Utils: long clamp(long,long,long)>
<com.android.systemui.statusbar.phone.LightBarTransitionsController: void onDozeAmountChanged(float,float)>
<com.android.systemui.shared.system.InputConsumerController: com.android.systemui.shared.system.InputConsumerController getPipInputConsumer()>
<android.net.ipmemorystore.SameL3NetworkResponse: int getNetworkSameness()>
<javax.microedition.khronos.opengles.GL10: void glActiveTexture(int)>
<com.android.server.content.ContentService: boolean getMasterSyncAutomatically()>
<com.android.systemui.assist.AssistHandleBehaviorController: void showAndGoDelayed(long,boolean)>
<com.android.server.content.SyncOperation: java.lang.String toString()>
<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin.OnMenuEventListener: void onMenuShown(android.view.View)>
<com.android.settingslib.bluetooth.PanProfile: int getNameResource(android.bluetooth.BluetoothDevice)>
<com.android.server.SystemServiceManager: java.io.File ensureSystemDir()>
<android.net.ip.IpClientUtil: void makeIpClient(android.content.Context,java.lang.String,android.net.ip.IpClientCallbacks)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void appTransitionPending(int,boolean)>
<com.android.server.biometrics.LoggableMonitor: void logOnError(android.content.Context,int,int,int)>
<com.android.systemui.recents.misc.SystemServicesProxy: boolean isRecentsActivityVisible(android.util.MutableBoolean)>
<com.android.systemui.SystemUI: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.settingslib.development.AbstractLogdSizePreferenceController: boolean onPreferenceChange(androidx.preference.Preference,java.lang.Object)>
<com.android.systemui.plugins.PluginEnablerImpl: boolean isEnabled(android.content.ComponentName)>
<com.android.systemui.recents.views.TaskView: void onTaskWindowingModeChanged()>
<com.android.server.policy.WakeGestureListener: boolean isSupported()>
<com.android.gallery3d.common.Utils: int prevPowerOf2(int)>
<com.android.server.biometrics.ClientMonitor: boolean onAcquired(int,int)>
<com.android.server.notification.NotificationUsageStats: void registerEnqueuedByApp(java.lang.String)>
<com.android.settingslib.deviceinfo.AbstractWifiMacAddressPreferenceController: java.lang.String getPreferenceKey()>
<com.android.server.role.RoleUserState: int getVersion()>
<com.android.printspooler.model.PrintSpoolerService: void onCustomPrinterIconLoaded(android.print.PrinterId,android.graphics.drawable.Icon)>
<com.android.keyguard.CarrierTextController.CarrierTextCallback: void finishedWakingUp()>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationMessagingTemplateViewWrapper: void setRemoteInputVisible(boolean)>
<com.android.settingslib.accounts.AuthenticatorHelper: void listenToAccountUpdates()>
<com.android.systemui.recents.OverviewProxyService: int getSystemUiStateFlags()>
<com.android.systemui.statusbar.notification.NotificationEntryManager: com.android.systemui.statusbar.notification.collection.NotificationData getNotificationData()>
<com.android.systemui.recents.LegacyRecentsImpl: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.systemui.statusbar.phone.PanelView: void onFinishInflate()>
<com.android.systemui.statusbar.policy.MobileSignalController: void registerListener()>
<com.android.systemui.recents.events.EventBus.Event: java.lang.Object clone()>
<com.android.systemui.statusbar.phone.ManagedProfileControllerImpl: void addCallback(com.android.systemui.statusbar.phone.HeadsUpTouchHelper.Callback)>
<com.android.settingslib.core.instrumentation.SharedPreferencesLogger.EditorLogger: android.content.SharedPreferences.Editor putBoolean(java.lang.String,boolean)>
<com.android.systemui.recents.IRecentsNonSystemUserCallbacks: void cancelPreloadingRecents()>
<com.android.systemui.statusbar.phone.KeyguardClockPositionAlgorithm: void setup(int,int,int,float,int,int,int,boolean,boolean,float,float)>
<com.android.systemui.statusbar.notification.stack.ViewState: void cancelAnimations(android.view.View)>
<com.android.server.locksettings.LockSettingsService: android.service.gatekeeper.IGateKeeperService getGateKeeperService()>
<com.android.server.notification.ScheduleConditionProvider: void onBootComplete()>
<com.android.server.notification.NotificationComparator: int compare(com.android.server.notification.NotificationRecord,com.android.server.notification.NotificationRecord)>
<com.android.systemui.classifier.AnglesPercentageEvaluator: float evaluate(float,int)>
<com.android.powermodel.PowerProfile: com.android.powermodel.PowerProfile parse(java.io.InputStream)>
<com.android.systemui.statusbar.StatusBarStateControllerImpl: void addCallback(com.android.systemui.plugins.statusbar.StatusBarStateController.StateListener)>
<com.android.server.usb.descriptors.Usb20ASGeneral: int getFormats()>
<com.android.systemui.tuner.TunerServiceImpl: void setValue(java.lang.String,java.lang.String)>
<com.android.server.appop.AppOpsService: void stopWatchingActive(com.android.internal.app.IAppOpsActiveCallback)>
<com.android.systemui.plugins.FalsingManager: boolean isReportingEnabled()>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcher: void <init>(android.content.Context,android.view.ViewStub,com.android.systemui.statusbar.phone.KeyguardStatusBarView,com.android.systemui.statusbar.phone.NotificationPanelView)>
<com.android.systemui.statusbar.phone.StatusBarIconController.IconManager: void onDensityOrFontScaleChanged()>
<com.android.server.hdmi.HdmiCecMessageValidator: void <init>(com.android.server.hdmi.HdmiControlService)>
<com.android.server.usb.descriptors.UsbACMixerUnit: byte getNumInputs()>
<javax.obex.ServerSession: void <init>(javax.obex.ObexTransport,javax.obex.ServerRequestHandler,javax.obex.Authenticator)>
<android.media.Controller2Link: void onPlaybackActiveChanged(int,boolean)>
<com.android.settingslib.inputmethod.InputMethodPreference: void <init>(android.content.Context,android.view.inputmethod.InputMethodInfo,boolean,boolean,com.android.settingslib.inputmethod.InputMethodPreference.OnSavePreferenceListener)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isManagedProfile(android.content.ComponentName)>
<com.android.systemui.plugins.NotificationListenerController.NotificationProvider: void updateRanking()>
<com.android.systemui.statusbar.phone.ScrimController: void onScreenTurnedOn()>
<com.android.systemui.plugins.qs.DetailAdapter: java.lang.Boolean getToggleState()>
<com.android.systemui.analytics.DataCollector: void setQsExpanded(boolean)>
<com.android.server.timezone.PackageTrackerIntentHelper: void unscheduleReliabilityTrigger()>
<com.android.server.contentsuggestions.ContentSuggestionsManagerService: void onStart()>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void writeToProto(android.util.proto.ProtoOutputStream,long)>
<com.android.server.notification.PreferencesHelper: android.content.pm.ParceledListSlice getNotificationChannelsBypassingDnd(java.lang.String,int)>
<com.android.server.notification.VisibilityExtractor: com.android.server.notification.RankingReconsideration process(com.android.server.notification.NotificationRecord)>
<com.android.photos.views.BlockingGLTextureView: void render()>
<com.android.systemui.statusbar.phone.ButtonDispatcher: void onDestroy()>
<android.media.MediaPlayer2.DrmEventCallback: android.media.MediaPlayer2.DrmPreparationInfo onDrmInfo(android.media.MediaPlayer2,android.media.DataSourceDesc,android.media.MediaPlayer2.DrmInfo)>
<com.android.settingslib.applications.ServiceListing.Builder: com.android.settingslib.applications.ServiceListing.Builder setTag(java.lang.String)>
<com.android.systemui.statusbar.AmbientPulseManager: void onAlertEntryAdded(com.android.systemui.statusbar.AlertingNotificationManager.AlertEntry)>
<com.android.settingslib.bluetooth.HeadsetProfile: int getPreferred(android.bluetooth.BluetoothDevice)>
<com.android.server.ConnectivityService: android.net.LinkProperties getActiveLinkProperties()>
<com.android.systemui.qs.tiles.FlashlightTile: void handleDestroy()>
<com.android.systemui.statusbar.phone.StatusBar: void animateCollapseQuickSettings()>
<com.android.server.location.ComprehensiveCountryDetector: com.android.server.location.CountryDetectorBase createLocationBasedCountryDetector()>
<com.android.server.pm.dex.DynamicCodeLogger: java.util.Set getAllPackagesWithDynamicCodeLoading()>
<com.android.proxyhandler.ProxyServer: int getPort()>
<com.android.server.pm.ShortcutService: void resetThrottling()>
<com.android.server.pm.ShortcutService: boolean isUserUnlockedL(int)>
<com.android.systemui.tuner.TunerServiceImpl: void <init>(android.content.Context,android.os.Handler,com.android.systemui.util.leak.LeakDetector)>
<com.android.printspooler.model.PageContentRepository: void destroy(java.lang.Runnable)>
<com.android.server.accessibility.AccessibilityManagerService.UserState: void setBindInstantServiceAllowed(boolean)>
<com.android.keyguard.clock.ImageClock: void <init>(android.content.Context)>
<com.android.server.notification.ManagedServices: void writeExtraAttributes(org.xmlpull.v1.XmlSerializer,int)>
<com.android.systemui.statusbar.phone.StatusBar: void animateCollapsePanels(int,boolean)>
<com.android.server.DynamicSystemService: boolean isEnabled()>
<javax.microedition.khronos.opengles.GL10: void glNormal3x(int,int,int)>
<com.android.systemui.qs.QSSecurityFooter.VpnSpan: boolean equals(java.lang.Object)>
<com.android.systemui.statusbar.notification.ActivityLaunchAnimator.Callback: void onLaunchAnimationCancelled()>
<com.android.gallery3d.glrenderer.GLCanvas: void setTextureParameters(com.android.gallery3d.glrenderer.BasicTexture)>
<com.android.settingslib.applications.StorageStatsSource: void <init>(android.content.Context)>
<com.android.systemui.keyguard.KeyguardViewMediator: void onDreamingStopped()>
<com.android.server.notification.ConditionProviders: void onServiceRemovedLocked(com.android.server.notification.ManagedServices.ManagedServiceInfo)>
<com.android.preload.ClientUtils: com.android.ddmlib.Client[] findAllClients(com.android.ddmlib.IDevice,int)>
<com.android.systemui.statusbar.phone.StatusBarWindowCallback: void onStateChanged(boolean,boolean,boolean)>
<com.android.settingslib.drawable.UserIconDrawable: void setAlpha(int)>
<com.android.systemui.shared.recents.model.TaskKeyLruCache: void putCacheEntry(int,java.lang.Object)>
<com.android.server.NativeDaemonEvent: java.lang.String[] filterMessageList(com.android.server.NativeDaemonEvent[],int)>
<com.android.server.biometrics.BiometricUserState: java.lang.String getBiometricsTag()>
<com.android.systemui.statusbar.phone.UnlockMethodCache.OnUnlockMethodChangedListener: void onUnlockMethodStateChanged()>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.activity.ConfigurationChangedEvent)>
<com.android.systemui.recents.RecentsImpl: void <init>(android.content.Context)>
<com.android.media.remotedisplay.RemoteDisplay: void <init>(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.phone.NotificationListenerWithPlugins: void registerAsSystemService(android.content.Context,android.content.ComponentName,int)>
<com.android.systemui.qs.QSSecurityFooter: void setHostEnvironment(com.android.systemui.qs.QSTileHost)>
<com.android.systemui.statusbar.phone.PanelView: void setExpandedHeightInternal(float)>
<com.android.systemui.statusbar.notification.AnimatableProperty: int getAnimationStartTag()>
<com.android.settingslib.bluetooth.HeadsetProfile: int getNameResource(android.bluetooth.BluetoothDevice)>
<com.android.server.NetworkScoreService: void registerNetworkScoreCache(int,android.net.INetworkScoreCache,int)>
<com.android.server.testing.shadows.ShadowSlog: int i(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.android.systemui.plugins.VolumeDialogController.State: java.lang.String toString()>
<com.android.commands.telecom.Telecom: void onShowUsage(java.io.PrintStream)>
<com.android.keyguard.KeyguardSliceView: void <init>(android.content.Context,android.util.AttributeSet,com.android.systemui.plugins.ActivityStarter,com.android.systemui.statusbar.policy.ConfigurationController)>
<com.android.location.provider.LocationProviderBase: void setEnabled(boolean)>
<com.android.systemui.qs.PagedTileLayout: int getColumnCount()>
<com.android.systemui.plugins.PluginInitializerImpl: com.android.systemui.shared.plugins.PluginEnabler getPluginEnabler(android.content.Context)>
<com.android.systemui.assist.ui.EdgeLight: void setLength(float)>
<com.android.server.policy.WindowManagerPolicy: void enableKeyguard(boolean)>
<com.android.settingslib.deviceinfo.AbstractWifiMacAddressPreferenceController: void displayPreference(androidx.preference.PreferenceScreen)>
<com.android.settingslib.graph.BatteryMeterDrawableBase: void setPowerSave(boolean)>
<com.android.server.display.BrightnessTracker: android.content.pm.ParceledListSlice getEvents(int,boolean)>
<com.android.settingslib.core.instrumentation.Instrumentable: int getMetricsCategory()>
<com.android.systemui.statusbar.phone.MultiUserSwitch: void setKeyguardMode(boolean)>
<com.android.server.NetworkScoreService.ScoringServiceConnection: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.powermodel.component.GpsProfile.Builder: void setSignalMa(float[])>
<com.android.systemui.settings.BrightnessController: void checkRestrictionAndSetEnabled()>
<com.android.server.storage.AppFuseBridge.MountScope: android.os.ParcelFileDescriptor openFile(int,int,int)>
<com.android.server.notification.ManagedServices: void unbindFromServices(android.util.SparseArray)>
<com.android.settingslib.widget.ActionButtonsPreference: com.android.settingslib.widget.ActionButtonsPreference setButton2Text(int)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onRefreshCarrierInfo()>
<com.android.systemui.recents.views.DockState.ViewState: void startAnimation(android.graphics.Rect,int,int,int,android.view.animation.Interpolator,boolean,boolean)>
<com.android.server.pm.PackageManagerService: void sendPackageAddedForNewUsers(java.lang.String,boolean,boolean,int,int[],int[])>
<android.net.TcpKeepalivePacketData: int hashCode()>
<android.text.DynamicLayoutPerfTest: java.util.Collection cases()>
<com.android.systemui.statusbar.ScrimView: void setTint(int,boolean)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void onAttachedToWindow()>
<com.android.systemui.statusbar.car.UserGridRecyclerView.UserAdapter: void onCancel(android.content.DialogInterface)>
<com.android.server.pm.PackageDexOptimizer.ForcedUpdatePackageDexOptimizer: void <init>(com.android.server.pm.PackageDexOptimizer)>
<com.android.server.storage.FileCollector: com.android.server.storage.FileCollector.MeasurementResult getMeasurementResult(java.io.File)>
<com.android.server.biometrics.face.FaceUserState: java.util.ArrayList getCopy(java.util.ArrayList)>
<com.android.systemui.statusbar.notification.row.NotificationInfo.OnAppSettingsClickListener: void onClick(android.view.View,android.content.Intent)>
<com.android.systemui.statusbar.notification.collection.NotificationData: int getVisibilityOverride(java.lang.String)>
<com.android.server.policy.SoftRestrictedPermissionPolicy: boolean shouldSetAppOpIfNotDefault()>
<android.media.Session2CommandGroup.Builder: void <init>(android.media.Session2CommandGroup)>
<android.media.MediaPlayer2.DrmPreparationInfo.Builder: android.media.MediaPlayer2.DrmPreparationInfo.Builder setKeyType(int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void grantDeviceIdsAccessToProfileOwner(android.content.ComponentName,int)>
<com.android.keyguard.KeyguardSecurityViewFlipper: void showPromptReason(int)>
<com.android.server.security.VerityUtils: byte[] getVerityRootHash(java.lang.String)>
<com.android.settingslib.wifi.TestAccessPointBuilder: com.android.settingslib.wifi.TestAccessPointBuilder setFqdn(java.lang.String)>
<com.android.systemui.qs.tileimpl.QSTileImpl.DrawableIcon: android.graphics.drawable.Drawable getDrawable(android.content.Context)>
<com.android.server.pm.PackageManagerService: boolean isInstantApp(java.lang.String,int)>
<com.android.gallery3d.exif.ExifTag: com.android.gallery3d.exif.Rational getValueAsRational(com.android.gallery3d.exif.Rational)>
<com.android.systemui.shared.plugins.PluginManager: java.lang.String[] getWhitelistedPlugins()>
<com.android.systemui.plugins.GlobalActions.GlobalActionsManager: void reboot(boolean)>
<com.android.settingslib.bluetooth.CachedBluetoothDeviceManager: com.android.settingslib.bluetooth.CachedBluetoothDevice findDevice(android.bluetooth.BluetoothDevice)>
<com.android.keyguard.KeyguardSecurityViewFlipper: com.android.keyguard.KeyguardSecurityCallback getCallback()>
<com.android.server.search.SearchManagerService.Lifecycle: void onCleanupUser(int)>
<com.android.systemui.recents.RecentsImplProxy: void showRecents(boolean,boolean,boolean,int)>
<com.android.settingslib.wifi.WifiTracker: void onStart()>
<com.android.systemui.plugins.VolumeDialogController: android.media.AudioManager getAudioManager()>
<com.android.server.timezone.RulesManagerService: android.app.timezone.RulesState getRulesState()>
<com.android.server.pm.UserManagerService: boolean hasUserRestrictionOnAnyUser(java.lang.String)>
<android.media.DataSourceDesc.Builder: void <init>(android.media.DataSourceDesc)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void setAlpha(float)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void onPanelExpansionChanged(float,boolean)>
<com.android.uiautomator.core.UiDevice: boolean pressMenu()>
<com.android.systemui.recents.events.EventBus: void register(java.lang.Object)>
<com.android.systemui.qs.tiles.LocationTile: void handleUpdateState(com.android.systemui.plugins.qs.QSTile.BooleanState,java.lang.Object)>
<com.android.server.biometrics.fingerprint.FingerprintConstants: java.lang.String tagAuthStartError()>
<javax.microedition.khronos.opengles.GL11: boolean glIsEnabled(int)>
<com.android.server.adb.AdbDebuggingManager: void setAdbEnabled(boolean)>
<com.android.systemui.statusbar.NotificationLockscreenUserManagerImpl: boolean isAnyProfilePublicMode()>
<com.android.server.content.SyncManagerConstants: int getMaxSyncRetryTimeInSeconds()>
<com.android.server.ConnectivityService: boolean setUnderlyingNetworksForVpn(android.net.Network[])>
<com.android.uiautomator.testrunner.TestCaseCollector: void addSingleTestMethod(java.lang.Class,java.lang.String)>
<com.android.systemui.recents.views.TaskStackViewScroller: void setStackScroll(float,com.android.systemui.recents.utilities.AnimationProps)>
<com.android.preload.ui.NullProgressMonitor: boolean isCanceled()>
<android.net.util.VersionedBroadcastListener: void startListening()>
<com.android.systemui.statusbar.notification.stack.AmbientState: void setShadeExpanded(boolean)>
<com.android.server.media.MediaSessionRecord: void onDestroy()>
<com.android.systemui.statusbar.policy.FlashlightController.FlashlightListener: void onFlashlightChanged(boolean)>
<com.android.preload.actions.ExportAction: void <init>(com.android.preload.DumpTableModel)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setActualHeightAnimating(boolean)>
<com.android.settingslib.core.lifecycle.events.OnDestroy: void onDestroy()>
<com.android.systemui.recents.model.HighResThumbnailLoader: void <init>(com.android.systemui.shared.system.ActivityManagerWrapper,android.os.Looper,boolean)>
<com.android.keyguard.KeyguardUpdateMonitor: void requestFaceAuth()>
<com.android.systemui.statusbar.phone.ScrimController: void cancelAnimator(android.animation.ValueAnimator)>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: android.bluetooth.BluetoothDevice getRemoteDevice(java.lang.String)>
<com.android.printspooler.ui.FusedPrintersProvider: void forgetFavoritePrinter(android.print.PrinterId)>
<com.android.powermodel.component.ModemRemainderActivity: com.android.powermodel.component.ModemRemainderPower applyProfile(com.android.powermodel.ActivityReport,com.android.powermodel.PowerProfile)>
<com.android.server.content.SyncStorageEngine: void stopSyncEvent(long,long,java.lang.String,long,long,int)>
<com.android.systemui.colorextraction.SysuiColorExtractor: void onColorsChanged(android.app.WallpaperColors,int,int)>
<com.android.server.locksettings.recoverablekeystore.RecoverableKeyStoreManager: android.security.keystore.recovery.KeyChainSnapshot getKeyChainSnapshot()>
<com.android.systemui.power.PowerUI: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.vpndialogs.ConfirmDialog: void onCreate(android.os.Bundle)>
<com.android.systemui.assist.ui.DefaultUiController: void onInvocationProgress(int,float)>
<com.android.server.NsdService.DaemonConnection: void start()>
<com.android.systemui.recents.views.lowram.TaskStackLowRamLayoutAlgorithm: com.android.systemui.recents.views.TaskViewTransform getTransform(int,float,com.android.systemui.recents.views.TaskViewTransform,int,com.android.systemui.recents.views.TaskStackLayoutAlgorithm)>
<com.android.gallery3d.exif.ExifInterface: boolean setCompressedThumbnail(android.graphics.Bitmap)>
<com.android.systemui.statusbar.phone.NotificationIconAreaController: void onDozeAmountChanged(float,float)>
<android.media.MediaSession2.Builder: android.media.MediaSession2.Builder setExtras(android.os.Bundle)>
<com.android.systemui.qs.QSDualTileLabel: void setText(java.lang.CharSequence)>
<com.android.server.biometrics.EnumerateClient: boolean onAuthenticated(android.hardware.biometrics.BiometricAuthenticator.Identifier,boolean,java.util.ArrayList)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void showAppOpsIcons(android.util.ArraySet)>
<com.android.systemui.assist.AssistManager: void hideAssist()>
<com.android.settingslib.users.AppRestrictionsHelper: void applyUserAppsStates(com.android.settingslib.users.AppRestrictionsHelper.OnDisableUiForPackageListener)>
<javax.obex.ClientSession: javax.obex.HeaderSet connect(javax.obex.HeaderSet)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector instance(int)>
<com.android.settingslib.development.SystemPropPoker: void unblockPokes()>
<com.android.server.audio.AudioService.VolumeController: void setLayoutDirection(int)>
<com.android.systemui.qs.tiles.RotationLockTile: boolean isCurrentOrientationLockPortrait(com.android.systemui.statusbar.policy.RotationLockController,android.content.Context)>
<com.android.systemui.plugins.GlobalActionsPanelPlugin.PanelViewController: void onDeviceLockStateChanged(boolean)>
<com.android.server.uri.UriGrantsManagerInternal: void onSystemReady()>
<com.android.gallery3d.glrenderer.GLCanvas: void translate(float,float,float)>
<com.android.settingslib.applications.DefaultAppInfo: android.graphics.drawable.Drawable loadIcon()>
<com.android.server.content.SyncStorageEngine: void removeStatusChangeListener(android.content.ISyncStatusObserver)>
<android.media.Session2Command: int hashCode()>
<com.android.server.pm.UserManagerService: java.util.List getUsers(boolean)>
<com.android.server.ConnectivityService: void sendConnectedBroadcast(android.net.NetworkInfo)>
<com.android.systemui.classifier.FalsingManagerImpl: boolean isReportingEnabled()>
<com.android.server.location.GnssSatelliteBlacklistHelperTest: void blacklistWithNegativeValue_callbackIsNotCalled()>
<com.android.server.infra.AbstractMasterSystemService: void setTemporaryService(int,java.lang.String,int)>
<com.android.systemui.statusbar.phone.NavigationBarFragment: void setWindowState(int,int,int)>
<com.android.server.policy.PhoneWindowManager: void userActivity()>
<com.android.systemui.statusbar.AlertingNotificationManager.AlertEntry: void reset()>
<com.android.server.biometrics.BiometricServiceBase.DaemonWrapper: void resetLockout(byte[])>
<com.android.gallery3d.exif.ExifInterface: void deleteTag(int,int)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetIntegerv(int,java.nio.IntBuffer)>
<android.net.ip.IpClientManager: boolean startProvisioning(android.net.shared.ProvisioningConfiguration)>
<com.android.systemui.keyguard.ScreenLifecycle: int getScreenState()>
<com.android.server.slice.SliceProviderPermissions.SliceAuthority: void readFrom(org.xmlpull.v1.XmlPullParser)>
<javax.obex.ServerOperation: void streamClosed(boolean)>
<com.android.server.vr.VrManagerInternal: int getVr2dDisplayId()>
<com.android.packageinstaller.DeleteStagedFileOnResult: void onCreate(android.os.Bundle)>
<com.android.systemui.qs.QSDetail: boolean isShowingDetail()>
<com.android.server.content.ContentService: void onDbCorruption(java.lang.String,java.lang.String,java.lang.String)>
<com.android.server.notification.ConditionProviders: boolean isSystemProviderEnabled(java.lang.String)>
<com.android.systemui.statusbar.phone.LockIcon: void onDetachedFromWindow()>
<com.android.systemui.plugins.qs.QSTile.Callback: void onAnnouncementRequested(java.lang.CharSequence)>
<com.android.server.biometrics.RemovalClient: boolean onAuthenticated(android.hardware.biometrics.BiometricAuthenticator.Identifier,boolean,java.util.ArrayList)>
<com.android.wallpapercropper.WallpaperCropActivity: android.graphics.Point getDefaultWallpaperSize(android.content.res.Resources,android.view.WindowManager)>
<com.android.server.locksettings.recoverablekeystore.certificate.CertXml: com.android.server.locksettings.recoverablekeystore.certificate.CertXml parse(byte[])>
<com.android.systemui.plugins.FalsingManager: boolean shouldEnforceBouncer()>
<com.android.server.contentsuggestions.ContentSuggestionsManagerService: com.android.server.contentsuggestions.ContentSuggestionsPerUserService newServiceLocked(int,boolean)>
<com.android.server.policy.WindowManagerPolicy: void finishedWakingUp(int)>
<com.android.systemui.DessertCaseView.RescalingContainer: float getDarkness()>
<com.android.server.ConnectivityService: boolean isNetworkSupported(int)>
<com.android.systemui.statusbar.notification.row.HybridNotificationView: void setVisible(boolean)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setTrackedHeadsUp(com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<com.android.systemui.classifier.brightline.BrightLineFalsingManager: void onBouncerShown()>
<javax.microedition.khronos.opengles.GL11: void glGetMaterialxv(int,int,int[],int)>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.activity.LaunchMostRecentTaskRequestEvent)>
<com.android.server.FgThread: com.android.server.FgThread get()>
<com.android.server.usb.UsbMidiDevice: com.android.server.usb.UsbMidiDevice create(android.content.Context,android.os.Bundle,int,int)>
<com.android.server.notification.NotificationRecord: java.lang.CharSequence getImportanceExplanation()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGenFramebuffersOES(int,java.nio.IntBuffer)>
<com.android.systemui.statusbar.KeyguardIndicationController: void <init>(android.content.Context,android.view.ViewGroup,com.android.systemui.statusbar.phone.LockIcon)>
<com.android.systemui.Prefs: java.util.Set getStringSet(android.content.Context,java.lang.String,java.util.Set)>
<com.android.systemui.statusbar.policy.PreviewInflater: android.view.View inflatePreviewFromService(android.content.ComponentName)>
<com.android.systemui.statusbar.AlphaOptimizedFrameLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.DependencyBinder: com.android.systemui.statusbar.policy.ExtensionController provideExtensionController(com.android.systemui.statusbar.policy.ExtensionControllerImpl)>
<com.android.server.om.OverlayManagerServiceImpl.PackageManagerHelper: boolean signaturesMatching(java.lang.String,java.lang.String,int)>
<com.android.printspooler.ui.PrintActivity.PrintServiceApprovalDialog: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>
<com.android.systemui.plugins.ClockPlugin: android.graphics.Bitmap getThumbnail()>
<com.android.server.CertBlacklister: void <init>(android.content.Context)>
<com.example.android.networkusage.StackOverflowXmlParser: java.util.List parse(java.io.InputStream)>
<com.android.systemui.recents.model.TaskStack: void removeTask(com.android.systemui.shared.recents.model.Task,com.android.systemui.recents.utilities.AnimationProps,boolean,boolean)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: void setIsHighPriority(boolean)>
<com.android.systemui.statusbar.car.CarStatusBarKeyguardViewManager: void updateNavigationBarVisibility(boolean)>
<com.android.server.location.MockProvider: void <init>(android.content.Context,com.android.server.location.AbstractLocationProvider.LocationProviderManager,com.android.internal.location.ProviderProperties)>
<com.android.systemui.Prefs: void putInt(android.content.Context,java.lang.String,int)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void dismissAndCollapse()>
<com.android.server.wallpaper.WallpaperManagerService: boolean isWallpaperBackupEligible(int,int)>
<com.android.systemui.statusbar.car.hvac.TemperatureView: float convertToFahrenheit(float)>
<com.android.server.pm.PackageManagerServiceUtils: int decompressFile(java.io.File,java.io.File)>
<android.perftests.utils.SettingsHelper: void syncDelete(android.content.Context,java.lang.String,java.lang.String)>
<android.net.ipmemorystore.IOnBlobRetrievedListener: void onBlobRetrieved(android.net.ipmemorystore.StatusParcelable,java.lang.String,java.lang.String,android.net.ipmemorystore.Blob)>
<com.android.systemui.pip.tv.PipControlButtonView: void reset()>
<com.android.server.pm.PackageSettingBase: void setInstallerPackageName(java.lang.String)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean isHeadsUp()>
<com.android.systemui.shared.system.TaskStackChangeListener: boolean checkCurrentUserId(int,boolean)>
<com.android.settingslib.deviceinfo.StorageManagerVolumeProvider: long getPrimaryStorageSize()>
<com.android.systemui.shared.plugins.PluginManagerImpl: void addPluginListener(com.android.systemui.plugins.PluginListener,java.lang.Class,boolean)>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: void onBluetoothStateChanged(int)>
<com.android.systemui.plugins.GlobalActions: void destroy()>
<com.android.systemui.shared.system.TaskStackChangeListeners: void onActivityLaunchOnSecondaryDisplayRerouted(android.app.ActivityManager.RunningTaskInfo,int)>
<com.android.systemui.shared.system.TaskStackChangeListener: void onActivityLaunchOnSecondaryDisplayFailed(android.app.ActivityManager.RunningTaskInfo)>
<com.android.settingslib.location.InjectedSetting.Builder: com.android.settingslib.location.InjectedSetting.Builder setPackageName(java.lang.String)>
<com.android.server.accounts.AccountManagerService: void renameAccount(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String)>
<com.android.systemui.statusbar.policy.KeyguardMonitorImpl: void notifyKeyguardFadingAway(long,long)>
<com.android.server.pm.permission.BasePermission: int calculateFootprint(com.android.server.pm.permission.BasePermission)>
<com.android.server.locksettings.recoverablekeystore.RecoverableKeyStoreManager: void setRecoverySecretTypes(int[])>
<com.android.systemui.statusbar.phone.StatusBarIconControllerImpl: void onTuningChanged(java.lang.String,java.lang.String)>
<com.android.settingslib.graph.SignalDrawable: void setColorFilter(android.graphics.ColorFilter)>
<com.android.systemui.qs.QSDetailItems: void setItemsVisible(boolean)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void onDisplayReady(int)>
<com.android.systemui.statusbar.phone.KeyguardStatusBarView: void setQSPanel(com.android.systemui.qs.QSPanel)>
<com.android.server.content.ContentService: void registerContentObserver(android.net.Uri,boolean,android.database.IContentObserver,int,int)>
<com.android.packageinstaller.PackageInstallerActivity.AppErrorDialog: android.app.Dialog createDialog(java.lang.CharSequence)>
<com.android.systemui.media.RingtonePlayer: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.printspooler.model.PrintSpoolerProvider: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>
<com.android.systemui.util.InjectionInflationController.ViewCreator: com.android.systemui.util.InjectionInflationController.ViewInstanceCreator createInstanceCreator(com.android.systemui.util.InjectionInflationController.ViewAttributeProvider)>
<com.android.server.content.SyncManagerConstants: void <init>(android.content.Context)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: boolean isBelowLastNotification(float,float)>
<com.android.systemui.recents.RecentsImpl: android.app.ActivityOptions getUnknownTransitionActivityOptions()>
<com.android.systemui.assist.AssistHandleBehaviorController: void showAndGo()>
<com.android.server.SensorNotificationService: void <init>(android.content.Context)>
<com.android.systemui.recents.views.ViewPool.ViewPoolConsumer: void onReturnViewToPool(java.lang.Object)>
<com.android.server.notification.RankingConfig: boolean areBubblesAllowed(java.lang.String,int)>
<com.android.server.content.ContentService: boolean isSyncPendingAsUser(android.accounts.Account,java.lang.String,android.content.ComponentName,int)>
<com.android.systemui.statusbar.notification.stack.NotificationListContainer: void generateAddAnimation(com.android.systemui.statusbar.notification.row.ExpandableView,boolean)>
<com.android.systemui.power.PowerUI.WarningsUI: boolean isInvalidChargerWarningShowing()>
<com.android.server.accessibility.AccessibilityManagerService.SecurityPolicy: void clearWindowsLocked()>
<com.android.server.GestureLauncherService: boolean isCameraDoubleTapPowerEnabled(android.content.res.Resources)>
<android.text.PrecomputedTextPerfTest: void testCreate_Styled_Hyphenation()>
<com.android.server.appop.AppOpsService: void packageRemoved(int,java.lang.String)>
<com.android.server.notification.ManagedServices: java.lang.String getApproved(int,boolean)>
<com.android.systemui.classifier.FalsingManagerImpl: void onBouncerHidden()>
<com.android.settingslib.bluetooth.LocalBluetoothProfileManager.ServiceListener: void onServiceDisconnected()>
<com.android.systemui.statusbar.notification.row.ExpandableView: void setOnHeightChangedListener(com.android.systemui.statusbar.notification.row.ExpandableView.OnHeightChangedListener)>
<com.android.systemui.statusbar.phone.StatusBar: boolean isFullScreenUserSwitcherState()>
<com.android.server.policy.PhoneWindowManager: void onSystemUiStarted()>
<com.android.systemui.tuner.ClipboardView: void onAttachedToWindow()>
<android.net.NetworkStackClient: void makeNetworkMonitor(android.net.Network,java.lang.String,android.net.INetworkMonitorCallbacks)>
<com.android.systemui.plugins.qs.QS: void setQsExpansion(float,float)>
<com.android.keyguard.clock.AnalogClockController: android.view.View getView()>
<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantDefaultPermissions(int)>
<com.android.systemui.statusbar.notification.row.NotificationGuts: int getIntrinsicHeight()>
<com.android.server.notification.PreferencesHelper: void updateZenPolicy(boolean)>
<com.android.systemui.statusbar.AnimatedImageView: void onAttachedToWindow()>
<com.android.systemui.statusbar.notification.row.NotificationBackgroundView: void setClipTopAmount(int)>
<com.android.photos.BitmapRegionTileSource.BitmapSource: int getPreviewSize()>
<com.android.server.uri.GrantUri: int hashCode()>
<com.android.printspooler.util.ApprovedPrintServices: void unregisterChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener)>
<com.android.keyguard.KeyguardUpdateMonitor: void dispatchStartedGoingToSleep(int)>
<com.android.systemui.statusbar.notification.row.NotificationGuts: int getActualHeight()>
<com.android.systemui.bubbles.animation.ExpandedAnimationController: void dismissDraggedOutBubble(android.view.View,java.lang.Runnable)>
<com.android.server.accessibility.AbstractAccessibilityServiceConnection.SystemSupport: boolean isAccessibilityButtonShown()>
<com.android.systemui.statusbar.notification.stack.NotificationListContainer: void resetExposedMenuView(boolean,boolean)>
<com.android.systemui.keyguard.KeyguardSliceProvider: void addZenModeLocked(androidx.slice.builders.ListBuilder)>
<com.android.systemui.statusbar.policy.SignalController: java.lang.String getStringIfExists(int)>
<com.android.future.usb.UsbAccessory: java.lang.String getModel()>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: boolean hasMobileDataFeature()>
<com.android.server.soundtrigger.SoundTriggerService.LocalSoundTriggerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.shared.system.TaskStackChangeListeners: void onActivityRequestedOrientationChanged(int,int)>
<com.android.systemui.recents.RecentsSystemUser: void setWaitingForTransitionStartEvent(boolean)>
<com.android.systemui.statusbar.car.UserGridRecyclerView: void setUserSelectionListener(com.android.systemui.statusbar.car.UserGridRecyclerView.UserSelectionListener)>
<android.text.DynamicLayoutPerfTest: void testGetBlocksAlwaysNeedToBeRedrawn()>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: void removeCallback(com.android.systemui.statusbar.policy.NetworkController.SignalCallback)>
<com.android.server.testing.shadows.ShadowApplicationPackageManager: void reset()>
<com.android.systemui.plugins.VolumeDialogController: boolean isCaptionStreamOptedOut()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexGenxv(int,int,java.nio.IntBuffer)>
<com.android.settingslib.bluetooth.PanProfile: boolean isPreferred(android.bluetooth.BluetoothDevice)>
<com.android.systemui.qs.external.TileLifecycleManager: void handleDestroy()>
<com.android.systemui.statusbar.policy.SecurityControllerImpl: void addCallback(com.android.systemui.statusbar.policy.SecurityController.SecurityControllerCallback)>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: boolean canBeDismissed()>
<com.android.systemui.keyguard.KeyguardSliceProvider: boolean isDndOn()>
<com.android.server.accessibility.AccessibilityManagerService: void onClientChangeLocked(boolean)>
<com.android.systemui.shared.recents.utilities.AppTrace: void start(java.lang.String,int)>
<com.android.uiautomator.core.UiObject: boolean pinchIn(int,int)>
<com.android.server.usb.descriptors.UsbASFormat: void <init>(int,byte,byte,byte,int)>
<com.android.systemui.plugins.ClockPlugin: void setTextColor(int)>
<com.android.settingslib.SliceBroadcastRelay: void unregisterReceivers(android.content.Context,android.net.Uri)>
<com.android.systemui.recents.events.ui.dragndrop.DragEndEvent: void <init>(com.android.systemui.shared.recents.model.Task,com.android.systemui.recents.views.TaskView,com.android.systemui.recents.views.DropTarget)>
<com.android.server.pm.PackageManagerException: void <init>(java.lang.String)>
<com.android.settingslib.RestrictedPreference: void performClick()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: int getCollapsedHeight()>
<com.android.gallery3d.common.Utils: byte[] getBytes(java.lang.String)>
<com.android.settingslib.core.instrumentation.SharedPreferencesLogger.EditorLogger: android.content.SharedPreferences.Editor putFloat(java.lang.String,float)>
<android.view.textclassifier.TextClassifierPerfTest: void testSuggestConversationActions()>
<com.android.systemui.qs.QSCarrier: void onFinishInflate()>
<com.android.systemui.volume.VolumeDialogControllerImpl: void setRingerMode(int,boolean)>
<com.android.server.PinnerService: void onUnlockUser(int)>
<android.text.PrecomputedTextMemoryUsageTest: void testMemoryUsage_Arabic_Hyphenation()>
<com.android.systemui.bubbles.BubbleView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.statusbar.ScrimView: void setColors(com.android.internal.colorextraction.ColorExtractor.GradientColors)>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverySessionStorage: void remove(int)>
<com.android.systemui.recents.misc.SystemServicesProxy: android.graphics.Rect getDisplayRect()>
<com.android.server.statusbar.StatusBarManagerInternal: void setNotificationDelegate(com.android.server.notification.NotificationDelegate)>
<com.android.systemui.qs.external.TileLifecycleManager: android.content.ComponentName getComponent()>
<com.example.android.networkusage.NetworkActivity: void onCreate(android.os.Bundle)>
<com.android.server.rollback.RollbackPackageHealthObserver: java.lang.String getName()>
<com.android.server.audio.AudioService: int getMinVolumeIndexForAttributes(android.media.AudioAttributes)>
<com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem: void switchInputOnReceivingNewActivePath(int)>
<android.net.ipmemorystore.NetworkAttributes.Builder: android.net.ipmemorystore.NetworkAttributes.Builder setMtu(java.lang.Integer)>
<com.android.systemui.analytics.DataCollector: void onLeftAffordanceHintStarted()>
<com.android.systemui.statusbar.NavigationBarController: void <init>(android.content.Context,android.os.Handler)>
<com.android.systemui.statusbar.phone.DozeParameters: android.os.PowerManager getPowerManager()>
<com.android.server.policy.PhoneWindowManager: boolean isTopLevelWindow(int)>
<com.android.keyguard.KeyguardDisplayManager: void show()>
<com.android.server.accessibility.AbstractAccessibilityServiceConnection.SystemSupport: void onClientChangeLocked(boolean)>
<com.android.server.policy.PhoneWindowManager: android.view.animation.Animation createKeyguardWallpaperExit(boolean)>
<com.android.server.NetworkScorerAppManager: void <init>(android.content.Context,com.android.server.NetworkScorerAppManager.SettingsFacade)>
<com.android.systemui.qs.QSFooter: void setQSPanel(com.android.systemui.qs.QSPanel)>
<com.android.systemui.plugins.PluginUtils: void setId(android.content.Context,android.view.View,java.lang.String)>
<com.android.systemui.statusbar.NotificationShelf: boolean isInteractive()>
<com.android.systemui.statusbar.phone.FloatingRotationButton: void setCanShowRotationButton(boolean)>
<com.android.settingslib.applications.StorageStatsSource.AppStorageStats: long getCodeBytes()>
<com.android.systemui.statusbar.notification.VisualStabilityManager: boolean canReorderNotification(com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<com.android.gallery3d.glrenderer.BasicTexture: int getTextureWidth()>
<com.android.server.ConnectivityService: void unregisterNetworkFactory(android.os.Messenger)>
<com.android.settingslib.RestrictedLockUtilsInternal: com.android.settingslib.RestrictedLockUtils.EnforcedAdmin checkIfPasswordQualityIsSet(android.content.Context,int)>
<com.android.keyguard.KeyguardClockSwitch: void onDetachedFromWindow()>
<com.android.systemui.recents.events.activity.LaunchTaskSucceededEvent: void <init>(int)>
<com.android.systemui.statusbar.notification.PropertyAnimator: void startAnimation(android.view.View,com.android.systemui.statusbar.notification.AnimatableProperty,float,com.android.systemui.statusbar.notification.stack.AnimationProperties)>
<android.multiuser.UserLifecycleTests: void tearDown()>
<com.android.systemui.statusbar.NotificationShelf: void updateState(com.android.systemui.statusbar.notification.stack.AmbientState)>
<com.android.server.pm.PackageManagerService: boolean setApplicationHiddenSettingAsUser(java.lang.String,boolean,int)>
<com.android.systemui.shared.plugins.VersionInfo: void checkVersion(com.android.systemui.shared.plugins.VersionInfo)>
<javax.microedition.khronos.opengles.GL10: void glTexCoordPointer(int,int,int,java.nio.Buffer)>
<android.media.DataSourceDesc.Builder: android.media.DataSourceDesc.Builder setDataSource(android.net.Uri,java.util.Map,java.util.List)>
<com.android.systemui.plugins.qs.QSTile: java.lang.CharSequence getTileLabel()>
<com.android.externalstorage.TestDocumentsProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)>
<com.android.systemui.statusbar.policy.AccessPointControllerImpl: void <init>(android.content.Context)>
<com.android.systemui.util.leak.WeakIdentityHashMap: int size()>
<com.android.keyguard.KeyguardSliceView.Row: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.server.autofill.ui.AutoFillUI.AutoFillUiCallback: void requestShowFillUi(android.view.autofill.AutofillId,int,int,android.view.autofill.IAutofillWindowPresenter)>
<javax.obex.Operation: java.io.OutputStream openOutputStream()>
<com.android.settingslib.fuelgauge.PowerWhitelistBackend: boolean isSysWhitelisted(java.lang.String)>
<javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLSurface eglCreateWindowSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object,int[])>
<com.android.systemui.statusbar.phone.StatusBar: boolean toggleSplitScreenMode(int,int)>
<com.android.server.timezone.TimeZoneUpdateIdler: boolean onStopJob(android.app.job.JobParameters)>
<com.android.systemui.statusbar.StatusIconDisplayable: int getVisibleState()>
<com.android.server.notification.ManagedServices.ManagedServiceInfo: boolean enabledAndUserMatches(int)>
<com.android.systemui.keyguard.Lifecycle: void removeObserver(java.lang.Object)>
<com.android.photos.views.TiledImageView: boolean isTilingSupported()>
<com.android.systemui.recents.views.FixedSizeFrameLayout: void measureContents(int,int)>
<com.android.systemui.statusbar.notification.TransformState: void abortTransformation()>
<com.android.settingslib.core.lifecycle.ObservableActivity: void onCreate(android.os.Bundle)>
<com.android.systemui.statusbar.phone.NotificationListenerWithPlugins: void onPluginConnected()>
<com.google.android.startop.iorap.PackageEvent: com.google.android.startop.iorap.PackageEvent createReplaced(android.net.Uri,java.lang.String)>
<com.android.server.notification.NotificationRecord: void setAuthoritativeRank(int)>
<com.android.systemui.statusbar.notification.VisualStabilityManager: void onReorderingFinished()>
<com.android.systemui.statusbar.SmartReplyController: void <init>(com.android.systemui.statusbar.notification.NotificationEntryManager,com.android.internal.statusbar.IStatusBarService)>
<javax.microedition.khronos.opengles.GL10: void glLineWidth(float)>
<com.android.keyguard.clock.BubbleClockController: android.view.View getView()>
<com.android.systemui.qs.TileLayout: boolean hasOverlappingRendering()>
<com.android.systemui.statusbar.phone.StatusBarIconController: void removeAllIconsForSlot(java.lang.String)>
<com.android.systemui.qs.QSAnimator: void setPosition(float)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setPermissionPolicy(android.content.ComponentName,java.lang.String,int)>
<com.android.server.biometrics.BiometricServiceBase.AuthenticationClientImpl: void onStop()>
<com.android.server.webkit.SystemImpl: void killPackageDependents(java.lang.String)>
<com.android.media.remotedisplay.RemoteDisplay: void setVolume(int)>
<com.android.printspooler.model.CustomPrinterIconCache: void clear()>
<com.android.server.pm.KeySetManagerService: void assertScannedPackageValid(android.content.pm.PackageParser.Package)>
<com.android.server.notification.NotificationManagerService.NotificationListeners: void onStatusBarIconsBehaviorChanged(boolean)>
<com.android.systemui.qs.customize.QSCustomizer: void saveInstanceState(android.os.Bundle)>
<com.android.systemui.recents.views.SystemBarScrimViews: void onBusEvent(com.android.systemui.recents.events.activity.MultiWindowStateChangedEvent)>
<com.android.server.TelephonyRegistry: void addOnOpportunisticSubscriptionsChangedListener(java.lang.String,com.android.internal.telephony.IOnSubscriptionsChangedListener)>
<com.android.uiautomator.testrunner.IAutomationSupport: void sendStatus(int,android.os.Bundle)>
<com.android.systemui.bubbles.BubbleController: void setBubbleStateChangeListener(com.android.systemui.bubbles.BubbleController.BubbleStateChangeListener)>
<com.android.commands.dpm.Dpm: void onShowUsage(java.io.PrintStream)>
<javax.obex.ServerOperation: int getMaxPacketSize()>
<com.android.uiautomator.core.UiObject: boolean pinchOut(int,int)>
<com.android.systemui.recents.views.TaskView: void onTaskDataUnloaded()>
<com.android.server.MountServiceIdler: boolean onStartJob(android.app.job.JobParameters)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void initializeTexture(com.android.gallery3d.glrenderer.BasicTexture,android.graphics.Bitmap)>
<com.android.packageinstaller.PackageInstallerActivity.OutOfSpaceDialog: android.app.Dialog createDialog(java.lang.CharSequence)>
<com.android.server.accounts.AccountManagerService: boolean addAccountExplicitly(android.accounts.Account,java.lang.String,android.os.Bundle)>
<com.android.printspooler.util.PageRangeUtils: void offset(android.print.PageRange[],int)>
<com.android.systemui.usb.StorageNotification: void start()>
<com.android.location.provider.LocationProviderBase: void onEnable()>
<android.view.autofill.MyAutofillService: void onFillRequest(android.service.autofill.FillRequest,android.os.CancellationSignal,android.service.autofill.FillCallback)>
<com.android.server.display.BrightnessMappingStrategy: boolean isDefaultConfig()>
<com.android.server.biometrics.BiometricServiceBase: long getAuthenticatorId(java.lang.String)>
<javax.obex.ClientOperation: javax.obex.HeaderSet getReceivedHeader()>
<com.android.server.notification.RankingConfig: android.content.pm.ParceledListSlice getNotificationChannels(java.lang.String,int,boolean)>
<javax.obex.ClientOperation: java.io.DataInputStream openDataInputStream()>
<com.android.server.pm.permission.PermissionManagerServiceInternal: void systemReady()>
<android.net.netlink.StructNlAttr: void <init>(short,short,java.nio.ByteOrder)>
<com.android.server.audio.AudioService: void unregisterPlaybackCallback(android.media.IPlaybackConfigDispatcher)>
<android.net.ip.RouterAdvertisementDaemon.RaParams: void <init>(android.net.ip.RouterAdvertisementDaemon.RaParams)>
<android.net.util.InterfaceParams: java.lang.String toString()>
<com.android.server.LockGuard: java.lang.Object installNewLock(int)>
<com.android.server.display.BrightnessMappingStrategy: void clearUserDataPoints()>
<javax.obex.PrivateOutputStream: void write(byte[])>
<com.android.systemui.util.leak.GarbageMonitor.MemoryTile: com.android.systemui.plugins.qs.QSTile.State newTileState()>
<com.android.keyguard.KeyguardUpdateMonitor: void setCurrentUser(int)>
<com.android.systemui.recents.views.DockState.ViewState: void update(android.content.Context)>
<com.android.systemui.ExpandHelper: void setEventSource(android.view.View)>
<android.view.autofill.AbstractAutofillPerfTestCase: void resetService()>
<com.android.server.pm.PackageManagerServiceUtils: void dumpCriticalInfo(android.util.proto.ProtoOutputStream)>
<com.android.settingslib.wifi.AccessPointPreference: boolean shouldShowDivider()>
<com.android.server.appop.AppOpsService: void uidRemoved(int)>
<com.android.server.updates.SmartSelectionInstallReceiver: boolean verifyVersion(int,int)>
<com.android.systemui.qs.PagedTileLayout: void setListening(boolean)>
<com.android.systemui.shared.recents.utilities.AppTrace: void start(java.lang.String)>
<com.android.server.DeviceIdleController: void onStart()>
<com.android.systemui.plugins.PluginInitializerImpl: java.lang.String[] getWhitelistedPlugins(android.content.Context)>
<com.android.systemui.ActivityIntentHelper: android.content.pm.ActivityInfo getTargetActivityInfo(android.content.Intent,int,boolean)>
<com.android.systemui.statusbar.policy.ZenModeControllerImpl: int getCurrentUser()>
<com.android.server.policy.PhoneWindowManager: boolean isKeyguardHostWindow(android.view.WindowManager.LayoutParams)>
<com.android.preload.classdataretrieval.jdwp.JDWPClassDataRetriever: java.lang.String getDebuggeeClassName()>
<com.android.server.display.utils.RollingBuffer: java.lang.String toString()>
<com.android.systemui.statusbar.notification.TransformState: android.view.View getTransformedView()>
<com.android.preload.actions.ComputeThresholdXAction: void <init>(java.lang.String,com.android.preload.DumpTableModel,java.lang.String)>
<com.android.systemui.statusbar.notification.row.NotificationBackgroundView: void setPressedAllowed(boolean)>
<com.android.systemui.statusbar.AlphaOptimizedFrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.server.infra.ServiceNameResolver.NameResolverListener: void onNameResolved(int,java.lang.String,boolean)>
<com.android.systemui.plugins.statusbar.StatusBarStateController.StateListener: void onStatePreChange(int,int)>
<com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer: com.android.systemui.statusbar.notification.row.ExpandableNotificationRow getViewAtPosition(float)>
<com.android.systemui.qs.tileimpl.QSTileView: void handleStateChanged(com.android.systemui.plugins.qs.QSTile.State)>
<com.android.statsd.loadtest.BatteryDataRecorder: void <init>(boolean,int,com.android.internal.os.StatsdConfigProto.TimeUnit,long,int,boolean,boolean,boolean,boolean,boolean)>
<com.android.systemui.statusbar.SysuiStatusBarStateController: float getInterpolatedDozeAmount()>
<com.android.settingslib.widget.AppEntityInfo.Builder: com.android.settingslib.widget.AppEntityInfo.Builder setTitle(java.lang.CharSequence)>
<com.android.systemui.qs.car.CarQSFragment: void setContainer(android.view.ViewGroup)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glBindTexture(int,int)>
<com.android.systemui.statusbar.notification.row.HybridNotificationView: void transformFrom(com.android.systemui.statusbar.TransformableView)>
<com.android.systemui.qs.SignalTileView: com.android.systemui.qs.tileimpl.SlashImageView createSlashImageView(android.content.Context)>
<com.android.keyguard.KeyguardSliceView: void onChanged(androidx.slice.Slice)>
<com.android.systemui.qs.QSPanel: void showDetail(boolean,com.android.systemui.qs.QSPanel.Record)>
<javax.microedition.khronos.opengles.GL10: void glStencilMask(int)>
<com.android.server.policy.WindowManagerPolicy: void setOverrideFoldedArea(android.graphics.Rect)>
<com.android.systemui.statusbar.phone.StatusBar: void dismissKeyboardShortcuts()>
<com.android.systemui.statusbar.phone.NavigationBarFragment: void disable(int,int,int,boolean)>
<com.android.systemui.plugins.FalsingPlugin: com.android.systemui.plugins.FalsingManager getFalsingManager(android.content.Context)>
<com.android.systemui.assist.AssistHandleBehaviorController.BehaviorController: void onAssistantGesturePerformed()>
<com.android.settingslib.deviceinfo.AbstractConnectivityPreferenceController: void onStop()>
<android.net.NetworkStackClient: void start(android.content.Context)>
<android.media.MediaPlayer2: long getDuration(android.media.DataSourceDesc)>
<com.android.server.tv.UinputBridge: void finalize()>
<com.android.server.slice.SliceManagerService: void <init>(android.content.Context)>
<android.net.shared.NetworkMonitorUtils: boolean isValidationRequired(android.net.NetworkCapabilities)>
<com.android.systemui.statusbar.NavigationBarController: void onDisplayRemoved(int)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: android.view.ViewRootImpl getViewRootImpl()>
<com.android.systemui.statusbar.phone.PanelBar: boolean isClosed()>
<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int,int)>
<com.android.keyguard.KeyguardPatternView: void onLayout(boolean,int,int,int,int)>
<com.android.server.usb.descriptors.Usb20ACHeader: byte getControls()>
<com.android.systemui.statusbar.notification.stack.AnimationFilter: com.android.systemui.statusbar.notification.stack.AnimationFilter animateDark()>
<com.android.commands.content.Content: void main(java.lang.String[])>
<com.android.server.hdmi.HdmiCecLocalDevicePlayback: void onStandby(boolean,int)>
<com.android.systemui.statusbar.policy.ZenModeController.Callback: void onEffectsSupressorChanged()>
<com.android.server.pm.Installer: void createUserData(java.lang.String,int,int,int)>
<com.android.keyguard.clock.AnalogClockController: void setColorPalette(boolean,int[])>
<com.android.systemui.qs.QSTileHost: com.android.systemui.statusbar.phone.StatusBarIconController getIconController()>
<com.android.systemui.statusbar.notification.row.NotificationInlineImageCache: void purge()>
<com.android.server.location.RemoteListenerHelper: void logPermissionDisabledEventNotReported(java.lang.String,java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.phone.NavigationBarFragment: void transitionTo(int,boolean)>
<com.android.server.media.MediaSessionService: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.NavigationBarFragment: com.android.systemui.statusbar.phone.NavigationBarTransitions getBarTransitions()>
<com.android.server.pm.UserRestrictionsUtils: boolean canDeviceOwnerChange(java.lang.String)>
<com.android.server.pm.dex.PackageDexUsage: void writeInternal(java.lang.Void)>
<com.android.systemui.qs.tileimpl.SlashImageView: void setState(com.android.systemui.plugins.qs.QSTile.SlashState,android.graphics.drawable.Drawable)>
<com.android.settingslib.graph.BatteryMeterDrawableBase: boolean getPowerSave()>
<com.android.systemui.shared.system.ActivityCompat: void <init>(android.app.Activity)>
<com.android.systemui.assist.AssistHandleCallbacks: void showAndGoDelayed(long,boolean)>
<com.android.preload.actions.AbstractThreadedDeviceSpecificAction: void actionPerformed(java.awt.event.ActionEvent)>
<com.android.server.testing.shadows.ShadowEventLog: int writeEvent(int,java.lang.Object[])>
<com.android.server.infra.AbstractPerUserSystemService: boolean isSetupCompletedLocked()>
<com.android.server.dreams.DreamManagerService: void onStart()>
<com.android.commands.svc.BluetoothCommand: java.lang.String shortHelp()>
<android.media.MediaPlayer2: boolean cancelCommand(java.lang.Object)>
<com.android.systemui.statusbar.phone.NotificationIconContainer: int getIconSize()>
<com.android.systemui.statusbar.policy.NetworkController: boolean hasEmergencyCryptKeeperText()>
<com.android.systemui.volume.CarVolumeDialogComponent: com.android.systemui.plugins.VolumeDialog createDefault()>
<com.android.server.NetworkScorerAppManager: void migrateNetworkScorerAppSettingIfNeeded()>
<com.android.systemui.shared.system.TaskDescriptionCompat: int getPrimaryColor()>
<com.android.systemui.statusbar.phone.StatusIconContainer: void setShouldRestrictIcons(boolean)>
<com.android.server.broadcastradio.hal2.Utils.FuncThrowingRemoteException: java.lang.Object exec()>
<com.android.systemui.doze.DozeHost: void setAnimateWakeup(boolean)>
<com.android.systemui.statusbar.notification.row.ExpandableOutlineView: boolean childNeedsClipping(android.view.View)>
<com.android.server.policy.GlobalActionsProvider: void setGlobalActionsListener(com.android.server.policy.GlobalActionsProvider.GlobalActionsListener)>
<com.android.systemui.appops.AppOpsController: void addCallback(int[],com.android.systemui.appops.AppOpsController.Callback)>
<com.android.systemui.statusbar.phone.NavBarTintController: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)>
<javax.obex.ClientOperation: java.lang.String getType()>
<com.android.server.infra.AbstractPerUserSystemService: android.content.Context getContext()>
<com.android.server.hdmi.HdmiCecLocalDevicePlayback: void disableDevice(boolean,com.android.server.hdmi.HdmiCecLocalDevice.PendingActionClearedCallback)>
<com.android.systemui.statusbar.phone.StatusBarSignalPolicy.WifiIconState: int hashCode()>
<com.android.systemui.shared.system.WindowManagerWrapper: void addPinnedStackListener(android.view.IPinnedStackListener)>
<com.android.systemui.statusbar.phone.ScrimController: void setExpansionAffectsAlpha(boolean)>
<com.android.systemui.qs.QSHost: com.android.systemui.qs.external.TileServices getTileServices()>
<android.multiuser.UserLifecycleTests: void managedProfileUnlock_stopped()>
<javax.microedition.khronos.opengles.GL10: void glMaterialx(int,int,int)>
<com.android.systemui.statusbar.KeyboardShortcuts: void dismiss()>
<com.android.systemui.classifier.brightline.TimeLimitedMotionEventBuffer: android.view.MotionEvent remove(int)>
<com.android.server.notification.NotificationRecord: void setEditChoicesBeforeSending(boolean)>
<com.android.settingslib.deviceinfo.AbstractWifiMacAddressPreferenceController: java.lang.String[] getConnectivityIntents()>
<com.android.settingslib.wifi.TestAccessPointBuilder: com.android.settingslib.wifi.TestAccessPointBuilder setNetworkId(int)>
<com.android.systemui.statusbar.notification.row.NotificationSnooze: void setGutsParent(com.android.systemui.statusbar.notification.row.NotificationGuts)>
<com.android.server.display.whitebalance.DisplayWhiteBalanceController: boolean setCallbacks(com.android.server.display.whitebalance.DisplayWhiteBalanceController.Callbacks)>
<com.android.systemui.statusbar.phone.StatusBarSignalPolicy: void <init>(android.content.Context,com.android.systemui.statusbar.phone.StatusBarIconController)>
<com.android.settingslib.core.lifecycle.ObservableFragment: void onDestroy()>
<com.android.systemui.statusbar.CastDrawable: void onBoundsChange(android.graphics.Rect)>
<com.android.server.Watchdog.HandlerChecker: java.lang.Thread getThread()>
<com.android.printspooler.model.PrintSpoolerService: void updatePrintJobUserConfigurableOptionsNoPersistence(android.print.PrintJobInfo)>
<com.android.preload.DeviceUtils: java.lang.String doShellReturnString(com.android.ddmlib.IDevice,java.lang.String,long,java.util.concurrent.TimeUnit)>
<com.android.systemui.statusbar.GestureRecorder: java.lang.String toJson()>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector description(java.lang.String)>
<com.android.settingslib.notification.ZenDurationDialog: void updateUi(com.android.settingslib.notification.ZenDurationDialog.ConditionTag,android.view.View,int)>
<com.android.server.infra.FrameworkResourcesServiceNameResolver: void dumpShort(java.io.PrintWriter)>
<com.android.systemui.statusbar.NotificationLockscreenUserManager: boolean userAllowsPrivateNotificationsInPublic(int)>
<android.graphics.perftests.PathPerfTest: void testAddRewind()>
<com.android.systemui.statusbar.phone.ButtonInterface: void setVertical(boolean)>
<com.android.photos.DumbBitmapRegionDecoder: int getHeight()>
<com.android.systemui.qs.QSContainerImpl: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.biometrics.BiometricDialogImpl: void start()>
<com.android.server.hdmi.ArcInitiationActionFromAvr: void sendInitiateArc()>
<com.android.server.pm.PackageSetting: int getSharedUserId()>
<com.android.systemui.statusbar.policy.UserSwitcherController.BaseUserAdapter: long getItemId(int)>
<com.android.systemui.qs.QSFooterImpl: void <init>(android.content.Context,android.util.AttributeSet,com.android.systemui.plugins.ActivityStarter,com.android.systemui.statusbar.policy.UserInfoController,com.android.systemui.statusbar.policy.DeviceProvisionedController)>
<com.android.printspooler.model.PrintSpoolerService.PrintSpooler: com.android.printspooler.model.PrintSpoolerService getService()>
<com.android.server.timedetector.SimpleTimeDetectorStrategy: void suggestTime(android.app.timedetector.TimeSignal)>
<com.android.server.IntentResolver: java.util.List queryIntentFromList(android.content.Intent,java.lang.String,boolean,java.util.ArrayList,int)>
<com.android.printservice.recommendation.util.MDNSFilteredDiscovery: void onStartDiscoveryFailed(java.lang.String,int)>
<com.android.server.testing.shadows.ShadowKeyValueBackupTask: void __constructor__(com.android.server.backup.UserBackupManagerService,com.android.server.backup.transport.TransportClient,java.lang.String,java.util.List,com.android.server.backup.DataChangedJournal,com.android.server.backup.keyvalue.KeyValueBackupReporter,com.android.server.backup.internal.OnTaskFinishedListener,java.util.List,boolean,boolean)>
<com.android.systemui.statusbar.phone.StatusBarIconControllerImpl: void removeIconGroup(com.android.systemui.statusbar.phone.StatusBarIconController.IconManager)>
<com.android.systemui.pip.tv.PipManager: void addListener(com.android.systemui.pip.tv.PipManager.Listener)>
<com.android.server.slice.SliceProviderPermissions.SliceAuthority: boolean equals(java.lang.Object)>
<com.android.commands.svc.DataCommand: java.lang.String longHelp()>
<com.android.server.appprediction.AppPredictionPerUserService: void requestPredictionUpdateLocked(android.app.prediction.AppPredictionSessionId)>
<com.android.systemui.statusbar.policy.DateView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: int getEmptyBottomMargin()>
<com.android.server.ConnectivityService: void startCaptivePortalApp(android.net.Network)>
<com.android.server.usb.descriptors.UsbACSelectorUnit: byte getUnitID()>
<com.android.powermodel.PowerReport: com.android.powermodel.AppPower findApp(com.android.powermodel.SpecialApp)>
<com.android.server.AlarmManagerInternal: void registerInFlightListener(com.android.server.AlarmManagerInternal.InFlightListener)>
<com.android.packageinstaller.wear.WearPackageIconProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
<com.android.photos.DumbBitmapRegionDecoder: android.graphics.Bitmap decodeRegion(android.graphics.Rect,android.graphics.BitmapFactory.Options)>
<com.android.systemui.doze.DozeSensors: java.lang.Boolean isProximityCurrentlyFar()>
<com.android.server.slice.PinnedSliceState: android.net.Uri getUri()>
<com.android.systemui.statusbar.phone.KeyguardBouncer: void removeView()>
<com.android.settingslib.CustomEditTextPreferenceCompat.CustomPreferenceDialogFragment: void onDialogClosed(boolean)>
<com.android.server.audio.AudioService: int getStreamMinVolume(int)>
<com.android.server.display.DisplayAdapter.Listener: void onTraversalRequested()>
<com.android.systemui.statusbar.phone.ScreenPinningNotify: void showPinningStartToast()>
<com.android.systemui.usb.UsbDebuggingSecondaryUserActivity: void onStart()>
<com.android.systemui.Dependency: java.lang.Object getDependency(com.android.systemui.Dependency.DependencyKey)>
<com.android.systemui.recents.views.RecentsView: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)>
<com.android.server.notification.ZenModeHelper: int getCurrentInstanceCount(android.content.ComponentName)>
<com.android.powermodel.component.CpuProfile.Builder: void setIdleMa(float)>
<com.android.systemui.shared.system.InputMonitorCompat: void dispose()>
<com.android.server.pm.PackageManagerService: void freeStorage(java.lang.String,long,int)>
<com.android.systemui.qs.tiles.DndTile: boolean isVisible(android.content.Context)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.CharSequence getLongSupportMessageForUser(android.content.ComponentName,int)>
<com.android.systemui.shared.system.InputConsumerController.RegistrationListener: void onRegistrationChanged(boolean)>
<com.android.systemui.statusbar.notification.row.HybridGroupManager: void <init>(android.content.Context,android.view.ViewGroup)>
<com.android.systemui.statusbar.car.CarStatusBar: void showBatteryView()>
<com.android.server.notification.NotificationAdjustmentExtractor: void setConfig(com.android.server.notification.RankingConfig)>
<com.android.server.rollback.RollbackManagerService: void <init>(android.content.Context)>
<com.android.server.pm.BackgroundDexOptService: boolean onStopJob(android.app.job.JobParameters)>
<com.android.settingslib.media.BluetoothMediaDevice: java.lang.String getName()>
<com.android.server.pm.UserManagerService: void onBeforeStartUser(int)>
<com.android.systemui.statusbar.phone.PanelView: boolean shouldUseDismissingAnimation()>
<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: android.view.View getMenuView()>
<com.android.settingslib.media.MediaManager: void stopScan()>
<com.android.powermodel.RawBatteryStats: com.android.powermodel.RawBatteryStats.Record getSingle(java.lang.Class,int)>
<com.android.server.usb.descriptors.report.HTMLReportCanvas: void <init>(com.android.server.usb.descriptors.UsbDescriptorParser,java.lang.StringBuilder)>
<android.media.MediaController2.Builder: android.media.MediaController2.Builder setControllerCallback(java.util.concurrent.Executor,android.media.MediaController2.ControllerCallback)>
<com.android.server.DynamicSystemService: void binderDied()>
<com.android.server.devicepolicy.DevicePolicyManagerService.RestrictionsListener: void <init>(android.content.Context)>
<com.android.gallery3d.glrenderer.UploadedTexture: void recycle()>
<com.android.systemui.statusbar.notification.row.ExpandableView: android.view.ViewGroup getTransientContainer()>
<com.android.settingslib.dream.DreamBackend: void setActiveDream(android.content.ComponentName)>
<com.android.systemui.statusbar.phone.StatusBarWindowController: void setDozeScreenBrightness(int)>
<android.net.INetworkMonitorCallbacks: void hideProvisioningNotification()>
<com.google.android.startop.iorap.CheckHelpers: void checkStateInRange(int,int)>
<com.android.wallpapercropper.WallpaperCropActivity: int getRotationFromExif(android.content.Context,android.net.Uri)>
<com.android.server.wallpaper.IWallpaperManagerService: void onUnlockUser(int)>
<com.android.server.media.MediaSessionRecord: int getOptimisticVolume()>
<com.android.systemui.qs.tiles.CellularTile: void handleSetListening(boolean)>
<com.android.settingslib.core.lifecycle.ObservableDialogFragment: void onPrepareOptionsMenu(android.view.Menu)>
<com.android.server.accessibility.MagnificationController.ControllerContext: android.content.Context getContext()>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: boolean isDiscovering()>
<com.android.server.location.MockProvider: long getStatusUpdateTime()>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: void onLayout()>
<android.graphics.perftests.PaintMeasureTextTest: void <init>(java.lang.String,int,java.lang.String)>
<com.android.systemui.volume.ZenModePanel.Callback: void onPrioritySettings()>
<com.android.systemui.recents.misc.FreePathInterpolator: void <init>(android.graphics.Path)>
<com.android.systemui.shared.recents.model.Task: void dump(java.lang.String,java.io.PrintWriter)>
<com.android.systemui.statusbar.phone.StatusBar: void onVoiceAssistHintStarted()>
<com.android.systemui.settings.ToggleSliderView: void setMirrorController(com.android.systemui.statusbar.policy.BrightnessMirrorController)>
<com.android.uiautomator.core.Configurator: long getWaitForIdleTimeout()>
<com.android.preload.ui.SequenceUI: com.android.preload.ui.SequenceUI action(javax.swing.Action)>
<com.android.systemui.statusbar.policy.UserInfoControllerImpl: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.StatusBarNotificationPresenter: void onUpdateRowStates()>
<com.android.systemui.qs.external.TileServices: com.android.systemui.qs.external.TileServiceManager onCreateTileService(android.content.ComponentName,android.service.quicksettings.Tile)>
<com.android.server.Watchdog.HandlerChecker: java.lang.String getName()>
<com.android.powermodel.AttributionKey: void <init>(int,java.util.Set)>
<com.android.commands.sm.Sm: void runForget()>
<com.android.server.pm.KeySetManagerService: boolean packageIsSignedByLPr(java.lang.String,com.android.server.pm.KeySetHandle)>
<com.android.server.SystemService: java.lang.Object getLocalService(java.lang.Class)>
<com.android.printspooler.ui.PageAdapter: int getFilePageCount()>
<com.android.printspooler.ui.PrintActivity: void onStart()>
<com.android.settingslib.wifi.TestAccessPointBuilder: com.android.settingslib.wifi.TestAccessPointBuilder setActive(boolean)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: void switchSubDeviceContent()>
<com.android.settingslib.utils.AsyncLoaderCompat: void onStartLoading()>
<com.android.systemui.qs.GlobalSetting: void setValue(int)>
<com.android.server.attention.AttentionManagerService: com.android.server.attention.AttentionManagerService.UserState peekCurrentUserStateLocked()>
<com.android.server.policy.PhoneWindowManager: void systemReady()>
<javax.microedition.khronos.opengles.GL10: void glFogfv(int,float[],int)>
<com.android.systemui.qs.SecureSetting: int getValue()>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean canCameraGestureBeLaunched(boolean)>
<com.android.server.policy.WindowManagerPolicy: android.graphics.Rect getFoldedArea()>
<com.android.server.slice.SliceClientPermissions.SliceAuthority: java.lang.String toString()>
<com.android.keyguard.KeyguardSecurityContainer.SecurityCallback: void reset()>
<com.android.systemui.pip.phone.PipTouchState: boolean isUserInteracting()>
<com.android.server.biometrics.EnumerateClient: boolean onEnumerationResult(android.hardware.biometrics.BiometricAuthenticator.Identifier,int)>
<com.android.systemui.statusbar.policy.RemoteInputView: void setRevealParameters(int,int,int)>
<android.media.MediaPlayer2: android.util.Size getVideoSize()>
<com.android.server.biometrics.BiometricServiceBase: java.lang.String getLockoutBroadcastPermission()>
<com.android.server.IntentResolver: java.util.ArrayList findFilters(android.content.IntentFilter)>
<com.android.server.NetworkManagementService: void setNetworkPermission(int,int)>
<com.android.systemui.statusbar.CrossFadeHelper: void fadeIn(android.view.View)>
<com.android.server.devicepolicy.DevicePolicyCacheImpl: int getPasswordQuality(int)>
<com.android.systemui.util.wakelock.SettableWakeLock: boolean isAcquired()>
<com.android.systemui.shared.recents.model.TaskKeyCache: void remove(com.android.systemui.shared.recents.model.Task.TaskKey)>
<com.android.settingslib.deviceinfo.StorageManagerVolumeProvider: long getTotalBytes(android.app.usage.StorageStatsManager,android.os.storage.VolumeInfo)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void requestDisallowLongPress()>
<com.android.server.locksettings.recoverablekeystore.PlatformEncryptionKey: void <init>(int,android.security.keystore.AndroidKeyStoreSecretKey)>
<com.android.settingslib.development.AbstractEnableAdbPreferenceController: boolean isAvailable()>
<com.android.server.AnyMotionDetector: int getStationaryStatus()>
<com.android.systemui.statusbar.policy.BluetoothController: boolean isBluetoothEnabled()>
<com.android.systemui.statusbar.phone.HeadsUpAppearanceController: void updateHeader(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.settingslib.bluetooth.PanProfile: int getPreferred(android.bluetooth.BluetoothDevice)>
<com.android.keyguard.KeyguardHostView: com.android.keyguard.KeyguardSecurityModel.SecurityMode getSecurityMode()>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationViewWrapper: boolean shouldClearBackgroundOnReapply()>
<android.database.sqlite.SQLiteTokenizer: java.util.List tokenize(java.lang.String,int)>
<com.android.settingslib.core.lifecycle.ObservablePreferenceFragment: boolean onOptionsItemSelected(android.view.MenuItem)>
<com.android.settingslib.CustomDialogPreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.systemui.qs.QSPanel: void setPageListener(com.android.systemui.qs.PagedTileLayout.PageListener)>
<com.android.server.pm.PackageInstallerSession: void commit(android.content.IntentSender,boolean)>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper.Callback: com.android.systemui.statusbar.KeyguardAffordanceView getLeftIcon()>
<com.android.systemui.qs.QSPanel: com.android.systemui.qs.QSTileRevealController getQsTileRevealController()>
<com.android.server.notification.NotificationUsageStats.SingleNotificationStats: void onVisibilityChanged(boolean)>
<javax.microedition.khronos.opengles.GL11: void glColorPointer(int,int,int,int)>
<com.android.systemui.volume.VolumeDialogControllerImpl: void <init>(android.content.Context)>
<com.android.server.deviceidle.TvConstraintController: void <init>(android.content.Context,android.os.Handler)>
<com.android.systemui.statusbar.policy.Clock: void onTuningChanged(java.lang.String,java.lang.String)>
<com.android.systemui.recents.RecentsActivity: void onBusEvent(com.android.systemui.recents.events.ui.ShowIncompatibleAppOverlayEvent)>
<com.android.server.infra.AbstractPerUserSystemService: boolean isTemporaryServiceSetLocked()>
<com.android.server.notification.SnoozeHelper: void dump(java.io.PrintWriter,com.android.server.notification.NotificationManagerService.DumpFilter)>
<com.android.systemui.statusbar.phone.PanelView: void setExpansionListener(com.android.systemui.statusbar.phone.NotificationPanelView.PanelExpansionListener)>
<com.android.systemui.statusbar.phone.StatusBar: void createNavigationBar(com.android.internal.statusbar.RegisterStatusBarResult)>
<com.android.systemui.statusbar.notification.collection.NotificationData: com.android.systemui.statusbar.notification.collection.NotificationEntry get(java.lang.String)>
<com.android.server.biometrics.fingerprint.FingerprintUtils: void addBiometricForUser(android.content.Context,int,android.hardware.biometrics.BiometricAuthenticator.Identifier)>
<com.android.commands.hid.Device: void <init>(int,java.lang.String,int,int,byte[],byte[],android.util.SparseArray)>
<com.android.server.location.GeofenceManager: void onProviderEnabled(java.lang.String)>
<com.android.preload.actions.ScanAllPackagesAction: void run()>
<com.android.systemui.qs.QSTileHost: void changeTiles(java.util.List,java.util.List)>
<com.android.keyguard.KeyguardSliceView.Row: boolean hasOverlappingRendering()>
<com.android.keyguard.KeyguardPatternView: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.server.media.MediaRouterService: void setSelectedRoute(android.media.IMediaRouterClient,java.lang.String,boolean)>
<com.android.systemui.statusbar.notification.row.NotificationSnooze: void setSnoozeListener(com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper)>
<com.android.systemui.recents.events.ui.DraggingInRecentsEndedEvent: void <init>(float)>
<com.android.server.timedetector.TimeDetectorStrategy: void initialize(com.android.server.timedetector.TimeDetectorStrategy.Callback)>
<com.android.systemui.qs.PathInterpolatorBuilder: void <init>(android.graphics.Path)>
<com.android.preload.actions.ExportAction: void actionPerformed(java.awt.event.ActionEvent)>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: boolean panelEnabled()>
<com.android.systemui.egg.MLand: float lerp(float,float,float)>
<com.android.server.tv.TvRemoteProviderWatcher.ProviderMethods: void removeProvider(com.android.server.tv.TvRemoteProviderProxy)>
<com.android.server.statusbar.StatusBarManagerInternal: void toggleRecentApps()>
<com.android.systemui.plugins.GlobalActions: void showShutdownUi(boolean,java.lang.String)>
<com.android.systemui.statusbar.notification.row.HybridNotificationView: void onFinishInflate()>
<com.android.systemui.statusbar.policy.HotspotControllerImpl: void setHotspotEnabled(boolean)>
<com.android.systemui.statusbar.policy.FlashlightController.FlashlightListener: void onFlashlightError()>
<com.android.systemui.recents.model.TaskStack: com.android.systemui.shared.recents.model.Task getLaunchTarget()>
<com.android.systemui.recents.RecentsActivity: void onBusEvent(com.android.systemui.recents.events.activity.DockedFirstAnimationFrameEvent)>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationTemplateViewWrapper: int getExtraMeasureHeight()>
<com.android.systemui.statusbar.phone.LockscreenWallpaper.WallpaperDrawable: com.android.systemui.statusbar.phone.LockscreenWallpaper.WallpaperDrawable.ConstantState getConstantState()>
<com.android.server.inputmethod.InputMethodManagerService: void showInputMethodPickerFromSystem(com.android.internal.view.IInputMethodClient,int,int)>
<com.android.settingslib.media.PhoneMediaDevice: void disconnect()>
<com.android.systemui.statusbar.policy.ZenModeController: void setZen(int,android.net.Uri,java.lang.String)>
<com.android.server.usb.UsbAlsaJackDetector: boolean jackDetectCallback()>
<com.android.server.slice.SliceProviderPermissions: java.util.Collection getAuthorities()>
<android.media.MediaSession2Service: void onDestroy()>
<com.android.systemui.statusbar.policy.HeadsUpManager: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.statusbar.phone.NotificationPanelView: void animateCloseQs(boolean)>
<com.android.systemui.colorextraction.SysuiColorExtractor: com.android.internal.colorextraction.ColorExtractor.GradientColors getNeutralColors()>
<com.android.server.IpSecService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.keyguard.clock.AnalogClockController: android.graphics.Bitmap getThumbnail()>
<com.android.server.inputmethod.InputMethodManagerService: boolean isInputMethodPickerShownForTest()>
<com.android.preload.ui.NullProgressMonitor: void start(int)>
<com.android.systemui.statusbar.phone.DoubleTapHelper: void <init>(android.view.View,com.android.systemui.statusbar.phone.DoubleTapHelper.ActivationListener,com.android.systemui.statusbar.phone.DoubleTapHelper.DoubleTapListener,com.android.systemui.statusbar.phone.DoubleTapHelper.SlideBackListener,com.android.systemui.statusbar.phone.DoubleTapHelper.DoubleTapLogListener)>
<com.android.settingslib.graph.SignalDrawable: int getEmptyState(int)>
<com.android.settingslib.suggestions.SuggestionControllerMixin: void dismissSuggestion(android.service.settings.suggestions.Suggestion)>
<com.android.systemui.keyguard.KeyguardViewMediator: boolean isSecure(int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onOverscrollTopChanged(float,boolean)>
<com.android.settingslib.inputmethod.InputMethodAndSubtypeEnablerManagerCompat: void init(androidx.preference.PreferenceFragmentCompat,java.lang.String,androidx.preference.PreferenceScreen)>
<com.android.systemui.statusbar.phone.NavigationBarInflaterView: void onNavigationModeChanged(int)>
<com.android.systemui.shared.recents.model.TaskKeyCache: java.lang.Object get(com.android.systemui.shared.recents.model.Task.TaskKey)>
<com.android.systemui.recents.views.TaskViewThumbnail: void <init>(android.content.Context)>
<com.android.server.notification.ManagedServices: void dump(java.io.PrintWriter,com.android.server.notification.NotificationManagerService.DumpFilter)>
<com.android.systemui.statusbar.phone.ReverseLinearLayout.ReverseRelativeLayout: void reverse(boolean)>
<com.android.keyguard.ViewMediatorCallback: void keyguardDonePending(boolean,int)>
<com.android.printspooler.widget.PageContentView: void onPageContentAvailable(android.graphics.drawable.BitmapDrawable)>
<com.android.location.provider.GeofenceProvider: android.os.IBinder getBinder()>
<android.perftests.utils.OneTimeSettingsListener: void onChange(boolean,android.net.Uri)>
<com.android.localtransport.LocalTransport: void cancelFullBackup()>
<com.android.systemui.recents.RecentsImpl: void clearLastPipTime()>
<com.android.systemui.statusbar.phone.ScrimController: com.android.systemui.util.wakelock.WakeLock createWakeLock()>
<com.android.systemui.statusbar.NotificationHeaderUtil.DataExtractor: java.lang.Object extractData(com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<com.android.server.location.LocationRequestStatistics: void stopRequesting(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.policy.InflatedSmartReplies: com.android.systemui.statusbar.policy.InflatedSmartReplies.SmartRepliesAndActions getSmartRepliesAndActions()>
<com.android.systemui.glwallpaper.ImageWallpaperRenderer: void updateAmbientMode(boolean,long)>
<com.android.systemui.tuner.TunerService.Tunable: void onTuningChanged(java.lang.String,java.lang.String)>
<com.android.server.accessibility.AccessibilityManagerService.UserState: int getClientState()>
<com.android.systemui.statusbar.policy.AccessPointControllerImpl: void removeAccessPointCallback(com.android.systemui.statusbar.policy.NetworkController.AccessPointController.AccessPointCallback)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setQsExpanded(boolean)>
<com.android.server.notification.SystemConditionProviderService: void onBootComplete()>
<com.android.server.lights.Light: void turnOff()>
<com.android.systemui.tuner.TunerService: void setValue(java.lang.String,int)>
<com.android.systemui.pip.tv.PipMenuActivity: void onPipMenuActionsChanged(android.content.pm.ParceledListSlice)>
<com.android.systemui.plugins.statusbar.StatusBarStateController.StateListener: void onStateChanged(int)>
<com.android.systemui.statusbar.notification.row.ExpandableView: void applyViewState()>
<com.android.systemui.shared.plugins.PluginManagerImpl: void addPluginListener(java.lang.String,com.android.systemui.plugins.PluginListener,java.lang.Class,boolean)>
<com.android.settingslib.drawable.CircleFramedDrawable: void <init>(android.graphics.Bitmap,int)>
<com.android.server.DeviceIdleController: int[] getAppIdTempWhitelistInternal()>
<com.android.settingslib.drawable.UserIconDrawable: void setColorFilter(android.graphics.ColorFilter)>
<com.android.settingslib.bluetooth.BluetoothDiscoverableTimeoutReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onClosingFinished()>
<com.android.systemui.qs.tiles.WorkModeTile: void <init>(com.android.systemui.qs.QSHost,com.android.systemui.statusbar.phone.ManagedProfileController)>
<com.android.server.audio.AudioService: void stopBluetoothSco(android.os.IBinder)>
<com.android.server.voiceinteraction.DatabaseHelper: void onCreate(android.database.sqlite.SQLiteDatabase)>
<com.android.systemui.tuner.ClipboardView: void stopListening()>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void setNeedsInput(boolean)>
<com.android.keyguard.KeyguardStatusView: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void onPanelTrackingStarted()>
<com.android.systemui.qs.tiles.RotationLockTile: java.lang.CharSequence getTileLabel()>
<com.android.server.pm.ShortcutService: android.content.pm.ParceledListSlice getShareTargets(java.lang.String,android.content.IntentFilter,int)>
<com.android.proxyhandler.ProxyService: void onCreate()>
<com.android.server.notification.NotificationManagerService.DumpFilter: com.android.server.notification.NotificationManagerService.DumpFilter parseFromArguments(java.lang.String[])>
<com.android.providers.settings.SettingsProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
<android.text.BoringLayoutCreateDrawPerfTest: void <init>(java.lang.String,int,android.text.NonEditableTextGenerator.TextType,boolean)>
<com.android.printservice.recommendation.plugin.hp.HPRecommendationPlugin: void <init>(android.content.Context)>
<com.android.settingslib.development.AbstractLogpersistPreferenceController: java.lang.String getPreferenceKey()>
<com.android.systemui.glwallpaper.ImageRevealHelper.RevealStateListener: void onRevealEnd()>
<com.android.systemui.recents.views.TaskView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.server.pm.permission.BasePermission: boolean isAppOp()>
<com.android.server.audio.AudioService.VolumeController: java.lang.String toString()>
<com.android.powermodel.RawBatteryStats.Warning: java.lang.String getMessage()>
<com.android.systemui.tuner.DemoModeFragment: void onDestroy()>
<com.android.systemui.stackdivider.DividerView: void stopDragging(int,com.android.internal.policy.DividerSnapAlgorithm.SnapTarget,long,long,long,android.view.animation.Interpolator)>
<com.android.systemui.statusbar.phone.BiometricUnlockController: void startWakeAndUnlock(int)>
<com.android.systemui.statusbar.phone.StatusIconContainer.StatusIconState: void applyToView(android.view.View)>
<com.android.systemui.shared.system.TonalCompat: com.android.systemui.shared.system.TonalCompat.ExtractionInfo extractDarkColors(android.app.WallpaperColors)>
<com.android.server.content.ContentService: void syncAsUser(android.content.SyncRequest,int,java.lang.String)>
<com.android.packageinstaller.television.UninstallAlertFragment: int onProvideTheme()>
<com.android.server.content.SyncManager: void resetTodayStats()>
<com.android.systemui.statusbar.StatusBarMobileView: void setSlot(java.lang.String)>
<com.android.server.locksettings.LockSettingsService: void systemReady()>
<com.android.systemui.util.leak.LeakDetector: void <init>(com.android.systemui.util.leak.TrackedCollections,com.android.systemui.util.leak.TrackedGarbage,com.android.systemui.util.leak.TrackedObjects)>
<com.android.server.attention.AttentionManagerService: void freeIfInactiveLocked()>
<com.android.server.pm.permission.PermissionsState: int[] computeGids(int)>
<android.perftests.utils.BenchmarkState: boolean keepRunning()>
<com.android.server.notification.CountdownConditionProvider: void onUnsubscribe(android.net.Uri)>
<com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.statusbar.phone.NotificationGroupAlertTransferHelper: boolean isAlertTransferPending(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.keyguard.KeyguardHostView: boolean handleBackKey()>
<com.android.systemui.plugins.qs.QSTile: void setListening(java.lang.Object,boolean)>
<com.android.settingslib.CustomDialogPreferenceCompat: boolean isDialogOpen()>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void handleSystemKey(int)>
<com.android.server.wallpaper.WallpaperManagerService.Lifecycle: void <init>(android.content.Context)>
<com.android.systemui.shared.system.ActivityOptionsCompat: android.app.ActivityOptions makeFreeformOptions()>
<com.android.server.notification.ManagedServices.UserProfiles: boolean isManagedProfile(int)>
<com.android.server.notification.ZenModeHelper: java.lang.String addAutomaticZenRule(android.app.AutomaticZenRule,java.lang.String)>
<com.android.server.appprediction.RemoteAppPredictionService: void notifyLaunchLocationShown(android.app.prediction.AppPredictionSessionId,java.lang.String,android.content.pm.ParceledListSlice)>
<com.android.server.security.VerityUtils: java.lang.String getFsveritySignatureFilePath(java.lang.String)>
<com.android.systemui.shared.plugins.PluginManagerImpl: com.android.systemui.plugins.Plugin getOneShotPlugin(java.lang.String,java.lang.Class)>
<com.android.server.infra.ServiceNameResolver: void resetTemporaryService(int)>
<com.android.systemui.AutoReinflateContainer: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.activity.LaunchTaskEvent)>
<com.android.server.pm.permission.PermissionManagerServiceInternal: int checkUidPermission(java.lang.String,android.content.pm.PackageParser.Package,int,int)>
<com.android.server.ConnectivityService: void startNattKeepalive(android.net.Network,int,android.net.ISocketKeepaliveCallback,java.lang.String,int,java.lang.String)>
<com.android.systemui.statusbar.policy.AccessibilityController: void removeStateChangedCallback(com.android.systemui.statusbar.policy.AccessibilityController.AccessibilityStateChangedCallback)>
<com.android.commands.svc.NfcCommand: java.lang.String longHelp()>
<com.android.server.policy.PhoneWindowManager: void setDismissImeOnBackKeyPressed(boolean)>
<com.android.systemui.statusbar.policy.AccessibilityManagerWrapper: void removeCallback(android.view.accessibility.AccessibilityManager.AccessibilityServicesStateChangeListener)>
<com.android.systemui.screenrecord.RecordingService: android.content.Intent getStartIntent(android.content.Context,int,android.content.Intent,boolean,boolean)>
<com.android.systemui.statusbar.phone.KeyguardStatusBarView: void onThemeChanged()>
<com.android.server.display.whitebalance.DisplayWhiteBalanceFactory: com.android.server.display.whitebalance.DisplayWhiteBalanceController create(android.os.Handler,android.hardware.SensorManager,android.content.res.Resources)>
<com.android.systemui.stackdivider.DividerView: void stopDragging(int,float,boolean,boolean)>
<com.android.server.autofill.Helper: android.app.assist.AssistStructure.ViewNode findViewNodeByAutofillId(android.app.assist.AssistStructure,android.view.autofill.AutofillId)>
<com.android.systemui.statusbar.phone.StatusBarWindowController: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.statusbar.NotificationUiAdjustment: com.android.systemui.statusbar.NotificationUiAdjustment extractFromNotificationEntry(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.commands.input.Input.InputCmd: void run(int,int)>
<com.android.systemui.keyguard.KeyguardSliceProvider: void notifyChange()>
<com.android.systemui.statusbar.phone.PanelView: boolean flingExpands(float,float,float,float)>
<com.android.printspooler.ui.PrintProgressFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.android.systemui.statusbar.phone.LockscreenWallpaper.WallpaperDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>
<com.android.systemui.statusbar.notification.row.ExpandableOutlineView: boolean needsOutline()>
<android.view.ViewShowHidePerfTest: void testRemove()>
<com.android.systemui.bubbles.BubbleStackView: void updateContentDescription()>
<com.android.systemui.statusbar.policy.MobileSignalController: void updateConnectivity(java.util.BitSet,java.util.BitSet)>
<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice getInstantApps(int)>
<com.android.server.uri.UriGrantsManagerInternal: boolean checkUriPermission(com.android.server.uri.GrantUri,int,int)>
<com.android.settingslib.inputmethod.InputMethodAndSubtypeUtil: void saveInputMethodSubtypeList(androidx.preference.PreferenceFragment,android.content.ContentResolver,java.util.List,boolean)>
<com.android.systemui.statusbar.phone.NotificationGroupManager: void onHeadsUpPinned(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.uiautomator.core.UiObject: boolean swipeUp(int)>
<com.android.systemui.statusbar.phone.ScrimController: void setKeyguardOccluded(boolean)>
<com.android.server.NetworkManagementService: void removeInterfaceAlert(java.lang.String)>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: void updateBackgroundTint()>
<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexivOES(int[],int)>
<com.android.server.NativeDaemonEvent: int getCmdNumber()>
<com.android.systemui.util.leak.LeakDetector: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.uiautomator.core.UiObject: void <init>(com.android.uiautomator.core.UiSelector)>
<com.android.server.biometrics.BiometricServiceBase: void authenticateInternal(com.android.server.biometrics.BiometricServiceBase.AuthenticationClientImpl,long,java.lang.String,int,int,int)>
<com.android.systemui.qs.TileLayout: void addTileView(com.android.systemui.qs.QSPanel.TileRecord)>
<com.android.systemui.qs.QSFooter: void disable(int,int,boolean)>
<com.android.server.biometrics.BiometricServiceBase.BiometricServiceListener: void <init>(android.hardware.biometrics.IBiometricServiceReceiverInternal)>
<com.android.server.ConnectivityService: java.util.List getVpnLockdownWhitelist(int)>
<com.android.settingslib.net.NetworkCycleDataLoader: com.android.settingslib.net.NetworkCycleDataLoader.Builder builder(android.content.Context)>
<com.android.server.vr.EnabledComponentsObserver: com.android.server.vr.EnabledComponentsObserver build(android.content.Context,android.os.Handler,java.lang.String,android.os.Looper,java.lang.String,java.lang.String,java.lang.Object,java.util.Collection)>
<com.android.server.content.ContentService.Lifecycle: void onStart()>
<com.android.printservice.recommendation.plugin.google.CloudPrintPlugin: void start(com.android.printservice.recommendation.PrintServicePlugin.PrinterDiscoveryCallback)>
<com.android.systemui.tuner.TunablePadding: void onTuningChanged(java.lang.String,java.lang.String)>
<com.android.server.biometrics.fingerprint.FingerprintService: void <init>(android.content.Context)>
<com.android.systemui.DependencyProvider: android.os.Handler provideHandler()>
<com.android.uiautomator.core.InstrumentationUiAutomatorBridge: boolean isScreenOn()>
<com.android.uiautomator.core.Tracer: com.android.uiautomator.core.Tracer getInstance()>
<com.android.printservice.recommendation.plugin.google.CloudPrintPlugin: java.lang.CharSequence getPackageName()>
<com.android.gallery3d.common.Utils: int nextPowerOf2(int)>
<com.android.systemui.glwallpaper.GLWallpaperRenderer: void onSurfaceCreated()>
<com.android.systemui.statusbar.phone.DozeParameters: float getScreenBrightnessDoze()>
<com.android.systemui.power.PowerUI.WarningsUI: void userSwitched()>
<com.android.server.autofill.AutofillManagerService: void onServiceRemoved(com.android.server.autofill.AutofillManagerServiceImpl,int)>
<com.android.server.role.FinancialSmsManager.Command: void run(android.service.sms.IFinancialSmsService)>
<javax.microedition.khronos.opengles.GL10: void glLightModelxv(int,int[],int)>
<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService.PackageFreezer freezePackageForInstall(java.lang.String,int,java.lang.String)>
<javax.microedition.khronos.opengles.GL10: void glColorPointer(int,int,int,java.nio.Buffer)>
<com.android.systemui.assist.AssistManager: void replaceDrawable(android.widget.ImageView,android.content.ComponentName,java.lang.String,boolean)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void unbindCameraPrewarmService(boolean)>
<com.android.keyguard.KeyguardSimPukView: void onPause()>
<com.android.server.uri.UriPermissionOwner: void dump(java.io.PrintWriter,java.lang.String)>
<com.android.settingslib.bluetooth.MapClientProfile: void setPreferred(android.bluetooth.BluetoothDevice,boolean)>
<com.android.systemui.qs.PagedTileLayout: void removeTile(com.android.systemui.qs.QSPanel.TileRecord)>
<com.android.systemui.statusbar.NavigationBarController: void disableAnimationsDuringHide(int,long)>
<com.android.systemui.statusbar.policy.AccessPointControllerImpl: void onConnectedChanged()>
<com.android.settingslib.deviceinfo.AbstractIpAddressPreferenceController: void displayPreference(androidx.preference.PreferenceScreen)>
<com.android.systemui.statusbar.phone.NotificationPanelView: com.android.systemui.statusbar.phone.KeyguardBottomAreaView getKeyguardBottomAreaView()>
<com.android.systemui.qs.tiles.BatterySaverTile: void handleDestroy()>
<com.android.settingslib.location.InjectedSetting: android.content.Intent getServiceIntent()>
<com.android.systemui.statusbar.notification.stack.AnimationFilter: void applyCombination(java.util.ArrayList)>
<com.android.settingslib.wifi.TestAccessPointBuilder: com.android.settingslib.wifi.TestAccessPointBuilder setSpeed(int)>
<com.android.systemui.BatteryMeterView: void setForceShowPercent(boolean)>
<com.android.settingslib.core.lifecycle.events.OnSaveInstanceState: void onSaveInstanceState(android.os.Bundle)>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean hasPulsingNotifications()>
<com.android.systemui.statusbar.policy.EmergencyCryptkeeperText: void update()>
<com.android.systemui.shared.system.SyncRtSurfaceTransactionApplierCompat: void <init>(android.view.View)>
<com.android.server.accessibility.KeyboardInterceptor: void <init>(com.android.server.accessibility.AccessibilityManagerService,com.android.server.policy.WindowManagerPolicy,android.os.Handler)>
<com.android.systemui.classifier.FalsingManagerProxy: void onTouchEvent(android.view.MotionEvent,int,int)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: int getConnectedWifiLevel()>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void onDreamingStopped()>
<com.android.systemui.qs.tiles.UiModeNightTile: java.lang.CharSequence getTileLabel()>
<com.android.server.PinnerService: void <init>(android.content.Context)>
<com.android.systemui.qs.tiles.UserTile: void <init>(com.android.systemui.qs.QSHost,com.android.systemui.statusbar.policy.UserSwitcherController,com.android.systemui.statusbar.policy.UserInfoController)>
<com.android.server.inputmethod.InputMethodManagerService: java.util.List getEnabledInputMethodSubtypeList(java.lang.String,boolean)>
<com.android.systemui.volume.VolumeDialogImpl: void onUiModeChanged()>
<com.android.systemui.settings.ToggleSliderView: void setOnChangedListener(com.android.systemui.settings.ToggleSlider.Listener)>
<com.android.keyguard.KeyguardUpdateMonitor.StrongAuthTracker: boolean hasUserAuthenticatedSinceBoot()>
<com.android.server.usb.descriptors.UsbASFormat: void report(com.android.server.usb.descriptors.report.ReportCanvas)>
<com.android.server.appbinding.finders.AppServiceFinder: java.lang.String getAppDescription()>
<android.media.MediaPlayer2: java.lang.Object attachAuxEffect(int)>
<com.android.printspooler.widget.CustomErrorEditText: java.lang.CharSequence getError()>
<android.net.NetworkMonitorManager: boolean notifyNetworkCapabilitiesChanged(android.net.NetworkCapabilities)>
<com.android.server.location.GnssStatusListenerHelper: void onNmeaReceived(long,java.lang.String)>
<com.android.systemui.AutoReinflateContainer: void inflateLayoutImpl()>
<com.android.systemui.doze.DozeHost.PulseCallback: void onPulseStarted()>
<com.android.packageinstaller.UninstallEventReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.android.server.LocationManagerService: com.android.internal.location.ProviderProperties getProviderProperties(java.lang.String)>
<javax.microedition.khronos.opengles.GL10: void glMultMatrixf(float[],int)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onStartedGoingToSleep(int)>
<com.android.server.ConnectivityService: boolean isTetheringSupported(java.lang.String)>
<com.android.server.biometrics.BiometricUtils: java.util.List getBiometricsForUser(android.content.Context,int)>
<com.android.systemui.qs.tiles.NfcTile: java.lang.String composeChangeAnnouncement()>
<com.android.systemui.statusbar.StatusBarIconView: void executeOnLayout(java.lang.Runnable)>
<com.android.systemui.qs.car.CarQSFragment: boolean isShowingDetail()>
<com.android.server.pm.permission.BasePermission: boolean isPermissionDefinitionChanged()>
<com.android.server.media.RemoteDisplayProviderWatcher.Callback: void removeProvider(com.android.server.media.RemoteDisplayProviderProxy)>
<com.android.systemui.qs.tileimpl.QSTileImpl: void longClick()>
<com.android.server.trust.TrustAgentWrapper: boolean isBound()>
<com.android.keyguard.KeyguardUpdateMonitor: boolean isUserInLockdown(int)>
<com.android.packageinstaller.PackageInstallerApplication: void onCreate()>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void reset(boolean)>
<android.app.backup.ForwardingBackupAgent: void onRestore(android.app.backup.BackupDataInput,long,android.os.ParcelFileDescriptor)>
<com.android.systemui.recents.views.TaskViewHeader: void setDimAlpha(float)>
<com.android.server.biometrics.Constants: java.lang.String tagRemoveStartError()>
<android.net.netlink.StructInetDiagSockId: java.lang.String toString()>
<com.android.systemui.assist.AssistHandleBehaviorController.BehaviorController: void dump(java.io.PrintWriter,java.lang.String)>
<com.android.systemui.assist.ui.PerimeterPathGuide: float getRegionCenter(com.android.systemui.assist.ui.PerimeterPathGuide.Region)>
<com.android.server.display.BrightnessTracker: void start(float)>
<com.android.keyguard.EmergencyButton: void onFinishInflate()>
<com.android.systemui.qs.tiles.FlashlightTile: void handleClick()>
<com.android.systemui.shared.plugins.PluginInitializer: void handleWtfs()>
<com.android.systemui.shared.system.RotationWatcher: void enable()>
<com.android.systemui.recents.LegacyRecentsImpl: void onBootCompleted()>
<com.android.systemui.statusbar.phone.NotificationPanelView: float getOpeningHeight()>
<com.android.server.pm.ShortcutBitmapSaver: void saveBitmapLocked(android.content.pm.ShortcutInfo,int,android.graphics.Bitmap.CompressFormat,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setPasswordMinimumNonLetter(android.content.ComponentName,int,boolean)>
<com.android.systemui.statusbar.policy.KeyguardMonitor: void notifyKeyguardDoneFading()>
<com.android.server.usb.UsbService: void requestDevicePermission(android.hardware.usb.UsbDevice,java.lang.String,android.app.PendingIntent)>
<com.android.keyguard.KeyguardHostView: boolean hasDismissActions()>
<com.android.systemui.qs.external.PackageManagerAdapter: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int,int)>
<com.android.settingslib.core.lifecycle.Lifecycle: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>
<com.android.gallery3d.exif.ExifInterface: java.io.OutputStream getExifWriterStream(java.io.OutputStream)>
<com.android.server.utils.PriorityDump.PriorityDumper: void dumpNormal(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],boolean)>
<com.android.server.biometrics.EnrollClient: boolean shouldVibrate()>
<com.android.settingslib.accounts.AuthenticatorHelper: boolean hasAccountPreferences(java.lang.String)>
<com.android.systemui.qs.QSFooter: void setExpansion(float)>
<com.android.systemui.statusbar.notification.row.ExpandableOutlineView: void setExtraWidthForClipping(float)>
<com.android.systemui.qs.QSFragment: void setPanelView(com.android.systemui.plugins.qs.QS.HeightListener)>
<com.android.systemui.qs.tiles.WifiTile: void handleSecondaryClick()>
<com.android.systemui.DependencyProvider: com.android.systemui.statusbar.policy.ConfigurationController provideConfigurationController(android.content.Context)>
<com.android.systemui.shared.system.RecentsAnimationControllerCompat: void setCancelWithDeferredScreenshot(boolean)>
<com.android.server.usb.UsbAlsaManager: void dump(com.android.internal.util.dump.DualDumpOutputStream,java.lang.String,long)>
<com.android.systemui.pip.phone.PipTouchState: void setAllowTouches(boolean)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setHideSensitiveForIntrinsicHeight(boolean)>
<com.android.systemui.volume.VolumeDialogControllerImpl: void removeCallback(com.android.settingslib.volume.MediaSessions.Callbacks)>
<com.android.systemui.statusbar.notification.stack.AmbientState: void setPanelFullWidth(boolean)>
<com.android.server.pm.dex.PackageDexUsage: void readInternal(java.lang.Void)>
<com.android.settingslib.wifi.AccessPointPreference: void onBindViewHolder(androidx.preference.PreferenceViewHolder)>
<com.android.commands.sm.Sm: void runIdleMaint()>
<com.android.systemui.plugins.qs.QS.HeightListener: void onQsHeightChanged()>
<com.android.systemui.HardwareBgDrawable: void setRotatedBackground(boolean)>
<com.android.systemui.statusbar.notification.NotificationEntryManager: void addNotificationLifetimeExtender(com.android.systemui.statusbar.NotificationLifetimeExtender)>
<com.android.printspooler.ui.PrintActivity: void onSecurePdfFile()>
<com.android.server.DeviceIdleController: boolean restoreSystemPowerWhitelistAppInternal(java.lang.String)>
<com.android.systemui.tuner.LockscreenFragment.Adapter: void addItem(com.android.systemui.tuner.LockscreenFragment.Item)>
<com.android.server.testing.shadows.ShadowBackupDataInput: void skipEntityData()>
<com.android.settingslib.location.InjectedSetting.Builder: com.android.settingslib.location.InjectedSetting.Builder setSettingsActivity(java.lang.String)>
<com.android.commands.am.Am: void runInstrument()>
<com.android.server.locksettings.recoverablekeystore.RecoverableKeyStoreManager: java.util.Map recoverKeyChainSnapshot(java.lang.String,byte[],java.util.List)>
<com.android.systemui.statusbar.phone.StatusBar: void postQSRunnableDismissingKeyguard(java.lang.Runnable)>
<com.android.server.input.InputManagerService.WiredAccessoryCallbacks: void systemReady()>
<com.android.systemui.statusbar.phone.NavigationBarTransitions: float addDarkIntensityListener(com.android.systemui.statusbar.phone.NavigationBarTransitions.DarkIntensityListener)>
<com.android.packageinstaller.PackageUtil: android.view.View initSnippet(android.view.View,java.lang.CharSequence,android.graphics.drawable.Drawable)>
<com.android.server.pm.PackageManagerService: void flushPackageRestrictionsAsUser(int)>
<com.android.keyguard.KeyguardUpdateMonitor: boolean isSimPinSecure(com.android.internal.telephony.IccCardConstants.State)>
<com.android.systemui.qs.tiles.WorkModeTile: java.lang.CharSequence getTileLabel()>
<com.android.systemui.shared.system.SyncRtSurfaceTransactionApplierCompat: void scheduleApply(com.android.systemui.shared.system.SyncRtSurfaceTransactionApplierCompat.SurfaceParams[])>
<com.android.server.HardwarePropertiesManagerService: float[] getDeviceTemperatures(java.lang.String,int,int)>
<com.android.settingslib.media.BluetoothMediaManager: void onDeviceAdded(com.android.settingslib.bluetooth.CachedBluetoothDevice)>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.ui.dragndrop.DragEndEvent)>
<com.android.server.storage.AppFuseBridge.MountScope: void <init>(int,int)>
<com.android.systemui.qs.tileimpl.QSTileImpl: void removeCallback(android.graphics.drawable.Drawable.Callback)>
<com.android.server.testing.shadows.ShadowRecoveryController: void syncAllKeys()>
<com.android.systemui.recents.views.TaskStackView: void onStackTasksUpdated(com.android.systemui.recents.model.TaskStack)>
<com.android.printservice.recommendation.util.MDNSFilteredDiscovery: void onDiscoveryStopped(java.lang.String)>
<com.android.server.pm.permission.BasePermission: boolean isConfigurator()>
<com.android.systemui.statusbar.notification.row.NotificationContentInflater: void addInflationFlags(int)>
<com.android.server.ConnectivityService: java.lang.String getMobileProvisioningUrl()>
<com.android.preload.actions.AbstractThreadedAction: void actionPerformed(java.awt.event.ActionEvent)>
<com.android.systemui.statusbar.StatusBarIconView: void setIsInShelf(boolean)>
<android.net.NetworkStackClient: void dump(java.io.PrintWriter)>
<com.android.settingslib.core.instrumentation.MetricsFeatureProvider: int getMetricsCategory(java.lang.Object)>
<com.android.systemui.util.leak.GarbageMonitor.MemoryTile: void <init>(com.android.systemui.qs.QSHost)>
<com.android.keyguard.clock.DefaultClockController: android.graphics.Bitmap getThumbnail()>
<com.android.server.notification.PreferencesHelper: void onLocaleChanged(android.content.Context,int)>
<com.android.systemui.statusbar.OperatorNameView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.statusbar.phone.StatusBar: void appTransitionFinished(int)>
<com.android.settingslib.drawer.DashboardCategory: void sortTiles()>
<android.processor.view.inspector.InspectableClassModel.Accessor: java.lang.String invocation()>
<com.android.uiautomator.core.UiDevice: void waitForIdle(long)>
<com.android.systemui.qs.QSHost: void openPanels()>
<com.android.systemui.statusbar.phone.DoubleTapHelper.SlideBackListener: boolean onSlideBack()>
<com.android.systemui.pip.phone.PipTouchHandler: com.android.systemui.pip.phone.PipMotionHelper getMotionHelper()>
<com.android.systemui.shared.plugins.PluginEnabler: boolean isEnabled(android.content.ComponentName)>
<com.android.systemui.egg.MLand: float frand()>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: long getDiscoveryEndMillis()>
<com.android.systemui.statusbar.notification.MessagingLayoutTransformState: void initFrom(android.view.View,com.android.systemui.statusbar.notification.TransformState.TransformInfo)>
<com.android.gallery3d.exif.ExifTag: boolean setTimeValue(long)>
<com.android.server.content.SyncStorageEngine.AuthorityInfo: java.lang.String toString()>
<com.android.server.soundtrigger.SoundTriggerHelper: android.hardware.soundtrigger.SoundTrigger.ModuleProperties getModuleProperties()>
<com.android.systemui.SystemUIApplication: void startServicesIfNeeded()>
<com.android.systemui.power.PowerNotificationWarnings: void showLowBatteryWarning(boolean)>
<com.android.server.uri.UriGrantsManagerInternal: void grantUriPermissionFromIntent(int,java.lang.String,android.content.Intent,com.android.server.uri.UriPermissionOwner,int)>
<com.android.systemui.statusbar.KeyguardIndicationController.BaseKeyguardCallback: void onBiometricError(int,java.lang.String,android.hardware.biometrics.BiometricSourceType)>
<com.android.systemui.statusbar.phone.StatusBar: void onUiModeChanged()>
<com.android.server.notification.NotificationRecord: int getLifespanMs(long)>
<com.android.server.pm.UserRestrictionsUtils: boolean isEmpty(android.os.Bundle)>
<com.android.uiautomator.testrunner.TestCaseCollector: void addTestClass(java.lang.String,java.lang.String)>
<com.android.keyguard.KeyguardHostView: void onCancelClicked()>
<com.android.server.pm.PackageManagerService: void deleteApplicationCacheFiles(java.lang.String,android.content.pm.IPackageDataObserver)>
<com.android.systemui.statusbar.phone.NavigationPrototypeController: int getEdgeSensitivityWidth()>
<com.android.settingslib.widget.ActionButtonsPreference: com.android.settingslib.widget.ActionButtonsPreference setButton2OnClickListener(android.view.View.OnClickListener)>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcherScrim: void <init>(android.content.Context)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setMasterVolumeMuted(android.content.ComponentName,boolean)>
<com.android.server.autofill.ui.FillUi.Callback: void requestHideFillUi()>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean isScrolledToBottom()>
<com.android.systemui.qs.tiles.UserDetailItemView: void bind(java.lang.String,android.graphics.drawable.Drawable,int)>
<com.android.server.policy.PermissionPolicyService: void onStartUser(int)>
<com.android.settingslib.inputmethod.InputMethodAndSubtypeEnablerManager: void <init>(androidx.preference.PreferenceFragment)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void onUiModeChanged()>
<android.perftests.utils.Stats: long getPercentile95()>
<com.android.systemui.qs.QSDetailItems.Callback: void onDetailItemClick(com.android.systemui.qs.QSDetailItems.Item)>
<com.android.systemui.usb.UsbResolverActivity: void onDestroy()>
<com.android.keyguard.KeyguardSecurityViewFlipper: void showMessage(java.lang.CharSequence,android.content.res.ColorStateList)>
<com.android.settingslib.drawer.Tile: int describeContents()>
<com.android.server.rollback.AppDataRollbackHelper: void <init>(com.android.server.pm.Installer)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void onUnlockMethodStateChanged()>
<com.android.keyguard.KeyguardUpdateMonitor.BatteryStatus: boolean isPluggedIn()>
<com.android.systemui.statusbar.policy.ExtensionController.ExtensionBuilder: com.android.systemui.statusbar.policy.ExtensionController.ExtensionBuilder withUiMode(int,java.util.function.Supplier)>
<com.android.printspooler.ui.PrintActivity: void onDestroy()>
<com.android.systemui.statusbar.StatusBarWifiView: com.android.systemui.statusbar.StatusBarWifiView fromContext(android.content.Context,java.lang.String)>
<com.android.systemui.statusbar.notification.AnimatableProperty: int getAnimatorTag()>
<com.android.systemui.statusbar.policy.DeadZone: boolean onTouchEvent(android.view.MotionEvent)>
<android.text.PrecomputedTextMemoryUsageTest: void testMemoryUsage_Latin_Hyphenation()>
<com.android.commands.sm.Sm: void runSetEmulateFbe()>
<com.android.systemui.classifier.AccelerationClassifier: void <init>(com.android.systemui.classifier.ClassifierData)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: com.android.systemui.statusbar.notification.row.NotificationContentView getPublicLayout()>
<com.android.systemui.qs.customize.CustomizeTileView: android.widget.TextView getAppLabel()>
<com.android.server.pm.Policy.PolicyBuilder: com.android.server.pm.Policy.PolicyBuilder addInnerPackageMapOrThrow(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.AmbientPulseManager: void extendPulse()>
<com.android.server.vr.SettingsObserver.SettingChangeListener: void onSettingRestored(java.lang.String,java.lang.String,int)>
<com.android.server.print.RemotePrintSpooler.PrintSpoolerCallbacks: void onPrintJobQueued(android.print.PrintJobInfo)>
<com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem: boolean checkSupportAndSetSystemAudioMode(boolean)>
<android.net.netlink.StructNdaCacheInfo: long lastConfirmed()>
<com.android.systemui.bubbles.BubbleController: void onConfigChanged(android.content.res.Configuration)>
<com.android.systemui.qs.QSFragment: void animateHeaderSlidingOut()>
<com.android.systemui.statusbar.StatusBarStateControllerImpl: boolean isKeyguardRequested()>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: void onParentHeightUpdate()>
<com.android.server.display.AmbientBrightnessStatsTracker: void readStats(java.io.InputStream)>
<com.android.systemui.statusbar.RemoteInputController: boolean isSpinning(java.lang.String,java.lang.Object)>
<com.android.settingslib.bluetooth.MapProfile: int getPreferred(android.bluetooth.BluetoothDevice)>
<com.android.systemui.recents.events.ui.focus.NavigateTaskViewEvent: void <init>(com.android.systemui.recents.events.ui.focus.NavigateTaskViewEvent.Direction)>
<com.android.settingslib.bluetooth.A2dpProfile: int getNameResource(android.bluetooth.BluetoothDevice)>
<com.android.media.remotedisplay.RemoteDisplay: void setDescription(java.lang.String)>
<com.android.server.pm.PackageSetting: boolean isProduct()>
<com.android.systemui.shared.recents.model.Task.TaskKey: boolean equals(java.lang.Object)>
<android.os.ParcelArrayPerfTest: void timeWriteLongArray()>
<com.android.systemui.statusbar.notification.stack.AnimationFilter: boolean shouldAnimateProperty(android.util.Property)>
<javax.obex.PrivateOutputStream: void close()>
<com.android.server.hdmi.HdmiCecController.NativeWrapper: long nativeInit(com.android.server.hdmi.HdmiCecController,android.os.MessageQueue)>
<com.android.systemui.statusbar.phone.StatusBarNotificationPresenter: void <init>(android.content.Context,com.android.systemui.statusbar.phone.NotificationPanelView,com.android.systemui.statusbar.phone.HeadsUpManagerPhone,com.android.systemui.statusbar.phone.StatusBarWindowView,android.view.ViewGroup,com.android.systemui.statusbar.phone.DozeScrimController,com.android.systemui.statusbar.phone.ScrimController,com.android.systemui.statusbar.notification.ActivityLaunchAnimator,com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager,com.android.systemui.statusbar.notification.NotificationAlertingManager,com.android.systemui.statusbar.notification.collection.NotificationRowBinderImpl)>
<com.android.systemui.keyguard.KeyguardViewMediator: void setAodShowing(boolean)>
<com.android.photos.BitmapRegionTileSource.BitmapSource: int getRotation()>
<com.android.systemui.recents.OverviewProxyRecentsImpl: void showRecentApps(boolean)>
<com.android.systemui.statusbar.notification.stack.AnimationFilter: com.android.systemui.statusbar.notification.stack.AnimationFilter animateHideSensitive()>
<com.android.server.contentcapture.ContentCaptureManagerService: void enforceCallingPermissionForManagement()>
<com.android.uiautomator.core.UiScrollable: boolean scrollToEnd(int,int)>
<com.android.server.usb.descriptors.UsbConfigDescriptor: int getMaxPower()>
<com.android.server.location.AbstractLocationProvider: void setProperties(com.android.internal.location.ProviderProperties)>
<com.android.systemui.screenrecord.ScreenRecordDialog: void onActivityResult(int,int,android.content.Intent)>
<com.android.systemui.qs.tiles.BluetoothTile.BluetoothDetailAdapter: boolean getToggleEnabled()>
<com.android.server.biometrics.face.FaceService: com.android.server.biometrics.BiometricServiceBase.DaemonWrapper getDaemonWrapper()>
<com.android.server.location.GnssMeasurementsProvider: void onGpsEnabledChanged()>
<android.media.MediaController2: void close()>
<com.android.server.usb.descriptors.Usb10ACOutputTerminal: void <init>(int,byte,byte,int)>
<com.android.server.input.InputManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.graphics.perftests.TypefaceCreatePerfTest: void testCreate_fromFamily()>
<com.android.systemui.classifier.ProximityClassifier: java.lang.String getTag()>
<com.android.systemui.statusbar.policy.SecurityControllerImpl: void <init>(android.content.Context,android.os.Handler)>
<com.android.server.pm.PackageManagerService: android.util.ArraySet getOptimizablePackages()>
<com.android.packageinstaller.wear.InstallTask: void safeClose(java.io.Closeable)>
<com.android.server.slice.DirtyTracker.Persistable: void writeTo(org.xmlpull.v1.XmlSerializer)>
<com.android.systemui.qs.tileimpl.QSTileBaseView: void handleStateChanged(com.android.systemui.plugins.qs.QSTile.State)>
<com.android.systemui.shared.recents.model.Task: void <init>(com.android.systemui.shared.recents.model.Task.TaskKey,android.graphics.drawable.Drawable,com.android.systemui.shared.recents.model.ThumbnailData,java.lang.String,java.lang.String,int,int,boolean,boolean,boolean,boolean,android.app.ActivityManager.TaskDescription,int,android.content.ComponentName,boolean)>
<com.android.systemui.statusbar.policy.NetworkController.SignalCallback: void setSubs(java.util.List)>
<com.android.systemui.statusbar.AmbientPulseManager.OnAmbientChangedListener: void onAmbientStateChanged(com.android.systemui.statusbar.notification.collection.NotificationEntry,boolean)>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm.TaskStackLayoutAlgorithmCallbacks: void onFocusStateChanged(int,int)>
<com.android.systemui.statusbar.phone.PanelBar: void onRestoreInstanceState(android.os.Parcelable)>
<com.android.settingslib.core.lifecycle.ObservableDialogFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>
<com.android.systemui.colorextraction.SysuiColorExtractor: void setHasMediaArtwork(boolean)>
<com.android.settingslib.media.InfoMediaDevice: android.graphics.drawable.Drawable getIcon()>
<com.android.systemui.qs.external.CustomTile: void onTileChanged(android.content.ComponentName)>
<com.android.systemui.qs.tiles.CastTile: com.android.systemui.plugins.qs.QSTile.BooleanState newTileState()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setGutsView(com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin.MenuItem)>
<com.android.systemui.statusbar.policy.ZenModeController: boolean isZenAvailable()>
<com.android.server.search.SearchManagerService: void <init>(android.content.Context)>
<android.media.Session2Token: int hashCode()>
<com.android.settingslib.CustomDialogPreference.CustomPreferenceDialogFragment: void onDialogClosed(boolean)>
<com.android.systemui.qs.external.TileServiceManager: void setLastUpdate(long)>
<com.android.systemui.statusbar.phone.NavigationBarFragment: void setSystemUiVisibility(int,int,int,int,int,android.graphics.Rect,android.graphics.Rect,boolean)>
<com.android.settingslib.bluetooth.A2dpProfile: boolean connect(android.bluetooth.BluetoothDevice)>
<com.android.mediadrm.signer.MediaDrmSigner.Certificate: byte[] getWrappedPrivateKey()>
<com.android.systemui.statusbar.phone.ScrimController: void onColorsChanged(com.android.internal.colorextraction.ColorExtractor,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getUserProvisioningState()>
<com.android.server.usb.UsbService: long getScreenUnlockedFunctions()>
<com.android.systemui.statusbar.car.hvac.TemperatureTextView: void setTemp(float)>
<com.android.server.display.whitebalance.DisplayWhiteBalanceController: void updateDisplayColorTemperature()>
<com.android.systemui.qs.tileimpl.QSIconViewImpl: android.view.View createIcon()>
<com.android.systemui.pip.phone.PipAccessibilityInteractionConnection: void clearAccessibilityFocus()>
<com.android.server.infra.AbstractMasterSystemService: void dumpLocked(java.lang.String,java.io.PrintWriter)>
<com.android.systemui.statusbar.notification.CustomInterpolatorTransformation: boolean transformFrom(com.android.systemui.statusbar.notification.TransformState,com.android.systemui.statusbar.TransformableView,float)>
<com.android.systemui.plugins.PluginFragment: android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle)>
<com.android.server.audio.AudioEventLogger.Event: java.lang.String eventToString()>
<android.net.ip.IIpClient: void setTcpBufferSizes(java.lang.String)>
<android.media.Controller2Link: void cancelSessionCommand(int)>
<com.android.server.display.AutomaticBrightnessController.Callbacks: void updateBrightness()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: boolean isAddOrRemoveAnimationPending()>
<com.android.server.ConsumerIrService: boolean hasIrEmitter()>
<com.android.systemui.statusbar.notification.stack.SectionHeaderView: android.view.View getContentView()>
<com.android.server.pm.PackageKeySetData: void removeAllUpgradeKeySets()>
<com.android.statementservice.retriever.AbstractAsset: int lookupKey()>
<com.android.systemui.pip.phone.PipTouchState: android.graphics.PointF getDownTouchDelta()>
<android.perftests.utils.OneTimeSettingsListener: void assertCalled()>
<com.android.settingslib.applications.ApplicationsState.Session: void onPause()>
<com.google.android.startop.iorap.AppLaunchEvent: void <init>(android.os.Parcel)>
<com.android.systemui.statusbar.phone.PanelView: float getPeekHeight()>
<com.android.systemui.statusbar.AlertingNotificationManager: boolean shouldExtendLifetime(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.systemui.plugins.NotificationListenerController.NotificationProvider: void removeNotification(android.service.notification.StatusBarNotification)>
<com.android.server.accessibility.AccessibilityManagerService: void persistComponentNamesToSettingLocked(java.lang.String,java.util.Set,int)>
<android.text.StaticLayoutPerfTest: void testCreate_FixedText_NoStyle_Greedy_NoHyphenation()>
<com.android.systemui.statusbar.car.CarNavigationButton: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.pip.phone.PipAppOpsListener: void onActivityPinned(java.lang.String)>
<javax.microedition.khronos.opengles.GL10: void glFlush()>
<com.android.settingslib.notification.ZenDurationDialog: android.app.Dialog createDialog()>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void setHeadsUpAnimatingAway(boolean)>
<com.android.server.audio.AudioService.VolumeController: boolean suppressAdjustment(int,int,boolean)>
<com.android.server.notification.ManagedServices: boolean checkType(android.os.IInterface)>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: void onDensityOrFontScaleChanged()>
<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: boolean shouldShowGutsOnSnapOpen()>
<javax.microedition.khronos.opengles.GL11: void glGetBufferParameteriv(int,int,int[],int)>
<com.android.settingslib.RestrictedPreference: void checkRestrictionAndSetDisabled(java.lang.String)>
<com.android.server.storage.DiskStatsLoggingService: void schedule(android.content.Context)>
<com.android.server.location.LocationRequestStatistics.PackageProviderKey: boolean equals(java.lang.Object)>
<com.android.server.notification.NotificationRecord: java.lang.String getGlobalSortKey()>
<com.android.systemui.qs.QSFooterImpl: void updateEverything()>
<com.android.printspooler.model.PrintSpoolerService: java.io.File generateFileForPrintJob(android.content.Context,android.print.PrintJobId)>
<com.android.statsd.dogfood.MainActivity: void onCreate(android.os.Bundle)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean isLowPriority()>
<com.android.systemui.shared.plugins.PluginInstanceManager: void destroy()>
<com.android.systemui.shared.system.InputChannelCompat.InputEventReceiver: void dispose()>
<com.android.systemui.egg.MLand: boolean onKeyUp(int,android.view.KeyEvent)>
<com.android.server.notification.PriorityExtractor: void setZenHelper(com.android.server.notification.ZenModeHelper)>
<android.media.Media2HTTPService: android.media.Media2HTTPConnection makeHTTPConnection()>
<com.android.systemui.globalactions.GlobalActionsLayout: android.view.ViewGroup getListView()>
<com.android.server.biometrics.BiometricServiceBase.H: void handleMessage(android.os.Message)>
<com.android.systemui.statusbar.policy.RemoteInputView: android.app.PendingIntent getPendingIntent()>
<com.android.systemui.classifier.brightline.BrightLineFalsingManager: void onNotificationDoubleTap(boolean,float,float)>
<com.android.systemui.statusbar.policy.SmartReplyConstants: boolean requiresTargetingP()>
<com.android.keyguard.KeyguardPinBasedInputView: void resetPasswordText(boolean,boolean)>
<com.android.systemui.shared.system.SyncRtSurfaceTransactionApplierCompat.SurfaceParams: void <init>(com.android.systemui.shared.system.SurfaceControlCompat,float,android.graphics.Matrix,android.graphics.Rect,int,float)>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: boolean shouldShowGutsOnSnapOpen()>
<com.android.server.pm.UserManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.settingslib.RestrictedLockUtilsInternal: void setTextViewAsDisabledByAdmin(android.content.Context,android.widget.TextView,boolean)>
<com.android.systemui.recents.events.activity.DismissRecentsToHomeAnimationStarted: void <init>(boolean)>
<com.android.systemui.qs.tileimpl.QSTileBaseView: android.graphics.drawable.Drawable newTileBackground()>
<com.android.server.policy.WindowManagerPolicy: void setCurrentUserLw(int)>
<com.android.systemui.plugins.statusbar.StatusBarStateController: void addCallback(com.android.systemui.plugins.statusbar.StatusBarStateController.StateListener)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.util.List getKeepUninstalledPackages(android.content.ComponentName,java.lang.String)>
<com.android.systemui.statusbar.phone.StatusBar: void startActivity(android.content.Intent,boolean,boolean,int)>
<com.android.systemui.volume.VolumeComponent: void register()>
<com.android.systemui.classifier.FalsingManagerImpl: void onLeftAffordanceOn()>
<com.android.server.policy.WindowManagerPolicy: android.view.KeyEvent dispatchUnhandledKey(com.android.server.policy.WindowManagerPolicy.WindowState,android.view.KeyEvent,int)>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: boolean hasSameBgColor(com.android.systemui.statusbar.notification.row.ActivatableNotificationView)>
<android.os.ParcelPerfTest: void timeReadExceptionWithStackTraceParceling()>
<com.android.systemui.statusbar.phone.NotificationIconAreaController: void setupShelf(com.android.systemui.statusbar.NotificationShelf)>
<com.android.server.accessibility.AbstractAccessibilityServiceConnection.SystemSupport: android.view.accessibility.IAccessibilityInteractionConnectionCallback replaceCallbackIfNeeded(android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,int,long)>
<com.android.systemui.statusbar.phone.NavigationBarTransitions: void init()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setChildrenContainer(com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer)>
<com.android.settingslib.RestrictedSwitchPreference: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.uiautomator.core.AccessibilityNodeInfoDumper: void dumpWindowToFile(android.view.accessibility.AccessibilityNodeInfo,int,int,int)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onRefreshBatteryInfo(com.android.keyguard.KeyguardUpdateMonitor.BatteryStatus)>
<com.android.server.display.DisplayModeDirector: void dump(java.io.PrintWriter)>
<com.android.server.notification.PreferencesHelper: void permanentlyDeleteNotificationChannel(java.lang.String,int,java.lang.String)>
<com.android.keyguard.KeyguardStatusView: void onDetachedFromWindow()>
<com.android.settingslib.core.lifecycle.events.OnResume: void onResume()>
<com.android.settingslib.CustomEditTextPreferenceCompat: void onBindDialogView(android.view.View)>
<com.android.server.NetworkManagementService: android.net.NetworkStats getNetworkStatsDetail()>
<com.android.systemui.statusbar.notification.stack.ViewState: float getFinalTranslationY(android.view.View)>
<com.android.server.accessibility.AccessibilityManagerService.SecurityPolicy: boolean canGetAccessibilityNodeInfoLocked(com.android.server.accessibility.AbstractAccessibilityServiceConnection,int)>
<com.android.keyguard.KeyguardSimPukView: int getPromptReasonStringRes(int)>
<com.android.settingslib.drawable.UserIconDrawable: void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long)>
<com.android.gallery3d.exif.ExifTag: boolean setValue(java.lang.String)>
<com.android.systemui.statusbar.phone.NavBarTintController: void <init>(com.android.systemui.statusbar.phone.NavigationBarView,com.android.systemui.statusbar.phone.LightBarTransitionsController)>
<com.android.systemui.stackdivider.DividerWindowManager: void setSlippery(boolean)>
<com.android.server.ConnectivityService: boolean isAlwaysOnVpnPackageSupported(int,java.lang.String)>
<com.android.server.biometrics.fingerprint.FingerprintUtils: void removeBiometricForUser(android.content.Context,int,int)>
<com.android.systemui.bubbles.animation.PhysicsAnimationLayout: void removeViewAt(int)>
<com.android.systemui.qs.tiles.CastTile: com.android.systemui.plugins.qs.DetailAdapter getDetailAdapter()>
<com.android.systemui.recents.views.RecentsView: void onBusEvent(com.android.systemui.recents.events.ui.dragndrop.DragEndCancelledEvent)>
<com.android.server.location.ComprehensiveCountryDetector: android.location.Country getLastKnownLocationBasedCountry()>
<com.android.server.notification.NotificationManagerService.DumpFilter: boolean matches(android.content.ComponentName)>
<com.android.systemui.SystemUI: void onBootCompleted()>
<com.android.server.usb.descriptors.ByteStream: byte getByte()>
<com.android.server.usb.descriptors.Usb20ASFormatIIEx: int getMaxBitRate()>
<com.android.server.pm.permission.PermissionSettings: void readPermissions(android.util.ArrayMap,org.xmlpull.v1.XmlPullParser)>
<com.android.server.contentcapture.ContentCaptureMetricsLogger: void writeServiceEvent(int,java.lang.String,java.lang.String)>
<android.media.MediaPlayer2.DrmPreparationInfo.Builder: android.media.MediaPlayer2.DrmPreparationInfo.Builder setMimeType(java.lang.String)>
<com.android.server.appprediction.AppPredictionManagerServiceShellCommand: void <init>(com.android.server.appprediction.AppPredictionManagerService)>
<android.text.NonEditableTextGenerator.RandomCharSequenceGenerator: java.lang.CharSequence buildLatinSequence()>
<com.android.systemui.statusbar.notification.collection.NotificationData: java.util.ArrayList getActiveNotifications()>
<com.android.systemui.qs.tiles.WifiTile.WifiDetailAdapter: java.lang.CharSequence getTitle()>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getGlobalPrivateDnsMode(android.content.ComponentName)>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb: java.util.Map getAllKeys(int,int,int)>
<com.android.server.statusbar.StatusBarManagerService: void onGlobalActionsHidden()>
<com.android.systemui.classifier.FalsingManagerImpl: void onScreenOff()>
<com.android.server.TelephonyRegistry: void notifyOpportunisticSubscriptionInfoChanged()>
<com.android.settingslib.widget.ActionButtonsPreference: void onBindViewHolder(androidx.preference.PreferenceViewHolder)>
<com.android.settingslib.CustomDialogPreference: void onDialogClosed(boolean)>
<com.android.systemui.statusbar.notification.AboveShelfObserver: void <init>(android.view.ViewGroup)>
<com.android.systemui.qs.QSSecurityFooter: java.lang.CharSequence getCaCertsMessage(boolean,boolean,boolean)>
<android.media.Session2Token: int getType()>
<com.android.server.display.utils.History: void <init>(int)>
<com.android.wallpapercropper.WallpaperCropActivity.BitmapCropTask: void <init>(android.content.Context,java.lang.String,android.graphics.RectF,int,int,int,boolean,boolean,java.lang.Runnable)>
<com.android.systemui.shared.system.WindowCallbacksCompat: boolean attach()>
<com.android.server.audio.AudioService: boolean isStreamAffectedByMute(int)>
<com.android.systemui.classifier.FalsingManagerImpl: void onAffordanceSwipingStarted(boolean)>
<com.android.systemui.tuner.TunerSwitch: boolean persistBoolean(boolean)>
<com.android.server.pm.dex.PackageDexUsage.PackageUseInfo: java.util.Set getLoadingPackages(java.lang.String)>
<javax.microedition.khronos.opengles.GL10: void glGetIntegerv(int,java.nio.IntBuffer)>
<com.android.systemui.pip.tv.PipControlsView: void <init>(android.content.Context)>
<com.android.server.pm.PackageManagerService: boolean isOnlyCoreApps()>
<com.android.server.autofill.RemoteFillService.FillServiceCallbacks: void onFillRequestTimeout(int)>
<com.android.printspooler.model.PrintSpoolerProvider: void destroy()>
<com.android.gallery3d.glrenderer.GLES20Canvas: void dumpStatisticsAndClear()>
<com.android.systemui.statusbar.phone.LockIcon: void onLocaleListChanged()>
<com.android.server.usb.descriptors.UsbHIDDescriptor: int getDescriptorLen()>
<com.android.systemui.statusbar.phone.NotificationIconAreaController: android.view.View getNotificationInnerAreaView()>
<com.android.server.emergency.EmergencyAffordanceService: void onStart()>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: boolean isHearingAidDevice()>
<com.android.systemui.tuner.TunerService: void setValue(java.lang.String,java.lang.String)>
<com.android.settingslib.development.SystemPropPoker: void poke()>
<com.android.keyguard.KeyguardHostView: java.lang.CharSequence getAccessibilityTitleForCurrentMode()>
<com.android.server.infra.AbstractPerUserSystemService: void dumpLocked(java.lang.String,java.io.PrintWriter)>
<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void setSimCallManagerPackagesProvider(android.content.pm.PackageManagerInternal.PackagesProvider)>
<com.android.systemui.statusbar.phone.DarkIconDispatcherImpl: void removeDarkReceiver(android.widget.ImageView)>
<com.android.systemui.recents.RecentsActivity: void onBusEvent(com.android.systemui.recents.events.ui.HideIncompatibleAppOverlayEvent)>
<com.android.server.usb.descriptors.UsbACTerminal: byte getTerminalID()>
<com.android.server.ServiceWatcher: void runOnBinder(com.android.server.ServiceWatcher.BinderRunner)>
<com.android.server.media.MediaSessionRecord: java.lang.String getPackageName()>
<com.android.systemui.CarSystemUIFactory: com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager createStatusBarKeyguardViewManager(android.content.Context,com.android.keyguard.ViewMediatorCallback,com.android.internal.widget.LockPatternUtils)>
<com.android.settingslib.media.MediaManager: void dispatchDeviceAdded(com.android.settingslib.media.MediaDevice)>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean onMiddleClicked()>
<com.android.server.ServiceWatcher.BinderRunner: void run(android.os.IBinder)>
<com.android.systemui.biometrics.BiometricDialogView: void handleResetMessage()>
<com.android.server.infra.AbstractPerUserSystemService: com.android.server.infra.AbstractMasterSystemService getMaster()>
<com.android.systemui.appops.AppOpsControllerImpl: void removeCallback(int[],com.android.systemui.appops.AppOpsController.Callback)>
<com.android.settingslib.widget.AdaptiveIconShapeDrawable: void <init>(android.content.res.Resources)>
<com.android.server.notification.BubbleExtractor: void setZenHelper(com.android.server.notification.ZenModeHelper)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: long performRemoveAnimation(long,long,float,boolean,float,java.lang.Runnable,android.animation.AnimatorListenerAdapter)>
<com.android.settingslib.bluetooth.MapProfile: java.lang.String toString()>
<com.android.server.timezone.RulesManagerService.Lifecycle: void onStart()>
<com.android.gallery3d.glrenderer.GLCanvas: void save(int)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void handleShowShutdownUi(boolean,java.lang.String)>
<com.android.systemui.statusbar.NotificationLockscreenUserManagerImpl: void updatePublicMode()>
<com.android.settingslib.bluetooth.HidDeviceProfile: int getConnectionStatus(android.bluetooth.BluetoothDevice)>
<com.android.systemui.statusbar.policy.Clock: void setClockVisibilityByPolicy(boolean)>
<com.android.localtransport.LocalTransport: long getCurrentRestoreSet()>
<com.android.statsd.dogfood.DisplayProtoUtils: void displayEventMetricData(java.lang.StringBuilder,com.android.os.StatsLog.StatsLogReport)>
<com.android.packageinstaller.PackageInstallerActivity.InstallErrorDialog: android.app.Dialog createDialog(java.lang.CharSequence)>
<com.android.server.notification.NotificationUsageStats: float getAppEnqueueRate(java.lang.String)>
<com.android.settingslib.DeviceInfoUtils: java.lang.String getMsvSuffix()>
<com.android.server.usb.UsbDeviceManager: long getScreenUnlockedFunctions()>
<com.android.systemui.recents.RecentsImplProxy: void onDraggingInRecents(float)>
<com.android.systemui.statusbar.NotificationLockscreenUserManager: void updatePublicMode()>
<com.android.systemui.statusbar.CommandQueue: boolean panelsEnabled()>
<com.android.systemui.statusbar.policy.KeyButtonView: void draw(android.graphics.Canvas)>
<com.android.keyguard.KeyguardPasswordView: void showUsabilityHint()>
<javax.obex.SessionNotifier: javax.obex.ObexSession acceptAndOpen(javax.obex.ServerRequestHandler)>
<com.android.settingslib.bluetooth.HidProfile: java.lang.String toString()>
<com.android.systemui.recents.RecentsActivity: void onBusEvent(com.android.systemui.recents.events.activity.DockedTopTaskEvent)>
<com.android.systemui.statusbar.phone.LightBarTransitionsController: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.content.ContentService: boolean getSyncAutomatically(android.accounts.Account,java.lang.String)>
<com.android.systemui.tuner.TunerFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)>
<com.android.systemui.analytics.DataCollector: boolean isUnlockingDisabled()>
<com.android.server.statusbar.StatusBarManagerInternal: void showChargingAnimation(int)>
<com.android.server.input.InputManagerService: void updatePointerSpeedFromSettings()>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: com.android.systemui.statusbar.phone.KeyguardBouncer getBouncer()>
<com.android.server.statusbar.StatusBarManagerInternal: void cancelPreloadRecentApps()>
<com.android.systemui.classifier.SpeedEvaluator: float evaluate(float)>
<com.android.settingslib.bluetooth.PbapServerProfile: void finalize()>
<com.android.systemui.qs.tiles.BluetoothTile: int getMetricsCategory()>
<com.android.settingslib.drawer.Tile: java.lang.String getCategory()>
<android.media.MediaPlayer2: void removeOnRoutingChangedListener(android.media.AudioRouting.OnRoutingChangedListener)>
<com.android.settingslib.drawer.Tile: java.lang.String getPackageName()>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void dump(java.lang.String,java.io.PrintWriter)>
<com.android.systemui.statusbar.Abortable: void abort()>
<com.android.systemui.plugins.DarkIconDispatcher: float getDarkIntensity(android.graphics.Rect,android.view.View,float)>
<com.android.server.infra.AbstractPerUserSystemService: void <init>(com.android.server.infra.AbstractMasterSystemService,java.lang.Object,int)>
<com.android.systemui.volume.VolumeDialogControllerImpl: boolean isCaptionStreamOptedOut()>
<com.android.server.stats.StatsCompanionService.Lifecycle: void <init>(android.content.Context)>
<com.android.systemui.statusbar.NotificationRemoteInputManager.RemoteInputExtender: void setCallback(com.android.systemui.statusbar.NotificationLifetimeExtender.NotificationSafeToRemoveCallback)>
<com.android.systemui.statusbar.notification.FakeShadowView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.pm.ShortcutService: void cleanupBitmapsForPackage(int,java.lang.String)>
<com.android.server.usb.descriptors.UsbDescriptorParser: com.android.server.usb.descriptors.UsbDeviceDescriptor getDeviceDescriptor()>
<com.android.systemui.statusbar.notification.stack.SectionHeaderView: boolean disallowSingleClick(android.view.MotionEvent)>
<com.android.server.NsdService: void setEnabled(boolean)>
<com.android.server.notification.ManagedServices: java.util.Set queryPackageForServices(java.lang.String,int)>
<com.android.systemui.statusbar.phone.DoubleTapHelper.ActivationListener: void onActiveChanged(boolean)>
<com.android.systemui.shared.system.TaskStackChangeListeners: void addListener(android.app.IActivityManager,com.android.systemui.shared.system.TaskStackChangeListener)>
<com.android.systemui.statusbar.CastDrawable: boolean getPadding(android.graphics.Rect)>
<com.android.systemui.tuner.TunerSwitch: void onAttached()>
<com.android.systemui.plugins.statusbar.StatusBarStateController.StateListener: void onStatePostChange()>
<com.android.companiondevicemanager.DeviceChooserActivity: void onStop()>
<com.android.systemui.statusbar.phone.StatusBar: void makeStatusBarView(com.android.internal.statusbar.RegisterStatusBarResult)>
<com.android.settingslib.media.BluetoothMediaManager: void onProfileConnectionStateChanged(com.android.settingslib.bluetooth.CachedBluetoothDevice,int,int)>
<com.android.systemui.bubbles.BubbleData: void setSelectedBubble(com.android.systemui.bubbles.Bubble)>
<com.android.systemui.recents.views.TaskViewTransform: boolean hasScaleChangedFrom(float)>
<com.android.systemui.classifier.AnglesClassifier: void onTouchEvent(android.view.MotionEvent)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setDeviceProvisioningConfigApplied()>
<com.android.systemui.statusbar.phone.RotationContextButton: void <init>(int,int)>
<com.android.server.usb.descriptors.UsbEndpointDescriptor: int getInterval()>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: boolean isEnabled()>
<com.android.server.audio.AudioService.Lifecycle: void <init>(android.content.Context)>
<android.perftests.utils.ShellHelper: java.lang.String runShellCommandRaw(java.lang.String)>
<com.android.systemui.statusbar.CommandQueue: void recomputeDisableFlags(int,boolean)>
<com.android.systemui.classifier.AnglesVarianceEvaluator: float evaluate(float,int)>
<com.android.keyguard.KeyguardClockSwitch: boolean hasCustomClock()>
<javax.obex.ObexHelper: byte[] computeAuthenticationChallenge(byte[],java.lang.String,boolean,boolean)>
<com.android.server.notification.NotificationManagerService.NotificationListeners: boolean isListenerPackage(java.lang.String)>
<com.android.printspooler.ui.PrintActivity: boolean onKeyUp(int,android.view.KeyEvent)>
<com.android.systemui.recents.RecentsSystemUser: void startScreenPinning(int)>
<com.android.systemui.recents.views.TaskStackView: com.android.systemui.shared.recents.model.Task findAnchorTask(java.util.List,android.util.MutableBoolean)>
<com.android.server.notification.ManagedServices: java.lang.String getPackageName(java.lang.String)>
<com.android.server.locksettings.recoverablekeystore.RecoverySnapshotListenersStorage: void setSnapshotListener(int,android.app.PendingIntent)>
<com.android.systemui.classifier.DirectionClassifier: void <init>(com.android.systemui.classifier.ClassifierData)>
<com.android.powermodel.component.GpsProfile.Builder: com.android.powermodel.component.GpsProfile build()>
<android.media.BufferingParams.Builder: android.media.BufferingParams.Builder setResumePlaybackMarkMs(int)>
<com.android.systemui.statusbar.notification.TransformState: float getTransformationStartScaleY()>
<com.android.systemui.shared.plugins.PluginManager: void addPluginListener(com.android.systemui.plugins.PluginListener,java.lang.Class,boolean)>
<com.android.systemui.pip.phone.PipTouchState: android.graphics.PointF getDownTouchPosition()>
<com.android.systemui.qs.tileimpl.QSTileImpl: void checkIfRestrictionEnforcedByAdminOnly(com.android.systemui.plugins.qs.QSTile.State,java.lang.String)>
<com.android.server.slice.SlicePermissionManager.PkgUser: void <init>(java.lang.String)>
<com.android.systemui.BatteryMeterView: void onPowerSaveChanged(boolean)>
<com.android.server.accessibility.AccessibilityManagerService: android.view.MagnificationSpec getCompatibleMagnificationSpecLocked(int)>
<com.android.systemui.statusbar.phone.ReverseLinearLayout: void setAlternativeOrder(boolean)>
<android.media.DataSourceCallback: long getSize()>
<com.android.server.usb.descriptors.UsbBinaryParser: void parseDescriptors(android.hardware.usb.UsbDeviceConnection,byte[],java.lang.StringBuilder)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow.ExpansionLogger: void logNotificationExpansion(java.lang.String,boolean,boolean)>
<com.android.systemui.shared.plugins.PluginManagerImpl: java.lang.String[] getWhitelistedPlugins()>
<com.android.server.webkit.SystemImpl: boolean systemIsDebuggable()>
<com.android.server.display.whitebalance.DisplayWhiteBalanceController: void onAmbientColorTemperatureChanged(float)>
<com.android.server.content.SyncManagerConstants: float getRetryTimeIncreaseFactor()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isNotificationListenerServicePermitted(java.lang.String,int)>
<android.net.netlink.ConntrackMessage: byte[] newIPv4TimeoutUpdateRequest(int,java.net.Inet4Address,int,java.net.Inet4Address,int,int)>
<com.android.systemui.shared.system.TransactionCompat: com.android.systemui.shared.system.TransactionCompat setCornerRadius(com.android.systemui.shared.system.SurfaceControlCompat,float)>
<com.android.systemui.plugins.DarkIconDispatcher: void applyDark(com.android.systemui.plugins.DarkIconDispatcher.DarkReceiver)>
<com.android.server.policy.WindowManagerPolicy: void hideBootMessages()>
<com.android.systemui.statusbar.NotificationListener: void addNotificationSettingsListener(com.android.systemui.statusbar.NotificationListener.NotificationSettingsListener)>
<com.android.settingslib.graph.BatteryMeterDrawableBase: int getCriticalLevel()>
<javax.microedition.khronos.opengles.GL10: void glTexParameterx(int,int,int)>
<com.android.systemui.plugins.qs.QSTile.Callback: void onToggleStateChanged(boolean)>
<com.android.systemui.statusbar.phone.MultiUserSwitch: void setUserSwitcherController(com.android.systemui.statusbar.policy.UserSwitcherController)>
<com.android.systemui.util.AutoMarqueeTextView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.settingslib.dream.DreamBackend: void setActivatedOnSleep(boolean)>
<com.android.systemui.recents.model.RecentsTaskLoader: void preloadTasks(com.android.systemui.recents.model.RecentsTaskLoadPlan,int,int)>
<com.android.systemui.qs.QSFooterImpl: void onUserInfoChanged(java.lang.String,android.graphics.drawable.Drawable,java.lang.String)>
<com.android.systemui.recents.model.RecentsTaskLoadPlan: void <init>(android.content.Context)>
<android.media.DataSourceDesc.Builder: android.media.DataSourceDesc.Builder setDataSource(android.os.ParcelFileDescriptor,long,long)>
<com.android.server.devicepolicy.CertificateMonitor: java.util.List getInstalledCaCertificates(android.os.UserHandle)>
<com.android.systemui.statusbar.policy.BatteryControllerImpl: void fireBatteryLevelChanged()>
<com.android.server.tv.TvRemoteProviderProxy.ProviderMethods: void sendPointerUp(com.android.server.tv.TvRemoteProviderProxy,android.os.IBinder,int)>
<com.android.settingslib.bluetooth.PbapServerProfile: int getDrawableResource(android.bluetooth.BluetoothClass)>
<com.android.printspooler.ui.PrintActivity: android.content.Loader onCreateLoader(int,android.os.Bundle)>
<com.android.settingslib.widget.AppEntitiesHeaderController: com.android.settingslib.widget.AppEntitiesHeaderController clearAllAppEntities()>
<com.android.server.location.GnssBatchingProvider: void flush()>
<javax.microedition.khronos.egl.EGL10: boolean eglGetConfigAttrib(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int[])>
<com.android.server.statusbar.StatusBarManagerService: void setImeWindowStatus(int,android.os.IBinder,int,int,boolean)>
<com.android.systemui.qs.tiles.RotationLockTile: android.content.Intent getLongClickIntent()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean onKeyUp(int,android.view.KeyEvent)>
<com.android.server.notification.NotificationRecord: void setSystemGeneratedSmartActions(java.util.ArrayList)>
<com.android.systemui.plugins.qs.QS: void setContainer(android.view.ViewGroup)>
<com.android.server.biometrics.iris.IrisService: void onStart()>
<com.android.server.contentsuggestions.ContentSuggestionsManagerServiceShellCommand: void <init>(com.android.server.contentsuggestions.ContentSuggestionsManagerService)>
<com.android.server.FgThread: android.os.Handler getHandler()>
<com.android.systemui.pip.phone.PipMediaController: void onActivityPinned()>
<com.android.systemui.statusbar.phone.NavigationBarFragment: void onViewCreated(android.view.View,android.os.Bundle)>
<com.android.systemui.DessertCaseView: void onDraw(android.graphics.Canvas)>
<com.android.wallpapercropper.WallpaperCropActivity: android.graphics.RectF getMaxCropRect(int,int,int,int,boolean)>
<com.android.systemui.plugin.testoverlayplugin.CustomView: void onAttachedToWindow()>
<com.android.systemui.recents.events.EventBus: void dump(java.lang.String,java.io.PrintWriter)>
<com.android.server.accounts.AccountManagerService: android.accounts.Account[] getAccountsAsUser(java.lang.String,int,java.lang.String)>
<com.android.systemui.recents.views.TaskStackAnimationHelper: void startEnterAnimation(com.android.systemui.recents.misc.ReferenceCountedTrigger)>
<com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.FingerprintGestureDispatcher getFingerprintGestureDispatcher()>
<com.android.systemui.statusbar.notification.NotificationUtils: boolean isGrayscale(android.widget.ImageView,com.android.internal.util.ContrastColorUtil)>
<com.android.printspooler.model.PrintSpoolerService: void checkAllPrintJobsHandled()>
<com.android.systemui.qs.QSTileHost: com.android.systemui.qs.external.TileServices getTileServices()>
<com.android.systemui.statusbar.NotificationLifetimeExtender.NotificationSafeToRemoveCallback: void onSafeToRemove(java.lang.String)>
<com.android.systemui.statusbar.notification.stack.ViewState: void initFrom(android.view.View)>
<com.android.server.locksettings.LockSettingsService: void onUnlockUser(int)>
<com.android.systemui.statusbar.phone.StatusBar: void animateCollapsePanels(int,boolean,boolean,float)>
<com.android.systemui.classifier.FalsingManagerImpl: void onUnlockHintStarted()>
<com.android.systemui.statusbar.policy.ConfigurationController.ConfigurationListener: void onUiModeChanged()>
<com.android.printspooler.util.PageRangeUtils: android.print.PageRange[] computeWhichPagesInFileToPrint(android.print.PageRange[],android.print.PageRange[],int)>
<com.android.systemui.shared.system.RecentsAnimationControllerCompat: void cleanupScreenshot()>
<com.android.systemui.qs.TileLayout: boolean updateResources()>
<com.android.powermodel.component.ModemGlobalActivity: void <init>(com.android.powermodel.AttributionKey)>
<com.android.server.midi.MidiService.Lifecycle: void onStart()>
<com.android.keyguard.KeyguardSecurityViewFlipper.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer: void setHeaderVisibleAmount(float)>
<com.android.systemui.recents.RecentsSystemUser: void updateRecentsVisibility(boolean)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setSystemExpanded(boolean)>
<com.android.systemui.volume.VolumeDialogComponent: void dismissNow()>
<android.media.MediaPlayer2: void restoreDrmKeys(android.media.DataSourceDesc,byte[])>
<com.android.preload.DeviceUtils: void doShell(com.android.ddmlib.IDevice,java.lang.String,com.android.ddmlib.IShellOutputReceiver,long,java.util.concurrent.TimeUnit)>
<com.android.systemui.statusbar.policy.SmartReplyView: com.android.systemui.statusbar.policy.SmartReplyView inflate(android.content.Context)>
<com.android.printspooler.model.MutexFileProvider: void <init>(java.io.File)>
<com.android.keyguard.KeyguardUpdateMonitor: boolean isGoingToSleep()>
<com.android.systemui.classifier.brightline.TimeLimitedMotionEventBuffer: android.view.MotionEvent set(int,android.view.MotionEvent)>
<com.example.android.networkusage.SettingsActivity: void onPause()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: android.view.ViewGroup getViewParentForNotification(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.systemui.statusbar.policy.NetworkController.SignalCallback: void setEthernetIndicators(com.android.systemui.statusbar.policy.NetworkController.IconState)>
<com.android.server.notification.ConditionProviders.Callback: void onServiceAdded(android.content.ComponentName)>
<javax.obex.ServerOperation: void ensureNotDone()>
<com.android.server.RescueParty: void noteBoot(android.content.Context)>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationViewWrapper: boolean needsInversion(int,android.view.View)>
<com.android.systemui.statusbar.phone.StatusBar: void showPinningEnterExitToast(boolean)>
<com.android.server.pm.PackageManagerService: android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName,int,int)>
<com.android.settingslib.bluetooth.PbapServerProfile: int getProfileId()>
<com.android.systemui.statusbar.notification.MessagingImageTransformState: com.android.systemui.statusbar.notification.MessagingImageTransformState obtain()>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.util.List getPermittedAccessibilityServicesForUser(int)>
<com.android.server.policy.PhoneWindowManager: int interceptKeyBeforeQueueing(android.view.KeyEvent,int)>
<com.android.systemui.statusbar.notification.row.NotificationSnooze: void setStatusBarNotification(android.service.notification.StatusBarNotification)>
<com.android.server.notification.ZenModeHelper: void readXml(org.xmlpull.v1.XmlPullParser,boolean,int)>
<com.android.keyguard.KeyguardDisplayManager: void <init>(android.content.Context,com.android.systemui.util.InjectionInflationController)>
<android.net.ip.InterfaceController: boolean enableIPv6()>
<com.android.systemui.qs.external.TileServiceManager: void setTileChangeListener(com.android.systemui.qs.external.TileLifecycleManager.TileChangeListener)>
<com.android.systemui.statusbar.phone.UnlockMethodCache: boolean canSkipBouncer()>
<com.android.systemui.statusbar.notification.row.NotificationBackgroundView: int getActualHeight()>
<com.android.systemui.DependencyBinder: com.android.systemui.statusbar.policy.SecurityController provideSecurityController(com.android.systemui.statusbar.policy.SecurityControllerImpl)>
<com.android.systemui.recents.events.component.ScreenPinningRequestEvent: void <init>(android.content.Context,int)>
<com.android.server.NetworkScoreService: boolean setActiveScorer(java.lang.String)>
<com.android.systemui.qs.SignalTileView: void setIcon(com.android.systemui.plugins.qs.QSTile.State,boolean)>
<com.android.systemui.statusbar.StatusBarIconView: void <init>(android.content.Context,java.lang.String,android.service.notification.StatusBarNotification,boolean)>
<com.android.server.statusbar.StatusBarManagerInternal: void appTransitionPending(int)>
<com.android.systemui.classifier.FalsingManagerProxy: boolean shouldEnforceBouncer()>
<com.android.systemui.statusbar.notification.row.NotificationInfo: boolean handleCloseControls(boolean,boolean)>
<com.android.server.usb.UsbAlsaManager: void logDevicesList(java.lang.String)>
<com.android.server.policy.WindowManagerPolicy.WindowState: int getRotationAnimationHint()>
<com.android.server.pm.ShortcutService: android.content.pm.ParceledListSlice getDynamicShortcuts(java.lang.String,int)>
<com.android.systemui.glwallpaper.EglHelper: boolean init(android.view.SurfaceHolder)>
<com.android.systemui.shared.plugins.PluginInstanceManager: void onPackageRemoved(java.lang.String)>
<com.android.server.appop.AppOpsService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.globalactions.GlobalActionsDialog.Action: java.lang.CharSequence getLabelForAccessibility(android.content.Context)>
<com.android.server.notification.PreferencesHelper: org.json.JSONArray dumpBansJson(com.android.server.notification.NotificationManagerService.DumpFilter)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: boolean isFooterViewNotGone()>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: int getNumberSubscriptions()>
<com.android.systemui.statusbar.phone.ObservableScrollView.Listener: void onScrollChanged()>
<com.android.server.pm.PackageManagerService: boolean isOrphaned(java.lang.String)>
<com.android.nfc_extras.NfcAdapterExtras: void authenticate(byte[])>
<com.android.systemui.statusbar.notification.row.HybridNotificationView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.audio.AudioService: void setStreamVolume(int,int,int,java.lang.String)>
<com.android.settingslib.development.SystemPropPoker.PokerTask: java.lang.Void doInBackground(java.lang.Void[])>
<com.android.systemui.shared.system.TransactionCompat: void apply()>
<com.android.packageinstaller.DeviceUtils: boolean isAuto(android.content.Context)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void notifyKeyguardAuthenticated(boolean)>
<com.android.server.audio.AudioService: int abandonAudioFocus(android.media.IAudioFocusDispatcher,java.lang.String,android.media.AudioAttributes,java.lang.String)>
<com.android.server.hdmi.HdmiCecLocalDevicePlayback: void wakeUpIfActiveSource()>
<com.android.server.location.ComprehensiveCountryDetector: void runAfterDetectionAsync(android.location.Country,android.location.Country,boolean,boolean)>
<com.android.smspush.WapPushManager: boolean isDataExist(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.android.server.appop.AppOpsService: void setUserRestriction(int,boolean,android.os.IBinder,int,java.lang.String[])>
<com.android.server.wallpaper.WallpaperManagerService: int getHeightHint(int)>
<com.android.server.accounts.AccountManagerService: void startUpdateCredentialsSession(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,android.os.Bundle)>
<com.android.gallery3d.exif.Rational: long getDenominator()>
<com.android.settingslib.dream.DreamBackend: android.content.ComponentName getActiveDream()>
<com.android.settingslib.inputmethod.InputMethodPreference: void updatePreferenceViews()>
<com.android.systemui.statusbar.StatusIconDisplayable: void setVisibleState(int)>
<com.android.commands.sm.Sm: void runUnmount()>
<com.android.server.voiceinteraction.DatabaseHelper: android.hardware.soundtrigger.SoundTrigger.KeyphraseSoundModel getKeyphraseSoundModel(int,int,java.lang.String)>
<com.android.server.role.RoleUserState: android.util.ArraySet getRoleHolders(java.lang.String)>
<com.android.server.GestureLauncherService: boolean isCameraLiftTriggerSettingEnabled(android.content.Context,int)>
<com.android.systemui.statusbar.phone.PhoneStatusBarPolicy: void onKeyguardShowingChanged()>
<com.android.systemui.statusbar.phone.NavigationBarTransitions: void setAutoDim(boolean)>
<com.android.systemui.charging.WirelessChargingAnimation: com.android.systemui.charging.WirelessChargingAnimation makeWirelessChargingAnimation(android.content.Context,android.os.Looper,int,com.android.systemui.charging.WirelessChargingAnimation.Callback,boolean)>
<com.android.server.pm.ShortcutDumpFiles: boolean save(java.lang.String,java.util.function.Consumer)>
<com.android.systemui.tuner.StatusBarSwitch: void onDetached()>
<com.android.systemui.shared.system.QuickStepContract: boolean isAssistantGestureDisabled(int)>
<com.android.server.policy.WindowManagerPolicy.WindowState: boolean isGoneForLayoutLw()>
<com.android.externalstorage.MountReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.android.server.appprediction.RemoteAppPredictionService: android.service.appprediction.IPredictionService getServiceInterface(android.os.IBinder)>
<com.android.settingslib.bluetooth.HeadsetProfile: java.util.List getConnectedDevices()>
<com.android.systemui.statusbar.phone.StatusBarWindowView: void onBiometricAuthModeChanged(boolean)>
<android.net.ipmemorystore.SameL3NetworkResponse: void <init>(android.net.ipmemorystore.SameL3NetworkResponseParcelable)>
<com.android.settingslib.widget.AdaptiveOutlineDrawable: void draw(android.graphics.Canvas)>
<com.android.future.usb.UsbManager: com.android.future.usb.UsbManager getInstance(android.content.Context)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void onScreenTurningOff()>
<com.android.systemui.plugins.FalsingManager: boolean isUnlockingDisabled()>
<com.android.systemui.recents.views.TaskStackView: void setTasks(com.android.systemui.recents.model.TaskStack,boolean)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean topAmountNeedsClipping()>
<com.android.systemui.statusbar.KeyguardIndicationController: void onStateChanged(int)>
<com.android.server.media.AudioPlayerStateMonitor.OnAudioPlayerActiveStateChangedListener: void onAudioPlayerActiveStateChanged(android.media.AudioPlaybackConfiguration,boolean)>
<com.android.gallery3d.glrenderer.RawTexture: boolean isFlippedVertically()>
<com.android.server.notification.NotificationManagerService.WorkerHandler: void handleMessage(android.os.Message)>
<com.android.settingslib.RestrictedPreferenceHelper: boolean setDisabledByAdmin(com.android.settingslib.RestrictedLockUtils.EnforcedAdmin)>
<com.android.server.audio.AudioService: void unregisterAudioPolicyAsync(android.media.audiopolicy.IAudioPolicyCallback)>
<com.android.server.pm.permission.PermissionManagerServiceInternal: void removeDynamicPermission(java.lang.String,int,com.android.server.pm.permission.PermissionManagerServiceInternal.PermissionCallback)>
<com.android.systemui.qs.customize.TileAdapter: void <init>(android.content.Context)>
<com.android.systemui.statusbar.RemoteInputController: void addRemoteInput(com.android.systemui.statusbar.notification.collection.NotificationEntry,java.lang.Object)>
<com.android.server.pm.permission.BasePermission: boolean isWellbeing()>
<com.android.commands.svc.DataCommand: void run(java.lang.String[])>
<com.android.systemui.statusbar.notification.stack.AmbientState: java.util.ArrayList getDraggedViews()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetIntegerv(int,int[],int)>
<com.android.powermodel.component.ModemAppActivity: void <init>(com.android.powermodel.AttributionKey)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onDynamicPrivacyChanged()>
<com.android.gallery3d.glrenderer.UploadedTexture: boolean isUploading()>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationViewWrapper: void transformFrom(com.android.systemui.statusbar.TransformableView)>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean shouldGestureIgnoreXTouchSlop(float,float)>
<com.android.server.locksettings.recoverablekeystore.PlatformKeyManager: boolean isAvailable(int)>
<com.android.systemui.statusbar.StatusBarWifiView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.volume.VolumeComponent: void dismissNow()>
<com.android.systemui.statusbar.notification.stack.AmbientState: void setDark(boolean)>
<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: void onDismiss()>
<android.net.ipmemorystore.Status: void <init>(int)>
<com.android.server.usb.descriptors.UsbMSMidiHeader: void report(com.android.server.usb.descriptors.report.ReportCanvas)>
<android.text.StaticLayoutPerfTest: void testCreate_PrecomputedText_NoStyled_Greedy_NoHyphenation_DirDifferent()>
<com.android.systemui.volume.VolumeDialogControllerImpl: void addCallback(com.android.settingslib.volume.MediaSessions.Callbacks,android.os.Handler)>
<android.net.ip.InterfaceController: boolean removeAddress(java.net.InetAddress,int)>
<com.android.systemui.classifier.FalsingManagerProxy: void onScreenTurningOn()>
<com.android.settingslib.bluetooth.BluetoothCallback: void onConnectionStateChanged(com.android.settingslib.bluetooth.CachedBluetoothDevice,int)>
<com.android.systemui.util.leak.DumpTruck: android.net.Uri getDumpUri()>
<com.android.settingslib.RestrictedLockUtilsInternal: com.android.settingslib.RestrictedLockUtils.EnforcedAdmin checkIfRestrictionEnforced(android.content.Context,java.lang.String,int)>
<com.android.server.notification.ManagedServices: java.util.List getAllowedComponents(int)>
<com.android.systemui.shared.system.WindowCallbacksCompat: boolean onContentDrawn(int,int,int,int)>
<com.android.systemui.statusbar.notification.row.AppOpsInfo: void bindGuts(android.content.pm.PackageManager,com.android.systemui.statusbar.notification.row.AppOpsInfo.OnSettingsClickListener,android.service.notification.StatusBarNotification,android.util.ArraySet)>
<com.android.server.policy.WindowManagerPolicy.WindowState: boolean isInputMethodWindow()>
<com.android.systemui.statusbar.phone.StatusBarWindowController: void setKeyguardOccluded(boolean)>
<com.android.bluetoothmidiservice.BluetoothPacketEncoder: void onSend(byte[],int,int,long)>
<com.android.systemui.settings.ToggleSlider: void setMax(int)>
<com.android.systemui.shared.recents.utilities.Utilities: float clamp(float,float,float)>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: void setTintColor(int)>
<com.android.systemui.statusbar.notification.stack.ViewState: void onYTranslationAnimationFinished(android.view.View)>
<com.android.systemui.car.CarNotificationEntryManager: void addNotification(android.service.notification.StatusBarNotification,android.service.notification.NotificationListenerService.RankingMap)>
<com.android.systemui.statusbar.phone.HeadsUpManagerPhone: void onAlertEntryRemoved(com.android.systemui.statusbar.AlertingNotificationManager.AlertEntry)>
<com.android.settingslib.wifi.WifiTracker: void <init>(android.content.Context,com.android.settingslib.wifi.WifiTracker.WifiListener,boolean,boolean)>
<com.android.settingslib.location.InjectedSetting.Builder: com.android.settingslib.location.InjectedSetting.Builder setUserRestriction(java.lang.String)>
<com.android.systemui.statusbar.policy.DeviceProvisionedController: boolean isDeviceProvisioned()>
<com.android.systemui.DependencyProvider: android.hardware.display.NightDisplayListener provideNightDisplayListener(android.content.Context,android.os.Handler)>
<com.android.systemui.statusbar.phone.StatusBar: void finishKeyguardFadingAway()>
<android.net.IIpMemoryStore: void storeNetworkAttributes(java.lang.String,android.net.ipmemorystore.NetworkAttributesParcelable,android.net.ipmemorystore.IOnStatusListener)>
<com.android.smspush.WapPushManager: boolean verifyData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,boolean,boolean)>
<com.android.systemui.globalactions.GlobalActionsDialog.MyAdapter: com.android.systemui.globalactions.GlobalActionsDialog.Action getItem(int)>
<com.android.systemui.recents.views.TaskViewThumbnail: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.shared.system.TaskStackChangeListener: void onActivityLaunchOnSecondaryDisplayRerouted()>
<com.android.server.location.NtpTimeHelper.InjectNtpTimeCallback: void injectTime(long,long,int)>
<com.android.server.devicepolicy.DevicePolicyCacheImpl: void dump(java.lang.String,java.io.PrintWriter)>
<com.android.systemui.classifier.GestureClassifier: float getFalseTouchEvaluation(int)>
<com.android.systemui.statusbar.StatusBarWifiView: void onDarkChanged(android.graphics.Rect,float,int)>
<com.android.systemui.bubbles.BadgedImageView: void setDotScale(float)>
<com.android.printservice.recommendation.RecommendationServiceImpl: void onDisconnected()>
<com.android.systemui.statusbar.phone.HeadsUpManagerPhone.HeadsUpEntryPhone: void reset()>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin.MenuItem menuItemToExposeOnSnap()>
<com.android.server.ExtconUEventObserver: void startObserving(com.android.server.ExtconUEventObserver.ExtconInfo)>
<com.android.commands.dpm.Dpm: void main(java.lang.String[])>
<javax.microedition.khronos.opengles.GL10: void glPolygonOffsetx(int,int)>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationTemplateViewWrapper: void <init>(android.content.Context,android.view.View,com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<com.android.systemui.recents.ScreenPinningRequest: void <init>(android.content.Context)>
<com.android.settingslib.suggestions.SuggestionControllerMixinCompat: void launchSuggestion(android.service.settings.suggestions.Suggestion)>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationViewWrapper: void onContentUpdated(com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<com.android.systemui.bubbles.animation.ExpandedAnimationController: android.view.View getDraggedOutBubble()>
<android.media.MediaSession2Service: android.media.MediaSession2 onGetSession(android.media.MediaSession2.ControllerInfo)>
<android.media.MediaPlayer2.SubtitleData: long getDurationUs()>
<com.android.gallery3d.common.Utils: boolean isNullOrEmpty(java.lang.String)>
<com.android.systemui.plugins.qs.QS: void setHeaderListening(boolean)>
<com.android.server.webkit.SystemImpl: void setMultiProcessSetting(android.content.Context,int)>
<com.android.systemui.DessertCaseView.RescalingContainer: void onLayout(boolean,int,int,int,int)>
<com.android.server.appop.AppOpsService: boolean isOperationActive(int,int,java.lang.String)>
<android.media.Session2Command: int describeContents()>
<com.android.systemui.qs.QSFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.plugins.qs.QSTile.State: java.lang.String toString()>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.ui.focus.FocusPreviousTaskViewEvent)>
<com.android.systemui.recents.views.TaskStackView: com.android.systemui.recents.views.TaskView createView(android.content.Context)>
<com.android.settingslib.notification.EnableZenModeDialog: boolean isCountdown(android.service.notification.Condition)>
<com.android.server.notification.NotificationManagerService: int calculateSuppressedVisualEffects(android.app.NotificationManager.Policy,android.app.NotificationManager.Policy,int)>
<com.android.systemui.statusbar.policy.KeyButtonDrawable: float getDarkIntensity()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onSwipingStarted(boolean)>
<com.android.systemui.statusbar.NotificationMediaManager: android.graphics.drawable.Icon getMediaIcon()>
<com.android.systemui.recents.utilities.Utilities: float computeContrastBetweenColors(int,int)>
<android.util.ArraySetPerfTest: void testRemoveIf_Small_RemoveHalf()>
<com.android.server.pm.PackageManagerService: void resetApplicationPreferences(int)>
<com.android.server.pm.permission.PermissionsState: void copyFrom(com.android.server.pm.permission.PermissionsState)>
<com.android.server.pm.PackageSettingBase: com.android.server.pm.PackageSettingBase updateFrom(com.android.server.pm.PackageSettingBase)>
<com.android.statementservice.retriever.Relation: int hashCode()>
<com.android.server.SerialService: android.os.ParcelFileDescriptor openSerialPort(java.lang.String)>
<com.android.systemui.shared.plugins.PluginPrefs: void <init>(android.content.Context)>
<com.android.server.content.ContentService.Lifecycle: void onUnlockUser(int)>
<com.android.server.pm.ShortcutNonPersistentUser: int getUserId()>
<com.android.settingslib.drawable.UserIconDrawable: com.android.settingslib.drawable.UserIconDrawable setBadge(android.graphics.drawable.Drawable)>
<com.android.gallery3d.glrenderer.RawTexture: boolean isOpaque()>
<com.android.server.pm.PackageSettingBase: void copyFrom(com.android.server.pm.PackageSettingBase)>
<com.android.server.notification.BadgeExtractor: void initialize(android.content.Context,com.android.server.notification.NotificationUsageStats)>
<com.android.settingslib.bluetooth.HeadsetProfile: int getAudioState(android.bluetooth.BluetoothDevice)>
<javax.obex.ClientSession: void <init>(javax.obex.ObexTransport)>
<android.processor.view.inspector.InspectableClassModel.Property: android.processor.view.inspector.InspectableClassModel.Property.Type getType()>
<com.android.systemui.statusbar.phone.StatusBarIconController.IconManager: void onSetMobileIcon(int,com.android.systemui.statusbar.phone.StatusBarSignalPolicy.MobileIconState)>
<com.android.server.pm.PackageManagerService.IntentFilterVerifier: boolean addOneIntentFilterVerification(int,int,int,android.content.IntentFilter,java.lang.String)>
<com.android.systemui.doze.DozeSensors: void onUserSwitched()>
<com.android.systemui.statusbar.AlertingNotificationManager.AlertEntry: void removeAutoRemovalCallbacks()>
<lockedregioncodeinjection.LockTargetState: void <init>(org.objectweb.asm.Type,java.util.List)>
<com.android.systemui.classifier.brightline.BrightLineFalsingManager: void onLeftAffordanceHintStarted()>
<com.android.server.notification.SnoozeHelper: void update(int,com.android.server.notification.NotificationRecord)>
<com.android.server.location.GnssStatusListenerHelper: void onSvStatusChanged(int,int[],float[],float[],float[],float[])>
<android.view.autofill.LoginTest: void testChange_autofillBothFields()>
<com.android.server.usb.descriptors.Usb20ACInputTerminal: void report(com.android.server.usb.descriptors.report.ReportCanvas)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void requestDisallowDismiss()>
<com.android.server.notification.ValidateNotificationPeople: java.lang.String[] getExtraPeople(android.os.Bundle)>
<com.android.systemui.bubbles.animation.StackAnimationController: void setImeHeight(int)>
<com.android.settingslib.core.lifecycle.ObservableFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>
<com.android.server.PreloadsFileCacheExpirationJobService: void schedule(android.content.Context)>
<com.android.server.pm.DumpState: boolean getTitlePrinted()>
<com.android.packageinstaller.PackageInstallerActivity.AppErrorDialog: void setArgument(java.lang.CharSequence)>
<com.android.server.appbinding.AppBindingConstants: com.android.server.appbinding.AppBindingConstants initializeFromString(java.lang.String)>
<com.android.settingslib.NetworkPolicyEditor: android.net.NetworkPolicy getPolicyMaybeUnquoted(android.net.NetworkTemplate)>
<android.net.shared.ProvisioningConfiguration: boolean isValid()>
<com.android.gallery3d.exif.ExifTag: boolean hasDefinedCount()>
<com.android.systemui.biometrics.FingerprintDialogView: void <init>(android.content.Context,com.android.systemui.biometrics.DialogViewCallback)>
<com.android.systemui.volume.MediaRouterWrapper: void removeCallback(androidx.mediarouter.media.MediaRouter.Callback)>
<com.android.keyguard.NumPadKey: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.NetworkManagementInternal: boolean isNetworkRestrictedForUid(int)>
<com.android.systemui.statusbar.notification.stack.AmbientState: int getInnerHeight()>
<com.android.powermodel.RawBatteryStats.Warning: java.util.ArrayList getFields()>
<com.android.server.notification.NotificationSignalExtractor: void setConfig(com.android.server.notification.RankingConfig)>
<com.android.server.notification.NotificationRecord: boolean hasSeenSmartReplies()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setGlobalSetting(android.content.ComponentName,java.lang.String,java.lang.String)>
<com.android.server.pm.PackageInstallerSession: void close()>
<com.android.settingslib.inputmethod.InputMethodAndSubtypeEnablerManager: void save(android.content.Context,androidx.preference.PreferenceFragment)>
<android.media.Session2Token: int getUid()>
<android.net.netlink.StructNlMsgHdr: void pack(java.nio.ByteBuffer)>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage: com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage newInstance()>
<com.android.keyguard.KeyguardAbsKeyInputView: byte[] getPasswordText()>
<com.android.systemui.qs.tiles.WorkModeTile: int getMetricsCategory()>
<com.android.systemui.keyguard.KeyguardViewMediator: void addStateMonitorCallback(com.android.internal.policy.IKeyguardStateCallback)>
<com.android.systemui.plugins.VolumeDialogController: void notifyVisible(boolean)>
<com.android.settingslib.wifi.AccessPoint: java.lang.String getSummary()>
<com.android.systemui.pip.phone.PipMenuActivity: void onDestroy()>
<com.android.systemui.qs.tileimpl.QSFactoryImpl: com.android.systemui.plugins.qs.QSTile createTile(java.lang.String)>
<com.android.server.hdmi.HdmiControlService.SendMessageCallback: void onSendCompleted(int)>
<com.android.systemui.statusbar.phone.ScrimController: void setScrimBehindChangeRunnable(java.lang.Runnable)>
<com.android.server.policy.PhoneWindowManager: void screenTurnedOff()>
<com.android.systemui.statusbar.car.CarBatteryController: void stopListening()>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: android.graphics.Rect getUntransformedTaskViewBounds()>
<com.android.settingslib.applications.ApplicationsState.AppEntry: void <init>(android.content.Context,android.content.pm.ApplicationInfo,long)>
<com.android.server.systemcaptions.SystemCaptionsManagerService: void <init>(android.content.Context)>
<android.net.netlink.NetlinkConstants: int alignedLengthOf(short)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin getProvider()>
<com.android.server.UiThread: android.os.Handler getHandler()>
<android.text.TextPerfUtils: java.lang.CharSequence nextRandomParagraph(int,boolean)>
<com.android.statsd.loadtest.StatsdStatsRecorder: void stopRecording(android.content.Context)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setOverExpansion(float,boolean)>
<com.android.server.pm.PackageManagerServiceUtils: boolean checkISA(java.lang.String)>
<com.android.server.notification.ManagedServices: void setPackageOrComponentEnabled(java.lang.String,int,boolean,boolean)>
<com.android.server.usb.UsbAlsaJackDetector: void run()>
<com.android.systemui.statusbar.phone.LightBarController: void <init>(android.content.Context,com.android.systemui.plugins.DarkIconDispatcher,com.android.systemui.statusbar.policy.BatteryController)>
<com.android.server.NetworkManagementService: void unregisterNetworkActivityListener(android.os.INetworkActivityListener)>
<com.android.server.pm.PackageManagerServiceUtils: boolean compressedFileExists(java.lang.String)>
<com.android.server.notification.NotificationManagerService.PostNotificationRunnable: void run()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setUserLocked(boolean)>
<com.android.systemui.statusbar.policy.CallbackHandler: void setWifiIndicators(boolean,com.android.systemui.statusbar.policy.NetworkController.IconState,com.android.systemui.statusbar.policy.NetworkController.IconState,boolean,boolean,java.lang.String,boolean,java.lang.String)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void manageNotifications(android.view.View)>
<com.android.printspooler.ui.PrinterRegistry.OnPrintersChangeListener: void onPrintersChanged(java.util.List)>
<com.android.uiautomator.core.UiScrollable: boolean scrollToEnd(int)>
<com.android.settingslib.CustomDialogPreference: void onBindDialogView(android.view.View)>
<android.net.ip.IpClientManager: boolean setHttpProxy(android.net.ProxyInfo)>
<javax.obex.ClientOperation: void <init>(int,javax.obex.ClientSession,javax.obex.HeaderSet,boolean)>
<com.android.systemui.shared.system.QuickStepContract: boolean supportsRoundedCornersOnWindows(android.content.res.Resources)>
<com.android.statsd.loadtest.DisplayProtoUtils: void displayValueMetricData(java.lang.StringBuilder,com.android.os.StatsLog.StatsLogReport)>
<com.android.gallery3d.common.Utils: void closeSilently(android.os.ParcelFileDescriptor)>
<com.android.systemui.doze.DozeLog: void dump(java.io.PrintWriter)>
<com.android.server.biometrics.BiometricServiceBase: boolean hasPermission(java.lang.String)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean applyChildOrder(java.util.List,com.android.systemui.statusbar.notification.VisualStabilityManager,com.android.systemui.statusbar.notification.VisualStabilityManager.Callback)>
<com.android.server.biometrics.fingerprint.FingerprintService: void serviceDied(long)>
<com.android.systemui.statusbar.notification.row.FooterView: android.view.View findSecondaryView()>
<com.android.server.content.SyncManagerConstants: int getInitialSyncRetryTimeInSeconds()>
<com.android.systemui.plugins.IntentButtonProvider.IntentButton: com.android.systemui.plugins.IntentButtonProvider.IntentButton.IconState getIcon()>
<com.android.systemui.recents.views.RecentsView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.server.attention.AttentionManagerService: void onBootPhase(int)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setAnimationsEnabled(boolean)>
<com.android.systemui.bubbles.BubbleData: void <init>(android.content.Context)>
<android.text.PaintMeasureDrawPerfTest: void timeMeasure()>
<com.android.settingslib.bluetooth.LocalBluetoothProfileManager: com.android.settingslib.bluetooth.LocalBluetoothProfile getProfileByName(java.lang.String)>
<com.android.systemui.statusbar.hvac.AnimatedTemperatureView: int getAreaId()>
<com.android.systemui.tuner.TunerServiceImpl: void setValue(java.lang.String,int)>
<com.android.server.pm.PackageManagerServiceUtils: boolean verifySignatures(com.android.server.pm.PackageSetting,com.android.server.pm.PackageSetting,android.content.pm.PackageParser.SigningDetails,boolean,boolean)>
<com.android.server.biometrics.iris.IrisService: int statsModality()>
<android.media.MediaSession2Service.MediaNotification: void <init>(int,android.app.Notification)>
<com.android.server.pm.UserManagerService: android.content.pm.UserInfo createProfileForUserEvenWhenDisallowed(java.lang.String,int,int,java.lang.String[])>
<com.android.systemui.util.InjectionInflationController.ViewInstanceCreator: com.android.systemui.qs.QuickStatusBarHeader createQsHeader()>
<com.android.settingslib.bluetooth.PanProfile: java.lang.String toString()>
<com.android.server.content.SyncManager: void dumpSyncHistory(java.io.PrintWriter)>
<com.android.server.testing.shadows.ShadowApplicationPackageManager: void setPackageUid(java.lang.String,int)>
<android.graphics.perftests.RenderNodePerfTest: void testHasIdentityMatrix()>
<com.android.server.content.SyncManager: android.content.SyncAdapterType[] getSyncAdapterTypes(int)>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: boolean isBluetoothConnecting()>
<com.android.server.usb.UsbService: void setScreenUnlockedFunctions(long)>
<com.android.settingslib.RestrictedLockUtils.EnforcedAdmin: java.lang.String toString()>
<com.android.systemui.recents.IRecentsSystemUserCallbacks: void updateRecentsVisibility(boolean)>
<com.android.systemui.qs.QSCarrierGroup: void <init>(android.content.Context,android.util.AttributeSet,com.android.systemui.statusbar.policy.NetworkController,com.android.systemui.plugins.ActivityStarter)>
<com.android.systemui.statusbar.phone.StatusBarSignalPolicy.MobileIconState: void copyTo(com.android.systemui.statusbar.phone.StatusBarSignalPolicy.MobileIconState)>
<com.android.server.locksettings.recoverablekeystore.InsecureUserException: void <init>(java.lang.String)>
<com.android.systemui.BatteryMeterView: void <init>(android.content.Context)>
<com.android.server.uri.UriGrantsManagerService: void takePersistableUriPermission(android.net.Uri,int,java.lang.String,int)>
<com.android.server.pm.PackageInstallerSession: android.content.pm.PackageInstaller.SessionInfo generateInfoScrubbed(boolean)>
<com.android.server.policy.WindowManagerPolicy: void showRecentApps()>
<com.android.powermodel.component.ModemBatteryStatsReader: java.util.List createActivities(com.android.powermodel.RawBatteryStats)>
<com.android.server.biometrics.EnrollClient: void <init>(android.content.Context,com.android.server.biometrics.Constants,com.android.server.biometrics.BiometricServiceBase.DaemonWrapper,long,android.os.IBinder,com.android.server.biometrics.BiometricServiceBase.ServiceListener,int,int,byte[],boolean,java.lang.String,com.android.server.biometrics.BiometricUtils,int[])>
<com.android.systemui.util.leak.GarbageMonitor: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.media.MediaPlayer2: void registerEventCallback(java.util.concurrent.Executor,android.media.MediaPlayer2.EventCallback)>
<com.android.server.notification.PreferencesHelper: int getAppsBypassingDndCount(int)>
<com.android.systemui.SystemUIFactory.SystemUIRootComponent: com.android.systemui.util.InjectionInflationController.ViewCreator createViewCreator()>
<com.android.server.content.SyncLogger: void purgeOldLogs()>
<com.android.photos.BitmapRegionTileSource.BitmapSource: android.graphics.Bitmap getPreviewBitmap()>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationTemplateViewWrapper: boolean disallowSingleClick(float,float)>
<com.android.systemui.ForegroundServiceController.UserStateUpdateCallback: boolean updateUserState(com.android.systemui.ForegroundServicesUserState)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glDeleteRenderbuffersOES(int,java.nio.IntBuffer)>
<com.android.server.notification.ZenLog: void traceListenerHintsChanged(int,int,int)>
<com.android.systemui.assist.AssistOrbView: android.widget.ImageView getLogo()>
<com.android.systemui.statusbar.policy.KeyButtonView: void setDelayTouchFeedback(boolean)>
<com.android.systemui.statusbar.phone.DarkIconDispatcherImpl: int getTintAnimationDuration()>
<com.android.server.notification.NotificationRecord: int getPackageVisibilityOverride()>
<com.android.systemui.classifier.PointerCountClassifier: float getFalseTouchEvaluation(int)>
<com.android.server.notification.NotificationManagerService.NotificationAssistants: void allowAdjustmentType(java.lang.String)>
<com.android.systemui.statusbar.notification.row.NotificationContentInflater: void updateInflationFlag(int,boolean)>
<com.android.systemui.tuner.ClipboardView: void startListening()>
<com.android.systemui.statusbar.policy.SecurityController: java.lang.String getDeviceOwnerName()>
<com.android.server.PersistentDataBlockManagerInternal: void clearTestHarnessModeData()>
<com.android.server.location.LocationRequestStatistics.PackageStatistics: long getDurationMs()>
<com.android.commands.svc.WifiCommand: void run(java.lang.String[])>
<com.android.server.webkit.SystemImpl: void ensureZygoteStarted()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setAutoTimeRequired(android.content.ComponentName,boolean)>
<com.google.android.startop.iorap.CheckHelpers: void checkTypeInRange(int,int)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void onPluginConnected(com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin,android.content.Context)>
<com.android.printspooler.model.PageContentRepository.PageContentProvider: void getPageContent(com.android.printspooler.model.PageContentRepository.RenderSpec,com.android.printspooler.model.PageContentRepository.OnPageContentAvailableCallback)>
<com.android.server.pm.OtaDexoptService: void onShellCommand(java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ShellCallback,android.os.ResultReceiver)>
<com.android.server.TelephonyRegistry: void notifyPreciseDataConnectionFailed(int,int,java.lang.String,java.lang.String,int)>
<com.android.systemui.shared.recents.model.TaskKeyCache: void put(com.android.systemui.shared.recents.model.Task.TaskKey,java.lang.Object)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setExpandedHeight(float)>
<com.android.systemui.statusbar.CommandQueue: void onBiometricError(java.lang.String)>
<android.net.dhcp.DhcpServingParamsParcelExt: android.net.dhcp.DhcpServingParamsParcelExt setDefaultRouters(java.net.Inet4Address[])>
<com.android.server.pm.PackageInstallerSession: android.os.ParcelFileDescriptor openWrite(java.lang.String,long,long)>
<com.android.server.broadcastradio.BroadcastRadioService: void <init>(android.content.Context)>
<com.android.systemui.keyboard.KeyboardUI: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.systemui.ForegroundServicesDialog: void onNewIntent(android.content.Intent)>
<com.android.server.notification.ValidateNotificationPeople: float getContactAffinity(android.os.UserHandle,android.os.Bundle,int,float)>
<com.android.gallery3d.exif.ExifInterface: boolean isOffsetTag(short)>
<com.android.server.content.SyncStorageEngine: int getSyncRandomOffset()>
<com.android.systemui.statusbar.policy.UserSwitcherController.UserRecord: java.lang.String toString()>
<com.android.server.accessibility.MagnificationController: float getCenterY(int)>
<com.android.systemui.statusbar.HeadsUpStatusBarView: void onMeasure(int,int)>
<com.android.keyguard.ViewMediatorCallback: void keyguardDoneDrawing()>
<com.android.systemui.plugins.ClockPlugin: void onDestroyView()>
<com.android.settingslib.CustomEditTextPreferenceCompat.CustomPreferenceDialogFragment: void onBindDialogView(android.view.View)>
<com.android.server.location.LocationRequestStatistics.PackageStatistics: long getForegroundDurationMs()>
<com.android.systemui.statusbar.phone.LightBarController: void setBiometricUnlockController(com.android.systemui.statusbar.phone.BiometricUnlockController)>
<com.android.server.ThreadPriorityBooster: void <init>(int,int)>
<com.android.systemui.pip.BasePipManager: void showPictureInPictureMenu()>
<com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem: boolean handleRequestArcTermination(com.android.server.hdmi.HdmiCecMessage)>
<com.android.server.usb.descriptors.report.UsbStrings: java.lang.String getTerminalName(int)>
<com.android.systemui.statusbar.phone.PanelView: boolean shouldGestureIgnoreXTouchSlop(float,float)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onStartedWakingUp()>
<com.android.systemui.statusbar.CrossFadeHelper: void fadeOut(android.view.View,float)>
<com.android.systemui.plugins.ActivityStarter: void startPendingIntentDismissingKeyguard(android.app.PendingIntent,java.lang.Runnable)>
<com.android.server.usb.descriptors.Usb20ACInputTerminal: byte getNumChannels()>
<com.android.systemui.plugins.PluginDependency: java.lang.Object get(com.android.systemui.plugins.Plugin,java.lang.Class)>
<com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem: boolean handleInitiateArc(com.android.server.hdmi.HdmiCecMessage)>
<com.android.systemui.statusbar.notification.collection.NotificationData: java.util.List getSnoozeCriteria(java.lang.String)>
<com.android.systemui.recents.views.TaskView: void onStartFrontTaskEnterAnimation(boolean)>
<com.android.settingslib.notification.ZenDurationDialog: void setupRadioButtons(int)>
<com.android.systemui.qs.AutoAddTracker: void setTileAdded(java.lang.String)>
<com.android.keyguard.KeyguardSimPinView: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.systemui.util.leak.TrackedGarbage: void dump(java.io.PrintWriter)>
<android.net.TcpKeepalivePacketData: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.volume.CarVolumeItem: void setOnSeekBarChangeListener(android.widget.SeekBar.OnSeekBarChangeListener)>
<com.android.server.ConnectivityService: java.lang.String[] getTetherableUsbRegexs()>
<com.android.server.notification.BadgeExtractor: void setConfig(com.android.server.notification.RankingConfig)>
<com.android.server.notification.ManagedServices: void onPackagesChanged(boolean,java.lang.String[],int[])>
<com.android.systemui.egg.MLand: void <init>(android.content.Context)>
<com.android.uiautomator.testrunner.UiAutomatorTestCase: android.os.Bundle getParams()>
<com.android.server.location.GnssSatelliteBlacklistHelperTest: void blacklistWithNonDigitCharacter_callbackIsNotCalled()>
<javax.obex.ObexPacket: javax.obex.ObexPacket read(int,java.io.InputStream)>
<com.android.server.DeviceIdleController: boolean addPowerSaveWhitelistAppInternal(java.lang.String)>
<com.android.server.pm.PackageInstallerService: void setPermissionsResult(int,boolean)>
<com.android.server.tv.UinputBridge: android.os.IBinder getToken()>
<android.net.netlink.StructNdaCacheInfo: android.net.netlink.StructNdaCacheInfo parse(java.nio.ByteBuffer)>
<com.android.systemui.shared.system.ActivityManagerWrapper: boolean startActivityFromRecents(int,android.app.ActivityOptions)>
<com.android.keyguard.KeyguardSecurityContainer.SecurityCallback: boolean dismiss(boolean,int)>
<javax.obex.ObexHelper: byte[] createHeader(javax.obex.HeaderSet,boolean)>
<com.android.commands.telecom.Telecom: void onRun()>
<com.android.server.notification.ZenModeHelper: void setConfig(android.service.notification.ZenModeConfig,android.content.ComponentName,java.lang.String)>
<com.android.server.location.GeofenceManager: void removeFence(android.location.Geofence,android.app.PendingIntent)>
<com.google.android.startop.iorap.SystemServiceUserEvent: boolean equals(java.lang.Object)>
<com.android.uiautomator.core.UiDevice: int getDisplayRotation()>
<com.android.systemui.statusbar.policy.KeyButtonDrawable: void setColorFilter(android.graphics.ColorFilter)>
<com.android.media.remotedisplay.RemoteDisplayProvider: void <init>(android.content.Context)>
<com.android.systemui.qs.tiles.AirplaneModeTile: com.android.systemui.plugins.qs.QSTile.BooleanState newTileState()>
<com.android.systemui.statusbar.notification.row.ExpandableOutlineView: int getOutlineTranslation()>
<com.android.systemui.HardwareUiLayout: android.view.ViewGroup getSeparatedView()>
<com.android.systemui.statusbar.phone.RotationButton: boolean acceptRotationProposal()>
<com.android.uiautomator.testrunner.TestCaseCollector: void <init>(java.lang.ClassLoader,com.android.uiautomator.testrunner.TestCaseCollector.TestCaseFilter)>
<com.android.settingslib.bluetooth.HearingAidProfile: boolean isAutoConnectable()>
<android.net.util.InterfaceSet: java.lang.String toString()>
<com.android.uiautomator.core.UiDevice: boolean pressKeyCode(int)>
<com.android.systemui.HardwareUiLayout: android.view.ViewGroup getListView()>
<com.android.printspooler.model.PageContentRepository.PageContentProvider: int getPageIndex()>
<com.android.server.notification.PreferencesHelper: void setNotificationDelegate(java.lang.String,int,java.lang.String,int)>
<com.android.server.ExtconUEventObserver.ExtconInfo: java.util.List getExtconInfos(java.lang.String)>
<com.google.android.startop.iorap.RequestId: boolean equals(java.lang.Object)>
<com.android.server.AppStateTracker: boolean areJobsRestricted(int,java.lang.String,boolean)>
<com.android.server.pm.PackageInstallerSession: void transfer(java.lang.String)>
<com.android.server.accessibility.AbstractAccessibilityServiceConnection.SystemSupport: void ensureWindowsAvailableTimed()>
<com.android.server.pm.permission.PermissionManagerServiceInternal: void removeAllPermissions(android.content.pm.PackageParser.Package,boolean)>
<com.android.systemui.recents.views.grid.GridTaskViewThumbnail: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.media.filterfw.samples.CameraEffectsRecordingSample: boolean onKeyDown(int,android.view.KeyEvent)>
<android.net.ipmemorystore.NetworkAttributes: java.lang.String toString()>
<android.net.ip.IpClientCallbacks: void setFallbackMulticastFilter(boolean)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: float getCurrentOverScrollAmount(boolean)>
<com.android.server.audio.MediaFocusControl: void mutePlayersForCall(int[])>
<com.android.bluetoothmidiservice.BluetoothMidiDevice: void <init>(android.content.Context,android.bluetooth.BluetoothDevice,com.android.bluetoothmidiservice.BluetoothMidiService)>
<com.android.server.tv.TvInputHal.Callback: void onStreamConfigurationChanged(int,android.media.tv.TvStreamConfig[])>
<com.android.systemui.statusbar.phone.CollapsedStatusBarFragment: void hideOperatorName(boolean)>
<com.android.systemui.statusbar.notification.row.NotificationGutsManager: com.android.systemui.statusbar.notification.row.NotificationGuts getExposedGuts()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void addContainerView(android.view.View)>
<com.android.server.usb.descriptors.UsbInterfaceDescriptor: byte getDescrIndex()>
<com.android.systemui.keyguard.KeyguardService: void onCreate()>
<com.android.systemui.statusbar.phone.StatusBar: boolean isBouncerShowing()>
<com.android.systemui.shared.system.TransactionCompat: com.android.systemui.shared.system.TransactionCompat setEarlyWakeup()>
<com.android.systemui.statusbar.phone.ScrimController: void setPanelExpansion(float)>
<com.android.systemui.statusbar.phone.StatusBar: android.os.Bundle getActivityOptions(android.view.RemoteAnimationAdapter)>
<com.android.settingslib.graph.BatteryMeterDrawableBase: float getRadiusRatio()>
<com.android.systemui.classifier.brightline.BrightLineFalsingManager: void onAffordanceSwipingStarted(boolean)>
<android.net.IIpMemoryStore: void storeBlob(java.lang.String,java.lang.String,java.lang.String,android.net.ipmemorystore.Blob,android.net.ipmemorystore.IOnStatusListener)>
<com.android.server.Watchdog: void processStarted(java.lang.String,int)>
<com.android.settingslib.bluetooth.HidProfile: int getDrawableResource(android.bluetooth.BluetoothClass)>
<com.android.server.trust.TrustArchive: void logTrustTimeout(int,android.content.ComponentName)>
<android.media.MediaController2: void cancelSessionCommand(java.lang.Object)>
<com.android.systemui.statusbar.SmartReplyController: void smartSuggestionsAdded(com.android.systemui.statusbar.notification.collection.NotificationEntry,int,int,boolean,boolean)>
<com.android.server.NetworkScoreService: boolean clearScores()>
<com.android.commands.hid.Event: byte[] getDescriptor()>
<com.android.systemui.qs.QSPanel: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.settingslib.suggestions.SuggestionLoaderCompat: void onDiscardResult(java.util.List)>
<com.android.systemui.statusbar.phone.StatusBar: void showPinningEscapeToast()>
<com.android.systemui.recents.model.RecentsTaskLoader: void loadTasks(com.android.systemui.recents.model.RecentsTaskLoadPlan,com.android.systemui.recents.model.RecentsTaskLoadPlan.Options)>
<com.android.systemui.recents.views.RecentsView: void updateStack(com.android.systemui.recents.model.TaskStack,boolean)>
<android.net.NetworkMonitorManager: boolean notifyLinkPropertiesChanged(android.net.LinkProperties)>
<com.android.systemui.statusbar.phone.ObservableScrollView: void fling(int)>
<com.android.server.location.MockProvider: void setStatus(int,android.os.Bundle,long)>
<com.android.settingslib.widget.ActionButtonsPreference: com.android.settingslib.widget.ActionButtonsPreference setButton2Visible(boolean)>
<com.android.printspooler.ui.FusedPrintersProvider: void onProviderEnabled(java.lang.String)>
<com.android.server.camera.CameraServiceProxy: void onStartUser(int)>
<com.android.printservice.recommendation.plugin.samsung.SamsungRecommendationPlugin: void stop()>
<com.android.server.input.InputManagerService: android.view.InputDevice[] getInputDevices()>
<com.android.systemui.ExpandHelper: void cancelImmediately()>
<javax.microedition.khronos.opengles.GL11: void glGetTexEnvxv(int,int,int[],int)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void setRemoved()>
<android.perftests.SystemPerfTest: void testJniArrayGetLength()>
<com.android.systemui.statusbar.HeadsUpStatusBarView: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.systemui.statusbar.policy.CastControllerImpl: void startCasting(com.android.systemui.statusbar.policy.CastController.CastDevice)>
<android.media.Controller2Link: int describeContents()>
<com.android.server.appprediction.AppPredictionPerUserService: void onConnectedStateChanged(boolean)>
<com.android.systemui.plugins.ActivityStarter: void postStartActivityDismissingKeyguard(android.content.Intent,int)>
<com.android.server.usb.descriptors.UsbDeviceDescriptor: java.lang.String getDeviceReleaseString()>
<com.android.settingslib.RestrictedLockUtils.EnforcedAdmin: void <init>(android.content.ComponentName,android.os.UserHandle)>
<com.android.settingslib.notification.EnableZenModeDialog: void bindNextAlarm(android.service.notification.Condition)>
<android.database.SQLiteDatabasePerfTest: void testSelect()>
<android.media.Session2CommandGroup: boolean hasCommand(android.media.Session2Command)>
<com.android.systemui.recents.RecentsImpl: void onVisibilityChanged(android.content.Context,boolean)>
<com.android.systemui.plugins.PluginDependencyProvider: void <init>(com.android.systemui.shared.plugins.PluginManager)>
<android.perftests.utils.BitmapUtils: void saveBitmapIntoPNG(android.content.Context,android.graphics.Bitmap,int)>
<com.android.systemui.pip.phone.PipMenuActivityController: boolean isMenuActivityVisible()>
<com.android.server.slice.SliceFullAccessList: void removeGrant(java.lang.String,int)>
<com.android.systemui.bubbles.BadgedImageView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.packageinstaller.wear.PackageInstallerImpl.InstallListener: void installSucceeded()>
<com.android.systemui.qs.TileLayout: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.LockIcon: void onUnlockMethodStateChanged()>
<com.android.systemui.util.leak.GarbageMonitor.MemoryTile: void update()>
<com.android.settingslib.core.lifecycle.ObservableFragment: void onStart()>
<javax.microedition.khronos.opengles.GL10: void glDisableClientState(int)>
<com.android.server.twilight.TwilightManager: com.android.server.twilight.TwilightState getLastTwilightState()>
<com.android.systemui.qs.TouchAnimator.Builder: com.android.systemui.qs.TouchAnimator.Builder addFloat(java.lang.Object,java.lang.String,float[])>
<com.android.server.notification.ZenModeHelper: boolean matchesCallFilter(android.os.UserHandle,android.os.Bundle,com.android.server.notification.ValidateNotificationPeople,int,float)>
<com.android.server.locksettings.recoverablekeystore.certificate.CertXml: long getSerial()>
<com.android.settingslib.drawer.TileUtils: android.util.Pair getIconFromUri(android.content.Context,java.lang.String,java.lang.String,java.util.Map)>
<com.android.settingslib.Utils: int applyAlphaAttr(android.content.Context,int,int)>
<com.android.systemui.statusbar.policy.EmergencyCryptkeeperText: void onAttachedToWindow()>
<com.android.systemui.statusbar.StatusBarIconView: void onRtlPropertiesChanged(int)>
<com.android.systemui.screenrecord.ScreenRecordDialog: void onCreate(android.os.Bundle)>
<com.android.systemui.statusbar.phone.StatusBar: boolean isHeadsUpShouldBeVisible()>
<com.android.systemui.globalactions.GlobalActionsDialog.LongPressAction: boolean onLongPress()>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper.Callback: void onSwipingAborted()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void uninstallPackageWithActiveAdmins(java.lang.String)>
<com.android.systemui.recents.Recents: boolean splitPrimaryTask(int,android.graphics.Rect,int)>
<com.android.systemui.recents.model.HighResThumbnailLoader: void onTaskDataLoaded(com.android.systemui.shared.recents.model.Task,com.android.systemui.shared.recents.model.ThumbnailData)>
<com.android.server.pm.PackageDexOptimizer: int adjustDexoptFlags(int)>
<com.android.systemui.plugins.PluginFragment: void onCreate(android.content.Context,android.content.Context)>
<com.android.server.hdmi.SystemAudioInitiationActionFromAvr: void sendSetSystemAudioMode(boolean,int)>
<com.android.systemui.settings.BrightnessDialog: void onStop()>
<com.android.server.audio.AudioService: void reloadAudioSettings()>
<com.android.server.ConnectivityService: void stopTethering(int,java.lang.String)>
<com.android.systemui.statusbar.policy.FlashlightControllerImpl: boolean isEnabled()>
<com.android.systemui.recents.views.grid.GridTaskView: void <init>(android.content.Context)>
<com.android.settingslib.graph.BatteryMeterDrawableBase: boolean getCharging()>
<com.android.server.biometrics.LoggableMonitor: void logOnAcquired(android.content.Context,int,int,int)>
<com.android.server.systemcaptions.SystemCaptionsManagerService: void onStart()>
<com.android.server.display.color.ColorDisplayService: void <init>(android.content.Context)>
<com.android.server.biometrics.face.FaceConstants: java.lang.String tagAuthToken()>
<com.android.server.infra.AbstractMasterSystemService: boolean isBindInstantServiceAllowed()>
<com.android.systemui.util.AsyncSensorManager: boolean injectSensorDataImpl(android.hardware.Sensor,float[],int,long)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setHeadsUpBoundaries(int,int)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void setAffordanceAlpha(float)>
<android.media.MediaPlayer2.DrmPreparationInfo: java.lang.String getMimeType()>
<com.android.systemui.analytics.DataCollector: void setNotificationExpanded()>
<com.android.systemui.volume.MediaRouterWrapper: void <init>(androidx.mediarouter.media.MediaRouter)>
<com.android.server.notification.NotificationManagerService.NotificationListeners: boolean checkType(android.os.IInterface)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void onBiometricError(java.lang.String)>
<com.android.systemui.util.AutoMarqueeTextView: void onFinishInflate()>
<com.android.systemui.statusbar.phone.StatusBarIconList: com.android.systemui.statusbar.phone.StatusBarIconList.Slot getSlot(java.lang.String)>
<com.android.settingslib.wifi.WifiTracker: boolean isConnected()>
<com.android.server.notification.NotificationRecord: void recordDismissalSentiment(int)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: void registerCallback(com.android.settingslib.bluetooth.CachedBluetoothDevice.Callback)>
<com.android.server.audio.PlaybackActivityMonitor: void unduckPlayers(com.android.server.audio.FocusRequester)>
<javax.microedition.khronos.opengles.GL10: void glMultiTexCoord4x(int,int,int,int,int)>
<com.android.server.pm.permission.BasePermission: boolean addToTree(int,android.content.pm.PermissionInfo,com.android.server.pm.permission.BasePermission)>
<com.android.uiautomator.testrunner.UiAutomatorTestCase: com.android.uiautomator.testrunner.IAutomationSupport getAutomationSupport()>
<com.android.server.notification.NotificationManagerService.WorkerHandler: void scheduleOnPackageChanged(boolean,int,java.lang.String[],int[])>
<com.android.settingslib.bluetooth.HearingAidProfile: void setPreferred(android.bluetooth.BluetoothDevice,boolean)>
<com.android.systemui.statusbar.phone.KeyguardClockPositionAlgorithm: void loadDimens(android.content.res.Resources)>
<com.android.server.timedetector.TimeDetectorService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.pm.PackageManagerService: java.lang.String getSystemCaptionsServicePackageName()>
<com.android.uiautomator.core.InstrumentationUiAutomatorBridge: long getSystemLongPressTime()>
<com.android.systemui.screenshot.ScreenshotSelectorView: void draw(android.graphics.Canvas)>
<com.android.server.usb.descriptors.UsbEndpointDescriptor: void <init>(int,byte)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.util.List getPermittedCrossProfileNotificationListeners(android.content.ComponentName)>
<android.os.PackageManagerPerfTest: void testCheckPermissionExists()>
<com.android.server.display.DisplayManagerService: void systemReady(boolean,boolean)>
<com.android.server.statusbar.StatusBarManagerInternal: void onCameraLaunchGestureDetected(int)>
<com.android.uiautomator.core.UiScrollable: boolean scrollDescriptionIntoView(java.lang.String)>
<com.android.server.usb.UsbService: void setCurrentFunction(java.lang.String,boolean)>
<com.android.packageinstaller.television.UninstallAlertFragment: void onCreateActions(java.util.List,android.os.Bundle)>
<com.android.server.testing.shadows.ShadowSlog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.android.printspooler.model.PrintSpoolerService: com.android.printspooler.model.PrintSpoolerService peekInstance()>
<com.android.systemui.statusbar.policy.InflatedSmartReplies.SmartRepliesAndActions: java.lang.CharSequence[] getSmartReplies()>
<com.android.systemui.statusbar.StatusBarIconView: void debug(int)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void onClick(android.view.View)>
<com.android.systemui.tuner.TunerService: boolean isTunerEnabled(android.content.Context)>
<com.android.systemui.SwipeHelper: float getSize(android.view.View)>
<com.android.settingslib.bluetooth.A2dpProfile: void setPreferred(android.bluetooth.BluetoothDevice,boolean)>
<com.android.systemui.statusbar.ViewTransformationHelper: void transformTo(com.android.systemui.statusbar.TransformableView,java.lang.Runnable)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean isSoundEffectsEnabled()>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: com.android.systemui.recents.views.TaskViewTransform getFrontOfStackTransform()>
<com.android.systemui.classifier.FalsingManagerImpl: void onScreenTurningOn()>
<com.android.uiautomator.core.UiScrollable: com.android.uiautomator.core.UiObject getChildByDescription(com.android.uiautomator.core.UiSelector,java.lang.String,boolean)>
<com.android.server.SystemServerInitThreadPool: com.android.server.SystemServerInitThreadPool get()>
<com.android.server.SystemUpdateManagerService: void <init>(android.content.Context)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setChronometerRunning(boolean)>
<com.android.server.pm.KeySetManagerService: com.android.server.pm.KeySetHandle getKeySetByAliasAndPackageNameLPr(java.lang.String,java.lang.String)>
<com.android.systemui.classifier.brightline.BrightLineFalsingManager: boolean shouldEnforceBouncer()>
<com.android.systemui.statusbar.car.UserGridRecyclerView.UserSelectionListener: void onUserSelected(com.android.systemui.statusbar.car.UserGridRecyclerView.UserRecord)>
<javax.microedition.khronos.opengles.GL10: void glLightfv(int,int,float[],int)>
<com.android.systemui.tuner.TunerServiceImpl: void destroy()>
<com.android.systemui.shared.system.InputConsumerController: void unregisterInputConsumer()>
<com.android.systemui.statusbar.notification.row.ExpandableView: boolean isSummaryWithChildren()>
<com.android.server.audio.AudioService: int getVolumeIndexForAttributes(android.media.AudioAttributes)>
<com.android.gallery3d.exif.ExifTag: void setOffset(int)>
<com.android.systemui.statusbar.NotificationShelf: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)>
<com.android.systemui.qs.tiles.UserDetailView.Adapter: void <init>(android.content.Context,com.android.systemui.statusbar.policy.UserSwitcherController)>
<com.android.server.attention.AttentionManagerService: void <init>(android.content.Context)>
<com.android.settingslib.media.PhoneMediaDevice: java.lang.String getName()>
<com.android.systemui.qs.QuickQSPanel: void addDivider()>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: com.android.systemui.statusbar.KeyguardAffordanceView getRightView()>
<com.android.systemui.globalactions.GlobalActionsImpl: void showGlobalActions(com.android.systemui.plugins.GlobalActions.GlobalActionsManager)>
<com.android.systemui.qs.car.CarQSFragment: boolean isCustomizing()>
<com.android.server.GestureLauncherService: boolean isGestureLauncherEnabled(android.content.res.Resources)>
<com.android.server.accounts.AccountManagerService: boolean removeSharedAccountAsUser(android.accounts.Account,int)>
<com.android.systemui.tuner.TunerFragment: void onCreate(android.os.Bundle)>
<com.android.server.appprediction.RemoteAppPredictionService: void onDestroyPredictionSession(android.app.prediction.AppPredictionSessionId)>
<com.android.systemui.keyguard.KeyguardSliceProvider: androidx.slice.Slice onBindSlice(android.net.Uri)>
<com.android.systemui.shared.plugins.PluginManagerImpl.CrashWhilePluginActiveException: void <init>(java.lang.Throwable)>
<com.android.server.usb.descriptors.tree.UsbDescriptorsConfigNode: void report(com.android.server.usb.descriptors.report.ReportCanvas)>
<com.android.powermodel.RawBatteryStats: com.android.powermodel.RawBatteryStats.Record getSingle(java.lang.Class)>
<com.android.server.audio.AudioService: void unregisterAudioFocusClient(java.lang.String)>
<com.android.systemui.MultiListLayout: float getAnimationOffsetY()>
<com.android.systemui.statusbar.BackDropView: void <init>(android.content.Context)>
<com.android.systemui.recents.events.ui.focus.NavigateTaskViewEvent: com.android.systemui.recents.events.ui.focus.NavigateTaskViewEvent.Direction getDirectionFromKeyCode(int)>
<com.android.systemui.doze.DozeMachine.Service: void setDozeScreenState(int)>
<com.android.server.IpSecService: android.net.IpSecUdpEncapResponse openUdpEncapsulationSocket(int,android.os.IBinder)>
<com.android.systemui.statusbar.NotificationShelf: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.server.appop.AppOpsService: void resetAllModes(int,java.lang.String)>
<com.android.systemui.shared.system.TaskStackChangeListeners: void onTaskStackChanged()>
<com.android.shell.RemoteBugreportReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.android.location.provider.LocationRequestUnbundled: float getSmallestDisplacement()>
<com.android.keyguard.KeyguardClockSwitch: void onAttachedToWindow()>
<com.android.systemui.statusbar.phone.NotificationsQuickSettingsContainer: boolean drawChild(android.graphics.Canvas,android.view.View,long)>
<com.android.systemui.recents.views.TaskStackView: boolean isTouchPointInView(float,float,com.android.systemui.recents.views.TaskView)>
<com.android.server.HardwarePropertiesManagerService: android.os.CpuUsageInfo[] getCpuUsages(java.lang.String)>
<com.android.server.appprediction.RemoteAppPredictionService: void <init>(android.content.Context,java.lang.String,android.content.ComponentName,int,com.android.server.appprediction.RemoteAppPredictionService.RemoteAppPredictionServiceCallbacks,boolean,boolean)>
<com.android.server.statusbar.StatusBarManagerService: void expandSettingsPanel(java.lang.String)>
<com.android.systemui.statusbar.KeyguardIndicationController: void showTransientIndication(int)>
<com.android.server.pm.PackageManagerService: android.content.pm.PackageInfo getPackageInfoVersioned(android.content.pm.VersionedPackage,int,int)>
<android.os.KernelCpuThreadReaderPerfTest: void timeReadCurrentProcessCpuUsage()>
<com.android.systemui.statusbar.policy.RemoteInputView.RemoteEditText: boolean onKeyDown(int,android.view.KeyEvent)>
<com.android.systemui.statusbar.phone.HeadsUpAppearanceController: boolean shouldBeVisible()>
<com.android.settingslib.animation.DisappearAnimationUtils: void <init>(android.content.Context,long,float,float,android.view.animation.Interpolator)>
<com.android.systemui.statusbar.phone.HeadsUpManagerPhone: void setHeadsUpGoingAway(boolean)>
<android.view.autofill.AbstractAutofillPerfTestCase: void onCreate(android.perftests.utils.StubActivity)>
<com.android.commands.sm.Sm: void runFstrim()>
<com.android.systemui.statusbar.phone.ContextualButton: com.android.systemui.statusbar.policy.KeyButtonDrawable getNewDrawable()>
<javax.obex.Authenticator: javax.obex.PasswordAuthentication onAuthenticationChallenge(java.lang.String,boolean,boolean)>
<com.android.keyguard.KeyguardPasswordView: int getWrongPasswordStringId()>
<com.android.systemui.keyguard.KeyguardViewMediator: void onWakeAndUnlocking()>
<com.android.server.hdmi.HdmiCecLocalDevicePlayback.ActiveWakeLock: boolean isHeld()>
<com.android.systemui.statusbar.KeyguardIndicationController: void setVisible(boolean)>
<com.android.nfc_extras.EeIOException: void <init>(java.lang.String)>
<com.android.server.autofill.ui.PendingUi: boolean matches(android.os.IBinder)>
<com.android.settingslib.bluetooth.HeadsetProfile: boolean setActiveDevice(android.bluetooth.BluetoothDevice)>
<com.android.server.media.RemoteDisplayProviderWatcher: void <init>(android.content.Context,com.android.server.media.RemoteDisplayProviderWatcher.Callback,android.os.Handler,int)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void onFinishInflate()>
<com.android.systemui.qs.tileimpl.QSTileBaseView: boolean animationsEnabled()>
<com.android.commands.media.Media: void main(java.lang.String[])>
<com.android.server.location.GnssMeasurementCorrectionsProvider: boolean isAvailableInPlatform()>
<com.android.uiautomator.core.UiScrollable: boolean scrollTextIntoView(java.lang.String)>
<com.android.systemui.statusbar.phone.StatusBarIconControllerImpl: void removeAllIconsForSlot(java.lang.String)>
<com.android.settingslib.drawable.CircleFramedDrawable: int getIntrinsicHeight()>
<android.os.PackageManagerPerfTest: void testGetPackageInfo()>
<com.android.printservice.recommendation.plugin.samsung.SamsungRecommendationPlugin: void start(com.android.printservice.recommendation.PrintServicePlugin.PrinterDiscoveryCallback)>
<com.android.systemui.bubbles.BadgedImageView: void <init>(android.content.Context)>
<com.android.server.display.AmbientBrightnessStatsTracker: void <init>(android.os.UserManager,com.android.server.display.AmbientBrightnessStatsTracker.Injector)>
<com.android.systemui.qs.QSFragment: com.android.systemui.qs.QSPanel getQsPanel()>
<com.android.systemui.statusbar.policy.HeadsUpManager: boolean isSnoozed(java.lang.String)>
<com.android.server.PruneInstantAppsJobService: boolean onStopJob(android.app.job.JobParameters)>
<com.android.server.pm.PackageSender: void sendPackageAddedForNewUsers(java.lang.String,boolean,boolean,int,int[],int[])>
<com.android.systemui.assist.ui.EdgeLight: float getCenter()>
<com.android.systemui.qs.customize.QSCustomizer: boolean onMenuItemClick(android.view.MenuItem)>
<com.android.systemui.classifier.ProximityEvaluator: float evaluate(float,int)>
<com.android.server.locksettings.recoverablekeystore.TestOnlyInsecureCertificateHelper: java.lang.String getDefaultCertificateAliasIfEmpty(java.lang.String)>
<com.android.server.content.SyncStorageEngine: void removeActiveSync(android.content.SyncInfo,int)>
<com.android.systemui.statusbar.notification.row.NotificationGuts.OnSettingsClickListener: void onClick(android.view.View,int)>
<com.android.server.pm.dex.DexoptOptions: void <init>(java.lang.String,int,int)>
<android.net.shared.IpConfigurationParcelableUtil: java.net.InetAddress unparcelAddress(java.lang.String)>
<com.android.server.testing.shadows.ShadowSlog: int i(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.phone.NotificationIconContainer: int getActualWidth()>
<com.android.systemui.statusbar.notification.TransformState: boolean transformViewTo(com.android.systemui.statusbar.notification.TransformState,float)>
<com.android.server.location.GpsPsdsDownloader: byte[] doDownload(java.lang.String)>
<com.android.server.utils.ManagedApplicationService.LogEvent: void <init>(long,android.content.ComponentName,int)>
<com.android.uiautomator.core.UiDevice: void wakeUp()>
<com.android.server.pm.DynamicCodeLoggingService: void schedule(android.content.Context)>
<com.android.settingslib.widget.FooterPreference: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.mtp.MtpDocumentsProvider: android.database.Cursor queryChildDocuments(java.lang.String,java.lang.String[],java.lang.String)>
<com.android.powermodel.AttributionKey: int hashCode()>
<com.android.server.PackageWatchdog: void registerHealthObserver(com.android.server.PackageWatchdog.PackageHealthObserver)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glDeleteFramebuffersOES(int,java.nio.IntBuffer)>
<com.android.server.broadcastradio.hal1.BroadcastRadioService: void finalize()>
<com.android.systemui.statusbar.phone.CollapsedStatusBarFragment: void showClock(boolean)>
<android.perftests.utils.Stats: double getStandardDeviation()>
<com.android.server.notification.NotificationDelegate: void onNotificationClear(int,int,java.lang.String,java.lang.String,int,int,java.lang.String,int,int,com.android.internal.statusbar.NotificationVisibility)>
<com.android.statsd.loadtest.PerfData: void onAlarm(android.content.Context)>
<com.android.server.accessibility.AccessibilityManagerService.AccessibilityDisplayListener: void onDisplayChanged(int)>
<com.android.systemui.statusbar.StatusBarIconView: void setOnVisibilityChangedListener(com.android.systemui.statusbar.StatusBarIconView.OnVisibilityChangedListener)>
<com.android.settingslib.wifi.AccessPoint: java.lang.String getSummary(android.content.Context,java.lang.String,android.net.NetworkInfo.DetailedState,boolean,java.lang.String)>
<com.android.server.content.SyncStorageEngine: long insertStartSyncEvent(com.android.server.content.SyncOperation,long)>
<com.android.systemui.statusbar.policy.ZenModeController: android.service.notification.ZenModeConfig getConfig()>
<com.android.systemui.statusbar.notification.stack.ViewState: long cancelAnimatorAndGetNewDuration(long,android.animation.ValueAnimator)>
<com.android.systemui.pip.phone.PipMotionHelper: boolean isGestureToDismissArea(android.graphics.Rect,float,float,boolean)>
<com.android.mtp.MtpDocumentsProvider: boolean isChildDocument(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.policy.RemoteInputView.RemoteEditText: boolean onCheckIsTextEditor()>
<com.android.systemui.statusbar.phone.StatusBarIconHolder: com.android.internal.statusbar.StatusBarIcon getIcon()>
<com.android.systemui.util.wakelock.DelayedWakeLock: java.lang.Runnable wrap(java.lang.Runnable)>
<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice queryIntentActivities(android.content.Intent,java.lang.String,int,int)>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: void disconnect(com.android.settingslib.bluetooth.CachedBluetoothDevice)>
<com.android.systemui.statusbar.notification.ImageTransformState: void recycle()>
<com.android.server.slice.SliceManagerService: int checkAccess(java.lang.String,android.net.Uri,int,int)>
<com.android.systemui.recents.views.RecentsView: void requestDisallowInterceptTouchEvent(boolean)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void setSwitchingUser(boolean)>
<com.android.systemui.recents.views.grid.GridTaskViewThumbnail: void updateThumbnailMatrix()>
<android.os.PackageManagerPerfTest: void testGetActivityInfo()>
<com.android.server.audio.MediaFocusControl: void dump(java.io.PrintWriter)>
<com.android.commands.svc.DataCommand: java.lang.String shortHelp()>
<com.android.systemui.FontSizeUtils: void updateFontSize(android.view.View,int,int)>
<com.google.android.startop.iorap.IorapForwardingService: com.google.android.startop.iorap.IIorap provideIorapRemote()>
<com.android.server.pm.Installer: void assertFsverityRootHashMatches(java.lang.String,byte[])>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetTexGenfv(int,int,float[],int)>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: void initialize(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void onUiModeChanged()>
<com.android.wallpapercropper.WallpaperCropActivity: java.lang.String getSharedPreferencesKey()>
<com.android.systemui.statusbar.StatusBarIconView: void setIconColor(int,boolean)>
<android.net.netlink.StructNdMsg: boolean nudValid()>
<com.android.server.testing.shadows.ShadowBinder: void setCallingUserHandle(android.os.UserHandle)>
<com.android.server.HardwarePropertiesManagerService: float[] getFanSpeeds(java.lang.String)>
<com.android.server.biometrics.AuthenticationClient: boolean isBiometricPrompt()>
<com.android.preload.ui.SwingUI: java.io.File[] showOpenDialog(boolean)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: boolean hasActiveNotifications()>
<com.android.server.policy.WindowManagerPolicy.InputConsumer: void dismiss()>
<com.android.systemui.recents.events.ui.TaskViewDismissedEvent: void <init>(com.android.systemui.shared.recents.model.Task,com.android.systemui.recents.views.TaskView,com.android.systemui.recents.utilities.AnimationProps)>
<com.android.gallery3d.exif.ExifInterface: boolean rewriteExif(java.lang.String,java.util.Collection)>
<com.android.bluetoothmidiservice.PacketEncoder.PacketReceiver: void writePacket(byte[],int)>
<com.android.systemui.fragments.FragmentHostManager: void onConfigurationChanged(android.content.res.Configuration)>
<javax.microedition.khronos.opengles.GL10: void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: boolean isGroupNotFullyVisible()>
<com.android.server.notification.NotificationRecord: boolean canShowBadge()>
<com.android.uiautomator.core.UiScrollable: boolean scrollForward()>
<com.android.uiautomator.core.UiObject: boolean clickTopLeft()>
<com.android.systemui.statusbar.NotificationShelf: void onUiModeChanged()>
<com.android.systemui.statusbar.phone.StatusIconContainer: void addIgnoredSlot(java.lang.String)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean setKeyguardDisabled(android.content.ComponentName,boolean)>
<com.android.systemui.statusbar.phone.ScrimController.Callback: void onDisplayBlanked()>
<com.android.systemui.bubbles.BubbleStackView: void onOrientationChanged()>
<com.android.systemui.statusbar.policy.ExtensionController.TunerFactory: java.lang.String[] keys()>
<com.android.settingslib.media.LocalMediaManager: void startScan()>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: boolean shouldSnapBack()>
<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice getAllIntentFilters(java.lang.String)>
<com.android.server.location.GnssBatchingProvider: int getBatchSize()>
<com.android.printservice.recommendation.plugin.xerox.XeroxPrintServiceRecommendationPlugin: void start(com.android.printservice.recommendation.PrintServicePlugin.PrinterDiscoveryCallback)>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: boolean handleSlideBack()>
<com.android.keyguard.KeyguardPinBasedInputView: boolean onKeyDown(int,android.view.KeyEvent)>
<com.android.systemui.statusbar.policy.AccessibilityManagerWrapper: void addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager.AccessibilityStateChangeListener)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin createMenu()>
<com.android.server.usb.UsbService: void setPortRoles(java.lang.String,int,int)>
<com.android.systemui.statusbar.car.UserGridRecyclerView.UserAdapter.UserAdapterViewHolder: void <init>(android.view.View)>
<com.android.keyguard.KeyguardClockSwitch: void onTimeZoneChanged(java.util.TimeZone)>
<com.android.systemui.settings.BrightnessDialog: boolean onKeyDown(int,android.view.KeyEvent)>
<com.android.gallery3d.glrenderer.UploadedTexture: boolean onBind(com.android.gallery3d.glrenderer.GLCanvas)>
<android.media.MediaSession2: void close()>
<com.android.server.display.AmbientBrightnessStatsTracker: void stop()>
<com.android.server.content.SyncManager: void dump(java.io.FileDescriptor,java.io.PrintWriter,boolean)>
<com.android.systemui.qs.PagedTileLayout: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.systemui.statusbar.policy.KeyButtonRipple: void abortDelayedRipple()>
<com.android.systemui.statusbar.phone.RotationButton: boolean show()>
<com.android.systemui.shared.system.InputChannelCompat.InputEventReceiver: void <init>(android.view.InputChannel,android.os.Looper,android.view.Choreographer,com.android.systemui.shared.system.InputChannelCompat.InputEventListener)>
<com.android.server.contentsuggestions.ContentSuggestionsManagerService: int getMaximumTemporaryServiceDurationMs()>
<com.android.server.MountServiceIdler: void scheduleIdlePass(android.content.Context)>
<android.net.ip.IIpClient: void shutdown()>
<com.android.systemui.shared.system.TaskStackChangeListener: void onActivityPinned(java.lang.String,int,int,int)>
<com.android.systemui.recents.views.lowram.TaskStackLowRamLayoutAlgorithm: float getMinScrollP()>
<com.android.settingslib.media.ConnectionRecordManager: com.android.settingslib.media.ConnectionRecordManager getInstance()>
<com.android.settingslib.volume.MediaSessions: java.lang.String getControllerName(android.media.session.MediaController)>
<com.android.systemui.keyguard.WorkLockActivity: void onWindowFocusChanged(boolean)>
<com.android.uiautomator.core.UiAutomatorBridge: boolean setRotation(int)>
<com.android.systemui.statusbar.phone.NavigationBarView: int getBackDrawableRes()>
<com.android.systemui.shared.system.SyncRtSurfaceTransactionApplierCompat: void applyParams(com.android.systemui.shared.system.TransactionCompat,com.android.systemui.shared.system.SyncRtSurfaceTransactionApplierCompat.SurfaceParams)>
<com.android.gallery3d.exif.ExifInterface: byte[] getTagByteValues(int,int)>
<com.android.systemui.statusbar.NotificationShelf: com.android.systemui.statusbar.notification.stack.ExpandableViewState createExpandableViewState()>
<com.android.settingslib.widget.LayoutPreference: void <init>(android.content.Context,int)>
<com.android.server.locksettings.recoverablekeystore.certificate.CertXml: java.security.cert.CertPath getRandomEndpointCert(java.security.cert.X509Certificate)>
<com.android.systemui.qs.tiles.UserDetailView.Adapter: void onClick(android.view.View)>
<com.android.systemui.recents.views.FixedSizeImageView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.statusbar.AlphaOptimizedImageView: void <init>(android.content.Context)>
<com.android.server.usb.descriptors.UsbACMixerUnit: byte getUnitID()>
<com.android.server.location.MockProvider: void sendExtraCommand(java.lang.String,android.os.Bundle)>
<com.android.wallpapercropper.CropView: void <init>(android.content.Context)>
<com.android.statementservice.retriever.AssociationServiceException: void <init>(java.lang.String,java.lang.Exception)>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: int getInitialFocusState()>
<com.android.settingslib.widget.BarChartInfo: com.android.settingslib.widget.BarViewInfo[] getBarViewInfos()>
<com.android.server.notification.NotificationManagerService.NotificationAssistants: void <init>(android.content.Context,java.lang.Object,com.android.server.notification.ManagedServices.UserProfiles,android.content.pm.IPackageManager)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setChildTransferInProgress(boolean)>
<com.android.systemui.statusbar.notification.row.FooterView: boolean isButtonVisible()>
<com.android.systemui.statusbar.car.CarFacetButtonController: void taskChanged(java.util.List)>
<com.android.server.notification.PreferencesHelper: org.json.JSONArray dumpChannelsJson(com.android.server.notification.NotificationManagerService.DumpFilter)>
<com.android.systemui.statusbar.StatusBarIconView: void setVisibleState(int,boolean,java.lang.Runnable,long)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.String getWifiMacAddress(android.content.ComponentName)>
<com.android.systemui.SwipeHelper: void setDisableHardwareLayers(boolean)>
<com.android.server.location.GnssLocationProvider: long getStatusUpdateTime()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setHeadsUp(boolean)>
<com.android.server.content.ContentService: void cancelSync(android.accounts.Account,java.lang.String,android.content.ComponentName)>
<com.android.server.print.RemotePrintService.PrintServiceCallbacks: void onServiceDied(com.android.server.print.RemotePrintService)>
<com.android.systemui.statusbar.phone.StatusBar: void start()>
<com.android.server.display.VirtualDisplayAdapter: com.android.server.display.DisplayDevice createVirtualDisplayLocked(android.hardware.display.IVirtualDisplayCallback,android.media.projection.IMediaProjection,int,java.lang.String,java.lang.String,int,int,int,android.view.Surface,int,java.lang.String)>
<com.android.keyguard.KeyguardClockSwitch: void refresh()>
<com.android.server.biometrics.EnrollClient: int statsAction()>
<com.android.server.pm.permission.BasePermission: boolean isNormal()>
<com.android.server.NetworkManagementService: void enableIpv6(java.lang.String)>
<com.android.systemui.statusbar.phone.ContextualButtonGroup: com.android.systemui.statusbar.phone.ContextualButton getVisibleContextButton()>
<android.media.BufferingParams: int describeContents()>
<com.android.systemui.statusbar.phone.LightBarTransitionsController: void saveState(android.os.Bundle)>
<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexxvOES(java.nio.IntBuffer)>
<com.android.server.accounts.AccountManagerService: void validateAccounts(int)>
<com.android.systemui.qs.customize.TileAdapter: int getItemViewType(int)>
<com.android.settingslib.inputmethod.InputMethodPreference: int compareTo(com.android.settingslib.inputmethod.InputMethodPreference,java.text.Collator)>
<com.android.server.pm.PackageManagerService: void deletePackageAsUser(java.lang.String,int,android.content.pm.IPackageDeleteObserver,int,int)>
<com.android.server.DeviceIdleController: void <init>(android.content.Context)>
<com.android.server.pm.UserRestrictionsUtils: void writeRestrictions(org.xmlpull.v1.XmlSerializer,android.os.Bundle,java.lang.String)>
<com.android.systemui.statusbar.notification.stack.NotificationListContainer: void generateChildOrderChangedEvent()>
<com.android.settingslib.bluetooth.HidDeviceProfile: java.lang.String toString()>
<com.android.server.pm.InstructionSets: java.lang.String[] getAppDexInstructionSets(android.content.pm.ApplicationInfo)>
<com.android.systemui.plugins.ViewProvider: android.view.View getView()>
<com.android.server.usb.descriptors.Usb20ACOutputTerminal: byte getSourceID()>
<com.android.server.policy.WindowManagerPolicy.WindowManagerFuncs: void screenTurningOff(com.android.server.policy.WindowManagerPolicy.ScreenOffListener)>
<com.android.statsd.loadtest.NumericalWatcher: void afterTextChanged(android.text.Editable)>
<com.android.systemui.statusbar.phone.ScrimController: boolean onPreDraw()>
<com.android.settingslib.bluetooth.LocalBluetoothProfile: boolean disconnect(android.bluetooth.BluetoothDevice)>
<com.android.systemui.statusbar.policy.FlashlightControllerImpl: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.statusbar.policy.ZenModeControllerImpl: long getNextAlarm()>
<com.android.systemui.statusbar.policy.AccessibilityController: void onTouchExplorationStateChanged(boolean)>
<com.android.server.appop.AppOpsService: void finishOperation(android.os.IBinder,int,int,java.lang.String)>
<com.android.settingslib.display.DisplayDensityUtils: int getCurrentIndex()>
<com.android.settingslib.core.instrumentation.SharedPreferencesLogger: java.util.Set getStringSet(java.lang.String,java.util.Set)>
<com.android.server.policy.BurnInProtectionHelper: void onAnimationUpdate(android.animation.ValueAnimator)>
<com.android.photos.BitmapRegionTileSource: int getImageWidth()>
<com.android.systemui.statusbar.policy.HeadsUpManager: boolean hasPinnedHeadsUp()>
<com.android.systemui.statusbar.policy.UserInfoControllerImpl: void onDensityOrFontScaleChanged()>
<com.android.packageinstaller.wear.WearPackageIconProvider: boolean onCreate()>
<android.text.PrecomputedTextMemoryUsageTest: void setUp()>
<com.android.printspooler.model.CustomPrinterIconCache: void <init>(java.io.File)>
<com.android.settingslib.core.lifecycle.ObservableDialogFragment: void onResume()>
<com.android.printservice.recommendation.plugin.hp.ServiceRecommendationPlugin: java.util.ArrayList getPrinters()>
<com.android.systemui.qs.tiles.UserTile: com.android.systemui.plugins.qs.QSTile.State newTileState()>
<com.android.systemui.plugins.FalsingManager: void onNotificatonStartDraggingDown()>
<com.android.gallery3d.exif.ExifInterface: double convertLatOrLongToDouble(com.android.gallery3d.exif.Rational[],java.lang.String)>
<com.android.systemui.recents.views.RecentsView: void onBusEvent(com.android.systemui.recents.events.ui.dragndrop.DragEndEvent)>
<com.android.systemui.assist.AssistOrbView: void animateCircleSize(float,long,long,android.view.animation.Interpolator)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean keepInParent()>
<com.android.systemui.biometrics.FaceDialogView: void onAuthenticationFailed(java.lang.String)>
<android.app.backup.ForwardingBackupAgent: void onBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>
<com.android.systemui.statusbar.policy.HeadsUpManager.HeadsUpEntry: void setExpanded(boolean)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: boolean areChildrenExpanded()>
<com.android.systemui.bubbles.animation.PhysicsAnimationLayout.AllAnimationsForPropertyFinishedEndListener: void onAnimationEnd(androidx.dynamicanimation.animation.DynamicAnimation,boolean,float,float)>
<com.android.photos.BitmapRegionTileSource.BitmapSource: com.android.photos.BitmapRegionTileSource.BitmapSource.State getLoadingState()>
<com.android.server.statusbar.StatusBarManagerService: void disable(int,android.os.IBinder,java.lang.String)>
<com.android.systemui.recents.misc.SystemServicesProxy: void setPipVisibility(boolean)>
<com.android.settingslib.applications.AppUtils: boolean hasUsbDefaults(android.hardware.usb.IUsbManager,java.lang.String)>
<com.android.systemui.recents.misc.SystemServicesProxy: android.graphics.Rect getWindowRect()>
<com.android.systemui.recents.events.ui.DismissTaskViewEvent: void <init>(com.android.systemui.recents.views.TaskView)>
<com.android.server.biometrics.face.FaceConstants: int actionBiometricAuth()>
<com.android.server.usb.descriptors.Usb20ACInputTerminal: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>
<android.media.Session2Command: boolean equals(java.lang.Object)>
<android.widget.TextViewFontFamilyLayoutPerfTest: void testConstruction()>
<com.android.systemui.statusbar.notification.row.NotificationBackgroundView: void setTint(int)>
<com.android.systemui.statusbar.phone.NavigationModeController: void <init>(android.content.Context,com.android.systemui.statusbar.policy.DeviceProvisionedController,com.android.systemui.UiOffloadThread)>
<com.android.systemui.statusbar.notification.row.NotificationSnooze: boolean willBeRemoved()>
<com.android.systemui.SwipeHelper: void invalidateGlobalRegion(android.view.View)>
<com.android.server.audio.PlayerFocusEnforcer: boolean duckPlayers(com.android.server.audio.FocusRequester,com.android.server.audio.FocusRequester,boolean)>
<com.android.server.contentcapture.ContentCaptureManagerService: void onServicePackageUpdatedLocked(int)>
<com.android.server.tv.TvInputHardwareManager.Listener: void onHardwareDeviceRemoved(android.media.tv.TvInputHardwareInfo)>
<com.android.systemui.appops.AppOpItem: int getCode()>
<com.android.systemui.statusbar.CommandQueue: void animateCollapsePanels(int,boolean)>
<com.android.systemui.qs.QSFooter: void setKeyguardShowing(boolean)>
<com.android.server.pm.PackageManagerService: void extendVerificationTimeout(int,int,long)>
<com.android.server.policy.WindowManagerPolicy: boolean isKeyguardTrustedLw()>
<com.android.server.accessibility.AccessibilityManagerService: long addClient(android.view.accessibility.IAccessibilityManagerClient,int)>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: void resetMenu()>
<com.android.printspooler.util.ApprovedPrintServices: boolean isApprovedService(android.content.ComponentName)>
<javax.obex.ObexSession: boolean handleAuthChall(javax.obex.HeaderSet)>
<com.android.systemui.qs.car.CarQSFooter: void onUserInfoChanged(java.lang.String,android.graphics.drawable.Drawable,java.lang.String)>
<com.android.keyguard.KeyguardSecurityViewFlipper: void onMeasure(int,int)>
<com.android.server.locksettings.recoverablekeystore.PlatformDecryptionKey: void <init>(int,android.security.keystore.AndroidKeyStoreSecretKey)>
<com.android.server.autofill.ui.AutoFillUI.AutoFillUiCallback: void dispatchUnhandledKey(android.view.autofill.AutofillId,android.view.KeyEvent)>
<com.android.systemui.statusbar.notification.row.ExpandableView: int getCollapsedHeight()>
<com.android.server.FgThread: java.util.concurrent.Executor getExecutor()>
<com.android.systemui.statusbar.notification.stack.AnimationFilter: com.android.systemui.statusbar.notification.stack.AnimationFilter animateY(android.view.View)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: int getTopPadding()>
<android.media.MediaController2: java.lang.Object sendSessionCommand(android.media.Session2Command,android.os.Bundle)>
<com.android.systemui.statusbar.policy.KeyButtonView: void loadAsync(android.graphics.drawable.Icon)>
<com.android.server.pm.ShortcutDumpFiles: void <init>(com.android.server.pm.ShortcutService)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onRtlPropertiesChanged(int)>
<com.android.systemui.recents.RecentsOnboarding: void onNavigationModeChanged(int)>
<com.android.systemui.classifier.FalsingManagerProxy: void onLeftAffordanceHintStarted()>
<com.android.systemui.statusbar.policy.KeyButtonDrawable: com.android.systemui.statusbar.policy.KeyButtonDrawable create(android.content.Context,int,int,int,boolean,android.graphics.Color)>
<com.android.systemui.qs.tiles.WifiTile.WifiDetailAdapter: int getMetricsCategory()>
<com.android.printspooler.ui.PageAdapter: void onBindViewHolder(android.support.v7.widget.RecyclerView.ViewHolder,int)>
<com.android.systemui.plugins.qs.QS: int getQsMinExpansionHeight()>
<com.android.server.statusbar.StatusBarManagerService: void onDisplayChanged(int)>
<com.android.systemui.bubbles.animation.PhysicsAnimationLayout.PhysicsPropertyAnimator: com.android.systemui.bubbles.animation.PhysicsAnimationLayout.PhysicsPropertyAnimator alpha(float,java.lang.Runnable[])>
<com.android.server.search.Searchables: java.util.ArrayList getSearchablesInGlobalSearchList()>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onRingerModeChanged(int)>
<javax.microedition.khronos.opengles.GL10: void glSampleCoverage(float,boolean)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: boolean onBackPressed(boolean)>
<com.android.systemui.statusbar.notification.row.ExpandableView: void setClipBottomAmount(int)>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.recents.utilities.AnimationProps: com.android.systemui.recents.utilities.AnimationProps setListener(android.animation.Animator.AnimatorListener)>
<com.android.systemui.statusbar.notification.stack.AmbientState: com.android.systemui.statusbar.notification.row.ExpandableNotificationRow getExpandingNotification()>
<com.android.settingslib.media.BluetoothMediaManager: void onBluetoothStateChanged(int)>
<com.android.systemui.globalactions.GlobalActionsLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.policy.Clock: void onRestoreInstanceState(android.os.Parcelable)>
<com.android.systemui.pip.BasePipManager: void hidePipMenu(java.lang.Runnable,java.lang.Runnable)>
<com.android.systemui.statusbar.policy.LocationController.LocationChangeCallback: void onLocationSettingsChanged(boolean)>
<com.android.systemui.pip.tv.PipControlsView: void onDetachedFromWindow()>
<com.android.systemui.glwallpaper.GLWallpaperRenderer: void updateAmbientMode(boolean,long)>
<com.android.keyguard.KeyguardUpdateMonitor.StrongAuthTracker: void onStrongAuthRequiredChanged(int)>
<com.android.shell.BugreportStorageProvider: android.database.MatrixCursor.RowBuilder includeFile(android.database.MatrixCursor,java.lang.String,java.io.File)>
<com.android.systemui.bubbles.BubbleExpandedView: void update(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<android.net.netlink.NetlinkMessage: android.net.netlink.StructNlMsgHdr getHeader()>
<com.android.systemui.statusbar.phone.ReverseLinearLayout.ReverseRelativeLayout: void updateGravity(boolean)>
<com.android.systemui.statusbar.phone.UserAvatarView: void setFramePadding(float)>
<com.android.server.locksettings.recoverablekeystore.WrappedKey: int getPlatformKeyGenerationId()>
<com.android.systemui.statusbar.phone.ManagedProfileControllerImpl: void removeCallback(com.android.systemui.statusbar.phone.HeadsUpTouchHelper.Callback)>
<com.android.server.notification.NotificationManagerService.NotificationListeners: void notifyNotificationChannelGroupChanged(java.lang.String,android.os.UserHandle,android.app.NotificationChannelGroup,int)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setOnClickListener(android.view.View.OnClickListener)>
<com.android.server.inputmethod.InputMethodManagerService.Lifecycle: void onUnlockUser(int)>
<com.android.systemui.statusbar.policy.Clock: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.settingslib.widget.BarChartPreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.google.android.startop.iorap.IorapForwardingService: com.android.server.wm.ActivityMetricsLaunchObserverRegistry provideLaunchObserverRegistry()>
<android.graphics.perftests.RenderNodePerfTest: void testCreateRenderNode()>
<com.android.systemui.qs.QSCarrier: void updateState(com.android.systemui.qs.QSCarrierGroup.CellSignalState)>
<com.android.server.locksettings.SyntheticPasswordManager: byte[] scrypt(byte[],byte[],int,int,int,int)>
<com.android.server.storage.DeviceStorageMonitorService: void onStart()>
<com.android.systemui.statusbar.policy.AccessibilityController: void addStateChangedCallback(com.android.systemui.statusbar.policy.AccessibilityController.AccessibilityStateChangedCallback)>
<com.android.systemui.statusbar.policy.BatteryControllerImpl: void addCallback(com.android.systemui.statusbar.policy.BatteryController.BatteryStateChangeCallback)>
<com.android.server.audio.AudioService: void releasePlayer(int)>
<com.android.settingslib.inputmethod.InputMethodSubtypePreference: int compareTo(androidx.preference.Preference,java.text.Collator)>
<com.android.systemui.MultiListLayout: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.server.NetworkManagementService: void denyProtect(int)>
<com.android.server.autofill.ui.CustomScrollView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.pip.phone.PipAppOpsListener: void <init>(android.content.Context,android.app.IActivityManager,com.android.systemui.pip.phone.PipAppOpsListener.Callback)>
<com.android.systemui.pip.phone.PipMenuActivityController.Listener: void onPipMenuStateChanged(int,boolean)>
<com.android.systemui.statusbar.notification.logging.NotificationLogger: com.android.internal.statusbar.NotificationVisibility.NotificationLocation getNotificationLocation(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.settingslib.accounts.AuthenticatorHelper: java.lang.CharSequence getLabelForType(android.content.Context,java.lang.String)>
<com.android.systemui.shared.system.AssistDataReceiver: void onHandleAssistData(android.os.Bundle)>
<com.android.systemui.pip.phone.PipMenuActivityController: void hideMenu()>
<com.android.systemui.recents.views.TaskStackView: com.android.systemui.recents.views.TaskStackViewTouchHandler getTouchHandler()>
<com.android.uiautomator.core.UiObjectNotFoundException: void <init>(java.lang.String)>
<com.android.systemui.ForegroundServicesDialog: void onPause()>
<android.net.netlink.StructNlAttr: void <init>(short,short)>
<com.android.systemui.stackdivider.Divider: void onDockedTopTask()>
<com.android.server.hdmi.ArcInitiationActionFromAvr: void sendRequestActiveSource()>
<com.android.systemui.statusbar.phone.RotationButtonController: boolean isRotationLocked()>
<android.media.MediaSession2: void broadcastSessionCommand(android.media.Session2Command,android.os.Bundle)>
<com.android.systemui.statusbar.notification.AboveShelfObserver: void onAboveShelfStateChanged(boolean)>
<com.android.systemui.statusbar.phone.CollapsedStatusBarFragment: int adjustDisableFlags(int)>
<com.android.settingslib.location.RecentLocationAccesses.Access: void <init>(java.lang.String,android.os.UserHandle,android.graphics.drawable.Drawable,java.lang.CharSequence,java.lang.CharSequence,long)>
<com.android.server.biometrics.fingerprint.FingerprintService: void onStart()>
<com.android.systemui.bubbles.BubbleController: void updateStack()>
<android.net.dhcp.IDhcpServerCallbacks: void onDhcpServerCreated(int,android.net.dhcp.IDhcpServer)>
<com.android.systemui.statusbar.notification.row.StackScrollerDecorView: android.view.View findSecondaryView()>
<com.android.systemui.statusbar.notification.row.NotificationInlineImageCache: void setImageResolver(com.android.systemui.statusbar.notification.row.NotificationInlineImageResolver)>
<com.android.server.biometrics.fingerprint.FingerprintService: java.lang.String getLockoutBroadcastPermission()>
<com.android.systemui.statusbar.phone.CollapsedStatusBarFragment: void onViewCreated(android.view.View,android.os.Bundle)>
<com.android.server.location.RemoteListenerHelper: void updateResult()>
<com.android.systemui.statusbar.phone.BarTransitions.BarBackgroundDrawable: void applyModeBackground(int,int,boolean)>
<com.android.systemui.recents.views.TaskView: void measureContents(int,int)>
<com.android.systemui.recents.misc.SystemServicesProxy: boolean isDreaming()>
<com.android.systemui.keyboard.KeyboardUI: void onBootCompletedInternal()>
<com.android.keyguard.KeyguardSimPinView: void verifyPasswordAndUnlock()>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getPasswordMinimumUpperCase(android.content.ComponentName,int,boolean)>
<com.android.server.notification.CountdownConditionProvider: android.service.notification.IConditionProvider asInterface()>
<com.android.server.locksettings.SyntheticPasswordCrypto: byte[] decryptBlobV1(java.lang.String,byte[],byte[])>
<javax.microedition.khronos.opengles.GL10: void glTexEnvf(int,int,float)>
<com.android.systemui.statusbar.phone.BarTransitions.BarBackgroundDrawable: void setAlpha(int)>
<com.android.systemui.statusbar.phone.NotificationIconContainer: boolean hasPartialOverflow()>
<com.android.systemui.keyguard.KeyguardViewMediator: boolean isInputRestricted()>
<com.android.server.biometrics.fingerprint.FingerprintService: java.lang.String getTag()>
<com.android.server.testing.shadows.ShadowApplicationPackageManager: java.util.List getInstalledPackagesAsUser(int,int)>
<com.android.printspooler.model.OpenDocumentCallback: void onSuccess()>
<com.android.mediadrm.signer.MediaDrmSigner: com.android.mediadrm.signer.MediaDrmSigner.Certificate provideCertificateResponse(android.media.MediaDrm,byte[])>
<com.android.systemui.statusbar.notification.MediaNotificationProcessor: void processNotification(android.app.Notification,android.app.Notification.Builder)>
<com.android.gallery3d.exif.ExifTag: boolean setValue(int)>
<com.android.settingslib.wifi.AccessPoint: void <init>(android.content.Context,android.net.wifi.hotspot2.OsuProvider,java.util.Collection)>
<com.android.systemui.statusbar.phone.ButtonDispatcher: void <init>(int)>
<com.android.systemui.recents.RecentsActivity: void onDestroy()>
<com.android.settingslib.CustomEditTextPreference: void <init>(android.content.Context)>
<com.android.systemui.settings.BrightnessDialog: void onCreate(android.os.Bundle)>
<com.android.localtransport.LocalTransport: long requestFullBackupTime()>
<com.android.systemui.qs.external.TileServices: android.content.Context getContext()>
<com.android.settingslib.fuelgauge.BatterySaverUtils: void setAutoBatterySaverTriggerLevel(android.content.Context,int)>
<com.android.keyguard.clock.AnalogClockController: void setStyle(android.graphics.Paint.Style)>
<com.android.settingslib.net.NetworkCycleData: long getTotalUsage()>
<com.android.systemui.statusbar.ViewTransformationHelper.CustomTransformation: android.view.animation.Interpolator getCustomInterpolator(int,boolean)>
<com.android.server.notification.SnoozeHelper: boolean cancel(int,java.lang.String,java.lang.String,int)>
<com.android.systemui.tuner.TunerServiceImpl: int getValue(java.lang.String,int)>
<com.android.settingslib.inputmethod.InputMethodAndSubtypeUtil: void loadInputMethodSubtypeList(androidx.preference.PreferenceFragment,android.content.ContentResolver,java.util.List,java.util.Map)>
<com.android.server.accessibility.AccessibilityManagerService.UserState: void addServiceLocked(com.android.server.accessibility.AccessibilityServiceConnection)>
<com.android.server.notification.ZenLog: void traceConfig(java.lang.String,android.service.notification.ZenModeConfig,android.service.notification.ZenModeConfig)>
<com.android.printservice.recommendation.PrintServicePlugin.PrinterDiscoveryCallback: void onChanged(java.util.List)>
<com.android.systemui.recents.RecentsSystemUserService: void onCreate()>
<com.android.systemui.qs.tiles.BluetoothTile: android.content.Intent getLongClickIntent()>
<com.android.keyguard.KeyguardSecurityViewFlipper: void reset()>
<com.android.server.usb.descriptors.UsbDeviceDescriptor: java.lang.String getProductString(com.android.server.usb.descriptors.UsbDescriptorParser)>
<com.android.settingslib.development.AbstractLogdSizePreferenceController: void <init>(android.content.Context)>
<com.android.systemui.volume.VolumeDialogControllerImpl: com.android.settingslib.volume.MediaSessions createMediaSessions(android.content.Context,android.os.Looper,com.android.settingslib.volume.MediaSessions.Callbacks)>
<com.android.systemui.statusbar.phone.StatusBar: void onDozingChanged(boolean)>
<com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem: void setPreferredAddress(int)>
<com.android.systemui.statusbar.phone.StatusBarWindowView: android.widget.FrameLayout.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<com.android.settingslib.CustomDialogPreferenceCompat: void onClick(android.content.DialogInterface,int)>
<com.android.statsd.loadtest.MemInfoParser: java.lang.String parseLine(java.lang.String)>
<com.android.systemui.recents.utilities.Utilities: android.view.Surface getSurface(android.view.View)>
<com.android.uiautomator.core.UiObject: boolean isEnabled()>
<com.android.gallery3d.exif.ExifInterface: int getTagDefinition(short,int)>
<com.android.systemui.statusbar.AlertingNotificationManager: void showNotification(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.server.biometrics.iris.IrisService: java.lang.String getLockoutBroadcastPermission()>
<com.android.dynsystem.VerificationActivity: void onCreate(android.os.Bundle)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setIntrinsicPadding(int)>
<com.android.systemui.qs.QSSecurityFooter: void onConfigurationChanged()>
<com.android.systemui.DependencyProvider: android.app.INotificationManager provideINotificationManager()>
<com.android.gallery3d.glrenderer.GLES20IdImpl: void glGenBuffers(int,int[],int)>
<com.android.settingslib.widget.settingsspinner.SettingsSpinner: void <init>(android.content.Context)>
<android.text.PrecomputedTextMemoryUsageTest: void testMemoryUsage_CJK_Hyphenation()>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onSimStateChanged(int,int,com.android.internal.telephony.IccCardConstants.State)>
<com.android.server.policy.WindowManagerPolicy.WindowState: int getSurfaceLayer()>
<com.android.server.location.AbstractLocationProvider: java.util.List getProviderPackages()>
<com.android.gallery3d.exif.ExifInterface: int[] getAllowedIfdsFromInfo(int)>
<com.android.systemui.pip.phone.PipMenuActivity: void onNewIntent(android.content.Intent)>
<com.android.systemui.recents.RecentsImplProxy: void showCurrentUserToast(int,int)>
<com.android.systemui.egg.MLand: com.android.systemui.egg.MLand.Player getPlayer(int)>
<com.android.server.pm.OtaDexoptService: com.android.server.pm.OtaDexoptService main(android.content.Context,com.android.server.pm.PackageManagerService)>
<com.android.systemui.qs.tileimpl.QSTileImpl: void secondaryClick()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean shouldHideBackground()>
<com.android.server.inputmethod.MultiClientInputMethodManagerService.Lifecycle: void onStopUser(int)>
<com.android.server.content.SyncJobService: void markSyncStarted(int)>
<com.android.systemui.stackdivider.DividerView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.statusbar.phone.StatusBar: void notifyHeadsUpGoingToSleep()>
<com.android.server.content.SyncLogger: com.android.server.content.SyncLogger getInstance()>
<com.android.systemui.stackdivider.DividerView: void resizeStack(int,int,com.android.internal.policy.DividerSnapAlgorithm.SnapTarget)>
<com.android.server.wallpaper.WallpaperManagerService: int getWallpaperIdForUser(int,int)>
<com.android.systemui.SwipeHelper: float getUnscaledEscapeVelocity()>
<com.android.server.policy.keyguard.KeyguardStateMonitor.StateCallback: void onShowingChanged()>
<com.android.server.notification.EventConditionProvider: void dump(java.io.PrintWriter,com.android.server.notification.NotificationManagerService.DumpFilter)>
<com.android.server.notification.NotificationRecord: boolean isInterruptive()>
<javax.microedition.khronos.opengles.GL10: void glDeleteTextures(int,int[],int)>
<com.android.settingslib.notification.EnableZenModeDialog: void bindConditions(android.service.notification.Condition)>
<com.android.systemui.statusbar.notification.stack.StackStateAnimator: void removeTransientView(com.android.systemui.statusbar.notification.row.ExpandableView)>
<com.android.server.usb.descriptors.UsbInterfaceDescriptor: int getInterfaceNumber()>
<com.android.server.policy.WindowManagerPolicy: int getMaxWallpaperLayer()>
<com.android.systemui.statusbar.notification.ImageTransformState: void reset()>
<com.android.server.accessibility.AccessibilityManagerService.UserState: boolean isHandlingAccessibilityEvents()>
<com.android.server.devicepolicy.DevicePolicyManagerService.Lifecycle: void <init>(android.content.Context)>
<com.android.systemui.statusbar.notification.NotificationEntryManager: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.CarSystemUIFactory: com.android.systemui.volume.VolumeDialogComponent createVolumeDialogComponent(com.android.systemui.SystemUI,android.content.Context)>
<com.android.server.pm.PackageManagerService: boolean setInstallLocation(int)>
<com.android.server.CachedDeviceStateService: void onBootPhase(int)>
<com.android.server.pm.permission.PermissionManagerServiceInternal: void enforceGrantRevokeRuntimePermissionPermissions(java.lang.String)>
<com.android.uiautomator.core.UiSelector: java.lang.String toString()>
<com.android.systemui.plugins.GlobalActionsPanelPlugin.PanelViewController: android.view.View getPanelContent()>
<com.android.powermodel.AppActivity.Builder: void addComponentActivity(com.android.powermodel.Component,com.android.powermodel.ComponentActivity)>
<com.android.server.accessibility.AccessibilityManagerService.SecurityPolicy: void onAccessibilityClientRemovedLocked(int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.String getAlwaysOnVpnPackage(android.content.ComponentName)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setPasswordHistoryLength(android.content.ComponentName,int,boolean)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onTrustAgentErrorMessage(java.lang.CharSequence)>
<com.android.server.policy.WindowManagerPolicy.WindowManagerFuncs: void unregisterPointerEventListener(android.view.WindowManagerPolicyConstants.PointerEventListener,int)>
<com.android.systemui.tuner.TunablePadding.TunablePaddingService: void <init>(com.android.systemui.tuner.TunerService)>
<com.android.systemui.statusbar.policy.DeviceProvisionedController.DeviceProvisionedListener: void onUserSwitched()>
<com.android.server.ConnectivityService: void reportNetworkConnectivity(android.net.Network,boolean)>
<com.android.preload.DumpTableModel: void clear()>
<com.android.externalstorage.TestDocumentsProvider: boolean onCreate()>
<com.android.server.infra.AbstractPerUserSystemService: boolean isEnabledLocked()>
<com.android.systemui.doze.DozeHost: boolean isProvisioned()>
<com.android.systemui.bubbles.animation.StackAnimationController: void demagnetizeFromDismissToPoint(float,float,float,float)>
<com.android.systemui.qs.tiles.UserTile: com.android.systemui.plugins.qs.DetailAdapter getDetailAdapter()>
<com.android.server.pm.UserManagerService: int getUserRestrictionSource(java.lang.String,int)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: void disconnect(com.android.settingslib.bluetooth.LocalBluetoothProfile)>
<com.android.server.display.whitebalance.DisplayWhiteBalanceSettings: void onDisplayWhiteBalanceStatusChanged(boolean)>
<com.android.server.pm.Installer: boolean isQuotaSupported(java.lang.String)>
<com.android.settingslib.core.instrumentation.SharedPreferencesLogger: java.util.Map getAll()>
<com.android.packageinstaller.television.UninstallAppProgress.ProgressFragment: void setDeviceManagerButtonVisible(boolean)>
<com.android.server.location.GnssPositionMode: int hashCode()>
<com.android.settingslib.core.instrumentation.MetricsFeatureProvider: void logDashboardStartIntent(android.content.Context,android.content.Intent,int)>
<com.android.server.RuntimeService: void <init>(android.content.Context)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setDefaultSmsApplication(android.content.ComponentName,java.lang.String)>
<com.android.server.usb.descriptors.report.HTMLReportCanvas: void openListItem()>
<com.android.systemui.recents.views.TaskStackView: void onPickUpViewFromPool(com.android.systemui.recents.views.TaskView,com.android.systemui.shared.recents.model.Task,boolean)>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: void setDark(boolean,boolean,long)>
<com.android.systemui.recents.views.grid.TaskViewFocusFrame: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.systemui.statusbar.policy.DataSaverController: boolean isDataSaverEnabled()>
<com.android.keyguard.KeyguardPasswordView: void afterTextChanged(android.text.Editable)>
<com.android.server.pm.SharedUserSetting: com.android.server.pm.SharedUserSetting updateFrom(com.android.server.pm.SharedUserSetting)>
<com.android.systemui.appops.AppOpItem: int getUid()>
<com.android.systemui.statusbar.policy.KeyguardMonitorImpl: long getKeyguardFadingAwayDelay()>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: void setUserExpanded(boolean,boolean)>
<com.android.systemui.statusbar.car.CarStatusBar: void postDismissKeyguard()>
<com.android.server.accessibility.MagnificationController: float getPersistedScale()>
<com.android.systemui.statusbar.notification.stack.ViewState: void applyToView(android.view.View)>
<com.android.systemui.statusbar.notification.stack.AmbientState: boolean isShadeExpanded()>
<com.android.systemui.statusbar.policy.KeyButtonView: void setCode(int)>
<com.android.preload.DeviceUtils: java.lang.String getBuildType(com.android.ddmlib.IDevice)>
<com.android.server.usb.descriptors.Usb10ASFormatI: byte getNumChannels()>
<com.android.systemui.statusbar.phone.StatusBarSignalPolicy: void destroy()>
<com.android.keyguard.KeyguardSecurityContainer: void reset()>
<com.android.keyguard.KeyguardUpdateMonitor: void reportSimUnlocked(int)>
<com.android.gallery3d.exif.ExifInterface: void setTags(java.util.Collection)>
<com.android.server.pm.PackageManagerService: boolean canRequestPackageInstalls(java.lang.String,int)>
<com.android.settingslib.net.DataUsageController.Callback: void onMobileDataEnabled(boolean)>
<com.android.systemui.statusbar.notification.row.ExpandableView: float getIncreasedPaddingAmount()>
<com.android.packageinstaller.InstallInstalling: void onStop()>
<com.android.media.remotedisplay.RemoteDisplay: java.lang.String toString()>
<com.android.providers.settings.SettingsHelper: void <init>(android.content.Context)>
<com.android.server.policy.WindowManagerPolicy: int checkAddPermission(android.view.WindowManager.LayoutParams,int[])>
<com.android.providers.settings.SettingsHelper: void restoreValue(android.content.Context,android.content.ContentResolver,android.content.ContentValues,android.net.Uri,java.lang.String,java.lang.String,int)>
<com.android.server.notification.NotificationRecord: int getExposureMs(long)>
<javax.obex.ObexHelper: byte[] convertToByteArray(long)>
<com.android.systemui.statusbar.policy.KeyButtonView: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.systemui.statusbar.policy.RemoteInputView: boolean updatePendingIntentFromActions(android.app.Notification.Action[])>
<com.android.systemui.recents.LegacyRecentsImpl: void showRecentApps(boolean)>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: void performAddAnimation(long,long,boolean)>
<com.android.server.pm.Installer: void getUserSize(java.lang.String,int,int,int[],android.content.pm.PackageStats)>
<com.android.systemui.qs.customize.QSCustomizer: void setQs(com.android.systemui.plugins.qs.QS)>
<com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper.SnoozeOption: java.lang.CharSequence getConfirmation()>
<com.android.systemui.statusbar.policy.KeyButtonView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.volume.ZenModePanel.Callback: void onInteraction()>
<com.android.systemui.qs.tiles.RotationLockTile: void <init>(com.android.systemui.qs.QSHost,com.android.systemui.statusbar.policy.RotationLockController)>
<com.android.systemui.qs.tileimpl.QSTileImpl.AnimationIcon: android.graphics.drawable.Drawable getDrawable(android.content.Context)>
<com.android.shell.BugreportStorageProvider: android.os.ParcelFileDescriptor openDocument(java.lang.String,java.lang.String,android.os.CancellationSignal)>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationViewWrapper: void transformFrom(com.android.systemui.statusbar.TransformableView,float)>
<com.android.preload.ui.SequenceUI: int getSelectedDataTableRow()>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: boolean isMediaNotification()>
<com.android.server.VibratorService: void onInputDeviceRemoved(int)>
<com.android.server.location.AbstractLocationProvider.LocationProviderManager: void onReportLocation(java.util.List)>
<com.android.settingslib.location.InjectedSetting.Builder: com.android.settingslib.location.InjectedSetting build()>
<com.android.keyguard.ViewMediatorCallback: void onBouncerVisiblityChanged(boolean)>
<com.android.server.notification.ManagedServices: void migrateToXml()>
<com.android.server.devicepolicy.DevicePolicyManagerService: android.app.admin.DeviceAdminInfo findAdmin(android.content.ComponentName,int,boolean)>
<com.android.systemui.statusbar.phone.PanelView: boolean isPanelVisibleBecauseOfHeadsUp()>
<com.android.systemui.statusbar.phone.StatusBar: void animateCollapsePanels(int)>
<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: void onNotificationUpdated(android.service.notification.StatusBarNotification)>
<com.android.systemui.statusbar.notification.row.NotificationSnooze: void onClick(android.view.View)>
<com.android.server.storage.AppFuseBridge.MountScope: android.os.ParcelFileDescriptor open()>
<com.android.server.audio.AudioService: void onAccessibilityServicesStateChanged(android.view.accessibility.AccessibilityManager)>
<com.android.printspooler.model.PageContentRepository: void finalize()>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: void setHiSyncId(long)>
<com.android.server.pm.UserManagerService: boolean canHaveRestrictedProfile(int)>
<com.android.server.usb.descriptors.tree.UsbDescriptorsConfigNode: void addInterfaceNode(com.android.server.usb.descriptors.tree.UsbDescriptorsInterfaceNode)>
<com.android.systemui.statusbar.NotificationUpdateHandler: void updateNotificationRanking(android.service.notification.NotificationListenerService.RankingMap)>
<com.android.systemui.qs.tiles.NfcTile: void <init>(com.android.systemui.qs.QSHost)>
<com.android.keyguard.KeyguardSecurityContainer: void setKeyguardCallback(com.android.keyguard.KeyguardSecurityCallback)>
<com.android.server.NetworkManagementService: void startInterfaceForwarding(java.lang.String,java.lang.String)>
<com.android.systemui.volume.VolumeDialogControllerImpl: void setZenMode(int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void transferOwnership(android.content.ComponentName,android.content.ComponentName,android.os.PersistableBundle)>
<com.android.packageinstaller.UninstallerActivity: com.android.packageinstaller.UninstallerActivity.DialogInfo getDialogInfo()>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: android.view.View getContentView()>
<com.android.server.usb.descriptors.Usb10ASFormatI: int[] getBitDepths()>
<com.android.statsd.dogfood.DisplayProtoUtils: void displayCountMetricData(java.lang.StringBuilder,com.android.os.StatsLog.StatsLogReport)>
<com.android.systemui.statusbar.NotificationShelf: void setAnimationsEnabled(boolean)>
<com.android.server.pm.UserManagerService: void evictCredentialEncryptionKey(int)>
<com.google.android.startop.iorap.AppIntentEvent: void writeToParcel(android.os.Parcel,int)>
<com.android.settingslib.applications.StorageStatsSource.ExternalStorageStats: void <init>(long,long,long,long,long)>
<com.android.systemui.qs.external.TileLifecycleManager: void onStartListening()>
<com.android.systemui.ForegroundServiceNotificationListener: void <init>(android.content.Context,com.android.systemui.ForegroundServiceController,com.android.systemui.statusbar.notification.NotificationEntryManager)>
<com.android.server.pm.ModuleInfoProvider: void <init>(android.content.res.XmlResourceParser,android.content.res.Resources)>
<com.android.server.pm.PackageManagerService: void setComponentEnabledSetting(android.content.ComponentName,int,int,int)>
<com.android.uiautomator.core.ShellUiAutomatorBridge: long getSystemLongPressTime()>
<com.android.server.audio.AudioService: void onTouchExplorationStateChanged(boolean)>
<com.android.systemui.doze.DozeLog: void traceProximityResult(android.content.Context,boolean,long,int)>
<com.android.systemui.egg.MLand: int pick(int[])>
<com.android.server.inputmethod.InputMethodManagerService: boolean hideSoftInput(com.android.internal.view.IInputMethodClient,int,android.os.ResultReceiver)>
<com.android.systemui.statusbar.notification.row.StackScrollerDecorView: void setContentVisible(boolean)>
<com.android.systemui.statusbar.policy.RemoteInputView: boolean isSending()>
<com.android.server.pm.Settings.VersionInfo: void forceCurrent()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setPulsing(boolean,boolean)>
<com.android.server.display.color.ColorDisplayService: void onStart()>
<com.android.server.statusbar.StatusBarManagerInternal: void showRecentApps(boolean)>
<android.app.backup.BackupUtilsTest: void testIsFileSpecifiedInPathList_whenFileAndPathListContainsFirstNotRelatedFileAndSecondSameFile()>
<com.android.systemui.statusbar.notification.row.HybridGroupManager: void initDimens()>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: java.util.List getConnectedDevices()>
<com.android.systemui.statusbar.policy.RemoteInputQuickSettingsDisabler: void setRemoteInputActive(boolean)>
<com.android.keyguard.KeyguardStatusView: float getClockTextSize()>
<com.android.server.usb.descriptors.UsbDeviceDescriptor: java.lang.String getSerialString(com.android.server.usb.descriptors.UsbDescriptorParser)>
<com.android.server.pm.permission.BasePermission: boolean isVerifier()>
<com.android.systemui.qs.QSDetailClipper: void <init>(android.view.View)>
<com.android.systemui.statusbar.phone.StatusBarIconList.Slot: java.lang.String getName()>
<com.android.settingslib.RestrictedLockUtilsInternal: com.android.settingslib.RestrictedLockUtils.EnforcedAdmin getDeviceOwner(android.content.Context)>
<com.android.systemui.bubbles.BubbleStackView: void setExpandListener(com.android.systemui.bubbles.BubbleController.BubbleExpandListener)>
<com.android.systemui.statusbar.notification.stack.NotificationSwipeHelper.NotificationCallback: boolean shouldDismissQuickly()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void blockExpansionForCurrentTouch()>
<com.android.server.pm.dex.PackageDexUsage.DexUseInfo: boolean isUsedByOtherApps()>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void animateExpandNotificationsPanel()>
<com.android.server.pm.CrossProfileAppsServiceImpl.Injector: android.content.pm.PackageManager getPackageManager()>
<com.android.server.location.ContextHubService: android.hardware.location.NanoAppInstanceInfo getNanoAppInstanceInfo(int)>
<com.android.server.biometrics.fingerprint.FingerprintUserState: void parseBiometricsLocked(org.xmlpull.v1.XmlPullParser)>
<com.android.server.NetworkManagementService: boolean setDataSaverModeEnabled(boolean)>
<com.android.server.pm.UserRestrictionsUtils: void readRestrictions(org.xmlpull.v1.XmlPullParser,android.os.Bundle)>
<com.android.server.DynamicSystemService: boolean setEnable(boolean)>
<com.android.preload.actions.ShowDataAction: void actionPerformed(java.awt.event.ActionEvent)>
<com.android.powermodel.AppActivity.Builder: com.android.powermodel.AppActivity build()>
<com.android.systemui.statusbar.ScrimView: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.StatusBarNotificationPresenter: void updateNotificationViews()>
<com.android.systemui.statusbar.phone.StatusBarIconController.IconManager: com.android.systemui.statusbar.StatusBarIconView addIcon(int,java.lang.String,boolean,com.android.internal.statusbar.StatusBarIcon)>
<com.android.systemui.shared.system.TaskStackChangeListener: void onPinnedStackAnimationStarted()>
<com.android.systemui.statusbar.ScrimView: void setViewAlpha(float)>
<com.android.systemui.volume.VolumeDialogControllerImpl: void setEnableDialogs(boolean,boolean)>
<com.android.server.twilight.TwilightService: void onBootPhase(int)>
<com.android.systemui.recents.views.RecentsViewTouchHandler: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.settingslib.core.lifecycle.Lifecycle: void <init>(androidx.lifecycle.LifecycleOwner)>
<com.android.server.location.GnssBatchingProvider: boolean stop()>
<com.android.server.uri.UriGrantsManagerInternal: void removeUriPermissionIfNeeded(com.android.server.uri.UriPermission)>
<com.android.statsd.loadtest.MemoryDataRecorder: void <init>(boolean,int,com.android.internal.os.StatsdConfigProto.TimeUnit,long,int,boolean,boolean,boolean,boolean,boolean)>
<com.android.systemui.statusbar.notification.stack.AmbientState: int getSpeedBumpIndex()>
<com.android.systemui.qs.TileLayout: void onMeasure(int,int)>
<com.android.systemui.classifier.brightline.TimeLimitedMotionEventBuffer: void add(int,android.view.MotionEvent)>
<com.android.systemui.statusbar.phone.PanelView: void setTouchAndAnimationDisabled(boolean)>
<com.android.systemui.qs.tiles.FlashlightTile: void onFlashlightAvailabilityChanged(boolean)>
<com.android.systemui.pip.tv.PipManager.Listener: void onPipMenuActionsChanged(android.content.pm.ParceledListSlice)>
<com.android.server.SystemServiceManager: void cleanupUser(int)>
<com.android.systemui.egg.MLandActivity: void onCreate(android.os.Bundle)>
<com.android.server.notification.PreferencesHelper: android.content.pm.ParceledListSlice getNotificationChannelGroups(java.lang.String,int,boolean,boolean,boolean)>
<com.android.server.usb.UsbService: void <init>(android.content.Context)>
<com.android.systemui.statusbar.CommandQueue: void toggleKeyboardShortcutsMenu(int)>
<com.android.systemui.shared.system.InputConsumerController: com.android.systemui.shared.system.InputConsumerController getRecentsAnimationInputConsumer()>
<com.android.systemui.tuner.ClipboardView: void onPrimaryClipChanged()>
<com.android.systemui.SystemUIFactory: void createFromConfig(android.content.Context)>
<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.ClientMonitor getCurrentClient()>
<com.android.systemui.statusbar.phone.DozeParameters: int getPulseDuration()>
<com.android.systemui.recents.RecentsActivity: void onAttachedToWindow()>
<android.media.Session2Link: void connect(android.media.Controller2Link,int,android.os.Bundle)>
<com.android.settingslib.volume.Util: boolean setText(android.widget.TextView,java.lang.CharSequence)>
<com.android.printspooler.util.BitmapSerializeUtils: void writeBitmapPixels(android.graphics.Bitmap,android.os.ParcelFileDescriptor)>
<com.android.systemui.plugins.DarkIconDispatcher: void removeDarkReceiver(com.android.systemui.plugins.DarkIconDispatcher.DarkReceiver)>
<com.android.settingslib.widget.settingsspinner.SettingsSpinner: void <init>(android.content.Context,android.util.AttributeSet,int,int,int)>
<com.android.systemui.keyguard.ScreenLifecycle: void dispatchScreenTurnedOff()>
<com.android.systemui.assist.AssistManager: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onBiometricAuthenticated(int,android.hardware.biometrics.BiometricSourceType)>
<com.android.systemui.appops.AppOpItem: void <init>(int,int,java.lang.String,long)>
<com.android.gallery3d.common.Utils: void fail(java.lang.String,java.lang.Object[])>
<com.android.systemui.bubbles.BadgedImageView: void setShowDot(boolean)>
<android.net.netlink.RtNetlinkNeighborMessage: byte[] newGetNeighborsRequest(int)>
<com.android.systemui.statusbar.notification.row.NotificationInfo: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.accessibility.AccessibilityManagerService: boolean notifyKeyEvent(android.view.KeyEvent,int)>
<com.android.server.policy.BurnInProtectionHelper: void <init>(android.content.Context,int,int,int,int,int)>
<com.android.statementservice.DirectStatementService: void onCreate(com.android.statementservice.retriever.AbstractStatementRetriever,android.os.Looper,java.io.File)>
<com.android.server.locksettings.SyntheticPasswordManager: int getCredentialType(long,int)>
<com.android.printspooler.ui.PrintActivity: boolean onKeyDown(int,android.view.KeyEvent)>
<com.android.systemui.pip.phone.PipTouchHandler: void onShelfVisibilityChanged(boolean,int)>
<com.android.settingslib.development.DeveloperOptionsPreferenceController: void onDeveloperOptionsSwitchEnabled()>
<com.android.systemui.statusbar.policy.BrightnessMirrorController: void onDensityOrFontScaleChanged()>
<com.android.settingslib.inputmethod.InputMethodAndSubtypeUtil: java.lang.String getSubtypeLocaleNameAsSentence(android.view.inputmethod.InputMethodSubtype,android.content.Context,android.view.inputmethod.InputMethodInfo)>
<com.android.printspooler.widget.PrintContentView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.recents.views.TaskStackViewScroller: boolean setStackScrollToInitialState()>
<com.android.systemui.plugins.VolumeDialogController.Callbacks: void onShowVibrateHint()>
<com.android.server.statusbar.StatusBarManagerService: void expandNotificationsPanel()>
<com.android.systemui.recents.IRecentsNonSystemUserCallbacks: void onDraggingInRecentsEnded(float)>
<com.android.server.media.RemoteDisplayProviderWatcher: void start()>
<com.android.systemui.CornerHandleView: void onDraw(android.graphics.Canvas)>
<com.android.server.usb.descriptors.Usb10ASGeneral: int getFormatTag()>
<com.android.server.pm.PackageManagerService: void <init>(android.content.Context,com.android.server.pm.Installer,boolean,boolean)>
<com.android.server.location.LocationProviderProxy: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.Watchdog: com.android.server.Watchdog getInstance()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onScreenTurningOn()>
<com.android.commands.locksettings.LockSettingsCmd: void onShowUsage(java.io.PrintStream)>
<com.android.systemui.statusbar.notification.row.HybridNotificationView: android.widget.TextView getTextView()>
<com.android.server.pm.DumpState: boolean isOptionEnabled(int)>
<com.android.systemui.statusbar.phone.StatusBar: void disable(int,int,int,boolean)>
<com.android.settingslib.wifi.WifiTracker: void onStop()>
<com.android.preload.ui.SequenceUI: com.android.preload.ui.SequenceUI choice(java.lang.String)>
<com.android.preload.actions.RunMonkeyAction: void <init>(com.android.ddmlib.IDevice,com.android.preload.DumpTableModel)>
<android.net.netlink.InetDiagMessage: int getConnectionOwnerUid(int,java.net.InetSocketAddress,java.net.InetSocketAddress)>
<com.android.systemui.recents.views.RecentsView: void onBusEvent(com.android.systemui.recents.events.activity.MultiWindowStateChangedEvent)>
<com.android.systemui.statusbar.phone.StatusBarSignalPolicy.MobileIconState: int hashCode()>
<com.android.server.notification.NotificationRecord: void setNumSmartActionsAdded(int)>
<com.android.statementservice.retriever.Relation: boolean equals(java.lang.Object)>
<com.android.systemui.util.NotificationChannels: void createAll(android.content.Context)>
<com.android.systemui.statusbar.phone.PanelView: boolean isScrolledToBottom()>
<com.android.systemui.biometrics.DialogViewCallback: void onPositivePressed()>
<com.android.server.usb.descriptors.UsbHIDDescriptor: int getRelease()>
<com.android.systemui.statusbar.phone.StatusBarNotificationPresenter: int getMaxNotificationsWhileLocked(boolean)>
<com.android.server.content.SyncStorageEngine: void setSyncAutomatically(android.accounts.Account,int,java.lang.String,boolean,int,int,int)>
<com.android.systemui.classifier.brightline.BrightLineFalsingManager: void onStartExpandingFromPulse()>
<com.android.server.policy.WindowManagerPolicy: void keepScreenOnStartedLw()>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb: int getPlatformKeyGenerationId(int)>
<com.android.server.notification.ZenModeFiltering: void <init>(android.content.Context)>
<com.android.systemui.statusbar.policy.SmartReplyView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.phone.StatusBarWindowController: void setKeyguardShowing(boolean)>
<com.android.systemui.statusbar.notification.NotificationUtils: int interpolateColors(int,int,float)>
<com.android.systemui.recents.views.lowram.TaskStackLowRamLayoutAlgorithm: int percentageToScroll(float)>
<com.android.settingslib.core.lifecycle.ObservablePreferenceFragment: void onAttach(android.content.Context)>
<com.android.server.LocationManagerService: void setTestProviderStatus(java.lang.String,int,android.os.Bundle,long,java.lang.String)>
<com.android.systemui.statusbar.notification.row.NotificationGuts: boolean isExposed()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setOverScrollAmount(float,boolean,boolean,boolean,boolean)>
<com.android.server.om.OverlayManagerService: void onSwitchUser(int)>
<com.android.server.policy.WindowManagerPolicy: boolean okToAnimate()>
<com.android.systemui.qs.PagedTileLayout: void startTileReveal(java.util.Set,java.lang.Runnable)>
<com.android.settingslib.utils.IconCache: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.StatusBarRemoteInputCallback: void onLockedRemoteInput(com.android.systemui.statusbar.notification.row.ExpandableNotificationRow,android.view.View)>
<com.android.systemui.qs.external.CustomTile: android.content.Intent getLongClickIntent()>
<com.android.systemui.statusbar.notification.stack.AmbientState: float getMaxHeadsUpTranslation()>
<com.android.server.policy.WindowManagerPolicy.WindowState: int getDisplayId()>
<com.android.systemui.shared.system.ContextCompat: void <init>(android.content.Context)>
<com.android.server.statusbar.StatusBarManagerInternal: void appTransitionCancelled(int)>
<com.android.printservice.recommendation.PrintServicePlugin: int getName()>
<com.android.systemui.util.AlarmTimeout: void <init>(android.app.AlarmManager,android.app.AlarmManager.OnAlarmListener,java.lang.String,android.os.Handler)>
<com.android.server.SystemService: android.content.Context getUiContext()>
<com.android.systemui.power.EnhancedEstimates: long getSevereWarningThreshold()>
<com.android.server.testing.shadows.ShadowKeyValueBackupTask: java.util.List getQueue()>
<com.android.server.PersistentDataBlockManagerInternal: byte[] getTestHarnessModeData()>
<com.android.mtp.MtpDocumentsProvider: android.database.Cursor queryRoots(java.lang.String[])>
<com.android.server.timezone.RulesManagerService.Lifecycle: void <init>(android.content.Context)>
<com.android.server.policy.PhoneWindowManager: void setSafeMode(boolean)>
<com.android.printspooler.model.PrintSpoolerService: void setProgress(android.print.PrintJobId,float)>
<com.android.systemui.statusbar.policy.CastController: void setCurrentUserId(int)>
<com.android.systemui.statusbar.notification.stack.NotificationListContainer: void notifyGroupChildRemoved(com.android.systemui.statusbar.notification.row.ExpandableView,android.view.ViewGroup)>
<com.android.systemui.statusbar.notification.row.ExpandableOutlineView: boolean isOutlineShowing()>
<com.android.commands.svc.Svc.Command: java.lang.String name()>
<com.android.server.policy.WindowManagerPolicy: void setDismissImeOnBackKeyPressed(boolean)>
<com.android.server.statusbar.StatusBarManagerService: void removeIcon(java.lang.String)>
<com.android.systemui.keyguard.WorkLockActivity: void onDestroy()>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getPasswordMinimumLetters(android.content.ComponentName,int,boolean)>
<com.android.server.accessibility.AbstractAccessibilityServiceConnection.SystemSupport: com.android.server.accessibility.FingerprintGestureDispatcher getFingerprintGestureDispatcher()>
<com.android.systemui.statusbar.policy.SecurityControllerImpl: java.lang.String getWorkProfileVpnName()>
<com.android.printspooler.ui.FusedPrintersProvider: void onStatusChanged(java.lang.String,int,android.os.Bundle)>
<com.android.keyguard.clock.ImageClock: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.keyguard.KeyguardSecurityContainer: com.android.keyguard.KeyguardSecurityModel.SecurityMode getSecurityMode()>
<com.android.server.pm.ShortcutService: void enableShortcuts(java.lang.String,java.util.List,int)>
<com.android.systemui.SystemUIService: void onCreate()>
<javax.obex.ServerOperation: void sendHeaders(javax.obex.HeaderSet)>
<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice getInstalledPackages(int,int)>
<android.net.ip.IpClientManager: void <init>(android.net.ip.IIpClient,java.lang.String)>
<com.android.server.notification.ConditionProviders.Callback: void onUserSwitched()>
<android.media.DataSourceDesc: void finalize()>
<com.android.server.notification.RankingConfig: boolean canShowBadge(java.lang.String,int)>
<com.android.systemui.shared.system.TaskStackChangeListener: void onActivityForcedResizable(java.lang.String,int,int)>
<com.android.server.accessibility.AbstractAccessibilityServiceConnection.SystemSupport: int getCurrentUserIdLocked()>
<com.android.systemui.statusbar.notification.TransformState: void transformViewVerticalTo(com.android.systemui.statusbar.notification.TransformState,float)>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: boolean isMenuVisible()>
<com.android.systemui.qs.QSAnimator: void onAnimationStarted()>
<com.android.server.pm.permission.BasePermission: void writeLPr(org.xmlpull.v1.XmlSerializer)>
<com.android.server.policy.WindowOrientationListener: int getProposedRotation()>
<com.android.gallery3d.glrenderer.BasicTexture: void setSize(int,int)>
<com.android.server.audio.PlaybackActivityMonitor: void playerEvent(int,int,int)>
<com.android.systemui.tuner.CustomListPreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.media.MediaPlayer2: android.media.AudioDeviceInfo getPreferredDevice()>
<com.android.server.input.InputManagerService: android.hardware.input.KeyboardLayout[] getKeyboardLayoutsForInputDevice(android.hardware.input.InputDeviceIdentifier)>
<com.android.providers.settings.SettingsProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: boolean equals(java.lang.Object)>
<com.android.server.usb.UsbService: void clearDefaults(java.lang.String,int)>
<com.android.settingslib.core.lifecycle.ObservablePreferenceFragment: void onPause()>
<com.android.settingslib.core.lifecycle.ObservableDialogFragment: void onStart()>
<com.android.systemui.statusbar.notification.row.NotificationGuts: void setGutsContent(com.android.systemui.statusbar.notification.row.NotificationGuts.GutsContent)>
<android.os.ParcelPerfTest: void timeWriteExceptionWithStackTraceParceling()>
<com.android.systemui.statusbar.phone.UserAvatarView: void setDrawableWithBadge(android.graphics.drawable.Drawable,int)>
<com.android.companiondevicemanager.DeviceChooserActivity: void onDeviceConfirmed(com.android.companiondevicemanager.DeviceDiscoveryService.DeviceFilterPair)>
<com.android.server.policy.WindowManagerPolicy: void startKeyguardExitAnimation(long,long)>
<com.android.systemui.statusbar.phone.NotificationPanelView: int getMaxPanelHeight()>
<com.android.server.slice.SliceClientPermissions: void writeTo(org.xmlpull.v1.XmlSerializer)>
<com.android.server.IpSecService: void addAddressToTunnelInterface(int,android.net.LinkAddress,java.lang.String)>
<com.android.server.slice.SliceClientPermissions.SliceAuthority: boolean hasPermission(java.util.List)>
<com.android.systemui.statusbar.phone.StatusBar: void onClosingFinished()>
<javax.obex.BaseStream: void ensureNotDone()>
<com.android.server.usb.descriptors.ByteStream: int unpackUsbShort()>
<com.android.keyguard.EmergencyButton: void onAttachedToWindow()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setActualHeight(int,boolean)>
<com.android.server.NetworkManagementService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.infra.FrameworkResourcesServiceNameResolver: java.lang.String toString()>
<android.media.MediaSession2.ControllerInfo: java.lang.String getPackageName()>
<com.android.systemui.statusbar.phone.FloatingRotationButton: com.android.systemui.statusbar.policy.KeyButtonDrawable getImageDrawable()>
<com.android.systemui.statusbar.phone.StatusBar: com.android.systemui.statusbar.phone.NotificationPanelView getPanel()>
<com.android.systemui.statusbar.phone.DozeScrimController: com.android.systemui.statusbar.phone.ScrimController.Callback getScrimCallback()>
<com.android.systemui.recents.Recents: void preloadRecentApps()>
<com.android.settingslib.datetime.ZoneGetter: java.lang.CharSequence getTimeZoneOffsetAndName(android.content.Context,java.util.TimeZone,java.util.Date)>
<com.android.server.slice.SlicePermissionManager: void grantSliceAccess(java.lang.String,int,java.lang.String,int,android.net.Uri)>
<com.android.systemui.statusbar.policy.RemoteInputView: void setRemoteInput(android.app.RemoteInput[],android.app.RemoteInput,com.android.systemui.statusbar.notification.collection.NotificationEntry.EditedSuggestionInfo)>
<com.android.systemui.statusbar.phone.PanelView: void collapse(boolean,float)>
<com.android.server.location.GnssMeasurementCorrectionsProvider: void injectGnssMeasurementCorrections(android.location.GnssMeasurementCorrections)>
<com.android.systemui.statusbar.phone.NavigationBarTransitions: void removeDarkIntensityListener(com.android.systemui.statusbar.phone.NavigationBarTransitions.DarkIntensityListener)>
<com.android.systemui.qs.TouchAnimator.Builder: com.android.systemui.qs.TouchAnimator.Builder setEndDelay(float)>
<com.android.systemui.qs.QSDetail.Callback: void onScanStateChanged(boolean)>
<com.android.systemui.statusbar.phone.LightBarTransitionsController: float getCurrentDarkIntensity()>
<com.android.server.notification.NotificationUsageStats.SingleNotificationStats: boolean hasBeenVisiblyExpanded()>
<android.graphics.perftests.OutlinePerfTest: void testSetEmpty()>
<com.android.server.usb.descriptors.report.ReportCanvas: void writeHeader(int,java.lang.String)>
<com.android.settingslib.core.lifecycle.ObservableActivity: boolean onCreateOptionsMenu(android.view.Menu)>
<com.android.settingslib.users.AppRestrictionsHelper: void fetchAndMergeApps()>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: void getTaskStackBounds(android.graphics.Rect,android.graphics.Rect,int,int,int,android.graphics.Rect)>
<com.android.systemui.qs.tileimpl.QSIconViewImpl: int exactly(int)>
<com.android.systemui.bubbles.BubbleView: java.lang.String getKey()>
<com.android.systemui.statusbar.NotificationShelf: void setMaxLayoutHeight(int)>
<com.android.server.policy.WindowManagerPolicy: boolean isKeyguardHostWindow(android.view.WindowManager.LayoutParams)>
<com.android.server.input.InputManagerService: int isInTabletMode()>
<com.android.server.location.GnssBatchingProviderTest: void stopped_resume_notStarted()>
<com.android.systemui.ActivityStarterDelegate: void postQSRunnableDismissingKeyguard(java.lang.Runnable)>
<com.android.systemui.plugins.qs.QS: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.android.systemui.statusbar.phone.StatusBar: boolean closeShadeIfOpen()>
<com.android.systemui.qs.AutoSizingList: void onMeasure(int,int)>
<com.android.server.pm.PackageInstallerService: android.content.pm.ParceledListSlice getStagedSessions()>
<com.android.photos.views.TiledImageRenderer: void setModel(com.android.photos.views.TiledImageRenderer.TileSource,int)>
<com.android.systemui.shared.plugins.PluginPrefs: java.util.Set getPluginList()>
<com.android.server.IpSecService.RefcountedResource: void releaseReference()>
<com.android.settingslib.bluetooth.PanProfile: void setPreferred(android.bluetooth.BluetoothDevice,boolean)>
<com.android.photos.DumbBitmapRegionDecoder: com.android.photos.DumbBitmapRegionDecoder newInstance(java.io.InputStream)>
<com.android.settingslib.deviceinfo.StorageVolumeProvider: android.os.storage.VolumeInfo findEmulatedForPrivate(android.os.storage.VolumeInfo)>
<com.android.server.timezone.TimeZoneUpdateIdler: boolean onStartJob(android.app.job.JobParameters)>
<com.android.preload.ui.IUI: void prepare(javax.swing.ListModel,javax.swing.table.TableModel,java.util.List)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int[] translateIdAttestationFlags(int)>
<com.android.server.usb.descriptors.UsbDeviceDescriptor: byte getMfgIndex()>
<com.android.systemui.statusbar.policy.AccessPointControllerImpl: boolean canConfigWifi()>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.util.List getCrossProfileCalendarPackagesForUser(int)>
<com.android.server.pm.permission.PermissionsState: void <init>(com.android.server.pm.permission.PermissionsState)>
<android.net.netlink.StructNdaCacheInfo: long lastUpdated()>
<com.android.systemui.statusbar.phone.PanelBar: void onFinishInflate()>
<com.android.systemui.qs.SlashDrawable: void <init>(android.graphics.drawable.Drawable)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: boolean hasInterrupted()>
<javax.obex.PrivateOutputStream: int size()>
<com.android.server.notification.NotificationManagerService: void fixNotification(android.app.Notification,java.lang.String,int)>
<com.android.systemui.bubbles.BubbleExpandedView: void setPointerPosition(float)>
<com.android.systemui.statusbar.policy.NetworkController.SignalCallback: void setWifiIndicators(boolean,com.android.systemui.statusbar.policy.NetworkController.IconState,com.android.systemui.statusbar.policy.NetworkController.IconState,boolean,boolean,java.lang.String,boolean,java.lang.String)>
<com.android.server.usb.descriptors.Usb20ASFormatII: int getSlotsPerFrame()>
<com.android.commands.sm.Sm: void runListDisks()>
<com.android.preload.ui.SequenceUI: com.android.preload.ui.SequenceUI input(java.io.File[])>
<com.android.server.usb.descriptors.UsbDescriptorParser: android.hardware.usb.UsbDevice.Builder toAndroidUsbDevice()>
<com.android.systemui.statusbar.notification.row.NotificationBackgroundView: void setCustomBackground(android.graphics.drawable.Drawable)>
<com.android.systemui.ActivityStarterDelegate: void startPendingIntentDismissingKeyguard(android.app.PendingIntent,java.lang.Runnable)>
<com.android.keyguard.clock.ClockOptionsProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)>
<com.android.systemui.statusbar.notification.ActivityLaunchAnimator: boolean isAnimationRunning()>
<com.android.gallery3d.common.Utils: long crc64Long(java.lang.String)>
<com.android.server.infra.ServiceNameResolver: void setOnTemporaryServiceNameChangedCallback(com.android.server.infra.ServiceNameResolver.NameResolverListener)>
<com.android.systemui.stackdivider.MinimizedDockShadow: void onDraw(android.graphics.Canvas)>
<com.android.server.usb.descriptors.UsbDescriptorParser: java.lang.String getDescriptorString(int)>
<com.android.server.textservices.TextServicesManagerService: android.view.textservice.SpellCheckerInfo getCurrentSpellChecker(int,java.lang.String)>
<com.android.systemui.recents.model.RecentsTaskLoader: void preloadTasks(com.android.systemui.recents.model.RecentsTaskLoadPlan,int)>
<javax.microedition.khronos.opengles.GL10: void glShadeModel(int)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void addOnExpandedHeightListener(java.util.function.BiConsumer)>
<com.android.systemui.tuner.ShortcutParser.Shortcut: com.android.systemui.tuner.ShortcutParser.Shortcut create(android.content.Context,java.lang.String)>
<com.android.systemui.statusbar.notification.VisualStabilityManager: void setScreenOn(boolean)>
<com.android.server.notification.NotificationDelegate: void onNotificationVisibilityChanged(com.android.internal.statusbar.NotificationVisibility[],com.android.internal.statusbar.NotificationVisibility[])>
<com.android.systemui.shared.system.WindowManagerWrapper: void setNavBarVirtualKeyHapticFeedbackEnabled(boolean)>
<javax.obex.ServerOperation: java.lang.String getType()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setForceEphemeralUsers(android.content.ComponentName,boolean)>
<com.android.server.uri.UriPermissionOwner: void <init>(com.android.server.uri.UriGrantsManagerInternal,java.lang.Object)>
<com.android.server.testing.shadows.ShadowRecoveryController: java.security.Key generateKey(java.lang.String)>
<com.android.server.wallpaper.WallpaperManagerService: void onUnlockUser(int)>
<com.android.server.security.VerityUtils.SetupResult: com.android.server.security.VerityUtils.SetupResult ok(java.io.FileDescriptor,int)>
<com.android.systemui.statusbar.policy.ZenModeController.Callback: void onManualRuleChanged(android.service.notification.ZenModeConfig.ZenRule)>
<com.android.systemui.statusbar.phone.StatusBar: void fadeKeyguardWhilePulsing()>
<com.android.systemui.statusbar.notification.NotificationEntryManager: void <init>(android.content.Context)>
<com.android.server.LocationManagerService: long getGnssCapabilities(java.lang.String)>
<com.android.settingslib.CustomEditTextPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.classifier.FalsingManagerImpl: void onAffordanceSwipingAborted()>
<com.android.server.statusbar.StatusBarManagerInternal: void hideRecentApps(boolean,boolean)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void onSystemReady()>
<com.android.server.accounts.AccountManagerService: java.lang.String readCachedTokenInternal(com.android.server.accounts.AccountManagerService.UserAccounts,android.accounts.Account,java.lang.String,java.lang.String,byte[])>
<com.android.server.om.DumpState: void setUserId(int)>
<com.android.gallery3d.common.Utils: void swap(int[],int,int)>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper: boolean isSwipingInProgress()>
<com.android.server.location.GnssMeasurementsProviderTest: void unregister_resume_notStarted()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: boolean isExpanded()>
<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantDefaultPermissionsToEnabledTelephonyDataServices(java.lang.String[],int)>
<com.android.server.tv.TvRemoteProviderProxy.ProviderMethods: void sendPointerDown(com.android.server.tv.TvRemoteProviderProxy,android.os.IBinder,int,int,int)>
<com.android.systemui.statusbar.car.UserGridRecyclerView: void onDetachedFromWindow()>
<com.android.settingslib.TwoTargetPreference: void onBindViewHolder(androidx.preference.PreferenceViewHolder)>
<com.android.systemui.statusbar.notification.row.NotificationContentInflater.AsyncInflationTask: void supersedeTask(com.android.systemui.statusbar.InflationTask)>
<com.android.settingslib.widget.AnimatedImageView: void onAttachedToWindow()>
<com.android.server.appbinding.finders.CarrierMessagingClientServiceFinder: void startMonitoring()>
<com.android.keyguard.KeyguardSimPinView: void onFinishInflate()>
<android.media.Session2Token: void <init>(android.content.Context,android.content.ComponentName)>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.settings.ToggleSliderView: void onAttachedToWindow()>
<com.android.server.soundtrigger.SoundTriggerDbHelper: android.hardware.soundtrigger.SoundTrigger.GenericSoundModel getGenericSoundModel(java.util.UUID)>
<com.android.server.PendingIntentUtils: android.os.Bundle createDontSendToRestrictedAppsBundle(android.os.Bundle)>
<com.android.server.accounts.AccountManagerService: boolean addAccountExplicitlyWithVisibility(android.accounts.Account,java.lang.String,android.os.Bundle,java.util.Map)>
<com.android.systemui.doze.DozeLog: void tracePulseDropped(android.content.Context,boolean,com.android.systemui.doze.DozeMachine.State,boolean)>
<com.android.server.BinderCallsStatsService: void reset()>
<com.android.server.pm.UserManagerService: java.lang.String getSeedAccountName()>
<com.android.server.biometrics.fingerprint.FingerprintUserState: void doWriteState()>
<com.android.server.accessibility.AccessibilityManagerService: boolean sendFingerprintGesture(int)>
<com.android.server.media.MediaRouterService: android.media.MediaRouterClientState getState(android.media.IMediaRouterClient)>
<com.android.systemui.statusbar.phone.StatusBar: void readyForKeyguardDone()>
<com.android.settingslib.wifi.AccessPoint: boolean isReachable()>
<com.android.statementservice.retriever.Statement: com.android.statementservice.retriever.Relation getRelation()>
<com.android.systemui.statusbar.phone.ShadeController: void wakeUpIfDozing(long,android.view.View,java.lang.String)>
<com.android.server.audio.AudioService: void recorderEvent(int,int)>
<com.android.systemui.stackdivider.WindowManagerProxy: void setResizing(boolean)>
<android.net.ipmemorystore.NetworkAttributes.Builder: android.net.ipmemorystore.NetworkAttributes build()>
<com.android.server.NetworkManagementService: void setInterfaceIpv6PrivacyExtensions(java.lang.String,boolean)>
<com.android.statementservice.retriever.Statement: boolean equals(java.lang.Object)>
<com.android.systemui.volume.VolumeDialogComponent: void onUserActivity()>
<com.android.server.NetworkScoreService: void unregisterNetworkScoreCache(int,android.net.INetworkScoreCache)>
<com.android.server.statusbar.StatusBarManagerInternal: void setSystemUiVisibility(int,int,int,int,int,android.graphics.Rect,android.graphics.Rect,boolean,java.lang.String)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void forceRemoveActiveAdmin(android.content.ComponentName,int)>
<com.android.server.tv.TvRemoteProviderProxy.ProviderMethods: void sendPointerSync(com.android.server.tv.TvRemoteProviderProxy,android.os.IBinder)>
<com.android.settingslib.deviceinfo.AbstractBluetoothAddressPreferenceController: boolean isAvailable()>
<android.net.ip.IpServer: java.lang.String interfaceName()>
<com.android.settingslib.RestrictedPreferenceHelper: void useAdminDisabledSummary(boolean)>
<com.android.server.pm.PackageManagerService: boolean isPackageSignedByKeySetExactly(java.lang.String,android.content.pm.KeySet)>
<com.android.server.DeviceIdleController.LocalService: void onConstraintStateChanged(com.android.server.deviceidle.IDeviceIdleConstraint,boolean)>
<com.android.systemui.statusbar.phone.DozeScrimController: boolean isDozing()>
<com.android.server.pm.Installer: void <init>(android.content.Context,boolean)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean setDeviceOwner(android.content.ComponentName,java.lang.String,int)>
<com.android.systemui.statusbar.CommandQueue: void setImeWindowStatus(int,android.os.IBinder,int,int,boolean)>
<com.android.systemui.statusbar.phone.SysuiDarkIconDispatcher: com.android.systemui.statusbar.phone.LightBarTransitionsController getTransitionsController()>
<com.android.settingslib.drawable.CircleFramedDrawable: void setScale(float)>
<com.android.bluetoothmidiservice.BluetoothPacketEncoder: void writeComplete()>
<com.android.settingslib.core.lifecycle.ObservableFragment: void onStop()>
<com.android.keyguard.KeyguardUpdateMonitor: boolean isSimPinSecure()>
<android.text.StaticLayoutGetOffsetForHorizontalPerfTest: void testGetOffsetForHorizontal_LTR()>
<com.android.server.policy.WindowManagerPolicy: void finishedGoingToSleep(int)>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: void onDeviceAttributesChanged()>
<com.android.systemui.Dependency.DependencyKey: java.lang.String toString()>
<com.android.server.usb.descriptors.report.HTMLReportCanvas: void writeParagraph(java.lang.String,boolean)>
<com.android.systemui.statusbar.GestureRecorder: void add(android.view.MotionEvent)>
<android.net.IpMemoryStoreClient: void <init>(android.content.Context)>
<com.android.systemui.recents.views.RecentsView: void onBusEvent(com.android.systemui.recents.events.ui.DismissAllTaskViewsEvent)>
<com.android.server.accounts.AccountManagerService: void writeUserDataIntoCacheLocked(com.android.server.accounts.AccountManagerService.UserAccounts,android.accounts.Account,java.lang.String,java.lang.String)>
<com.android.printspooler.model.PageContentRepository.PageContentProvider: void <init>(int,android.view.View)>
<com.android.settingslib.net.DataUsageController: com.android.settingslib.net.DataUsageController.DataUsageInfo getDataUsageInfo(android.net.NetworkTemplate)>
<com.android.systemui.statusbar.phone.ButtonDispatcher: android.view.View getCurrentView()>
<com.android.server.utils.ManagedApplicationService.PendingEvent: void runEvent(android.os.IInterface)>
<android.net.ipmemorystore.SameL3NetworkResponse: void <init>(java.lang.String,java.lang.String,float)>
<com.android.systemui.doze.DozeLog: void traceTimeTickScheduled(long,long)>
<com.android.server.pm.UserManagerService.LifeCycle: void onUnlockUser(int)>
<com.android.server.usb.UsbService: boolean hasDefaults(java.lang.String,int)>
<com.android.systemui.shared.recents.model.IconLoader: android.content.pm.ActivityInfo getAndUpdateActivityInfo(com.android.systemui.shared.recents.model.Task.TaskKey)>
<com.android.server.audio.AudioService: void disableSafeMediaVolume(java.lang.String)>
<com.android.systemui.volume.VolumeDialogImpl: void setAutomute(boolean)>
<com.android.systemui.recents.views.RecentsTransitionComposer: void <init>(android.content.Context)>
<com.android.server.IoThread: java.util.concurrent.Executor getExecutor()>
<com.android.server.BinderCallsStatsService.LifeCycle: void onStart()>
<com.android.server.twilight.TwilightService: void onStart()>
<com.android.settingslib.DeviceInfoUtils: java.lang.String getFormattedKernelVersion(android.content.Context)>
<com.android.systemui.statusbar.phone.PanelView: void resetViews(boolean)>
<com.android.systemui.statusbar.phone.StatusBarIconController.IconManager: boolean shouldLog()>
<com.android.settingslib.bluetooth.MapProfile: boolean isPreferred(android.bluetooth.BluetoothDevice)>
<com.android.systemui.statusbar.policy.EmergencyCryptkeeperText: void onDetachedFromWindow()>
<android.media.MediaSession2.SessionCallback: android.media.Session2Command.Result onSessionCommand(android.media.MediaSession2,android.media.MediaSession2.ControllerInfo,android.media.Session2Command,android.os.Bundle)>
<com.android.systemui.statusbar.phone.PanelView: boolean isUnlockHintRunning()>
<com.android.server.pm.permission.BasePermission: boolean isSetup()>
<com.android.systemui.statusbar.NotificationLockscreenUserManager: boolean shouldHideNotifications(java.lang.String)>
<com.android.server.coverage.CoverageService: void onShellCommand(java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ShellCallback,android.os.ResultReceiver)>
<com.android.systemui.shared.system.WindowCallbacksCompat: void reportDrawFinish()>
<com.android.systemui.statusbar.phone.EdgeBackGestureHandler: void onDisplayRemoved(int)>
<com.android.server.pm.UserManagerService: android.os.PersistableBundle getSeedAccountOptions()>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin.MenuItem getLongpressMenuItem(android.content.Context)>
<com.android.server.slice.SliceManagerService: android.os.Handler getHandler()>
<com.android.server.pm.PackageInstallerService: void uninstall(android.content.pm.VersionedPackage,java.lang.String,int,android.content.IntentSender,int)>
<com.android.systemui.statusbar.CastDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>
<com.android.server.statusbar.StatusBarManagerService: java.lang.String[] getStatusBarIcons()>
<com.android.systemui.recents.IRecentsNonSystemUserCallbacks: void showRecents(boolean,boolean,boolean,int)>
<com.android.statementservice.retriever.AndroidPackageInfoFetcher: java.util.List getStatements(java.lang.String)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void addQsTile(android.content.ComponentName)>
<com.android.systemui.recents.views.TaskStackView: void resetFocusedTask(com.android.systemui.shared.recents.model.Task)>
<com.android.server.appbinding.finders.AppServiceFinder: void dumpSimple(java.io.PrintWriter)>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: void onDismiss()>
<android.media.MediaSession2.ControllerInfo: java.lang.String toString()>
<com.android.server.biometrics.iris.IrisService: void <init>(android.content.Context)>
<com.android.server.autofill.AutofillManagerService: void registerForExtraSettingsChanges(android.content.ContentResolver,android.database.ContentObserver)>
<com.android.systemui.volume.Events: void writeState(long,com.android.systemui.plugins.VolumeDialogController.State)>
<com.android.server.usb.UsbAlsaDevice: int hashCode()>
<com.android.gallery3d.glrenderer.GLCanvas: void initializeTexture(com.android.gallery3d.glrenderer.BasicTexture,android.graphics.Bitmap)>
<com.android.systemui.glwallpaper.ImageWallpaperRenderer: void finish()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void addChildNotification(com.android.systemui.statusbar.notification.row.ExpandableNotificationRow,int)>
<com.android.settingslib.media.LocalMediaManager: void <init>(android.content.Context,java.lang.String,android.app.Notification)>
<com.android.systemui.statusbar.phone.RotationContextButton: void setVisibility(int)>
<com.android.systemui.statusbar.HeadsUpStatusBarView: void setEntry(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.settingslib.widget.BarChartInfo.Builder: com.android.settingslib.widget.BarChartInfo.Builder setDetailsOnClickListener(android.view.View.OnClickListener)>
<com.android.server.notification.NotificationRecord: boolean isProxied()>
<com.android.systemui.classifier.DurationCountClassifier: float getFalseTouchEvaluation(int,com.android.systemui.classifier.Stroke)>
<com.android.settingslib.wifi.AccessPoint: boolean isMetered()>
<com.android.systemui.statusbar.NotificationMediaManager.MediaListener: void onMetadataOrStateChanged(android.media.MediaMetadata,int)>
<com.android.systemui.statusbar.phone.PhoneStatusBarPolicy: void <init>(android.content.Context,com.android.systemui.statusbar.phone.StatusBarIconController)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getPasswordMinimumSymbols(android.content.ComponentName,int,boolean)>
<com.android.systemui.assist.ui.PerimeterPathGuide: float getRegionWidth(com.android.systemui.assist.ui.PerimeterPathGuide.Region)>
<com.android.server.pm.permission.PermissionManagerServiceInternal: java.util.ArrayList getAllPermissionWithProtectionLevel(int)>
<com.android.server.usb.descriptors.report.Reporting: void report(com.android.server.usb.descriptors.report.ReportCanvas)>
<com.android.systemui.statusbar.phone.StatusBar: void executeActionDismissingKeyguard(java.lang.Runnable,boolean)>
<com.android.systemui.recents.views.TaskStackAnimationHelper: void <init>(android.content.Context,com.android.systemui.recents.views.TaskStackView)>
<android.net.ip.IpServer: int servingMode()>
<com.android.systemui.statusbar.phone.NavBarTintController: void setWindowVisible(boolean)>
<com.android.server.biometrics.BiometricServiceBase.ServiceListener: void onAuthenticationFailedInternal(int,boolean)>
<com.android.server.biometrics.face.FaceService: void serviceDied(long)>
<com.android.systemui.statusbar.policy.HeadsUpManager: com.android.systemui.statusbar.policy.HeadsUpManager.HeadsUpEntry createAlertEntry()>
<com.android.systemui.charging.WirelessChargingAnimation.Callback: void onAnimationStarting()>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper.Callback: android.view.View getRightPreview()>
<com.android.systemui.statusbar.notification.row.NotificationBackgroundView: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<com.android.server.storage.AppCollector: java.util.List getPackageStats(long)>
<com.android.systemui.statusbar.policy.HeadsUpManager: void updateNotification(java.lang.String,boolean)>
<com.android.server.timezone.RulesManagerService: void requestNothing(byte[],boolean)>
<com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem: boolean handleSystemAudioModeStatus(com.android.server.hdmi.HdmiCecMessage)>
<com.android.systemui.util.leak.GarbageMonitor.MemoryTile: void handleSetListening(boolean)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: void onDensityOrFontScaleChanged()>
<com.android.server.pm.SharedUserSetting: void writeToProto(android.util.proto.ProtoOutputStream,long)>
<com.android.server.NetworkManagementService: void removeInterfaceFromNetwork(java.lang.String,int)>
<com.android.systemui.statusbar.policy.KeyguardMonitorImpl: boolean isKeyguardGoingAway()>
<com.android.systemui.statusbar.phone.ManagedProfileController: void setWorkModeEnabled(boolean)>
<com.android.systemui.qs.tiles.FlashlightTile: java.lang.String composeChangeAnnouncement()>
<com.android.server.content.ContentService: android.content.SyncStatusInfo getSyncStatus(android.accounts.Account,java.lang.String,android.content.ComponentName)>
<com.android.server.appprediction.RemoteAppPredictionService: void notifyAppTargetEvent(android.app.prediction.AppPredictionSessionId,android.app.prediction.AppTargetEvent)>
<com.android.printspooler.util.PageRangeUtils: boolean contains(android.print.PageRange[],int)>
<com.android.systemui.classifier.HumanInteractionClassifier: java.lang.String getTag()>
<com.android.systemui.qs.customize.TileAdapter: com.android.systemui.qs.customize.TileAdapter.Holder onCreateViewHolder(android.view.ViewGroup,int)>
<com.android.server.om.DumpState: java.lang.String getPackageName()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setLaunchAffordanceListener(java.util.function.Consumer)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void setDarkAmount(float)>
<com.android.systemui.statusbar.policy.RotationLockControllerImpl: void removeCallback(com.android.systemui.statusbar.policy.RotationLockController.RotationLockControllerCallback)>
<com.android.statementservice.IntentFilterVerificationReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.android.systemui.statusbar.policy.NetworkController: boolean hasVoiceCallingFeature()>
<com.android.systemui.statusbar.policy.BrightnessMirrorController: void showMirror()>
<com.android.gallery3d.exif.ExifInterface: void closeSilently(java.io.Closeable)>
<com.android.server.media.MediaSessionRecord: boolean isPlaybackActive()>
<com.android.systemui.util.Utils.DisableStateTracker: void disable(int,int,int,boolean)>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcherScrim: void draw(android.graphics.Canvas)>
<com.android.preload.actions.ClearTableAction: void <init>(com.android.preload.DumpTableModel)>
<com.android.systemui.statusbar.policy.KeyButtonRipple: void setAlpha(int)>
<com.android.systemui.statusbar.notification.row.NotificationGutsManager: com.android.systemui.statusbar.notification.row.ExpandableNotificationRow.LongPressListener getNotificationLongClicker()>
<com.android.printspooler.model.CustomPrinterIconCache: android.graphics.drawable.Icon getIcon(android.print.PrinterId)>
<com.android.server.soundtrigger.SoundTriggerLogger.Event: com.android.server.soundtrigger.SoundTriggerLogger.Event printLog(java.lang.String)>
<com.android.settingslib.drawable.UserIconDrawable: void setFrameColor(int)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: int getIntrinsicContentHeight()>
<com.android.server.content.SyncManager: void onBootPhase(int)>
<com.android.settingslib.core.instrumentation.MetricsFeatureProvider: void installLogWriters()>
<com.android.systemui.recents.views.TaskStackViewScroller: void dump(java.lang.String,java.io.PrintWriter)>
<com.android.server.slice.SlicePermissionManager.PkgUser: java.lang.String getPkg()>
<javax.microedition.khronos.egl.EGL10: int eglGetError()>
<com.android.server.contentcapture.ContentCaptureMetricsLogger: void writeSessionEvent(int,int,int,android.content.ComponentName,android.content.ComponentName,boolean)>
<com.android.systemui.glwallpaper.GLWallpaperRenderer: void onDrawFrame()>
<com.android.wallpaperbackup.WallpaperBackupAgent: void onCreate()>
<com.android.systemui.qs.QSDetailItems: void setEmptyState(int,int)>
<com.android.systemui.recents.views.TaskStackView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.android.server.pm.Installer: void rmdex(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcher: void setKeyguard(boolean,boolean)>
<com.android.server.location.GnssLocationProvider: com.android.server.location.GnssLocationProvider.GnssMetricsProvider getGnssMetricsProvider()>
<android.net.netlink.NetlinkMessage: android.net.netlink.NetlinkMessage parse(java.nio.ByteBuffer)>
<com.android.media.remotedisplay.RemoteDisplayProvider: void addDisplay(com.android.media.remotedisplay.RemoteDisplay)>
<com.android.systemui.recents.RecentsActivity: void onBusEvent(com.android.systemui.recents.events.ui.DeleteTaskDataEvent)>
<com.android.systemui.statusbar.phone.StatusBar: boolean isBouncerShowingScrimmed()>
<com.android.settingslib.media.BluetoothMediaDevice: boolean isConnected()>
<com.android.server.hdmi.HdmiCecMessage: java.lang.String toString()>
<com.android.settingslib.wifi.AccessPoint: java.util.Set getScanResults()>
<com.android.server.firewall.IntentFirewall: boolean checkStartActivity(android.content.Intent,int,int,java.lang.String,android.content.pm.ApplicationInfo)>
<com.android.systemui.statusbar.phone.NavigationBarView: void updateSlippery()>
<com.android.settingslib.applications.InterestingConfigChanges: boolean applyNewConfig(android.content.res.Resources)>
<com.android.systemui.statusbar.phone.PanelBar: void onPanelFullyOpened()>
<com.android.settingslib.bluetooth.HeadsetProfile: boolean disconnect(android.bluetooth.BluetoothDevice)>
<com.android.server.locksettings.recoverablekeystore.TestOnlyInsecureCertificateHelper: boolean isValidRootCertificateAlias(java.lang.String)>
<com.android.systemui.tuner.RadioListPreference.RadioFragment: void setPreference(com.android.systemui.tuner.RadioListPreference)>
<com.android.server.SensorNotificationService: void onStart()>
<android.net.netlink.NetlinkConstants: java.lang.String stringForProtocol(int)>
<com.android.settingslib.bluetooth.PbapServerProfile: boolean accessProfileEnabled()>
<com.android.systemui.statusbar.policy.SignalController: void resetLastState()>
<com.android.systemui.shared.plugins.PluginManagerImpl: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.statusbar.policy.ZenModeControllerImpl: android.content.ComponentName getEffectsSuppressor()>
<com.android.server.locksettings.recoverablekeystore.RecoverableKeyStorageException: void <init>(java.lang.String)>
<com.android.systemui.tuner.CustomListPreference: void onPrepareDialogBuilder(android.app.AlertDialog.Builder,android.content.DialogInterface.OnClickListener)>
<com.android.systemui.DejankUtils: void removeCallbacks(java.lang.Runnable)>
<com.android.location.provider.GeofenceProvider: void onGeofenceHardwareChange(android.hardware.location.GeofenceHardware)>
<com.android.server.BatteryService.HealthServiceWrapper.Callback: void onRegistration(android.hardware.health.V2_0.IHealth,android.hardware.health.V2_0.IHealth,java.lang.String)>
<com.android.systemui.statusbar.phone.HeadsUpAppearanceController: boolean isShown()>
<com.android.server.wallpaper.WallpaperManagerService: void unregisterWallpaperColorsCallback(android.app.IWallpaperManagerCallback,int,int)>
<com.android.server.policy.WindowManagerPolicy.WindowManagerFuncs: java.lang.String cameraLensStateToString(int)>
<com.android.systemui.statusbar.phone.NotificationIconContainer: void setDark(boolean,boolean,long)>
<com.android.server.stats.StatsCompanionService.ShutdownEventReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.android.systemui.statusbar.phone.NotificationIconContainer: void setAnimationsEnabled(boolean)>
<com.android.systemui.statusbar.phone.StatusBar: java.lang.String viewInfo(android.view.View)>
<com.android.systemui.shared.recents.utilities.Utilities: void postAtFrontOfQueueAsynchronously(android.os.Handler,java.lang.Runnable)>
<com.android.vpndialogs.ConfirmDialog: void onBackPressed()>
<com.android.systemui.recents.events.activity.MultiWindowStateChangedEvent: void <init>(boolean,boolean,com.android.systemui.recents.model.TaskStack)>
<com.android.server.biometrics.face.FaceService: java.lang.String getLockoutBroadcastPermission()>
<com.android.systemui.statusbar.phone.CollapsedStatusBarFragment: void onPause()>
<com.android.server.pm.ShortcutBitmapSaver: void dumpLocked(java.io.PrintWriter,java.lang.String)>
<com.android.systemui.recents.model.TaskFilter: boolean acceptTask(android.util.SparseArray,com.android.systemui.shared.recents.model.Task,int)>
<com.android.server.testing.shadows.ShadowKeyValueBackupTask: void execute()>
<com.android.systemui.statusbar.notification.stack.AmbientState: boolean isPulsing()>
<com.android.printspooler.model.PrintSpoolerService.PrintSpooler: void removeObsoletePrintJobs()>
<android.media.MediaPlayer2: java.lang.Object deselectTrack(android.media.MediaPlayer2.TrackInfo)>
<com.android.printspooler.model.PageContentRepository: int getFilePageCount()>
<com.android.systemui.statusbar.NotificationHeaderUtil.ViewComparator: boolean compare(android.view.View,android.view.View,java.lang.Object,java.lang.Object)>
<com.android.systemui.statusbar.phone.UserAvatarView: void setFrameWidth(float)>
<com.android.server.usb.descriptors.report.HTMLReportCanvas: void closeHeader(int)>
<com.android.server.notification.GroupHelper: void onNotificationRemoved(android.service.notification.StatusBarNotification)>
<com.android.server.notification.CalendarTracker: com.android.server.notification.CalendarTracker.CheckEventResult checkEvent(android.service.notification.ZenModeConfig.EventInfo,long)>
<com.android.systemui.classifier.FalsingManagerProxy: void onSucccessfulUnlock()>
<com.android.settingslib.RestrictedLockUtilsInternal: com.android.settingslib.RestrictedLockUtils.EnforcedAdmin checkIfAutoTimeRequired(android.content.Context)>
<com.android.systemui.qs.customize.QSCustomizer: boolean isShown()>
<com.android.server.biometrics.BiometricServiceBase: void addLockoutResetCallback(android.hardware.biometrics.IBiometricServiceLockoutResetCallback)>
<com.android.systemui.qs.tileimpl.SlashImageView: void setSlash(com.android.systemui.qs.SlashDrawable)>
<com.android.gallery3d.glrenderer.RawTexture: void prepare(com.android.gallery3d.glrenderer.GLCanvas)>
<com.android.server.policy.WindowManagerPolicy: int getUiMode()>
<com.android.systemui.statusbar.phone.ButtonDispatcher: java.util.ArrayList getViews()>
<com.android.server.ServiceWatcher: boolean start()>
<com.android.server.accessibility.MotionEventInjector: void <init>(android.os.Handler)>
<com.android.server.timedetector.TimeDetectorStrategy.Callback: int systemClockUpdateThresholdMillis()>
<com.android.settingslib.deviceinfo.PrivateStorageInfo: com.android.settingslib.deviceinfo.PrivateStorageInfo getPrivateStorageInfo(com.android.settingslib.deviceinfo.StorageVolumeProvider)>
<com.android.systemui.recents.OverviewProxyService: void cleanupAfterDeath()>
<android.media.MediaPlayer2: java.lang.Object setSyncParams(android.media.SyncParams)>
<com.android.systemui.statusbar.phone.StatusBarRemoteInputCallback: void onWorkChallengeChanged()>
<com.android.systemui.plugins.qs.QSTile: void setTileSpec(java.lang.String)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setRemoved()>
<com.android.systemui.statusbar.notification.stack.AmbientState: float getDarkAmount()>
<com.android.server.pm.PackageInstallerSession: void removeSplit(java.lang.String)>
<com.android.systemui.statusbar.phone.HeadsUpManagerPhone: void <init>(android.content.Context,android.view.View,com.android.systemui.statusbar.phone.NotificationGroupManager,com.android.systemui.statusbar.phone.StatusBar,com.android.systemui.statusbar.notification.VisualStabilityManager)>
<com.android.systemui.statusbar.phone.StatusBarTouchableRegionManager: void <init>(android.content.Context,com.android.systemui.statusbar.phone.HeadsUpManagerPhone,com.android.systemui.statusbar.phone.StatusBar,android.view.View)>
<com.android.server.biometrics.AuthenticationClient: boolean shouldFrameworkHandleLockout()>
<com.android.systemui.plugins.ActivityStarter: void startActivity(android.content.Intent,boolean)>
<com.android.systemui.shared.system.ChoreographerCompat: android.view.Choreographer getSfInstance()>
<com.android.settingslib.bluetooth.MapClientProfile: java.lang.String toString()>
<com.android.settingslib.utils.AsyncLoader: void onCanceled(java.lang.Object)>
<com.android.systemui.qs.QSTileHost: android.content.Context getContext()>
<com.android.settingslib.Utils: int getCombinedServiceState(android.telephony.ServiceState)>
<com.android.server.contentcapture.ContentCaptureMetricsLogger: void writeServiceEvent(int,android.content.ComponentName,java.lang.String)>
<com.android.server.VibratorService: boolean hasVibrator()>
<com.android.server.ConnectivityService: java.lang.String getAlwaysOnVpnPackage(int)>
<com.android.settingslib.drawer.Tile: boolean hasOrder()>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: boolean isBubble()>
<com.android.uiautomator.core.UiDevice: void clearLastTraversedText()>
<com.android.systemui.statusbar.policy.KeyButtonRipple: void setGlowScale(float)>
<com.android.server.infra.AbstractMasterSystemService: void clearCacheLocked()>
<com.android.server.statusbar.StatusBarManagerService: void onNotificationClear(java.lang.String,java.lang.String,int,int,java.lang.String,int,int,com.android.internal.statusbar.NotificationVisibility)>
<com.android.server.rollback.AppDataRollbackHelper: boolean isUserCredentialLocked(int)>
<com.android.photos.SimpleBitmapRegionDecoder: android.graphics.Bitmap decodeRegion(android.graphics.Rect,android.graphics.BitmapFactory.Options)>
<com.android.server.display.color.DisplayTransformManager: void setDaltonizerMode(int)>
<com.android.systemui.qs.QSDetailItems: void setCallback(com.android.systemui.qs.QSDetailItems.Callback)>
<com.android.systemui.analytics.DataCollector: void onTouchEvent(android.view.MotionEvent,int,int)>
<com.android.server.location.GnssPositionModeTest: void testHashCode()>
<com.android.systemui.SwipeHelper: void setMaxSwipeProgress(float)>
<com.android.printspooler.model.RemotePrintDocument: boolean hasUpdateError()>
<com.android.settingslib.media.MediaDevice: void disconnect()>
<com.android.settingslib.wifi.AccessPoint: boolean isPasspointConfig()>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: int getMenuSnapTarget()>
<com.android.systemui.statusbar.policy.NetworkController.AccessPointController: void scanForAccessPoints()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setLockTaskFeatures(android.content.ComponentName,int)>
<com.android.preload.ui.IUI: void updateWaitDialog(java.lang.String)>
<com.android.systemui.tuner.LockscreenFragment.Adapter: int getItemCount()>
<com.android.server.pm.PackageManagerService: boolean updateIntentVerificationStatus(java.lang.String,int,int)>
<com.android.server.usb.descriptors.Usb20ASGeneral: byte getControls()>
<android.net.ip.IpClientCallbacks: void setNeighborDiscoveryOffload(boolean)>
<com.android.mtp.MtpDocumentsProvider: android.os.Bundle getDocumentMetadata(java.lang.String)>
<com.android.server.uri.UriGrantsManagerInternal: void revokeUriPermission(java.lang.String,int,com.android.server.uri.GrantUri,int)>
<com.android.printspooler.widget.PrintContentView: void closeOptions()>
<com.android.server.pm.PackageSettingBase: int[] getNotInstalledUserIds()>
<com.android.server.AttributeCache: void init(android.content.Context)>
<com.android.systemui.tuner.TunerServiceImpl: void clearAllFromUser(int)>
<com.android.server.ServiceWatcher: java.lang.String toString()>
<com.android.uiautomator.core.ShellUiAutomatorBridge: android.view.Display getDefaultDisplay()>
<com.android.server.notification.ValidateNotificationPeople: void setZenHelper(com.android.server.notification.ZenModeHelper)>
<com.android.backupconfirm.BackupRestoreConfirmation: void onCreate(android.os.Bundle)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean shouldClipToActualHeight()>
<com.android.server.ConnectivityService: java.lang.String[] getTetheringErroredIfaces()>
<com.android.server.pm.PackageManagerService: void replacePreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,int)>
<com.android.systemui.statusbar.phone.StatusBarNotificationActivityStarter: boolean isCollapsingToShowActivityOverLockscreen()>
<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice queryIntentServices(android.content.Intent,java.lang.String,int,int)>
<com.android.settingslib.RestrictedSwitchPreference: void setEnabled(boolean)>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationBigPictureTemplateViewWrapper: void <init>(android.content.Context,android.view.View,com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantDefaultPermissionsToActiveLuiApp(java.lang.String,int)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void setExpandClickListener(android.view.View.OnClickListener)>
<com.android.keyguard.KeyguardPinBasedInputView: void onFinishInflate()>
<com.android.location.provider.ActivityChangedEvent: java.lang.Iterable getActivityRecognitionEvents()>
<com.android.systemui.statusbar.AnimatedImageView: void setAllowAnimation(boolean)>
<android.perftests.utils.BenchmarkState: void pauseTiming()>
<com.android.systemui.statusbar.NotificationRemoteInputManager: boolean shouldKeepForSmartReplyHistory(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.server.vr.VrManagerService: void onKeyguardStateChanged(boolean)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glBlendFuncSeparate(int,int,int,int)>
<com.android.server.NativeDaemonEvent: java.lang.String getRawEvent()>
<com.android.printspooler.util.BitmapSerializeUtils: void readBitmapPixels(android.graphics.Bitmap,android.os.ParcelFileDescriptor)>
<com.android.systemui.qs.tiles.BatterySaverTile: void onBatteryLevelChanged(int,boolean,boolean)>
<com.android.server.pm.UserManagerService: void setUserAccount(int,java.lang.String)>
<com.android.systemui.media.MediaProjectionPermissionActivity: void onClick(android.content.DialogInterface,int)>
<android.os.LooperStatsPerfTest: void setUp()>
<com.android.server.usb.descriptors.UsbACMixerUnit: int calcControlArraySize(int,int)>
<com.android.systemui.statusbar.notification.stack.AmbientState: void setPulseHeight(float)>
<com.android.systemui.statusbar.phone.ReverseLinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.NativeDaemonEvent: boolean isClassContinue()>
<com.android.systemui.analytics.DataCollector: void onStartExpandingFromPulse()>
<com.android.systemui.keyguard.KeyguardViewMediator: void onScreenTurnedOff()>
<android.app.backup.BackupUtilsTest: void testIsFileSpecifiedInPathList_whenDirectoryAndPathListEmpty()>
<com.android.server.pm.PackageInstallerService: void updateSessionAppLabel(int,java.lang.String)>
<com.android.server.pm.UserManagerService: void setUserEnabled(int)>
<com.android.server.appbinding.finders.CarrierMessagingClientServiceFinder: java.lang.Class getServiceClass()>
<com.android.systemui.keyguard.KeyguardViewMediator: com.android.internal.widget.LockPatternUtils getLockPatternUtils()>
<javax.microedition.khronos.opengles.GL11: void glGetLightfv(int,int,java.nio.FloatBuffer)>
<com.android.systemui.statusbar.StatusBarIconView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.android.systemui.BatteryMeterView: void updatePercentView()>
<com.android.systemui.shared.plugins.PluginPrefs: void addAction(java.lang.String)>
<com.android.server.display.WifiDisplayController.Listener: void onDisplayChanged(android.hardware.display.WifiDisplay)>
<com.android.server.policy.WindowManagerPolicy: int getWindowLayerLw(com.android.server.policy.WindowManagerPolicy.WindowState)>
<javax.obex.Operation: javax.obex.HeaderSet getReceivedHeader()>
<com.android.systemui.qs.customize.CustomizeTileView: void handleStateChanged(com.android.systemui.plugins.qs.QSTile.State)>
<com.android.systemui.recents.model.RecentsTaskLoadPlan: void executePlan(com.android.systemui.recents.model.RecentsTaskLoadPlan.Options,com.android.systemui.recents.model.RecentsTaskLoader)>
<com.android.systemui.pip.phone.PipDismissViewController: void createDismissTarget()>
<com.android.systemui.statusbar.policy.MobileSignalController: void unregisterListener()>
<com.android.server.display.color.ColorDisplayService.ColorDisplayServiceInternal: boolean attachColorTransformController(java.lang.String,int,java.lang.ref.WeakReference)>
<android.net.netlink.StructNlMsgErr: java.lang.String toString()>
<com.android.settingslib.wifi.WifiTracker: boolean isWifiEnabled()>
<com.android.server.om.OverlayManagerServiceImpl.PackageManagerHelper: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>
<com.android.server.usb.descriptors.UsbConfigDescriptor: byte getConfigIndex()>
<com.android.server.CountryDetectorService: void setCountryListener(android.location.CountryListener)>
<com.android.server.vr.VrManagerService: void onBootPhase(int)>
<com.android.server.appbinding.finders.AppServiceFinder: android.content.pm.ServiceInfo findService(int,android.content.pm.IPackageManager,com.android.server.appbinding.AppBindingConstants)>
<com.android.localtransport.LocalTransport: int startRestore(long,android.content.pm.PackageInfo[])>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setAppOpsOnClickListener(com.android.systemui.statusbar.notification.row.ExpandableNotificationRow.OnAppOpsClickListener)>
<com.android.systemui.qs.tileimpl.SlashImageView: void ensureSlashDrawable()>
<com.android.server.hdmi.HdmiControlService: java.util.List getIntList(java.lang.String)>
<com.android.printspooler.ui.PrintActivity.PrintServiceApprovalDialog: void onStop()>
<android.processor.view.inspector.InspectableClassModel.IntFlagEntry: int getMask()>
<com.android.server.PreloadsFileCacheExpirationJobService: boolean onStartJob(android.app.job.JobParameters)>
<com.android.settingslib.suggestions.SuggestionControllerMixinCompat.SuggestionControllerHost: androidx.loader.app.LoaderManager getLoaderManager()>
<com.android.systemui.classifier.DurationCountClassifier: void <init>(com.android.systemui.classifier.ClassifierData)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: int getEmptyShadeViewHeight()>
<com.android.settingslib.bluetooth.CachedBluetoothDeviceManager: com.android.settingslib.bluetooth.CachedBluetoothDevice addDevice(android.bluetooth.BluetoothDevice)>
<com.android.server.biometrics.EnumerateClient: void <init>(android.content.Context,com.android.server.biometrics.Constants,com.android.server.biometrics.BiometricServiceBase.DaemonWrapper,long,android.os.IBinder,com.android.server.biometrics.BiometricServiceBase.ServiceListener,int,int,boolean,java.lang.String)>
<com.android.server.appbinding.finders.AppServiceFinder: void onUserRemoved(int)>
<com.android.systemui.bubbles.BubbleData: void notificationRankingUpdated(android.service.notification.NotificationListenerService.RankingMap)>
<com.android.server.biometrics.face.FaceService: void handleUserSwitching(int)>
<com.android.settingslib.bluetooth.HidProfile: int getProfileId()>
<com.google.android.startop.iorap.AppIntentEvent: java.lang.String toString()>
<com.android.systemui.recents.utilities.AnimationProps: android.animation.ValueAnimator apply(int,android.animation.ValueAnimator)>
<com.android.systemui.statusbar.StatusBarIconView: void onSizeChanged(int,int,int,int)>
<com.android.server.pm.permission.BasePermission: void updateDynamicPermission(java.util.Collection)>
<com.android.server.NetworkManagementService: void disableIpv6(java.lang.String)>
<com.android.server.vr.VrManagerService: void <init>(android.content.Context)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void clearProfileOwnerLocked(com.android.server.devicepolicy.DevicePolicyManagerService.ActiveAdmin,int)>
<com.android.server.accounts.AccountManagerService: void addAccountAsUser(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle,int)>
<com.android.systemui.statusbar.phone.DozeScrimController: void <init>(com.android.systemui.statusbar.phone.DozeParameters)>
<com.android.systemui.statusbar.policy.HeadsUpManager: void setEntryPinned(com.android.systemui.statusbar.policy.HeadsUpManager.HeadsUpEntry,boolean)>
<com.android.server.biometrics.BiometricServiceBase: void cancelAuthenticationInternal(android.os.IBinder,java.lang.String)>
<com.android.systemui.statusbar.phone.NotificationIconAreaController: void showIconCentered(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.systemui.statusbar.phone.DemoStatusIcons: void onDarkChanged(android.graphics.Rect,float,int)>
<com.android.server.location.GnssBatchingProvider: void enable()>
<com.android.systemui.stackdivider.ForcedResizableInfoActivityController: void onAppTransitionFinished()>
<com.android.systemui.statusbar.phone.StatusBarRemoteInputCallback: void onLockedWorkRemoteInput(int,com.android.systemui.statusbar.notification.row.ExpandableNotificationRow,android.view.View)>
<com.android.server.accessibility.AccessibilityManagerService.UserState: boolean getBindInstantServiceAllowed()>
<com.android.server.display.OverlayDisplayWindow.Listener: void onWindowDestroyed()>
<com.android.systemui.recents.views.TaskStackView: boolean hasPreferredData(com.android.systemui.recents.views.TaskView,com.android.systemui.shared.recents.model.Task)>
<com.android.keyguard.KeyguardAbsKeyInputView: int getWrongPasswordStringId()>
<com.android.systemui.statusbar.car.CarStatusBar: void setLockscreenUser(int)>
<com.android.localtransport.LocalTransportService: android.os.IBinder onBind(android.content.Intent)>
<com.android.systemui.pip.BasePipManager: void dump(java.io.PrintWriter)>
<com.android.server.biometrics.BiometricUtils: java.lang.CharSequence getUniqueName(android.content.Context,int)>
<com.android.systemui.keyguard.KeyguardSliceProvider: void onStateChanged(int)>
<com.android.systemui.qs.customize.TileAdapter.Holder: void clearDrag()>
<android.net.util.NetdService: void run(android.net.util.NetdService.NetdCommand)>
<com.android.settingslib.notification.EnableZenModeDialog: android.service.notification.Condition forever()>
<com.android.server.ConnectivityService: boolean updateLockdownVpn()>
<com.android.systemui.stackdivider.MinimizedDockShadow: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.recents.views.lowram.TaskStackLowRamLayoutAlgorithm: float scrollToPercentage(int)>
<com.android.server.notification.CountdownConditionProvider: boolean isValidConditionId(android.net.Uri)>
<com.android.settingslib.widget.AppEntityInfo: java.lang.CharSequence getSummary()>
<com.android.systemui.shared.recents.utilities.AppTrace: void end(java.lang.String)>
<com.android.server.tv.UinputBridge: void sendPointerSync(android.os.IBinder)>
<android.media.Controller2Link: void onConnected(int,android.os.Bundle)>
<com.android.keyguard.KeyguardPatternView: void showMessage(java.lang.CharSequence,android.content.res.ColorStateList)>
<com.android.statsd.loadtest.ConfigFactory.ConfigMetadata: void <init>(byte[],int)>
<android.content.pm.AndroidTestBaseUpdater: void updatePackage(android.content.pm.PackageParser.Package)>
<com.android.server.autofill.FieldClassificationStrategy.MetadataParser: java.lang.Object get(android.content.res.Resources,int)>
<android.os.CpuUsageTrackingPerfTest: void timeReadPidProcDirectly()>
<com.android.systemui.bubbles.BubbleExpandedView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.systemui.util.leak.GarbageMonitor.MemoryTile: void handleClick()>
<com.android.server.ConnectivityService: java.lang.String[] getTetherableBluetoothRegexs()>
<com.android.server.usb.UsbService: void setAccessoryPackage(android.hardware.usb.UsbAccessory,java.lang.String,int)>
<com.android.systemui.qs.PagedTileLayout: void setPageIndicator(com.android.systemui.qs.PageIndicator)>
<com.android.systemui.stackdivider.DividerView: void setMinimizedDockStack(boolean,boolean)>
<android.media.MediaPlayer2: java.lang.Object prepare()>
<com.android.keyguard.KeyguardAbsKeyInputView: void setPasswordEntryEnabled(boolean)>
<com.android.server.notification.SnoozeHelper: void repostGroupSummary(java.lang.String,int,java.lang.String)>
<com.android.systemui.statusbar.policy.ZenModeController.Callback: void onNextAlarmChanged()>
<com.android.systemui.statusbar.phone.ObservableScrollView: void onOverScrolled(int,int,boolean,boolean)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: android.view.NotificationHeaderView getContractedNotificationHeader()>
<com.android.systemui.recents.RecentsOnboarding: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.settingslib.graph.BatteryMeterDrawableBase: void setBatteryLevel(int)>
<com.android.server.appop.AppOpsService: void updateUidProcState(int,int)>
<javax.obex.ClientSession: void setAuthenticator(javax.obex.Authenticator)>
<com.android.packageinstaller.television.UninstallAppProgress: boolean dispatchKeyEvent(android.view.KeyEvent)>
<com.android.server.infra.AbstractMasterSystemService: void assertCalledByPackageOwner(java.lang.String)>
<com.android.settingslib.CustomDialogPreferenceCompat.CustomPreferenceDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
<com.android.systemui.statusbar.notification.ActivityLaunchAnimator.ExpandAnimationParameters: float getStartTranslationZ()>
<com.android.systemui.statusbar.policy.NetworkController.EmergencyListener: void setEmergencyCallsOnly(boolean)>
<com.android.server.pm.AbstractStatsBase: void readInternal(java.lang.Object)>
<com.android.settingslib.fuelgauge.PowerWhitelistBackend: int getWhitelistSize()>
<com.android.settingslib.wifi.AccessPoint: java.lang.CharSequence getSsid()>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.CharSequence getShortSupportMessage(android.content.ComponentName)>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb: boolean removeKey(int,java.lang.String)>
<com.android.server.notification.ZenLog: void traceSetNotificationPolicy(java.lang.String,int,android.app.NotificationManager.Policy)>
<com.android.systemui.recents.views.TaskStackViewScroller.TaskStackViewScrollerCallbacks: void onStackScrollChanged(float,float,com.android.systemui.recents.utilities.AnimationProps)>
<com.android.systemui.statusbar.phone.StatusBarIconControllerImpl: void onDensityOrFontScaleChanged()>
<com.android.systemui.glwallpaper.ImageWallpaperRenderer: void onRevealStart(boolean)>
<com.android.server.hdmi.SelectRequestBuffer.SelectRequest: void process()>
<com.android.systemui.classifier.brightline.TimeLimitedMotionEventBuffer: int indexOf(java.lang.Object)>
<com.android.server.pm.PackageManagerService: int checkUidSignatures(int,int)>
<com.android.settingslib.accessibility.AccessibilityUtils: java.util.Set getEnabledServicesFromSettings(android.content.Context)>
<com.android.settingslib.development.AbstractEnableAdbPreferenceController: void updateState(androidx.preference.Preference)>
<com.android.server.statusbar.StatusBarManagerService: void reboot(boolean)>
<android.view.autofill.MyAutofillCallback: void expectEvent(android.view.View,int)>
<com.android.systemui.egg.MLand: boolean onKeyDown(int,android.view.KeyEvent)>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb: long insertKey(int,int,java.lang.String,com.android.server.locksettings.recoverablekeystore.WrappedKey)>
<com.android.systemui.recents.views.TaskView: void startNoUserInteractionAnimation()>
<com.android.server.TelephonyRegistry: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.location.GnssMeasurementsProviderTest: void isSupported_nativeIsSupported()>
<com.android.systemui.statusbar.phone.StatusBar: void postStartActivityDismissingKeyguard(android.app.PendingIntent)>
<com.android.server.slice.SliceClientPermissions.SliceAuthority: boolean equals(java.lang.Object)>
<com.android.server.locksettings.LockSettingsService: void setString(java.lang.String,java.lang.String,int)>
<com.android.keyguard.KeyguardClockSwitch: void onFinishInflate()>
<com.android.keyguard.KeyguardUpdateMonitor: boolean isKeyguardVisible()>
<com.android.systemui.qs.tiles.UiModeNightTile: void onUiModeChanged()>
<com.android.settingslib.suggestions.SuggestionControllerMixinCompat: boolean isSuggestionLoaded()>
<com.android.server.appop.AppOpsService: void systemReady()>
<com.android.systemui.qs.QSFooterImpl: void setExpanded(boolean)>
<com.android.server.NetworkManagementService: void addInterfaceToLocalNetwork(java.lang.String,java.util.List)>
<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexiOES(int,int,int,int,int)>
<com.android.server.wallpaper.WallpaperManagerService: void setDisplayPadding(android.graphics.Rect,java.lang.String,int)>
<android.text.StaticLayoutGetOffsetForHorizontalPerfTest: void testGetOffsetForHorizontal_RTL()>
<com.android.preload.actions.WritePreloadedClassesAction: void actionPerformed(java.awt.event.ActionEvent)>
<com.android.systemui.statusbar.notification.VisualStabilityManager: void temporarilyAllowReordering()>
<com.android.keyguard.KeyguardSecurityContainer: boolean startDisappearAnimation(java.lang.Runnable)>
<com.android.systemui.statusbar.notification.stack.AmbientState: boolean isPulseExpanding()>
<com.android.server.pm.PolicyComparator: boolean foundDuplicate()>
<com.android.systemui.statusbar.car.SwitchToGuestTimer: void <init>(android.content.Context)>
<com.android.server.pm.PackageManagerService: void forceDexOpt(java.lang.String)>
<com.android.systemui.bubbles.animation.StackAnimationController: void moveStackToSimilarPositionAfterRotation(boolean,float)>
<com.android.settingslib.wifi.AccessPoint: java.lang.String getPasspointFqdn()>
<com.android.commands.media.VolumeCtrl: void run(com.android.internal.os.BaseCommand)>
<com.android.systemui.statusbar.notification.row.NotificationInfo: void bindNotification(android.content.pm.PackageManager,android.app.INotificationManager,com.android.systemui.statusbar.notification.VisualStabilityManager,java.lang.String,android.app.NotificationChannel,java.util.Set,android.service.notification.StatusBarNotification,com.android.systemui.statusbar.notification.row.NotificationInfo.CheckSaveListener,com.android.systemui.statusbar.notification.row.NotificationInfo.OnSettingsClickListener,com.android.systemui.statusbar.notification.row.NotificationInfo.OnAppSettingsClickListener,boolean,boolean,boolean,int,boolean)>
<com.android.systemui.volume.VolumeDialogControllerImpl: void setVolumePolicy(android.media.VolumePolicy)>
<com.android.server.notification.NotificationManagerService: void simulatePackageSuspendBroadcast(boolean,java.lang.String)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: android.animation.Animator getTranslateViewAnimator(float,android.animation.ValueAnimator.AnimatorUpdateListener)>
<android.media.MediaPlayer2: android.media.MediaPlayer2.TrackInfo getSelectedTrack(int)>
<com.android.systemui.statusbar.phone.NotificationGroupManager: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.appwidget.AppWidgetService: void onBootPhase(int)>
<com.android.server.usb.descriptors.Usb10ACHeader: void <init>(int,byte,byte,int,int)>
<com.android.server.pm.PreferredComponent: boolean isSuperset(java.util.List,boolean)>
<com.android.server.role.RoleUserState: void destroy()>
<com.android.preload.Main: java.util.Map findAndGetClassData(com.android.ddmlib.IDevice,java.lang.String)>
<com.android.systemui.statusbar.CommandQueue: void animateCollapsePanels()>
<com.android.systemui.recents.misc.SystemServicesProxy: com.android.systemui.recents.misc.SystemServicesProxy getInstance(android.content.Context)>
<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: boolean isMenuVisible()>
<com.android.server.notification.ConditionProviders: java.lang.String getRequiredPermission()>
<com.android.nfc_extras.NfcExecutionEnvironment: void close()>
<com.android.server.hdmi.HdmiCecLocalDevicePlayback: void maySendActiveSource(int)>
<com.android.preload.ui.SwingUI: int getSelectedDataTableRow()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void freeContentViewWhenSafe(int)>
<com.android.systemui.recents.views.grid.GridTaskView: void onFinishInflate()>
<com.android.systemui.plugins.FalsingManager: void onCameraHintStarted()>
<com.android.settingslib.CustomEditTextPreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.systemui.statusbar.policy.KeyButtonView: void setDarkIntensity(float)>
<com.android.keyguard.KeyguardSecurityViewFlipper.LayoutParams: void <init>(android.view.ViewGroup.LayoutParams)>
<com.android.server.pm.ShortcutService: boolean hasShareTargets(java.lang.String,java.lang.String,int)>
<android.processor.view.inspector.InspectablePropertyProcessor: void process(javax.lang.model.element.Element,android.processor.view.inspector.InspectableClassModel)>
<com.android.systemui.statusbar.phone.DozeParameters: boolean getAlwaysOn()>
<com.android.systemui.recents.views.TaskStackView: com.android.systemui.recents.model.TaskStack getStack()>
<com.android.keyguard.clock.DefaultClockController: android.graphics.Bitmap getPreview(int,int)>
<com.android.systemui.statusbar.phone.StatusBar: boolean inImmersiveMode()>
<com.android.server.ConnectivityService: void setGlobalProxy(android.net.ProxyInfo)>
<com.android.systemui.classifier.FalsingManagerImpl: void cleanup()>
<com.android.systemui.statusbar.notification.stack.NotificationListContainer: boolean hasPulsingNotifications()>
<com.android.server.hdmi.HdmiCecController.NativeWrapper: android.hardware.hdmi.HdmiPortInfo[] nativeGetPortInfos(long)>
<com.android.systemui.volume.VolumeUI: void start()>
<com.android.settingslib.NetworkPolicyEditor: void <init>(android.net.NetworkPolicyManager)>
<com.android.systemui.statusbar.phone.NotificationIconContainer.IconState: void initFrom(android.view.View)>
<com.android.systemui.qs.QSFragment: void setHeightOverride(int)>
<com.android.systemui.util.AutoMarqueeTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.shared.plugins.PluginInstanceManager: void loadAll()>
<com.android.server.testing.shadows.ShadowApplicationPackageManager: android.content.pm.PackageInfo getPackageInfoAsUser(java.lang.String,int,int)>
<com.android.systemui.qs.QSPanel: void setListening(boolean)>
<com.android.systemui.qs.tiles.FlashlightTile: int getMetricsCategory()>
<com.android.systemui.colorextraction.SysuiColorExtractor: void <init>(android.content.Context,com.android.internal.colorextraction.types.ExtractionType,com.android.systemui.statusbar.policy.ConfigurationController,android.app.WallpaperManager,boolean)>
<com.android.systemui.DessertCaseDream: void onDreamingStopped()>
<com.android.uiautomator.testrunner.UiAutomatorTestCase: void tearDown()>
<com.android.server.location.GnssSatelliteBlacklistHelperTest: void emptyBlacklist_callbackIsCalled()>
<com.android.systemui.statusbar.ViewTransformationHelper: void transformFrom(com.android.systemui.statusbar.TransformableView,float)>
<com.android.systemui.statusbar.policy.HeadsUpManager: void onAlertEntryAdded(com.android.systemui.statusbar.AlertingNotificationManager.AlertEntry)>
<com.android.settingslib.core.lifecycle.ObservableDialogFragment: void onPause()>
<com.android.server.usb.UsbService.Lifecycle: void onSwitchUser(int)>
<com.android.powermodel.AttributionKey: boolean equals(java.lang.Object)>
<com.android.systemui.qs.TileLayout: boolean updateMaxRows(int,int)>
<com.android.commands.sm.Sm: void runHasAdoptable()>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)>
<com.android.systemui.qs.tileimpl.QSTileImpl: void handleUpdateState(com.android.systemui.plugins.qs.QSTile.State,java.lang.Object)>
<android.net.dhcp.DhcpServingParamsParcelExt: android.net.dhcp.DhcpServingParamsParcelExt setExcludedAddrs(java.net.Inet4Address[])>
<com.android.settingslib.widget.AdaptiveOutlineDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>
<com.android.server.accounts.AccountManagerService: void getAuthToken(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,boolean,android.os.Bundle)>
<com.android.systemui.qs.SlashDrawable: void setDrawableTintList(android.content.res.ColorStateList)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: void onActiveDeviceChanged(boolean,int)>
<com.android.gallery3d.glrenderer.GLCanvas: void drawTexture(com.android.gallery3d.glrenderer.BasicTexture,int,int,int,int)>
<com.android.settingslib.bluetooth.HidDeviceProfile: boolean accessProfileEnabled()>
<com.android.server.testing.shadows.ShadowApplicationPackageManager: void addInstalledPackage(java.lang.String,android.content.pm.PackageInfo)>
<com.android.systemui.bubbles.BadgedImageView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem: int findKeyReceiverAddress()>
<com.android.systemui.shared.system.WindowManagerWrapper: void overridePendingAppTransitionRemote(com.android.systemui.shared.system.RemoteAnimationAdapterCompat,int)>
<com.android.systemui.recents.views.RecentsView: void onDetachedFromWindow()>
<com.android.server.usb.descriptors.UsbDeviceDescriptor: int getVendorID()>
<javax.microedition.khronos.opengles.GL11Ext: void glTexParameterfv(int,int,float[],int)>
<com.android.server.biometrics.face.FaceService: boolean hasEnrolledBiometrics(int)>
<com.android.systemui.statusbar.phone.StatusBar: void visibilityChanged(boolean)>
<com.android.systemui.statusbar.car.CarStatusBar: void showUserSwitcher()>
<com.android.providers.settings.SettingsProvider: int bulkInsert(android.net.Uri,android.content.ContentValues[])>
<com.android.server.contentcapture.ContentCaptureManagerService: void onStart()>
<com.android.systemui.statusbar.phone.NearestTouchFrame: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.systemui.statusbar.policy.UserSwitcherController.BaseUserAdapter: void <init>(com.android.systemui.statusbar.policy.UserSwitcherController)>
<com.android.settingslib.CustomDialogPreferenceCompat: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.CountryDetectorService: void addCountryListener(android.location.ICountryListener)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void updateBackgroundColor(boolean)>
<com.android.systemui.recents.OverviewProxyRecentsImpl: void hideRecentApps(boolean,boolean)>
<com.android.keyguard.KeyguardSecurityView: void showMessage(java.lang.CharSequence,android.content.res.ColorStateList)>
<com.android.systemui.statusbar.notification.ImageTransformState: boolean transformScale(com.android.systemui.statusbar.notification.TransformState)>
<com.android.settingslib.wifi.TestAccessPointBuilder: com.android.settingslib.wifi.TestAccessPointBuilder setCarrierName(java.lang.String)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void onFinishedExpansionChange()>
<com.android.server.BinderCallsStatsService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.bubbles.BubbleStackView: void onBubbleDragStart(android.view.View)>
<com.android.settingslib.animation.AppearAnimationUtils: void startAnimation2d(java.lang.Object[][],java.lang.Runnable,com.android.settingslib.animation.AppearAnimationCreator)>
<com.android.statsd.loadtest.BatteryDataRecorder: void startRecording(android.content.Context)>
<com.android.server.display.utils.RollingBuffer: long getTime(int)>
<com.android.settingslib.core.instrumentation.SharedPreferencesLogger: boolean contains(java.lang.String)>
<com.android.keyguard.NumPadKey: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.systemui.ScreenDecorations.DisplayCutoutView: void onDisplayAdded(int)>
<com.android.systemui.recents.RecentsActivity: void onDetachedFromWindow()>
<com.android.server.input.InputManagerService: void <init>(android.content.Context)>
<com.android.printspooler.model.PrintSpoolerService.PrintSpooler: void pruneApprovedPrintServices(java.util.List)>
<com.android.systemui.plugins.qs.QSTile: int getMetricsCategory()>
<com.android.server.accounts.AccountManagerService.Lifecycle: void onUnlockUser(int)>
<com.android.systemui.classifier.DurationCountEvaluator: float evaluate(float)>
<com.android.systemui.statusbar.notification.NotificationFilter: boolean shouldFilterOut(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.gallery3d.exif.ExifTag: boolean setValue(com.android.gallery3d.exif.Rational)>
<com.android.systemui.statusbar.phone.NotificationGroupManager: boolean isChildInGroupWithSummary(android.service.notification.StatusBarNotification)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void reportSuccessfulBiometricAttempt(int)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void updateSpeedBumpIndex(int,boolean)>
<com.android.settingslib.bluetooth.HidProfile: boolean disconnect(android.bluetooth.BluetoothDevice)>
<com.android.systemui.recents.views.TaskViewThumbnail: void onBusEvent(com.android.systemui.recents.events.ui.TaskSnapshotChangedEvent)>
<com.android.systemui.qs.customize.TileQueryHelper: void <init>(android.content.Context,com.android.systemui.qs.customize.TileQueryHelper.TileStateListener)>
<com.android.systemui.bubbles.animation.PhysicsAnimationLayout.PhysicsPropertyAnimator: com.android.systemui.bubbles.animation.PhysicsAnimationLayout.PhysicsPropertyAnimator property(androidx.dynamicanimation.animation.DynamicAnimation.ViewProperty,float,java.lang.Runnable[])>
<android.media.DataSourceDesc.Builder: android.media.DataSourceDesc.Builder setStartPosition(long)>
<com.android.media.tv.remoteprovider.TvRemoteProvider: void sendTimestamp(android.os.IBinder,long)>
<com.android.settingslib.net.NetworkStatsSummaryLoader.Builder: void <init>(android.content.Context)>
<com.android.keyguard.KeyguardSecurityView: boolean needsInput()>
<com.android.server.notification.ScheduleConditionProvider: long getNextAlarm()>
<javax.microedition.khronos.egl.EGL10: boolean eglGetConfigs(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[],int,int[])>
<com.android.systemui.bubbles.BubbleController: void expandStack()>
<com.android.systemui.statusbar.notification.NotificationInterruptionStateProvider: com.android.systemui.statusbar.NotificationPresenter getPresenter()>
<com.android.systemui.statusbar.notification.row.ExpandableOutlineView: float getCurrentTopRoundness()>
<javax.obex.ClientOperation: void close()>
<com.android.systemui.assist.ui.CircularCornerPathRenderer: void <init>(int,int,int,int)>
<android.net.NetworkMonitorManager: boolean notifyCaptivePortalAppFinished(int)>
<com.android.settingslib.RestrictedPreference: void setEnabled(boolean)>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationViewWrapper: void setIsChildInGroup(boolean)>
<com.android.printservice.recommendation.util.PrinterHashMap: java.lang.String getKey(android.net.nsd.NsdServiceInfo)>
<com.android.systemui.statusbar.notification.stack.AmbientState: boolean isUnlockHintRunning()>
<com.android.systemui.statusbar.policy.KeyButtonDrawable: void setTranslationY(float)>
<com.android.settingslib.development.AbstractLogdSizePreferenceController: void enablePreference(boolean)>
<com.android.systemui.HardwareUiLayout: void setSwapOrientation(boolean)>
<com.android.systemui.statusbar.NotificationListener: void onNotificationRemoved(android.service.notification.StatusBarNotification,android.service.notification.NotificationListenerService.RankingMap,int)>
<com.android.photos.BitmapRegionTileSource: int getTileSize()>
<com.android.systemui.statusbar.policy.ZenModeControllerImpl: void updateZenMode(int)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void restore()>
<com.android.systemui.statusbar.notification.stack.AmbientState: void setExpandingVelocity(float)>
<com.android.server.media.RemoteDisplayProviderProxy.Callback: void onDisplayStateChanged(com.android.server.media.RemoteDisplayProviderProxy,android.media.RemoteDisplayState)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.CharSequence getOrganizationName(android.content.ComponentName)>
<com.android.server.TelephonyRegistry: void notifyDataActivityForSubscriber(int,int)>
<com.android.settingslib.suggestions.SuggestionControllerMixin: android.content.Loader onCreateLoader(int,android.os.Bundle)>
<com.android.systemui.statusbar.phone.StatusIconContainer: boolean isRestrictingIcons()>
<com.android.systemui.plugins.qs.DetailAdapter: boolean hasHeader()>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: void setIconTag(int,java.lang.Object)>
<com.android.server.locksettings.recoverablekeystore.PlatformKeyManager: com.android.server.locksettings.recoverablekeystore.PlatformEncryptionKey getEncryptKey(int)>
<com.android.keyguard.KeyguardPINView: int getPasswordTextViewId()>
<android.media.Controller2Link: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.qs.car.CarQSFragment: void closeDetail()>
<com.android.server.ConnectivityService: boolean shouldAvoidBadWifi()>
<com.android.systemui.statusbar.phone.StatusBar: void startLaunchTransitionTimeout()>
<com.android.server.policy.keyguard.KeyguardStateMonitor: void onInputRestrictedStateChanged(boolean)>
<com.android.systemui.statusbar.NotificationShelf: boolean hasNoContentHeight()>
<com.android.server.pm.PackageSetting: boolean isOdm()>
<com.android.gallery3d.glrenderer.BasicTexture: void yieldAllTextures()>
<com.android.server.pm.permission.PermissionSettings: void transferPermissions(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void removeIcon(java.lang.String)>
<android.graphics.perftests.PathPerfTest: void testReset()>
<com.android.gallery3d.common.Utils: float parseFloatSafely(java.lang.String,float)>
<com.android.systemui.statusbar.NotificationLockscreenUserManagerImpl: boolean shouldShowLockscreenNotifications()>
<com.android.server.autofill.ui.AutoFillUI: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.PanelView: void fling(float,boolean)>
<com.android.systemui.assist.ui.PerimeterPathGuide: void setRotation(int)>
<com.android.systemui.statusbar.phone.StatusBar: boolean isDeviceInVrMode()>
<com.android.server.pm.ShortcutService: long getRateLimitResetTime(java.lang.String,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: long forceSecurityLogs()>
<com.android.keyguard.KeyguardHostView: void onResume()>
<com.android.settingslib.CustomEditTextPreference: void onDialogClosed(boolean)>
<com.android.systemui.statusbar.notification.row.HybridNotificationView: void <init>(android.content.Context)>
<com.android.server.display.utils.Plog.SystemPlog: void <init>(java.lang.String)>
<com.android.server.devicepolicy.DeviceAdminServiceController: void dump(java.lang.String,java.io.PrintWriter)>
<com.android.settingslib.bluetooth.HidDeviceProfile: int getPreferred(android.bluetooth.BluetoothDevice)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: com.android.systemui.statusbar.notification.collection.NotificationEntry getEntry()>
<android.media.MediaSession2.SessionCallback: void onPostConnect(android.media.MediaSession2,android.media.MediaSession2.ControllerInfo)>
<com.android.settingslib.core.AbstractPreferenceController: boolean isAvailable()>
<com.android.systemui.qs.tiles.DataUsageDetailView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.locksettings.LockSettingsService: java.util.Map getRecoveryStatus()>
<com.android.systemui.keyguard.KeyguardViewMediator: void onBootCompleted()>
<com.android.systemui.volume.SegmentedButtons: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.phone.ContextualButtonGroup: void <init>(int)>
<com.android.systemui.biometrics.BiometricDialogView: void onHelpReceived(java.lang.String)>
<com.android.server.testing.shadows.ShadowSlog: int w(java.lang.String,java.lang.Throwable)>
<com.android.server.biometrics.ClientMonitor: android.os.IBinder getToken()>
<com.android.systemui.statusbar.phone.KeyguardBouncer: void show(boolean,boolean)>
<com.android.systemui.statusbar.policy.InflatedSmartReplies: com.android.systemui.statusbar.policy.InflatedSmartReplies.SmartRepliesAndActions chooseSmartRepliesAndActions(com.android.systemui.statusbar.policy.SmartReplyConstants,com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.settingslib.wifi.AccessPoint: int compareTo(com.android.settingslib.wifi.AccessPoint)>
<com.android.server.usb.UsbDeviceManager: void bootCompleted()>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector focusable(boolean)>
<com.android.server.display.whitebalance.DisplayWhiteBalanceFactory: com.android.server.display.whitebalance.AmbientSensor.AmbientBrightnessSensor createBrightnessSensor(android.os.Handler,android.hardware.SensorManager,android.content.res.Resources)>
<com.android.server.slice.SliceClientPermissions: void revokeUri(android.net.Uri,com.android.server.slice.SlicePermissionManager.PkgUser)>
<com.android.systemui.statusbar.policy.CastController: void startCasting(com.android.systemui.statusbar.policy.CastController.CastDevice)>
<com.android.gallery3d.glrenderer.GLCanvas: void scale(float,float,float)>
<com.android.systemui.analytics.SensorLoggerSession: java.lang.String toString()>
<com.android.systemui.statusbar.phone.PanelView: void setExpandedFraction(float)>
<com.android.server.pm.permission.BasePermission: void setPermission(android.content.pm.PackageParser.Permission)>
<com.android.server.policy.WindowManagerPolicy.WindowManagerFuncs: void getStackBounds(int,int,android.graphics.Rect)>
<com.android.printservice.recommendation.RecommendationServiceImpl: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.systemui.statusbar.phone.KeyguardBouncer: void notifyKeyguardAuthenticated(boolean)>
<com.android.systemui.recents.events.activity.LaunchTaskStartedEvent: void <init>(com.android.systemui.recents.views.TaskView,boolean)>
<com.android.systemui.power.PowerUI: void maybeShowBatteryWarningV2(boolean,int)>
<com.android.server.pm.PackageManagerService: boolean isSafeMode()>
<com.android.server.accessibility.MagnificationController.ControllerContext: long getAnimationDuration()>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: void setOverrideTintColor(int,float)>
<com.android.server.pm.permission.PermissionManagerServiceInternal: void addAllPermissionGroups(android.content.pm.PackageParser.Package,boolean)>
<com.android.settingslib.core.lifecycle.ObservableFragment: com.android.settingslib.core.lifecycle.Lifecycle getSettingsLifecycle()>
<com.android.systemui.usb.UsbResolverActivity: void onCreate(android.os.Bundle)>
<com.android.systemui.qs.QSTileHost: void addTile(android.content.ComponentName)>
<com.android.server.stats.StatsCompanionService: void setPullingAlarm(long)>
<com.android.settingslib.datetime.ZoneGetter: java.util.List getZonesList(android.content.Context)>
<com.android.systemui.statusbar.phone.StatusBar: void onExpandAnimationTimedOut()>
<com.android.systemui.qs.external.CustomTile: long getStaleTimeout()>
<com.android.printspooler.widget.PrintContentView: boolean isOptionsOpened()>
<com.android.systemui.recents.LegacyRecentsImpl: void onStart(android.content.Context,com.android.systemui.SysUiServiceProvider)>
<com.android.server.pm.UserRestrictionsUtils: void applyUserRestrictions(android.content.Context,int,android.os.Bundle,android.os.Bundle)>
<com.android.systemui.SystemBars: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.pm.PackageManagerService: int movePrimaryStorage(java.lang.String)>
<android.os.ParcelPerfTest: void setUp()>
<com.android.systemui.statusbar.phone.NavigationModeController: void updateCurrentInteractionMode(boolean)>
<android.net.ip.InterfaceController: boolean addAddress(android.net.LinkAddress)>
<com.android.systemui.SwipeHelper: void onMoveUpdate(android.view.View,android.view.MotionEvent,float,float)>
<com.android.systemui.statusbar.phone.HeadsUpManagerPhone: void onOverlayChanged()>
<com.android.systemui.qs.tiles.WorkModeTile: java.lang.String composeChangeAnnouncement()>
<com.android.systemui.shared.system.DevicePolicyManagerWrapper: com.android.systemui.shared.system.DevicePolicyManagerWrapper getInstance()>
<com.android.settingslib.CustomDialogPreference: android.app.Dialog getDialog()>
<com.android.server.pm.PackageManagerService: java.lang.String getInstantAppAndroidId(java.lang.String,int)>
<com.android.systemui.qs.tiles.ColorInversionTile: void handleClick()>
<com.android.systemui.RegionInterceptingFrameLayout.RegionInterceptableView: boolean shouldInterceptTouch()>
<com.android.systemui.statusbar.notification.row.NotificationBackgroundView: void setDistanceToTopRoundness(float)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void addStateMonitorCallback(com.android.internal.policy.IKeyguardStateCallback)>
<com.android.statementservice.DirectStatementService: android.os.IBinder onBind(android.content.Intent)>
<com.android.server.pm.permission.PermissionManagerServiceInternal: java.util.List getPermissionInfoByGroup(java.lang.String,int,int)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void translate(float,float)>
<com.android.server.appprediction.AppPredictionPerUserService: void onFailureOrTimeout(boolean)>
<com.android.server.biometrics.RemovalClient: void notifyUserActivity()>
<com.android.systemui.statusbar.phone.NotificationGroupManager: void addOnGroupChangeListener(com.android.systemui.statusbar.phone.NotificationGroupManager.OnGroupChangeListener)>
<com.android.settingslib.core.lifecycle.ObservableActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice getSharedLibraries(java.lang.String,int,int)>
<com.android.server.pm.PackageManagerService: void notifyPackageAdded(java.lang.String,int)>
<com.android.systemui.qs.tiles.NightDisplayTile: void handleUserSwitch(int)>
<com.android.systemui.plugins.DozeServicePlugin.RequestDoze: void onRequestHideDoze()>
<com.android.systemui.statusbar.phone.StatusBarRemoteInputCallback.ChallengeReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.android.systemui.recents.utilities.AnimationProps: android.animation.AnimatorSet createAnimator(java.util.List)>
<com.android.systemui.pip.phone.PipTouchHandler: void onActivityUnpinned(android.content.ComponentName)>
<com.android.server.pm.Installer: boolean copySystemProfile(java.lang.String,int,java.lang.String,java.lang.String)>
<com.android.keyguard.KeyguardAbsKeyInputView: void handleAttemptLockout(long)>
<com.android.server.media.MediaSessionService: void enforcePhoneStatePermission(int,int)>
<com.android.systemui.statusbar.ScrimView: boolean canReceivePointerEvents()>
<com.android.server.statusbar.StatusBarManagerService: void setSystemUiVisibility(int,int,int,java.lang.String)>
<com.android.systemui.statusbar.phone.ScrimController: void setCurrentUser(int)>
<com.android.server.locksettings.recoverablekeystore.WrappedKey: java.util.Map unwrapKeys(com.android.server.locksettings.recoverablekeystore.PlatformDecryptionKey,java.util.Map)>
<com.android.server.DiskStatsService: void <init>(android.content.Context)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setNeedsRedaction(boolean)>
<com.android.systemui.bubbles.BubbleStackView: float getNormalizedXPosition()>
<com.android.server.biometrics.face.FaceUserState: void parseBiometricsLocked(org.xmlpull.v1.XmlPullParser)>
<com.android.server.policy.WindowManagerPolicy.WindowManagerFuncs: void onKeyguardShowingAndNotOccludedChanged()>
<com.android.server.policy.role.LegacyRoleResolutionPolicy: java.util.List getRoleHolders(java.lang.String,int)>
<com.android.systemui.statusbar.notification.TransformState: void transformViewFullyTo(com.android.systemui.statusbar.notification.TransformState,com.android.systemui.statusbar.ViewTransformationHelper.CustomTransformation,float)>
<com.android.gallery3d.glrenderer.GLCanvas: void dumpStatisticsAndClear()>
<com.android.server.policy.PhoneWindowManager: android.graphics.Rect getFoldedArea()>
<com.android.systemui.statusbar.phone.StatusBarIconList.Slot: boolean hasIconsInSlot()>
<com.android.systemui.statusbar.phone.PanelView: java.lang.String getName()>
<com.android.systemui.statusbar.RemoteInputController: boolean isRemoteInputActive()>
<com.android.printspooler.ui.PrintActivity: void onMalformedPdfFile()>
<com.android.systemui.statusbar.policy.UserSwitcherController.UserRecord: void <init>(android.content.pm.UserInfo,android.graphics.Bitmap,boolean,boolean,boolean,boolean,boolean)>
<com.android.providers.settings.DeviceConfigService: void <init>(com.android.providers.settings.SettingsProvider)>
<com.android.server.notification.NotificationRecord: void recordDirectReplied()>
<com.android.aapt.namespace.app.MainActivity: void onCreate(android.os.Bundle)>
<com.android.systemui.stackdivider.WindowManagerProxy: void maximizeDockedStack()>
<com.android.preload.classdataretrieval.hprof.Hprof: void init()>
<com.android.packageinstaller.wear.InstallTask: boolean isError()>
<com.android.settingslib.bluetooth.CachedBluetoothDeviceManager: boolean onProfileConnectionStateChangedIfProcessed(com.android.settingslib.bluetooth.CachedBluetoothDevice,int)>
<com.android.systemui.egg.MLand: int getGameWidth()>
<com.android.systemui.recents.views.FixedSizeFrameLayout: void onMeasure(int,int)>
<com.android.gallery3d.exif.ExifInterface: void removeTagDefinition(int)>
<com.android.systemui.statusbar.notification.stack.AmbientState: void setActivatedChild(com.android.systemui.statusbar.notification.row.ActivatableNotificationView)>
<com.android.settingslib.net.NetworkCycleDataLoader.Builder: com.android.settingslib.net.NetworkCycleDataLoader.Builder setNetworkTemplate(android.net.NetworkTemplate)>
<com.android.settingslib.dream.DreamBackend: java.lang.CharSequence getActiveDreamName()>
<com.android.settingslib.RestrictedLockUtilsInternal: void setMenuItemAsDisabledByAdmin(android.content.Context,android.view.MenuItem,com.android.settingslib.RestrictedLockUtils.EnforcedAdmin)>
<com.android.systemui.tuner.CustomListPreference.CustomListPreferenceDialogFragment: void onItemConfirmed()>
<com.android.systemui.statusbar.AlphaOptimizedTextView: void <init>(android.content.Context)>
<com.android.systemui.statusbar.KeyboardShortcutKeysLayout.LayoutParams: void <init>(int,int)>
<android.net.IpMemoryStoreClient: void isSameNetwork(java.lang.String,java.lang.String,android.net.ipmemorystore.OnSameL3NetworkResponseListener)>
<com.android.systemui.statusbar.notification.stack.AmbientState: float getExpandingVelocity()>
<com.android.systemui.statusbar.phone.StatusBarIconHolder: com.android.systemui.statusbar.phone.StatusBarSignalPolicy.WifiIconState getWifiState()>
<com.android.server.pm.ShortcutService: boolean requestPinShortcut(java.lang.String,android.content.pm.ShortcutInfo,android.content.IntentSender,int)>
<com.android.server.pm.dex.DexManager: boolean isPackageSelectedToRunOob(java.lang.String)>
<com.android.systemui.statusbar.phone.StatusBarIconControllerImpl: void setMobileIcons(java.lang.String,java.util.List)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getKeyguardDisabledFeatures(android.content.ComponentName,int,boolean)>
<com.android.settingslib.applications.ApplicationsState.AppFilter: void init(android.content.Context)>
<com.android.systemui.statusbar.notification.row.FooterView: void setManageButtonClickListener(android.view.View.OnClickListener)>
<com.android.systemui.statusbar.StatusBarMobileView: void onDarkChanged(android.graphics.Rect,float,int)>
<com.android.settingslib.suggestions.SuggestionControllerMixin: void launchSuggestion(android.service.settings.suggestions.Suggestion)>
<com.android.server.accounts.IAccountAuthenticatorCache: java.util.Collection getAllServices(int)>
<com.android.preload.ui.SwingUI: void prepare(javax.swing.ListModel,javax.swing.table.TableModel,java.util.List)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setDark(boolean,boolean,long)>
<com.android.localtransport.LocalTransport: java.lang.String name()>
<com.android.systemui.tuner.LockscreenFragment: android.content.pm.ActivityInfo getActivityinfo(android.content.Context,java.lang.String)>
<com.android.settingslib.widget.BarView: void <init>(android.content.Context)>
<com.android.settingslib.core.instrumentation.VisibilityLoggerMixin: void <init>(int,com.android.settingslib.core.instrumentation.MetricsFeatureProvider)>
<com.android.settingslib.Utils: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>
<com.android.server.policy.WindowManagerPolicy: void notifyLidSwitchChanged(long,boolean)>
<com.android.systemui.statusbar.policy.SecurityController: java.lang.CharSequence getWorkProfileOrganizationName()>
<com.android.server.pm.permission.BasePermission: boolean dumpPermissionsLPr(java.io.PrintWriter,java.lang.String,java.util.Set,boolean,boolean,com.android.server.pm.DumpState)>
<com.android.settingslib.deviceinfo.AbstractBluetoothAddressPreferenceController: java.lang.String[] getConnectivityIntents()>
<com.android.server.tv.UinputBridge: void sendTimestamp(android.os.IBinder,long)>
<com.android.vpndialogs.ManageDialog: void onClick(android.content.DialogInterface,int)>
<com.android.settingslib.widget.BarViewInfo: void setClickListener(android.view.View.OnClickListener)>
<com.android.server.notification.NotificationManagerService.NotificationAssistants: android.os.IInterface asInterface(android.os.IBinder)>
<com.android.systemui.statusbar.StatusBarMobileView: int getVisibleState()>
<com.android.systemui.statusbar.policy.CallbackHandler: void setIsAirplaneMode(com.android.systemui.statusbar.policy.NetworkController.IconState)>
<com.android.systemui.qs.QuickQSPanel: void setVisibility(int)>
<com.android.systemui.colorextraction.SysuiColorExtractor: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.classifier.Point: float crossProduct(com.android.systemui.classifier.Point,com.android.systemui.classifier.Point)>
<com.android.systemui.shared.system.InputConsumerController: boolean isRegistered()>
<com.android.server.content.ContentService.ObserverNode: void dumpLocked(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],java.lang.String,java.lang.String,int[],android.util.SparseIntArray)>
<android.media.MediaPlayer2: java.lang.Object setAuxEffectSendLevel(float)>
<com.android.server.location.GnssBatchingProviderTest: void started_resume_started()>
<android.net.ipmemorystore.NetworkAttributes.Builder: android.net.ipmemorystore.NetworkAttributes.Builder setAssignedV4AddressExpiry(java.lang.Long)>
<com.android.systemui.statusbar.notification.TransformState: void transformViewVerticalTo(com.android.systemui.statusbar.notification.TransformState,com.android.systemui.statusbar.ViewTransformationHelper.CustomTransformation,float)>
<com.android.systemui.statusbar.policy.ScrollAdapter: android.view.View getHostView()>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean isExpanding()>
<com.android.server.SystemServerInitThreadPool: java.util.concurrent.Future submit(java.lang.Runnable,java.lang.String)>
<com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem: void switchToAudioInput()>
<com.android.settingslib.RestrictedPreferenceHelper: boolean performClick()>
<com.android.systemui.statusbar.policy.SecurityControllerImpl: boolean isVpnEnabled()>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: boolean isClearable()>
<com.android.server.EntropyMixer: void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>
<com.android.server.pm.LauncherAppsService: void <init>(android.content.Context)>
<com.android.location.provider.ActivityRecognitionEvent: void <init>(java.lang.String,int,long)>
<com.android.systemui.statusbar.notification.VisualStabilityManager: void setUpWithPresenter(com.android.systemui.statusbar.NotificationPresenter)>
<com.android.systemui.qs.QSHost: android.content.Context getContext()>
<com.android.server.notification.NotificationRecord: void setNumSmartRepliesAdded(int)>
<com.android.systemui.statusbar.StatusBarIconView: boolean isIconVisible()>
<android.graphics.perftests.RenderNodePerfTest: void testIsValid()>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: boolean canConfigBluetooth()>
<com.android.systemui.statusbar.phone.NotificationPanelView: android.view.View getRightPreview()>
<android.perftests.utils.BenchmarkState: void resumeTiming()>
<com.android.keyguard.KeyguardUpdateMonitor: boolean isLogoutEnabled()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean isMediaRow()>
<com.android.systemui.statusbar.StatusBarIconView: int getStaticDrawableColor()>
<com.android.systemui.DessertCase: void onResume()>
<com.android.systemui.statusbar.car.FullscreenUserSwitcher: void hide()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void onPluginDisconnected(com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin)>
<com.android.systemui.statusbar.CommandQueue: void onDisplayReady(int)>
<com.android.server.NetworkManagementService: void clearDefaultNetId()>
<com.android.systemui.statusbar.tv.TvStatusBar: void start()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void <init>(android.content.Context)>
<com.android.server.audio.AudioService.VolumeController: void loadSettings(android.content.ContentResolver)>
<com.android.server.uri.UriGrantsManagerService.Lifecycle: com.android.server.uri.UriGrantsManagerService getService()>
<com.android.server.notification.ZenModeHelper: void evaluateZenMode(java.lang.String,boolean)>
<com.android.server.locksettings.recoverablekeystore.certificate.CertParsingException: void <init>(java.lang.Exception)>
<com.android.server.biometrics.BiometricServiceBase.ServiceListener: void onEnumerated(android.hardware.biometrics.BiometricAuthenticator.Identifier,int)>
<com.android.server.location.ContextHubService: void unloadNanoAppFromHub(int,android.hardware.location.IContextHubTransactionCallback,long)>
<com.android.server.audio.MediaFocusControl: int getFocusRampTimeMs(int,android.media.AudioAttributes)>
<com.android.printspooler.model.RemotePrintDocument: com.android.printspooler.model.RemotePrintDocument.RemotePrintDocumentInfo getDocumentInfo()>
<com.android.systemui.tuner.NavBarTuner: void onCreate(android.os.Bundle)>
<com.android.systemui.util.AsyncSensorManager: void registerDynamicSensorCallbackImpl(android.hardware.SensorManager.DynamicSensorCallback,android.os.Handler)>
<com.android.systemui.qs.external.TileLifecycleManager: boolean isActiveTile()>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void onStartedGoingToSleep(int)>
<com.android.server.usb.descriptors.UsbDeviceDescriptor: int getDevClass()>
<com.android.systemui.pip.phone.PipMenuActivityController: void onActivityPinned()>
<com.android.server.input.InputManagerService: void setInputDispatchMode(boolean,boolean)>
<com.android.systemui.analytics.DataCollector: void onScreenTurningOn()>
<android.net.shared.ProvisioningConfiguration.Builder: android.net.shared.ProvisioningConfiguration.Builder withoutIPv4()>
<com.android.systemui.biometrics.BiometricDialogView: void setSkipIntro(boolean)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setClipBottomAmount(int)>
<com.android.future.usb.UsbAccessory: java.lang.String getManufacturer()>
<android.app.ResourcesThemePerfTest: void obtainStyledAttributesForViewFromMaterial()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: float getStackTranslation()>
<com.android.server.accounts.AccountManagerService: void startAddAccountSession(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle)>
<com.android.server.usb.descriptors.Usb20ACHeader: void <init>(int,byte,byte,int,int)>
<com.android.server.webkit.SystemImpl: void updateUserSetting(android.content.Context,java.lang.String)>
<com.android.keyguard.NumPadKey: void userActivity()>
<com.android.systemui.statusbar.phone.StatusBar: void onActivationReset()>
<com.android.systemui.ScreenDecorations: void setAssistHintVisible(boolean)>
<com.android.systemui.statusbar.phone.StatusBarIconController.DarkIconManager: void <init>(android.widget.LinearLayout)>
<com.android.uiautomator.core.UiScrollable: boolean flingToBeginning(int)>
<com.android.systemui.DependencyBinder: com.android.systemui.statusbar.phone.StatusBarIconController provideStatusBarIconController(com.android.systemui.statusbar.phone.StatusBarIconControllerImpl)>
<com.android.systemui.statusbar.phone.StatusBarNotificationPresenter: void onBindRow(com.android.systemui.statusbar.notification.collection.NotificationEntry,android.content.pm.PackageManager,android.service.notification.StatusBarNotification,com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb: long setRecoveryServicePublicKey(int,int,java.security.PublicKey)>
<com.android.server.usb.descriptors.Usb10ASFormatI: int[] getChannelCounts()>
<com.android.keyguard.clock.ClockLayout: void <init>(android.content.Context)>
<com.android.settingslib.bluetooth.MapProfile: int getOrdinal()>
<com.android.systemui.qs.QSCarrierGroup: void updateCarrierInfo(com.android.keyguard.CarrierTextController.CarrierTextCallbackInfo)>
<com.android.keyguard.KeyguardUpdateMonitor.BatteryStatus: java.lang.String toString()>
<com.android.server.pm.permission.BasePermission: boolean isRuntimeOnly()>
<com.android.gallery3d.common.Utils: void debug(java.lang.String,java.lang.Object[])>
<com.android.systemui.statusbar.policy.RemoteInputView.RemoteEditText: void onVisibilityChanged(android.view.View,int)>
<com.android.mtp.MtpDocumentsService: android.os.IBinder onBind(android.content.Intent)>
<com.android.server.notification.NotificationRecord: void calculateImportance()>
<android.widget.TextViewPrecomputedTextPerfTest: void testNewLayout_PrecomputedText()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setBluetoothContactSharingDisabled(android.content.ComponentName,boolean)>
<javax.microedition.khronos.egl.EGL10: boolean eglInitialize(javax.microedition.khronos.egl.EGLDisplay,int[])>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setPasswordMinimumNumeric(android.content.ComponentName,int,boolean)>
<com.android.bluetoothmidiservice.MidiBtleTimeTracker: void setWindowMillis(int)>
<com.android.settingslib.applications.StorageStatsSource.AppStorageStatsImpl: long getTotalBytes()>
<com.android.systemui.util.leak.DumpTruck: com.android.systemui.util.leak.DumpTruck captureHeaps(int[])>
<com.android.systemui.qs.tiles.UserDetailItemView: void setEnabled(boolean)>
<com.android.server.locksettings.recoverablekeystore.KeySyncUtils: byte[] generateKeyClaimant()>
<com.android.systemui.statusbar.notification.row.NotificationBackgroundView: void setClipBottomAmount(int)>
<com.android.server.audio.AudioService.AudioPolicyProxy: java.lang.String toLogFriendlyString()>
<com.android.systemui.recents.model.RecentsTaskLoader: void dump(java.lang.String,java.io.PrintWriter)>
<com.android.systemui.statusbar.KeyguardAffordanceView: void setImageAlpha(float,boolean,long,android.view.animation.Interpolator,java.lang.Runnable)>
<com.android.server.content.ContentService.ObserverNode: void addObserverLocked(android.net.Uri,android.database.IContentObserver,boolean,java.lang.Object,int,int,int)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: android.view.View.OnClickListener getAppOpsOnClickListener()>
<com.android.systemui.shared.system.ActivityManagerWrapper: boolean supportsFreeformMultiWindow(android.content.Context)>
<com.android.systemui.statusbar.CommandQueue: void showPinningEnterExitToast(boolean)>
<com.android.systemui.statusbar.CommandQueue: void addQsTile(android.content.ComponentName)>
<com.android.server.pm.KeySetManagerService: android.util.ArraySet getPublicKeysFromKeySetLPr(long)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean isRemoved()>
<com.android.systemui.qs.external.QSTileServiceWrapper: boolean onStartListening()>
<com.android.systemui.volume.SafetyWarningDialog: void cleanUp()>
<com.android.server.notification.ConditionProviders: android.os.IInterface asInterface(android.os.IBinder)>
<com.android.systemui.DependencyProvider: android.os.Looper provideBgLooper()>
<com.android.photos.views.TiledImageRenderer: void setViewSize(int,int)>
<com.android.gallery3d.glrenderer.BasicTexture: void draw(com.android.gallery3d.glrenderer.GLCanvas,int,int)>
<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexfvOES(java.nio.FloatBuffer)>
<com.android.systemui.recents.LegacyRecentsImpl: com.android.systemui.recents.model.RecentsTaskLoader getTaskLoader()>
<com.android.printspooler.model.PrintSpoolerService.PrintSpooler: void getCustomPrinterIcon(android.print.PrinterId,android.print.IPrintSpoolerCallbacks,int)>
<com.android.server.AnyMotionDetector.Vector3: void <init>(long,float,float,float)>
<com.android.printspooler.widget.EmbeddedContentContainer: void <init>(android.content.Context,android.util.AttributeSet)>
<android.processor.unsupportedappusage.UnsupportedAppUsageProcessor: javax.lang.model.SourceVersion getSupportedSourceVersion()>
<com.android.systemui.doze.DozeMachine: int getPulseReason()>
<com.android.keyguard.KeyguardUpdateMonitor: boolean isFingerprintDetectionRunning()>
<com.android.server.audio.AudioService: void setWiredDeviceConnectionState(int,int,java.lang.String,java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.KeyguardAffordanceView: void instantFinishAnimation()>
<com.android.server.pm.permission.PermissionManagerServiceInternal: com.android.server.pm.permission.PermissionSettings getPermissionSettings()>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: com.android.systemui.statusbar.InflationTask getRunningTask()>
<com.android.systemui.recents.misc.SystemServicesProxy: void getStableInsets(android.graphics.Rect)>
<com.android.keyguard.CarrierTextController: void updateCarrierText()>
<com.android.systemui.shared.system.ActivityManagerWrapper: java.lang.String getBadgedApplicationLabel(android.content.pm.ApplicationInfo,int)>
<com.android.server.webkit.SystemImpl: void notifyZygote(boolean)>
<com.android.statsd.loadtest.LoadtestActivity: java.util.List getData()>
<com.android.settingslib.applications.ApplicationsState: com.android.settingslib.applications.ApplicationsState getInstance(android.app.Application)>
<com.android.systemui.keyguard.WakefulnessLifecycle: void dispatchStartedWakingUp()>
<com.android.systemui.statusbar.phone.KeyguardBouncer: boolean needsFullscreenBouncer()>
<com.android.wallpapercropper.WallpaperCropActivity.BitmapCropTask: void onPostExecute(java.lang.Boolean)>
<com.android.server.pm.PackageManagerService: boolean activitySupportsIntent(android.content.ComponentName,android.content.Intent,java.lang.String)>
<com.android.systemui.volume.Events.Callback: void writeState(long,com.android.systemui.plugins.VolumeDialogController.State)>
<com.android.settingslib.bluetooth.LocalBluetoothProfileManager: com.android.settingslib.bluetooth.HeadsetProfile getHeadsetProfile()>
<com.android.systemui.statusbar.phone.StatusBar: boolean hideKeyguard()>
<com.android.server.locksettings.LockSettingsService: void tieProfileLockToParent(int,byte[])>
<com.android.keyguard.KeyguardUpdateMonitor: void setHasLockscreenWallpaper(boolean)>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: int getConnectionState()>
<com.android.server.pm.PackageManagerService: void restoreDefaultApps(byte[],int)>
<com.android.server.content.ContentService: void setSyncAutomaticallyAsUser(android.accounts.Account,java.lang.String,boolean,int)>
<com.android.server.CachedDeviceStateService: void onStart()>
<com.android.systemui.shared.system.RecentTaskInfoCompat: void <init>(android.app.ActivityManager.RecentTaskInfo)>
<com.android.systemui.keyboard.KeyboardUI: void onBootCompleted()>
<com.android.systemui.doze.DozeService: void onDreamingStopped()>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.String[] getAccountTypesWithManagementDisabled()>
<com.android.systemui.bubbles.BubbleData.TimeSource: long currentTimeMillis()>
<com.android.systemui.statusbar.NotificationShelf: void onAttachedToWindow()>
<com.android.server.locksettings.recoverablekeystore.RecoverableKeyStoreManager: void lockScreenSecretAvailable(int,byte[],int)>
<com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem: int getPreferredAddress()>
<com.android.dynsystem.InstallationAsyncTask.InstallStatusListener: void onProgressUpdate(long)>
<com.android.systemui.statusbar.car.CarStatusBar: void start()>
<com.android.systemui.plugins.FalsingManager: void cleanup()>
<com.android.systemui.statusbar.BackDropView: void onVisibilityChanged(android.view.View,int)>
<com.android.systemui.qs.tiles.CellularTile: void handleSecondaryClick()>
<com.android.systemui.statusbar.NotificationRemoteInputManager.Callback: boolean handleRemoteViewClick(android.view.View,android.app.PendingIntent,com.android.systemui.statusbar.NotificationRemoteInputManager.ClickHandler)>
<com.android.settingslib.core.instrumentation.EventLogWriter: void action(android.content.Context,int,java.lang.String)>
<com.android.server.policy.WindowManagerPolicy.WindowState: int getOwningUid()>
<com.android.systemui.statusbar.HeadsUpStatusBarView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.view.ViewShowHidePerfTest: void testInvisibleToVisible()>
<com.android.systemui.recents.views.TaskViewTransform: void reset()>
<com.android.keyguard.KeyguardSecurityViewFlipper: void setKeyguardCallback(com.android.keyguard.KeyguardSecurityCallback)>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb: long setRecoveryServiceCertPath(int,int,java.lang.String,java.security.cert.CertPath)>
<com.android.server.audio.AudioService: boolean isBluetoothScoOn()>
<com.android.systemui.statusbar.phone.CollapsedStatusBarFragment: void onCreate(android.os.Bundle)>
<com.android.systemui.statusbar.StatusBarMobileView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.settingslib.widget.settingsspinner.SettingsSpinner: void <init>(android.content.Context,int)>
<com.android.settingslib.accounts.AuthenticatorHelper: boolean containsAccountType(java.lang.String)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onHeightChanged(com.android.systemui.statusbar.notification.row.ExpandableView,boolean)>
<com.android.server.NetworkManagementService: android.net.NetworkStats getNetworkStatsSummaryDev()>
<com.android.gallery3d.exif.Rational: java.lang.String toString()>
<com.android.printspooler.ui.PrintErrorFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.android.server.soundtrigger.SoundTriggerHelper: void onServiceStateChange(int)>
<com.android.systemui.statusbar.notification.row.NotificationGutsManager: void setUpWithPresenter(com.android.systemui.statusbar.NotificationPresenter,com.android.systemui.statusbar.notification.stack.NotificationListContainer,com.android.systemui.statusbar.notification.row.NotificationInfo.CheckSaveListener,com.android.systemui.statusbar.notification.row.NotificationGutsManager.OnSettingsClickListener)>
<com.android.settingslib.bluetooth.HidDeviceProfile: boolean isAutoConnectable()>
<com.android.server.storage.FileCollector.MeasurementResult: long totalAccountedSize()>
<com.android.server.LocationManagerService: java.lang.String[] getIgnoreSettingsWhitelist()>
<com.android.systemui.statusbar.policy.KeyguardMonitor: boolean isDeviceInteractive()>
<com.android.systemui.bubbles.animation.StackAnimationController: void implodeStack(java.lang.Runnable)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector longClickable(boolean)>
<com.android.server.pm.PackageManagerService: void restoreIntentFilterVerification(byte[],int)>
<com.android.settingslib.bluetooth.HearingAidProfile: int getSummaryResourceForDevice(android.bluetooth.BluetoothDevice)>
<com.android.systemui.doze.DozeMachine: void wakeUp()>
<com.android.systemui.statusbar.notification.row.NotificationInlineImageResolver.ImageCache: void purge()>
<com.android.server.soundtrigger.SoundTriggerLogger: void <init>(int,java.lang.String)>
<com.android.server.usb.descriptors.tree.UsbDescriptorsConfigNode: void <init>(com.android.server.usb.descriptors.UsbConfigDescriptor)>
<com.android.systemui.util.InjectionInflationController.ViewAttributeProvider: android.content.Context provideContext()>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.util.Set getAcceptedCaCertificates(android.os.UserHandle)>
<com.android.photos.BitmapRegionTileSource.UriBitmapSource: com.android.photos.SimpleBitmapRegionDecoder loadBitmapRegionDecoder()>
<com.android.localtransport.LocalTransport: android.app.backup.RestoreSet[] getAvailableRestoreSets()>
<com.android.server.biometrics.BiometricUserState: void renameBiometric(int,java.lang.CharSequence)>
<com.android.settingslib.bluetooth.PbapServerProfile: void setPreferred(android.bluetooth.BluetoothDevice,boolean)>
<com.android.server.pm.permission.PermissionManagerServiceInternal: com.android.server.pm.permission.DefaultPermissionGrantPolicy getDefaultPermissionGrantPolicy()>
<com.android.server.contentcapture.ContentCaptureManagerInternal: android.content.ContentCaptureOptions getOptionsForPackage(int,java.lang.String)>
<com.android.systemui.SlicePermissionActivity: void onClick(android.content.DialogInterface,int)>
<com.android.systemui.statusbar.phone.NotificationIconAreaController: void onDarkChanged(android.graphics.Rect,float,int)>
<com.android.systemui.qs.tiles.DndTile: boolean isCombinedIcon(android.content.Context)>
<com.android.systemui.doze.DozeScreenBrightness: void transitionTo(com.android.systemui.doze.DozeMachine.State,com.android.systemui.doze.DozeMachine.State)>
<com.android.server.NetworkManagementService: void shutdown()>
<com.android.systemui.classifier.Stroke: float getEndPointLength()>
<android.media.MediaPlayer2.DrmPreparationInfo.Builder: android.media.MediaPlayer2.DrmPreparationInfo build()>
<com.android.systemui.statusbar.phone.ObservableScrollView: void setTouchEnabled(boolean)>
<com.android.server.notification.NotificationManagerService: void simulatePackageDistractionBroadcast(int,java.lang.String[])>
<com.android.printspooler.ui.PageAdapter.PreviewArea: void setPadding(int,int,int,int)>
<com.android.systemui.statusbar.notification.row.NotificationSnooze: boolean handleCloseControls(boolean,boolean)>
<com.android.server.autofill.ui.PendingUi: android.os.IBinder getToken()>
<com.android.systemui.tuner.PowerNotificationControlsFragment: void onCreate(android.os.Bundle)>
<com.android.server.ConnectivityService: void notifyNetworkCallbacks(com.android.server.connectivity.NetworkAgentInfo,int)>
<com.android.server.pm.permission.BasePermission: android.content.pm.Signature[] getSourceSignatures()>
<com.android.systemui.statusbar.policy.ZenModeControllerImpl: void removeCallback(android.os.Handler.Callback)>
<com.android.server.policy.WindowManagerPolicy.WindowManagerFuncs: void onUserSwitched()>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: boolean hasJustLaunchedFullScreenIntent()>
<com.android.server.location.GnssLocationProvider: com.android.server.location.GnssMeasurementsProvider getGnssMeasurementsProvider()>
<com.android.systemui.assist.AssistManager: void onGestureCompletion(float)>
<com.android.systemui.statusbar.notification.row.NotificationGuts: void setActualHeight(int)>
<com.android.server.notification.NotificationManagerService: void playInCallNotification()>
<com.android.systemui.keyguard.KeyguardViewMediator: void onScreenTurnedOn()>
<com.android.server.pm.UserManagerService: void makeInitialized(int)>
<com.android.systemui.statusbar.GestureRecorder: void tag(java.lang.String,java.lang.String)>
<com.android.server.display.BrightnessMappingStrategy: float getAutoBrightnessAdjustment()>
<com.android.systemui.statusbar.notification.MessagingLayoutTransformState: boolean transformViewTo(com.android.systemui.statusbar.notification.TransformState,float)>
<com.android.systemui.statusbar.InflationTask: void abort()>
<com.android.systemui.bubbles.BubbleStackView: int getBubbleCount()>
<com.android.server.audio.AudioService: void setBluetoothScoOn(boolean)>
<com.android.server.autofill.ui.SaveUi.OnSaveListener: void onSave()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setKeyguardDisabledFeatures(android.content.ComponentName,int,boolean)>
<com.android.server.notification.NotificationIntrusivenessExtractor: void setZenHelper(com.android.server.notification.ZenModeHelper)>
<com.android.settingslib.utils.AsyncLoader: void onStopLoading()>
<com.android.media.tv.remoteprovider.TvRemoteProvider: void onInputBridgeConnected(android.os.IBinder)>
<com.android.systemui.statusbar.notification.row.NotificationGuts: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<com.android.settingslib.NetworkPolicyEditor: void write(android.net.NetworkPolicy[])>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: void addCallback(android.os.Handler.Callback)>
<com.android.server.biometrics.iris.IrisService: void updateActiveGroup(int,java.lang.String)>
<com.android.server.infra.SecureSettingsServiceNameResolver: void dumpShort(java.io.PrintWriter)>
<com.android.systemui.statusbar.policy.SmartReplyView: void addPreInflatedButtons(java.util.List)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void updateNavigationBarVisibility(boolean)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean getBluetoothContactSharingDisabled(android.content.ComponentName)>
<com.android.preload.ui.IUI: int getSelectedDataTableRow()>
<com.android.server.twilight.TwilightService: void <init>(android.content.Context)>
<com.android.systemui.plugins.GlobalActions.GlobalActionsManager: void shutdown()>
<com.android.server.usb.UsbMidiDevice: void dump(java.lang.String,com.android.internal.util.dump.DualDumpOutputStream,java.lang.String,long)>
<com.android.printservice.recommendation.plugin.hp.ServiceListener: void serviceResolved(android.net.nsd.NsdServiceInfo)>
<com.android.server.trust.TrustManagerService: void <init>(android.content.Context)>
<android.text.PrecomputedTextMemoryUsageTest: void testMemoryUsage_Latin_NoHyphenation()>
<com.android.systemui.stackdivider.WindowManagerProxy: void setResizeDimLayer(boolean,int,float)>
<com.android.server.slice.SlicePermissionManager: java.lang.String[] getAllPackagesGranted(java.lang.String)>
<com.android.server.accessibility.AccessibilityManagerService.UserState: java.util.Set getBindingServicesLocked()>
<com.android.printservice.recommendation.plugin.mdnsFilter.MDNSFilterPlugin: int getName()>
<com.android.settingslib.notification.EnableZenModeDialog: void bindGenericCountdown()>
<com.android.systemui.recents.views.SystemBarScrimViews: void onBusEvent(com.android.systemui.recents.events.ui.dragndrop.DragEndEvent)>
<com.android.systemui.statusbar.phone.LockscreenWallpaper.WallpaperDrawable: void setXfermode(android.graphics.Xfermode)>
<com.android.systemui.plugin.testoverlayplugin.CustomView: void onDetachedFromWindow()>
<com.android.settingslib.widget.AnimatedImageView: void setAnimating(boolean)>
<com.android.server.DeviceIdleController.Constants: void <init>(android.os.Handler,android.content.ContentResolver)>
<com.android.server.policy.RestartAction: boolean showDuringKeyguard()>
<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getProfileParent(int)>
<com.android.systemui.statusbar.phone.SettingsButton: void startContinuousSpin()>
<com.android.server.pm.permission.BasePermission: boolean isDocumenter()>
<com.android.settingslib.location.RecentLocationAccesses: void <init>(android.content.Context)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void hideBiometricDialog()>
<com.android.systemui.Prefs: long getLong(android.content.Context,java.lang.String,long)>
<com.android.systemui.keyguard.KeyguardViewMediator: void startKeyguardExitAnimation(long,long)>
<com.android.server.pm.permission.PermissionsState: com.android.server.pm.permission.PermissionsState.PermissionState getInstallPermissionState(java.lang.String)>
<com.android.systemui.statusbar.AlphaOptimizedButton: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.AutoTileManager: void <init>(android.content.Context,com.android.systemui.qs.AutoAddTracker,com.android.systemui.qs.QSTileHost,android.os.Handler,com.android.systemui.statusbar.policy.HotspotController,com.android.systemui.statusbar.policy.DataSaverController,com.android.systemui.statusbar.phone.ManagedProfileController,android.hardware.display.NightDisplayListener,com.android.systemui.statusbar.policy.CastController)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void <init>(android.content.Context,com.android.keyguard.ViewMediatorCallback,com.android.internal.widget.LockPatternUtils)>
<javax.obex.PrivateInputStream: void writeBytes(byte[],int)>
<android.net.util.SharedLog: void e(java.lang.String)>
<com.android.server.biometrics.BiometricServiceBase: void handleEnumerate(android.hardware.biometrics.BiometricAuthenticator.Identifier,int)>
<com.android.server.notification.ZenModeHelper: android.app.Notification createZenUpgradeNotification()>
<com.android.server.pm.PackageManagerService: void setApplicationCategoryHint(java.lang.String,int,java.lang.String)>
<android.database.TableHelper: android.database.TableHelper.CursorReader createReader(android.database.Cursor)>
<javax.microedition.khronos.opengles.GL10: void glStencilFunc(int,int,int)>
<com.android.systemui.qs.tiles.UserTile: java.lang.CharSequence getTileLabel()>
<com.android.settingslib.core.instrumentation.SharedPreferencesLogger.EditorLogger: void apply()>
<com.android.systemui.shared.system.TransactionCompat: com.android.systemui.shared.system.TransactionCompat setSize(com.android.systemui.shared.system.SurfaceControlCompat,int,int)>
<com.android.settingslib.bluetooth.BluetoothDeviceFilter.Filter: boolean matches(android.bluetooth.BluetoothDevice)>
<com.android.systemui.qs.touch.SwipeDetector: boolean isIdleState()>
<com.android.server.notification.ConditionProviders: android.service.notification.IConditionProvider findConditionProvider(android.content.ComponentName)>
<com.android.server.pm.PackageInstallerSession: void write(java.lang.String,long,long,android.os.ParcelFileDescriptor)>
<com.android.keyguard.KeyguardSliceView: void setupUri(java.lang.String)>
<com.android.systemui.statusbar.phone.NavigationBarView: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)>
<com.android.systemui.DependencyProvider: android.os.Handler provideMainHandler()>
<com.android.systemui.statusbar.notification.collection.NotificationRowBinderImpl: void setNotificationClicker(com.android.systemui.statusbar.notification.NotificationClicker)>
<com.android.keyguard.KeyguardSecurityContainer.SecurityCallback: void userActivity()>
<com.android.settingslib.volume.Util: java.lang.String volumeProviderControlToString(int)>
<com.android.systemui.statusbar.phone.StatusBar: void keyguardGoingAway()>
<com.android.systemui.statusbar.phone.PanelView: float getCurrentExpandVelocity()>
<com.android.systemui.statusbar.AlphaOptimizedTextView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.settingslib.net.ChartDataLoader: android.os.Bundle buildArgs(android.net.NetworkTemplate,com.android.settingslib.AppItem,int)>
<com.android.settingslib.media.MediaManager: void startScan()>
<com.android.systemui.keyguard.KeyguardSliceProvider: com.android.systemui.keyguard.KeyguardSliceProvider getAttachedInstance()>
<com.android.server.media.MediaSessionService: void onStartUser(int)>
<com.android.systemui.recents.views.TaskViewThumbnail: void onTaskViewSizeChanged(int,int)>
<com.android.server.statusbar.StatusBarManagerInternal: void setCurrentUser(int)>
<com.android.systemui.DependencyProvider: com.android.systemui.shared.system.PackageManagerWrapper providePackageManagerWrapper()>
<com.android.server.autofill.ui.AutoFillUI.AutoFillUiCallback: void cancelSave()>
<com.android.server.accounts.AccountManagerService: void setPassword(android.accounts.Account,java.lang.String)>
<com.android.systemui.statusbar.policy.SecurityControllerImpl: boolean isNetworkLoggingEnabled()>
<com.android.systemui.statusbar.notification.stack.NotificationListContainer: void bindRow(com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: void setBar(com.android.systemui.statusbar.phone.StatusBar)>
<com.android.server.pm.permission.PermissionManagerServiceInternal: java.util.List getWhitelistedRestrictedPermissions(android.content.pm.PackageParser.Package,int,int)>
<com.android.systemui.Somnambulator: void onStart()>
<com.android.systemui.statusbar.policy.KeyguardMonitorImpl: void setLaunchTransitionFadingAway(boolean)>
<com.android.server.notification.RankingConfig: void setImportance(java.lang.String,int,int)>
<com.android.systemui.qs.external.TileServices: void onStartActivity(android.os.IBinder)>
<android.media.FileDataSourceDesc: long getOffset()>
<com.android.systemui.statusbar.policy.KeyguardMonitorImpl: boolean isOccluded()>
<com.android.server.media.MediaSessionRecord: void <init>(int,int,int,java.lang.String,android.media.session.ISessionCallback,java.lang.String,android.os.Bundle,com.android.server.media.MediaSessionService,android.os.Looper)>
<com.android.server.location.RemoteListenerHelper: boolean isAvailableInPlatform()>
<com.android.systemui.recents.events.ui.ShowApplicationInfoEvent: void <init>(com.android.systemui.shared.recents.model.Task)>
<com.android.server.incident.IncidentCompanionService: int getAndValidateUser(android.content.Context)>
<com.android.systemui.qs.tileimpl.QSTileView: int getDetailY()>
<com.android.settingslib.NetworkPolicyEditor: int getPolicyCycleDay(android.net.NetworkTemplate)>
<com.android.server.pm.PackageDexOptimizer.ForcedUpdatePackageDexOptimizer: void <init>(com.android.server.pm.Installer,java.lang.Object,android.content.Context,java.lang.String)>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage: void remove(int)>
<com.android.server.location.MockProvider: void setEnabled(boolean)>
<com.android.systemui.statusbar.phone.NotificationIconContainer: int getNoOverflowExtraPadding()>
<com.android.server.display.WifiDisplayController.Listener: void onScanFinished()>
<com.android.keyguard.KeyguardPasswordView: boolean startDisappearAnimation(java.lang.Runnable)>
<com.android.systemui.statusbar.policy.UserSwitcherController: void setResumeUserOnGuestLogout(boolean)>
<com.android.systemui.recents.views.RecentsView: void dump(java.lang.String,java.io.PrintWriter)>
<com.android.systemui.statusbar.phone.ReverseLinearLayout.ReverseRelativeLayout: void <init>(android.content.Context)>
<com.android.systemui.statusbar.policy.MobileSignalController: void setUserSetupComplete(boolean)>
<com.android.settingslib.suggestions.SuggestionControllerMixin.SuggestionControllerHost: android.app.LoaderManager getLoaderManager()>
<com.android.server.notification.PreferencesHelper: boolean areBubblesAllowed(java.lang.String,int)>
<com.android.server.location.LocationBasedCountryDetector: boolean isAcceptableProvider(java.lang.String)>
<com.android.systemui.recents.RecentsActivity: void onBusEvent(com.android.systemui.recents.events.activity.EnterRecentsWindowLastAnimationFrameEvent)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: int getNotGoneChildCount()>
<com.android.server.biometrics.BiometricServiceBase: void cancelEnrollmentInternal(android.os.IBinder)>
<com.android.server.accounts.AccountManagerBackupHelper: void restoreAccountAccessPermissions(byte[],int)>
<com.android.systemui.media.NotificationPlayer: boolean onError(android.media.MediaPlayer,int,int)>
<com.android.systemui.qs.touch.SwipeDetector: void finishedScrolling()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void goToFullShade(long)>
<com.android.server.notification.RankingReconsideration: void <init>(java.lang.String)>
<com.android.systemui.statusbar.KeyguardIndicationController.BaseKeyguardCallback: void onBiometricAuthenticated(int,android.hardware.biometrics.BiometricSourceType)>
<com.android.powermodel.component.ModemProfile.Builder: void setIdleMa(float)>
<com.android.settingslib.bluetooth.HearingAidProfile: int getDeviceMode(android.bluetooth.BluetoothDevice)>
<com.android.preload.classdataretrieval.jdwp.JDWPClassDataRetriever: org.apache.harmony.jpda.tests.jdwp.share.JDWPUnitDebuggeeWrapper createDebuggeeWrapper()>
<com.android.systemui.statusbar.phone.LockIcon: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.preload.DeviceUtils: void enableTracing(com.android.ddmlib.IDevice)>
<com.android.systemui.statusbar.phone.ExpandableIndicator: void onFinishInflate()>
<com.android.systemui.statusbar.policy.ZenModeControllerImpl: void updateZenModeConfig()>
<com.android.systemui.assist.AssistDisclosure: void <init>(android.content.Context,android.os.Handler)>
<com.android.server.media.MediaSessionRecord: android.media.session.MediaSession.Token getSessionToken()>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void setPulsing(boolean)>
<com.android.systemui.statusbar.phone.NavigationBarEdgePanel: void setShowProtection(boolean)>
<com.android.server.notification.EventConditionProvider: void onBootComplete()>
<com.android.systemui.statusbar.car.CarStatusBarKeyguardViewManager: void <init>(android.content.Context,com.android.keyguard.ViewMediatorCallback,com.android.internal.widget.LockPatternUtils)>
<com.android.systemui.bubbles.animation.PhysicsAnimationLayout.PhysicsAnimationController.ChildAnimationConfigurator: void configureAnimationForChildAtIndex(int,com.android.systemui.bubbles.animation.PhysicsAnimationLayout.PhysicsPropertyAnimator)>
<com.android.systemui.recents.views.RecentsViewTouchHandler: void onBusEvent(com.android.systemui.recents.events.activity.ConfigurationChangedEvent)>
<com.android.systemui.pip.phone.PipDismissViewController: boolean updateTarget(android.view.View)>
<com.android.server.content.ContentService: void requestSync(android.accounts.Account,java.lang.String,android.os.Bundle,java.lang.String)>
<com.android.systemui.plugins.VolumeDialogController: void setActiveStream(int)>
<com.android.server.policy.WindowManagerPolicy: void setAllowLockscreenWhenOn(int,boolean)>
<com.android.systemui.statusbar.notification.stack.AmbientState: void reload(android.content.Context)>
<javax.microedition.khronos.opengles.GL11: void glGetTexEnvxv(int,int,java.nio.IntBuffer)>
<com.android.systemui.util.InjectionInflationController.ViewInstanceCreator: com.android.systemui.qs.QSPanel createQSPanel()>
<com.android.systemui.statusbar.phone.BiometricUnlockController: void startKeyguardFadingAway()>
<com.android.printspooler.ui.PrintActivity: void onPause()>
<com.android.server.pm.PackageManagerService.IntentFilterVerifier: void startVerifications(int)>
<com.android.systemui.DejankUtils: void setImmediate(boolean)>
<com.android.systemui.statusbar.notification.stack.AmbientState: int getInnerHeight(boolean)>
<com.android.systemui.shared.system.SystemGestureExclusionListenerCompat: void onExclusionChanged(android.graphics.Region)>
<android.net.NetworkStackClient: void makeDhcpServer(java.lang.String,android.net.dhcp.DhcpServingParamsParcel,android.net.dhcp.IDhcpServerCallbacks)>
<com.android.server.policy.WindowManagerPolicy: android.view.animation.Animation createHiddenByKeyguardExit(boolean,boolean)>
<com.android.systemui.statusbar.notification.row.NotificationUndoLayout: void onFinishInflate()>
<com.android.keyguard.KeyguardUpdateMonitor: void onFingerprintAuthenticated(int)>
<com.android.server.pm.CrossProfileAppsServiceImpl.Injector: android.content.pm.PackageManagerInternal getPackageManagerInternal()>
<android.multiuser.BenchmarkResults: java.util.ArrayList getAllDurations()>
<com.android.systemui.recents.views.FixedSizeFrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.settingslib.media.BluetoothMediaManager: void startScan()>
<com.android.settingslib.media.MediaManager: void registerCallback(com.android.settingslib.media.MediaManager.MediaDeviceCallback)>
<com.android.systemui.recents.views.TaskStackView: com.android.systemui.shared.recents.model.Task getFocusedTask()>
<com.android.systemui.shortcut.ShortcutKeyServiceProxy: void <init>(com.android.systemui.shortcut.ShortcutKeyServiceProxy.Callbacks)>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean shouldUseDismissingAnimation()>
<com.android.server.tv.TvRemoteService: void <init>(android.content.Context)>
<com.android.keyguard.AlphaOptimizedRelativeLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.media.MediaSessionRecord: boolean isSystemPriority()>
<com.android.systemui.qs.customize.TileAdapter.Holder: void <init>(android.view.View)>
<com.android.systemui.bubbles.animation.PhysicsAnimationLayout.PhysicsPropertyAnimator: com.android.systemui.bubbles.animation.PhysicsAnimationLayout.PhysicsPropertyAnimator position(float,float,java.lang.Runnable[])>
<com.android.systemui.pip.tv.PipManager: void addMediaListener(com.android.systemui.pip.tv.PipManager.MediaListener)>
<com.android.systemui.recents.views.TaskStackView: void dump(java.lang.String,java.io.PrintWriter)>
<com.android.server.pm.UserRestrictionsUtils: java.util.Set getDefaultEnabledForDeviceOwner()>
<com.android.systemui.statusbar.notification.collection.NotificationRowBinderImpl: void onNotificationRankingUpdated(com.android.systemui.statusbar.notification.collection.NotificationEntry,java.lang.Integer,com.android.systemui.statusbar.NotificationUiAdjustment,com.android.systemui.statusbar.NotificationUiAdjustment)>
<com.android.printservice.recommendation.util.Preconditions: long checkArgumentInRange(long,long,long,java.lang.String)>
<com.android.systemui.statusbar.phone.PanelView: void setExpandedHeight(float)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: int getIntrinsicPadding()>
<com.android.systemui.plugins.qs.QSTile.BooleanState: boolean copyTo(com.android.systemui.plugins.qs.QSTile.State)>
<com.android.server.pm.UserManagerService.LifeCycle: void onStopUser(int)>
<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: void resetMenu()>
<com.android.systemui.classifier.FalsingManagerImpl: void onNotificatonStartDismissing()>
<com.android.systemui.DependencyBinder: com.android.systemui.plugins.FalsingManager provideFalsingmanager(com.android.systemui.classifier.FalsingManagerProxy)>
<com.android.server.hdmi.ArcTerminationActionFromAvr: void sendTerminateArc()>
<com.android.systemui.statusbar.AmbientPulseManager: void onAlertEntryRemoved(com.android.systemui.statusbar.AlertingNotificationManager.AlertEntry)>
<com.android.server.audio.AudioService: boolean hasRegisteredDynamicPolicy()>
<com.android.settingslib.net.SummaryForAllUidLoader: android.net.NetworkStats loadInBackground()>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void doKeyguardTimeout(android.os.Bundle)>
<com.android.systemui.recents.RecentsImplProxy: void onDraggingInRecentsEnded(float)>
<com.android.settingslib.bluetooth.HidProfile: boolean isProfileReady()>
<com.android.settingslib.inputmethod.InputMethodAndSubtypeUtilCompat: java.util.HashMap parseInputMethodsAndSubtypesString(java.lang.String)>
<com.android.server.DropBoxManagerService: void onBootPhase(int)>
<com.android.settingslib.development.AbstractEnableAdbPreferenceController: void displayPreference(androidx.preference.PreferenceScreen)>
<com.android.server.pm.Installer: void restoreconAppData(java.lang.String,java.lang.String,int,int,int,java.lang.String)>
<com.android.hotspot2.osu.OsuLoginActivity: void onCreate(android.os.Bundle)>
<com.android.settingslib.accounts.AuthenticatorHelper: void updateAuthDescriptions(android.content.Context)>
<com.android.settingslib.search.SearchIndexableResourcesBase: java.util.Collection getProviderValues()>
<com.android.server.om.DumpState: java.lang.String getField()>
<com.android.systemui.classifier.FalsingManagerImpl: void onExpansionFromPulseStopped()>
<com.android.systemui.statusbar.HeadsUpStatusBarView: void setPublicMode(boolean)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void onPanelTrackingStopped()>
<android.processor.unsupportedappusage.UnsupportedAppUsageProcessor: boolean process(java.util.Set,javax.annotation.processing.RoundEnvironment)>
<com.android.server.inputmethod.InputMethodManagerService.Lifecycle: void <init>(android.content.Context)>
<com.android.server.pm.PackageManagerService: int getPreferredActivities(java.util.List,java.util.List,java.lang.String)>
<com.android.server.ZramWriteback: void scheduleZramWriteback(android.content.Context)>
<com.android.systemui.qs.TileLayout: void onLayout(boolean,int,int,int,int)>
<com.android.server.policy.BurnInProtectionHelper: void startBurnInProtection()>
<com.android.server.biometrics.AuthenticationClient: void onStart()>
<com.android.systemui.statusbar.StatusBarIconView: void setNotification(android.service.notification.StatusBarNotification)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void onViewRemoved(android.view.View)>
<com.android.systemui.statusbar.phone.LightBarTransitionsController: void appTransitionStarting(int,long,long,boolean)>
<com.android.systemui.statusbar.notification.row.NotificationContentInflater: void clearCachesAndReInflate()>
<com.android.server.appprediction.RemoteAppPredictionService: void requestPredictionUpdate(android.app.prediction.AppPredictionSessionId)>
<android.net.netlink.StructNlMsgErr: boolean hasAvailableSpace(java.nio.ByteBuffer)>
<com.android.server.signedconfig.SignedConfig: com.android.server.signedconfig.SignedConfig.PerSdkConfig getMatchingConfig(int)>
<com.android.systemui.recents.TriangleShape: void <init>(android.graphics.Path,float,float)>
<android.net.ip.IpClientCallbacks: void onReachabilityLost(java.lang.String)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean hasUserSetupCompleted()>
<com.android.keyguard.AlphaOptimizedLinearLayout: boolean hasOverlappingRendering()>
<com.android.systemui.statusbar.policy.KeyguardMonitor: void notifyKeyguardState(boolean,boolean,boolean)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void onLayout(boolean,int,int,int,int)>
<com.android.settingslib.volume.MediaSessions: void dump(java.io.PrintWriter)>
<android.media.MediaPlayer2: void finalize()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean updateOverrideApn(android.content.ComponentName,int,android.telephony.data.ApnSetting)>
<com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer: android.view.NotificationHeaderView getHeaderView()>
<com.android.systemui.SwipeHelper.Callback: float getFalsingThresholdFactor()>
<com.android.server.soundtrigger.SoundTriggerService.LocalSoundTriggerService: int unloadKeyphraseModel(int)>
<com.android.systemui.tuner.LockscreenFragment.LockButtonFactory: com.android.systemui.plugins.IntentButtonProvider.IntentButton create(java.util.Map)>
<com.android.keyguard.EmergencyCarrierArea: void <init>(android.content.Context)>
<com.android.settingslib.wifi.WifiTracker: void <init>(android.content.Context,com.android.settingslib.wifi.WifiTracker.WifiListener,com.android.settingslib.core.lifecycle.Lifecycle,boolean,boolean)>
<com.android.systemui.plugins.VolumeDialogController.Callbacks: void onConfigurationChanged()>
<com.android.server.SystemServiceManager: long getRuntimeStartUptime()>
<com.android.systemui.qs.QSFooterImpl: void setExpansion(float)>
<com.android.server.notification.NotificationChannelExtractor: void setConfig(com.android.server.notification.RankingConfig)>
<com.android.systemui.statusbar.phone.StatusBar: void onRecentsAnimationStateChanged(boolean)>
<android.text.StaticLayoutPerfTest: void testDraw_PrecomputedText_NoStyled_WithoutCache()>
<com.android.settingslib.display.BrightnessUtils: int convertLinearToGamma(int,int,int)>
<com.android.systemui.statusbar.NotificationRemoteInputManager.Callback: void onMakeExpandedVisibleForRemoteInput(com.android.systemui.statusbar.notification.row.ExpandableNotificationRow,android.view.View)>
<com.android.gallery3d.glrenderer.GLES20Canvas: boolean unloadTexture(com.android.gallery3d.glrenderer.BasicTexture)>
<com.android.server.NetworkManagementService: void clearInterfaceAddresses(java.lang.String)>
<com.android.settingslib.bluetooth.HidDeviceProfile: void finalize()>
<com.android.server.content.SyncStorageEngine: long calculateDefaultFlexTime(long)>
<com.android.systemui.statusbar.phone.StatusBar: void handleVisibleToUserChanged(boolean)>
<android.view.autofill.LoginTest: void testCallbacks()>
<com.android.printspooler.widget.PrintOptionsLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.gallery3d.glrenderer.UploadedTexture: void setOpaque(boolean)>
<com.android.systemui.pip.tv.PipControlButtonView: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.ShadeController: void instantExpandNotificationsPanel()>
<com.android.systemui.statusbar.notification.stack.AmbientState: boolean isPanelFullWidth()>
<com.android.server.pm.PackageManagerService.BlobXmlRestorer: void apply(org.xmlpull.v1.XmlPullParser,int)>
<android.media.MediaPlayer2: java.lang.Object setScreenOnWhilePlaying(boolean)>
<com.android.systemui.statusbar.policy.HotspotController: boolean isHotspotSupported()>
<com.android.printservice.recommendation.util.MDNSFilteredDiscovery: void start(com.android.printservice.recommendation.PrintServicePlugin.PrinterDiscoveryCallback)>
<com.android.systemui.statusbar.policy.UserSwitcherController: void showAddUserDialog()>
<com.android.settingslib.RestrictedPreference: void <init>(android.content.Context)>
<com.android.printspooler.model.PageContentRepository: void stopPreload()>
<android.net.netlink.StructNlMsgHdr: boolean hasAvailableSpace(java.nio.ByteBuffer)>
<com.android.settingslib.bluetooth.HearingAidProfile: boolean setActiveDevice(android.bluetooth.BluetoothDevice)>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: void setMenuAlpha(float)>
<com.android.server.location.GnssPositionModeTest: void checkIfEqualsImpliesSameHashCode()>
<com.android.server.notification.CountdownConditionProvider: void onSubscribe(android.net.Uri)>
<com.android.systemui.bubbles.BadgedImageView: void setDotPosition(boolean)>
<com.android.systemui.statusbar.phone.StatusBar: void addAfterKeyguardGoneRunnable(java.lang.Runnable)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onSetBackground(android.graphics.Bitmap)>
<com.android.uiautomator.core.Configurator: com.android.uiautomator.core.Configurator getInstance()>
<com.android.server.accounts.AccountManagerService: void unregisterAccountListener(java.lang.String[],java.lang.String)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean onRequestSendAccessibilityEventInternal(android.view.View,android.view.accessibility.AccessibilityEvent)>
<com.android.server.policy.WindowManagerPolicy.RotationSource: void setCurrentRotation(int)>
<com.android.wallpapercropper.WallpaperCropActivity.BitmapCropTask: void <init>(android.content.Context,android.content.res.Resources,int,android.graphics.RectF,int,int,int,boolean,boolean,java.lang.Runnable)>
<com.android.server.infra.AbstractPerUserSystemService: android.graphics.drawable.Drawable getServiceIconLocked()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void performDismiss(boolean)>
<com.android.powermodel.AppActivity: com.google.common.collect.ImmutableSet getComponents()>
<com.android.statsd.loadtest.NumericalWatcher: void <init>(android.widget.TextView,int,int)>
<com.android.server.notification.NotificationManagerService: void onBootPhase(int)>
<com.android.server.autofill.ui.PendingUi: java.lang.String toString()>
<com.android.location.provider.LocationRequestUnbundled: long getFastestInterval()>
<com.android.systemui.GuestResumeSessionReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.android.server.location.LocationRequestStatistics: void updateForeground(java.lang.String,java.lang.String,boolean)>
<com.android.server.devicepolicy.DevicePolicyManagerService.Lifecycle: void onStart()>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void onFinishedWakingUp()>
<com.android.keyguard.clock.AnalogClockController: java.lang.String getTitle()>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper.Callback: void onSwipingStarted(boolean)>
<com.android.wallpapercropper.WallpaperCropActivity: boolean enableRotation()>
<com.android.systemui.volume.VolumeDialogControllerImpl: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.statusbar.policy.SecurityControllerImpl: java.lang.String getPrimaryVpnName()>
<com.android.systemui.globalactions.ListGridLayout: void setSwapRowsAndColumns(boolean)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean setStatusBarDisabled(android.content.ComponentName,boolean)>
<com.android.systemui.statusbar.NotificationShelf: void fadeInTranslating()>
<com.android.systemui.statusbar.car.CarFacetButton: void setupIntents(android.content.res.TypedArray)>
<com.android.systemui.PluginInflateContainer: void onAttachedToWindow()>
<com.android.systemui.statusbar.phone.PanelView: void setOverExpansion(float,boolean)>
<com.android.systemui.statusbar.NotificationUpdateHandler: void removeNotification(java.lang.String,android.service.notification.NotificationListenerService.RankingMap,int)>
<com.android.server.display.BrightnessMappingStrategy: float normalizeAbsoluteBrightness(int)>
<com.android.systemui.statusbar.phone.ButtonDispatcher: void setAlpha(float)>
<com.android.server.utils.AppInstallerUtil: java.lang.String getInstallerPackageName(android.content.Context,java.lang.String)>
<com.android.systemui.SwipeHelper: android.animation.ObjectAnimator createTranslationAnimation(android.view.View,float)>
<com.android.server.slice.SliceClientPermissions: boolean hasFullAccess()>
<com.android.systemui.util.AsyncSensorManager: java.util.List getFullSensorList()>
<com.android.systemui.statusbar.phone.ReverseLinearLayout.ReverseRelativeLayout: void setDefaultGravity(int)>
<com.android.systemui.recents.views.SystemBarScrimViews: void onBusEvent(com.android.systemui.recents.events.activity.DismissRecentsToHomeAnimationStarted)>
<android.media.Session2Link: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.classifier.ClassifierData: boolean update(android.view.MotionEvent)>
<com.android.systemui.bubbles.animation.PhysicsAnimationLayout.PhysicsPropertyAnimator: com.android.systemui.bubbles.animation.PhysicsAnimationLayout.PhysicsPropertyAnimator scaleX(float,float,java.lang.Runnable[])>
<com.android.externalstorage.ExternalStorageProvider: int enforceReadPermissionInner(android.net.Uri,java.lang.String,android.os.IBinder)>
<com.android.server.biometrics.face.FaceConstants: java.lang.String tagAuthStartError()>
<com.android.systemui.statusbar.policy.CastController.Callback: void onCastDevicesChanged()>
<com.android.packageinstaller.handheld.UninstallAlertDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
<com.android.systemui.ExpandHelper.Callback: void setUserLockedChild(android.view.View,boolean)>
<com.android.server.pm.PackageManagerService: java.lang.String getInstallerPackageName(java.lang.String)>
<com.android.systemui.SystemUIFactory: com.android.systemui.statusbar.notification.NotificationEntryManager provideNotificationEntryManager(android.content.Context)>
<com.android.systemui.statusbar.notification.row.ButtonLinearLayout: java.lang.CharSequence getAccessibilityClassName()>
<com.android.server.hdmi.SelectRequestBuffer: com.android.server.hdmi.SelectRequestBuffer.PortSelectRequest newPortSelect(com.android.server.hdmi.HdmiControlService,int,android.hardware.hdmi.IHdmiControlCallback)>
<com.android.uiautomator.testrunner.UiAutomatorTestRunner: void prepareTestCase(junit.framework.TestCase)>
<com.android.systemui.statusbar.AlertingNotificationManager: void removeAlertEntry(java.lang.String)>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: boolean isMenuSnappedOnLeft()>
<com.android.server.ConnectivityService: java.lang.String[] getTetherableIfaces()>
<com.android.systemui.statusbar.StatusBarMobileView: void <init>(android.content.Context)>
<com.android.systemui.plugins.VolumeDialogController.State: java.lang.String toString(int)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: void removeRow()>
<com.android.server.slice.SlicePermissionManager: void grantFullAccess(java.lang.String,int)>
<com.android.settingslib.media.BluetoothMediaDevice: boolean connect()>
<com.android.systemui.assist.AssistManager.UiController: void onGestureCompletion(float)>
<com.android.systemui.statusbar.car.CarBatteryController: void <init>(android.content.Context)>
<com.android.settingslib.CustomEditTextPreferenceCompat: android.widget.EditText getEditText()>
<com.android.server.ConnectivityService: int getConnectionOwnerUid(android.net.ConnectionInfo)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: boolean performAccessibilityActionInternal(int,android.os.Bundle)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void runAfterAnimationFinished(java.lang.Runnable)>
<com.android.server.appop.AppOpsService: void publish(android.content.Context)>
<com.android.server.SerialService: void <init>(android.content.Context)>
<com.android.server.content.SyncJobService: boolean onStopJob(android.app.job.JobParameters)>
<com.android.systemui.qs.tileimpl.QSTileImpl: void setDetailListening(boolean)>
<com.android.server.appop.AppOpsService: int checkOperationRaw(int,int,java.lang.String)>
<com.android.server.notification.PreferencesHelper: void setAppImportanceLocked(java.lang.String,int)>
<com.android.settingslib.applications.StorageStatsSource.AppStorageStatsImpl: long getCacheBytes()>
<com.android.keyguard.KeyguardSecurityViewFlipper: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.systemui.appops.AppOpsControllerImpl: void <init>(android.content.Context,android.os.Looper)>
<com.android.systemui.qs.tiles.WifiTile: java.lang.CharSequence getTileLabel()>
<com.android.server.input.InputManagerService.WiredAccessoryCallbacks: void notifyWiredAccessoryChanged(long,int,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getPasswordComplexity()>
<javax.microedition.khronos.opengles.GL10: void glTranslatex(int,int,int)>
<com.android.server.infra.AbstractMasterSystemService: void resetTemporaryService(int)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void setIsLowPriority(boolean)>
<com.android.systemui.statusbar.phone.PanelView: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.systemui.qs.tiles.UiModeNightTile: int getMetricsCategory()>
<com.android.systemui.ForegroundServiceController: java.lang.String getStandardLayoutKey(int,java.lang.String)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void removeTrackingHeadsUpListener(java.util.function.Consumer)>
<com.android.systemui.statusbar.NotificationShelf: void onStateChanged(int)>
<com.android.server.locksettings.recoverablekeystore.RecoverableKeyStoreManager: java.lang.String generateKey(java.lang.String)>
<com.android.systemui.recents.RecentsActivity: void onPause()>
<com.android.server.usb.descriptors.Usb20ACOutputTerminal: void report(com.android.server.usb.descriptors.report.ReportCanvas)>
<com.android.server.pm.permission.PermissionsState: int getPermissionFlags(java.lang.String,int)>
<com.android.systemui.statusbar.phone.LockscreenWallpaper: com.android.systemui.statusbar.phone.LockscreenWallpaper.LoaderResult loadBitmap(int,android.os.UserHandle)>
<javax.obex.ClientOperation: void ensureOpen()>
<com.android.systemui.statusbar.phone.StatusBarIconController: void removeIcon(java.lang.String,int)>
<com.android.server.location.GnssMeasurementsProviderTest: void unregister_nativeStopped()>
<com.android.keyguard.KeyguardPatternView: void showPromptReason(int)>
<com.android.server.SystemServiceManager: void startBootPhase(int)>
<com.android.systemui.pip.tv.PipManager.Listener: void onMoveToFullscreen()>
<com.android.server.notification.NotificationUsageStats.SingleNotificationStats: java.lang.String toString()>
<com.android.settingslib.widget.ActionButtonsPreference: com.android.settingslib.widget.ActionButtonsPreference setButton4Text(int)>
<com.android.server.biometrics.BiometricUtils: void renameBiometricForUser(android.content.Context,int,int,java.lang.CharSequence)>
<com.android.server.pm.ShortcutService: byte[] getBackupPayload(int)>
<com.android.server.attention.AttentionManagerService: boolean isServiceEnabled()>
<com.android.systemui.statusbar.notification.logging.NotificationLogger: void onExpansionChanged(java.lang.String,boolean,boolean)>
<com.android.printspooler.widget.PrintContentView: void onMeasure(int,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean resetPassword(java.lang.String,int)>
<com.android.keyguard.KeyguardUpdateMonitor: void onTrustChanged(boolean,int,int)>
<com.android.server.policy.PhoneWindowManager: void startKeyguardExitAnimation(long,long)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void clearCrossProfileIntentFilters(android.content.ComponentName)>
<com.android.server.location.GnssStatusListenerHelper: void onStatusChanged(boolean)>
<android.net.ipmemorystore.OnSameL3NetworkResponseListener: android.net.ipmemorystore.IOnSameL3NetworkResponseListener toAIDL(android.net.ipmemorystore.OnSameL3NetworkResponseListener)>
<com.android.gallery3d.exif.ExifTag: boolean setValue(int[])>
<com.android.systemui.qs.tileimpl.QSTileImpl: com.android.systemui.qs.QSHost getHost()>
<com.android.settingslib.bluetooth.LocalBluetoothProfileManager.ServiceListener: void onServiceConnected()>
<android.view.autofill.LoginTest: void testChange_autofillUsernameOnly()>
<com.android.systemui.statusbar.car.ConnectedDeviceSignalController: void stopListening()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow.LayoutListener: void onLayout()>
<com.android.systemui.statusbar.phone.StatusBarNotificationPresenter: void onNotificationRemoved(java.lang.String,android.service.notification.StatusBarNotification)>
<android.text.StaticLayoutCreateDrawPerfTest: java.util.Collection cases()>
<com.android.powermodel.component.ModemProfile: float getIdleMa()>
<com.android.systemui.shared.system.TaskStackChangeListeners: void onSizeCompatModeActivityChanged(int,android.os.IBinder)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setFooterView(com.android.systemui.statusbar.notification.row.FooterView)>
<com.android.systemui.statusbar.notification.row.NotificationInfo: boolean willBeRemoved()>
<com.android.systemui.biometrics.BiometricDialogImpl: void onBiometricHelp(java.lang.String)>
<com.android.server.vr.VrManagerInternal: void setVrMode(boolean,android.content.ComponentName,int,int,android.content.ComponentName)>
<com.android.server.notification.PreferencesHelper: void writeXml(org.xmlpull.v1.XmlSerializer,boolean,int)>
<com.android.server.biometrics.BiometricServiceBase: int getUserOrWorkProfileId(java.lang.String,int)>
<com.android.server.DropBoxManagerService: com.android.internal.os.IDropBoxManagerService getServiceStub()>
<com.android.systemui.plugins.FragmentBase: android.view.View getView()>
<com.android.systemui.qs.SlashDrawable: void setAnimationEnabled(boolean)>
<com.android.settingslib.widget.BarChartInfo.Builder: com.android.settingslib.widget.BarChartInfo build()>
<com.android.server.twilight.TwilightState: java.lang.String toString()>
<com.android.server.media.MediaSessionRecord: void binderDied()>
<com.android.systemui.recents.RecentsImpl: void onDraggingInRecents(float)>
<com.android.settingslib.suggestions.SuggestionControllerMixinCompat: void dismissSuggestion(android.service.settings.suggestions.Suggestion)>
<com.android.systemui.recents.views.AnimateableViewBounds: void setAlpha(float)>
<com.android.server.biometrics.face.FaceService: com.android.server.biometrics.BiometricUtils getBiometricUtils()>
<com.android.systemui.statusbar.notification.stack.ViewState: void animateTo(android.view.View,com.android.systemui.statusbar.notification.stack.AnimationProperties)>
<com.android.server.notification.NotificationRecord: void recordExpanded()>
<com.android.server.pm.PackageManagerService: void setPackageStoppedState(java.lang.String,boolean,int)>
<com.android.systemui.doze.DozeMachine: boolean isExecutingTransition()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: boolean isInContentBounds(float)>
<com.android.keyguard.KeyguardPasswordView: void <init>(android.content.Context)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glRenderbufferStorageOES(int,int,int,int)>
<com.android.systemui.stackdivider.ForcedResizableInfoActivity: void onStart()>
<android.net.INetworkStackConnector: void makeNetworkMonitor(android.net.Network,java.lang.String,android.net.INetworkMonitorCallbacks)>
<com.android.systemui.statusbar.phone.PanelView: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.usb.descriptors.UsbACMixerUnit: byte[] getInputIDs()>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: boolean enable()>
<com.android.server.NativeDaemonEvent: int getCode()>
<com.android.settingslib.notification.EnableZenModeDialog: long getNextAlarm()>
<android.net.netlink.StructInetDiagReqV2: void <init>(int,java.net.InetSocketAddress,java.net.InetSocketAddress,int)>
<android.media.Session2Link: void linkToDeath(android.os.IBinder.DeathRecipient,int)>
<javax.microedition.khronos.opengles.GL10: void glFogx(int,int)>
<com.android.systemui.statusbar.policy.ExtensionController.Extension: android.content.Context getContext()>
<com.android.systemui.util.LifecycleFragment: androidx.lifecycle.Lifecycle getLifecycle()>
<com.android.gallery3d.exif.ExifTag: java.lang.String getValueAsString()>
<com.android.systemui.statusbar.phone.PanelBar: void setPanel(com.android.systemui.statusbar.phone.PanelView)>
<com.android.server.stats.StatsCompanionService: void statsdReady()>
<com.android.systemui.doze.DozeMachine.Service: void requestWakeUp()>
<com.android.egg.paint.PaintActivity: void onCreate(android.os.Bundle)>
<com.android.systemui.classifier.FalsingManagerProxy: void onNotificatonStopDismissing()>
<com.android.server.Watchdog: void addThread(android.os.Handler,long)>
<com.android.settingslib.net.NetworkCycleDataForUid.Builder: com.android.settingslib.net.NetworkCycleDataForUid getObject()>
<com.android.systemui.statusbar.phone.UnlockMethodCache: boolean isMethodSecure()>
<com.android.keyguard.KeyguardAbsKeyInputView: void showMessage(java.lang.CharSequence,android.content.res.ColorStateList)>
<com.android.systemui.classifier.FalsingManagerProxy: void onScreenOff()>
<com.android.systemui.statusbar.phone.KeyguardStatusBarView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.appprediction.AppPredictionManagerServiceShellCommand: int onCommand(java.lang.String)>
<com.google.android.startop.iorap.AppLaunchEvent.IntentFailed: void <init>(long)>
<com.android.systemui.statusbar.phone.LockIcon: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.android.systemui.statusbar.policy.HotspotControllerImpl: boolean isHotspotTransient()>
<com.android.settingslib.net.NetworkCycleChartData.Builder: com.android.settingslib.net.NetworkCycleChartData.Builder setUsageBuckets(java.util.List)>
<com.android.systemui.statusbar.notification.stack.AmbientState: void setAppearing(boolean)>
<com.android.settingslib.fuelgauge.BatterySaverUtils: void ensureAutoBatterySaver(android.content.Context,int)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: int getBackgroundColorForExpansionState()>
<com.android.server.content.ContentService: void registerContentObserver(android.net.Uri,boolean,android.database.IContentObserver)>
<com.android.systemui.doze.DozeService: void onDestroy()>
<com.android.systemui.statusbar.phone.DoubleTapHelper: boolean onTouchEvent(android.view.MotionEvent,int)>
<com.android.settingslib.volume.MediaSessions: void setVolume(android.media.session.MediaSession.Token,int)>
<com.android.systemui.statusbar.phone.NotificationGroupManager: com.android.systemui.statusbar.notification.collection.NotificationEntry getLogicalGroupSummary(android.service.notification.StatusBarNotification)>
<com.android.server.content.SyncJobService: java.lang.String jobParametersToString(android.app.job.JobParameters)>
<com.android.systemui.classifier.brightline.BrightLineFalsingManager: void onTrackingStarted(boolean)>
<com.android.systemui.statusbar.notification.DynamicPrivacyController: void addListener(com.android.systemui.statusbar.notification.DynamicPrivacyController.Listener)>
<com.android.systemui.recents.Recents: void start()>
<com.android.server.pm.PackageManagerService: boolean addPermission(android.content.pm.PermissionInfo)>
<com.android.server.location.GeofenceManager: void onLocationChanged(android.location.Location)>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper: void animateHideLeftRightIcon()>
<com.android.systemui.SwipeHelper: boolean handleUpEvent(android.view.MotionEvent,android.view.View,float,float)>
<com.android.server.uri.GrantUri: boolean equals(java.lang.Object)>
<com.android.server.pm.IntentFilterVerificationState: boolean isVerificationComplete()>
<com.android.settingslib.bluetooth.LocalBluetoothProfile: boolean isPreferred(android.bluetooth.BluetoothDevice)>
<com.android.systemui.statusbar.phone.ShadeController: void goToLockedShade(android.view.View)>
<com.android.server.notification.ManagedServices: boolean isComponentEnabledForCurrentProfiles(android.content.ComponentName)>
<com.android.systemui.biometrics.BiometricDialogView: void restoreState(android.os.Bundle)>
<com.android.server.accessibility.AccessibilityManagerService.SecurityPolicy: boolean canRetrieveWindowContentLocked(com.android.server.accessibility.AbstractAccessibilityServiceConnection)>
<com.android.server.pm.ShortcutService: void setShortcutHostPackage(java.lang.String,java.lang.String,int)>
<android.media.MediaController2.Builder: android.media.MediaController2 build()>
<com.android.settingslib.widget.FooterPreferenceMixinCompat: void <init>(androidx.preference.PreferenceFragmentCompat,com.android.settingslib.core.lifecycle.Lifecycle)>
<com.android.systemui.bubbles.animation.ExpandedAnimationController: float getBubbleLeft(int)>
<com.android.systemui.plugins.FalsingManager: void onBouncerShown()>
<com.android.systemui.statusbar.AlertingNotificationManager: void setShouldManageLifetime(com.android.systemui.statusbar.notification.collection.NotificationEntry,boolean)>
<com.android.printspooler.ui.PrintActivity: void onUpdateFailed(java.lang.CharSequence)>
<com.android.server.infra.AbstractMasterSystemService: boolean isDefaultServiceEnabled(int)>
<com.android.systemui.shared.system.ActivityManagerWrapper: int getCurrentUserId()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: boolean scrollTo(android.view.View)>
<com.android.systemui.globalactions.GlobalActionsDialog.MyAdapter: long getItemId(int)>
<com.android.settingslib.bluetooth.HidDeviceProfile: boolean isPreferred(android.bluetooth.BluetoothDevice)>
<android.text.PrecomputedTextPerfTest: void testCreate_Styled_NoHyphenation()>
<com.android.server.usb.descriptors.Usb20ASFormatIII: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>
<com.android.settingslib.HelpUtils: void addIntentParameters(android.content.Context,android.content.Intent,java.lang.String,boolean)>
<com.android.systemui.statusbar.phone.ButtonDispatcher: int getId()>
<com.android.systemui.qs.QSFragment: int getDesiredHeight()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: java.lang.CharSequence getActiveRemoteInputText()>
<com.android.wallpaperbackup.WallpaperBackupAgent: void onBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>
<com.android.server.usb.UsbAlsaJackDetector: com.android.server.usb.UsbAlsaJackDetector startJackDetect(com.android.server.usb.UsbAlsaDevice)>
<com.android.settingslib.location.InjectedSetting.Builder: com.android.settingslib.location.InjectedSetting.Builder setUserHandle(android.os.UserHandle)>
<com.android.systemui.statusbar.phone.StatusBar: void appTransitionCancelled(int)>
<com.android.keyguard.clock.BubbleClockController: void setColorPalette(boolean,int[])>
<com.android.gallery3d.exif.ExifInterface: boolean setCompressedThumbnail(byte[])>
<com.android.systemui.statusbar.notification.NotificationEntryManager: void updateNotification(android.service.notification.StatusBarNotification,android.service.notification.NotificationListenerService.RankingMap)>
<com.android.systemui.statusbar.NotificationViewHierarchyManager: void updateRowStates()>
<com.android.settingslib.core.lifecycle.events.OnOptionsItemSelected: boolean onOptionsItemSelected(android.view.MenuItem)>
<com.android.keyguard.clock.SettingsWrapper: java.lang.String getLockScreenCustomClockFace(int)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.systemui.statusbar.car.CarStatusBar: void hideBatteryView()>
<com.android.systemui.statusbar.notification.stack.AmbientState: void setStackTranslation(float)>
<javax.microedition.khronos.opengles.GL10: void glDrawArrays(int,int,int)>
<com.google.android.startop.iorap.AppLaunchEvent.BaseWithActivityRecordData: void <init>(long,byte[])>
<com.android.printspooler.ui.PrintActivity: void onActionPerformed()>
<javax.microedition.khronos.opengles.GL10: void glPointSizex(int)>
<com.android.server.testing.shadows.FrameworkShadowLooper: boolean isCurrentThread()>
<com.android.systemui.statusbar.policy.Clock: void onDensityOrFontScaleChanged()>
<com.android.server.infra.AbstractPerUserSystemService: void handlePackageUpdateLocked(java.lang.String)>
<com.android.server.uri.UriGrantsManagerService: android.content.pm.ParceledListSlice getGrantedUriPermissions(java.lang.String,int)>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.keyguard.KeyguardSimPukView: void startAppearAnimation()>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: boolean showInShadeWhenBubble()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setUninstallBlocked(android.content.ComponentName,java.lang.String,java.lang.String,boolean)>
<com.android.keyguard.KeyguardStatusView: int getLogoutButtonHeight()>
<com.android.server.adb.AdbService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.qs.tiles.LocationTile: int getMetricsCategory()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setExpandingVelocity(float)>
<com.android.gallery3d.glrenderer.GLCanvas: void drawTexture(com.android.gallery3d.glrenderer.BasicTexture,android.graphics.RectF,android.graphics.RectF)>
<com.android.printspooler.model.PageContentRepository.PageContentProvider: android.view.View getOwner()>
<com.android.server.hdmi.HdmiCecLocalDevicePlayback: int getLocalActivePath()>
<com.android.keyguard.clock.ClockOptionsProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
<com.android.systemui.tuner.TunerSwitch: void onClick()>
<com.android.server.slice.SliceManagerService.Lifecycle: void onStopUser(int)>
<com.android.keyguard.KeyguardSecurityContainer: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.server.pm.permission.BasePermission: java.lang.String getSourcePackageName()>
<com.android.server.pm.AbstractStatsBase: void writeNow(java.lang.Object)>
<com.android.printservice.recommendation.util.Preconditions: float checkArgumentInRange(float,float,float,java.lang.String)>
<com.android.server.hdmi.HdmiControlService: void onStart()>
<com.android.server.pm.PackageManagerService: void restorePreferredActivities(byte[],int)>
<com.android.systemui.statusbar.notification.TransformState: void setTransformationStartX(float)>
<com.android.server.notification.ConditionProviders: com.android.server.notification.ConditionProviders.Config getConfig()>
<com.android.systemui.statusbar.phone.StatusBarIconControllerImpl: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.pm.UserRestrictionsUtils: android.os.Bundle readRestrictions(org.xmlpull.v1.XmlPullParser)>
<com.android.systemui.recents.views.TaskViewHeader: void cancelFocusTimerIndicator()>
<com.android.server.notification.NotificationRecord: int getPackagePriority()>
<com.android.keyguard.KeyguardClockSwitch: void setBigClockContainer(android.view.ViewGroup)>
<com.android.server.textservices.TextServicesManagerService.Lifecycle: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.ButtonDispatcher: void abortCurrentGesture()>
<com.android.externalstorage.TestDocumentsProvider: android.database.Cursor queryRecentDocuments(java.lang.String,java.lang.String[])>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: com.android.settingslib.net.DataUsageController getMobileDataController()>
<com.android.server.hdmi.HdmiControlService: com.android.server.hdmi.HdmiCecLocalDevicePlayback playback()>
<com.android.mtp.UsbIntentReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.android.systemui.tuner.TunerSwitch: void onDetached()>
<com.android.systemui.doze.DozeScreenBrightness: void onAccuracyChanged(android.hardware.Sensor,int)>
<com.android.printspooler.widget.PageContentView: void onSizeChanged(int,int,int,int)>
<com.android.server.biometrics.AuthenticationClient: boolean isCryptoOperation()>
<com.android.systemui.statusbar.notification.ActivityLaunchAnimator.ExpandAnimationParameters: float getProgress()>
<com.android.packageinstaller.InstallInstalling: void onCreate(android.os.Bundle)>
<com.android.server.location.GnssNavigationMessageProvider: void onGpsEnabledChanged()>
<com.android.systemui.SystemUIFactory: com.android.systemui.SystemUIFactory.SystemUIRootComponent getRootComponent()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setForceUnlocked(boolean)>
<com.android.systemui.statusbar.notification.stack.StackScrollAlgorithm: int getMaxAllowedChildHeight(android.view.View)>
<com.android.systemui.qs.tileimpl.QSIconViewImpl: void disableAnimation()>
<com.android.systemui.statusbar.notification.row.StackScrollerDecorView: void setSecondaryVisible(boolean,boolean)>
<com.android.server.audio.MediaFocusControl: void setDuckingInExtPolicyAvailable(boolean)>
<com.android.gallery3d.exif.ExifTag: int getValueAsInt(int)>
<com.android.systemui.statusbar.AlertingNotificationManager: boolean canRemoveImmediately(java.lang.String)>
<com.android.settingslib.development.DevelopmentSettingsEnabler: void setDevelopmentSettingsEnabled(android.content.Context,boolean)>
<com.android.printspooler.ui.PrintActivity: void onUpdateCompleted(com.android.printspooler.model.RemotePrintDocument.RemotePrintDocumentInfo)>
<com.android.server.testing.shadows.ShadowBinder: void reset()>
<com.android.systemui.tuner.TunerService: void destroy()>
<com.android.server.slice.DirtyTracker.Persistable: java.lang.String getFileName()>
<com.android.server.notification.NotificationRecord: java.lang.String getKey()>
<com.android.server.pm.PackageManagerServiceUtils: void logCriticalInfo(int,java.lang.String)>
<com.android.server.usb.descriptors.Usb20ACOutputTerminal: void <init>(int,byte,byte,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isInputMethodPermittedByAdmin(android.content.ComponentName,java.lang.String,int)>
<com.android.systemui.statusbar.phone.NotificationsQuickSettingsContainer: void setQsExpanded(boolean)>
<com.android.server.content.SyncStorageEngine.OnSyncRequestListener: void onSyncRequest(com.android.server.content.SyncStorageEngine.EndPoint,int,android.os.Bundle,int,int,int)>
<com.android.systemui.statusbar.phone.HeadsUpAppearanceController: void onDarkChanged(android.graphics.Rect,float,int)>
<com.android.server.biometrics.AuthenticationClient: boolean onEnumerationResult(android.hardware.biometrics.BiometricAuthenticator.Identifier,int)>
<com.android.server.notification.NotificationRecord: void setPackagePriority(int)>
<com.android.settingslib.net.DataUsageController: void setSubscriptionId(int)>
<com.android.systemui.qs.tiles.AirplaneModeTile: android.content.Intent getLongClickIntent()>
<com.android.systemui.statusbar.phone.KeyguardIndicationTextView: void <init>(android.content.Context)>
<com.android.systemui.BatteryMeterView: void onAttachedToWindow()>
<com.android.systemui.statusbar.policy.NetworkController: boolean hasMobileDataFeature()>
<com.android.gallery3d.exif.ExifTag: long forceGetValueAsLong(long)>
<com.android.commands.sm.Sm: void runSetVirtualDisk()>
<com.android.server.pm.PackageManagerService: byte[] getDefaultAppsBackup(int)>
<com.android.systemui.recents.views.TaskViewTransform: boolean isSame(com.android.systemui.recents.views.TaskViewTransform)>
<com.android.keyguard.KeyguardClockSwitch: void <init>(android.content.Context,android.util.AttributeSet,com.android.systemui.plugins.statusbar.StatusBarStateController,com.android.systemui.colorextraction.SysuiColorExtractor,com.android.keyguard.clock.ClockManager)>
<com.android.server.pm.permission.BasePermission: boolean isHardRestricted()>
<com.android.server.appop.AppOpsService: void setMode(int,int,java.lang.String,int)>
<com.android.server.IntentResolver: boolean isFilterStopped(android.content.IntentFilter,int)>
<com.android.systemui.statusbar.phone.ButtonDispatcher: void setDelayTouchFeedback(boolean)>
<com.android.server.search.SearchManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.audio.AudioService: void registerRecordingCallback(android.media.IRecordingConfigDispatcher)>
<com.android.systemui.qs.QSTileHost: void addTile(java.lang.String)>
<com.android.systemui.plugins.qs.QSTileView: void init(com.android.systemui.plugins.qs.QSTile)>
<com.android.commands.svc.WifiCommand: java.lang.String longHelp()>
<com.android.systemui.shared.recents.model.IconLoader: android.graphics.drawable.Drawable getIcon(com.android.systemui.shared.recents.model.Task)>
<com.android.server.pm.PackageManagerService: int getIntentVerificationStatus(java.lang.String,int)>
<com.android.server.infra.AbstractMasterSystemService: int getMaximumTemporaryServiceDurationMs()>
<com.android.systemui.Dependency.DependencyCreator: com.android.systemui.SystemUI apply(android.content.Context)>
<com.android.server.content.SyncStorageEngine: void queueBackup()>
<com.android.systemui.qs.TileLayout: int getOffsetTop(com.android.systemui.qs.QSPanel.TileRecord)>
<com.android.settingslib.deviceinfo.AbstractSerialNumberPreferenceController: void <init>(android.content.Context)>
<com.android.systemui.settings.BrightnessController: void addStateChangedCallback(com.android.systemui.settings.BrightnessController.BrightnessStateChangeCallback)>
<com.android.settingslib.accessibility.AccessibilityButtonHelper: boolean isRequestedByMagnification(android.content.Context)>
<com.android.systemui.recents.LegacyRecentsImpl: void toggleRecentApps()>
<com.android.server.notification.ZenModeFiltering: boolean isSystem(com.android.server.notification.NotificationRecord)>
<com.android.server.pm.PackageManagerService: boolean runBackgroundDexoptJob(java.util.List)>
<com.android.commands.media.Media: void onRun()>
<com.android.systemui.tuner.TunablePadding.TunablePaddingService: com.android.systemui.tuner.TunablePadding add(android.view.View,java.lang.String,int,int)>
<com.android.systemui.statusbar.phone.StatusBarNotificationPresenter: boolean isCollapsing()>
<com.android.systemui.statusbar.notification.MessagingLayoutTransformState: com.android.systemui.statusbar.notification.MessagingLayoutTransformState obtain()>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector className(java.lang.String)>
<com.android.systemui.pip.phone.PipTouchState: void dump(java.io.PrintWriter,java.lang.String)>
<android.net.shared.PrivateDnsConfig: android.net.PrivateDnsConfigParcel toParcel()>
<com.android.server.soundtrigger.SoundTriggerLogger.StringEvent: java.lang.String eventToString()>
<com.android.systemui.qs.PagedTileLayout.TilePage: boolean isFull()>
<com.android.systemui.statusbar.phone.ScrimController: void onScreenTurnedOff()>
<com.android.server.usb.descriptors.Usb10ACMixerUnit: byte getChanNameID()>
<com.android.systemui.DockedStackExistsListener: void register(java.util.function.Consumer)>
<com.android.printservice.recommendation.plugin.google.CloudPrintPlugin: int getName()>
<com.android.systemui.plugins.PluginFragment: void onSaveInstanceState(android.os.Bundle)>
<com.android.systemui.statusbar.phone.NavigationBarEdgePanel: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.SystemUIFactory: void init(android.content.Context)>
<com.android.server.pm.PackageManagerService: java.lang.String getWellbeingPackageName()>
<com.android.systemui.bubbles.BubbleStackView: android.graphics.PointF getStackPosition()>
<com.android.systemui.shared.system.RecentsAnimationListener: void onAnimationCanceled(boolean)>
<com.android.server.pm.Installer: void dexopt(java.lang.String,int,java.lang.String,java.lang.String,int,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,int,java.lang.String,java.lang.String,java.lang.String)>
<com.android.systemui.ActivityIntentHelper: boolean wouldShowOverLockscreen(android.content.Intent,int)>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: void updateBackgroundAlpha(float)>
<com.android.keyguard.KeyguardSimPukView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.notification.EventConditionProvider: void onConnected()>
<com.android.server.usb.descriptors.Usb10ASFormatII: int getSamplesPerFrame()>
<com.android.systemui.statusbar.phone.PanelBar: void collapsePanel(boolean,boolean,float)>
<javax.microedition.khronos.opengles.GL11: void glGetBooleanv(int,boolean[],int)>
<com.android.server.biometrics.fingerprint.FingerprintConstants: java.lang.String logTag()>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper.Callback: float getMaxTranslationDistance()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setStatusBarState(int)>
<com.android.server.input.InputManagerService: boolean isInputDeviceEnabled(int)>
<com.android.settingslib.bluetooth.LocalBluetoothProfile: int getPreferred(android.bluetooth.BluetoothDevice)>
<com.android.server.autofill.RemoteFillService.FillServiceCallbacks: void onFillRequestSuccess(int,android.service.autofill.FillResponse,java.lang.String,int)>
<com.android.server.statusbar.StatusBarManagerInternal: void showAssistDisclosure()>
<com.android.server.TelephonyRegistry: void notifyDataConnectionForSubscriber(int,int,int,boolean,java.lang.String,java.lang.String,android.net.LinkProperties,android.net.NetworkCapabilities,int,boolean)>
<com.android.server.notification.SnoozeHelper: void snooze(com.android.server.notification.NotificationRecord)>
<com.android.systemui.plugin.testoverlayplugin.SampleOverlayPlugin: void setup(android.view.View,android.view.View)>
<com.android.systemui.shared.system.TaskStackChangeListeners: void onPinnedStackAnimationEnded()>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.util.List getTrustAgentConfiguration(android.content.ComponentName,android.content.ComponentName,int,boolean)>
<com.android.server.biometrics.AuthenticationClient: void resetFailedAttempts()>
<com.android.server.twilight.TwilightState: java.time.LocalDateTime sunrise()>
<com.android.settingslib.net.NetworkCycleDataLoader.Builder: com.android.settingslib.net.NetworkCycleDataLoader build()>
<com.android.statementservice.retriever.AbstractAsset: boolean followInsecureInclude()>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationMessagingTemplateViewWrapper: void updateTransformedTypes()>
<com.android.server.testing.shadows.ShadowEventLog: java.util.Set getEntries()>
<com.android.server.pm.ShortcutService: android.content.Intent createShortcutResultIntent(java.lang.String,android.content.pm.ShortcutInfo,int)>
<android.media.MediaPlayer2: java.lang.String getDrmPropertyString(android.media.DataSourceDesc,java.lang.String)>
<com.android.keyguard.clock.DefaultClockController: android.view.View getBigClockView()>
<com.android.settingslib.net.ChartDataLoader: void onStopLoading()>
<com.android.preload.Main: void main(java.lang.String[])>
<com.android.systemui.statusbar.phone.NotificationIconAreaController: int getHeight()>
<com.android.server.locksettings.recoverablekeystore.RecoverableKeyStoreManager: void setServerParams(byte[])>
<com.android.systemui.statusbar.phone.StatusBar: void setInteracting(int,boolean)>
<com.android.systemui.recents.views.TaskView: void onBusEvent(com.android.systemui.recents.events.ui.dragndrop.DragEndEvent)>
<com.android.settingslib.notification.EnableZenModeDialog: android.net.Uri getConditionId(android.service.notification.Condition)>
<javax.obex.ClientOperation: void sendHeaders(javax.obex.HeaderSet)>
<com.android.keyguard.KeyguardSecurityContainer: int getLayoutIdFor(com.android.keyguard.KeyguardSecurityModel.SecurityMode)>
<com.android.systemui.usb.UsbDebuggingSecondaryUserActivity: void onCreate(android.os.Bundle)>
<com.android.server.ConnectivityService: int registerNetworkAgent(android.os.Messenger,android.net.NetworkInfo,android.net.LinkProperties,android.net.NetworkCapabilities,int,android.net.NetworkMisc,int)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setExpandable(boolean)>
<com.android.systemui.statusbar.phone.NavigationBarView: void setWindowVisible(boolean)>
<com.android.settingslib.Utils: int getColorStateListDefaultColor(android.content.Context,int)>
<com.android.settingslib.net.NetworkCycleDataForUid.Builder: com.android.settingslib.net.NetworkCycleDataForUid build()>
<com.android.systemui.statusbar.ViewTransformationHelper: boolean isAnimating()>
<com.android.systemui.classifier.FalsingManagerProxy: android.net.Uri reportRejectedTouch()>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void onScreenTurningOn(com.android.server.policy.keyguard.KeyguardServiceDelegate.DrawnListener)>
<com.android.systemui.shared.system.QuickStepContract: int getQuickScrubTouchSlopPx()>
<android.net.NetworkMonitorManager: void <init>(android.net.INetworkMonitor)>
<com.android.systemui.statusbar.notification.collection.NotificationData: boolean isHighPriority(android.service.notification.StatusBarNotification)>
<com.android.systemui.usb.UsbContaminantActivity: void onClick(android.view.View)>
<com.android.location.provider.LocationProviderBase: boolean onSendExtraCommand(java.lang.String,android.os.Bundle)>
<com.android.settingslib.wifi.AccessPoint: java.lang.String securityToString(int,int)>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow.NotificationMenuItem: android.view.View getMenuView()>
<com.android.systemui.qs.tiles.FlashlightTile: boolean isAvailable()>
<com.android.systemui.statusbar.NotificationLockscreenUserManagerImpl: void <init>(android.content.Context)>
<com.android.systemui.statusbar.policy.ZenModeController.Callback: void onConfigChanged(android.service.notification.ZenModeConfig)>
<com.android.printspooler.model.RemotePrintDocument.UpdateResultCallbacks: void onUpdateCompleted(com.android.printspooler.model.RemotePrintDocument.RemotePrintDocumentInfo)>
<com.android.systemui.statusbar.phone.StatusBarWindowController: boolean isShowingWallpaper()>
<android.os.ParcelArrayPerfTest: void timeReadLongArray()>
<com.android.settingslib.applications.ApplicationsState.Callbacks: void onLoadEntriesCompleted()>
<com.android.systemui.statusbar.phone.UserAvatarView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.systemui.statusbar.phone.NavigationBarEdgePanel: boolean hasOverlappingRendering()>
<com.android.server.locksettings.recoverablekeystore.RecoverableKeyStoreManager: java.lang.String importKeyWithMetadata(java.lang.String,byte[],byte[])>
<com.android.settingslib.core.lifecycle.ObservablePreferenceFragment: void onDestroy()>
<com.android.systemui.statusbar.phone.StatusBarIconHolder: void setMobileState(com.android.systemui.statusbar.phone.StatusBarSignalPolicy.MobileIconState)>
<com.android.systemui.statusbar.policy.HeadsUpManager: boolean hasFullScreenIntent(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.settingslib.media.InfoMediaDevice: void disconnect()>
<com.android.server.accounts.AccountManagerService: android.accounts.Account[] getAccountsForPackage(java.lang.String,int,java.lang.String)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void onScreenTurnedOn()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void onNotificationRankingUpdated()>
<com.android.printspooler.model.PrintSpoolerService.PrintSpooler: void clearCustomPrinterIconCache(android.print.IPrintSpoolerCallbacks,int)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: void setIsTopBucket(boolean)>
<com.android.systemui.globalactions.GlobalActionsDialog.MyAdapter: int getCount()>
<com.android.systemui.qs.QSSecurityFooter: void onClick(android.content.DialogInterface,int)>
<com.android.server.INativeDaemonConnectorCallbacks: boolean onCheckHoldWakeLock(int)>
<com.android.systemui.qs.PagedTileLayout: void computeScroll()>
<com.android.server.notification.ZenModeHelper: long getSuppressedEffects()>
<com.android.systemui.bubbles.animation.ExpandedAnimationController: void expandFromStack(java.lang.Runnable)>
<com.android.shell.BugreportStorageProvider: java.io.File getFileForDocId(java.lang.String,boolean)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: int getMaxConnectionState()>
<com.android.systemui.statusbar.notification.stack.AnimationProperties: boolean wasAdded(android.view.View)>
<com.android.server.location.LocationBasedCountryDetector: java.lang.String getCountryFromLocation(android.location.Location)>
<com.android.server.broadcastradio.hal2.RadioModule.AidlCallbackRunnable: void run(android.hardware.radio.ITunerCallback)>
<com.android.server.IntentResolver: java.lang.Object filterToLabel(android.content.IntentFilter)>
<android.multiuser.UserLifecycleTests: void managedProfileStopped()>
<com.android.systemui.shared.recents.model.TaskKeyLruCache: void trimToSize(int)>
<com.android.server.telecom.TelecomLoaderService: void onBootPhase(int)>
<com.android.systemui.statusbar.notification.row.ExpandableOutlineView: void updateOutline()>
<com.android.systemui.qs.QSPanel.QSTileLayout: int getOffsetTop(com.android.systemui.qs.QSPanel.TileRecord)>
<com.android.server.webkit.SystemInterface: void setMultiProcessSetting(android.content.Context,int)>
<com.android.gallery3d.glrenderer.GLES20Canvas: float getAlpha()>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onFinishedGoingToSleep(int)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: int getMinHeight()>
<com.android.server.IntentResolver: void filterResults(java.util.List)>
<com.android.server.notification.PreferencesHelper: void onUserUnlocked(int)>
<com.android.server.DeviceIdleController.LocalService: int[] getPowerSaveTempWhitelistAppIds()>
<android.media.MediaPlayer2: void clearDrmEventCallback()>
<com.android.server.pm.ShortcutService: boolean addDynamicShortcuts(java.lang.String,android.content.pm.ParceledListSlice,int)>
<com.android.systemui.statusbar.notification.stack.AmbientState: com.android.systemui.statusbar.notification.row.ActivatableNotificationView getLastVisibleBackgroundChild()>
<android.graphics.perftests.CanvasPerfTest: void testBasicViewGroupDraw()>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationViewWrapper: android.view.NotificationHeaderView getNotificationHeader()>
<com.android.server.midi.MidiService: android.media.midi.MidiDeviceInfo[] getDevices()>
<com.android.systemui.statusbar.policy.NextAlarmControllerImpl: void onReceive(android.content.Context,android.content.Intent)>
<com.android.server.notification.CalendarTracker: void <init>(android.content.Context,android.content.Context)>
<com.android.systemui.stackdivider.DividerHandleView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.soundtrigger.SoundTriggerInternal: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.settingslib.inputmethod.InputMethodAndSubtypeUtilCompat: void removeUnnecessaryNonPersistentPreference(androidx.preference.Preference)>
<com.android.server.biometrics.AuthenticationClient: int statsAction()>
<com.android.server.location.AbstractLocationProvider.LocationProviderManager: void onSetProperties(com.android.internal.location.ProviderProperties)>
<com.android.server.search.Searchables: android.content.ComponentName getWebSearchActivity()>
<com.android.gallery3d.glrenderer.GLES20Canvas: void deleteRecycledResources()>
<com.android.systemui.statusbar.NotificationLockscreenUserManager: void setUpWithPresenter(com.android.systemui.statusbar.NotificationPresenter)>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: boolean onRequestSendAccessibilityEventInternal(android.view.View,android.view.accessibility.AccessibilityEvent)>
<com.android.server.location.ContextHubService: int[] findNanoAppOnHub(int,android.hardware.location.NanoAppFilter)>
<com.android.systemui.keyguard.KeyguardSliceProvider: void onNextAlarmChanged(android.app.AlarmManager.AlarmClockInfo)>
<com.android.settingslib.wifi.AccessPoint: java.lang.String getSsidStr()>
<com.android.server.usb.UsbService: long getCurrentFunctions()>
<com.android.settingslib.deviceinfo.AbstractImsStatusPreferenceController: void <init>(android.content.Context,com.android.settingslib.core.lifecycle.Lifecycle)>
<com.android.server.AnyMotionDetector.Vector3: float norm()>
<com.android.server.DropBoxManagerService: boolean isTagEnabled(java.lang.String)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onHeightUpdated(float)>
<com.android.systemui.statusbar.phone.ManagedProfileControllerImpl: boolean isWorkModeEnabled()>
<com.android.server.notification.ZenModeHelper: boolean isCall(com.android.server.notification.NotificationRecord)>
<com.android.systemui.shared.system.ActivityManagerWrapper: java.util.concurrent.Future closeSystemWindows(java.lang.String)>
<com.android.server.pm.UserRestrictionsUtils: void moveRestriction(java.lang.String,android.util.SparseArray,android.util.SparseArray)>
<com.android.server.NetworkScoreService.DispatchingContentObserver: void <init>(android.content.Context,android.os.Handler)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: com.android.systemui.statusbar.policy.HeadsUpManager getHeadsUpManager()>
<com.android.server.notification.ZenModeConditions: void onUserSwitched()>
<com.android.server.textservices.TextServicesManagerService.Lifecycle: void onUnlockUser(int)>
<com.android.commands.bmgr.BmgrTest: void setUp()>
<com.android.systemui.util.leak.GarbageMonitor: com.android.systemui.util.leak.GarbageMonitor.ProcessMemInfo getMemInfo(int)>
<com.android.preload.ui.SequenceUI: void showWaitDialog()>
<com.android.server.usb.descriptors.UsbDescriptorParser: int getParsingSpec()>
<com.android.server.display.utils.RollingBuffer: boolean isEmpty()>
<com.android.systemui.statusbar.notification.row.NotificationContentInflater: void setIsLowPriority(boolean)>
<com.android.settingslib.DeviceInfoUtils: java.lang.String getFormattedPhoneNumber(android.content.Context,android.telephony.SubscriptionInfo)>
<com.android.server.appbinding.AppBindingService.Lifecycle: void <init>(android.content.Context)>
<com.android.systemui.qs.customize.QSCustomizer: void setHost(com.android.systemui.qs.QSTileHost)>
<com.android.settingslib.core.instrumentation.SharedPreferencesLogger.EditorLogger: boolean commit()>
<com.android.systemui.keyguard.KeyguardSliceProvider: void updateClockLocked()>
<com.android.server.usb.descriptors.UsbACMidiEndpoint: void <init>(int,byte,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void installUpdateFromFile(android.content.ComponentName,android.os.ParcelFileDescriptor,android.app.admin.StartInstallingUpdateCallback)>
<com.android.gallery3d.exif.ExifTag: boolean isValidType(short)>
<com.android.systemui.statusbar.policy.BrightnessMirrorController: void addCallback(com.android.systemui.statusbar.policy.BrightnessMirrorController.BrightnessMirrorListener)>
<com.android.server.biometrics.Constants: java.lang.String tagEnumerateStartError()>
<com.android.systemui.qs.QSSecurityFooter.VpnSpan: int hashCode()>
<com.android.systemui.statusbar.phone.NavigationBarView.OnVerticalChangedListener: void onVerticalChanged(boolean)>
<com.android.systemui.qs.QSTileHost: void warn(java.lang.String,java.lang.Throwable)>
<com.android.uiautomator.core.UiAutomationShellWrapper: void setCompressedLayoutHierarchy(boolean)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void showScreenPinningRequest(int)>
<com.android.server.incident.IncidentCompanionService: void <init>(android.content.Context)>
<com.android.systemui.recents.misc.SystemServicesProxy: boolean hasDockedTask()>
<android.net.ip.IIpClientCallbacks: void onReachabilityLost(java.lang.String)>
<com.android.systemui.globalactions.GlobalActionsColumnLayout: float getAnimationOffsetY()>
<com.android.server.notification.PreferencesHelper: void <init>(android.content.Context,android.content.pm.PackageManager,com.android.server.notification.RankingHandler,com.android.server.notification.ZenModeHelper)>
<com.android.keyguard.KeyguardHostView: void showPrimarySecurityScreen()>
<com.android.server.webkit.SystemInterface: int getMultiProcessSetting(android.content.Context)>
<com.android.server.inputmethod.MultiClientInputMethodManagerService.Lifecycle: void onStart()>
<com.android.systemui.statusbar.phone.LockscreenWallpaper: void setCurrentUser(int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean getCrossProfileCallerIdDisabled(android.content.ComponentName)>
<com.android.systemui.statusbar.notification.row.NotificationSnooze: void onAttachedToWindow()>
<android.os.ParcelPerfTest: void timeWriteByte()>
<com.android.settingslib.core.lifecycle.ObservablePreferenceFragment: void onStart()>
<com.android.server.clipboard.ClipboardService: void onStart()>
<com.android.systemui.recents.model.RecentsTaskLoader: void startLoader(android.content.Context)>
<com.android.server.location.LocationBasedCountryDetector: void registerListener(java.lang.String,android.location.LocationListener)>
<com.android.systemui.stackdivider.Divider: void onDraggingEnd()>
<com.android.systemui.recents.events.EventBus.AnimatedEvent: void addPostAnimationCallback(java.lang.Runnable)>
<com.android.photos.views.TiledImageRenderer: void notifyModelInvalidated()>
<com.android.server.display.BrightnessIdleJob: boolean onStartJob(android.app.job.JobParameters)>
<com.android.systemui.statusbar.policy.KeyButtonView: void abortCurrentGesture()>
<com.android.shell.BugreportReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.android.systemui.statusbar.notification.row.NotificationContentInflater.AsyncInflationTask: void abort()>
<com.android.server.policy.PhoneWindowManager: void registerDisplayFoldListener(android.view.IDisplayFoldListener)>
<com.android.systemui.SystemUIFactory.ContextHolder: android.content.Context provideContext()>
<com.android.server.pm.permission.BasePermission: int getUid()>
<android.text.PrecomputedTextPerfTest: void testCreate_Styled_Hyphenation_WidthOnly()>
<com.google.android.startop.iorap.ActivityInfo: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.statusbar.phone.SystemUIDialog: void setWindowOnTop(android.app.Dialog)>
<com.android.systemui.recents.misc.ReferenceCountedTrigger: int getCount()>
<com.android.systemui.statusbar.NotificationRemoteInputManager: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.util.wakelock.DelayedWakeLock: void <init>(android.os.Handler,com.android.systemui.util.wakelock.WakeLock)>
<com.android.systemui.keyguard.WorkLockActivity: void onActivityResult(int,int,android.content.Intent)>
<com.android.systemui.recents.RecentsImpl: void toggleRecents(int)>
<com.android.systemui.appops.AppOpItem: java.lang.String toString()>
<com.android.server.search.SearchManagerService: boolean launchLegacyAssist(java.lang.String,int,android.os.Bundle)>
<com.android.keyguard.KeyguardDisplayManager: boolean updateDisplays(boolean)>
<com.android.keyguard.KeyguardSecurityCallback: void userActivity()>
<com.android.server.camera.CameraServiceProxy: boolean handleMessage(android.os.Message)>
<com.android.systemui.statusbar.phone.LockIcon: void setPulsing(boolean)>
<com.android.server.AppStateTracker: boolean isUidTempPowerSaveWhitelisted(int)>
<com.android.server.notification.NotificationRecord: boolean isCategory(java.lang.String)>
<com.android.settingslib.drawer.DashboardCategory: void removeTile(int)>
<android.util.ArraySetPerfTest: void testRemoveIf_Small_RemoveAll()>
<com.android.server.location.GnssGeofenceProviderTest: void resumeGeofence_nativeResumed()>
<com.android.systemui.recents.model.TaskStack: boolean isNextLaunchTargetPip(long)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean setApplicationRestrictionsManagingPackage(android.content.ComponentName,java.lang.String)>
<com.android.systemui.statusbar.car.CarBatteryController: void addBatteryViewHandler(com.android.systemui.statusbar.car.CarBatteryController.BatteryViewHandler)>
<android.perftests.utils.SettingsStateManager: void set(java.lang.String)>
<com.android.settingslib.widget.BarView: void <init>(android.content.Context,android.util.AttributeSet)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer)>
<com.android.systemui.statusbar.policy.RemoteInputView: void onVisibilityChanged(android.view.View,int)>
<com.android.server.infra.AbstractMasterSystemService: void onServicePackageUpdatingLocked(int)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setUserExpanded(boolean,boolean)>
<android.processor.view.inspector.InspectableClassModel: com.squareup.javapoet.ClassName getClassName()>
<com.android.systemui.recents.RecentsImplementation: void onStart(android.content.Context,com.android.systemui.SysUiServiceProvider)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void setClipBottomAmount(int)>
<com.android.systemui.statusbar.StatusBarIconView: java.lang.String getSlot()>
<com.android.server.input.InputManagerService: void setWindowManagerCallbacks(com.android.server.input.InputManagerService.WindowManagerCallbacks)>
<com.android.systemui.statusbar.notification.row.ExpandableView: com.android.systemui.statusbar.notification.stack.ExpandableViewState getViewState()>
<com.android.server.pm.UserManagerService: boolean isUserNameSet(int)>
<com.android.wallpapercropper.WallpaperCropActivity.BitmapCropTask: android.graphics.Point getImageBounds()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean isTopLevelChild()>
<com.android.server.storage.CacheQuotaStrategy: void recalculateQuotas()>
<com.android.systemui.statusbar.notification.TransformState: void setTransformationEndX(float)>
<com.android.server.policy.WindowManagerPolicy: void screenTurnedOn()>
<com.android.systemui.assist.ui.DefaultUiController: void <init>(android.content.Context)>
<com.android.keyguard.KeyguardUpdateMonitor: void sendKeyguardReset()>
<com.android.settingslib.deviceinfo.StorageMeasurement: void measure()>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: boolean hasOverlappingRendering()>
<com.android.server.notification.NotificationComparator: void <init>(android.content.Context)>
<com.android.systemui.recents.views.RecentsView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.stackdivider.DividerView: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.server.usb.descriptors.UsbACAudioControlEndpoint: byte getAddress()>
<com.android.printspooler.ui.PrintActivity: void onSaveInstanceState(android.os.Bundle)>
<com.android.settingslib.drawable.UserIconDrawable: void setIntrinsicSize(int)>
<com.android.server.PersistentDataBlockManagerInternal: void setFrpCredentialHandle(byte[])>
<com.android.settingslib.bluetooth.MapProfile: int getConnectionStatus(android.bluetooth.BluetoothDevice)>
<com.android.systemui.recents.RecentsSystemUser: com.android.systemui.recents.IRecentsNonSystemUserCallbacks getNonSystemUserRecentsForUser(int)>
<com.android.commands.am.Instrument: void run()>
<com.android.systemui.recents.views.TaskStackView: void <init>(android.content.Context)>
<com.android.server.slice.SliceManagerService: android.app.slice.SliceSpec[] getPinnedSpecs(android.net.Uri,java.lang.String)>
<com.android.systemui.statusbar.notification.row.NotificationBackgroundView: void setRoundness(float,float)>
<com.android.preload.DumpTableModel: int getRowCount()>
<com.android.systemui.qs.QuickStatusBarHeader: void onDetachedFromWindow()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setShortSupportMessage(android.content.ComponentName,java.lang.CharSequence)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setHeaderVisibleAmount(float)>
<com.android.server.policy.GlobalActionsProvider: void showGlobalActions()>
<com.android.server.biometrics.BiometricServiceBase: java.lang.String getTag()>
<com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException: void <init>(java.lang.String)>
<com.android.systemui.CarSystemUIFactory: boolean provideAllowNotificationLongPress()>
<com.android.printspooler.ui.PageAdapter: android.print.PageRange[] getRequestedPages()>
<com.android.systemui.qs.QSSecurityFooter: boolean hasFooter()>
<android.net.netlink.NetlinkMessage: void <init>(android.net.netlink.StructNlMsgHdr)>
<com.android.systemui.statusbar.phone.NotificationIconContainer: void setIsStaticLayout(boolean)>
<com.android.server.AttributeCache.Package: void <init>(android.content.Context)>
<com.android.server.appop.AppOpsService: void startWatchingMode(int,java.lang.String,com.android.internal.app.IAppOpsCallback)>
<com.android.systemui.classifier.EndPointLengthClassifier: float getFalseTouchEvaluation(int,com.android.systemui.classifier.Stroke)>
<javax.microedition.khronos.opengles.GL10: void glLightf(int,int,float)>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean hideStatusBarIconsWhenExpanded()>
<com.android.server.accessibility.AccessibilityManagerService: void notifyAccessibilityButtonVisibilityChanged(boolean)>
<com.android.server.pm.PackageManagerService: void clearApplicationProfileData(java.lang.String)>
<android.net.ip.IIpClient: void setL2KeyAndGroupHint(java.lang.String,java.lang.String)>
<com.android.systemui.classifier.ProximityClassifier: float getFalseTouchEvaluation(int)>
<com.android.systemui.statusbar.notification.row.ExpandableView: void setActualHeightAnimating(boolean)>
<com.android.server.ServiceWatcher: java.util.ArrayList getSignatureSets(android.content.Context,java.lang.String[])>
<com.android.systemui.recents.LegacyRecentsImpl: void onBusEvent(com.android.systemui.recents.events.activity.DockedTopTaskEvent)>
<com.android.server.policy.WindowManagerPolicy: void lockNow(android.os.Bundle)>
<com.android.settingslib.graph.BluetoothDeviceLayerDrawable: com.android.settingslib.graph.BluetoothDeviceLayerDrawable createLayerDrawable(android.content.Context,int,int)>
<com.android.server.infra.AbstractMasterSystemService: boolean getAllowInstantService()>
<com.android.server.content.SyncLogger: java.lang.String jobParametersToString(android.app.job.JobParameters)>
<com.android.systemui.settings.ToggleSeekBar: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.systemui.volume.VolumeUI: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.systemui.statusbar.policy.BluetoothController: void connect(com.android.settingslib.bluetooth.CachedBluetoothDevice)>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationViewWrapper: void onReinflated()>
<com.android.systemui.statusbar.notification.row.FooterView: void setTextColor(int)>
<com.android.systemui.biometrics.FaceDialogView: void updateIcon(int,int)>
<com.android.server.webkit.WebViewUpdateService: void onStart()>
<com.android.server.pm.CrossProfileAppsServiceImpl.Injector: int getCallingUserId()>
<com.android.server.input.InputManagerService: android.hardware.input.KeyboardLayout getKeyboardLayout(java.lang.String)>
<android.net.ipmemorystore.OnBlobRetrievedListener: android.net.ipmemorystore.IOnBlobRetrievedListener toAIDL(android.net.ipmemorystore.OnBlobRetrievedListener)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: com.android.systemui.statusbar.policy.InflatedSmartReplies.SmartRepliesAndActions getCurrentSmartRepliesAndActions()>
<com.android.systemui.statusbar.notification.stack.ExpandableViewState: int getFinalActualHeight(com.android.systemui.statusbar.notification.row.ExpandableView)>
<com.android.printspooler.ui.SelectPrinterActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<com.android.settingslib.graph.BatteryMeterDrawableBase: int batteryColorForLevel(int)>
<com.android.systemui.tuner.ClockPreference: void onTuningChanged(java.lang.String,java.lang.String)>
<android.database.SQLiteDatabaseIoPerfTest: void testDatabaseModifications()>
<com.android.settingslib.core.instrumentation.SharedPreferencesLogger.EditorLogger: android.content.SharedPreferences.Editor clear()>
<com.android.settingslib.graph.SignalDrawable: boolean setVisible(boolean,boolean)>
<com.android.systemui.statusbar.phone.HeadsUpAppearanceController: void setExpandedHeight(float,float)>
<com.android.commands.hid.Device: void addDelay(int)>
<android.media.MediaPlayer2: java.lang.Object setNextDataSources(java.util.List)>
<com.android.systemui.statusbar.phone.PanelView: boolean onEmptySpaceClick(float)>
<com.android.server.trust.TrustAgentWrapper: void onUnlockLockout(int)>
<com.android.systemui.qs.SlashDrawable: void setSlashed(boolean)>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: void onClosingFinished()>
<com.android.settingslib.wifi.WifiUtils: boolean isMeteredOverridden(android.net.wifi.WifiConfiguration)>
<com.android.systemui.analytics.DataCollector: void onNotificationDismissed()>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: void closeRemoteInput()>
<com.android.server.notification.ZenModeHelper: boolean setConfigLocked(android.service.notification.ZenModeConfig,android.content.ComponentName,java.lang.String)>
<com.android.systemui.fragments.ExtensionFragmentListener: void attachExtensonToFragment(android.view.View,java.lang.String,int,com.android.systemui.statusbar.policy.ExtensionController.Extension)>
<com.android.keyguard.KeyguardUpdateMonitor: void dispatchDreamingStopped()>
<com.android.server.biometrics.BiometricServiceBase: void <init>(android.content.Context)>
<com.android.systemui.qs.QSAnimator: void setOnKeyguard(boolean)>
<com.android.systemui.qs.tiles.UserDetailItemView: void bind(java.lang.String,android.graphics.Bitmap,int)>
<javax.microedition.khronos.opengles.GL11: void glClipPlanef(int,float[],int)>
<com.android.server.notification.SnoozeHelper: void writeXml(org.xmlpull.v1.XmlSerializer,boolean)>
<com.android.systemui.statusbar.notification.row.NotificationInlineImageCache: android.graphics.drawable.Drawable get(android.net.Uri)>
<com.android.systemui.assist.AssistOrbContainer: void onFinishInflate()>
<com.android.systemui.bubbles.BubbleView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.systemui.recents.views.RecentsView: void <init>(android.content.Context)>
<com.android.systemui.statusbar.notification.row.ExpandableView: void setFakeShadowIntensity(float,float,int,int)>
<com.android.server.pm.UserManagerService: boolean markGuestForDeletion(int)>
<com.android.systemui.shared.system.QuickStepContract: int getQuickStepTouchSlopPx()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onClick(android.view.View)>
<com.android.server.webkit.SystemInterface: void notifyZygote(boolean)>
<com.android.server.notification.ZenModeHelper: void addCallback(com.android.server.notification.ZenModeHelper.Callback)>
<com.android.settingslib.graph.BatteryMeterDrawableBase: void setShowPercent(boolean)>
<android.view.autofill.LoginTest: void testFocus_serviceDoesNotAutofill()>
<android.multiuser.BenchmarkRunner: boolean keepRunning()>
<com.android.systemui.statusbar.policy.OnHeadsUpChangedListener: void onHeadsUpUnPinned(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.localtransport.LocalTransport: android.content.Intent configurationIntent()>
<com.android.systemui.stackdivider.DividerHandleView: void setTouching(boolean,boolean)>
<com.android.systemui.statusbar.policy.AccessPointControllerImpl: void onUserSwitched(int)>
<com.android.keyguard.KeyguardUpdateMonitor: boolean hasLockscreenWallpaper()>
<com.android.server.timedetector.TimeDetectorStrategy.Callback: void acquireWakeLock()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setCameraDisabled(android.content.ComponentName,boolean)>
<com.android.server.pm.PackageManagerService: boolean removeWhitelistedRestrictedPermission(java.lang.String,java.lang.String,int,int)>
<com.android.systemui.qs.tiles.NightDisplayTile: android.metrics.LogMaker populate(android.metrics.LogMaker)>
<com.android.server.location.GnssLocationProvider: com.android.server.location.GnssStatusListenerHelper getGnssStatusProvider()>
<com.android.systemui.volume.CarVolumeItemAdapter: void onBindViewHolder(com.android.systemui.volume.CarVolumeItem.CarVolumeItemViewHolder,int)>
<com.android.systemui.statusbar.notification.row.ExpandableView: void setDimmed(boolean,boolean)>
<com.android.systemui.egg.MLand: int irand(int,int)>
<com.android.wallpapercropper.WallpaperCropActivity: void cropImageAndSetWallpaper(android.content.res.Resources,int,boolean)>
<com.android.server.IntentResolver: boolean dump(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,boolean,boolean)>
<com.android.systemui.classifier.HistoryEvaluator: void addStroke(float)>
<com.android.server.location.ActivityRecognitionProxy: com.android.server.location.ActivityRecognitionProxy createAndBind(android.content.Context,boolean,android.hardware.location.ActivityRecognitionHardware,int,int,int)>
<com.google.android.startop.iorap.ActivityHintEvent: void <init>(int,com.google.android.startop.iorap.ActivityInfo)>
<com.android.server.uri.UriGrantsManagerService: android.content.pm.ParceledListSlice getUriPermissions(java.lang.String,boolean,boolean)>
<com.android.server.location.GnssGeofenceProviderTest: void addGeofence_restart_added()>
<com.android.systemui.shared.system.WindowManagerWrapper: void setPipVisibility(boolean)>
<android.database.sqlite.SQLiteTokenizer: void tokenize(java.lang.String,int,java.util.function.Consumer)>
<com.android.settingslib.media.MediaDevice: java.lang.String getSummary()>
<com.android.server.statusbar.StatusBarManagerInternal: void startAssist(android.os.Bundle)>
<com.android.systemui.power.PowerNotificationWarnings: void updateLowBatteryWarning()>
<com.android.proxyhandler.SocketConnect: void connect(java.net.Socket,java.net.Socket)>
<com.android.systemui.statusbar.NotificationMediaManager: void clearCurrentMediaNotification()>
<com.android.server.policy.keyguard.KeyguardStateMonitor: void onHasLockscreenWallpaperChanged(boolean)>
<com.android.packageinstaller.wear.InstallTask: void <init>(android.content.Context,java.lang.String,android.os.ParcelFileDescriptor,com.android.packageinstaller.wear.PackageInstallerImpl.InstallListener,android.content.pm.PackageInstaller.Session,android.content.IntentSender)>
<com.android.systemui.statusbar.CommandQueue: void setIcon(java.lang.String,com.android.internal.statusbar.StatusBarIcon)>
<com.android.systemui.appops.AppOpsControllerImpl: java.util.List getActiveAppOps()>
<com.android.systemui.qs.tiles.HotspotTile: void handleSetListening(boolean)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void onRecentsAnimationStateChanged(boolean)>
<com.android.preload.ui.SwingUI: void ready()>
<android.net.ip.IpClientManager: boolean readPacketFilterComplete(byte[])>
<javax.microedition.khronos.egl.EGL10: boolean eglChooseConfig(javax.microedition.khronos.egl.EGLDisplay,int[],javax.microedition.khronos.egl.EGLConfig[],int,int[])>
<com.android.systemui.statusbar.phone.LockIcon: void update()>
<com.android.server.slice.SliceClientPermissions: void setHasFullAccess(boolean)>
<com.android.systemui.statusbar.policy.CallbackHandler: void setMobileDataEnabled(boolean)>
<com.android.systemui.statusbar.RemoteInputController: void closeRemoteInputs()>
<com.android.server.Watchdog: void init(android.content.Context,com.android.server.am.ActivityManagerService)>
<com.android.server.twilight.TwilightManager: void registerListener(com.android.server.twilight.TwilightListener,android.os.Handler)>
<com.android.printspooler.ui.SelectPrinterActivity: android.content.Loader onCreateLoader(int,android.os.Bundle)>
<com.android.systemui.recents.views.TaskView: void onTaskBound(com.android.systemui.shared.recents.model.Task,boolean,int,android.graphics.Rect)>
<com.android.systemui.statusbar.policy.SecurityControllerImpl: boolean isVpnBranded()>
<com.android.server.notification.NotificationRecord: android.media.AudioAttributes getAudioAttributes()>
<com.android.server.usb.descriptors.report.TextReportCanvas: void openListItem()>
<android.app.backup.ForwardingBackupAgent: void onRestoreFinished()>
<com.android.server.utils.PriorityDump.PriorityDumper: void dumpCritical(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],boolean)>
<com.android.systemui.plugin.testoverlayplugin.PluginSettings: void onCreate(android.os.Bundle)>
<com.android.server.usb.descriptors.report.HTMLReportCanvas: void write(java.lang.String)>
<com.android.settingslib.bluetooth.PbapClientProfile: int getDrawableResource(android.bluetooth.BluetoothClass)>
<com.android.server.usb.UsbAlsaJackDetector: void pleaseStop()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setIsChildInGroup(boolean,com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<com.android.systemui.classifier.brightline.BrightLineFalsingManager: boolean isClassiferEnabled()>
<com.android.systemui.tuner.TunerActivity.SubSettingsFragment: void onDestroy()>
<com.android.systemui.shared.system.WindowManagerWrapper: int getNavBarPosition(int)>
<com.android.server.Watchdog: void setActivityController(android.app.IActivityController)>
<com.android.server.usb.descriptors.UsbACSelectorUnit: byte[] getSourceIDs()>
<com.android.settingslib.core.instrumentation.SharedPreferencesLogger: java.lang.String getString(java.lang.String,java.lang.String)>
<com.android.settingslib.widget.ActionButtonsPreference: com.android.settingslib.widget.ActionButtonsPreference setButton4OnClickListener(android.view.View.OnClickListener)>
<com.android.systemui.qs.tiles.DndTile: void handleDestroy()>
<com.android.systemui.statusbar.policy.NetworkControllerImpl.SubscriptionDefaults: int getDefaultVoiceSubId()>
<com.android.server.biometrics.BiometricServiceBase: void checkUseBiometricPermission()>
<com.android.server.audio.PlaybackActivityMonitor: void disableAudioForUid(boolean,int)>
<com.android.systemui.statusbar.notification.CustomInterpolatorTransformation: void <init>(int)>
<com.android.server.tv.TvInputManagerService: void onBootPhase(int)>
<com.android.printservice.recommendation.util.Preconditions: java.lang.CharSequence checkStringNotEmpty(java.lang.CharSequence,java.lang.Object)>
<com.android.systemui.statusbar.policy.HotspotControllerImpl: int getNumConnectedDevices()>
<com.android.server.timedetector.TimeDetectorStrategy: void suggestTime(android.app.timedetector.TimeSignal)>
<android.processor.view.inspector.PlatformInspectableProcessor: javax.lang.model.SourceVersion getSupportedSourceVersion()>
<com.android.systemui.statusbar.TransformableView: void transformTo(com.android.systemui.statusbar.TransformableView,float)>
<com.android.systemui.shared.system.ActivityOptionsCompat: android.app.ActivityOptions setFreezeRecentTasksList(android.app.ActivityOptions)>
<com.android.server.location.GnssNavigationMessageProviderTest: void isSupported_nativeIsSupported()>
<com.android.systemui.qs.tileimpl.QSTileImpl: int getMetricsCategory()>
<com.android.server.NetworkScoreService.ServiceHandler: void handleMessage(android.os.Message)>
<com.android.server.notification.ZenLog: void dump(java.io.PrintWriter,java.lang.String)>
<com.android.systemui.statusbar.StatusBarStateControllerImpl: boolean setState(int)>
<android.app.ResourcesPerfTest: void tearDown()>
<com.android.systemui.statusbar.policy.HeadsUpManager: void setUser(int)>
<com.android.printspooler.ui.PageAdapter: void <init>(android.content.Context,com.android.printspooler.ui.PageAdapter.ContentCallbacks,com.android.printspooler.ui.PageAdapter.PreviewArea)>
<android.net.util.SharedLog: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.keyguard.KeyguardPinBasedInputView: boolean onTouch(android.view.View,android.view.MotionEvent)>
<com.android.systemui.statusbar.phone.PanelView: float getOpeningHeight()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void checkSnoozeLeavebehind()>
<com.android.location.provider.LocationProviderBase: void onDisable()>
<com.android.systemui.statusbar.phone.StatusBar: void collapsePanel(boolean)>
<com.android.photos.BitmapRegionTileSource.BitmapSource: com.android.photos.SimpleBitmapRegionDecoder loadBitmapRegionDecoder()>
<com.android.server.AnyMotionDetector: void stop()>
<com.android.systemui.qs.QSSecurityFooter: void setListening(boolean)>
<com.android.systemui.statusbar.phone.DozeParameters: void <init>(android.content.Context)>
<com.android.systemui.shared.plugins.PluginInitializer: android.os.Looper getBgLooper()>
<com.android.systemui.qs.tileimpl.QSTileBaseView: void init(android.view.View.OnClickListener,android.view.View.OnClickListener,android.view.View.OnLongClickListener)>
<com.android.systemui.statusbar.phone.NotificationGroupManager: com.android.systemui.statusbar.notification.collection.NotificationEntry getGroupSummary(android.service.notification.StatusBarNotification)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onBootCompleted()>
<com.android.server.notification.ZenModeHelper: void setManualZenMode(int,android.net.Uri,java.lang.String,java.lang.String)>
<android.media.Session2Token: java.lang.String getPackageName()>
<android.media.MediaSession2.ControllerInfo: android.media.session.MediaSessionManager.RemoteUserInfo getRemoteUserInfo()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void updateDecorViews(boolean)>
<com.android.printspooler.ui.PrintActivity: void onStop()>
<com.android.localtransport.LocalTransport: int checkFullBackupSize(long)>
<com.android.server.usb.descriptors.UsbACMixerUnit: void <init>(int,byte,byte,int)>
<android.net.netlink.StructNlMsgErr: void pack(java.nio.ByteBuffer)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: android.view.View getIndicationArea()>
<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantDefaultPermissionsToDefaultUseOpenWifiApp(java.lang.String,int)>
<com.android.systemui.charging.WirelessChargingLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.gallery3d.exif.ExifInterface: long[] getTagLongValues(int)>
<com.android.systemui.qs.tileimpl.ButtonRelativeLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.notification.NotificationRecord: void recordSnoozed()>
<com.android.server.pm.ProtectedPackages: void <init>(android.content.Context)>
<com.android.systemui.plugins.qs.QSTile: android.metrics.LogMaker populate(android.metrics.LogMaker)>
<com.android.systemui.recents.views.TaskView: float getDimAlpha()>
<com.android.server.TelephonyRegistry: void notifyServiceStateForPhoneId(int,int,android.telephony.ServiceState)>
<com.android.keyguard.KeyguardPasswordView: int getPromptReasonStringRes(int)>
<com.android.server.pm.ShortcutBitmapSaver: java.lang.String getBitmapPathMayWaitLocked(android.content.pm.ShortcutInfo)>
<com.android.server.accounts.AccountManagerService: boolean removeAccountExplicitly(android.accounts.Account)>
<com.android.gallery3d.exif.ExifInterface: byte[] getTagByteValues(int)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: com.android.systemui.statusbar.notification.row.HybridNotificationView getSingleLineView()>
<com.android.systemui.qs.QSTileRevealController: void updateRevealedTiles(java.util.Collection)>
<com.android.systemui.SystemUIFactory.SystemUIRootComponent: com.android.systemui.util.leak.GarbageMonitor createGarbageMonitor()>
<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo findPersistentPreferredActivity(android.content.Intent,int)>
<com.android.server.notification.ConditionProviders: void notifyConditions(java.lang.String,com.android.server.notification.ManagedServices.ManagedServiceInfo,android.service.notification.Condition[])>
<com.android.server.LocationManagerService: java.lang.String getExtraLocationControllerPackage()>
<com.android.server.tv.TvInputHal.Callback: void onDeviceAvailable(android.media.tv.TvInputHardwareInfo,android.media.tv.TvStreamConfig[])>
<com.android.settingslib.bluetooth.LocalBluetoothProfileManager: com.android.settingslib.bluetooth.A2dpProfile getA2dpProfile()>
<com.android.systemui.statusbar.phone.PhoneStatusBarPolicy: void appTransitionStarting(int,long,long,boolean)>
<com.android.server.testing.shadows.ShadowRecoveryController: java.security.Key getKey(java.lang.String)>
<com.android.systemui.stackdivider.DividerView: void resizeStackDelayed(int,int,com.android.internal.policy.DividerSnapAlgorithm.SnapTarget)>
<com.android.systemui.statusbar.phone.StatusIconContainer: void onMeasure(int,int)>
<com.android.server.usb.descriptors.UsbInterfaceAssoc: void <init>(int,byte)>
<com.android.printspooler.model.RemotePrintDocument.UpdateResultCallbacks: void onUpdateCanceled()>
<com.android.keyguard.KeyguardUpdateMonitor: void dispatchFinishedGoingToSleep(int)>
<javax.microedition.khronos.opengles.GL10: void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<com.android.uiautomator.core.UiDevice: void resetWatcherTriggers()>
<com.android.keyguard.KeyguardPasswordView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.slice.SliceManagerService: void grantSlicePermission(java.lang.String,java.lang.String,android.net.Uri)>
<com.android.systemui.statusbar.AlertingNotificationManager: void setCallback(com.android.systemui.statusbar.NotificationLifetimeExtender.NotificationSafeToRemoveCallback)>
<com.android.settingslib.NetworkPolicyEditor: void setPolicyLimitBytes(android.net.NetworkTemplate,long)>
<com.android.settingslib.suggestions.SuggestionControllerMixin: void onServiceDisconnected()>
<com.android.systemui.qs.QSAnimator: void <init>(com.android.systemui.plugins.qs.QS,com.android.systemui.qs.QuickQSPanel,com.android.systemui.qs.QSPanel)>
<com.android.systemui.volume.VolumeDialogControllerImpl: void setCaptionsEnabled(boolean)>
<com.android.settingslib.core.lifecycle.events.OnCreateOptionsMenu: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>
<com.android.systemui.statusbar.notification.row.ExpandableView: void setWillBeGone(boolean)>
<com.android.systemui.statusbar.phone.StatusBar: void startPendingIntentDismissingKeyguard(android.app.PendingIntent,java.lang.Runnable)>
<com.android.server.usb.descriptors.UsbACFeatureUnit: int[] getControls()>
<com.android.systemui.statusbar.notification.stack.ExpandableViewState: void animateTo(android.view.View,com.android.systemui.statusbar.notification.stack.AnimationProperties)>
<com.android.server.twilight.TwilightState: void <init>(long,long)>
<com.android.systemui.util.leak.LeakReporter: void dumpLeak(int)>
<com.android.systemui.statusbar.NotificationMediaManager: boolean getShowCompactMediaSeekbar()>
<com.android.media.remotedisplay.RemoteDisplayProvider: void onDiscoveryModeChanged(int)>
<com.android.server.tv.TvRemoteService: void monitor()>
<com.android.systemui.statusbar.RemoteInputController.Callback: void onRemoteInputSent(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.systemui.statusbar.policy.SecurityControllerImpl: boolean hasCACertInCurrentUser()>
<com.android.systemui.plugins.qs.QSTile.Callback: void onShowDetail(boolean)>
<com.android.server.notification.RankingHelper: void dump(java.io.PrintWriter,java.lang.String,com.android.server.notification.NotificationManagerService.DumpFilter)>
<com.android.systemui.statusbar.policy.CallbackController: java.lang.Object observe(androidx.lifecycle.LifecycleOwner,java.lang.Object)>
<com.android.gallery3d.exif.ExifInterface: short getTrueTagKey(int)>
<com.android.systemui.DependencyProvider: com.android.settingslib.bluetooth.LocalBluetoothManager provideLocalBluetoothController(android.content.Context,android.os.Handler)>
<com.android.server.notification.NotificationRecord: boolean setIntercepted(boolean)>
<com.android.systemui.util.AsyncSensorManager: boolean flushImpl(android.hardware.SensorEventListener)>
<com.android.systemui.statusbar.policy.FlashlightControllerImpl: void setFlashlight(boolean)>
<com.android.systemui.car.CarNotificationInterruptionStateProvider: void <init>(android.content.Context)>
<com.android.systemui.shared.system.TaskStackChangeListeners: void onTaskCreated(int,android.content.ComponentName)>
<com.android.systemui.classifier.Stroke: int getCount()>
<com.android.server.biometrics.BiometricServiceBase: boolean isRestricted()>
<com.android.settingslib.volume.Util: java.lang.String logTag(java.lang.Class)>
<com.android.server.usb.UsbService: void requestAccessoryPermission(android.hardware.usb.UsbAccessory,java.lang.String,android.app.PendingIntent)>
<com.android.server.content.ContentService: void removePeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle)>
<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void setUseOpenWifiAppPackagesProvider(android.content.pm.PackageManagerInternal.PackagesProvider)>
<com.android.server.LocationManagerService: void setExtraLocationControllerPackageEnabled(boolean)>
<com.android.systemui.statusbar.notification.stack.AmbientState: boolean isExpansionChanging()>
<android.net.util.NetdService.NetdCommand: void run(android.net.INetd)>
<com.android.server.appbinding.AppBindingService.Lifecycle: void onStopUser(int)>
<com.android.server.slice.SliceClientPermissions.SliceAuthority: java.util.Collection getPaths()>
<com.android.systemui.qs.external.TileServices: void onStartSuccessful(android.os.IBinder)>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: boolean isDismissing()>
<com.android.systemui.power.PowerUI.WarningsUI: void updateSnapshot(com.android.systemui.powe.BatteryStateSnapshot)>
<com.android.commands.input.Input: void main(java.lang.String[])>
<com.android.systemui.biometrics.BiometricDialogView: void forceRemove()>
<com.android.gallery3d.exif.ExifTag: int getOffset()>
<com.android.systemui.shared.recents.model.Task: android.content.ComponentName getTopComponent()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glFramebufferTexture2DOES(int,int,int,int,int)>
<com.android.systemui.statusbar.StatusBarMobileView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.pm.dex.DexManager: void notifyPackageDataDestroyed(java.lang.String,int)>
<com.android.server.NewNetworkTimeUpdateService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.notification.ScheduleConditionProvider: void onSubscribe(android.net.Uri)>
<com.android.server.usb.descriptors.report.TextReportCanvas: void closeHeader(int)>
<com.android.server.display.color.DisplayTransformManager: boolean needsLinearColorMatrix(int)>
<android.graphics.perftests.PaintHasGlyphPerfTest: void testHasGlyph()>
<com.android.systemui.statusbar.car.CarBatteryController.BatteryViewHandler: void showBatteryView()>
<com.android.systemui.statusbar.CommandQueue: void onBiometricHelp(java.lang.String)>
<com.android.server.notification.NotificationManagerService: void handleSavePolicyFile()>
<android.app.PendingIntentPerfTest: void create()>
<com.android.systemui.doze.DozeScreenBrightness: void onReceive(android.content.Context,android.content.Intent)>
<com.android.server.autofill.AutofillManagerService: void onSwitchUser(int)>
<android.media.Controller2Link: void notifyConnected(int,android.os.Bundle)>
<com.android.server.LockGuard: java.lang.Object installNewLock(int,boolean)>
<com.android.systemui.statusbar.phone.RotationButton: void setCanShowRotationButton(boolean)>
<com.android.systemui.globalactions.GlobalActionsComponent: void onGlobalActionsShown()>
<com.android.systemui.shared.system.LatencyTrackerCompat: boolean isEnabled(android.content.Context)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void animateCollapsePanels(float)>
<com.android.systemui.qs.QSPanel: com.android.systemui.qs.QSSecurityFooter getFooter()>
<com.android.server.locksettings.LockSettingsService: java.lang.String getKey(java.lang.String)>
<com.android.systemui.doze.DozeSuspendScreenStatePreventingAdapter: com.android.systemui.doze.DozeMachine.Service wrapIfNeeded(com.android.systemui.doze.DozeMachine.Service,com.android.systemui.statusbar.phone.DozeParameters)>
<com.android.server.accessibility.KeyEventDispatcher: boolean handleMessage(android.os.Message)>
<com.android.server.appbinding.finders.AppServiceFinder: java.lang.String getTargetPackage(int)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void lockScrollTo(android.view.View)>
<com.android.server.locksettings.SyntheticPasswordManager: com.android.server.locksettings.SyntheticPasswordManager.AuthenticationResult unwrapPasswordBasedSyntheticPassword(android.service.gatekeeper.IGateKeeperService,long,byte[],int,com.android.internal.widget.ICheckCredentialProgressCallback)>
<com.android.server.timezone.RulesManagerIntentHelper: void sendTimeZoneOperationStaged()>
<com.android.systemui.util.Utils: boolean isHeadlessRemoteDisplayProvider(android.content.pm.PackageManager,java.lang.String)>
<com.android.settingslib.net.SummaryForAllUidLoader: void onStartLoading()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void clearNotificationEffects()>
<com.android.systemui.recents.utilities.AnimationProps: com.android.systemui.recents.utilities.AnimationProps setStartDelay(int,int)>
<com.android.keyguard.KeyguardUpdateMonitor: boolean getUserUnlockedWithBiometric(int)>
<com.android.shell.BugreportStorageProvider: android.net.Uri buildNotificationUri(java.lang.String)>
<com.android.systemui.qs.tiles.IntentTile: void handleLongClick()>
<com.android.server.LocationManagerService: boolean addGnssMeasurementsListener(android.location.IGnssMeasurementsListener,java.lang.String)>
<com.android.systemui.volume.CarVolumeItem: void setPrimaryIcon(android.graphics.drawable.Drawable)>
<com.android.server.ServiceWatcher: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>
<com.android.preload.actions.ComputeThresholdXAction: void run()>
<com.android.systemui.plugins.qs.QSTile.Callback: void onScanStateChanged(boolean)>
<com.android.systemui.globalactions.GlobalActionsDialog: void destroy()>
<com.android.printspooler.model.PrintSpoolerService: void onDestroy()>
<com.android.systemui.pip.phone.PipTouchHandler: void setTouchEnabled(boolean)>
<com.android.server.usb.descriptors.report.TextReportCanvas: void openList()>
<com.android.systemui.shared.system.RemoteAnimationTargetCompat: void release()>
<com.android.systemui.recents.views.TaskStackView: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.printservice.recommendation.plugin.mdnsFilter.MDNSFilterPlugin: void start(com.android.printservice.recommendation.PrintServicePlugin.PrinterDiscoveryCallback)>
<com.android.settingslib.suggestions.SuggestionControllerMixin: void <init>(android.content.Context,com.android.settingslib.suggestions.SuggestionControllerMixin.SuggestionControllerHost,com.android.settingslib.core.lifecycle.Lifecycle,android.content.ComponentName)>
<com.android.server.input.InputManagerService: boolean canDispatchToDisplay(int,int)>
<com.android.server.testing.shadows.ShadowBackupDataInput: int getDataSize()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setSecureSetting(android.content.ComponentName,java.lang.String,java.lang.String)>
<com.android.keyguard.KeyguardSecurityContainer.SecurityCallback: void onCancelClicked()>
<com.android.systemui.qs.QSDetail.Callback: void onToggleStateChanged(boolean)>
<com.android.uiautomator.core.UiObject: boolean isFocused()>
<com.android.server.location.ComprehensiveCountryDetector: void setCountryListener(android.location.CountryListener)>
<javax.microedition.khronos.opengles.GL10: void glOrthox(int,int,int,int,int,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean setAlwaysOnVpnPackage(android.content.ComponentName,java.lang.String,boolean,java.util.List)>
<com.android.server.pm.dex.DexoptOptions: boolean isCheckForProfileUpdates()>
<com.android.systemui.assist.AssistOrbContainer: void show(boolean,boolean)>
<com.android.systemui.qs.tiles.WifiTile: com.android.systemui.plugins.qs.DetailAdapter getDetailAdapter()>
<com.android.keyguard.KeyguardHostView: void onPause()>
<com.android.systemui.stackdivider.DividerView: int getCurrentPosition()>
<com.android.systemui.recents.RecentsSystemUser: void sendLaunchRecentsEvent()>
<com.android.systemui.globalactions.GlobalActionsDialog: void onDismiss(android.content.DialogInterface)>
<com.android.systemui.bubbles.animation.PhysicsAnimationLayout: void removeView(android.view.View)>
<com.android.systemui.statusbar.phone.NavigationModeController: android.content.Context getCurrentUserContext()>
<com.android.powermodel.ActivityReport: com.google.common.collect.ImmutableList getAllApps()>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void updateExpandButtons(boolean)>
<com.android.server.accessibility.ActionReplacingCallback: void setFindAccessibilityNodeInfoResult(android.view.accessibility.AccessibilityNodeInfo,int)>
<android.net.ip.IpClientManager: boolean setL2KeyAndGroupHint(java.lang.String,java.lang.String)>
<com.android.systemui.qs.tileimpl.QSTileImpl.ResourceIcon: android.graphics.drawable.Drawable getDrawable(android.content.Context)>
<com.android.systemui.statusbar.phone.ScrimController.Callback: boolean shouldTimeoutWallpaper()>
<com.android.systemui.statusbar.phone.DozeParameters: long getWallpaperFadeOutDuration()>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationViewWrapper: int getExtraMeasureHeight()>
<com.android.systemui.statusbar.phone.LightBarController: void onNavigationVisibilityChanged(int,int,boolean,int,boolean)>
<com.android.systemui.plugins.qs.QS: boolean isCustomizing()>
<com.android.server.notification.GroupHelper.Callback: void removeAutoGroupSummary(int,java.lang.String)>
<com.android.systemui.statusbar.phone.EdgeBackGestureHandler: void onDisplayChanged(int)>
<com.android.powermodel.CsvParser.LineProcessor: void onLine(int,java.util.ArrayList)>
<android.media.MediaSession2.ControllerInfo: int hashCode()>
<android.net.ipmemorystore.IOnStatusListener: void onComplete(android.net.ipmemorystore.StatusParcelable)>
<com.android.systemui.recents.model.RecentsTaskLoader: void onTrimMemory(int)>
<com.android.systemui.recents.views.TaskStackAnimationHelper.Callbacks: void onPrepareLaunchTargetForEnterAnimation()>
<com.android.server.accessibility.EventStreamTransformation: void onKeyEvent(android.view.KeyEvent,int)>
<com.android.systemui.statusbar.phone.PanelView: int getMaxPanelHeight()>
<com.android.systemui.util.leak.LeakDetector: void trackGarbage(java.lang.Object)>
<com.android.systemui.tuner.RadioListPreference: java.lang.CharSequence getSummary()>
<android.graphics.perftests.PaintHasGlyphPerfTest: void <init>(java.lang.String,java.lang.String)>
<com.android.keyguard.KeyguardUpdateMonitor: com.android.keyguard.KeyguardUpdateMonitor.DisplayClientState getCachedDisplayClientState()>
<com.android.server.pm.dex.DexManager: void load(java.util.Map)>
<com.android.server.TelephonyRegistry: void notifyRadioPowerStateChanged(int,int,int)>
<com.android.systemui.recents.views.RecentsView: void onBusEvent(com.android.systemui.recents.events.activity.EnterRecentsWindowAnimationCompletedEvent)>
<com.android.server.biometrics.fingerprint.FingerprintService: java.lang.String getManageBiometricPermission()>
<com.android.server.pm.PackageSettingBase: boolean getInstantApp(int)>
<com.android.systemui.statusbar.phone.StatusBar: void setOccluded(boolean)>
<com.android.systemui.statusbar.phone.NotificationIconContainer: void setOpenedAmount(float)>
<com.android.systemui.shared.system.ActivityManagerWrapper: boolean showVoiceSession(android.os.IBinder,android.os.Bundle,int)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void <init>(android.content.Context,android.util.AttributeSet,boolean,com.android.systemui.statusbar.notification.stack.NotificationRoundnessManager,com.android.systemui.statusbar.AmbientPulseManager,com.android.systemui.statusbar.notification.DynamicPrivacyController,com.android.systemui.statusbar.policy.ConfigurationController,com.android.systemui.plugins.ActivityStarter,com.android.systemui.plugins.statusbar.StatusBarStateController)>
<com.android.systemui.recents.views.TaskViewThumbnail: void setSizeToFit(boolean)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void remQsTile(android.content.ComponentName)>
<com.android.systemui.statusbar.notification.NotificationDozeHelper: void updateGrayscale(android.widget.ImageView,float)>
<com.android.systemui.statusbar.ViewTransformationHelper.CustomTransformation: boolean transformTo(com.android.systemui.statusbar.notification.TransformState,com.android.systemui.statusbar.TransformableView,float)>
<com.android.systemui.statusbar.notification.NotificationUtils: boolean useNewInterruptionModel(android.content.Context)>
<com.android.server.biometrics.EnrollClient: int stop(boolean)>
<com.android.systemui.qs.PageIndicator: void onMeasure(int,int)>
<com.android.systemui.statusbar.phone.StatusBar: android.view.View getAmbientIndicationContainer()>
<com.android.server.autofill.AutofillManagerService: void onSettingsChanged(int,java.lang.String)>
<android.net.netlink.RtNetlinkNeighborMessage: int getRequiredSpace()>
<com.android.server.notification.ManagedServices: void addApprovedList(java.lang.String,int,boolean)>
<com.android.systemui.classifier.brightline.BrightLineFalsingManager: void onQsDown()>
<com.android.server.notification.NotificationRecord: void recordDismissalSurface(int)>
<javax.microedition.khronos.opengles.GL10: void glDepthRangef(float,float)>
<com.android.systemui.shared.plugins.PluginManagerImpl: com.android.systemui.shared.plugins.PluginEnabler getPluginEnabler()>
<com.android.systemui.bubbles.animation.StackAnimationController: float flingStackThenSpringToEdge(float,float,float)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void reportFailedPasswordAttempt(int)>
<com.android.systemui.statusbar.policy.BatteryControllerImpl: void dispatchDemoCommand(java.lang.String,android.os.Bundle)>
<android.net.ip.IpClientCallbacks: void onPreDhcpAction()>
<com.android.gallery3d.glrenderer.GLCanvas: void drawMesh(com.android.gallery3d.glrenderer.BasicTexture,int,int,int,int,int,int)>
<com.android.systemui.qs.QSFragment: void onViewCreated(android.view.View,android.os.Bundle)>
<com.android.server.policy.PhoneWindowManager: void setPipVisibilityLw(boolean)>
<javax.obex.ServerSession: void run()>
<com.android.server.inputmethod.InputMethodManagerService: java.util.List getInputMethodList(int)>
<com.android.printspooler.model.PageContentRepository: void releasePageContentProvider(com.android.printspooler.model.PageContentRepository.PageContentProvider)>
<com.android.server.usb.descriptors.report.TextReportCanvas: void closeListItem()>
<com.android.server.pm.IntentFilterVerificationState: java.util.ArrayList getFilters()>
<com.android.systemui.classifier.FalsingManagerProxy: void cleanup()>
<com.android.systemui.statusbar.CommandQueue: void showAssistDisclosure()>
<com.android.systemui.qs.tiles.IntentTile: void handleClick()>
<com.android.settingslib.location.SettingsInjector: void <init>(android.content.Context)>
<com.android.server.ConnectivityService: int untether(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.notification.stack.AmbientState: void onBeginDrag(com.android.systemui.statusbar.notification.row.ExpandableView)>
<com.android.location.provider.ActivityRecognitionProvider: boolean enableActivityEvent(java.lang.String,int,long)>
<com.android.systemui.recents.RecentsActivity: void onBusEvent(com.android.systemui.recents.events.activity.HideRecentsEvent)>
<com.android.server.location.AbstractLocationProvider: void <init>(android.content.Context,com.android.server.location.AbstractLocationProvider.LocationProviderManager)>
<com.android.server.pm.PackageManagerService: java.lang.String getSystemTextClassifierPackageName()>
<android.net.netlink.RtNetlinkNeighborMessage: java.lang.String toString()>
<com.android.systemui.recents.OverviewProxyService: void notifyBackAction(boolean,int,int,boolean,boolean)>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: void onLayout(boolean,int,int,int,int)>
<com.android.server.devicepolicy.DeviceAdminServiceController: void startServiceForOwner(java.lang.String,int,java.lang.String)>
<android.net.netlink.StructNlAttr: void pack(java.nio.ByteBuffer)>
<com.android.systemui.statusbar.phone.StatusBarIconController.IconManager: com.android.systemui.statusbar.StatusBarMobileView addMobileIcon(int,java.lang.String,com.android.systemui.statusbar.phone.StatusBarSignalPolicy.MobileIconState)>
<com.android.systemui.statusbar.phone.NavigationBarFragment: void finishBarAnimations()>
<com.android.systemui.statusbar.phone.ButtonDispatcher: void setCurrentView(android.view.View)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void hideRecentApps(boolean,boolean)>
<com.android.systemui.statusbar.notification.AnimatableProperty: int getAnimationEndTag()>
<com.android.server.ConnectivityService: com.android.server.connectivity.ProxyTracker makeProxyTracker()>
<com.android.server.location.MockProvider: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.settingslib.RestrictedSwitchPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.gallery3d.glrenderer.GLES20Canvas: com.android.gallery3d.glrenderer.GLId getGLId()>
<com.android.settingslib.widget.LayoutPreference: boolean isAllowDividerBelow()>
<com.android.systemui.power.PowerUI: void start()>
<com.android.settingslib.applications.ServiceListing: void setListening(boolean)>
<com.android.systemui.fragments.FragmentService.FragmentCreator: com.android.systemui.qs.QSFragment createQSFragment()>
<com.android.systemui.statusbar.phone.LightBarTransitionsController.DarkIntensityApplier: void applyDarkIntensity(float)>
<com.android.systemui.stackdivider.ForcedResizableInfoActivity: boolean onTouch(android.view.View,android.view.MotionEvent)>
<com.android.packageinstaller.wear.WearPackageInstallerService: android.os.IBinder onBind(android.content.Intent)>
<com.android.settingslib.drawable.CircleFramedDrawable: int getOpacity()>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: void makeInactive(boolean)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int logoutUser(android.content.ComponentName)>
<com.android.server.biometrics.BiometricServiceBase: void handleAcquired(long,int,int)>
<com.android.systemui.statusbar.phone.StatusBar: void startActivity(android.content.Intent,boolean)>
<com.android.settingslib.wifi.AccessPoint: void <init>(android.content.Context,android.os.Bundle)>
<com.android.server.pm.PackageInstallerService: android.content.pm.ParceledListSlice getMySessions(java.lang.String,int)>
<com.android.server.policy.PhoneWindowManager: boolean setAodShowing(boolean)>
<com.android.keyguard.clock.AnalogClockController: java.lang.String getName()>
<android.text.StaticLayoutMultithreadPerfTest: void testCreate_RandomText_Thread_4()>
<android.media.BufferingParams: int getInitialMarkMs()>
<com.android.systemui.util.wakelock.WakeLock: java.lang.Runnable wrapImpl(com.android.systemui.util.wakelock.WakeLock,java.lang.Runnable)>
<com.android.server.ExtconStateObserver: java.lang.Object parseState(com.android.server.ExtconUEventObserver.ExtconInfo,java.lang.String)>
<com.android.systemui.qs.tileimpl.QSTileImpl: void refreshState()>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getStorageEncryptionStatus(java.lang.String,int)>
<com.android.systemui.statusbar.AlertingNotificationManager: void addAlertEntry(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.systemui.qs.TileLayout: void removeAllViews()>
<com.android.server.usb.descriptors.UsbDeviceDescriptor: int getDevSubClass()>
<com.android.systemui.statusbar.policy.UserSwitcherController: void switchTo(com.android.systemui.statusbar.policy.UserSwitcherController.UserRecord)>
<com.android.server.notification.NotificationManagerService.NotificationAssistants: boolean isEnabled()>
<com.android.systemui.classifier.FalsingManagerImpl: void onTrackingStopped()>
<com.android.keyguard.KeyguardPatternView: void onPause()>
<com.android.systemui.recents.utilities.Utilities: long getNextFrameNumber(android.view.Surface)>
<com.android.systemui.ExpandHelper: void setEnabled(boolean)>
<com.android.server.usb.descriptors.UsbACMidiEndpoint: byte[] getJackIds()>
<com.android.server.telecom.TelecomLoaderService: void <init>(android.content.Context)>
<com.google.android.startop.iorap.AppLaunchEvent: int describeContents()>
<com.android.systemui.statusbar.StatusBarWifiView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.gallery3d.glrenderer.RawTexture: void setIsFlippedVertically(boolean)>
<com.android.server.pm.UserManagerService: boolean canAddMoreManagedProfiles(int,boolean)>
<com.android.keyguard.KeyguardHostView: void reset()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean isGroupExpansionChanging()>
<android.media.Controller2Link: void onSessionCommand(int,android.media.Session2Command,android.os.Bundle,android.os.ResultReceiver)>
<com.android.server.locksettings.recoverablekeystore.SecureBox: byte[] decrypt(java.security.PrivateKey,byte[],byte[],byte[])>
<com.android.server.inputmethod.InputMethodManagerService: void onServiceDisconnected(android.content.ComponentName)>
<com.android.settingslib.bluetooth.HearingAidProfile: java.lang.String toString()>
<com.android.server.pm.UserManagerService: android.os.ParcelFileDescriptor getUserIcon(int)>
<com.android.systemui.qs.external.TileLifecycleManager: void onClick(android.os.IBinder)>
<com.android.systemui.tuner.BatteryPreference: void onAttached()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void updateChildrenHeaderAppearance()>
<com.android.server.usb.UsbAlsaManager: void logDevices(java.lang.String)>
<com.android.server.IntentResolver: boolean isPackageForFilter(java.lang.String,android.content.IntentFilter)>
<com.android.server.role.RoleUserState: boolean addRoleHolder(java.lang.String,java.lang.String)>
<com.android.server.biometrics.fingerprint.FingerprintService: boolean hasReachedEnrollmentLimit(int)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: com.android.systemui.statusbar.notification.row.ExpandableView getViewBeforeView(com.android.systemui.statusbar.notification.row.ExpandableView)>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: int getFocusState()>
<com.android.server.usb.UsbHostManager: android.os.ParcelFileDescriptor openDevice(java.lang.String,com.android.server.usb.UsbUserSettingsManager,java.lang.String,int)>
<com.android.server.media.MediaRouterService: void <init>(android.content.Context)>
<com.android.systemui.recents.model.HighResThumbnailLoader: void setFlingingFast(boolean)>
<com.android.systemui.statusbar.policy.AccessPointControllerImpl: void addAccessPointCallback(com.android.systemui.statusbar.policy.NetworkController.AccessPointController.AccessPointCallback)>
<com.android.packageinstaller.InstallFailed.OutOfSpaceDialog: void onAttach(android.content.Context)>
<com.android.server.usb.descriptors.UsbInterfaceAssoc: byte getFunctionSubClass()>
<com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer: void prepareExpansionChanged()>
<com.android.systemui.qs.QSContainerImpl: boolean performClick()>
<com.android.systemui.SwipeHelper: long getMaxEscapeAnimDuration()>
<com.android.keyguard.KeyguardSecurityViewFlipper: void setLockPatternUtils(com.android.internal.widget.LockPatternUtils)>
<com.android.server.usb.UsbDeviceManager: void setCurrentFunctions(long)>
<com.android.systemui.recents.model.TaskStack.TaskStackCallbacks: void onStackTasksUpdated(com.android.systemui.recents.model.TaskStack)>
<com.android.systemui.qs.QSSecurityFooter: void configSubtitleVisibility(boolean,boolean,boolean,boolean,android.view.View)>
<com.android.systemui.qs.tiles.FlashlightTile: void onFlashlightChanged(boolean)>
<com.android.systemui.qs.QSCarrier: void <init>(android.content.Context)>
<com.android.server.pm.PackageManagerService: void deletePreloadsFileCache()>
<com.android.systemui.globalactions.GlobalActionsDialog.MyAdapter: int countListItems()>
<com.android.systemui.assist.ui.InvocationLightsView: void onDraw(android.graphics.Canvas)>
<com.android.server.pm.PackageInstallerService: void registerCallback(android.content.pm.IPackageInstallerCallback,int)>
<com.android.systemui.statusbar.policy.FlashlightController: boolean isEnabled()>
<com.android.server.soundtrigger.SoundTriggerLogger: void dump(java.io.PrintWriter)>
<com.android.server.NativeDaemonEvent: java.lang.String getField(int)>
<com.android.systemui.statusbar.notification.row.ExpandableView: boolean showingAmbientPulsing()>
<com.android.server.NetworkManagementService: void setIPv6AddrGenMode(java.lang.String,int)>
<com.android.keyguard.KeyguardPatternView: java.lang.CharSequence getTitle()>
<android.media.Session2Token: int describeContents()>
<com.android.server.NetworkScorerAppManager.SettingsFacade: boolean putInt(android.content.Context,java.lang.String,int)>
<com.android.server.signedconfig.SignedConfig.PerSdkConfig: void <init>(int,int,java.util.Map)>
<com.android.settingslib.fuelgauge.PowerWhitelistBackend: void refreshList()>
<com.android.systemui.recents.utilities.AnimationProps: void <init>(int,int,android.view.animation.Interpolator)>
<com.android.systemui.statusbar.policy.BatteryController: void getEstimatedTimeRemainingString(com.android.systemui.statusbar.policy.BatteryController.EstimateFetchCompletion)>
<com.android.settingslib.bluetooth.MapClientProfile: boolean connect(android.bluetooth.BluetoothDevice)>
<com.android.systemui.keyguard.KeyguardViewMediator: boolean isSecure()>
<com.android.systemui.statusbar.phone.PanelBar: void onExpandingFinished()>
<android.perftests.utils.StubActivity: android.content.Intent createLaunchIntent(android.content.Context)>
<android.net.netlink.NetlinkErrorMessage: android.net.netlink.StructNlMsgErr getNlMsgError()>
<com.android.systemui.statusbar.CastDrawable: void setAlpha(int)>
<com.android.systemui.statusbar.KeyboardShortcuts: void toggle(android.content.Context,int)>
<com.android.systemui.shared.recents.utilities.RectFEvaluator: android.graphics.RectF evaluate(float,android.graphics.RectF,android.graphics.RectF)>
<com.android.server.location.LocationBlacklist: void <init>(android.content.Context,android.os.Handler)>
<com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer: void removeNotification(com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<com.android.systemui.recents.misc.ReferenceCountedTrigger: void increment()>
<com.android.server.notification.ManagedServices: void writeXml(org.xmlpull.v1.XmlSerializer,boolean,int)>
<com.android.settingslib.bluetooth.BluetoothUtils.ErrorListener: void onShowError(android.content.Context,java.lang.String,int)>
<com.android.systemui.statusbar.phone.ExpandableIndicator: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: int getContainerChildCount()>
<com.android.uiautomator.core.UiDevice: void sleep()>
<com.android.settingslib.CustomDialogPreferenceCompat: void setOnShowListener(android.content.DialogInterface.OnShowListener)>
<com.android.systemui.statusbar.phone.DozeScrimController: boolean isPulsing()>
<com.android.systemui.statusbar.policy.SecurityController: java.lang.String getProfileOwnerName()>
<com.android.systemui.shared.recents.model.TaskKeyLruCache: void dump(java.lang.String,java.io.PrintWriter)>
<com.android.systemui.recents.views.TaskStackView: void getCurrentTaskTransforms(java.util.ArrayList,java.util.ArrayList)>
<com.android.systemui.bubbles.BubbleController: android.graphics.Rect getTouchableRegion()>
<com.android.settingslib.bluetooth.MapClientProfile: boolean disconnect(android.bluetooth.BluetoothDevice)>
<com.android.printservice.recommendation.util.Preconditions: java.lang.CharSequence checkStringNotEmpty(java.lang.CharSequence)>
<com.android.settingslib.applications.AppUtils: boolean isHiddenSystemModule(android.content.Context,java.lang.String)>
<com.android.keyguard.KeyguardSecurityViewFlipper: void onResume(int)>
<com.android.media.tv.remoteprovider.TvRemoteProvider: android.content.Context getContext()>
<com.android.systemui.recents.views.TaskViewTransform: void reset(com.android.systemui.recents.views.TaskView)>
<com.android.settingslib.widget.BarChartPreference: void initializeBarChart(com.android.settingslib.widget.BarChartInfo)>
<com.android.systemui.statusbar.phone.StatusBar: void dismissKeyguardThenExecute(com.android.systemui.plugins.ActivityStarter.OnDismissAction,java.lang.Runnable,boolean)>
<com.android.settingslib.users.AppRestrictionsHelper: boolean isPackageSelected(java.lang.String)>
<com.android.systemui.statusbar.notification.stack.NotificationListContainer: int getContainerChildCount()>
<com.android.systemui.recents.views.grid.TaskViewFocusFrame: void <init>(android.content.Context)>
<com.android.location.provider.LocationProviderBase: void onSetRequest(com.android.location.provider.ProviderRequestUnbundled,android.os.WorkSource)>
<com.android.systemui.Dependency: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.systemui.egg.MLand: boolean onTrackballEvent(android.view.MotionEvent)>
<com.android.server.policy.PhoneWindowManager: void finishedWakingUp(int)>
<com.android.gallery3d.exif.ExifInterface: void clearExif()>
<com.android.systemui.doze.DozeFalsingManagerAdapter: void transitionTo(com.android.systemui.doze.DozeMachine.State,com.android.systemui.doze.DozeMachine.State)>
<com.android.server.NetworkScoreService: void disableScoring()>
<com.android.systemui.plugins.qs.QSTile.Callback: void onStateChanged(com.android.systemui.plugins.qs.QSTile.State)>
<com.android.server.display.BrightnessTracker: void <init>(android.content.Context,com.android.server.display.BrightnessTracker.Injector)>
<com.android.server.biometrics.BiometricServiceBase: java.util.List getEnrolledTemplates(int)>
<com.android.server.biometrics.AuthenticationClient: boolean onEnrollResult(android.hardware.biometrics.BiometricAuthenticator.Identifier,int)>
<com.android.keyguard.KeyguardUpdateMonitor.StrongAuthTracker: boolean isUnlockingWithBiometricAllowed()>
<com.android.server.usb.descriptors.UsbACHeaderInterface: void report(com.android.server.usb.descriptors.report.ReportCanvas)>
<com.android.systemui.assist.ui.DisplayUtils: int getWidth(android.content.Context)>
<com.android.server.notification.PreferencesHelper: void updateNotificationChannel(java.lang.String,int,android.app.NotificationChannel,boolean)>
<android.database.TableHelper.CursorReader: void read()>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper.Callback: float getAffordanceFalsingFactor()>
<com.android.keyguard.KeyguardSecurityContainer: void showMessage(java.lang.CharSequence,android.content.res.ColorStateList)>
<com.android.server.display.utils.RollingBuffer: void clear()>
<com.android.systemui.statusbar.phone.StatusBarTouchableRegionManager: void onComputeInternalInsets(android.view.ViewTreeObserver.InternalInsetsInfo)>
<com.android.server.biometrics.BiometricServiceBase.ServiceListener: void onAuthenticationFailed(long)>
<com.android.server.notification.NotificationManagerInternal: android.app.NotificationChannel getNotificationChannel(java.lang.String,int,java.lang.String)>
<com.android.server.locksettings.LockSettingsService.Lifecycle: void onCleanupUser(int)>
<com.android.systemui.statusbar.CommandQueue: void showShutdownUi(boolean,java.lang.String)>
<com.android.systemui.recents.misc.SystemServicesProxy: int getProcessUser()>
<com.android.server.ConnectivityService: int registerNetworkAgent(android.os.Messenger,android.net.NetworkInfo,android.net.LinkProperties,android.net.NetworkCapabilities,int,android.net.NetworkMisc)>
<com.android.server.wallpaper.WallpaperManagerService: void <init>(android.content.Context)>
<android.net.ip.IIpClient: void addNattKeepalivePacketFilter(int,android.net.NattKeepalivePacketDataParcelable)>
<com.android.packageinstaller.PackageInstalledReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.android.server.textclassifier.TextClassificationManagerService: void onSuggestSelection(android.view.textclassifier.TextClassificationSessionId,android.view.textclassifier.TextSelection.Request,android.service.textclassifier.ITextClassifierCallback)>
<com.android.settingslib.RestrictedLockImageSpan: int getSize(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Paint.FontMetricsInt)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector textContains(java.lang.String)>
<com.android.systemui.classifier.HumanInteractionClassifier: void onTouchEvent(android.view.MotionEvent)>
<com.android.systemui.DependencyBinder: com.android.systemui.statusbar.policy.CastController provideCastController(com.android.systemui.statusbar.policy.CastControllerImpl)>
<com.android.uiautomator.core.UiScrollable: com.android.uiautomator.core.UiScrollable setAsHorizontalList()>
<com.android.settingslib.wifi.WifiStatusTracker: void setListening(boolean)>
<com.android.systemui.statusbar.notification.row.NotificationInlineImageResolver.ImageCache: boolean hasEntry(android.net.Uri)>
<com.android.preload.classdataretrieval.hprof.GeneralHprofDumpHandler: void addHandler(com.android.ddmlib.ClientData.IHprofDumpHandler)>
<com.android.systemui.assist.AssistManager: void onInvocationProgress(int,float)>
<com.android.settingslib.CustomEditTextPreferenceCompat: android.app.Dialog getDialog()>
<com.android.systemui.SwipeHelper: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.settingslib.license.LicenseHtmlLoader: void <init>(android.content.Context)>
<com.android.systemui.recents.OverviewProxyService.OverviewProxyListener: void onNavBarButtonAlphaChanged(float,boolean)>
<com.android.systemui.classifier.FalsingManagerProxy: void onNotificatonStartDismissing()>
<com.android.settingslib.widget.AnimatedImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.android.systemui.qs.external.CustomTile: void updateState(android.service.quicksettings.Tile)>
<android.app.backup.ForwardingBackupAgent: void onCreate()>
<android.database.SQLiteDatabasePerfTest: void testSelectMultipleRows()>
<com.android.systemui.statusbar.NotificationLockscreenUserManagerImpl: boolean shouldHideNotifications(java.lang.String)>
<com.android.settingslib.bluetooth.HearingAidProfile: int getConnectionStatus(android.bluetooth.BluetoothDevice)>
<com.android.systemui.statusbar.notification.collection.NotificationRowBinderImpl: void <init>(android.content.Context,boolean)>
<com.android.server.usb.UsbAlsaJackDetector: boolean isOutputJackConnected()>
<com.android.systemui.statusbar.CommandQueue: void <init>(android.content.Context)>
<com.android.server.appwidget.AppWidgetService: void onSwitchUser(int)>
<com.android.server.policy.GlobalActionsProvider.GlobalActionsListener: void onGlobalActionsDismissed()>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationCustomViewWrapper: void setLegacy(boolean)>
<com.android.keyguard.KeyguardClockSwitch: void setTextSize(int,float)>
<com.android.server.utils.PriorityDump.PriorityDumper: void dumpHigh(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],boolean)>
<com.android.server.biometrics.iris.IrisService: int getLockoutMode()>
<com.android.systemui.MultiListLayout: void setAdapter(com.android.systemui.MultiListLayout.MultiListAdapter)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean isChildInGroup()>
<com.android.server.accounts.AccountManagerService: void addAccount(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String,java.lang.String[],boolean,android.os.Bundle)>
<com.android.keyguard.KeyguardUpdateMonitor: com.android.internal.telephony.IccCardConstants.State getSimState(int)>
<com.android.server.usb.descriptors.UsbACMidiEndpoint: void report(com.android.server.usb.descriptors.report.ReportCanvas)>
<com.android.settingslib.media.BluetoothMediaDevice: java.lang.String getId()>
<com.android.systemui.statusbar.phone.ButtonDispatcher: boolean isVisible()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setOverScrolledPixels(float,boolean,boolean)>
<com.android.keyguard.AlphaOptimizedImageButton: boolean hasOverlappingRendering()>
<android.net.ipmemorystore.IOnL2KeyResponseListener: void onL2KeyResponse(android.net.ipmemorystore.StatusParcelable,java.lang.String)>
<com.google.android.startop.iorap.AppLaunchEvent.ActivityLaunched: java.lang.String toStringBody()>
<com.android.server.biometrics.fingerprint.FingerprintUtils: java.util.List getBiometricsForUser(android.content.Context,int)>
<com.android.systemui.statusbar.phone.StatusBar: boolean isDeviceInteractive()>
<com.android.settingslib.applications.ApplicationsState.CompoundFilter: void init(android.content.Context)>
<com.android.server.pm.IntentFilterVerificationState: boolean isVerified()>
<android.view.textclassifier.TextClassificationManagerPerfTest: void tearDown()>
<com.android.systemui.statusbar.policy.DeviceProvisionedController: boolean isCurrentUserSetup()>
<com.android.systemui.stackdivider.DividerView: void onFinishInflate()>
<com.android.keyguard.PasswordTextView: java.lang.String getText()>
<com.android.systemui.doze.DozeSensors: void dump(java.io.PrintWriter)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onQsExpansionStarted(int)>
<com.android.systemui.statusbar.notification.row.ExpandableOutlineView: boolean drawChild(android.graphics.Canvas,android.view.View,long)>
<com.android.settingslib.CustomEditTextPreferenceCompat: void onDialogClosed(boolean)>
<com.android.server.ConnectivityService: com.android.server.connectivity.Tethering makeTethering()>
<com.android.uiautomator.core.Configurator: long getWaitForSelectorTimeout()>
<com.android.server.appop.AppOpsService: android.app.AppOpsManagerInternal.CheckOpsDelegate getAppOpsServiceDelegate()>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void setOccluded(boolean,boolean)>
<com.android.uiautomator.testrunner.UiAutomatorTestRunner: void start()>
<com.android.systemui.recents.RecentsImpl: com.android.systemui.recents.model.RecentsTaskLoadPlan consumeInstanceLoadPlan()>
<com.android.server.policy.keyguard.KeyguardStateMonitor: boolean isTrusted()>
<com.android.systemui.statusbar.policy.DateView: void onAttachedToWindow()>
<com.android.systemui.statusbar.policy.ZenModeControllerImpl: int getZen()>
<com.android.systemui.statusbar.phone.StatusIconContainer: void onViewAdded(android.view.View)>
<com.android.systemui.Prefs: boolean getBoolean(android.content.Context,java.lang.String,boolean)>
<com.android.systemui.tuner.LockscreenFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)>
<com.android.server.notification.PreferencesHelper: boolean isDelegateAllowed(java.lang.String,int,java.lang.String,int)>
<com.android.systemui.RegionInterceptingFrameLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.phone.StatusBar: void setNotificationSnoozed(android.service.notification.StatusBarNotification,com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper.SnoozeOption)>
<com.android.server.statusbar.StatusBarManagerService: void setIconVisibility(java.lang.String,boolean)>
<com.android.server.pm.dex.DexoptOptions: boolean isDowngrade()>
<com.android.settingslib.applications.ServiceListing: void removeCallback(com.android.settingslib.applications.ServiceListing.Callback)>
<com.android.printservice.recommendation.util.Preconditions: java.lang.Object[] checkArrayElementsNotNull(java.lang.Object[],java.lang.String)>
<com.android.server.pm.permission.BasePermission: java.lang.String toString()>
<com.android.server.accessibility.AccessibilityManagerService: void temporaryEnableAccessibilityStateUntilKeyguardRemoved(android.content.ComponentName,boolean)>
<com.android.systemui.recents.views.TaskStackView: java.lang.CharSequence getAccessibilityClassName()>
<com.android.systemui.settings.ToggleSliderView: boolean isChecked()>
<com.android.systemui.qs.external.TileServices: void destroy()>
<com.android.settingslib.inputmethod.InputMethodAndSubtypeEnablerManager: void refresh(android.content.Context,androidx.preference.PreferenceFragment)>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb: long setRecoverySecretTypes(int,int,int[])>
<com.android.systemui.Prefs: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void bindService(android.content.Context)>
<com.android.systemui.statusbar.notification.TextViewTransformState: void reset()>
<com.android.server.twilight.TwilightListener: void onTwilightStateChanged(com.android.server.twilight.TwilightState)>
<com.android.server.audio.AudioService: void playSoundEffect(int)>
<com.android.settingslib.bluetooth.BluetoothDeviceFilter: com.android.settingslib.bluetooth.BluetoothDeviceFilter.Filter getFilter(int)>
<com.android.settingslib.bluetooth.BluetoothUtils: android.net.Uri getUriMetaData(android.bluetooth.BluetoothDevice,int)>
<com.android.server.uri.GrantUri: java.lang.String toSafeString()>
<com.android.server.NetworkManagementService: void removeIdleTimer(java.lang.String)>
<com.android.systemui.DependencyBinder: com.android.systemui.statusbar.policy.LocationController provideLocationController(com.android.systemui.statusbar.policy.LocationControllerImpl)>
<android.graphics.perftests.PathPerfTest: void testIsRect()>
<com.android.systemui.shared.plugins.VersionInfo: boolean hasClass(java.lang.Class)>
<com.android.systemui.qs.tileimpl.QSTileImpl: void fireScanStateChanged(boolean)>
<com.android.server.twilight.TwilightManager: void unregisterListener(com.android.server.twilight.TwilightListener)>
<com.android.systemui.qs.tiles.WifiTile.CallbackInfo: java.lang.String toString()>
<com.android.gallery3d.glrenderer.GLES20Canvas: int uploadBuffer(java.nio.FloatBuffer)>
<com.android.commands.uiautomator.Launcher.Command: java.lang.String name()>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: boolean isTrusted()>
<com.android.systemui.statusbar.notification.VisualStabilityManager: void addReorderingAllowedCallback(com.android.systemui.statusbar.notification.VisualStabilityManager.Callback)>
<com.android.systemui.bubbles.animation.StackAnimationController: void moveFirstBubbleWithStackFollowing(float,float)>
<android.media.MediaSession2.Builder: void <init>(android.content.Context)>
<com.android.server.pm.permission.PermissionsState.PermissionState: boolean isDefault()>
<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService main(android.content.Context,com.android.server.pm.Installer,boolean,boolean)>
<com.android.systemui.statusbar.policy.AccessibilityController.AccessibilityStateChangedCallback: void onStateChanged(boolean,boolean)>
<com.android.systemui.qs.car.CarQSFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.android.statementservice.retriever.Relation: java.lang.String toString()>
<com.android.printspooler.ui.SelectPrinterActivity: boolean onCreateOptionsMenu(android.view.Menu)>
<com.google.android.startop.iorap.TaskResult: java.lang.String toString()>
<com.android.systemui.theme.ThemeOverlayController: void start()>
<com.android.systemui.plugins.qs.QS: void closeDetail()>
<com.android.settingslib.applications.ServiceListing.Builder: com.android.settingslib.applications.ServiceListing.Builder setIntentAction(java.lang.String)>
<com.android.systemui.shared.system.MetricsLoggerCompat: void visibility(int,boolean)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: boolean mustStayOnScreen()>
<com.android.settingslib.dream.DreamBackend: void preview(com.android.settingslib.dream.DreamBackend.DreamInfo)>
<com.android.server.appprediction.AppPredictionPerUserService: void notifyAppTargetEventLocked(android.app.prediction.AppPredictionSessionId,android.app.prediction.AppTargetEvent)>
<com.android.systemui.recents.views.TaskViewHeader: void onConfigurationChanged()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean installKeyPair(android.content.ComponentName,java.lang.String,byte[],byte[],byte[],java.lang.String,boolean,boolean)>
<javax.obex.ClientSession: void close()>
<com.android.server.DeviceIdleController: void onBootPhase(int)>
<com.android.gallery3d.glrenderer.GLId: void glDeleteFramebuffers(javax.microedition.khronos.opengles.GL11ExtensionPack,int,int[],int)>
<com.android.systemui.statusbar.notification.MessagingLayoutTransformState: void transformViewFrom(com.android.systemui.statusbar.notification.TransformState,float)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setLongPressListener(com.android.systemui.statusbar.notification.row.ExpandableNotificationRow.LongPressListener)>
<com.android.systemui.statusbar.phone.StatusBar: boolean areNotificationsHidden()>
<com.android.future.usb.UsbManager: boolean hasPermission(com.android.future.usb.UsbAccessory)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void onDetachedFromWindow()>
<android.net.netlink.NetlinkErrorMessage: android.net.netlink.NetlinkErrorMessage parse(android.net.netlink.StructNlMsgHdr,java.nio.ByteBuffer)>
<com.android.server.timezone.PackageTrackerIntentHelper: void sendTriggerUpdateCheck(com.android.server.timezone.CheckToken)>
<com.android.systemui.biometrics.BiometricDialogImpl: void hideBiometricDialog()>
<com.android.server.policy.PhoneWindowManager: void screenTurnedOn()>
<com.android.systemui.qs.QSFragment: void setExpanded(boolean)>
<com.android.gallery3d.glrenderer.GLId: void glDeleteTextures(javax.microedition.khronos.opengles.GL11,int,int[],int)>
<com.android.systemui.plugins.ClockPlugin: android.view.View getBigClockView()>
<com.android.gallery3d.exif.ExifInterface: int[] getTagIntValues(int,int)>
<com.android.server.notification.PreferencesHelper: boolean onlyHasDefaultChannel(java.lang.String,int)>
<com.android.server.notification.NotificationIntrusivenessExtractor: void initialize(android.content.Context,com.android.server.notification.NotificationUsageStats)>
<com.android.systemui.doze.DozeLog: void traceState(com.android.systemui.doze.DozeMachine.State)>
<com.android.systemui.statusbar.phone.NavigationBarView: boolean isVertical()>
<com.android.server.accessibility.EventStreamTransformation: void clearEvents(int)>
<com.android.systemui.statusbar.notification.row.NotificationInfo: android.view.View getContentView()>
<com.android.systemui.statusbar.policy.Clock: void setVisibility(int)>
<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexsvOES(short[],int)>
<com.android.systemui.statusbar.InflationTask: void supersedeTask(com.android.systemui.statusbar.InflationTask)>
<com.android.systemui.qs.tiles.UserDetailItemView: void drawableStateChanged()>
<com.android.keyguard.clock.DefaultClockController: void onDestroyView()>
<com.android.systemui.statusbar.phone.UserAvatarView: void setAvatarWithBadge(android.graphics.Bitmap,int)>
<com.android.server.pm.permission.BasePermission: void <init>(java.lang.String,java.lang.String,int)>
<com.android.systemui.statusbar.phone.NavigationHandle: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.android.mediadrm.signer.MediaDrmSigner.CertificateRequest: java.lang.String getDefaultUrl()>
<com.android.server.appprediction.AppPredictionManagerServiceShellCommand: void onHelp()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isNetworkLoggingEnabled(android.content.ComponentName,java.lang.String)>
<com.android.systemui.recents.misc.SystemServicesProxy: boolean hasSoftNavigationBar(int)>
<com.android.systemui.statusbar.AmbientPulseManager: com.android.systemui.statusbar.AlertingNotificationManager.AlertEntry createAlertEntry()>
<com.android.systemui.qs.tiles.DataSaverTile: com.android.systemui.plugins.qs.QSTile.BooleanState newTileState()>
<com.android.dynsystem.VerificationActivity: void onActivityResult(int,int,android.content.Intent)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: boolean isSummaryWithChildren()>
<com.android.systemui.shared.recents.utilities.Utilities: float computeContrastBetweenColors(int,int)>
<com.android.server.notification.NotificationRecord: boolean isHidden()>
<com.android.keyguard.KeyguardStatusView: void dozeTimeTick()>
<com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper: void snooze(android.service.notification.StatusBarNotification,com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper.SnoozeOption)>
<com.android.server.autofill.AutofillManagerServiceShellCommand: void <init>(com.android.server.autofill.AutofillManagerService)>
<com.android.server.policy.PhoneWindowManager: void hideBootMessages()>
<com.android.systemui.qs.QSPanel: void showDetailAdapter(boolean,com.android.systemui.plugins.qs.DetailAdapter,int[])>
<com.android.server.adb.AdbDebuggingManager: void allowDebugging(boolean,java.lang.String)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void clearSystemUpdatePolicyFreezePeriodRecord()>
<com.android.systemui.statusbar.phone.StatusBar: boolean onBackPressed()>
<com.android.systemui.statusbar.NotificationLockscreenUserManager: boolean shouldShowLockscreenNotifications()>
<com.android.server.security.KeyChainSystemService: void onStart()>
<com.android.systemui.statusbar.notification.row.NotificationGutsManager: void closeAndSaveGuts(boolean,boolean,boolean,int,int,boolean)>
<android.processor.view.inspector.InspectableClassModel: void putProperty(android.processor.view.inspector.InspectableClassModel.Property)>
<com.android.server.ConnectivityService: void handleUpdateLinkProperties(com.android.server.connectivity.NetworkAgentInfo,android.net.LinkProperties)>
<com.android.server.autofill.AutofillManagerService: int getVisibleDatasetsMaxCount()>
<com.android.server.appprediction.AppPredictionPerUserService: boolean updateLocked(boolean)>
<com.android.server.accounts.AccountManagerService: void invalidateAuthToken(java.lang.String,java.lang.String)>
<com.android.server.timedetector.TimeDetectorStrategy.Callback: boolean isTimeDetectionEnabled()>
<com.android.systemui.statusbar.notification.logging.NotificationLogger: void stopNotificationLogging()>
<com.android.server.security.VerityUtils.SetupResult: boolean isOk()>
<android.view.autofill.LoginTest: void testFocus_noService()>
<com.android.settingslib.search.SearchIndexableResources: java.util.Collection getProviderValues()>
<com.android.systemui.statusbar.NotificationRemoteInputManager.RemoteInputActiveExtender: boolean shouldExtendLifetime(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.systemui.statusbar.notification.stack.AmbientState: float getStackTranslation()>
<com.android.systemui.statusbar.notification.row.NotificationSnooze: boolean isLeavebehind()>
<com.android.server.pm.OtaDexoptService: void dexoptNextPackage()>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void onScreenTurningOff()>
<com.android.settingslib.development.AbstractEnableAdbPreferenceController: boolean haveDebugSettings()>
<com.android.systemui.recents.views.grid.TaskViewFocusFrame: void <init>(android.content.Context,android.util.AttributeSet)>
<android.net.netlink.StructNlAttr: void <init>(short,int)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onTimeChanged()>
<com.android.systemui.shared.system.TaskStackChangeListener: void onPinnedActivityRestartAttempt(boolean)>
<com.android.settingslib.applications.StorageStatsSource.AppStorageStatsImpl: long getDataBytes()>
<com.android.server.biometrics.fingerprint.FingerprintService: int getLockoutMode()>
<com.android.server.biometrics.ClientMonitor: com.android.server.biometrics.BiometricServiceBase.ServiceListener getListener()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setOrganizationColorForUser(int,int)>
<com.android.systemui.Dependency.LazyDependencyCreator: java.lang.Object createDependency()>
<com.android.systemui.keyguard.KeyguardSliceProvider: com.android.keyguard.KeyguardUpdateMonitor getKeyguardUpdateMonitor()>
<com.android.systemui.recents.views.grid.TaskGridLayoutAlgorithm: int getFocusFrameThickness()>
<com.android.server.notification.NotificationManagerService.NotificationAssistants: void readExtraTag(java.lang.String,org.xmlpull.v1.XmlPullParser)>
<com.android.server.slice.SliceManagerService: int checkSlicePermission(android.net.Uri,java.lang.String,java.lang.String,int,int,java.lang.String[])>
<com.android.systemui.qs.QSDualTileLabel: java.lang.String getText()>
<com.android.statsd.loadtest.PerfData: void onDestroy()>
<com.android.server.policy.WindowManagerPolicy.WindowManagerFuncs: int getLidState()>
<com.android.settingslib.inputmethod.InputMethodAndSubtypeEnablerManager: void init(androidx.preference.PreferenceFragment,java.lang.String,androidx.preference.PreferenceScreen)>
<com.android.server.contentsuggestions.ContentSuggestionsManagerServiceShellCommand: int onCommand(java.lang.String)>
<com.android.systemui.qs.QSPanel: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.appwidget.AppWidgetService: void onStopUser(int)>
<com.android.server.appop.AppOpsService: int checkAudioOperation(int,int,int,java.lang.String)>
<com.android.server.display.BrightnessMappingStrategy: boolean setAutoBrightnessAdjustment(float)>
<com.android.systemui.pip.tv.PipControlButtonView: void setImageResource(int)>
<com.android.keyguard.clock.AnalogClockController: void onTimeTick()>
<com.android.externalstorage.ExternalStorageProvider: void updateVolumes()>
<com.android.settingslib.widget.AnimatedImageView: void onDetachedFromWindow()>
<com.android.server.location.GnssGeofenceProviderTest: void setUp()>
<com.android.server.pm.CrossProfileAppsServiceImpl.Injector: android.os.UserHandle getCallingUserHandle()>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: java.lang.String getConnectionSummary(boolean)>
<com.android.printservice.recommendation.plugin.hp.MDnsUtils: java.lang.String getString(byte[])>
<com.android.settingslib.drawer.Tile: boolean isPrimaryProfileOnly()>
<com.android.server.LocationManagerService: void removeUpdates(android.location.ILocationListener,android.app.PendingIntent,java.lang.String)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexEnvfv(int,int,java.nio.FloatBuffer)>
<com.android.systemui.recents.misc.SystemServicesProxy: int getDockedDividerSize(android.content.Context)>
<com.android.systemui.statusbar.car.CarFacetButton: void setSelected(boolean)>
<com.android.server.notification.NotificationDelegate: void onSetDisabled(int)>
<com.android.printspooler.ui.PrinterRegistry: void <init>(android.app.Activity,java.lang.Runnable,int,int)>
<com.android.systemui.qs.tiles.UserTile: void handleClick()>
<com.android.server.input.InputManagerService: java.lang.String[] getEnabledKeyboardLayoutsForInputDevice(android.hardware.input.InputDeviceIdentifier)>
<com.android.dynsystem.InstallationAsyncTask.InstallStatusListener: void onResult(int,java.lang.Throwable)>
<com.android.server.accessibility.AccessibilityManagerService: void performAccessibilityShortcut()>
<com.android.settingslib.inputmethod.InputMethodSettingValuesWrapper: com.android.settingslib.inputmethod.InputMethodSettingValuesWrapper getInstance(android.content.Context)>
<com.android.server.wallpaper.WallpaperManagerService: boolean isWallpaperSupported(java.lang.String)>
<com.android.systemui.assist.AssistManager: void onLockscreenShown()>
<com.android.systemui.recents.views.grid.TaskViewFocusFrame: void measure()>
<com.android.printspooler.model.PrintSpoolerService: void setStatus(android.print.PrintJobId,int,java.lang.CharSequence)>
<com.android.systemui.tuner.CustomListPreference.CustomListPreferenceDialogFragment: com.android.systemui.tuner.CustomListPreference getCustomizablePreference()>
<com.android.systemui.statusbar.notification.row.NotificationContentInflater: void setInflationCallback(com.android.systemui.statusbar.notification.row.NotificationContentInflater.InflationCallback)>
<com.android.systemui.statusbar.phone.LockIcon: void onBiometricAuthModeChanged(boolean)>
<com.android.systemui.statusbar.ViewTransformationHelper: void setCustomTransformation(com.android.systemui.statusbar.ViewTransformationHelper.CustomTransformation,int)>
<com.android.server.locksettings.recoverablekeystore.RecoverableKeyStoreManager: void setRecoveryStatus(java.lang.String,int)>
<com.android.server.NetworkManagementService: void untetherInterface(java.lang.String)>
<com.android.server.vr.VrManagerService: void onStart()>
<com.android.settingslib.location.InjectedSetting.Builder: com.android.settingslib.location.InjectedSetting.Builder setTitle(java.lang.String)>
<com.android.settingslib.Utils: int getDisabled(android.content.Context,int)>
<com.android.gallery3d.glrenderer.GLPaint: void setColor(int)>
<com.android.server.NetworkManagementService: void allowProtect(int)>
<com.android.systemui.analytics.DataCollector: android.net.Uri reportRejectedTouch()>
<com.android.settingslib.media.ConnectionRecordManager: void fetchLastSelectedDevice(android.content.Context)>
<com.android.settingslib.TetherUtil: boolean isTetherAvailable(android.content.Context)>
<android.perftests.SystemPerfTest: void testJniArrayCriticalAccess()>
<com.android.systemui.recents.model.TaskStack.TaskStackCallbacks: void onStackTasksRemoved(com.android.systemui.recents.model.TaskStack)>
<com.android.systemui.statusbar.phone.ScrimController: void transitionTo(com.android.systemui.statusbar.phone.ScrimState)>
<com.android.server.ExtconUEventObserver: void onUEvent(com.android.server.ExtconUEventObserver.ExtconInfo,android.os.UEventObserver.UEvent)>
<com.android.server.pm.PackageManagerService: boolean isPackageSuspendedForUser(java.lang.String,int)>
<com.android.systemui.Dependency: java.lang.Object getDependency(java.lang.Class)>
<com.android.systemui.statusbar.phone.SystemUIDialog: android.app.AlertDialog applyFlags(android.app.AlertDialog)>
<com.android.settingslib.media.MediaManager: com.android.settingslib.media.MediaDevice findMediaDevice(java.lang.String)>
<com.android.commands.svc.SystemServerCommand: java.lang.String shortHelp()>
<com.android.server.midi.MidiService: void unregisterListener(android.os.IBinder,android.media.midi.IMidiDeviceListener)>
<com.android.systemui.doze.DozeScreenState: void <init>(com.android.systemui.doze.DozeMachine.Service,android.os.Handler,com.android.systemui.statusbar.phone.DozeParameters,com.android.systemui.util.wakelock.WakeLock)>
<com.android.server.pm.PackageManagerServiceUtils: int copyPackage(java.lang.String,java.io.File)>
<com.android.server.notification.NotificationRecord: android.service.notification.NotificationStats getStats()>
<com.android.preload.DeviceUtils: void doShell(com.android.ddmlib.IDevice,java.lang.String,long,java.util.concurrent.TimeUnit)>
<android.processor.view.inspector.InspectableClassModel.Property: int getAttributeId()>
<com.android.systemui.qs.SlashDrawable: void setTintList(android.content.res.ColorStateList)>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: void addEmergencyListener(com.android.systemui.statusbar.policy.NetworkController.EmergencyListener)>
<android.text.DynamicLayoutPerfTest: void <init>(java.lang.String,float)>
<com.android.server.display.whitebalance.DisplayWhiteBalanceSettings: boolean setCallbacks(com.android.server.display.whitebalance.DisplayWhiteBalanceController.Callbacks)>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.ui.DismissTaskViewEvent)>
<com.android.systemui.statusbar.policy.LocationController.LocationChangeCallback: void onLocationActiveChanged(boolean)>
<com.android.server.AppStateTracker: boolean isUidPowerSaveUserWhitelisted(int)>
<com.android.systemui.qs.tileimpl.QSTileBaseView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.android.settingslib.net.DataUsageController.NetworkNameProvider: java.lang.String getMobileDataNetworkName()>
<com.android.systemui.qs.QSPanel: com.android.systemui.plugins.qs.QSTileView createTileView(com.android.systemui.plugins.qs.QSTile,boolean)>
<com.android.server.autofill.ui.PendingUi: int getState()>
<com.android.systemui.classifier.FalsingManagerProxy: void onScreenOnFromTouch()>
<com.android.systemui.statusbar.CrossFadeHelper: void fadeIn(android.view.View,float,boolean)>
<com.android.server.notification.NotificationRecord: void setCriticality(int)>
<com.android.server.pm.UserManagerService: void setUserName(int,java.lang.String)>
<com.android.systemui.plugins.ActivityStarter: void startActivity(android.content.Intent,boolean,boolean,int)>
<com.android.systemui.statusbar.phone.NavigationBarView: void abortCurrentGesture()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setSystemUpdatePolicy(android.content.ComponentName,android.app.admin.SystemUpdatePolicy)>
<com.android.systemui.qs.AlphaControlledSignalTileView.AlphaControlledSlashDrawable: void setDrawableTintList(android.content.res.ColorStateList)>
<com.android.systemui.qs.tiles.HotspotTile: com.android.systemui.plugins.qs.QSTile.BooleanState newTileState()>
<com.android.server.autofill.ui.FillUi.Callback: void onDestroy()>
<com.android.fakeoemfeatures.FakeView: void onDetachedFromWindow()>
<com.android.settingslib.widget.settingsspinner.SettingsSpinnerAdapter: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: boolean isLeftVoiceAssist()>
<com.android.server.content.SyncManager: void cancelScheduledSyncOperation(com.android.server.content.SyncStorageEngine.EndPoint,android.os.Bundle)>
<com.android.settingslib.wifi.WifiStatusTracker: void <init>(android.content.Context,android.net.wifi.WifiManager,android.net.NetworkScoreManager,android.net.ConnectivityManager,java.lang.Runnable)>
<com.android.server.Watchdog.HandlerChecker: void pauseLocked(java.lang.String)>
<com.android.settingslib.inputmethod.InputMethodPreference: boolean onPreferenceChange(androidx.preference.Preference,java.lang.Object)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setChildLocationsChangedListener(com.android.systemui.statusbar.notification.logging.NotificationLogger.OnChildLocationsChangedListener)>
<com.android.systemui.statusbar.notification.MessagingImageTransformState: void transformViewFrom(com.android.systemui.statusbar.notification.TransformState,int,com.android.systemui.statusbar.ViewTransformationHelper.CustomTransformation,float)>
<com.android.server.usb.descriptors.report.Reporting: void shortReport(com.android.server.usb.descriptors.report.ReportCanvas)>
<com.android.systemui.statusbar.notification.collection.NotificationData: void filterAndSort()>
<com.android.server.NativeDaemonEvent: java.lang.String getMessage()>
<com.android.server.content.SyncStorageEngine: java.util.List getCurrentSyncsCopy(int,boolean)>
<com.android.systemui.volume.SegmentedButtons: void setCallback(com.android.systemui.volume.SegmentedButtons.Callback)>
<com.android.settingslib.drawer.Tile: android.graphics.drawable.Icon getIcon(android.content.Context)>
<com.android.systemui.plugins.ActivityStarter: void postQSRunnableDismissingKeyguard(java.lang.Runnable)>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb: java.lang.String getActiveRootOfTrust(int,int)>
<com.android.systemui.statusbar.notification.TextViewTransformState: int getViewWidth()>
<javax.microedition.khronos.opengles.GL10: void glFogxv(int,java.nio.IntBuffer)>
<com.android.pacprocessor.PacNative: java.lang.String makeProxyRequest(java.lang.String,java.lang.String)>
<android.media.MediaController2.ControllerCallback: android.media.Session2Command.Result onSessionCommand(android.media.MediaController2,android.media.Session2Command,android.os.Bundle)>
<com.android.server.display.color.ColorDisplayService.ColorDisplayServiceInternal: boolean setDisplayWhiteBalanceListener(com.android.server.display.color.ColorDisplayService.DisplayWhiteBalanceListener)>
<com.android.commands.bu.Backup: void main(java.lang.String[])>
<com.android.systemui.recents.views.TaskViewThumbnail: void onDraw(android.graphics.Canvas)>
<com.android.server.uri.UriPermissionOwner: void addWritePermission(com.android.server.uri.UriPermission)>
<com.android.server.location.GnssNavigationMessageProvider: com.android.server.location.RemoteListenerHelper.ListenerOperation getHandlerOperation(int)>
<com.android.server.notification.PreferencesHelper: void permanentlyDeleteNotificationChannels(java.lang.String,int)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean onKeyLongPress(int,android.view.KeyEvent)>
<com.android.systemui.statusbar.notification.stack.StackScrollAlgorithm: void resetViewStates(com.android.systemui.statusbar.notification.stack.AmbientState)>
<com.android.keyguard.KeyguardHostView: void <init>(android.content.Context)>
<com.android.server.location.GnssBatchingProviderTest: void stop_nativeStopped()>
<android.media.MediaPlayer2: long getBufferedPosition()>
<com.android.systemui.statusbar.NotificationShelf: int getNotificationMergeSize()>
<com.android.settingslib.location.SettingsInjector.Setting: void <init>(com.android.settingslib.location.InjectedSetting,androidx.preference.Preference)>
<com.android.systemui.statusbar.phone.RegionSamplingHelper.SamplingCallback: boolean isSamplingEnabled()>
<com.android.settingslib.wifi.TestAccessPointBuilder: com.android.settingslib.wifi.TestAccessPointBuilder setReachable(boolean)>
<com.android.systemui.statusbar.phone.FloatingRotationButton: boolean hide()>
<com.android.server.biometrics.face.FaceUserState: void <init>(android.content.Context,int)>
<com.android.server.adb.AdbService.Lifecycle: void <init>(android.content.Context)>
<com.android.systemui.qs.touch.SwipeDetector.Listener: void onDragStart(boolean)>
<com.google.android.startop.iorap.AppLaunchEvent: java.lang.String toStringBody()>
<com.android.server.notification.NotificationRecord: void setInterruptive(boolean)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: java.util.List getNotificationChildren()>
<com.android.systemui.statusbar.phone.LockscreenWallpaper: void <init>(android.content.Context,com.android.systemui.statusbar.phone.StatusBar,android.os.Handler)>
<com.android.preload.actions.ReloadListAction: void run()>
<com.android.systemui.SystemUIFactory: com.android.systemui.statusbar.phone.KeyguardBouncer createKeyguardBouncer(android.content.Context,com.android.keyguard.ViewMediatorCallback,com.android.internal.widget.LockPatternUtils,android.view.ViewGroup,com.android.systemui.keyguard.DismissCallbackRegistry,com.android.systemui.statusbar.phone.KeyguardBouncer.BouncerExpansionCallback)>
<com.android.server.policy.WindowManagerPolicy.WindowState: android.view.IApplicationToken getAppToken()>
<com.android.systemui.statusbar.phone.StatusBarWindowController: void setPanelVisible(boolean)>
<com.android.server.ConnectivityService: android.net.LinkProperties getLinkPropertiesForType(int)>
<com.android.server.autofill.Helper: android.metrics.LogMaker newLogMaker(int,android.content.ComponentName,java.lang.String,int,boolean)>
<com.android.printservice.recommendation.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.String,java.lang.Object[])>
<com.android.systemui.statusbar.phone.StatusBarIconController: void setIcon(java.lang.String,int,java.lang.CharSequence)>
<android.media.MediaPlayer2.DrmPreparationInfo.Builder: android.media.MediaPlayer2.DrmPreparationInfo.Builder setOptionalParameters(java.util.Map)>
<com.android.server.pm.PackageManagerService: boolean hasUidSigningCertificate(int,byte[],int)>
<com.android.server.biometrics.ClientMonitor: int stop(boolean)>
<com.android.systemui.statusbar.phone.PanelView: boolean isTrackingBlocked()>
<com.android.server.lights.Light: void setVrMode(boolean)>
<com.android.localtransport.LocalTransport: int initializeDevice()>
<com.android.localtransport.LocalTransportService: void onDestroy()>
<com.android.systemui.statusbar.notification.stack.AmbientState: float getCurrentScrollVelocity()>
<com.android.systemui.statusbar.phone.StatusBar: void toggleSplitScreen()>
<com.android.systemui.statusbar.phone.FloatingRotationButton: android.view.View getCurrentView()>
<com.android.gallery3d.exif.ExifInterface: com.android.gallery3d.exif.ExifTag buildTag(int,java.lang.Object)>
<com.android.printspooler.widget.PrintContentView: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<com.android.systemui.plugins.ClockPlugin: void setColorPalette(boolean,int[])>
<com.android.systemui.volume.VolumeComponent: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.pm.PackageManagerService: void sendPackageBroadcast(java.lang.String,java.lang.String,android.os.Bundle,int,java.lang.String,android.content.IIntentReceiver,int[],int[])>
<javax.microedition.khronos.opengles.GL11ExtensionPack: int glCheckFramebufferStatusOES(int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: float getMaxTranslationDistance()>
<android.media.MediaPlayer2: java.util.List getTrackInfo()>
<com.android.systemui.statusbar.phone.LightBarController: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.fragments.FragmentHostManager.FragmentListener: void onFragmentViewDestroyed(java.lang.String,android.app.Fragment)>
<com.android.server.locksettings.recoverablekeystore.WrappedKey: byte[] getKeyMaterial()>
<com.android.systemui.statusbar.phone.StatusBarIconController.DarkIconManager: com.android.systemui.statusbar.phone.DemoStatusIcons createDemoStatusIcons()>
<com.android.server.notification.ZenModeHelper.RingerModeDelegate: int onSetRingerModeInternal(int,int,java.lang.String,int,android.media.VolumePolicy)>
<javax.microedition.khronos.opengles.GL11: void glVertexPointer(int,int,int,int)>
<com.android.location.provider.ProviderRequestUnbundled: boolean isLocationSettingsIgnored()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void wakeUpFromPulse()>
<javax.microedition.khronos.opengles.GL11: void glColor4ub(byte,byte,byte,byte)>
<android.media.MediaSession2Service: android.media.MediaSession2Service.MediaNotification onUpdateNotification(android.media.MediaSession2)>
<com.android.systemui.statusbar.policy.KeyButtonView: void playSoundEffect(int)>
<com.android.server.pm.DumpState: com.android.server.pm.SharedUserSetting getSharedUser()>
<com.android.server.soundtrigger.SoundTriggerDbHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)>
<com.android.server.notification.NotificationManagerService.WorkerHandler: void scheduleCancelNotification(com.android.server.notification.NotificationManagerService.CancelNotificationRunnable)>
<com.android.settingslib.net.SummaryForAllUidLoader: void onStopLoading()>
<com.android.server.usb.descriptors.Usb20ASFormatII: void <init>(int,byte,byte,byte,int)>
<com.android.media.tv.remoteprovider.TvRemoteProvider: void <init>(android.content.Context)>
<com.android.server.display.DisplayManagerService: void onStart()>
<com.android.systemui.statusbar.policy.HotspotController.Callback: void onHotspotChanged(boolean,int)>
<com.android.systemui.qs.QSAnimator: void onPageChanged(boolean)>
<com.android.server.policy.WindowManagerPolicy.WindowState: int getActivityType()>
<com.android.systemui.plugins.DozeServicePlugin: void onDreamingStopped()>
<com.android.printservice.recommendation.util.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>
<com.android.server.location.GnssSatelliteBlacklistHelperTest: void blacklistWithSpaces_callbackIsCalled()>
<com.android.systemui.statusbar.phone.StatusBar: void setPanelExpanded(boolean)>
<com.android.server.policy.WindowManagerPolicy.WindowState: android.view.WindowManager.LayoutParams getAttrs()>
<com.android.systemui.qs.car.CarQSFooter: void setListening(boolean)>
<com.android.keyguard.KeyguardUpdateMonitor: boolean isFaceUnlockRunning(int)>
<com.android.systemui.statusbar.notification.row.NotificationInfo.CheckSaveListener: void checkSave(java.lang.Runnable,android.service.notification.StatusBarNotification)>
<com.android.server.pm.PackageManagerServiceUtils: void sortPackagesByUsageDate(java.util.List,com.android.server.pm.PackageManagerService)>
<com.android.systemui.qs.QSCarrierGroup: void setNoSims(boolean,boolean)>
<com.android.statementservice.retriever.Utils: java.lang.String joinStrings(java.lang.String,java.util.List)>
<javax.obex.Operation: int getHeaderLength()>
<com.android.systemui.statusbar.policy.NetworkController.SignalCallback: void setMobileDataEnabled(boolean)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void startChildAnimation(com.android.systemui.statusbar.notification.stack.AnimationProperties)>
<com.android.systemui.statusbar.phone.BarTransitions: void <init>(android.view.View,int)>
<android.net.shared.InitialConfiguration: boolean any(java.lang.Iterable,java.util.function.Predicate)>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: com.android.systemui.recents.views.TaskViewTransform getStackTransform(com.android.systemui.shared.recents.model.Task,float,com.android.systemui.recents.views.TaskViewTransform,com.android.systemui.recents.views.TaskViewTransform,boolean)>
<android.media.Session2Command.Result: android.os.Bundle getResultData()>
<android.net.IIpMemoryStore: void factoryReset()>
<com.android.server.notification.ConditionProviders: java.lang.Iterable getSystemProviders()>
<com.android.systemui.statusbar.policy.KeyButtonDrawable: void draw(android.graphics.Canvas)>
<com.android.server.location.AbstractLocationProvider: void setRequest(com.android.internal.location.ProviderRequest,android.os.WorkSource)>
<com.android.server.pm.UserRestrictionsUtils: void merge(android.os.Bundle,android.os.Bundle)>
<android.net.ip.RouterAdvertisementDaemon.RaParams: android.net.ip.RouterAdvertisementDaemon.RaParams getDeprecatedRaParams(android.net.ip.RouterAdvertisementDaemon.RaParams,android.net.ip.RouterAdvertisementDaemon.RaParams)>
<com.android.settingslib.Utils: void updateLocationEnabled(android.content.Context,boolean,int,int)>
<com.android.keyguard.KeyguardPatternView: boolean hasOverlappingRendering()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void onReset(com.android.systemui.statusbar.notification.row.ExpandableView)>
<com.android.settingslib.fuelgauge.PowerWhitelistBackend: boolean isDefaultActiveApp(java.lang.String)>
<com.android.systemui.ForegroundServicesDialog: void onNothingSelected(android.widget.AdapterView)>
<com.android.systemui.keyguard.ScreenLifecycle: void dispatchScreenTurningOff()>
<javax.microedition.khronos.opengles.GL10: void glMaterialf(int,int,float)>
<com.android.server.notification.NotificationRecord: int getCriticality()>
<com.android.systemui.shared.system.RecentTaskInfoCompat: android.content.ComponentName getTopActivity()>
<com.android.server.audio.AudioService: int setUidDeviceAffinity(android.media.audiopolicy.IAudioPolicyCallback,int,int[],java.lang.String[])>
<com.android.systemui.statusbar.notification.row.ExpandableView: boolean isRemoved()>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.util.List getCrossProfileWidgetProviders(android.content.ComponentName)>
<com.android.uiautomator.core.UiObjectNotFoundException: void <init>(java.lang.Throwable)>
<com.android.systemui.statusbar.phone.StatusBar: void dispatchNotificationsPanelTouchEvent(android.view.MotionEvent)>
<com.android.settingslib.inputmethod.InputMethodAndSubtypeUtilCompat: java.lang.String getSubtypeLocaleNameAsSentence(android.view.inputmethod.InputMethodSubtype,android.content.Context,android.view.inputmethod.InputMethodInfo)>
<com.android.server.pm.KeySetManagerService: boolean packageIsSignedByExactlyLPr(java.lang.String,com.android.server.pm.KeySetHandle)>
<com.android.server.notification.ManagedServices: void populateComponentsToBind(android.util.SparseArray,android.util.IntArray,android.util.SparseArray)>
<com.android.settingslib.net.NetworkCycleData: long getEndTime()>
<com.android.server.ConnectivityService: int getMultipathPreference(android.net.Network)>
<com.android.server.slice.PinnedSliceState: boolean hasPinOrListener()>
<com.android.server.notification.ScheduleConditionProvider: void onUnsubscribe(android.net.Uri)>
<com.android.printspooler.renderer.PdfManipulationService: android.os.IBinder onBind(android.content.Intent)>
<com.android.systemui.qs.QSPanel.QSTileLayout: int getNumVisibleTiles()>
<com.android.statementservice.retriever.URLFetcher: com.android.statementservice.retriever.WebContent getWebContentFromUrl(java.net.URL,long,int)>
<com.android.systemui.statusbar.notification.row.ExpandableView: boolean pointInView(float,float,float)>
<com.android.packageinstaller.wear.WearPackageArgs: android.net.Uri getAssetUri(android.os.Bundle)>
<com.android.packageinstaller.PackageInstallerActivity.AnonymousSourceDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>
<com.android.systemui.biometrics.FingerprintDialogView: int getDelayAfterAuthenticatedDurationMs()>
<com.android.systemui.statusbar.phone.KeyguardBouncer.BouncerExpansionCallback: void onStartingToHide()>
<com.android.server.content.ContentService: void sync(android.content.SyncRequest,java.lang.String)>
<com.android.settingslib.graph.BatteryMeterDrawableBase: void postInvalidate()>
<com.android.server.ConsumerIrService: int[] getCarrierFrequencies()>
<com.android.settingslib.RestrictedLockUtilsInternal: com.android.settingslib.RestrictedLockUtils.EnforcedAdmin checkIfKeyguardFeaturesDisabled(android.content.Context,int,int)>
<com.android.printspooler.util.PageRangeUtils: boolean isAllPages(android.print.PageRange[])>
<com.android.systemui.statusbar.phone.BarTransitions.BarBackgroundDrawable: void setTintMode(android.graphics.PorterDuff.Mode)>
<com.android.settingslib.utils.AsyncLoaderCompat: void deliverResult(java.lang.Object)>
<com.android.server.hdmi.HdmiCecLocalDevicePlayback: boolean handleSystemAudioModeStatus(com.android.server.hdmi.HdmiCecMessage)>
<com.android.settingslib.wifi.AccessPoint: java.lang.String getKey(android.net.wifi.ScanResult)>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: java.lang.String getName()>
<com.android.systemui.statusbar.HeadsUpStatusBarView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.audio.AudioService: void startBluetoothScoVirtualCall(android.os.IBinder)>
<com.android.keyguard.KeyguardAbsKeyInputView: void setLockPatternUtils(com.android.internal.widget.LockPatternUtils)>
<com.android.server.NetworkManagementService: int removeRoutesFromLocalNetwork(java.util.List)>
<com.android.settingslib.suggestions.SuggestionControllerMixinCompat: void onLoaderReset(androidx.loader.content.Loader)>
<com.android.server.IpSecService.RefcountedResource: java.lang.String toString()>
<com.android.server.pm.permission.BasePermission: void setPermissionDefinitionChanged(boolean)>
<com.android.systemui.SwipeHelper.Callback: boolean canChildBeDismissed(android.view.View)>
<com.android.commands.svc.UsbCommand: java.lang.String shortHelp()>
<com.android.keyguard.KeyguardUpdateMonitor: int getCurrentUser()>
<com.android.systemui.statusbar.notification.stack.AmbientState: boolean isQsCustomizerShowing()>
<com.android.server.pm.PackageManagerService: android.content.pm.IPackageInstaller getPackageInstaller()>
<android.os.ISomeService: void readDisk(int)>
<com.android.server.pm.PackageInstallerSession: boolean isSealed()>
<com.android.server.display.whitebalance.DisplayWhiteBalanceController: boolean setLoggingEnabled(boolean)>
<com.android.settingslib.RestrictedSwitchPreference: void onBindViewHolder(androidx.preference.PreferenceViewHolder)>
<com.android.systemui.statusbar.AlertingNotificationManager.AlertEntry: long calculatePostTime()>
<com.android.settingslib.net.DataUsageController: boolean isMobileDataSupported()>
<com.android.server.camera.CameraServiceProxy: void binderDied()>
<com.android.server.DeviceIdleController: boolean isPowerSaveWhitelistExceptIdleAppInternal(java.lang.String)>
<com.android.server.notification.ManagedServices.ManagedServiceInfo: int hashCode()>
<com.android.systemui.statusbar.notification.stack.NotificationListContainer: com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper getSwipeActionHelper()>
<com.android.server.deviceidle.TvConstraintController: void start()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setUnlockHintRunning(boolean)>
<com.android.systemui.statusbar.phone.LockIcon: void onDozingChanged(boolean)>
<com.android.systemui.statusbar.notification.row.NotificationGutsManager: void setShouldManageLifetime(com.android.systemui.statusbar.notification.collection.NotificationEntry,boolean)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: void resetUserExpansion()>
<com.android.settingslib.drawable.UserIconDrawable: void setBadgeMargin(float)>
<com.android.systemui.statusbar.phone.NotificationPanelView: float getHeaderTranslation()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setPasswordMinimumLength(android.content.ComponentName,int,boolean)>
<com.android.systemui.recents.views.TaskStackAnimationHelper: void startDeleteTaskAnimation(com.android.systemui.recents.views.TaskView,boolean,com.android.systemui.recents.misc.ReferenceCountedTrigger)>
<com.android.server.content.ContentService: android.content.SyncAdapterType[] getSyncAdapterTypesAsUser(int)>
<com.android.systemui.qs.AlphaControlledSignalTileView.AlphaControlledSlashDrawable: void setFinalTintList(android.content.res.ColorStateList)>
<com.android.server.testing.shadows.ShadowEventLog.Entry: void <init>(int,java.util.List)>
<android.net.netlink.InetDiagMessage: byte[] InetDiagReqV2(int,java.net.InetSocketAddress,java.net.InetSocketAddress,int,short)>
<com.android.systemui.glwallpaper.GLWallpaperRenderer.SurfaceProxy: void requestRender()>
<com.android.uiautomator.core.UiObject: boolean swipeLeft(int)>
<com.android.systemui.shared.system.StatsLogCompat: void write(int,int,int,byte[],boolean)>
<com.android.settingslib.bluetooth.LocalBluetoothProfileManager: com.android.settingslib.bluetooth.MapProfile getMapProfile()>
<com.android.systemui.statusbar.phone.NotificationPanelView: com.android.systemui.statusbar.RemoteInputController.Delegate createRemoteInputDelegate()>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: boolean isBluetoothConnected()>
<com.android.systemui.volume.ZenModePanel: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.pm.PackageManagerService: java.lang.String getAppPredictionServicePackageName()>
<com.android.server.display.utils.Plog: void emit(java.lang.String)>
<com.android.systemui.plugins.qs.QSTile.Icon: android.graphics.drawable.Drawable getDrawable(android.content.Context)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.String getEndUserSessionMessage(android.content.ComponentName)>
<android.media.MediaPlayer2: android.media.SyncParams getSyncParams()>
<com.android.wallpapercropper.WallpaperCropActivity: int getRotationFromExif(java.lang.String)>
<com.android.server.appbinding.AppBindingService.Lifecycle: void onUnlockUser(int)>
<com.android.settingslib.drawable.CircleFramedDrawable: com.android.settingslib.drawable.CircleFramedDrawable getInstance(android.content.Context,android.graphics.Bitmap)>
<com.android.server.usb.UsbService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isProfileActivePasswordSufficientForParent(int)>
<com.android.server.usb.descriptors.UsbACAudioControlEndpoint: int getMaxPacketSize()>
<com.android.systemui.qs.tiles.UserTile: int getMetricsCategory()>
<com.android.systemui.biometrics.BiometricDialogView: void showTryAgainButton(boolean)>
<com.android.server.location.LocationRequestStatistics.PackageStatistics: long getTimeSinceLastRequestStoppedMs()>
<com.android.systemui.power.EnhancedEstimates: boolean isHybridNotificationEnabled()>
<com.android.systemui.qs.QuickQSPanel: boolean shouldShowDetail()>
<com.android.gallery3d.common.BitmapUtils: android.graphics.Bitmap rotateBitmap(android.graphics.Bitmap,int,boolean)>
<com.android.server.input.InputManagerService: void switchKeyboardLayout(int,int)>
<com.android.systemui.classifier.FalsingManagerImpl: void onTouchEvent(android.view.MotionEvent,int,int)>
<com.android.powermodel.PowerReport: java.util.List getRegularApps()>
<com.android.systemui.statusbar.AlphaOptimizedView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.systemui.util.SysuiLifecycle: androidx.lifecycle.LifecycleOwner viewAttachLifecycle(android.view.View)>
<com.android.server.locksettings.LockSettingsService: java.lang.String importKeyWithMetadata(java.lang.String,byte[],byte[])>
<com.android.systemui.bubbles.animation.ExpandedAnimationController: void magnetBubbleToDismiss(android.view.View,float,float,float,java.lang.Runnable)>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcher.Adapter: void <init>(android.content.Context,com.android.systemui.statusbar.policy.UserSwitcherController,com.android.systemui.statusbar.policy.KeyguardUserSwitcher)>
<com.android.systemui.shared.system.RecentsAnimationControllerCompat: void setInputConsumerEnabled(boolean)>
<com.android.systemui.statusbar.policy.KeyButtonRipple: void <init>(android.content.Context,android.view.View)>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: int getRippleColor()>
<com.android.systemui.globalactions.GlobalActionsLayout: void addToListView(android.view.View,boolean)>
<com.android.server.locksettings.SyntheticPasswordManager: boolean activateTokenBasedSyntheticPassword(long,com.android.server.locksettings.SyntheticPasswordManager.AuthenticationToken,int)>
<com.android.settingslib.core.AbstractPreferenceController: void <init>(android.content.Context)>
<com.android.server.location.GnssLocationProvider: void sendExtraCommand(java.lang.String,android.os.Bundle)>
<com.android.server.biometrics.ClientMonitor: long getHalDeviceId()>
<com.android.systemui.plugins.qs.QSTile.SignalState: boolean copyTo(com.android.systemui.plugins.qs.QSTile.State)>
<com.android.systemui.qs.SecureSetting: void onChange(boolean)>
<com.android.settingslib.bluetooth.BluetoothDiscoverableTimeoutReceiver: void cancelDiscoverableAlarm(android.content.Context)>
<com.android.systemui.recents.model.TaskStack: int getTaskCount()>
<com.android.server.devicepolicy.DevicePolicyManagerService: long getPasswordExpirationTimeout(android.content.ComponentName,int,boolean)>
<com.android.server.vr.EnabledComponentsObserver: void rebuildAll()>
<com.android.server.content.SyncManager: java.lang.StringBuilder formatDurationHMS(java.lang.StringBuilder,long)>
<com.android.systemui.recents.views.TaskViewHeader: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.statusbar.phone.StatusBar: boolean areLaunchAnimationsEnabled()>
<com.android.settingslib.dream.DreamBackend: void setWhenToDream(int)>
<com.android.systemui.recents.model.TaskStack.TaskStackCallbacks: void onStackTaskAdded(com.android.systemui.recents.model.TaskStack,com.android.systemui.shared.recents.model.Task)>
<com.android.systemui.recents.misc.SystemServicesProxy: void awakenDreamsAsync()>
<com.android.systemui.qs.AlphaControlledSignalTileView.AlphaControlledSlashImageView: void ensureSlashDrawable()>
<com.android.server.policy.WindowManagerPolicy: void screenTurnedOff()>
<com.android.systemui.statusbar.notification.stack.AnimationProperties: com.android.systemui.statusbar.notification.stack.AnimationProperties setCustomInterpolator(android.util.Property,android.view.animation.Interpolator)>
<android.widget.TextViewFontFamilyLayoutPerfTest: java.util.Collection layouts()>
<com.android.server.NetworkManagementService: void setInterfaceAlert(java.lang.String,long)>
<com.android.systemui.pip.phone.PipMediaController: void addListener(com.android.systemui.pip.phone.PipMediaController.ActionListener)>
<com.android.server.pm.permission.PermissionSettings: void addAppOpPackage(java.lang.String,java.lang.String)>
<com.android.settingslib.volume.MediaSessions: void destroy()>
<com.android.systemui.statusbar.phone.PanelView: void onAttachedToWindow()>
<com.android.uiautomator.core.UiObject: boolean longClickTopLeft()>
<com.android.server.wallpaper.WallpaperManagerService: android.os.ParcelFileDescriptor getWallpaper(java.lang.String,android.app.IWallpaperManagerCallback,int,android.os.Bundle,int)>
<com.android.settingslib.drawer.Tile: android.os.Bundle getMetaData()>
<com.android.server.NetworkScoreService.ScoringServiceConnection: android.net.INetworkRecommendationProvider getRecommendationProvider()>
<com.android.systemui.qs.PageIndicator: void setNumPages(int)>
<android.multiuser.UserLifecycleTests: void switchUser_stopped()>
<com.android.systemui.plugins.DarkIconDispatcher: void setIconsDarkArea(android.graphics.Rect)>
<com.android.statsd.shelltools.localdrive.LocalDrive: void main(java.lang.String[])>
<com.android.server.pm.Installer: boolean migrateLegacyObbData()>
<com.android.settingslib.animation.DisappearAnimationUtils: void <init>(android.content.Context,long,float,float,android.view.animation.Interpolator,com.android.settingslib.animation.AppearAnimationUtils.RowTranslationScaler)>
<com.android.systemui.statusbar.ScrimView: void onLayout(boolean,int,int,int,int)>
<com.android.keyguard.KeyguardSimPinView: boolean startDisappearAnimation(java.lang.Runnable)>
<com.android.location.fused.FusionEngine: void setRequest(com.android.location.provider.ProviderRequestUnbundled)>
<com.android.systemui.tuner.TunerFragment: void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater)>
<com.android.server.hdmi.HdmiCecController.NativeWrapper: int nativeGetPhysicalAddress(long)>
<com.android.systemui.pip.phone.PipMenuActivityController: void addListener(com.android.systemui.pip.phone.PipMenuActivityController.Listener)>
<com.android.server.SystemServiceManager: void unlockUser(int)>
<com.android.printspooler.util.PageRangeUtils: boolean isAllPages(android.print.PageRange,int)>
<com.android.systemui.keyguard.WakefulnessLifecycle.Observer: void onFinishedWakingUp()>
<com.android.server.locksettings.recoverablekeystore.KeySyncUtils: javax.crypto.SecretKey generateRecoveryKey()>
<com.android.systemui.plugins.PluginListener: void onPluginDisconnected(com.android.systemui.plugins.Plugin)>
<com.android.settingslib.bluetooth.LocalBluetoothManager: com.android.settingslib.bluetooth.BluetoothEventManager getEventManager()>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void cancelPreloadRecentApps()>
<com.android.systemui.statusbar.NotificationRemoteInputManager: void setUpWithCallback(com.android.systemui.statusbar.NotificationRemoteInputManager.Callback,com.android.systemui.statusbar.RemoteInputController.Delegate)>
<com.android.systemui.power.PowerUI.WarningsUI: void update(int,int,long)>
<com.android.server.infra.AbstractMasterSystemService: void registerForExtraSettingsChanges(android.content.ContentResolver,android.database.ContentObserver)>
<com.android.systemui.qs.tiles.DataSaverTile: java.lang.String composeChangeAnnouncement()>
<com.android.printspooler.model.PrintSpoolerProvider: void onServiceDisconnected(android.content.ComponentName)>
<com.android.server.usb.MtpNotificationManager.OnOpenInAppListener: void onOpenInApp(android.hardware.usb.UsbDevice)>
<com.android.server.policy.PhoneWindowManager: void registerShortcutKey(long,com.android.internal.policy.IShortcutService)>
<com.android.settingslib.bluetooth.PbapServerProfile: boolean isAutoConnectable()>
<com.android.systemui.recents.views.RecentsView: void onBusEvent(com.android.systemui.recents.events.activity.ShowEmptyViewEvent)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: boolean isGoingToSleepVisibleNotOccluded()>
<com.android.systemui.statusbar.phone.StatusBarIconList.Slot: com.android.systemui.statusbar.phone.StatusBarIconHolder getHolderForTag(int)>
<com.android.server.locksettings.SyntheticPasswordManager: long sidFromPasswordHandle(byte[])>
<com.android.server.pm.PackageSetting: void copyFrom(com.android.server.pm.PackageSetting)>
<com.android.systemui.recents.misc.DozeTrigger: void setDozeDuration(int)>
<com.android.server.hdmi.HdmiCecMessageValidator.ParameterValidator: int isValid(byte[])>
<com.android.settingslib.TwoTargetPreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.keyguard.KeyguardSecurityContainer: void showUsabilityHint()>
<android.net.ip.IpClientCallbacks: void installPacketFilter(byte[])>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: void addUnfocusedTaskOverride(com.android.systemui.recents.views.TaskView,float)>
<com.android.statementservice.retriever.AndroidPackageInfoFetcher: void <init>(android.content.Context)>
<com.android.server.biometrics.face.FaceService: void onStart()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void fling(int)>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb: java.lang.Long getCounterId(int,int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setKeyguardIndicationController(com.android.systemui.statusbar.KeyguardIndicationController)>
<com.android.systemui.statusbar.policy.InflatedSmartReplies: com.android.systemui.statusbar.policy.InflatedSmartReplies inflate(android.content.Context,com.android.systemui.statusbar.notification.collection.NotificationEntry,com.android.systemui.statusbar.policy.SmartReplyConstants,com.android.systemui.statusbar.SmartReplyController,com.android.systemui.statusbar.policy.HeadsUpManager,com.android.systemui.statusbar.policy.InflatedSmartReplies.SmartRepliesAndActions)>
<com.android.systemui.statusbar.notification.MessagingImageTransformState: int getStartActualHeight()>
<com.android.systemui.statusbar.NotificationMediaManager: void addCallback(com.android.systemui.statusbar.NotificationMediaManager.MediaListener)>
<com.android.systemui.statusbar.phone.ScrimController: void setScrimBehindDrawable(android.graphics.drawable.Drawable)>
<com.android.server.trust.TrustManagerService: void resetAgent(android.content.ComponentName,int)>
<com.android.server.location.MockProvider: void setLocation(android.location.Location)>
<com.android.server.slice.SliceFullAccessList: void upgradeXml(int,int)>
<com.android.systemui.statusbar.policy.DeviceProvisionedController: boolean isUserSetup(int)>
<com.android.systemui.statusbar.phone.PanelView: void fling(float,boolean,float,boolean)>
<com.android.systemui.statusbar.notification.NotificationEntryListener: void onInflationError(android.service.notification.StatusBarNotification,java.lang.Exception)>
<com.android.systemui.qs.tiles.WorkModeTile: void onManagedProfileChanged()>
<javax.microedition.khronos.opengles.GL10: void glAlphaFunc(int,float)>
<com.android.systemui.recents.views.lowram.TaskStackLowRamLayoutAlgorithm: float getMaxScrollP(int)>
<com.android.settingslib.graph.SignalDrawable: void <init>(android.content.Context)>
<com.android.server.biometrics.ClientMonitor: void notifyUserActivity()>
<com.android.preload.classdataretrieval.hprof.GeneralHprofDumpHandler: void onSuccess(java.lang.String,com.android.ddmlib.Client)>
<com.android.server.pm.UserManagerService: int[] getProfileIds(int,boolean)>
<com.android.server.rollback.RollbackPackageHealthObserver: void onBootCompletedAsync()>
<android.net.shared.ProvisioningConfiguration.Builder: android.net.shared.ProvisioningConfiguration.Builder withNetwork(android.net.Network)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void onVisibilityAggregated(boolean)>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: android.graphics.Rect getTaskRect()>
<com.android.settingslib.RestrictedLockUtilsInternal: com.android.settingslib.RestrictedLockUtils.EnforcedAdmin checkIfAccessibilityServiceDisallowed(android.content.Context,java.lang.String,int)>
<com.android.systemui.doze.DozeService: void requestWakeUp()>
<com.android.systemui.statusbar.KeyboardShortcutKeysLayout: boolean checkLayoutParams(android.view.ViewGroup.LayoutParams)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void translate(float,float,float)>
<com.android.systemui.SystemUIFactory.SystemUIRootComponent: com.android.systemui.fragments.FragmentService.FragmentCreator createFragmentCreator()>
<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice getDeclaredSharedLibraries(java.lang.String,int,int)>
<com.android.server.pm.UserManagerService: boolean hasUserRestriction(java.lang.String,int)>
<com.android.systemui.qs.QSPanel: boolean isExpanded()>
<com.android.systemui.statusbar.phone.StatusBar: void onHintFinished()>
<com.android.systemui.util.AsyncSensorManager: boolean requestTriggerSensorImpl(android.hardware.TriggerEventListener,android.hardware.Sensor)>
<com.android.server.notification.NotificationManagerService.NotificationAssistants: android.content.pm.ActivityInfo.Config getConfig()>
<com.android.server.pm.PackageManagerService: android.graphics.Bitmap getInstantAppIcon(java.lang.String,int)>
<com.android.server.rollback.RollbackPackageHealthObserver: void startObservingHealth(java.util.List,long)>
<com.android.commands.vr.Vr: void onRun()>
<com.android.systemui.statusbar.policy.SplitClockView: void onDetachedFromWindow()>
<com.android.systemui.statusbar.phone.NotificationIconContainer: int getFinalTranslationX()>
<com.android.server.content.SyncStorageEngine: void setPeriodicSyncAddedListener(com.android.server.content.SyncStorageEngine.PeriodicSyncAddedListener)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean getCameraDisabled(android.content.ComponentName,int)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void setHeights(int,int,int,int)>
<com.android.server.biometrics.LoggableMonitor: int statsModality()>
<com.android.server.statusbar.StatusBarManagerService: void shutdown()>
<com.android.settingslib.RestrictedSwitchPreference: void checkRestrictionAndSetDisabled(java.lang.String,int)>
<com.android.printspooler.ui.SelectPrinterActivity: void onLoaderReset(android.content.Loader)>
<com.android.server.pm.PackageManagerService: void updatePermissionFlagsForAllApps(int,int,int)>
<com.android.printservice.recommendation.plugin.mdnsFilter.VendorConfig: java.util.Collection getAllConfigs(android.content.Context)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean isExpanded()>
<com.android.systemui.statusbar.notification.TransformState: void transformViewVerticalFrom(com.android.systemui.statusbar.notification.TransformState,float)>
<com.android.systemui.statusbar.car.hvac.TemperatureView: void setTemp(float)>
<com.android.systemui.statusbar.policy.KeyguardMonitor: boolean isSecure()>
<com.android.server.ConnectivityService: boolean requestRouteToHostAddress(int,byte[])>
<com.android.gallery3d.glrenderer.BasicTexture: void recycle()>
<com.android.systemui.statusbar.notification.stack.AmbientState: com.android.systemui.statusbar.notification.stack.StackScrollAlgorithm.SectionProvider getSectionProvider()>
<com.android.systemui.qs.QSHost: void unmarkTileAsAutoAdded(java.lang.String)>
<com.android.systemui.pip.phone.PipTouchState: boolean isDoubleTap()>
<com.android.systemui.statusbar.policy.RemoteInputView: void setOnVisibilityChangedListener(java.util.function.Consumer)>
<com.android.systemui.qs.tileimpl.QSTileBaseView: void <init>(android.content.Context,com.android.systemui.plugins.qs.QSIconView,boolean)>
<com.android.server.pm.PackageInstallerSession: int[] getChildSessionIds()>
<com.android.systemui.qs.tileimpl.QSTileImpl: void refreshState(java.lang.Object)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetTexGeniv(int,int,int[],int)>
<com.android.server.pm.PackageManagerService: android.content.ComponentName getHomeActivities(java.util.List)>
<com.android.server.contentcapture.ContentCaptureManagerService: int getMaximumTemporaryServiceDurationMs()>
<com.android.systemui.statusbar.ScrimView: void invalidateDrawable(android.graphics.drawable.Drawable)>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: void drawableHotspotChanged(float,float)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void setExpandedChild(android.view.View)>
<com.android.server.accessibility.AutoclickController: void onMotionEvent(android.view.MotionEvent,android.view.MotionEvent,int)>
<android.media.Session2Token: android.os.Bundle getExtras()>
<com.android.systemui.statusbar.phone.NavigationBarView: void onDraw(android.graphics.Canvas)>
<com.android.carrierdefaultapp.CarrierDefaultBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.android.systemui.statusbar.phone.StatusBarWindowController: void setBubbleExpanded(boolean)>
<com.android.server.biometrics.ClientMonitor: boolean isAlreadyDone()>
<com.android.systemui.statusbar.notification.row.ExpandableView: int getMinClipTopAmount()>
<com.android.systemui.qs.DataUsageGraph: void onDraw(android.graphics.Canvas)>
<com.android.server.ConnectivityService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.utils.UserTokenWatcher.Callback: void acquired(int)>
<com.android.systemui.statusbar.phone.ButtonDispatcher: void setVertical(boolean)>
<com.android.systemui.statusbar.policy.KeyguardMonitor: boolean isOccluded()>
<com.android.systemui.statusbar.car.DrivingStateHelper: void <init>(android.content.Context,android.car.drivingstate.CarDrivingStateManager.CarDrivingStateEventListener)>
<com.android.systemui.ForegroundServicesDialog: void onPrepareListView(android.widget.ListView)>
<com.android.providers.settings.SettingsProvider: int makeKey(int,int)>
<com.android.settingslib.net.NetworkCycleData: long getStartTime()>
<com.android.server.timezone.RulesManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.qs.QSPanel.QSTileLayout: void setListening(boolean)>
<com.android.systemui.statusbar.policy.NetworkController.IconState: void <init>(boolean,int,int,android.content.Context)>
<com.android.systemui.statusbar.policy.KeyButtonDrawable: float getTranslationY()>
<com.android.keyguard.KeyguardHostView: boolean interceptMediaKey(android.view.KeyEvent)>
<com.android.systemui.recents.views.TaskViewTransform: boolean hasRectChangedFrom(android.view.View)>
<com.android.systemui.recents.RecentsActivity: boolean onPreDraw()>
<com.android.systemui.statusbar.policy.DateView: void updateClock()>
<com.android.server.UpdateLockService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.settingslib.widget.LinkTextView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.accessibility.EventStreamTransformation: com.android.server.accessibility.EventStreamTransformation getNext()>
<com.android.server.notification.NotificationManagerService: void onStart()>
<com.android.server.pm.PackageManagerService: int getPackageUid(java.lang.String,int,int)>
<com.android.shell.BugreportProgressService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.recents.views.TaskViewHeader: int[] onCreateDrawableState(int)>
<com.android.settingslib.widget.LayoutPreference: android.view.View findViewById(int)>
<com.android.packageinstaller.InstallInstalling: void onSaveInstanceState(android.os.Bundle)>
<com.android.uiautomator.core.UiDevice: boolean pressDPadRight()>
<android.text.NonEditableTextGenerator.RandomCharSequenceGenerator: android.text.NonEditableTextGenerator.RandomCharSequenceGenerator setSequenceLength(int)>
<com.android.systemui.statusbar.notification.row.NotificationGuts: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.StatusBarWindowView: void setStatusBarView(com.android.systemui.statusbar.phone.PhoneStatusBarView)>
<com.android.server.policy.WindowManagerPolicy.WindowManagerFuncs: java.lang.String lidStateToString(int)>
<com.android.systemui.statusbar.NotificationRemoteInputManager.RemoteInputActiveExtender: void setShouldManageLifetime(com.android.systemui.statusbar.notification.collection.NotificationEntry,boolean)>
<android.media.BufferingParams.Builder: android.media.BufferingParams.Builder setInitialMarkMs(int)>
<com.android.server.location.GnssStatusListenerHelper: void onFirstFix(int)>
<com.android.server.slice.PinnedSliceState: android.app.slice.SliceSpec[] getSpecs()>
<com.android.server.autofill.ui.PendingUi: void <init>(android.os.IBinder,int,android.view.autofill.IAutoFillManagerClient)>
<com.android.settingslib.notification.EnableZenModeDialog: java.lang.String computeAlarmWarningText(android.service.notification.Condition)>
<com.android.server.content.ContentService: void setSyncAutomatically(android.accounts.Account,java.lang.String,boolean)>
<com.android.systemui.statusbar.NotificationPresenter: boolean isPresenterFullyCollapsed()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: int getFirstItemMinHeight()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void expandWithQs()>
<com.android.server.timedetector.TimeDetectorStrategyCallbackImpl: void sendStickyBroadcast(android.content.Intent)>
<android.app.backup.BackupUtilsTest: void testIsFileSpecifiedInPathList_whenFileAndPathListHasDirectoryWhoseNameIsPrefix()>
<com.android.systemui.qs.tiles.BluetoothTile.BluetoothDetailAdapter: void onDetailItemClick(com.android.systemui.qs.QSDetailItems.Item)>
<com.android.systemui.keyguard.ScreenLifecycle.Observer: void onScreenTurnedOff()>
<com.android.commands.requestsync.RequestSync: void main(java.lang.String[])>
<com.android.systemui.screenshot.ScreenshotSelectorView: void <init>(android.content.Context)>
<com.android.keyguard.KeyguardSecurityViewFlipper: boolean needsInput()>
<com.android.systemui.statusbar.policy.NetworkControllerImpl.SubscriptionDefaults: int getDefaultDataSubId()>
<com.android.server.slice.PinnedSliceState: void pin(java.lang.String,android.app.slice.SliceSpec[],android.os.IBinder)>
<com.android.server.notification.ManagedServices: boolean isPackageOrComponentAllowed(java.lang.String,int)>
<com.android.systemui.statusbar.phone.StatusBarWindowView: void setExpandAnimationPending(boolean)>
<com.android.server.pm.DynamicCodeLoggingService: boolean onStopJob(android.app.job.JobParameters)>
<com.android.systemui.plugins.VolumeDialogController.Callbacks: void onAccessibilityModeChanged(java.lang.Boolean)>
<com.android.systemui.recents.ScreenPinningRequest: void onConfigurationChanged()>
<com.android.systemui.statusbar.phone.NotificationGroupManager.OnGroupChangeListener: void onGroupExpansionChanged(com.android.systemui.statusbar.notification.row.ExpandableNotificationRow,boolean)>
<com.android.server.policy.WindowManagerPolicy.WindowState: android.graphics.Rect getGivenContentInsetsLw()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean disallowSingleClick(android.view.MotionEvent)>
<com.android.settingslib.graph.BatteryMeterDrawableBase: void setBounds(int,int,int,int)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void verifyUnlock(com.android.internal.policy.IKeyguardExitCallback)>
<com.android.settingslib.bluetooth.LocalBluetoothProfileManager: void addServiceListener(com.android.settingslib.bluetooth.LocalBluetoothProfileManager.ServiceListener)>
<com.android.server.attention.AttentionManagerService: void onSwitchUser(int)>
<com.android.systemui.statusbar.notification.row.NotificationGutsManager: boolean bindGuts(com.android.systemui.statusbar.notification.row.ExpandableNotificationRow,com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin.MenuItem)>
<com.android.systemui.statusbar.policy.AccessibilityManagerWrapper: int getRecommendedTimeoutMillis(int,int)>
<com.android.systemui.classifier.FalsingManagerImpl: void setShowingAod(boolean)>
<com.android.uiautomator.testrunner.TestCaseCollector.TestCaseFilter: boolean accept(java.lang.reflect.Method)>
<com.android.server.biometrics.face.FaceConstants: java.lang.String logTag()>
<com.android.server.pm.UserRestrictionsUtils: void sortToGlobalAndLocal(android.os.Bundle,boolean,int,android.os.Bundle,android.os.Bundle)>
<com.android.systemui.shared.system.MetricsLoggerCompat: void action(int,int)>
<com.android.systemui.volume.VolumeDialogControllerImpl.MediaSessionsCallbacks: void onRemoteVolumeChanged(android.media.session.MediaSession.Token,int)>
<com.android.systemui.qs.QSPanel: void setTiles(java.util.Collection,boolean)>
<com.android.server.location.AbstractLocationProvider: void reportLocation(java.util.List)>
<com.android.systemui.qs.tileimpl.QSTileImpl: long getStaleTimeout()>
<com.android.systemui.recents.Recents: void toggleRecentApps()>
<com.android.systemui.qs.tiles.WifiTile: int getMetricsCategory()>
<com.android.settingslib.volume.Util: java.lang.String playbackInfoToString(android.media.session.MediaController.PlaybackInfo)>
<com.android.systemui.statusbar.phone.CollapsedStatusBarFragment: void onDestroyView()>
<com.android.server.usb.UsbDeviceManager: android.os.ParcelFileDescriptor openAccessory(android.hardware.usb.UsbAccessory,com.android.server.usb.UsbUserSettingsManager,int)>
<com.android.systemui.recents.events.activity.TaskStackUpdatedEvent: void <init>(com.android.systemui.recents.model.TaskStack,boolean)>
<com.android.server.accessibility.MotionEventInjector: void clearEvents(int)>
<android.net.netlink.NetlinkMessage: java.lang.String toString()>
<com.android.gallery3d.glrenderer.BasicTexture: void setAssociatedCanvas(com.android.gallery3d.glrenderer.GLCanvas)>
<com.android.server.uri.GrantUri: java.lang.String toString()>
<com.android.server.NativeDaemonEvent: java.lang.String[] unescapeArgs(java.lang.String)>
<com.android.systemui.stackdivider.WindowManagerProxy: int getDockSide()>
<com.android.systemui.statusbar.phone.KeyguardBouncer: boolean isAnimatingAway()>
<com.android.server.pm.PackageManagerServiceUtils: java.io.File[] getCompressedFiles(java.lang.String)>
<com.android.systemui.globalactions.GlobalActionsGridLayout: boolean shouldReverseSublists()>
<com.android.systemui.qs.external.CustomTile: int getUser()>
<com.android.settingslib.wifi.WifiUtils: java.lang.String getMeteredLabel(android.content.Context,android.net.wifi.WifiConfiguration)>
<com.android.server.firewall.FilterFactory: com.android.server.firewall.Filter newFilter(org.xmlpull.v1.XmlPullParser)>
<com.android.server.slice.SlicePermissionManager: void readRestore(org.xmlpull.v1.XmlPullParser)>
<com.android.keyguard.clock.ClockManager: void <init>(android.content.Context,com.android.systemui.util.InjectionInflationController,com.android.systemui.shared.plugins.PluginManager,com.android.systemui.colorextraction.SysuiColorExtractor,com.android.systemui.dock.DockManager)>
<com.android.keyguard.KeyguardHostView: com.android.keyguard.KeyguardSecurityModel.SecurityMode getCurrentSecurityMode()>
<com.android.systemui.stackdivider.Divider: void onDraggingStart()>
<com.android.systemui.shared.plugins.PluginManagerImpl: void handleWtfs()>
<com.android.systemui.qs.tiles.WifiTile: java.lang.String composeChangeAnnouncement()>
<com.android.server.accounts.IAccountAuthenticatorCache: boolean getBindInstantServiceAllowed(int)>
<com.android.systemui.pip.tv.PipNotification: void <init>(android.content.Context)>
<com.android.systemui.statusbar.StatusBarState: java.lang.String toShortString(int)>
<com.android.settingslib.drawable.UserIconDrawable: void draw(android.graphics.Canvas)>
<com.android.server.pm.permission.BasePermission: android.content.pm.PermissionInfo generatePermissionInfo(java.lang.String,int)>
<com.android.systemui.statusbar.phone.PanelBar: void onTrackingStarted()>
<com.android.systemui.statusbar.car.DrivingStateHelper: void disconnectFromCarService()>
<com.android.settingslib.fuelgauge.PowerWhitelistBackend: boolean isWhitelisted(java.lang.String[])>
<com.android.systemui.tuner.TunerService: void removeTunable(com.android.systemui.tuner.TunerService.Tunable)>
<com.android.wallpapercropper.WallpaperCropActivity: void init()>
<com.android.server.accounts.AccountManagerService: java.lang.String getUserData(android.accounts.Account,java.lang.String)>
<com.android.server.input.InputManagerService: void unregisterInputChannel(android.view.InputChannel)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getProfileWithMinimumFailedPasswordsForWipe(int,boolean)>
<com.android.settingslib.drawable.UserIconDrawable: int getIntrinsicHeight()>
<com.android.server.usb.descriptors.UsbInterfaceDescriptor: void report(com.android.server.usb.descriptors.report.ReportCanvas)>
<com.android.systemui.statusbar.KeyguardIndicationController: void setStatusBarKeyguardViewManager(com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager)>
<android.media.Session2Link: void onConnect(android.media.Controller2Link,int,int,int,android.os.Bundle)>
<com.android.systemui.recents.misc.SystemServicesProxy: boolean isScreenPinningActive()>
<com.android.systemui.util.leak.GarbageMonitor.MemoryTile: int getMetricsCategory()>
<com.android.server.DeviceIdleController.LocalService: int[] getPowerSaveWhitelistUserAppIds()>
<android.net.dhcp.DhcpServingParamsParcelExt: android.net.dhcp.DhcpServingParamsParcelExt setServerAddr(android.net.LinkAddress)>
<com.android.server.notification.NotificationUsageStats.SingleNotificationStats: void finish()>
<com.android.settingslib.inputmethod.InputMethodAndSubtypeUtil: void removeUnnecessaryNonPersistentPreference(androidx.preference.Preference)>
<com.android.systemui.SystemUIService: android.os.IBinder onBind(android.content.Intent)>
<com.android.server.ExtconUEventObserver: boolean namedExtconDirExists(java.lang.String)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setCrossProfileCalendarPackages(android.content.ComponentName,java.util.List)>
<com.android.systemui.classifier.FalsingManagerProxy: void onAffordanceSwipingAborted()>
<com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer: void onNotificationUpdated()>
<com.android.systemui.statusbar.policy.RemoteInputView.RemoteEditText: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.qs.QSHost: void removeCallback(com.android.systemui.qs.QSHost.Callback)>
<com.android.server.notification.ZenModeHelper: android.app.AutomaticZenRule createAutomaticZenRule(android.service.notification.ZenModeConfig.ZenRule)>
<com.android.server.pm.UserManagerService: android.content.pm.UserInfo createUser(java.lang.String,int)>
<com.android.systemui.qs.car.CarQSFooter: void setUserSwitchCallback(com.android.systemui.qs.car.CarQSFragment.UserSwitchCallback)>
<com.android.server.usb.descriptors.UsbACSelectorUnit: byte getNumPins()>
<com.android.server.slice.SlicePermissionManager.PkgUser: int getUserId()>
<com.android.server.notification.PreferencesHelper: android.app.NotificationChannel getNotificationChannel(java.lang.String,int,java.lang.String,boolean)>
<com.android.systemui.statusbar.phone.StatusBarIconController.TintedIconManager: void <init>(android.view.ViewGroup)>
<com.android.systemui.recents.views.grid.TaskViewFocusFrame: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.devicepolicy.CertificateMonitor: void onCertificateApprovalsChanged(int)>
<com.android.server.hdmi.HdmiControlService: void <init>(android.content.Context)>
<javax.obex.PasswordAuthentication: byte[] getPassword()>
<com.android.printspooler.ui.PageAdapter: int getItemCount()>
<com.android.server.notification.ManagedServices: void onUserRemoved(int)>
<com.google.android.startop.iorap.AppLaunchEvent.IntentProtoParcelable: void write(android.os.Parcel,android.content.Intent,int)>
<com.android.systemui.volume.ZenModePanel: void addZenConditions(int)>
<com.android.server.NetworkScoreService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.input.InputManagerService: void setCustomPointerIcon(android.view.PointerIcon)>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: void cancelDiscovery()>
<com.android.systemui.qs.tiles.WifiTile: boolean isAvailable()>
<com.android.server.notification.ManagedServices.ManagedServiceInfo: boolean equals(java.lang.Object)>
<com.android.systemui.pip.tv.PipControlButtonView: void startFocusGainAnimation()>
<com.android.server.policy.PhoneWindowManager: boolean checkShowToOwnerOnly(android.view.WindowManager.LayoutParams)>
<com.android.server.pm.PackageInstallerSession: void addClientProgress(float)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexEnvx(int,int,int)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void setRemoteInputController(com.android.systemui.statusbar.RemoteInputController)>
<com.android.systemui.shared.recents.model.Task.TaskKey: java.lang.String getPackageName()>
<com.android.systemui.DessertCaseView: void onSizeChanged(int,int,int,int)>
<com.android.systemui.statusbar.NotificationLockscreenUserManagerImpl: boolean isLockscreenPublicMode(int)>
<com.android.printspooler.ui.PrintActivity: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.systemui.qs.tiles.ColorInversionTile: java.lang.String composeChangeAnnouncement()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: boolean hasActiveClearableNotifications(int)>
<com.android.settingslib.net.NetworkCycleData.Builder: com.android.settingslib.net.NetworkCycleData.Builder setEndTime(long)>
<com.android.settingslib.bluetooth.HeadsetProfile: int getConnectionStatus(android.bluetooth.BluetoothDevice)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexGeniv(int,int,int[],int)>
<com.android.server.location.GeofenceProxy: com.android.server.location.GeofenceProxy createAndBind(android.content.Context,int,int,int,android.location.IGpsGeofenceHardware,android.location.IFusedGeofenceHardware)>
<com.android.systemui.plugins.qs.QSTile: void removeCallbacks()>
<com.android.server.devicepolicy.CertificateMonitor: void uninstallCaCerts(android.os.UserHandle,java.lang.String[])>
<com.android.settingslib.accessibility.AccessibilityUtils: boolean hasServiceCrashed(java.lang.String,java.lang.String,java.util.List)>
<com.android.statsd.loadtest.NumericalWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>
<com.android.systemui.statusbar.policy.RemoteInputView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.android.systemui.statusbar.GestureRecorder: void save()>
<com.android.server.IntentResolver: android.content.IntentFilter[] newArray(int)>
<com.android.keyguard.KeyguardPasswordView: void onResume(int)>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: void cancelDrag()>
<com.android.server.pm.dex.DexoptOptions: boolean isDexoptOnlySecondaryDex()>
<com.android.systemui.statusbar.notification.VisualStabilityManager: boolean isReorderingAllowed()>
<com.android.systemui.qs.tiles.UserTile: void handleUpdateState(com.android.systemui.plugins.qs.QSTile.State,java.lang.Object)>
<com.android.systemui.statusbar.KeyguardIndicationController: void onDozingChanged(boolean)>
<com.android.keyguard.KeyguardUpdateMonitor: void setKeyguardGoingAway(boolean)>
<com.android.server.camera.CameraServiceProxy: void <init>(android.content.Context)>
<com.android.systemui.qs.QSDetailItems: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.ActivityStarterDelegate: void startActivity(android.content.Intent,boolean,com.android.systemui.plugins.ActivityStarter.Callback)>
<com.android.media.remotedisplay.RemoteDisplayProvider: void updateDisplay(com.android.media.remotedisplay.RemoteDisplay)>
<com.android.server.pm.OtaDexoptService: void <init>(android.content.Context,com.android.server.pm.PackageManagerService)>
<com.android.systemui.statusbar.policy.SecurityControllerImpl: boolean hasProfileOwner()>
<com.android.settingslib.core.AbstractPreferenceController: void updateState(androidx.preference.Preference)>
<com.android.server.locksettings.LockSettingsService.Lifecycle: void <init>(android.content.Context)>
<com.android.shell.BugreportStorageProvider: android.database.Cursor queryDocument(java.lang.String,java.lang.String[])>
<com.android.systemui.statusbar.phone.HeadsUpManagerPhone: void setTrackingHeadsUp(boolean)>
<com.android.server.stats.StatsCompanionService: void sendDataBroadcast(android.os.IBinder,long)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean areChildrenExpanded()>
<com.android.server.location.GnssMeasurementsProvider: void <init>(android.content.Context,android.os.Handler)>
<com.android.systemui.qs.tileimpl.QSTileImpl.ResourceIcon: android.graphics.drawable.Drawable getInvisibleDrawable(android.content.Context)>
<com.android.server.LockGuard: java.lang.Object guard(java.lang.Object)>
<com.android.systemui.statusbar.CommandQueue: void appTransitionCancelled(int)>
<com.android.preload.Main: com.android.ddmlib.IDevice getDevice()>
<com.android.systemui.statusbar.SysuiStatusBarStateController: boolean fromShadeLocked()>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.server.AppStateTracker: void dump(java.io.PrintWriter,java.lang.String)>
<com.android.systemui.assist.AssistOrbView: void onFinishInflate()>
<com.android.settingslib.accounts.AuthenticatorHelper: void preloadDrawableForType(android.content.Context,java.lang.String)>
<com.android.server.soundtrigger.SoundTriggerService: void onStartUser(int)>
<com.android.packageinstaller.PackageInstallerActivity.AppErrorDialog: void onCancel(android.content.DialogInterface)>
<com.android.server.biometrics.fingerprint.FingerprintConstants: java.lang.String tagAuthToken()>
<com.android.server.AppStateTracker.Listener: void stopForegroundServicesForUidPackage(int,java.lang.String)>
<com.android.server.broadcastradio.hal2.BroadcastRadioService: void <init>(int)>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: void reloadOnConfigurationChange(android.content.Context)>
<android.net.NetworkMonitorManager: boolean notifyNetworkDisconnected()>
<com.android.systemui.statusbar.phone.StatusBar: int getStatusBarMode()>
<com.android.systemui.statusbar.notification.row.NotificationBlockingHelperManager: void <init>(android.content.Context)>
<com.android.server.notification.ZenModeHelper: void writeXml(org.xmlpull.v1.XmlSerializer,boolean,java.lang.Integer,int)>
<com.android.systemui.DessertCaseView: void <init>(android.content.Context)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getOrganizationColorForUser(int)>
<com.android.gallery3d.exif.ExifInterface: int getAllowedIfdFlagsFromInfo(int)>
<com.android.server.content.ContentService.ObserverNode: boolean removeObserverLocked(android.database.IContentObserver)>
<com.android.systemui.volume.SegmentedButtons: void update()>
<com.android.systemui.statusbar.policy.KeyButtonRipple: void draw(android.graphics.Canvas)>
<com.android.server.security.KeyAttestationApplicationIdProviderService: void <init>(android.content.Context)>
<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice queryIntentContentProviders(android.content.Intent,java.lang.String,int,int)>
<com.android.printservice.recommendation.plugin.mopria.MopriaRecommendationPlugin: java.util.ArrayList getPrinters()>
<com.android.server.autofill.ui.AutoFillUI: void clearCallback(com.android.server.autofill.ui.AutoFillUI.AutoFillUiCallback)>
<com.android.server.lights.LightsService: void <init>(android.content.Context)>
<com.android.systemui.statusbar.CommandQueue: void setSystemUiVisibility(int,int,int,int,int,android.graphics.Rect,android.graphics.Rect,boolean)>
<com.android.carrierdefaultapp.CaptivePortalLoginActivity: void onCreate(android.os.Bundle)>
<com.android.server.notification.NotificationRecord: android.metrics.LogMaker getLogMaker(long)>
<com.android.systemui.classifier.SpeedVarianceEvaluator: float evaluate(float)>
<com.android.server.LockGuard: java.lang.Object installLock(java.lang.Object,java.lang.String)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: int getLayoutMinHeight()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void runAfterAnimationFinished(java.lang.Runnable)>
<com.android.settingslib.deviceinfo.AbstractUptimePreferenceController: void <init>(android.content.Context,com.android.settingslib.core.lifecycle.Lifecycle)>
<com.android.systemui.recents.ScreenPinningRequest: void onNavigationModeChanged(int)>
<com.android.server.role.RoleManagerInternal: android.util.ArrayMap getRolesAndHolders(int)>
<com.android.server.locksettings.recoverablekeystore.KeySyncUtils: byte[] decryptRecoveryClaimResponse(byte[],byte[],byte[])>
<com.android.server.slice.SliceProviderPermissions: void writeTo(org.xmlpull.v1.XmlSerializer)>
<com.android.systemui.statusbar.HeadsUpStatusBarView: void onLayout(boolean,int,int,int,int)>
<com.android.printspooler.ui.FusedPrintersProvider: void onReset()>
<com.android.server.accessibility.MagnificationController: boolean setScaleAndCenter(int,float,float,float,boolean,int)>
<com.android.settingslib.applications.StorageStatsSource: long getCacheQuotaBytes(java.lang.String,int)>
<com.android.systemui.statusbar.notification.NotificationEntryManager: void updateNotifications()>
<com.android.server.utils.FlagNamespaceUtils: void resetDeviceConfig(int,java.util.List)>
<com.android.systemui.qs.QSContainerImpl: void onMeasure(int,int)>
<com.android.server.locksettings.SyntheticPasswordManager: long generateHandle()>
<com.android.settingslib.applications.ApplicationsState.VolumeFilter: void init()>
<com.android.systemui.shared.recents.model.TaskKeyCache: void evictAll()>
<com.android.systemui.qs.tiles.DataSaverTile: void handleUpdateState(com.android.systemui.plugins.qs.QSTile.BooleanState,java.lang.Object)>
<com.android.systemui.qs.tiles.CellularTile: com.android.systemui.plugins.qs.QSTile.SignalState newTileState()>
<com.android.future.usb.UsbAccessory: java.lang.String toString()>
<com.android.server.pm.dex.DexoptOptions: boolean isDexoptInstallWithDexMetadata()>
<com.android.settingslib.location.InjectedSetting.Builder: com.android.settingslib.location.InjectedSetting.Builder setClassName(java.lang.String)>
<com.android.systemui.util.AutoMarqueeTextView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.notification.NotificationClicker: void onClick(android.view.View)>
<com.android.systemui.doze.DozeHost.Callback: void onPowerSaveChanged(boolean)>
<com.android.systemui.bubbles.BubbleController: void expandStackAndSelectBubble(java.lang.String)>
<com.android.systemui.shared.system.QuickStepContract: boolean isBackGestureDisabled(int)>
<com.android.server.accessibility.AccessibilityManagerService.UserState: boolean setSoftKeyboardModeLocked(int,android.content.ComponentName)>
<com.android.nfc_extras.EeListenModeException: void <init>(java.lang.String)>
<com.android.systemui.qs.AlphaControlledSignalTileView.AlphaControlledSlashImageView: void <init>(android.content.Context)>
<com.android.systemui.pip.tv.PipManager: void closePip()>
<com.android.systemui.plugins.FalsingManager: void onNotificatonStopDismissing()>
<com.android.systemui.recents.views.TaskStackAnimationHelper: void startNewStackScrollAnimation(com.android.systemui.recents.model.TaskStack,com.android.systemui.recents.misc.ReferenceCountedTrigger)>
<com.android.server.policy.WindowManagerPolicy: boolean isKeyguardShowingAndNotOccluded()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: android.view.View getContentView()>
<com.android.server.usb.descriptors.Usb10ACInputTerminal: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>
<com.android.systemui.statusbar.KeyguardAffordanceView: void <init>(android.content.Context)>
<android.media.MediaPlayer2: java.lang.Object skipToNext()>
<com.android.systemui.classifier.FalsingLog: void wtf(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.android.server.pm.PackageKeySetData: void removeAllDefinedKeySets()>
<com.android.systemui.shared.recents.model.TaskKeyLruCache: void evictAllCache()>
<com.android.systemui.recents.OverviewProxyService: void setSystemUiStateFlag(int,boolean,int)>
<com.android.wallpapercropper.CropView: android.graphics.Point getSourceDimensions()>
<com.android.server.accessibility.AutoclickController: void <init>(android.content.Context,int)>
<com.android.systemui.fragments.FragmentService: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.server.biometrics.face.FaceUtils: com.android.server.biometrics.face.FaceUtils getInstance()>
<com.android.systemui.recents.OverviewProxyService: void notifyQuickScrubStarted()>
<com.android.systemui.shared.system.RecentsAnimationListener: void onAnimationStart(com.android.systemui.shared.system.RecentsAnimationControllerCompat,com.android.systemui.shared.system.RemoteAnimationTargetCompat[],android.graphics.Rect,android.graphics.Rect)>
<android.app.backup.BackupUtilsTest: void testIsFileSpecifiedInPathList_whenFileAndPathListHasItsDirectory()>
<com.android.gallery3d.glrenderer.GLES20Canvas: void drawTexture(com.android.gallery3d.glrenderer.BasicTexture,android.graphics.RectF,android.graphics.RectF)>
<com.android.server.TelephonyRegistry: void notifyOemHookRawEventForSubscriber(int,int,byte[])>
<com.android.server.pm.UserRestrictionsUtils: boolean isValidRestriction(java.lang.String)>
<android.util.ArraySetPerfTest: void testRemoveIf_Large_RemoveNothing()>
<com.android.systemui.glwallpaper.GLWallpaperRenderer: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.doze.DozeLog: void traceScreenOn()>
<com.android.server.accounts.AccountManagerBackupHelper: void <init>(com.android.server.accounts.AccountManagerService,android.accounts.AccountManagerInternal)>
<javax.microedition.khronos.opengles.GL10: void glClearColorx(int,int,int,int)>
<com.android.server.accessibility.MagnificationController: void register(int)>
<com.android.server.utils.ManagedApplicationService: int getUserId()>
<com.android.server.locksettings.LockSettingsStrongAuth: void reportUnlock(int)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void generateHeadsUpAnimation(com.android.systemui.statusbar.notification.collection.NotificationEntry,boolean)>
<com.android.settingslib.core.instrumentation.SharedPreferencesLogger: java.lang.String buildPrefKey(java.lang.String,java.lang.String)>
<com.android.server.location.ComprehensiveCountryDetector: android.location.Country getSimBasedCountry()>
<com.android.server.search.SearchManagerService.Lifecycle: void onStart()>
<com.android.systemui.shared.recents.model.Task: void <init>(com.android.systemui.shared.recents.model.Task.TaskKey)>
<com.android.server.appbinding.finders.AppServiceFinder: void startMonitoring()>
<com.android.server.ServiceWatcher: boolean isSignatureMatch(android.content.pm.Signature[],java.util.List)>
<com.google.android.startop.iorap.AppLaunchEvent.ActivityLaunchCancelled: boolean equals(java.lang.Object)>
<com.android.systemui.volume.Interaction.Callback: void onInteraction()>
<com.android.gallery3d.util.IntArray: int[] getInternalArray()>
<com.android.server.usb.descriptors.report.HTMLReportCanvas: void closeList()>
<com.android.systemui.volume.VolumeDialogControllerImpl.MediaSessionsCallbacks: void onRemoteUpdate(android.media.session.MediaSession.Token,java.lang.String,android.media.session.MediaController.PlaybackInfo)>
<com.android.server.pm.ProtectedPackages: boolean isPackageDataProtected(int,java.lang.String)>
<com.android.server.policy.WindowManagerPolicy: void setRecentsVisibilityLw(boolean)>
<javax.microedition.khronos.opengles.GL11: void glClipPlanex(int,int[],int)>
<com.android.systemui.RegionInterceptingFrameLayout.RegionInterceptableView: android.graphics.Region getInterceptRegion()>
<com.android.systemui.statusbar.policy.NetworkController: void setWifiEnabled(boolean)>
<com.android.systemui.bubbles.animation.PhysicsAnimationLayout.PhysicsPropertyAnimator: com.android.systemui.bubbles.animation.PhysicsAnimationLayout.PhysicsPropertyAnimator scaleY(float,float,java.lang.Runnable[])>
<com.android.systemui.globalactions.GlobalActionsDialog.Action: boolean isEnabled()>
<com.android.server.tv.TvInputHardwareManager.Listener: void onStateChanged(java.lang.String,int)>
<com.android.systemui.tuner.CustomListPreference.CustomListPreferenceDialogFragment: android.content.DialogInterface.OnClickListener getOnItemClickListener()>
<com.android.uiautomator.core.UiAutomationShellWrapper: void disconnect()>
<com.android.systemui.volume.VolumeDialogImpl: void setSilentMode(boolean)>
<com.android.systemui.statusbar.phone.StatusBar: void addQsTile(android.content.ComponentName)>
<com.android.systemui.biometrics.BiometricDialogView: android.view.ViewGroup getLayout()>
<com.android.server.audio.AudioService: void setSpeakerphoneOn(boolean)>
<com.android.systemui.statusbar.NotificationShelf: com.android.systemui.statusbar.phone.NotificationIconContainer getShelfIcons()>
<android.media.MediaController2.ControllerCallback: void onCommandResult(android.media.MediaController2,java.lang.Object,android.media.Session2Command,android.media.Session2Command.Result)>
<com.android.server.usb.descriptors.Usb10ACHeader: byte getControls()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setPasswordMinimumSymbols(android.content.ComponentName,int,boolean)>
<com.android.systemui.biometrics.FaceDialogView: void onLayout(boolean,int,int,int,int)>
<com.android.settingslib.wifi.WifiTracker: int getNumSavedNetworks()>
<com.android.server.ConnectivityService: void notifyNetworkAvailable(com.android.server.connectivity.NetworkAgentInfo,com.android.server.ConnectivityService.NetworkRequestInfo)>
<com.android.systemui.statusbar.policy.ZenModeController: android.content.ComponentName getEffectsSuppressor()>
<com.android.settingslib.bluetooth.LocalBluetoothProfile: boolean accessProfileEnabled()>
<com.android.systemui.statusbar.StatusBarStateControllerImpl: float getDozeAmount()>
<com.android.systemui.qs.tileimpl.QSTileBaseView: void <init>(android.content.Context,com.android.systemui.plugins.qs.QSIconView)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: boolean isInsideQsContainer(android.view.MotionEvent)>
<com.android.keyguard.clock.ImageClock: void setClockColors(int,int)>
<com.android.server.pm.permission.BasePermission: boolean isSystemTextClassifier()>
<com.android.systemui.biometrics.BiometricDialogView: void showTemporaryMessage(java.lang.String)>
<com.android.systemui.fragments.FragmentHostManager: void removeAndDestroy(android.view.View)>
<android.media.Media2HTTPConnection: java.lang.String getMIMEType()>
<com.android.server.pm.UserManagerService: java.util.List getProfiles(int,boolean)>
<com.android.systemui.statusbar.phone.PanelView: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.volume.CarVolumeItemAdapter: int getItemCount()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void onWindowFocusChanged(boolean)>
<com.android.server.pm.PackageManagerService: java.lang.String getServicesSystemSharedLibraryPackageName()>
<com.android.systemui.statusbar.notification.stack.ExpandableViewState: void applyToView(android.view.View)>
<com.android.systemui.recents.views.TaskView: void <init>(android.content.Context)>
<com.android.settingslib.net.NetworkStatsSummaryLoader.Builder: com.android.settingslib.net.NetworkStatsSummaryLoader.Builder setNetworkTemplate(android.net.NetworkTemplate)>
<com.android.settingslib.core.lifecycle.ObservableActivity: void onResume()>
<com.android.server.display.whitebalance.DisplayWhiteBalanceController: void dump(java.io.PrintWriter)>
<com.android.keyguard.KeyguardPINView: boolean hasOverlappingRendering()>
<com.android.settingslib.media.ConnectionRecordManager: java.lang.String getLastSelectedDevice()>
<com.android.packageinstaller.wear.WearPackageIconProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
<com.android.printservice.recommendation.plugin.mdnsFilter.VendorConfig.TagReader: java.lang.Object readTag(org.xmlpull.v1.XmlPullParser,java.lang.String)>
<com.android.systemui.recents.views.TaskView: void setTouchEnabled(boolean)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void updateInflationFlag(int,boolean)>
<com.android.settingslib.bluetooth.A2dpProfile: void setHighQualityAudioEnabled(android.bluetooth.BluetoothDevice,boolean)>
<android.app.ResourcesThemePerfTest: void setUp()>
<com.android.systemui.shared.system.TaskStackChangeListeners: void onActivityUnpinned()>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void appTransitionStarting(int,long,long,boolean)>
<com.android.systemui.plugins.qs.QSTile: void refreshState()>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getPasswordHistoryLength(android.content.ComponentName,int,boolean)>
<com.android.systemui.statusbar.policy.CallbackHandler: void handleMessage(android.os.Message)>
<com.android.systemui.statusbar.policy.KeyButtonView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.android.server.pm.PackageManagerService: boolean performDexOptSecondary(java.lang.String,java.lang.String,boolean)>
<com.android.systemui.volume.SafetyWarningDialog: void onClick(android.content.DialogInterface,int)>
<com.android.settingslib.bluetooth.HearingAidProfile: int getPreferred(android.bluetooth.BluetoothDevice)>
<com.android.systemui.stackdivider.DividerView: void stopDragging(int,com.android.internal.policy.DividerSnapAlgorithm.SnapTarget,long,android.view.animation.Interpolator,long)>
<com.android.keyguard.KeyguardSecurityContainer: com.android.keyguard.KeyguardSecurityModel.SecurityMode getCurrentSecurityMode()>
<android.media.Media2HTTPConnection: long getSize()>
<com.android.systemui.recents.views.RecentsView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.android.systemui.plugins.ActivityStarter.OnDismissAction: boolean onDismiss()>
<com.android.server.NetworkManagementService: boolean isNetworkRestricted(int)>
<com.android.server.biometrics.AuthenticationClient: int handleFailedAttempt()>
<com.android.systemui.tuner.CustomListPreference.CustomListPreferenceDialogFragment: void onPrepareDialogBuilder(android.app.AlertDialog.Builder)>
<com.android.systemui.appops.AppOpsControllerImpl.H: void scheduleRemoval(com.android.systemui.appops.AppOpItem,long)>
<com.android.systemui.recents.RecentsActivity: void onBusEvent(com.android.systemui.recents.events.activity.LaunchTaskSucceededEvent)>
<com.android.server.autofill.AutofillCompatAccessibilityService: void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.android.systemui.tuner.RadioListPreference: void setSummary(java.lang.CharSequence)>
<com.android.packageinstaller.UninstallFinish: void onReceive(android.content.Context,android.content.Intent)>
<com.android.systemui.shared.recents.model.Task: void setWindowingMode(int)>
<com.android.systemui.classifier.FalsingManagerProxy: void onTrackingStopped()>
<com.android.systemui.tuner.TunerActivity.SubSettingsFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)>
<com.android.systemui.qs.car.CarQSFooter: void setExpanded(boolean)>
<com.android.systemui.statusbar.RemoteInputController: boolean isSpinning(java.lang.String)>
<com.android.photos.views.TiledImageView: void positionFromMatrix(android.graphics.Matrix)>
<com.android.systemui.recents.views.lowram.TaskStackLowRamLayoutAlgorithm: void getFrontOfStackTransform(com.android.systemui.recents.views.TaskViewTransform,com.android.systemui.recents.views.TaskStackLayoutAlgorithm)>
<com.android.settingslib.RestrictedLockUtils.EnforcedAdmin: int hashCode()>
<com.android.server.ConnectivityService: boolean isCallerCurrentAlwaysOnVpnApp()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setScrollingEnabled(boolean)>
<com.android.settingslib.net.DataUsageController: void setNetworkController(com.android.settingslib.net.DataUsageController.NetworkNameProvider)>
<com.android.settingslib.bluetooth.A2dpProfile: android.bluetooth.BluetoothDevice getActiveDevice()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isSecurityLoggingEnabled(android.content.ComponentName)>
<com.android.printservice.recommendation.plugin.samsung.SamsungRecommendationPlugin: java.lang.CharSequence getPackageName()>
<com.android.systemui.statusbar.phone.NavigationBarView: com.android.systemui.statusbar.policy.KeyButtonDrawable getBackDrawable()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: float getCurrentOverScrolledPixels(boolean)>
<com.android.media.remotedisplay.RemoteDisplay: java.lang.String getId()>
<com.android.server.pm.PackageManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.inputmethod.InputMethodManagerService: void addClient(com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext,int)>
<com.android.systemui.statusbar.phone.KeyguardStatusBarView: void setKeyguardUserSwitcher(com.android.systemui.statusbar.policy.KeyguardUserSwitcher)>
<com.android.systemui.statusbar.policy.RemoteInputView: void close()>
<com.android.systemui.recents.OverviewProxyRecentsImpl: void toggleRecentApps()>
<com.android.server.pm.UserManagerService: boolean exists(int)>
<com.android.providers.settings.SettingsBackupAgent: void onCreate()>
<com.android.server.notification.ImportanceExtractor: com.android.server.notification.RankingReconsideration process(com.android.server.notification.NotificationRecord)>
<com.android.systemui.statusbar.notification.stack.AmbientState: int getIntrinsicPadding()>
<com.android.systemui.bubbles.animation.ExpandedAnimationController: void demagnetizeBubbleTo(float,float,float,float)>
<android.net.ip.IpServer.Dependencies: android.net.ip.RouterAdvertisementDaemon getRouterAdvertisementDaemon(android.net.util.InterfaceParams)>
<com.android.systemui.statusbar.phone.NavigationBarView: void setOnVerticalChangedListener(com.android.systemui.statusbar.phone.NavigationBarView.OnVerticalChangedListener)>
<com.android.server.usb.descriptors.Usb20ASGeneral: byte getNumChannels()>
<com.android.systemui.statusbar.phone.StatusBar: android.content.pm.PackageManager getPackageManagerForUser(android.content.Context,int)>
<com.android.systemui.statusbar.policy.KeyButtonDrawable: void clearAnimationCallbacks()>
<com.android.server.voiceinteraction.VoiceInteractionManagerService: void onUnlockUser(int)>
<com.android.systemui.power.PowerNotificationWarnings: void showUsbHighTemperatureAlarm()>
<com.android.systemui.statusbar.AlertingNotificationManager: boolean removeNotification(java.lang.String,boolean)>
<com.android.externalstorage.ExternalStorageProvider: void onDocIdDeleted(java.lang.String)>
<com.android.keyguard.KeyguardStatusView: int getClockPreferredY(int)>
<com.android.fakeoemfeatures.FakeView: void onDraw(android.graphics.Canvas)>
<com.android.systemui.SlicePermissionActivity: void onCreate(android.os.Bundle)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glCopyTexImage2D(int,int,int,int,int,int,int,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean hasGrantedPolicy(android.content.ComponentName,int,int)>
<com.android.systemui.tuner.RadioListPreference: void onDialogStateRestored(android.app.DialogFragment,android.app.Dialog,android.os.Bundle)>
<android.util.ArraySetPerfTest: void testValueAt_InBounds()>
<javax.obex.ClientSession: long getConnectionID()>
<com.android.systemui.util.AutoMarqueeTextView: void onAttachedToWindow()>
<com.android.systemui.statusbar.policy.HeadsUpUtil: boolean isClickedHeadsUpNotification(android.view.View)>
<com.android.settingslib.bluetooth.BluetoothCallback: void onDeviceBondStateChanged(com.android.settingslib.bluetooth.CachedBluetoothDevice,int)>
<com.android.systemui.plugins.qs.DetailAdapter: android.content.Intent getSettingsIntent()>
<com.android.systemui.assist.AssistOrbContainer: com.android.systemui.assist.AssistOrbView getOrb()>
<com.android.server.Watchdog.HandlerChecker: void run()>
<com.android.server.GraphicsStatsService: android.os.ParcelFileDescriptor requestBufferForProcess(java.lang.String,android.view.IGraphicsStatsCallback)>
<com.android.systemui.bubbles.BubbleController: boolean isForegroundApp(android.content.Context,java.lang.String)>
<com.android.systemui.bubbles.BubbleStackView: void onThemeChanged()>
<com.android.systemui.pip.BasePipManager: void expandPip()>
<com.android.server.twilight.TwilightState: long sunsetTimeMillis()>
<com.android.server.biometrics.AuthenticationClient: int start()>
<com.android.server.biometrics.face.FaceService: com.android.server.biometrics.Constants getConstants()>
<com.android.keyguard.clock.BubbleClockController: android.view.View getBigClockView()>
<com.android.systemui.statusbar.policy.BluetoothController.Callback: void onBluetoothDevicesChanged()>
<com.android.systemui.shared.recents.model.TaskKeyLruCache.EvictionCallback: void onEntryEvicted(com.android.systemui.shared.recents.model.Task.TaskKey)>
<com.android.server.audio.AudioService: void <init>(android.content.Context)>
<com.android.systemui.qs.tiles.RotationLockTile: com.android.systemui.plugins.qs.QSTile.BooleanState newTileState()>
<com.android.systemui.bubbles.BubbleData: boolean hasBubbles()>
<com.android.preload.ui.SequenceUI: java.io.File showSaveDialog()>
<com.android.server.content.SyncStorageEngine: void setIsSyncable(android.accounts.Account,int,java.lang.String,int,int,int)>
<javax.microedition.khronos.opengles.GL10: void glDrawElements(int,int,int,java.nio.Buffer)>
<com.android.systemui.statusbar.KeyboardShortcutKeysLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.analytics.SensorLoggerSession: void addSensorEvent(android.hardware.SensorEvent,long)>
<com.android.systemui.qs.tiles.WifiTile.WifiDetailAdapter: void setToggleState(boolean)>
<com.android.systemui.statusbar.policy.NetworkController: com.android.settingslib.net.DataUsageController getMobileDataController()>
<com.android.settingslib.RestrictedLockUtils: com.android.settingslib.RestrictedLockUtils.EnforcedAdmin getProfileOrDeviceOwner(android.content.Context,java.lang.String,android.os.UserHandle)>
<com.android.systemui.doze.DozeMachine: void setParts(com.android.systemui.doze.DozeMachine.Part[])>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean setResetPasswordToken(android.content.ComponentName,byte[])>
<com.android.systemui.plugins.qs.QSTile.State: java.lang.StringBuilder toStringBuilder()>
<com.android.keyguard.clock.AnalogClockController: boolean shouldShowStatusArea()>
<com.android.server.pm.ProcessLoggingHandler: void handleMessage(android.os.Message)>
<com.android.systemui.statusbar.phone.PanelView: boolean isDozing()>
<com.android.systemui.tuner.ClockPreference: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.notification.TransformState: void setIsSameAsAnyView(boolean)>
<com.android.systemui.classifier.ClassifierData: java.util.ArrayList getEndingStrokes()>
<javax.microedition.khronos.opengles.GL10: void glLoadMatrixx(java.nio.IntBuffer)>
<com.android.systemui.ExpandHelper: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.server.soundtrigger.SoundTriggerService: void onStart()>
<com.android.server.notification.NotificationDelegate: void onNotificationActionClick(int,int,java.lang.String,int,android.app.Notification.Action,com.android.internal.statusbar.NotificationVisibility,boolean)>
<android.view.autofill.MyAutofillService: void onSaveRequest(android.service.autofill.SaveRequest,android.service.autofill.SaveCallback)>
<com.android.systemui.recents.views.TaskViewHeader: boolean onLongClick(android.view.View)>
<com.android.systemui.qs.customize.TileAdapter.Holder: void stopDrag()>
<com.android.systemui.statusbar.notification.stack.ViewState: float getFinalTranslationZ(android.view.View)>
<com.android.systemui.qs.car.CarQSFooter: void setExpansion(float)>
<com.android.server.pm.BackgroundDexOptService: void notifyPackageChanged(java.lang.String)>
<com.android.settingslib.utils.PowerUtil: long roundTimeToNearestThreshold(long,long)>
<com.android.server.usb.descriptors.Usb10ASFormatI: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>
<com.android.statsd.loadtest.DisplayProtoUtils: void displayLogReport(java.lang.StringBuilder,com.android.os.StatsLog.ConfigMetricsReportList)>
<com.android.keyguard.EmergencyButton: void setCallback(com.android.keyguard.EmergencyButton.EmergencyButtonCallback)>
<com.android.systemui.qs.external.TileServiceManager: void handleDestroy()>
<com.android.systemui.volume.VolumeDialogControllerImpl.MediaSessionsCallbacks: void setStreamVolume(int,int)>
<com.android.server.locksettings.SyntheticPasswordManager: com.android.server.locksettings.SyntheticPasswordManager.AuthenticationToken newSyntheticPasswordAndSid(android.service.gatekeeper.IGateKeeperService,byte[],byte[],int)>
<com.android.systemui.statusbar.phone.BarTransitions: void onTransition(int,int,boolean)>
<android.media.MediaPlayer2: android.media.DataSourceDesc getCurrentDataSource()>
<android.media.filterfw.samples.CameraEffectsRecordingSample: void onPause()>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: void onDeviceBondStateChanged(com.android.settingslib.bluetooth.CachedBluetoothDevice,int)>
<com.android.systemui.statusbar.policy.DeviceProvisionedControllerImpl: void removeCallback(com.android.systemui.statusbar.policy.DeviceProvisionedController.DeviceProvisionedListener)>
<com.android.systemui.statusbar.phone.LockscreenWallpaper: void onWallpaperChanged()>
<com.android.keyguard.KeyguardSimPinView: void showUsabilityHint()>
<com.android.server.slice.PinnedSliceState: boolean unpin(java.lang.String,android.os.IBinder)>
<com.android.statementservice.retriever.Statement: java.lang.String toString()>
<com.android.gallery3d.exif.ExifInterface: java.lang.Long getTagLongValue(int)>
<com.android.systemui.recents.utilities.AnimationProps: android.view.animation.Interpolator getInterpolator(int)>
<com.android.server.content.ContentService.ObserverNode: void collectObserversLocked(android.net.Uri,int,android.database.IContentObserver,boolean,int,int,java.util.ArrayList)>
<android.database.SQLiteDatabaseIoPerfTest: void tearDown()>
<com.android.systemui.classifier.FalsingManagerProxy: void setNotificationExpanded()>
<com.android.uiautomator.core.Tracer: void setOutputFilename(java.lang.String)>
<com.android.server.notification.PreferencesHelper: int getBlockedChannelCount(java.lang.String,int)>
<com.android.systemui.qs.PageIndicator: void setLocation(float)>
<com.android.systemui.statusbar.notification.stack.NotificationListContainer: void addContainerView(android.view.View)>
<com.android.server.pm.PackageManagerService: boolean isPackageDeviceAdminOnAnyUser(java.lang.String)>
<com.android.systemui.HardwareBgDrawable: void setCutPoint(int)>
<com.android.systemui.statusbar.notification.stack.AmbientState: void setLastVisibleBackgroundChild(com.android.systemui.statusbar.notification.row.ActivatableNotificationView)>
<com.android.commands.hid.Event: int getDuration()>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: void onConnectionStateChanged(com.android.settingslib.bluetooth.CachedBluetoothDevice,int)>
<com.android.systemui.SystemUIFactory: com.android.systemui.statusbar.KeyguardIndicationController createKeyguardIndicationController(android.content.Context,android.view.ViewGroup,com.android.systemui.statusbar.phone.LockIcon)>
<com.android.systemui.statusbar.policy.ConfigurationController.ConfigurationListener: void onLocaleListChanged()>
<com.android.server.policy.SoftRestrictedPermissionPolicy: int getDesiredOpMode()>
<com.android.systemui.qs.car.CarQSFragment: void notifyCustomizeChanged()>
<com.android.printspooler.ui.PageAdapter: void finalize()>
<com.android.server.audio.PlayerFocusEnforcer: void unmutePlayersForCall()>
<com.android.server.biometrics.iris.IrisService: void checkUseBiometricPermission()>
<com.android.systemui.classifier.brightline.TimeLimitedMotionEventBuffer: int lastIndexOf(java.lang.Object)>
<com.android.server.ConnectivityService: android.net.NetworkRequest listenForNetwork(android.net.NetworkCapabilities,android.os.Messenger,android.os.IBinder)>
<com.android.settingslib.location.SettingsInjector.Setting: void maybeLogElapsedTime()>
<com.android.location.provider.ActivityRecognitionProvider.Sink: void onActivityChanged(com.android.location.provider.ActivityChangedEvent)>
<com.android.systemui.statusbar.phone.StatusBar: void endAffordanceLaunch()>
<com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem: void <init>(com.android.server.hdmi.HdmiControlService)>
<com.android.server.display.BrightnessTracker: void notifyBrightnessChanged(float,boolean,float,boolean,boolean)>
<com.android.systemui.statusbar.policy.SecurityController: boolean hasProfileOwner()>
<com.android.settingslib.development.AbstractEnableAdbPreferenceController: void enablePreference(boolean)>
<com.android.systemui.qs.TileLayout: void addTile(com.android.systemui.qs.QSPanel.TileRecord)>
<com.android.systemui.statusbar.phone.StatusBar: void onDensityOrFontScaleChanged()>
<com.android.server.TelephonyRegistry: void notifyDisconnectCause(int,int,int,int)>
<com.android.settingslib.net.UidDetailProvider: com.android.settingslib.net.UidDetail getUidDetail(int,boolean)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void addAfterKeyguardGoneRunnable(java.lang.Runnable)>
<com.android.systemui.statusbar.phone.EdgeBackGestureHandler: void onDisplayAdded(int)>
<com.android.systemui.qs.QSDetailClipper: void showBackground()>
<com.android.systemui.statusbar.policy.HotspotController: int getNumConnectedDevices()>
<com.android.systemui.shared.plugins.PluginManager: void addPluginListener(java.lang.String,com.android.systemui.plugins.PluginListener,java.lang.Class,boolean)>
<com.android.systemui.pip.tv.PipControlsView: void onAttachedToWindow()>
<com.android.systemui.statusbar.policy.KeyguardMonitorImpl: boolean isLaunchTransitionFadingAway()>
<com.android.uiautomator.core.InstrumentationUiAutomatorBridge: int getRotation()>
<com.android.server.print.RemotePrintSpooler.PrintSpoolerCallbacks: void onPrintJobStateChanged(android.print.PrintJobInfo)>
<com.android.systemui.statusbar.policy.NetworkController.AccessPointController: boolean connect(com.android.settingslib.wifi.AccessPoint)>
<com.android.systemui.recents.views.TaskView: void onSizeChanged(int,int,int,int)>
<com.android.systemui.analytics.SensorLoggerSession: void setTouchArea(int,int)>
<com.android.settingslib.widget.ActionButtonsPreference: com.android.settingslib.widget.ActionButtonsPreference setButton4Visible(boolean)>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: boolean isDimmable()>
<com.android.server.usb.descriptors.report.ReportCanvas: void write(java.lang.String)>
<com.android.server.ConnectivityService: android.net.ProxyInfo getGlobalProxy()>
<com.android.wallpapercropper.WallpaperCropActivity.OnBitmapCroppedHandler: void onBitmapCropped(byte[])>
<com.android.server.DeviceIdleController: int[] getAppIdWhitelistInternal()>
<com.android.settingslib.notification.ZenDurationDialog: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.KeyguardIndicationTextView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.settingslib.bluetooth.BluetoothCallback: void onAudioModeChanged()>
<com.android.systemui.qs.tileimpl.QSTileView: void <init>(android.content.Context,com.android.systemui.plugins.qs.QSIconView,boolean)>
<com.android.preload.classdataretrieval.hprof.GeneralHprofDumpHandler: void removeHandler(com.android.ddmlib.ClientData.IHprofDumpHandler)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isLogoutEnabled()>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void disable(int,int,int,boolean)>
<javax.microedition.khronos.opengles.GL10Ext: int glQueryMatrixxOES(java.nio.IntBuffer,java.nio.IntBuffer)>
<com.android.server.locksettings.LockSettingsService: void closeSession(java.lang.String)>
<com.android.systemui.statusbar.phone.PanelView: boolean fullyExpandedClearAllVisible()>
<com.android.settingslib.inputmethod.InputMethodAndSubtypeUtilCompat: void loadInputMethodSubtypeList(androidx.preference.PreferenceFragmentCompat,android.content.ContentResolver,java.util.List,java.util.Map)>
<com.android.systemui.statusbar.notification.stack.AnimationFilter: boolean shouldAnimateY(android.view.View)>
<com.android.server.content.ContentService: android.content.SyncAdapterType[] getSyncAdapterTypes()>
<com.android.server.LocationManagerService: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>
<com.android.server.policy.WindowManagerPolicy.WindowState: int getSystemUiVisibility()>
<com.android.server.IpSecService: android.net.IpSecSpiResponse allocateSecurityParameterIndex(java.lang.String,int,android.os.IBinder)>
<com.android.uiautomator.core.UiAutomationShellWrapper: void setRunAsMonkey(boolean)>
<com.android.systemui.statusbar.phone.ExpandableIndicator: void setExpanded(boolean)>
<com.android.server.slice.SliceClientPermissions: java.util.Collection getAuthorities()>
<com.android.printservice.recommendation.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>
<com.android.settingslib.bluetooth.MapProfile: boolean isProfileReady()>
<javax.obex.ServerOperation: void noBodyHeader()>
<com.android.systemui.statusbar.KeyboardShortcuts: void show(android.content.Context,int)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: boolean isShowing()>
<com.android.systemui.statusbar.policy.RemoteInputView.RemoteEditText: boolean requestRectangleOnScreen(android.graphics.Rect)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.CharSequence getShortSupportMessageForUser(android.content.ComponentName,int)>
<com.android.systemui.statusbar.phone.ButtonDispatcher: void setOnClickListener(android.view.View.OnClickListener)>
<com.android.printspooler.ui.SelectPrinterActivity: void updateEmptyView(com.android.printspooler.ui.SelectPrinterActivity.DestinationAdapter)>
<com.android.settingslib.drawer.Tile: int getId()>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: int hashCode()>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: boolean isSecure(int)>
<com.android.server.accessibility.AccessibilityManagerService: android.app.PendingIntent getPendingIntentActivity(android.content.Context,int,android.content.Intent,int)>
<com.android.printspooler.ui.PrintProgressFragment: com.android.printspooler.ui.PrintProgressFragment newInstance()>
<com.android.settingslib.CustomDialogPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.keyguard.KeyguardSecurityContainer: void showPromptReason(int)>
<android.net.ip.IIpClientCallbacks: void onProvisioningFailure(android.net.LinkProperties)>
<com.android.server.notification.NotificationUsageStats.SingleNotificationStats: void onRemoved()>
<com.android.server.appbinding.finders.AppServiceFinder: void <init>(android.content.Context,java.util.function.BiConsumer,android.os.Handler)>
<com.android.server.notification.ManagedServices: void <init>(android.content.Context,java.lang.Object,com.android.server.notification.ManagedServices.UserProfiles,android.content.pm.IPackageManager)>
<com.android.systemui.shared.system.InputChannelCompat: com.android.systemui.shared.system.InputChannelCompat.InputEventReceiver fromBundle(android.os.Bundle,java.lang.String,android.os.Looper,android.view.Choreographer,com.android.systemui.shared.system.InputChannelCompat.InputEventListener)>
<com.android.server.accounts.AccountManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.statusbar.NotificationMediaManager: void setBiometricUnlockController(com.android.systemui.statusbar.phone.BiometricUnlockController)>
<com.android.gallery3d.glrenderer.UploadedTexture: void resetUploadLimit()>
<com.android.server.pm.permission.PermissionManagerServiceInternal: void grantRuntimePermissionsGrantedToDisabledPackage(android.content.pm.PackageParser.Package,int,com.android.server.pm.permission.PermissionManagerServiceInternal.PermissionCallback)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void startKeyguardExitAnimation(long,long)>
<com.android.settingslib.bluetooth.LocalBluetoothProfileManager: com.android.settingslib.bluetooth.PbapServerProfile getPbapProfile()>
<com.android.settingslib.core.instrumentation.MetricsFeatureProvider: void action(android.content.Context,int,boolean)>
<com.android.settingslib.applications.ApplicationsState.AppFilter: void init()>
<android.net.ip.InterfaceController: boolean disableIPv6()>
<com.android.server.testing.shadows.ShadowBackupDataOutput: int writeEntityData(byte[],int)>
<com.android.server.pm.PackageSettingBase: android.content.pm.Signature[] getSignatures()>
<com.android.systemui.statusbar.phone.StatusBarTouchableRegionManager: void onDensityOrFontScaleChanged()>
<com.android.preload.DumpTableModel: int getColumnCount()>
<com.android.systemui.stackdivider.DividerView.DividerCallbacks: void onDraggingStart()>
<com.android.server.SystemServiceManager: boolean isSafeMode()>
<com.android.server.timezone.RulesManagerService: void start()>
<com.android.server.locksettings.LockSettingsService: boolean hasPendingEscrowToken(int)>
<com.android.systemui.qs.tiles.CastTile: void <init>(com.android.systemui.qs.QSHost,com.android.systemui.statusbar.policy.CastController,com.android.systemui.statusbar.policy.KeyguardMonitor,com.android.systemui.statusbar.policy.NetworkController,com.android.systemui.plugins.ActivityStarter)>
<com.android.server.pm.PackageManagerService: java.util.List getInstalledModules(int)>
<com.android.statementservice.retriever.Statement: com.android.statementservice.retriever.AbstractAsset getTarget()>
<android.widget.LayoutPerfTest: void <init>(java.lang.String,int,int)>
<com.android.server.notification.NotificationManagerService: int getNotificationCountLocked(java.lang.String,int,int,java.lang.String)>
<android.media.MediaSession2.ControllerInfo: int getUid()>
<com.android.server.usb.descriptors.report.ReportCanvas: void closeList()>
<com.android.server.ServiceWatcher: void onUnbind()>
<com.android.server.locksettings.recoverablekeystore.TestOnlyInsecureCertificateHelper: java.util.Map keepOnlyWhitelistedInsecureKeys(java.util.Map)>
<com.android.systemui.statusbar.policy.NetworkController: com.android.systemui.statusbar.policy.DataSaverController getDataSaverController()>
<com.android.server.usb.descriptors.tree.UsbDescriptorsInterfaceNode: void addACInterfaceNode(com.android.server.usb.descriptors.tree.UsbDescriptorsACInterfaceNode)>
<com.android.systemui.statusbar.phone.LightBarTransitionsController: void restoreState(android.os.Bundle)>
<com.android.server.pm.PreferredIntentResolver: com.android.server.pm.PreferredActivity[] newArray(int)>
<com.android.systemui.statusbar.ViewTransformationHelper: void resetTransformedView(android.view.View)>
<com.android.systemui.qs.tiles.WifiTile.WifiSignalCallback: void setWifiIndicators(boolean,com.android.systemui.statusbar.policy.NetworkController.IconState,com.android.systemui.statusbar.policy.NetworkController.IconState,boolean,boolean,java.lang.String,boolean,java.lang.String)>
<com.android.server.appop.AppOpsService: void reloadNonHistoricalState()>
<com.android.server.accessibility.AccessibilityManagerService: java.lang.String getAccessibilityShortcutService()>
<com.android.server.locksettings.SyntheticPasswordManager: void initWeaverService()>
<com.android.settingslib.Utils: int getDefaultStorageManagerDaysToRetain(android.content.res.Resources)>
<com.android.server.biometrics.ClientMonitor: boolean onRemoved(android.hardware.biometrics.BiometricAuthenticator.Identifier,int)>
<com.android.gallery3d.exif.ExifInterface: java.lang.Long getTagLongValue(int,int)>
<com.android.server.ServiceWatcher.BlockingBinderRunner: java.lang.Object run(android.os.IBinder)>
<com.android.commands.svc.Svc.Command: java.lang.String longHelp()>
<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: boolean isTowardsMenu(float)>
<com.android.server.content.ContentService.Lifecycle: void onCleanupUser(int)>
<com.android.systemui.recents.model.TaskStack: java.util.ArrayList getTaskKeys()>
<com.android.systemui.doze.DozeSensors: void setDisableSensorsInterferingWithProximity(boolean)>
<com.android.systemui.pip.BasePipManager: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.server.ConnectivityService: int checkMobileProvisioning(int)>
<com.android.statementservice.retriever.AbstractStatementRetriever.Result: long getExpireMillis()>
<com.android.systemui.statusbar.phone.StatusBarWindowView: boolean dispatchTouchEvent(android.view.MotionEvent)>
<com.android.server.content.SyncStorageEngine: void setMasterSyncAutomatically(boolean,int,int,int,int)>
<com.android.server.biometrics.BiometricUserState: java.lang.String getBiometricFile()>
<com.android.systemui.statusbar.policy.CastController: void setDiscovering(boolean)>
<com.android.server.notification.ZenModeHelper: void applyZenToRingerMode()>
<com.android.gallery3d.glrenderer.GLCanvas: void deleteRecycledResources()>
<com.android.systemui.keyguard.KeyguardViewMediator: boolean isHiding()>
<com.android.systemui.statusbar.policy.SplitClockView: void onFinishInflate()>
<com.android.systemui.power.PowerNotificationWarnings: void dismissLowBatteryWarning()>
<com.android.server.accessibility.MotionEventInjector: void onMotionEvent(android.view.MotionEvent,android.view.MotionEvent,int)>
<com.android.settingslib.media.MediaManager: void dispatchDeviceListRemoved(java.util.List)>
<com.android.server.notification.EventConditionProvider: void onUnsubscribe(android.net.Uri)>
<com.android.systemui.statusbar.phone.HeadsUpManagerPhone.HeadsUpEntryPhone: void setMenuShownPinned(boolean)>
<com.android.settingslib.CustomEditTextPreferenceCompat: boolean isDialogOpen()>
<com.android.settingslib.Utils: java.lang.String getUserLabel(android.content.Context,android.content.pm.UserInfo)>
<lockedregioncodeinjection.LockTarget: java.lang.String getPreMethod()>
<com.android.systemui.recents.views.TaskView: void dump(java.lang.String,java.io.PrintWriter)>
<com.android.uiautomator.core.UiScrollable: com.android.uiautomator.core.UiScrollable setAsVerticalList()>
<android.media.Session2CommandGroup.Builder: android.media.Session2CommandGroup.Builder addCommand(android.media.Session2Command)>
<com.android.systemui.statusbar.policy.PreviewInflater: void <init>(android.content.Context,com.android.internal.widget.LockPatternUtils,com.android.systemui.ActivityIntentHelper)>
<com.android.server.audio.AudioService: int trackRecorder(android.os.IBinder)>
<com.android.systemui.statusbar.policy.UserInfoController.OnUserInfoChangedListener: void onUserInfoChanged(java.lang.String,android.graphics.drawable.Drawable,java.lang.String)>
<com.android.settingslib.utils.ThreadUtils: android.os.Handler getUiThreadHandler()>
<com.android.systemui.statusbar.policy.CallbackHandler: void setListening(com.android.systemui.statusbar.policy.NetworkController.SignalCallback,boolean)>
<com.android.server.DeviceIdleController: boolean getPowerSaveWhitelistExceptIdleInternal(java.lang.String)>
<com.android.settingslib.animation.AppearAnimationUtils: long calculateDelay(int,int)>
<com.android.systemui.recents.LegacyRecentsImpl: void onBusEvent(com.android.systemui.recents.events.activity.ConfigurationChangedEvent)>
<com.android.server.accounts.AccountManagerService: android.accounts.Account[] getSharedAccountsAsUser(int)>
<com.android.systemui.classifier.PointerCountClassifier: void onTouchEvent(android.view.MotionEvent)>
<com.android.server.display.utils.RollingBuffer: float getValue(int)>
<com.android.systemui.qs.car.CarQSFragment: void setQsExpansion(float,float)>
<com.android.server.notification.EventConditionProvider: void attachBase(android.content.Context)>
<com.android.systemui.charging.WirelessChargingAnimation: void <init>(android.content.Context,android.os.Looper,int,com.android.systemui.charging.WirelessChargingAnimation.Callback,boolean)>
<com.android.printspooler.model.PrintSpoolerService.PrintSpooler: void onCustomPrinterIconLoaded(android.print.PrinterId,android.graphics.drawable.Icon,android.print.IPrintSpoolerCallbacks,int)>
<com.android.systemui.usb.UsbPermissionActivity: void onClick(android.content.DialogInterface,int)>
<com.android.systemui.statusbar.phone.DarkIconDispatcherImpl: void applyDarkIntensity(float)>
<com.android.systemui.globalactions.GlobalActionsGridLayout: void addToListView(android.view.View,boolean)>
<com.android.server.policy.PhoneWindowManager: void showBootMessage(java.lang.CharSequence,boolean)>
<javax.microedition.khronos.egl.EGL10: boolean eglReleaseThread()>
<com.android.systemui.plugins.PluginDependencyProvider: void allowPluginDependency(java.lang.Class)>
<com.android.systemui.statusbar.phone.KeyguardBouncer: void ensureView()>
<javax.microedition.khronos.opengles.GL11: void glTexEnviv(int,int,int[],int)>
<javax.microedition.khronos.opengles.GL10: void glMaterialxv(int,int,java.nio.IntBuffer)>
<com.android.server.deviceidle.BluetoothConstraint: void startMonitoring()>
<com.android.server.AppStateTracker: boolean areForegroundServicesRestricted(int,java.lang.String)>
<com.android.wallpapercropper.WallpaperCropActivity: java.lang.String getFileExtension(java.lang.String)>
<com.android.systemui.recents.views.AnimateableViewBounds: void updateClipBounds()>
<com.android.systemui.statusbar.hvac.AnimatedTemperatureView: int getPropertyId()>
<com.android.server.ZramWriteback: boolean onStopJob(android.app.job.JobParameters)>
<com.android.server.DeviceIdleController.LocalService: long getNotificationWhitelistDuration()>
<com.android.systemui.qs.tiles.DndTile: java.lang.String composeChangeAnnouncement()>
<com.android.server.notification.ZenModeConditions: void onServiceAdded(android.content.ComponentName)>
<com.android.preload.ui.SwingUI: void updateWaitDialog(java.lang.String)>
<android.database.CursorWindowPerfTest: void loadUser()>
<com.android.systemui.statusbar.phone.StatusBar: void setLockscreenUser(int)>
<com.google.android.startop.iorap.RequestId: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.classifier.Classifier: void onTouchEvent(android.view.MotionEvent)>
<javax.microedition.khronos.opengles.GL11: void glGetBufferParameteriv(int,int,java.nio.IntBuffer)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onTimeZoneChanged(java.util.TimeZone)>
<com.android.systemui.util.LifecycleFragment: void onResume()>
<com.android.systemui.qs.QSFooterImpl: void setKeyguardShowing(boolean)>
<com.android.systemui.classifier.ClassifierData: void cleanUp(android.view.MotionEvent)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void onDensityOrFontScaleChanged()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glBindRenderbufferOES(int,int)>
<com.android.systemui.statusbar.phone.StatusBarTouchableRegionManager: void onConfigChanged(android.content.res.Configuration)>
<com.android.systemui.statusbar.StatusIconDisplayable: void setStaticDrawableColor(int)>
<com.android.systemui.recents.RecentsActivity: void onBusEvent(com.android.systemui.recents.events.component.ActivityUnpinnedEvent)>
<com.android.systemui.statusbar.phone.KeyguardClockPositionAlgorithm: float getMinStackScrollerPadding()>
<com.android.systemui.statusbar.car.CarStatusBar: void animateExpandNotificationsPanel()>
<com.android.server.notification.ZenModeConditions: void dump(java.io.PrintWriter,java.lang.String)>
<com.android.powermodel.component.CpuProfile.Builder: void setClusterPower(int,float)>
<com.android.systemui.recents.views.TaskViewHeader: void setShouldDarkenBackgroundColor(boolean)>
<com.android.server.accessibility.AccessibilityManagerService: boolean performAccessibilityAction(int,long,int,android.os.Bundle,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,long)>
<com.android.server.location.GnssNavigationMessageProvider: void onNavigationMessageAvailable(android.location.GnssNavigationMessage)>
<com.android.systemui.statusbar.CommandQueue: void disable(int,int,int,boolean)>
<com.android.systemui.statusbar.notification.row.ExpandableView: void getDrawingRect(android.graphics.Rect)>
<com.android.statsd.loadtest.ValidationRecorder: void <init>(com.android.statsd.loadtest.LoadtestActivity,boolean,int,com.android.internal.os.StatsdConfigProto.TimeUnit,long,int,boolean,boolean,boolean,boolean,boolean)>
<com.android.systemui.qs.touch.SwipeDetector: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.systemui.qs.tileimpl.QSTileImpl: void <init>(com.android.systemui.qs.QSHost)>
<com.android.systemui.statusbar.notification.row.NotificationGuts.OnHeightChangedListener: void onHeightChanged(com.android.systemui.statusbar.notification.row.NotificationGuts)>
<com.android.systemui.qs.external.CustomTile: void handleClick()>
<com.android.systemui.recents.views.grid.GridTaskViewThumbnail: void onDraw(android.graphics.Canvas)>
<com.android.server.PackageWatchdog: void unregisterHealthObserver(com.android.server.PackageWatchdog.PackageHealthObserver)>
<com.android.uiautomator.core.UiObject: com.android.uiautomator.core.UiObject getFromParent(com.android.uiautomator.core.UiSelector)>
<com.android.systemui.HardwareBgDrawable: void setColorFilter(android.graphics.ColorFilter)>
<com.android.server.pm.ProtectedPackages: boolean isPackageStateProtected(int,java.lang.String)>
<com.android.systemui.statusbar.notification.row.NotificationSnooze: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.android.server.pm.Installer: long[] getExternalSize(java.lang.String,int,int,int[])>
<com.android.systemui.statusbar.phone.KeyguardIndicationTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.recents.views.grid.TaskGridLayoutAlgorithm: android.graphics.Rect getTaskGridRect()>
<com.android.systemui.recents.RecentsActivity: void onBusEvent(com.android.systemui.recents.events.ui.ShowApplicationInfoEvent)>
<com.android.preload.DeviceUtils: void init(int)>
<com.android.systemui.qs.SlashDrawable: int getIntrinsicHeight()>
<com.android.server.SystemService: void publishBinderService(java.lang.String,android.os.IBinder,boolean)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: boolean keepInParent()>
<com.android.gallery3d.glrenderer.RawTexture: int getTarget()>
<com.android.gallery3d.common.Utils: void waitWithoutInterrupt(java.lang.Object)>
<com.android.systemui.statusbar.phone.NavigationBarFragment: void setImeWindowStatus(int,android.os.IBinder,int,int,boolean)>
<com.android.server.location.GnssNavigationMessageProvider: void onCapabilitiesUpdated(boolean)>
<com.android.settingslib.widget.AdaptiveOutlineDrawable: int getIntrinsicWidth()>
<com.android.settingslib.core.instrumentation.SharedPreferencesLogger: void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener)>
<com.android.dynsystem.DynamicSystemInstallationService: void onResult(int,java.lang.Throwable)>
<com.android.printspooler.model.PrintSpoolerService.PrintSpooler: void setPrintJobTag(android.print.PrintJobId,java.lang.String,android.print.IPrintSpoolerCallbacks,int)>
<com.android.systemui.tuner.CustomListPreference: void onDialogClosed(boolean)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.util.List getActiveAdmins(int)>
<com.android.systemui.statusbar.policy.RemoteInputView: void dispatchFinishTemporaryDetach()>
<javax.microedition.khronos.opengles.GL11: void glPointParameterxv(int,java.nio.IntBuffer)>
<com.android.server.accessibility.MagnificationController.ControllerContext: float getMagnificationScale(int)>
<com.android.preload.actions.ImportAction: void actionPerformed(java.awt.event.ActionEvent)>
<com.android.systemui.qs.tileimpl.QSTileImpl: boolean isAvailable()>
<android.widget.TextViewPrecomputedTextPerfTest: void setUp()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setOverrideApnsEnabled(android.content.ComponentName,boolean)>
<android.net.NetworkStackClient.NetworkStackHealthListener: void onNetworkStackFailure(java.lang.String)>
<com.android.systemui.statusbar.phone.ContextualButton: void setVisibility(int)>
<android.media.Session2CommandGroup: boolean hasCommand(int)>
<com.android.systemui.biometrics.FingerprintDialogView: int getAuthenticatedAccessibilityResourceId()>
<com.android.gallery3d.util.IntArray: void clear()>
<com.android.systemui.qs.PathInterpolatorBuilder: android.view.animation.Interpolator getYInterpolator()>
<com.android.systemui.statusbar.AmbientPulseManager: void removeListener(com.android.systemui.statusbar.AmbientPulseManager.OnAmbientChangedListener)>
<com.android.server.notification.ZenModeHelper: void updateDefaultZenRules()>
<android.net.ip.IpServer: android.net.LinkProperties linkProperties()>
<com.android.settingslib.Utils: android.content.res.ColorStateList getColorAccent(android.content.Context)>
<com.android.server.notification.NotificationRecord: void applyAdjustments()>
<com.android.systemui.statusbar.notification.row.NotificationContentView: int getMinHeight(boolean)>
<com.android.gallery3d.exif.ExifInterface: int getFlagsFromAllowedIfds(int[])>
<com.android.server.accounts.AccountManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<com.android.statementservice.retriever.Utils: java.util.List getCertFingerprintsFromPackageManager(java.lang.String,android.content.Context)>
<com.android.systemui.plugins.DarkIconDispatcher: int getTint(android.graphics.Rect,android.view.View,int)>
<com.android.systemui.statusbar.policy.WifiSignalController: void handleBroadcast(android.content.Intent)>
<com.android.systemui.shared.system.InputConsumerController: void <init>(android.view.IWindowManager,java.lang.String)>
<com.android.systemui.qs.QSPanel: void <init>(android.content.Context,android.util.AttributeSet,com.android.systemui.DumpController)>
<com.android.systemui.shared.system.ActivityManagerWrapper: void cancelRecentsAnimation(boolean)>
<com.android.wallpapercropper.WallpaperCropActivity: android.graphics.Bitmap.CompressFormat convertExtensionToCompressFormat(java.lang.String)>
<com.android.server.firewall.IntentFirewall: void <init>(com.android.server.firewall.IntentFirewall.AMSInterface,android.os.Handler)>
<com.android.gallery3d.glrenderer.BasicTexture: int getTextureHeight()>
<com.android.printspooler.ui.FusedPrintersProvider: boolean isFavoritePrinter(android.print.PrinterId)>
<android.net.shared.InitialConfiguration: android.net.shared.InitialConfiguration fromStableParcelable(android.net.InitialConfigurationParcelable)>
<com.android.systemui.statusbar.AlphaOptimizedImageView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.locksettings.SyntheticPasswordCrypto: byte[] decryptBlob(java.lang.String,byte[],byte[])>
<com.android.server.slice.SlicePermissionManager.PkgUser: java.lang.String toString()>
<com.android.systemui.assist.AssistManager: void showDisclosure()>
<com.android.server.SystemServiceManager: void dump()>
<com.android.systemui.statusbar.notification.stack.AmbientState: boolean hasPulsingNotifications()>
<com.android.systemui.qs.external.CustomTile: int getMetricsCategory()>
<android.net.ip.IpClientManager: boolean setTcpBufferSizes(java.lang.String)>
<android.media.Media2Utils: void checkArgument(boolean,java.lang.String)>
<com.android.systemui.qs.tiles.CellularTile: com.android.systemui.plugins.qs.DetailAdapter getDetailAdapter()>
<com.android.systemui.statusbar.notification.MessagingLayoutTransformState: void setVisible(boolean,boolean)>
<com.android.printspooler.ui.PageAdapter: int getItemViewType(int)>
<com.android.systemui.statusbar.ViewTransformationHelper.CustomTransformation: boolean customTransformTarget(com.android.systemui.statusbar.notification.TransformState,com.android.systemui.statusbar.notification.TransformState)>
<com.android.systemui.pip.phone.PipAccessibilityInteractionConnection: android.view.accessibility.AccessibilityNodeInfo obtainRootAccessibilityNodeInfo()>
<com.android.server.display.DisplayManagerService: void onBootPhase(int)>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcher.Container: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.server.pm.PackageManagerService: void verifyIntentFilter(int,int,java.util.List)>
<com.android.server.notification.NotificationDelegate: void onNotificationSmartReplySent(java.lang.String,int,java.lang.CharSequence,int,boolean)>
<com.android.keyguard.KeyguardAbsKeyInputView: void <init>(android.content.Context)>
<com.android.settingslib.wifi.AccessPoint: void <init>(android.content.Context,android.net.wifi.hotspot2.PasspointConfiguration)>
<com.android.server.biometrics.iris.IrisService: java.lang.String getLockoutResetIntent()>
<com.android.server.accessibility.MagnificationController: boolean setCenter(int,float,float,boolean,int)>
<com.android.photos.views.TiledImageView: void onPause()>
<com.android.server.locksettings.LockSettingsService.SynchronizedStrongAuthTracker: void handleStrongAuthRequiredChanged(int,int)>
<com.android.uiautomator.core.UiObject: java.lang.String getContentDescription()>
<com.android.printspooler.model.PageContentRepository.OnPageContentAvailableCallback: void onPageContentAvailable(android.graphics.drawable.BitmapDrawable)>
<com.android.settingslib.bluetooth.LocalBluetoothManager: com.android.settingslib.bluetooth.CachedBluetoothDeviceManager getCachedDeviceManager()>
<com.android.systemui.statusbar.NotificationShelf: void setDark(boolean,boolean,long)>
<com.android.server.NetworkManagementService: void setInterfaceDown(java.lang.String)>
<com.android.systemui.settings.ToggleSlider: void setValue(int)>
<com.android.keyguard.KeyguardUpdateMonitor: boolean needsSlowUnlockTransition()>
<com.android.server.usb.descriptors.Usb20ACInputTerminal: void <init>(int,byte,byte,int)>
<com.android.systemui.shared.system.TransactionCompat: com.android.systemui.shared.system.TransactionCompat setLayer(com.android.systemui.shared.system.SurfaceControlCompat,int)>
<com.android.server.vr.EnabledComponentsObserver: void onPackagesChanged()>
<com.android.systemui.statusbar.policy.RotationLockControllerImpl: void <init>(android.content.Context)>
<com.android.systemui.qs.customize.QSCustomizer: void showImmediately()>
<com.android.systemui.statusbar.policy.KeyButtonRipple: boolean hasFocusStateSpecified()>
<com.android.systemui.statusbar.AlphaOptimizedTextView: boolean hasOverlappingRendering()>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationTemplateViewWrapper: void onContentUpdated(com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void updateStates()>
<com.android.server.autofill.RemoteFillService.FillServiceCallbacks: void onSaveRequestFailure(java.lang.CharSequence,java.lang.String)>
<com.android.systemui.MultiListLayout: void removeAllListViews()>
<com.android.systemui.recents.views.RecentsView: void updateScrimOpacity()>
<com.android.systemui.qs.tiles.ColorInversionTile: com.android.systemui.plugins.qs.QSTile.BooleanState newTileState()>
<com.android.systemui.statusbar.car.SwitchToGuestTimer: void cancel()>
<com.android.systemui.statusbar.phone.PanelBar: void panelScrimMinFractionChanged(float)>
<com.android.systemui.statusbar.notification.stack.AnimationFilter: com.android.systemui.statusbar.notification.stack.AnimationFilter animate(android.util.Property)>
<com.android.systemui.statusbar.phone.StatusBarIconHolder: void setVisible(boolean)>
<com.android.systemui.keyguard.KeyguardSliceProvider: void initDependencies(com.android.systemui.statusbar.NotificationMediaManager,com.android.systemui.plugins.statusbar.StatusBarStateController)>
<com.android.systemui.qs.car.CarQSFragment: void setExpandClickListener(android.view.View.OnClickListener)>
<com.android.systemui.statusbar.phone.LightBarTransitionsController: void destroy(android.content.Context)>
<com.android.server.usb.UsbDeviceManager: android.hardware.usb.UsbAccessory getCurrentAccessory()>
<com.android.systemui.util.leak.WeakIdentityHashMap: void put(java.lang.Object,java.lang.Object)>
<lockedregioncodeinjection.LockTargetStateAnalysis: void <init>(java.util.List)>
<com.android.server.pm.PackageManagerService: com.android.server.pm.CompilerStats.PackageStats getCompilerPackageStats(java.lang.String)>
<com.android.server.webkit.SystemInterface: boolean isFallbackLogicEnabled()>
<com.android.systemui.statusbar.GestureRecorder: void tag(java.lang.String)>
<com.android.settingslib.inputmethod.InputMethodAndSubtypeUtilCompat: java.lang.String buildInputMethodsAndSubtypesString(java.util.HashMap)>
<com.android.server.SensorNotificationService: void onBootPhase(int)>
<com.android.server.devicepolicy.DeviceAdminServiceController: void <init>(com.android.server.devicepolicy.DevicePolicyManagerService,com.android.server.devicepolicy.DevicePolicyConstants)>
<com.android.systemui.doze.DozeTriggers: void <init>(android.content.Context,com.android.systemui.doze.DozeMachine,com.android.systemui.doze.DozeHost,android.app.AlarmManager,android.hardware.display.AmbientDisplayConfiguration,com.android.systemui.statusbar.phone.DozeParameters,android.hardware.SensorManager,android.os.Handler,com.android.systemui.util.wakelock.WakeLock,boolean,com.android.systemui.dock.DockManager)>
<com.android.wallpaperbackup.WallpaperBackupAgent: void onRestoreFinished()>
<com.android.server.pm.PackageManagerService: void performFstrimIfNeeded()>
<com.android.systemui.statusbar.NotificationRemoteInputManager: void <init>(android.content.Context,com.android.systemui.statusbar.NotificationLockscreenUserManager,com.android.systemui.statusbar.SmartReplyController,com.android.systemui.statusbar.notification.NotificationEntryManager,dagger.Lazy,android.os.Handler)>
<com.android.systemui.appops.AppOpsControllerImpl: void onOpActiveChanged(int,int,java.lang.String,boolean)>
<com.android.systemui.statusbar.car.ConnectedDeviceSignalController: void onBluetoothDevicesChanged()>
<com.android.server.audio.AudioService: void registerAudioServerStateDispatcher(android.media.IAudioServerStateDispatcher)>
<com.android.systemui.statusbar.phone.StatusBarWindowController: void setPanelExpanded(boolean)>
<com.android.server.accounts.AccountManagerService: void onAccountAccessed(java.lang.String)>
<com.android.server.content.ContentService: void setMasterSyncAutomaticallyAsUser(boolean,int)>
<com.android.nfc_extras.NfcExecutionEnvironment: void open()>
<com.android.server.accessibility.FingerprintGestureDispatcher.FingerprintGestureClient: void onFingerprintGesture(int)>
<com.android.server.notification.CountdownConditionProvider: java.lang.String tryParseDescription(android.net.Uri)>
<com.android.server.audio.AudioService: void playerAttributes(int,android.media.AudioAttributes)>
<com.android.systemui.statusbar.policy.HeadsUpManager: com.android.systemui.statusbar.notification.collection.NotificationEntry getTopEntry()>
<com.android.systemui.recents.views.lowram.TaskStackLowRamLayoutAlgorithm: float getInitialScrollP(int,boolean)>
<com.android.systemui.qs.QSSecurityFooter: java.lang.CharSequence getNetworkLoggingMessage(boolean)>
<com.android.server.audio.AudioService: void forceRemoteSubmixFullVolume(boolean,android.os.IBinder)>
<com.android.systemui.statusbar.notification.NotificationActivityStarter: void onNotificationClicked(android.service.notification.StatusBarNotification,com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<com.android.systemui.qs.tiles.BluetoothTile: void handleSetListening(boolean)>
<com.android.uiautomator.testrunner.UiAutomatorTestRunner: void addTestListener(junit.framework.TestListener)>
<com.android.systemui.statusbar.policy.HeadsUpManager: void unpinAll(boolean)>
<com.android.systemui.egg.MLand: void onAttachedToWindow()>
<com.android.systemui.volume.VolumeDialogControllerImpl: void setStreamVolume(int,int)>
<com.android.systemui.settings.ToggleSeekBar: void setEnforcedAdmin(com.android.settingslib.RestrictedLockUtils.EnforcedAdmin)>
<com.android.statementservice.retriever.URLFetcher: java.lang.String inputStreamToString(java.io.InputStream,int,long)>
<com.android.systemui.pip.phone.PipAccessibilityInteractionConnection: void findAccessibilityNodeInfoByAccessibilityId(long,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec,android.os.Bundle)>
<com.android.server.content.SyncManager: void scheduleSync(android.accounts.Account,int,int,java.lang.String,android.os.Bundle,int,int,int,int,java.lang.String)>
<android.os.ParcelPerfTest: void timeGetDataSize()>
<com.android.settingslib.graph.SignalDrawable: void onBoundsChange(android.graphics.Rect)>
<com.android.systemui.stackdivider.Divider: void onRecentsDrawn()>
<com.android.server.accessibility.AccessibilityManagerService.SecurityPolicy: void updateEventSourceLocked(android.view.accessibility.AccessibilityEvent)>
<com.android.server.location.LocationFudger: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.qs.QSPanel: void onAttachedToWindow()>
<com.android.systemui.classifier.ProximityClassifier: void <init>(com.android.systemui.classifier.ClassifierData)>
<com.android.settingslib.drawable.CircleFramedDrawable: void draw(android.graphics.Canvas)>
<com.android.systemui.ScreenDecorations: void start()>
<com.android.server.NetworkManagementService: void startTethering(java.lang.String[])>
<android.app.ResourcesPerfTest: void setUp()>
<com.android.server.statusbar.StatusBarManagerService: void onNotificationSmartReplySent(java.lang.String,int,java.lang.CharSequence,int,boolean)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void dismissKeyboardShortcutsMenu()>
<com.android.server.usb.UsbPortManager: void resetSimulation(com.android.internal.util.IndentingPrintWriter)>
<com.android.server.biometrics.BiometricServiceBase: boolean canUseBiometric(java.lang.String,boolean,int,int,int)>
<com.android.settingslib.widget.AppEntityInfo.Builder: com.android.settingslib.widget.AppEntityInfo build()>
<com.android.keyguard.KeyguardPasswordView: boolean onRequestFocusInDescendants(int,android.graphics.Rect)>
<com.android.server.hdmi.SystemAudioInitiationActionFromAvr: void sendRequestActiveSource()>
<com.android.systemui.statusbar.notification.stack.AnimationProperties: void combineCustomInterpolators(com.android.systemui.statusbar.notification.stack.AnimationProperties)>
<com.android.systemui.tuner.BetterListPreference: java.lang.CharSequence getSummary()>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector selected(boolean)>
<com.android.server.accessibility.MagnificationController: void unregister(int)>
<com.android.packageinstaller.wear.PackageInstallerImpl.InstallListener: void installBeginning()>
<com.android.systemui.qs.tileimpl.QSTileImpl: void destroy()>
<com.android.systemui.statusbar.policy.KeyButtonView: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.server.slice.SliceProviderPermissions: com.android.server.slice.SliceProviderPermissions createFrom(org.xmlpull.v1.XmlPullParser,com.android.server.slice.DirtyTracker)>
<com.android.providers.settings.SettingsProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<com.android.server.pm.ShortcutService: android.content.pm.ParceledListSlice getManifestShortcuts(java.lang.String,int)>
<com.android.server.pm.Installer: void deleteOdex(java.lang.String,java.lang.String,java.lang.String)>
<com.android.server.notification.RankingConfig: boolean badgingEnabled(android.os.UserHandle)>
<com.android.server.LocationManagerService: void systemRunning()>
<android.net.TcpKeepalivePacketData: java.lang.String toString()>
<com.android.settingslib.graph.BatteryMeterDrawableBase: int getBatteryLevel()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setLastAudiblyAlertedMs(long)>
<com.android.systemui.util.InjectionInflationController.ViewInstanceCreator: com.android.systemui.statusbar.phone.LockIcon createLockIcon()>
<com.android.systemui.keyguard.WakefulnessLifecycle: int getWakefulness()>
<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: void onTouchEnd()>
<com.android.server.print.RemotePrintService.PrintServiceCallbacks: void onPrintersAdded(java.util.List)>
<android.widget.TextViewPrecomputedTextPerfTest: void testOnDraw_PrecomputedText()>
<com.android.printspooler.model.PrintSpoolerService.PrintSpooler: void setClient(android.print.IPrintSpoolerClient)>
<com.android.systemui.plugins.ActivityStarter.Callback: void onActivityStarted(int)>
<com.android.systemui.statusbar.policy.MobileSignalController: void setCarrierNetworkChangeMode(boolean)>
<com.android.systemui.shared.recents.model.Task.TaskCallbacks: void onTaskWindowingModeChanged()>
<com.android.settingslib.bluetooth.LocalBluetoothProfile: boolean isAutoConnectable()>
<com.android.gallery3d.glrenderer.GLES20Canvas: void clearBuffer(float[])>
<com.android.server.usb.descriptors.Usb20ASGeneral: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>
<com.android.settingslib.utils.AsyncLoader: void deliverResult(java.lang.Object)>
<com.android.systemui.volume.SafetyWarningDialog: boolean onKeyDown(int,android.view.KeyEvent)>
<com.android.server.audio.AudioEventLogger: void <init>(int,java.lang.String)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void updateSpeedBumpIndex()>
<com.android.systemui.statusbar.notification.row.ExpandableView: void notifyHeightChanged(boolean)>
<com.android.server.location.NtpTimeHelperTest: void handleInjectNtpTime_cachedAgeLow_injectTime()>
<com.android.systemui.statusbar.policy.NetworkController.AccessPointController: int getIcon(com.android.settingslib.wifi.AccessPoint)>
<com.android.server.os.DeviceIdentifiersPolicyService: void onStart()>
<com.google.android.startop.iorap.TaskResult: boolean equals(java.lang.Object)>
<com.android.server.location.GnssLocationProvider: void setRequest(com.android.internal.location.ProviderRequest,android.os.WorkSource)>
<com.android.systemui.pip.phone.PipTouchState: android.graphics.PointF getLastTouchPosition()>
<com.android.systemui.statusbar.notification.row.ExpandableOutlineView: void setOutlineRect(android.graphics.RectF)>
<com.android.systemui.plugins.VolumeDialogController: void getState()>
<com.android.keyguard.KeyguardHostView: void finish(boolean,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService.Lifecycle: void onStopUser(int)>
<com.android.systemui.bubbles.animation.StackAnimationController: void springFirstBubbleWithStackFollowing(androidx.dynamicanimation.animation.DynamicAnimation.ViewProperty,androidx.dynamicanimation.animation.SpringForce,float,float)>
<com.android.systemui.statusbar.notification.stack.NotificationListContainer: boolean containsView(android.view.View)>
<com.android.server.notification.NotificationManagerService.NotificationListeners: void notifyRemovedLocked(com.android.server.notification.NotificationRecord,int,android.service.notification.NotificationStats)>
<com.android.systemui.statusbar.notification.row.NotificationInfo: void setGutsParent(com.android.systemui.statusbar.notification.row.NotificationGuts)>
<com.android.server.policy.WindowManagerPolicy: void setTopFocusedDisplay(int)>
<com.android.systemui.statusbar.notification.row.StackScrollerDecorView: boolean hasOverlappingRendering()>
<com.android.systemui.recents.misc.DozeTrigger: void stopDozing()>
<com.android.systemui.statusbar.NotificationMediaManager: void setup(com.android.systemui.statusbar.BackDropView,android.widget.ImageView,android.widget.ImageView,com.android.systemui.statusbar.phone.ScrimController,com.android.systemui.statusbar.phone.LockscreenWallpaper)>
<com.android.systemui.recents.LegacyRecentsImpl: void onBusEvent(com.android.systemui.recents.events.component.SetWaitingForTransitionStartEvent)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void setOnExpandedVisibleListener(java.lang.Runnable)>
<com.android.systemui.statusbar.notification.stack.NotificationListContainer: void onNotificationViewUpdateFinished()>
<com.google.android.startop.iorap.SystemServiceEvent: int describeContents()>
<com.android.server.notification.SnoozeHelper: boolean cancel(int,boolean)>
<com.android.server.locksettings.SyntheticPasswordManager: java.util.Set getPendingTokensForUser(int)>
<com.android.keyguard.KeyguardPasswordView: void resetState()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isSystemOnlyUser(android.content.ComponentName)>
<com.android.systemui.statusbar.NotificationMediaManager: void updateMediaMetaData(boolean,boolean)>
<com.android.settingslib.core.ConfirmationDialogController: java.lang.String getPreferenceKey()>
<android.os.PackageManagerPerfTest: void testGetApplicationInfo()>
<com.android.packageinstaller.PackageUtil: com.android.packageinstaller.PackageUtil.AppSnippet getAppSnippet(android.app.Activity,android.content.pm.ApplicationInfo,java.io.File)>
<com.android.systemui.classifier.brightline.BrightLineFalsingManager: void onNotificationDismissed()>
<com.android.settingslib.suggestions.SuggestionController.ServiceConnectionListener: void onServiceConnected()>
<com.android.systemui.statusbar.NotificationShelf: android.view.View getContentView()>
<com.android.systemui.qs.tileimpl.QSTileView: void onMeasure(int,int)>
<com.android.systemui.statusbar.phone.PanelView: float getExpandedFraction()>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: void setMenuItems(java.util.ArrayList)>
<com.android.systemui.qs.tiles.BluetoothTile.BluetoothDetailAdapter: void onDetailItemDisconnect(com.android.systemui.qs.QSDetailItems.Item)>
<com.android.settingslib.location.RecentLocationApps: void <init>(android.content.Context)>
<com.android.systemui.statusbar.notification.row.ExpandableOutlineView: float getCurrentBackgroundRadiusTop()>
<com.android.server.pm.permission.BasePermission: com.android.server.pm.PackageSettingBase getSourcePackageSetting()>
<android.net.shared.PrivateDnsConfig: java.lang.String toString()>
<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService.PackageFreezer freezePackage(java.lang.String,int,java.lang.String)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: float getTranslation()>
<com.android.systemui.recents.views.TaskViewHeader: void <init>(android.content.Context)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.String[] setPackagesSuspended(android.content.ComponentName,java.lang.String,java.lang.String[],boolean)>
<com.android.systemui.assist.AssistDisclosure: void postShow()>
<com.android.server.pm.dex.PackageDexUsage.DexUseInfo: boolean isUnknownClassLoaderContext()>
<com.android.systemui.statusbar.phone.BarTransitions.BarBackgroundDrawable: void <init>(android.content.Context,int)>
<com.android.systemui.bubbles.animation.StackAnimationController: void flingThenSpringFirstBubbleWithStackFollowing(androidx.dynamicanimation.animation.DynamicAnimation.ViewProperty,float,float,androidx.dynamicanimation.animation.SpringForce,java.lang.Float)>
<com.android.systemui.statusbar.policy.HotspotControllerImpl: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.settingslib.dream.DreamBackend: java.util.List getDreamInfos()>
<com.android.systemui.HardwareUiLayout: void onAttachedToWindow()>
<com.android.systemui.tuner.TunerActivity: boolean onPreferenceStartScreen(androidx.preference.PreferenceFragment,androidx.preference.PreferenceScreen)>
<com.android.systemui.plugins.FalsingManager: void onStartExpandingFromPulse()>
<com.android.server.pm.PackageManagerService: android.content.pm.dex.IArtManager getArtManager()>
<com.android.systemui.classifier.Classifier: void onSensorChanged(android.hardware.SensorEvent)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: com.android.systemui.statusbar.notification.stack.ExpandableViewState createExpandableViewState()>
<com.android.server.LocationManagerService: void setExtraLocationControllerPackage(java.lang.String)>
<com.android.systemui.statusbar.policy.SmartReplyView: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>
<com.android.photos.BitmapRegionTileSource.ResourceBitmapSource: void <init>(android.content.res.Resources,int,int)>
<com.android.packageinstaller.wear.WearPackageUtil: java.io.File getTemporaryFile(android.content.Context,java.lang.String)>
<com.android.media.tv.remoteprovider.TvRemoteProvider: void sendPointerUp(android.os.IBinder,int)>
<com.android.server.notification.ZenModeHelper: void removeCallback(com.android.server.notification.ZenModeHelper.Callback)>
<com.android.server.accounts.AccountManagerService: boolean accountAuthenticated(android.accounts.Account)>
<com.android.printservice.recommendation.util.NsdResolveQueue: com.android.printservice.recommendation.util.NsdResolveQueue getInstance()>
<com.android.server.storage.AppFuseBridge: android.os.ParcelFileDescriptor addBridge(com.android.server.storage.AppFuseBridge.MountScope)>
<com.android.systemui.statusbar.notification.stack.AmbientState: void setMaxHeadsUpTranslation(float)>
<android.net.ip.IpClientManager: boolean removeKeepalivePacketFilter(int)>
<com.android.systemui.util.wakelock.WakeLock: com.android.systemui.util.wakelock.WakeLock wrap(android.os.PowerManager.WakeLock,long)>
<com.android.server.ConnectivityService: android.net.NetworkInfo getNetworkInfo(int)>
<com.android.server.locksettings.recoverablekeystore.PlatformKeyManager: com.android.server.locksettings.recoverablekeystore.PlatformKeyManager getInstance(android.content.Context,com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb)>
<android.os.TracePerfTest: void testAsyncBeginEnd()>
<android.graphics.perftests.PaintMeasureTextTest: void testMeasureTextPerf()>
<com.android.systemui.statusbar.car.UserGridRecyclerView: void buildAdapter()>
<com.android.systemui.qs.QuickQSPanel: void setPadding(int,int,int,int)>
<com.android.systemui.recents.views.RecentsView: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: void populateFromRanking(android.service.notification.NotificationListenerService.Ranking)>
<com.android.server.policy.PermissionPolicyInternal: boolean checkStartActivity(android.content.Intent,int,java.lang.String)>
<com.android.systemui.qs.QSFragment: void onSaveInstanceState(android.os.Bundle)>
<com.android.systemui.statusbar.phone.StatusBarSignalPolicy: void setSubs(java.util.List)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout.OnOverscrollTopChangedListener: void onOverscrollTopChanged(float,boolean)>
<com.android.systemui.statusbar.policy.CastController: java.util.List getCastDevices()>
<com.android.systemui.qs.tiles.NightDisplayTile: com.android.systemui.plugins.qs.QSTile.BooleanState newTileState()>
<com.android.systemui.qs.tileimpl.QSTileBaseView: android.view.View updateAccessibilityOrder(android.view.View)>
<com.android.systemui.recents.RecentsActivity: void onColorsChanged(com.android.internal.colorextraction.ColorExtractor,int)>
<com.android.systemui.statusbar.notification.row.NotificationUndoLayout: void <init>(android.content.Context)>
<com.android.systemui.doze.DozeHost: void extendPulse(int)>
<com.android.keyguard.KeyguardSecurityContainer: com.android.keyguard.KeyguardSecurityView getCurrentSecurityView()>
<com.android.systemui.statusbar.phone.HeadsUpTouchHelper: boolean isTrackingHeadsUp()>
<com.android.systemui.statusbar.phone.StatusBar: boolean shouldIgnoreTouch()>
<com.android.systemui.statusbar.GestureRecorder.Gesture.MotionEventRecord: void <init>(long,android.view.MotionEvent)>
<com.android.systemui.ForegroundServicesDialog: void onCreate(android.os.Bundle)>
<android.os.ParcelPerfTest: void timeSetDataSize()>
<com.android.systemui.statusbar.StatusBarMobileView: java.lang.String getSlot()>
<com.android.server.infra.FrameworkResourcesServiceNameResolver: void resetTemporaryService(int)>
<com.android.systemui.statusbar.car.CarBatteryController: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.settingslib.core.lifecycle.ObservableDialogFragment: boolean onOptionsItemSelected(android.view.MenuItem)>
<com.android.systemui.volume.ConfigurableTexts: int add(android.widget.TextView,int)>
<com.android.settingslib.accounts.AuthenticatorHelper: android.graphics.drawable.Drawable getDrawableForType(android.content.Context,java.lang.String)>
<com.android.systemui.bubbles.animation.PhysicsAnimationLayout: void reorderView(android.view.View,int)>
<com.android.server.testing.shadows.ShadowSlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.android.server.hdmi.DetectTvSystemAudioModeSupportAction: void sendSetSystemAudioMode()>
<com.android.systemui.statusbar.policy.KeyButtonRipple: void setPressed(boolean)>
<com.android.server.slice.SliceProviderPermissions.SliceAuthority: void removePkg(com.android.server.slice.SlicePermissionManager.PkgUser)>
<com.android.server.biometrics.EnrollClient: boolean onRemoved(android.hardware.biometrics.BiometricAuthenticator.Identifier,int)>
<com.android.statsd.loadtest.ValidationRecorder: void stopRecording(android.content.Context)>
<com.android.systemui.bubbles.BubbleExpandedView: void cleanUpExpandedState()>
<com.android.server.accessibility.EventStreamTransformation: void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.android.systemui.recents.views.TaskView: boolean hasOverlappingRendering()>
<android.media.DataSourceDesc.Builder: android.media.DataSourceDesc.Builder setDataSource(android.os.ParcelFileDescriptor)>
<com.android.server.locksettings.recoverablekeystore.KeySyncUtils: java.security.PublicKey deserializePublicKey(byte[])>
<com.android.systemui.statusbar.ScrimView: void setChangeRunnable(java.lang.Runnable)>
<com.android.server.location.GnssGeofenceProviderTest: void pauseGeofence_nativePaused()>
<com.android.server.location.AbstractLocationProvider: int getStatus(android.os.Bundle)>
<com.android.systemui.statusbar.phone.NavigationBarInflaterView: void setButtonDispatchers(android.util.SparseArray)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onUserInfoChanged(int)>
<android.os.TracePerfTest: void testCounter()>
<com.android.systemui.statusbar.phone.HeadsUpManagerPhone: void onDensityOrFontScaleChanged()>
<com.android.server.usb.descriptors.UsbDeviceDescriptor: int getProtocol()>
<com.android.server.biometrics.face.FaceUtils: void renameBiometricForUser(android.content.Context,int,int,java.lang.CharSequence)>
<com.android.systemui.statusbar.phone.DozeParameters: int getPickupVibrationThreshold()>
<com.android.systemui.statusbar.notification.row.NotificationContentView: android.view.View getShowingAmbientView()>
<com.android.systemui.statusbar.notification.stack.NotificationListContainer: android.view.ViewGroup getViewParentForNotification(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.systemui.statusbar.notification.row.ExpandableView: void setTranslation(float)>
<com.android.systemui.statusbar.notification.collection.NotificationData: void updateAppOp(int,int,java.lang.String,java.lang.String,boolean)>
<com.android.location.provider.ProviderRequestUnbundled: long getInterval()>
<com.android.printservice.recommendation.plugin.mopria.MopriaRecommendationPlugin: boolean matchesCriteria(java.lang.String,android.net.nsd.NsdServiceInfo)>
<com.android.server.notification.NotificationManagerService.NotificationAssistants: void writeExtraXmlTags(org.xmlpull.v1.XmlSerializer)>
<com.android.systemui.statusbar.notification.ActivityLaunchAnimator.ExpandAnimationParameters: int getTopChange()>
<com.android.systemui.tuner.BetterListPreference: void setSummary(java.lang.CharSequence)>
<com.android.systemui.qs.tileimpl.QSTileBaseView: android.view.View getIconWithBackground()>
<android.media.MediaSession2: java.util.List getConnectedControllers()>
<com.android.settingslib.notification.ZenDurationDialog: void updateZenDuration(int)>
<com.android.server.locksettings.LockSettingsService: void removeKey(java.lang.String)>
<com.android.systemui.statusbar.phone.StatusBarIconList: com.android.systemui.statusbar.phone.StatusBarIconHolder getIcon(int,int)>
<com.android.server.pm.Settings: com.android.server.pm.PackageSetting getDisabledSystemPkgLPr(com.android.server.pm.PackageSetting)>
<com.android.server.location.ContextHubClientBroker: void binderDied()>
<android.processor.view.inspector.InspectableClassModel.Accessor: java.lang.String getName()>
<com.android.systemui.statusbar.policy.DeviceProvisionedControllerImpl: boolean isDeviceProvisioned()>
<com.android.systemui.shared.system.ActivityOptionsCompat: android.app.ActivityOptions makeCustomAnimation(android.content.Context,int,int,java.lang.Runnable,android.os.Handler)>
<com.android.settingslib.bluetooth.A2dpProfile: int getSummaryResourceForDevice(android.bluetooth.BluetoothDevice)>
<com.android.systemui.plugins.qs.QSTile.State: com.android.systemui.plugins.qs.QSTile.State copy()>
<com.android.keyguard.KeyguardPatternView: boolean startDisappearAnimation(java.lang.Runnable)>
<android.media.Session2Token: java.lang.String toString()>
<com.android.systemui.globalactions.ListGridLayout: int getColumnCount()>
<com.android.systemui.recents.events.EventBus.AnimatedEvent: com.android.systemui.recents.misc.ReferenceCountedTrigger getAnimationTrigger()>
<com.google.android.startop.iorap.RequestId: com.google.android.startop.iorap.RequestId nextValueForSequence()>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onUserUnlocked()>
<com.android.preload.DumpTableModel: java.lang.String getColumnName(int)>
<com.android.server.pm.PackageManagerService: void getPackageSizeInfo(java.lang.String,int,android.content.pm.IPackageStatsObserver)>
<com.android.server.display.utils.RollingBuffer: void truncate(long)>
<com.android.server.Watchdog: void run()>
<com.android.systemui.pip.tv.PipManager: void suspendPipResizing(int)>
<com.android.settingslib.widget.ActionButtonsPreference: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.pm.PackageDexOptimizer: int adjustDexoptNeeded(int)>
<com.android.systemui.shared.system.WindowCallbacksCompat: void <init>(android.view.View)>
<android.media.MediaController2.ControllerCallback: void onPlaybackActiveChanged(android.media.MediaController2,boolean)>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: boolean isBluetoothSupported()>
<com.android.mtp.MtpDocumentsProvider: android.os.ParcelFileDescriptor openDocument(java.lang.String,java.lang.String,android.os.CancellationSignal)>
<com.android.server.location.GnssNavigationMessageProviderTest: void register_nativeStarted()>
<com.android.systemui.statusbar.HeadsUpStatusBarView: void <init>(android.content.Context,android.view.View,android.widget.TextView)>
<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: java.util.ArrayList getMenuItems(android.content.Context)>
<com.android.systemui.statusbar.phone.NavigationBarFragment: boolean isSemiTransparent()>
<com.android.settingslib.net.NetworkCycleChartDataLoader: com.android.settingslib.net.NetworkCycleChartDataLoader.Builder builder(android.content.Context)>
<com.android.systemui.PluginInflateContainer: void onPluginDisconnected(com.android.systemui.plugins.ViewProvider)>
<com.android.server.location.GnssLocationProvider: com.android.server.location.GnssMeasurementCorrectionsProvider getGnssMeasurementCorrectionsProvider()>
<com.android.systemui.stackdivider.DividerView: void injectDependencies(com.android.systemui.stackdivider.DividerWindowManager,com.android.systemui.stackdivider.DividerState,com.android.systemui.stackdivider.DividerView.DividerCallbacks)>
<com.android.settingslib.bluetooth.MapClientProfile: boolean isPreferred(android.bluetooth.BluetoothDevice)>
<com.android.systemui.shared.system.TaskStackChangeListener: void onTaskCreated(int,android.content.ComponentName)>
<com.android.systemui.classifier.FalsingManagerImpl: void onSucccessfulUnlock()>
<com.android.server.accounts.AccountManagerService: void removeAccount(android.accounts.IAccountManagerResponse,android.accounts.Account,boolean)>
<com.android.systemui.plugins.qs.QSTile: boolean isAvailable()>
<com.android.server.pm.PackageManagerService: void checkPackageStartable(java.lang.String,int)>
<com.android.systemui.classifier.brightline.BrightLineFalsingManager: android.net.Uri reportRejectedTouch()>
<com.android.systemui.tuner.LockscreenFragment.LockButtonFactory: java.lang.String[] keys()>
<com.android.systemui.statusbar.notification.row.ExpandableView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.policy.ExtensionControllerImpl.Producer: void destroy()>
<com.android.server.pm.permission.BasePermission: void enforceDeclaredUsedAndRuntimeOrDevelopment(android.content.pm.PackageParser.Package)>
<com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper: boolean isFalseGesture(android.view.MotionEvent)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void updateIconAreaViews()>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: boolean isMenuSnapped()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void startUnlockHintAnimation()>
<com.android.server.accessibility.MagnificationController.ControllerContext: com.android.server.wm.WindowManagerInternal getWindowManager()>
<com.android.powermodel.AttributionKey: int getUid()>
<com.android.server.locksettings.LockSettingsService: void setBoolean(java.lang.String,boolean,int)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void dump(java.lang.String,java.io.PrintWriter)>
<com.android.systemui.bubbles.animation.PhysicsAnimationLayout: void removeEndActionForProperty(androidx.dynamicanimation.animation.DynamicAnimation.ViewProperty)>
<com.android.server.pm.PackageKeySetData: void setAliases(android.util.ArrayMap)>
<javax.microedition.khronos.opengles.GL10: void glCopyTexImage2D(int,int,int,int,int,int,int,int)>
<com.android.uiautomator.core.UiObject: java.lang.String getText()>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow.NotificationMenuItem: void <init>(android.content.Context,java.lang.String,com.android.systemui.statusbar.notification.row.NotificationGuts.GutsContent,int)>
<com.android.systemui.recents.LegacyRecentsImpl: com.android.systemui.recents.RecentsConfiguration getConfiguration()>
<com.android.server.notification.VisibilityExtractor: void setZenHelper(com.android.server.notification.ZenModeHelper)>
<android.net.ipmemorystore.NetworkAttributes: float getNetworkGroupSamenessConfidence(android.net.ipmemorystore.NetworkAttributes)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void setClipTopAmount(int)>
<com.android.systemui.bubbles.animation.PhysicsAnimationLayout.PhysicsPropertyAnimator: void start(java.lang.Runnable[])>
<com.android.settingslib.drawer.Tile: java.lang.String getKey(android.content.Context)>
<com.android.preload.ui.SequenceUI: void showMessageDialog(java.lang.String)>
<com.android.server.usb.descriptors.UsbHIDDescriptor: void report(com.android.server.usb.descriptors.report.ReportCanvas)>
<com.android.server.DropBoxManagerService: android.os.DropBoxManager.Entry getNextEntry(java.lang.String,long,java.lang.String)>
<com.android.settingslib.bluetooth.HearingAidProfile: boolean isPreferred(android.bluetooth.BluetoothDevice)>
<com.android.systemui.globalactions.GlobalActionsColumnLayout: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.recents.views.RecentsView: void onAttachedToWindow()>
<com.android.settingslib.core.lifecycle.events.OnStop: void onStop()>
<com.android.systemui.statusbar.KeyboardShortcutAppItemLayout: void onMeasure(int,int)>
<com.android.server.testing.shadows.ShadowAppBackupUtils: boolean appIsRunningAndEligibleForBackupWithTransport(com.android.server.backup.transport.TransportClient,java.lang.String,android.content.pm.PackageManager,int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onAnimationToSideEnded()>
<com.android.settingslib.core.instrumentation.VisibilityLoggerMixin: void setSourceMetricsCategory(android.app.Activity)>
<com.android.keyguard.KeyguardSimPukView: void verifyPasswordAndUnlock()>
<com.android.settingslib.media.InfoMediaDevice: java.lang.String getId()>
<com.android.systemui.keyguard.DismissCallbackRegistry: void addCallback(com.android.internal.policy.IKeyguardDismissCallback)>
<com.android.server.infra.AbstractMasterSystemService: void onSettingsChanged(int,java.lang.String)>
<com.android.systemui.qs.tiles.NightDisplayTile: android.content.Intent getLongClickIntent()>
<com.android.settingslib.volume.Util: java.lang.String mediaMetadataToString(android.media.MediaMetadata)>
<com.android.server.pm.permission.PermissionsState: java.util.List getRuntimePermissionStates(int)>
<com.android.server.pm.permission.BasePermission: boolean isOEM()>
<com.android.server.display.AmbientBrightnessStatsTracker: void writeStats(java.io.OutputStream)>
<com.android.settingslib.development.AbstractLogpersistPreferenceController: boolean isAvailable()>
<com.android.systemui.tuner.LockscreenFragment.Adapter: void onBindViewHolder(com.android.systemui.tuner.LockscreenFragment.Holder,int)>
<com.android.systemui.statusbar.EmptyShadeView: void setTextColor(int)>
<com.android.systemui.statusbar.policy.RemoteInputView: void onDetachedFromWindow()>
<com.android.keyguard.KeyguardClockSwitch: void setTextColor(int)>
<com.android.server.pm.PackageManagerService: void enterSafeMode()>
<com.android.systemui.recents.utilities.AnimationProps: long getDuration(int)>
<com.android.systemui.statusbar.notification.row.NotificationBackgroundView: void setRippleColor(int)>
<com.android.systemui.statusbar.notification.stack.StackScrollAlgorithm: int getPaddingAfterChild(com.android.systemui.statusbar.notification.stack.StackScrollAlgorithm.StackScrollAlgorithmState,com.android.systemui.statusbar.notification.row.ExpandableView)>
<com.example.android.networkusage.SettingsActivity: void onCreate(android.os.Bundle)>
<com.android.server.print.PrintManagerService: void onStopUser(int)>
<com.android.server.accessibility.AbstractAccessibilityServiceConnection.SystemSupport: boolean performAccessibilityAction(int,long,int,android.os.Bundle,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,long)>
<com.android.statsd.loadtest.LoadtestActivity.StopperAlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.android.systemui.qs.SlashDrawable: void setColorFilter(android.graphics.ColorFilter)>
<com.android.server.pm.PackageManagerService: boolean isPermissionRevokedByPolicy(java.lang.String,java.lang.String,int)>
<com.android.systemui.statusbar.notification.row.ExpandableView: void setInShelf(boolean)>
<com.android.systemui.statusbar.phone.NavigationPrototypeController: void onChange(boolean,android.net.Uri)>
<com.android.systemui.classifier.LengthCountEvaluator: float evaluate(float)>
<com.android.systemui.shared.recents.model.Task.TaskKey: void setWindowingMode(int)>
<android.widget.TextViewAutoSizeLayoutPerfTest: void <init>(java.lang.String,int)>
<com.android.server.audio.AudioService.Lifecycle: void onBootPhase(int)>
<com.android.packageinstaller.PackageInstallerActivity: void onActivityResult(int,int,android.content.Intent)>
<com.android.systemui.qs.PathInterpolatorBuilder: void <init>(float,float,float,float)>
<com.android.server.updates.NetworkWatchlistInstallReceiver: void postInstall(android.content.Context,android.content.Intent)>
<com.android.server.stats.StatsCompanionService: void cancelAlarmForSubscriberTriggering()>
<com.android.statementservice.retriever.Relation: boolean matches(com.android.statementservice.retriever.Relation)>
<com.android.server.pm.Settings: com.android.server.pm.Settings.VersionInfo getExternalVersion()>
<com.android.settingslib.applications.DefaultAppInfo: void <init>(android.content.Context,android.content.pm.PackageManager,int,android.content.ComponentName,java.lang.String,boolean)>
<com.android.server.policy.PermissionPolicyService: void <init>(android.content.Context)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setLayoutListener(com.android.systemui.statusbar.notification.row.ExpandableNotificationRow.LayoutListener)>
<com.android.vpndialogs.ManageDialog: void onDestroy()>
<com.android.server.usb.UsbPortManager: void dump(com.android.internal.util.dump.DualDumpOutputStream,java.lang.String,long)>
<com.android.systemui.statusbar.policy.SignalController: com.android.systemui.statusbar.policy.SignalController.State getState()>
<com.android.server.accounts.AccountManagerService: void onServiceChanged(android.accounts.AuthenticatorDescription,int,boolean)>
<com.android.server.accounts.AccountManagerService.Lifecycle: void onStopUser(int)>
<com.android.systemui.recents.views.TaskViewTransform: java.lang.String toString()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void requestDisallowInterceptTouchEvent(boolean)>
<com.android.systemui.statusbar.policy.BrightnessMirrorController: void hideMirror()>
<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void revokeDefaultPermissionsFromDisabledTelephonyDataServices(java.lang.String[],int)>
<com.android.systemui.statusbar.phone.HeadsUpManagerPhone: android.graphics.Region calculateTouchableRegion()>
<com.android.server.accounts.IAccountAuthenticatorCache: void invalidateCache(int)>
<com.android.systemui.statusbar.phone.KeyguardBouncer: boolean isPartiallyVisible()>
<com.android.systemui.keyboard.KeyboardUI: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.qs.QSPanel: void setTiles(java.util.Collection)>
<com.android.powermodel.PowerReport: java.util.List findApp(java.lang.String)>
<com.android.systemui.assist.AssistHandleBehaviorController: void showAndStay()>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void setIsChildInGroup(boolean)>
<com.android.server.pm.UserRestrictionsUtils: boolean areEqual(android.os.Bundle,android.os.Bundle)>
<com.android.server.display.DisplayModeDirector.Listener: void onAllowedDisplayModesChanged()>
<com.android.server.input.InputManagerService: void start()>
<com.android.systemui.statusbar.policy.KeyButtonRipple: float getGlowScale()>
<com.android.server.soundtrigger.SoundTriggerService.LocalSoundTriggerService: int startRecognition(int,android.hardware.soundtrigger.SoundTrigger.KeyphraseSoundModel,android.hardware.soundtrigger.IRecognitionStatusCallback,android.hardware.soundtrigger.SoundTrigger.RecognitionConfig)>
<com.android.settingslib.CustomDialogPreferenceCompat: void onPrepareDialogBuilder(androidx.appcompat.app.AlertDialog.Builder,android.content.DialogInterface.OnClickListener)>
<com.android.printservice.recommendation.util.PrinterHashMap: android.net.nsd.NsdServiceInfo removePrinter(android.net.nsd.NsdServiceInfo)>
<com.android.systemui.classifier.brightline.BrightLineFalsingManager: void onCameraHintStarted()>
<com.android.systemui.tuner.TunerZenModePanel: void init(com.android.systemui.statusbar.policy.ZenModeController)>
<android.media.Controller2Link: void onCancelCommand(int)>
<com.android.server.biometrics.BiometricServiceBase: boolean isCurrentUserOrProfile(int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean isQsExpanded()>
<com.android.server.ConnectivityService: void setVpnPackageAuthorization(java.lang.String,int,boolean)>
<com.android.systemui.recents.views.grid.GridTaskView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.CarSystemUIFactory: void init(android.content.Context)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onOverlayChanged()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void collapse(boolean,float)>
<com.android.server.timedetector.TimeDetectorStrategyCallbackImpl: void releaseWakeLock()>
<com.android.server.policy.WindowManagerPolicy.WindowManagerFuncs: com.android.server.policy.WindowManagerPolicy.WindowState getInputMethodWindowLw()>
<com.android.systemui.glwallpaper.GLWallpaperRenderer.SurfaceProxy: void preRender()>
<com.android.preload.ui.IUI: boolean isSingleThreaded()>
<com.android.gallery3d.glrenderer.GLES20Canvas: void save(int)>
<com.android.systemui.classifier.SpeedClassifier: java.lang.String getTag()>
<com.android.keyguard.KeyguardUpdateMonitor.BatteryStatus: boolean isCharged()>
<com.android.systemui.statusbar.phone.StatusBarNotificationPresenter: boolean canHeadsUp(com.android.systemui.statusbar.notification.collection.NotificationEntry,android.service.notification.StatusBarNotification)>
<com.android.packageinstaller.handheld.UninstallAlertDialogFragment: void onClick(android.content.DialogInterface,int)>
<com.android.systemui.statusbar.NotificationShelf: void setMaxShelfEnd(float)>
<com.android.settingslib.bluetooth.BluetoothCallback: void onActiveDeviceChanged(com.android.settingslib.bluetooth.CachedBluetoothDevice,int)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onScreenTurnedOff()>
<com.android.server.usb.descriptors.report.HTMLReportCanvas: void openHeader(int)>
<javax.obex.ClientSession: javax.obex.HeaderSet disconnect(javax.obex.HeaderSet)>
<com.android.server.locksettings.SyntheticPasswordManager: void <init>(android.content.Context,com.android.server.locksettings.LockSettingsStorage,android.os.UserManager,com.android.server.locksettings.PasswordSlotManager)>
<com.android.systemui.pip.phone.PipMediaController: void removeListener(com.android.systemui.pip.phone.PipMediaController.ActionListener)>
<com.android.systemui.plugins.qs.QSTile.SignalState: java.lang.StringBuilder toStringBuilder()>
<com.android.systemui.statusbar.NotificationUiAdjustment: boolean areDifferent(java.util.List,java.util.List)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onSwipingAborted()>
<com.android.settingslib.RestrictedPreference: void onAttachedToHierarchy(androidx.preference.PreferenceManager)>
<com.android.server.TelephonyRegistry: void removeOnSubscriptionsChangedListener(java.lang.String,com.android.internal.telephony.IOnSubscriptionsChangedListener)>
<com.android.server.locksettings.LockSettingsService: android.security.keystore.recovery.KeyChainSnapshot getKeyChainSnapshot()>
<com.android.server.notification.PreferencesHelper: void toggleNotificationDelegate(java.lang.String,int,boolean)>
<com.android.systemui.fragments.FragmentHostManager: void reloadFragments()>
<com.android.server.accessibility.AutoclickController: void onKeyEvent(android.view.KeyEvent,int)>
<com.android.systemui.tuner.RadioListPreference.RadioFragment: boolean onPreferenceTreeClick(androidx.preference.Preference)>
<com.android.systemui.statusbar.policy.SmartReplyConstants: int getMaxNumActions()>
<com.android.systemui.statusbar.notification.row.ExpandableView: void setMinClipTopAmount(int)>
<com.android.keyguard.clock.ClockLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.vr.VrManagerService: void setVr2dDisplayProperties(android.app.Vr2dDisplayProperties)>
<com.android.systemui.DependencyProvider: com.android.systemui.statusbar.phone.AutoHideController provideAutoHideController(android.content.Context,android.os.Handler)>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: void onReceive(android.content.Context,android.content.Intent)>
<android.net.ip.IpServer: void unwanted()>
<com.android.server.ConnectivityService: android.net.NetworkRequest requestNetwork(android.net.NetworkCapabilities,android.os.Messenger,int,android.os.IBinder,int)>
<com.android.server.VibratorService: void onVibrationFinished()>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void onThemeChanged()>
<com.android.systemui.statusbar.notification.NotificationInterruptionStateProvider: boolean shouldBubbleUp(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.keyguard.KeyguardMessageArea: void setMessage(java.lang.CharSequence)>
<com.android.server.ConnectivityService: android.net.Network getActiveNetwork()>
<com.android.gallery3d.glrenderer.GLPaint: int getColor()>
<com.android.server.usb.descriptors.tree.UsbDescriptorsEndpointNode: void report(com.android.server.usb.descriptors.report.ReportCanvas)>
<com.android.systemui.ScreenDecorations.DisplayCutoutView: void onDisplayRemoved(int)>
<com.android.systemui.recents.views.SystemBarScrimViews: void <init>(com.android.systemui.recents.RecentsActivity)>
<android.net.ip.IpClientUtil: void dumpIpClient(android.net.ip.IIpClient,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.qs.tiles.NfcTile: int getMetricsCategory()>
<com.android.uiautomator.core.UiObject: com.android.uiautomator.core.UiSelector getSelector()>
<com.android.localtransport.LocalTransportService: void onCreate()>
<android.net.netlink.StructNfGenMsg: void <init>(byte)>
<com.android.systemui.qs.QSFragment: void setHost(com.android.systemui.qs.QSTileHost)>
<com.android.server.display.whitebalance.DisplayWhiteBalanceFactory: com.android.server.display.whitebalance.AmbientSensor.AmbientColorTemperatureSensor createColorTemperatureSensor(android.os.Handler,android.hardware.SensorManager,android.content.res.Resources)>
<com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer: void recreateNotificationHeader(android.view.View.OnClickListener)>
<com.android.systemui.statusbar.car.CarFacetButton: java.lang.String[] getCategories()>
<com.android.systemui.qs.tiles.DndTile: android.content.Intent getLongClickIntent()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setExpandAnimationRunning(boolean)>
<com.android.settingslib.CustomDialogPreferenceCompat.CustomPreferenceDialogFragment: com.android.settingslib.CustomDialogPreferenceCompat.CustomPreferenceDialogFragment newInstance(java.lang.String)>
<com.android.server.pm.PackageManagerService: byte[] getPreferredActivityBackup(int)>
<com.android.server.accounts.AccountManagerService: boolean setAccountVisibility(android.accounts.Account,java.lang.String,int)>
<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void scheduleReadDefaultPermissionExceptions()>
<com.android.server.media.RemoteDisplayProviderWatcher: void dump(java.io.PrintWriter,java.lang.String)>
<com.android.server.inputmethod.InputMethodManagerService: void updateKeyboardFromSettingsLocked()>
<com.android.server.policy.WindowManagerPolicy.WindowState: boolean inMultiWindowMode()>
<com.android.settingslib.bluetooth.HidProfile: int getOrdinal()>
<com.android.systemui.statusbar.phone.BarTransitions.BarBackgroundDrawable: void draw(android.graphics.Canvas)>
<com.android.systemui.egg.MLand: int getNumPlayers()>
<com.android.systemui.SwipeHelper.Callback: boolean canChildBeDragged(android.view.View)>
<com.android.systemui.statusbar.phone.StatusBarWindowController: void setQsExpanded(boolean)>
<com.android.keyguard.KeyguardHostView: com.android.keyguard.KeyguardSecurityContainer getSecurityContainer()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean isHeadsUpAnimatingAway()>
<com.android.server.usb.descriptors.UsbDescriptor: void shortReport(com.android.server.usb.descriptors.report.ReportCanvas)>
<com.android.systemui.qs.QSAnimator: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)>
<com.android.server.location.LocationProviderProxy: com.android.server.location.LocationProviderProxy createAndBind(android.content.Context,com.android.server.location.AbstractLocationProvider.LocationProviderManager,java.lang.String,int,int,int)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void onDensityOrFontScaleChanged()>
<com.android.systemui.doze.DozeHost: void dozeTimeTick()>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: void setBackgroundTop(int)>
<com.android.systemui.statusbar.phone.ButtonDispatcher: void setDarkIntensity(float)>
<com.android.server.pm.permission.PermissionManagerServiceInternal: boolean isPermissionsReviewRequired(android.content.pm.PackageParser.Package,int)>
<com.android.keyguard.KeyguardStatusView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.pm.DumpState: boolean isDumping(int)>
<com.android.server.camera.CameraStatsJobService: boolean onStopJob(android.app.job.JobParameters)>
<com.android.systemui.doze.DozeHost: void removeCallback(com.android.systemui.doze.DozeHost.Callback)>
<com.android.preload.ui.SequenceUI: com.android.preload.ui.SequenceUI confirmYes()>
<com.android.settingslib.location.InjectedSetting: int hashCode()>
<com.android.server.content.SyncStorageEngine: android.util.Pair getBackoff(com.android.server.content.SyncStorageEngine.EndPoint)>
<javax.microedition.khronos.egl.EGL10: boolean eglTerminate(javax.microedition.khronos.egl.EGLDisplay)>
<com.android.systemui.keyguard.WakefulnessLifecycle.Observer: void onStartedGoingToSleep()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void onBelowSpeedBumpChanged()>
<com.android.server.statusbar.StatusBarManagerService: void onNotificationClick(java.lang.String,com.android.internal.statusbar.NotificationVisibility)>
<com.android.server.usb.descriptors.UsbACInterface: com.android.server.usb.descriptors.UsbDescriptor allocDescriptor(com.android.server.usb.descriptors.UsbDescriptorParser,com.android.server.usb.descriptors.ByteStream,int,byte)>
<android.net.util.SharedLog: void log(java.lang.String)>
<com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper: boolean isDismissGesture(android.view.MotionEvent)>
<com.android.settingslib.wifi.AccessPoint: void <init>(android.content.Context,android.net.wifi.WifiConfiguration,java.util.Collection,java.util.Collection)>
<com.android.server.locksettings.recoverablekeystore.TestOnlyInsecureCertificateHelper: java.security.cert.X509Certificate getRootCertificate(java.lang.String)>
<com.android.server.updates.LangIdInstallReceiver: boolean verifyVersion(int,int)>
<com.android.settingslib.license.LicenseHtmlLoader: java.io.File loadInBackground()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void addPersistentPreferredActivity(android.content.ComponentName,android.content.IntentFilter,android.content.ComponentName)>
<com.android.printservice.recommendation.PrintServicePlugin: java.lang.CharSequence getPackageName()>
<com.android.keyguard.clock.BubbleClockController: int getPreferredY(int)>
<com.android.server.NetworkScoreService: android.net.NetworkScorerAppData getActiveScorer()>
<com.android.server.print.PrintManagerService: void onStart()>
<com.android.systemui.egg.MLandActivity: void onPause()>
<com.android.settingslib.inputmethod.InputMethodPreference.OnSavePreferenceListener: void onSaveInputMethodPreference(com.android.settingslib.inputmethod.InputMethodPreference)>
<com.android.server.ConnectivityService: void setAcceptUnvalidated(android.net.Network,boolean,boolean)>
<com.android.server.LocationManagerService: int getGnssBatchSize(java.lang.String)>
<com.android.systemui.recents.events.activity.HideRecentsEvent: void <init>(boolean,boolean)>
<com.android.systemui.statusbar.phone.StatusBar.H: void handleMessage(android.os.Message)>
<com.android.server.pm.UserManagerService: android.os.Bundle getDefaultGuestRestrictions()>
<com.android.server.statusbar.StatusBarManagerService: void onGlobalActionsShown()>
<com.android.systemui.statusbar.policy.NetworkController: com.android.systemui.statusbar.policy.NetworkController.AccessPointController getAccessPointController()>
<com.android.systemui.statusbar.phone.KeyguardStatusBarView: void setListening(boolean)>
<com.android.externalstorage.TestDocumentsProvider: android.os.ParcelFileDescriptor openDocument(java.lang.String,java.lang.String,android.os.CancellationSignal)>
<com.android.server.policy.PhoneWindowManager: int getUiMode()>
<com.android.systemui.statusbar.policy.FlashlightController: void setFlashlight(boolean)>
<com.android.systemui.qs.car.CarQSFragment: int getQsMinExpansionHeight()>
<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: boolean shouldShowMenu()>
<com.android.systemui.usb.UsbResolverActivity: boolean onTargetSelected(com.android.internal.app.ResolverActivity.TargetInfo,boolean)>
<com.android.systemui.analytics.DataCollector: boolean isEnabledFull()>
<android.graphics.perftests.OutlinePerfTest: void testSetRoundRect()>
<com.android.systemui.recents.views.RecentsView: void onBusEvent(com.android.systemui.recents.events.activity.HideStackActionButtonEvent)>
<com.android.server.notification.ConditionProviders: boolean subscribeIfNecessary(android.content.ComponentName,android.net.Uri)>
<com.android.systemui.volume.ZenModePanel: void createZenButtons()>
<com.android.settingslib.bluetooth.HearingAidProfile: boolean isProfileReady()>
<com.android.server.notification.NotificationRecord: void copyRankingInformation(com.android.server.notification.NotificationRecord)>
<com.android.server.uri.UriPermissionOwner: void writeToProto(android.util.proto.ProtoOutputStream,long)>
<com.android.mediadrm.signer.MediaDrmSigner: com.android.mediadrm.signer.MediaDrmSigner.CertificateRequest getCertificateRequest(android.media.MediaDrm,int,java.lang.String)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void showAssistDisclosure()>
<com.android.server.audio.AudioService: void handleBluetoothA2dpDeviceConfigChange(android.bluetooth.BluetoothDevice)>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: boolean isPinned()>
<com.android.settingslib.bluetooth.LocalBluetoothProfile: int getNameResource(android.bluetooth.BluetoothDevice)>
<com.android.settingslib.AppItem: void <init>(int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void updateVerticalPanelPosition(float)>
<com.android.systemui.statusbar.notification.stack.AmbientState: void setLayoutHeight(int)>
<com.android.systemui.recents.views.grid.TaskGridLayoutAlgorithm: void initialize(android.graphics.Rect)>
<android.net.ip.IIpClient: void confirmConfiguration()>
<com.android.server.biometrics.AuthenticationClient: boolean wasUserDetected()>
<com.android.systemui.statusbar.phone.LightBarController: void setNavigationBar(com.android.systemui.statusbar.phone.LightBarTransitionsController)>
<com.android.server.audio.AudioService: void setVolumePolicy(android.media.VolumePolicy)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getPasswordMinimumNonLetter(android.content.ComponentName,int,boolean)>
<com.android.systemui.statusbar.notification.row.ExpandableOutlineView: float getCurrentBackgroundRadiusBottom()>
<com.android.keyguard.KeyguardSimPinView: void resetState()>
<com.android.systemui.statusbar.KeyguardIndicationController: void setUserInfoController(com.android.systemui.statusbar.policy.UserInfoController)>
<com.android.server.usb.descriptors.Usb20ASGeneral: byte getTerminalLink()>
<com.android.server.media.RemoteDisplayProviderWatcher: void stop()>
<com.android.systemui.settings.CurrentUserObservable: androidx.lifecycle.LiveData getCurrentUser()>
<com.android.server.timezone.PermissionHelper: void enforceCallerHasPermission(java.lang.String)>
<com.android.server.audio.PlaybackActivityMonitor: void dump(java.io.PrintWriter)>
<com.android.server.biometrics.fingerprint.FingerprintUserState: java.lang.String getBiometricsTag()>
<com.android.server.pm.permission.PermissionManagerServiceInternal.PermissionCallback: void onGidsChanged(int,int)>
<com.android.settingslib.wifi.WifiTrackerFactory: void setTestingWifiTracker(com.android.settingslib.wifi.WifiTracker)>
<com.android.server.pm.PackageInstallerService: void registerCallback(android.content.pm.IPackageInstallerCallback,java.util.function.IntPredicate)>
<com.android.server.display.WifiDisplayController.Listener: void onDisplayConnected(android.hardware.display.WifiDisplay,android.view.Surface,int,int,int)>
<com.android.systemui.statusbar.StatusBarStateControllerImpl: void setKeyguardRequested(boolean)>
<com.android.systemui.AutoReinflateContainer: void onAttachedToWindow()>
<com.android.server.usb.descriptors.UsbDescriptorParser: boolean hasSpeaker()>
<com.android.photos.BitmapRegionTileSource.ResourceBitmapSource: com.android.photos.SimpleBitmapRegionDecoder loadBitmapRegionDecoder()>
<com.android.systemui.doze.DozeReceiver: void dozeTimeTick()>
<com.android.server.pm.PersistentPreferredIntentResolver: boolean isPackageForFilter(java.lang.String,com.android.server.pm.PersistentPreferredActivity)>
<com.android.systemui.statusbar.notification.stack.AmbientState: void setOverScrollAmount(float,boolean)>
<com.android.systemui.statusbar.notification.row.NotificationGuts: void closeControls(boolean,boolean,int,int,boolean)>
<com.android.systemui.shared.system.TransactionCompat: com.android.systemui.shared.system.TransactionCompat setWindowCrop(com.android.systemui.shared.system.SurfaceControlCompat,android.graphics.Rect)>
<com.android.server.locksettings.LockSettingsService.SynchronizedStrongAuthTracker: int getStrongAuthForUser(int)>
<com.android.systemui.recents.IRecentsNonSystemUserCallbacks: void toggleRecents(int)>
<com.android.commands.telecom.Telecom: void main(java.lang.String[])>
<com.android.server.wallpaper.WallpaperManagerInternal: void onDisplayReady(int)>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb: int[] getRecoverySecretTypes(int,int)>
<com.android.server.pm.PackageManagerService: android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int)>
<com.android.server.locksettings.SyntheticPasswordManager: void newSidForUser(android.service.gatekeeper.IGateKeeperService,com.android.server.locksettings.SyntheticPasswordManager.AuthenticationToken,int)>
<com.android.server.accessibility.AccessibilityManagerService.UserState: void onSwitchToAnotherUserLocked()>
<com.android.packageinstaller.DeleteStagedFileOnResult: void onActivityResult(int,int,android.content.Intent)>
<com.android.photos.BitmapRegionTileSource.BitmapSource: com.android.photos.SimpleBitmapRegionDecoder getBitmapRegionDecoder()>
<android.net.util.InterfaceSet: void <init>(java.lang.String[])>
<com.android.media.tv.remoteprovider.TvRemoteProvider: android.os.IBinder getBinder()>
<com.android.server.rollback.RollbackManagerService: void onStart()>
<com.android.systemui.qs.QSTileHost: void unmarkTileAsAutoAdded(java.lang.String)>
<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice getAllPermissionGroups(int)>
<com.android.systemui.statusbar.notification.MessagingImageTransformState: void setStartActualHeight(int)>
<com.android.server.pm.permission.PermissionManagerServiceInternal: int checkPermission(java.lang.String,java.lang.String,int,int)>
<com.android.printservice.recommendation.util.PrinterHashMap: boolean isEmpty()>
<com.android.systemui.BatteryMeterView: void onBatteryLevelChanged(int,boolean,boolean)>
<com.android.systemui.statusbar.phone.CollapsedStatusBarFragment: void hideNotificationIconArea(boolean)>
<com.android.settingslib.bluetooth.LocalBluetoothManager: android.content.Context getForegroundActivity()>
<com.android.server.trust.TrustArchive: void logAgentStopped(int,android.content.ComponentName)>
<android.net.netlink.StructNlAttr: int getAlignedLength()>
<javax.obex.ServerRequestHandler: void onAuthenticationFailure(byte[])>
<com.android.systemui.statusbar.notification.stack.ViewState: void abortAnimation(android.view.View,int)>
<com.android.server.usb.descriptors.report.UsbStrings: java.lang.String getACControlInterfaceName(byte)>
<com.android.server.locksettings.LockSettingsService.Lifecycle: void onStart()>
<com.android.printservice.recommendation.plugin.hp.ServiceRecommendationPlugin: java.lang.CharSequence getPackageName()>
<com.android.systemui.statusbar.phone.StatusBar: void onTrackingStopped(boolean)>
<com.android.systemui.qs.QSTileHost: java.util.List loadTileSpecs(android.content.Context,java.lang.String)>
<com.android.systemui.qs.tiles.DndTile: void setVisible(android.content.Context,boolean)>
<com.android.systemui.statusbar.KeyguardAffordanceView: void setLaunchingAffordance(boolean)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector clickable(boolean)>
<com.android.settingslib.dream.DreamBackend: boolean isEnabled()>
<android.net.util.SharedLog: void mark(java.lang.String)>
<com.android.systemui.shared.recents.model.TaskKeyCache: void removeCacheEntry(int)>
<com.android.server.pm.Policy: java.lang.String toString()>
<javax.microedition.khronos.opengles.GL10: void glClientActiveTexture(int)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: int getBackgroundColor(int)>
<com.android.systemui.statusbar.phone.StatusBar: com.android.systemui.plugins.qs.QS createDefaultQSFragment()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void initDependencies(com.android.systemui.statusbar.phone.StatusBar,com.android.systemui.statusbar.phone.NotificationGroupManager,com.android.systemui.statusbar.NotificationShelf,com.android.systemui.statusbar.phone.HeadsUpManagerPhone,com.android.systemui.statusbar.phone.NotificationIconAreaController,com.android.systemui.statusbar.phone.ScrimController)>
<com.android.systemui.recents.OverviewProxyService.OverviewProxyListener: void onQuickScrubStarted()>
<com.android.server.IpSecService: void deleteTransform(int)>
<com.android.server.infra.FrameworkResourcesServiceNameResolver: void <init>(android.content.Context,int)>
<com.android.systemui.recents.model.TaskStack: java.util.ArrayList getTasks()>
<com.android.server.pm.UserRestrictionsUtils: java.util.Set getDefaultEnabledForManagedProfiles()>
<com.android.server.pm.PackageManagerService: void clearPackagePersistentPreferredActivities(java.lang.String,int)>
<com.android.systemui.shared.system.DockedStackListenerCompat: void onDockedStackExistsChanged(boolean)>
<com.android.server.biometrics.face.FaceService: boolean hasReachedEnrollmentLimit(int)>
<com.android.systemui.util.Utils.DisableStateTracker: boolean isDisabled()>
<com.android.server.ServiceWatcher: java.lang.String getCurrentPackageName()>
<com.android.server.SensorNotificationService: void onProviderDisabled(java.lang.String)>
<android.net.shared.ProvisioningConfiguration.Builder: android.net.shared.ProvisioningConfiguration.Builder withoutIPv6()>
<com.android.systemui.plugins.NotificationListenerController: void onListenerConnected(com.android.systemui.plugins.NotificationListenerController.NotificationProvider)>
<com.android.server.slice.SliceManagerService: void pinSlice(java.lang.String,android.net.Uri,android.app.slice.SliceSpec[],android.os.IBinder)>
<com.android.keyguard.KeyguardPINView: void resetState()>
<android.app.PendingIntentPerfTest: void cancel()>
<com.android.systemui.statusbar.NotificationLockscreenUserManagerImpl: boolean userAllowsPrivateNotificationsInPublic(int)>
<com.android.server.notification.CountdownConditionProvider: void onBootComplete()>
<com.android.settingslib.RestrictedPreferenceHelper: void <init>(android.content.Context,androidx.preference.Preference,android.util.AttributeSet)>
<com.android.preload.ui.SwingUI: void showMessageDialog(java.lang.String)>
<com.android.settingslib.core.instrumentation.VisibilityLoggerMixin: void onResume()>
<com.android.server.pm.PackageManagerService: void setHarmfulAppWarning(java.lang.String,java.lang.CharSequence,int)>
<com.android.systemui.bubbles.BubbleData.Listener: void applyUpdate(com.android.systemui.bubbles.BubbleData.Update)>
<com.android.systemui.shared.system.RecentsAnimationControllerCompat: void <init>(android.view.IRecentsAnimationController)>
<com.android.systemui.MultiListLayout.RotationListener: void onRotate(int,int)>
<com.android.packageinstaller.wear.WearPackageIconProvider: java.lang.String getType(android.net.Uri)>
<com.android.keyguard.KeyguardSecurityContainer: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.gallery3d.common.Utils: long crc64Long(byte[])>
<com.android.systemui.statusbar.phone.StatusBar: void startActivity(android.content.Intent,boolean,boolean)>
<com.android.keyguard.KeyguardUpdateMonitor: boolean isSwitchingUser()>
<com.android.systemui.qs.QSAnimator: void onAnimationAtEnd()>
<com.android.packageinstaller.PackageInstallerActivity: void onSaveInstanceState(android.os.Bundle)>
<com.android.server.pm.dex.DexManager: java.util.Set getAllPackagesWithSecondaryDexFiles()>
<com.android.server.VibratorService: void vibrate(int,java.lang.String,android.os.VibrationEffect,int,java.lang.String,android.os.IBinder)>
<com.android.systemui.qs.QuickQSPanel: void setHost(com.android.systemui.qs.QSTileHost,com.android.systemui.qs.customize.QSCustomizer)>
<com.android.server.pm.PackageManagerService: boolean compileLayouts(java.lang.String)>
<com.android.server.policy.PhoneWindowManager: void dismissKeyguardLw(com.android.internal.policy.IKeyguardDismissCallback,java.lang.CharSequence)>
<com.android.server.usb.descriptors.Usb10ACMixerUnit: byte[] getControls()>
<com.android.systemui.qs.car.CarQSFragment: void setKeyguardShowing(boolean)>
<com.android.server.usb.descriptors.UsbDescriptor: java.lang.String getUsbDescriptorString(android.hardware.usb.UsbDeviceConnection,byte)>
<com.android.location.provider.LocationProviderBase: long onGetStatusUpdateTime()>
<com.android.systemui.shared.system.ActivityManagerWrapper: boolean isLockTaskKioskModeActive()>
<com.android.settingslib.license.LicenseHtmlLoaderCompat: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.StatusBarRemoteInputCallback: void disable(int,int,int,boolean)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setGroupManager(com.android.systemui.statusbar.phone.NotificationGroupManager)>
<com.android.server.pm.dex.DexManager: void reconcileSecondaryDexFiles(java.lang.String)>
<com.android.systemui.statusbar.AlertingNotificationManager.Clock: long currentTimeMillis()>
<com.android.server.biometrics.EnumerateClient: void notifyUserActivity()>
<com.android.server.usb.descriptors.Usb10ACMixerUnit: int getChannelConfig()>
<com.android.systemui.statusbar.phone.NotificationListenerWithPlugins: android.service.notification.NotificationListenerService.RankingMap onPluginRankingUpdate(android.service.notification.NotificationListenerService.RankingMap)>
<com.android.systemui.statusbar.notification.NotificationClicker: void register(com.android.systemui.statusbar.notification.row.ExpandableNotificationRow,android.service.notification.StatusBarNotification)>
<com.android.providers.settings.SettingsService: void <init>(com.android.providers.settings.SettingsProvider)>
<com.android.settingslib.drawable.UserIconDrawable: com.android.settingslib.drawable.UserIconDrawable setIcon(android.graphics.Bitmap)>
<com.android.server.notification.NotificationRecord: void setSmartReplies(java.util.ArrayList)>
<com.android.systemui.statusbar.policy.SecurityControllerImpl: boolean hasWorkProfile()>
<com.android.keyguard.clock.BubbleClockController: boolean shouldShowStatusArea()>
<com.android.settingslib.CustomDialogPreference: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.notification.PreferencesHelper: boolean shouldHideSilentStatusIcons()>
<com.android.media.remotedisplay.RemoteDisplayProvider: int getDiscoveryMode()>
<com.android.systemui.qs.QuickStatusBarHeader: float getColorIntensity(int)>
<com.android.server.ConnectivityService: android.net.NetworkRequest pendingRequestForNetwork(android.net.NetworkCapabilities,android.app.PendingIntent)>
<com.android.server.inputmethod.InputMethodManagerService: void <init>(android.content.Context)>
<com.android.server.policy.keyguard.KeyguardStateMonitor: void onSimSecureStateChanged(boolean)>
<com.android.server.notification.CountdownConditionProvider: void onConnected()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void loadDimens()>
<com.android.server.policy.WindowManagerPolicy.WindowState: boolean isInputMethodTarget()>
<com.android.systemui.stackdivider.Divider: boolean isHomeStackResizable()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean removeUser(android.content.ComponentName,android.os.UserHandle)>
<com.android.keyguard.KeyguardHostView: void resetSecurityContainer()>
<com.android.systemui.power.EnhancedEstimatesImpl: boolean isHybridNotificationEnabled()>
<com.android.systemui.doze.DozeMachine: void requestPulse(int)>
<com.android.server.accessibility.AccessibilityManagerService: void interrupt(int)>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb: java.util.List getRecoveryAgents(int)>
<com.android.server.LocationManagerService: void addTestProvider(java.lang.String,com.android.internal.location.ProviderProperties,java.lang.String)>
<com.android.systemui.statusbar.phone.StatusBarWindowController: void setBarHeight(int)>
<com.android.systemui.statusbar.policy.RemoteInputView: void stealFocusFrom(com.android.systemui.statusbar.policy.RemoteInputView)>
<com.android.systemui.statusbar.policy.ExtensionController.Extension: void clearItem(boolean)>
<com.android.systemui.egg.MLand: void onSizeChanged(int,int,int,int)>
<com.android.server.notification.GroupHelper.Callback: void addAutoGroupSummary(int,java.lang.String,java.lang.String)>
<com.google.android.startop.iorap.AppLaunchEvent.IntentStarted: boolean equals(java.lang.Object)>
<com.android.keyguard.KeyguardPatternView: void createAnimation(com.android.internal.widget.LockPatternView.CellState,long,long,float,boolean,android.view.animation.Interpolator,java.lang.Runnable)>
<com.android.systemui.statusbar.phone.NavigationBarView: boolean isOverviewEnabled()>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: float getDismissThreshold()>
<com.android.systemui.volume.VolumeDialogControllerImpl: void vibrate(android.os.VibrationEffect)>
<android.graphics.perftests.CanvasPerfTest: void testRecordSimpleBitmapView()>
<com.android.systemui.statusbar.phone.StatusBar: void userActivity()>
<com.android.systemui.qs.QuickStatusBarHeader: void onConfigChanged(android.service.notification.ZenModeConfig)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: void disconnect()>
<com.android.systemui.statusbar.phone.StatusBarIconControllerImpl: void setIconVisibility(java.lang.String,boolean)>
<com.android.server.hdmi.HdmiCecFeatureAction.ActionTimer: void sendTimerMessage(int,long)>
<com.android.systemui.shared.system.TaskStackChangeListeners: void onPinnedStackAnimationStarted()>
<com.android.settingslib.CustomEditTextPreference.CustomPreferenceDialogFragment: void onDialogClosed(boolean)>
<com.android.server.content.SyncStorageEngine: boolean isSyncActive(com.android.server.content.SyncStorageEngine.EndPoint)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void texSubImage2D(com.android.gallery3d.glrenderer.BasicTexture,int,int,android.graphics.Bitmap,int,int)>
<javax.obex.ClientSession: void ensureOpen()>
<com.android.server.usb.descriptors.UsbASFormat: byte getFormatType()>
<com.android.preload.Main: com.android.preload.classdataretrieval.ClassDataRetriever getClassDataRetriever()>
<com.android.systemui.plugins.FalsingManager: void onBouncerHidden()>
<com.android.server.input.InputManagerService: void setFocusedApplication(int,android.view.InputApplicationHandle)>
<com.android.systemui.qs.tileimpl.QSIconViewImpl: java.lang.String toString()>
<com.android.server.signedconfig.InvalidConfigException: void <init>(java.lang.String,java.lang.Exception)>
<com.android.server.infra.ServiceNameResolver: void dumpShort(java.io.PrintWriter)>
<com.android.systemui.SwipeHelper: void cancelLongPress()>
<com.android.systemui.statusbar.phone.RegionSamplingHelper: void updateSamplingRect()>
<com.android.systemui.shared.system.InputConsumerController.InputListener: boolean onInputEvent(android.view.InputEvent)>
<android.util.ArraySetPerfTest: void testRemoveIf_Large_RemoveHalf()>
<com.android.systemui.stackdivider.DividerView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.policy.WindowManagerPolicy.WindowState: boolean canAddInternalSystemWindow()>
<com.android.systemui.recents.views.SystemBarScrimViews: void updateNavBarScrim(boolean,boolean,com.android.systemui.recents.utilities.AnimationProps)>
<com.android.keyguard.KeyguardHostView: void cancelDismissAction()>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.util.List getAffiliationIds(android.content.ComponentName)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isUnattendedManagedKiosk()>
<com.android.server.tv.UinputBridge: void close(android.os.IBinder)>
<com.android.server.accessibility.AbstractAccessibilityServiceConnection.SystemSupport: void persistComponentNamesToSettingLocked(java.lang.String,java.util.Set,int)>
<com.android.systemui.statusbar.phone.StatusBar: com.android.systemui.statusbar.phone.NavigationBarView getNavigationBarView()>
<com.android.systemui.tuner.StatusBarSwitch: boolean persistBoolean(boolean)>
<com.android.systemui.analytics.DataCollector: com.android.systemui.analytics.DataCollector getInstance(android.content.Context)>
<com.android.systemui.recents.events.EventBus.AnimatedEvent: java.lang.Object clone()>
<com.android.systemui.tuner.NavBarTuner: void onActivityCreated(android.os.Bundle)>
<com.android.preload.actions.WritePreloadedClassesAction: void <init>(com.android.preload.ClientUtils,com.android.ddmlib.IDevice,com.android.preload.DumpTableModel)>
<com.android.systemui.recents.events.activity.DockedTopTaskEvent: void <init>(android.graphics.Rect)>
<android.os.StrictModeTest: void timeThreadViolation()>
<com.android.server.slice.SliceProviderPermissions: void onPersistableDirty(com.android.server.slice.DirtyTracker.Persistable)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void onDreamingStopped()>
<javax.microedition.khronos.opengles.GL11: void glGetClipPlanex(int,java.nio.IntBuffer)>
<com.android.systemui.recents.RecentsImplementation: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.util.List getBindDeviceAdminTargetUsers(android.content.ComponentName)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void onKeyguardFadedAway()>
<com.android.systemui.doze.DozeLog: void tracePickupWakeUp(android.content.Context,boolean)>
<com.android.server.pm.PackageManagerException: com.android.server.pm.PackageManagerException from(com.android.server.pm.Installer.InstallerException)>
<com.android.systemui.statusbar.phone.FloatingRotationButton: void setOnHoverListener(android.view.View.OnHoverListener)>
<com.android.server.display.utils.Plog: com.android.server.display.utils.Plog logPoint(java.lang.String,float,float)>
<com.android.printservice.recommendation.PrintServicePlugin: void start(com.android.printservice.recommendation.PrintServicePlugin.PrinterDiscoveryCallback)>
<com.android.systemui.statusbar.policy.RotationLockControllerImpl: void setListening(boolean)>
<com.android.server.appop.AppOpsService: void setAudioRestriction(int,int,int,int,java.lang.String[])>
<com.android.server.hdmi.HdmiControlService: void setAndBroadcastActiveSource(int,int,int)>
<com.android.systemui.statusbar.NotificationLockscreenUserManagerImpl: boolean needsSeparateWorkChallenge(int)>
<com.android.systemui.statusbar.phone.ScrimController: void onHideWallpaperTimeout()>
<com.android.settingslib.applications.ApplicationsState.Session: void onDestroy()>
<com.android.systemui.qs.QSPanel.QSTileLayout: boolean updateResources()>
<com.android.uiautomator.core.UiObject: boolean performMultiPointerGesture(android.view.MotionEvent.PointerCoords[][])>
<com.android.systemui.qs.QSCarrierGroup: void onDetachedFromWindow()>
<com.android.server.statusbar.StatusBarManagerInternal: void onRecentsAnimationStateChanged(boolean)>
<com.android.systemui.statusbar.car.UserGridRecyclerView: void onUsersUpdate()>
<com.android.settingslib.net.NetworkCycleData.Builder: com.android.settingslib.net.NetworkCycleData.Builder setStartTime(long)>
<com.android.gallery3d.exif.ExifTag: long getValueAsLong(long)>
<com.android.keyguard.SecurityMessageDisplay: void setNextMessageColor(android.content.res.ColorStateList)>
<com.android.server.NetworkScorerAppManager: boolean setActiveScorer(java.lang.String)>
<com.android.systemui.recents.views.RecentsViewTouchHandler: void registerDropTargetForCurrentDrag(com.android.systemui.recents.views.DropTarget)>
<com.android.settingslib.utils.PowerUtil: java.lang.String getBatteryRemainingStringFormatted(android.content.Context,long,java.lang.String,boolean)>
<com.android.settingslib.inputmethod.InputMethodAndSubtypeEnablerManagerCompat: void refresh(android.content.Context,androidx.preference.PreferenceFragmentCompat)>
<com.android.systemui.statusbar.notification.row.NotificationGutsManager: boolean openGuts(android.view.View,int,int,com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin.MenuItem)>
<com.android.systemui.recents.IRecentsSystemUserCallbacks: void startScreenPinning(int)>
<com.android.systemui.assist.ui.EdgeLight: int getColor()>
<com.android.server.media.MediaSessionRecord: java.lang.String getTag()>
<com.android.systemui.statusbar.notification.TransformState: float getTransformationStartScaleX()>
<com.android.server.storage.CacheQuotaStrategy: long setupQuotasFromFile()>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: int getBatteryLevel()>
<com.android.settingslib.bluetooth.PanProfile: boolean isAutoConnectable()>
<com.android.printspooler.model.OpenDocumentCallback: void onFailure(int)>
<com.android.systemui.qs.QSCarrierGroup: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.phone.StatusBar: boolean hideKeyguardImpl()>
<com.android.printspooler.renderer.IPdfEditor: void applyPrintAttributes(android.print.PrintAttributes)>
<com.android.systemui.statusbar.notification.row.ExpandableView: void setMinimumHeightForClipping(int)>
<com.android.server.accessibility.MotionEventInjector: boolean handleMessage(android.os.Message)>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: void onDeviceAdded(com.android.settingslib.bluetooth.CachedBluetoothDevice)>
<com.android.systemui.qs.PagedTileLayout: void restoreInstanceState(android.os.Bundle)>
<com.android.printspooler.util.ApprovedPrintServices: void registerChangeListenerLocked(android.content.SharedPreferences.OnSharedPreferenceChangeListener)>
<com.android.systemui.statusbar.phone.ObservableScrollView: void onScrollChanged(int,int,int,int)>
<com.android.photos.BitmapRegionTileSource.UriBitmapSource: void <init>(android.content.Context,android.net.Uri,int)>
<com.android.systemui.bubbles.animation.PhysicsAnimationLayout.PhysicsPropertyAnimator: java.util.Set getAnimatedProperties()>
<com.android.server.pm.PackageManagerService: int getPrivateFlagsForUid(int)>
<com.android.printspooler.widget.PrintContentView: void setOpenOptionsController(com.android.printspooler.widget.PrintContentView.OptionsStateController)>
<com.android.systemui.statusbar.phone.StatusBar: com.android.systemui.statusbar.GestureRecorder getGestureRecorder()>
<android.net.dhcp.DhcpServingParamsParcelExt: android.net.dhcp.DhcpServingParamsParcelExt setNoDnsServer()>
<com.android.systemui.recents.views.TaskStackAnimationHelper: void prepareForEnterAnimation()>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.ui.TaskViewDismissedEvent)>
<com.android.systemui.statusbar.ViewTransformationHelper: void transformFrom(com.android.systemui.statusbar.TransformableView)>
<com.android.server.PackageWatchdog: void writeNow()>
<javax.obex.ObexTransport: int getMaxReceivePacketSize()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isDeviceProvisioningConfigApplied()>
<com.android.server.notification.SystemConditionProviderService: void attachBase(android.content.Context)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onZenChanged(int)>
<com.android.server.pm.PackageInstallerSession: int getInstallerUid()>
<com.android.gallery3d.exif.ExifInterface: java.lang.String getTagStringValue(int,int)>
<android.net.util.VersionedBroadcastListener.IntentCallback: void run(android.content.Intent)>
<com.android.systemui.statusbar.notification.stack.AnimationProperties: com.android.systemui.statusbar.notification.stack.AnimationProperties setDelay(long)>
<com.android.server.location.NtpTimeHelperTest: void handleInjectNtpTime_injectTimeFailed_injectTimeDelayed()>
<com.android.server.slice.SliceClientPermissions.SliceAuthority: void writeTo(org.xmlpull.v1.XmlSerializer)>
<com.android.systemui.statusbar.notification.stack.AmbientState: boolean isPanelTracking()>
<com.android.systemui.ScreenDecorations: void setAssistHintBlocked(boolean)>
<com.android.systemui.statusbar.phone.StatusBarIconList.Slot: java.util.List getHolderList()>
<com.android.server.stats.StatsCompanionService: void cancelAnomalyAlarm()>
<com.android.settingslib.bluetooth.LocalBluetoothManager: com.android.settingslib.bluetooth.LocalBluetoothManager create(android.content.Context,android.os.Handler)>
<com.android.server.biometrics.Constants: int actionBiometricAuth()>
<com.android.server.ConnectivityService: android.net.NetworkInfo getActiveNetworkInfoForUid(int,boolean)>
<com.android.server.infra.ServiceNameResolver: void dumpShort(java.io.PrintWriter,int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setTouchAndAnimationDisabled(boolean)>
<com.android.server.pm.UserManagerService: void setUserRestriction(java.lang.String,boolean,int)>
<com.android.settingslib.applications.ApplicationsState.Session: java.util.ArrayList rebuild(com.android.settingslib.applications.ApplicationsState.AppFilter,java.util.Comparator,boolean)>
<com.android.systemui.statusbar.notification.row.ExpandableView: boolean isTransformingIntoShelf()>
<com.android.systemui.qs.tileimpl.SlashImageView: void setImageViewDrawable(com.android.systemui.qs.SlashDrawable)>
<com.android.systemui.qs.tiles.CastTile: java.lang.String composeChangeAnnouncement()>
<com.android.settingslib.widget.BarViewInfo: int compareTo(com.android.settingslib.widget.BarViewInfo)>
<com.android.systemui.shared.system.TaskStackChangeListener: void onActivityRequestedOrientationChanged(int,int)>
<com.android.systemui.volume.ConfigurableTexts: int add(android.widget.TextView)>
<com.android.systemui.statusbar.notification.stack.AmbientState: boolean isOnKeyguard()>
<com.android.server.pm.PackageInstallerService: android.content.pm.ParceledListSlice getAllSessions(int)>
<com.android.systemui.pip.phone.PipTouchState: void <init>(android.view.ViewConfiguration,android.os.Handler,java.lang.Runnable)>
<com.android.systemui.statusbar.phone.HeadsUpManagerPhone: com.android.systemui.statusbar.policy.HeadsUpManager.HeadsUpEntry createAlertEntry()>
<com.android.server.media.MediaSessionRecord: android.media.session.ISession getSessionBinder()>
<com.android.server.TelephonyRegistry: void notifySubscriptionInfoChanged()>
<com.android.systemui.statusbar.policy.DeviceProvisionedControllerImpl: void onUserSwitched(int)>
<android.net.shared.ProvisioningConfiguration.Builder: android.net.shared.ProvisioningConfiguration.Builder withoutIpReachabilityMonitor()>
<com.android.powermodel.AppActivity: com.android.powermodel.ComponentActivity getComponentActivity(com.android.powermodel.Component)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: float getIncreasedPaddingAmount()>
<com.android.settingslib.media.LocalMediaManager.DeviceCallback: void onSelectedDeviceStateChanged(com.android.settingslib.media.MediaDevice,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean setProfileOwner(android.content.ComponentName,java.lang.String,int)>
<com.android.systemui.statusbar.policy.BatteryControllerImpl: boolean isAodPowerSave()>
<com.android.systemui.statusbar.policy.UserSwitcherController: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.statusbar.policy.NetworkController: boolean isRadioOn()>
<com.android.server.adb.AdbDebuggingManager: void dump(com.android.internal.util.dump.DualDumpOutputStream,java.lang.String,long)>
<com.google.android.startop.iorap.AppLaunchEvent: boolean equals(com.google.android.startop.iorap.AppLaunchEvent)>
<com.android.server.storage.DeviceStorageMonitorService: void <init>(android.content.Context)>
<android.net.shared.ProvisioningConfiguration.Builder: android.net.shared.ProvisioningConfiguration.Builder withProvisioningTimeoutMs(int)>
<com.android.server.usb.descriptors.UsbDescriptorParser: boolean hasInput()>
<com.android.settingslib.suggestions.SuggestionControllerMixin: void onLoaderReset(android.content.Loader)>
<com.android.server.textservices.TextServicesManagerService.Lifecycle: void onStopUser(int)>
<com.android.systemui.statusbar.notification.row.AppOpsInfo: int getActualHeight()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setExpandingEnabled(boolean)>
<com.android.server.content.SyncJobService: void callJobFinished(int,boolean,java.lang.String)>
<com.android.settingslib.wifi.AccessPoint: void startOsuProvisioning(android.net.wifi.WifiManager.ActionListener)>
<com.android.systemui.statusbar.policy.DeadZone: void <init>(com.android.systemui.statusbar.phone.NavigationBarView)>
<com.android.gallery3d.glrenderer.BitmapTexture: android.graphics.Bitmap onGetBitmap()>
<com.android.server.notification.NotificationUsageStats.Aggregate: void addSample(long)>
<com.android.systemui.qs.tiles.HotspotTile: void handleUpdateState(com.android.systemui.plugins.qs.QSTile.BooleanState,java.lang.Object)>
<com.android.uiautomator.core.UiAutomatorBridge: boolean injectInputEvent(android.view.InputEvent,boolean)>
<com.android.server.locksettings.LockSettingsStorage.Callback: void initialize(android.database.sqlite.SQLiteDatabase)>
<com.android.server.pm.PackageManagerService: android.content.ComponentName getInstantAppResolverComponent()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: float getAppearFraction(float)>
<com.android.location.provider.LocationRequestUnbundled: java.lang.String toString()>
<com.android.systemui.MultiListLayout: void removeAllItems()>
<com.android.systemui.bubbles.BubbleStackView: void updateDotVisibility(java.lang.String)>
<javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLDisplay eglGetCurrentDisplay()>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: java.util.List getRemovedProfiles()>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcherScrim: int getOpacity()>
<com.android.systemui.qs.touch.SwipeDetector: float computeVelocity(float,long)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void setSwitchingUser(boolean)>
<com.android.server.location.ComprehensiveCountryDetector: void removePhoneStateListener()>
<com.android.systemui.keyguard.DismissCallbackWrapper: void notifyDismissCancelled()>
<com.android.gallery3d.common.Utils: void closeSilently(java.io.Closeable)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void notifyGroupChildRemoved(com.android.systemui.statusbar.notification.row.ExpandableView,android.view.ViewGroup)>
<com.android.server.notification.NotificationDelegate: void onNotificationBubbleChanged(java.lang.String,boolean)>
<com.android.server.statusbar.StatusBarManagerService: void disableForUser(int,android.os.IBinder,java.lang.String,int)>
<com.android.uiautomator.core.UiObject: boolean clickAndWaitForNewWindow(long)>
<com.android.server.notification.ManagedServices: void writeExtraXmlTags(org.xmlpull.v1.XmlSerializer)>
<com.android.server.locksettings.PasswordSlotManager: void refreshActiveSlots(java.util.Set)>
<com.android.systemui.qs.PathInterpolatorBuilder: void <init>(float,float)>
<com.android.systemui.shared.system.TransactionCompat: com.android.systemui.shared.system.TransactionCompat deferTransactionUntil(com.android.systemui.shared.system.SurfaceControlCompat,android.os.IBinder,long)>
<com.android.systemui.qs.QSPanel: void onTuningChanged(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.NavigationBarController: com.android.systemui.statusbar.phone.NavigationBarFragment getDefaultNavigationBarFragment()>
<com.android.systemui.util.AsyncSensorManager: boolean registerListenerImpl(android.hardware.SensorEventListener,android.hardware.Sensor,int,android.os.Handler,int,int)>
<com.android.systemui.tuner.LockscreenFragment.Adapter: void remItem(com.android.systemui.tuner.LockscreenFragment.Item)>
<com.android.systemui.statusbar.phone.HeadsUpManagerPhone.HeadsUpEntryPhone: void updateEntry(boolean)>
<com.android.powermodel.AppPower.Builder: void addComponentPower(com.android.powermodel.Component,com.android.powermodel.ComponentPower)>
<com.android.server.notification.ZenLog: void traceIntercepted(com.android.server.notification.NotificationRecord,java.lang.String)>
<com.android.server.location.GeofenceState: void <init>(android.location.Geofence,long,int,int,java.lang.String,android.app.PendingIntent)>
<com.android.packageinstaller.PackageInstallerActivity.NotSupportedOnWearDialog: void onCancel(android.content.DialogInterface)>
<com.android.systemui.statusbar.notification.row.NotificationBackgroundView: void setLastInSection(boolean)>
<com.android.gallery3d.exif.ExifInterface: void forceRewriteExif(java.lang.String)>
<com.android.server.SystemService: android.os.IBinder getBinderService(java.lang.String)>
<com.android.server.timezone.PackageTracker: void triggerUpdateIfNeeded(boolean)>
<com.android.systemui.statusbar.CastDrawable: android.graphics.drawable.Drawable mutate()>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void onStateChanged(boolean,boolean)>
<com.android.server.notification.RateEstimator: float update(long)>
<com.android.server.location.GnssLocationProvider: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.qs.QSDualTileLabel: void setTextSize(int,float)>
<com.android.systemui.shared.system.RemoteAnimationTargetCompat: void <init>(android.view.RemoteAnimationTarget)>
<com.android.server.pm.permission.PermissionsState: boolean hasRequestedPermission(android.util.ArraySet)>
<com.android.systemui.recents.OverviewProxyService: boolean isEnabled()>
<com.android.server.textclassifier.TextClassificationManagerService.Lifecycle: void onStopUser(int)>
<com.android.server.policy.PhoneWindowManager: void notifyCameraLensCoverSwitchChanged(long,boolean)>
<com.android.server.ConnectivityService: boolean isDefaultNetwork(com.android.server.connectivity.NetworkAgentInfo)>
<com.android.server.input.InputManagerService.WindowManagerCallbacks: void onPointerDownOutsideFocus(android.os.IBinder)>
<com.android.server.policy.WindowManagerPolicy.ScreenOnListener: void onScreenOn()>
<com.android.systemui.statusbar.notification.collection.NotificationEntry.EditedSuggestionInfo: void <init>(java.lang.CharSequence,int)>
<com.android.systemui.keyguard.KeyguardLifecyclesDispatcher: void <init>(com.android.systemui.keyguard.ScreenLifecycle,com.android.systemui.keyguard.WakefulnessLifecycle)>
<android.text.StaticLayoutPerfTest: void testCreate_RandomText_NoStyled_Balanced_NoHyphenation()>
<com.android.server.ThreadPriorityBooster: void setBoostToPriority(int)>
<com.android.gallery3d.common.Utils: float interpolateAngle(float,float,float)>
<com.android.systemui.shared.system.TaskStackChangeListener: void onTaskStackChangedBackground()>
<com.android.gallery3d.exif.ExifInterface: com.android.gallery3d.exif.ExifTag getTag(int,int)>
<com.android.server.audio.AudioEventLogger.Event: java.lang.String toString()>
<com.android.systemui.globalactions.GlobalActionsDialog.MyAdapter: boolean isEnabled(int)>
<com.android.commands.svc.BluetoothCommand: void run(java.lang.String[])>
<com.android.packageinstaller.wear.WearPackageIconProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<com.android.systemui.bubbles.BubbleStackView: void onBubbleDragFinish(android.view.View,float,float,float,float)>
<com.android.server.adb.AdbService: void clearDebuggingKeys()>
<com.android.server.content.SyncStorageEngine: com.android.server.content.SyncStorageEngine newTestInstance(android.content.Context)>
<com.android.settingslib.core.lifecycle.events.OnAttach: void onAttach(android.content.Context)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean startViewCalendarEventInManagedProfile(java.lang.String,long,long,long,boolean,int)>
<com.android.systemui.shared.recents.model.Task.TaskKey: void <init>(int,int,android.content.Intent,android.content.ComponentName,int,long)>
<com.android.printspooler.model.PrintSpoolerService: void setStatus(android.print.PrintJobId,java.lang.CharSequence)>
<com.android.server.usb.descriptors.UsbDescriptor: java.lang.String getStatusString()>
<com.android.systemui.statusbar.phone.HeadsUpTouchHelper: void <init>(com.android.systemui.statusbar.phone.HeadsUpManagerPhone,com.android.systemui.statusbar.phone.HeadsUpTouchHelper.Callback,com.android.systemui.statusbar.phone.NotificationPanelView)>
<com.android.systemui.recents.views.TaskStackViewScroller: void <init>(android.content.Context,com.android.systemui.recents.views.TaskStackViewScroller.TaskStackViewScrollerCallbacks,com.android.systemui.recents.views.TaskStackLayoutAlgorithm)>
<com.android.server.slice.SliceProviderPermissions.SliceAuthority: java.lang.String toString()>
<com.android.systemui.glwallpaper.EglHelper: void finish()>
<com.android.settingslib.media.MediaDeviceUtils: java.lang.String getId(com.android.settingslib.bluetooth.CachedBluetoothDevice)>
<com.android.server.policy.WindowManagerPolicy: void setDefaultDisplay(com.android.server.policy.WindowManagerPolicy.DisplayContentInfo)>
<com.android.systemui.shared.system.RecentsAnimationControllerCompat: com.android.systemui.shared.recents.model.ThumbnailData screenshotTask(int)>
<com.android.nfc_extras.EeInitializationException: void <init>(java.lang.String)>
<com.android.settingslib.bluetooth.A2dpProfile: int getDrawableResource(android.bluetooth.BluetoothClass)>
<com.android.settingslib.bluetooth.PbapServerProfile: boolean connect(android.bluetooth.BluetoothDevice)>
<android.net.netlink.NetlinkConstants: java.lang.String hexify(byte[])>
<com.android.systemui.statusbar.policy.NetworkController.AccessPointController: void addAccessPointCallback(com.android.systemui.statusbar.policy.NetworkController.AccessPointController.AccessPointCallback)>
<com.android.systemui.bubbles.BubbleController: float getBubbleBounciness(android.content.Context,float)>
<com.android.systemui.egg.MLand: int getGameHeight()>
<com.android.systemui.statusbar.phone.NavigationBarView: com.android.systemui.statusbar.phone.ButtonDispatcher getBackButton()>
<com.android.systemui.statusbar.phone.ReverseLinearLayout: void addView(android.view.View)>
<com.android.systemui.statusbar.phone.StatusBarSignalPolicy: void setWifiIndicators(boolean,com.android.systemui.statusbar.policy.NetworkController.IconState,com.android.systemui.statusbar.policy.NetworkController.IconState,boolean,boolean,java.lang.String,boolean,java.lang.String)>
<com.android.server.CountryDetectorService: void removeCountryListener(android.location.ICountryListener)>
<com.android.settingslib.widget.apppreference.AppPreference: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.trust.TrustArchive: java.lang.String formatDuration(long)>
<com.android.server.role.RoleManagerService: void onStart()>
<com.android.systemui.analytics.DataCollector: void onTrackingStarted()>
<com.android.keyguard.KeyguardPasswordView: java.lang.CharSequence getTitle()>
<com.android.server.rollback.RollbackManagerService: void onBootPhase(int)>
<com.android.printspooler.widget.PrintContentView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.android.systemui.globalactions.GlobalActionsColumnLayout: boolean shouldReverseListItems()>
<com.android.server.usb.descriptors.UsbDeviceDescriptor: int getSpec()>
<android.view.autofill.LoginTest: void testChange_serviceDoesNotAutofill()>
<com.android.systemui.recents.views.TaskViewHeader: void onDrawForeground(android.graphics.Canvas)>
<com.android.systemui.classifier.FalsingLog: void v(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void updateExpandedHeight(float)>
<com.android.systemui.statusbar.phone.ManagedProfileController: boolean hasActiveProfile()>
<com.android.preload.ui.SwingUI: com.android.ddmlib.Client getSelectedClient()>
<com.android.uiautomator.core.AccessibilityNodeInfoDumper: void dumpWindowToFile(android.view.accessibility.AccessibilityNodeInfo,java.io.File,int,int,int)>
<com.android.server.CountryDetectorService: android.location.Country detectCountry()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: int getPinnedHeadsUpHeight()>
<com.android.server.usb.descriptors.UsbDescriptorParser: java.util.ArrayList getDescriptors()>
<com.android.systemui.shared.recents.model.Task: java.lang.String toString()>
<com.android.server.notification.NotificationUsageStats.SingleNotificationStats: long getCurrentPosttimeMs()>
<com.android.settingslib.bluetooth.LocalBluetoothProfileManager: com.android.settingslib.bluetooth.HfpClientProfile getHfpClientProfile()>
<com.android.settingslib.media.InfoMediaDevice: java.lang.String getName()>
<com.android.systemui.bubbles.BubbleExpandedView: void onFinishInflate()>
<com.android.systemui.qs.tiles.CellularTile: android.content.Intent getLongClickIntent()>
<com.android.server.pm.PackageManagerService: int checkUidPermission(java.lang.String,int)>
<com.android.systemui.statusbar.notification.collection.NotificationRowBinder: void onNotificationRankingUpdated(com.android.systemui.statusbar.notification.collection.NotificationEntry,java.lang.Integer,com.android.systemui.statusbar.NotificationUiAdjustment,com.android.systemui.statusbar.NotificationUiAdjustment)>
<com.android.systemui.Dumpable: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.location.CountryDetectorBase: android.location.Country detectCountry()>
<com.android.keyguard.KeyguardUpdateMonitor: com.android.keyguard.KeyguardUpdateMonitor getInstance(android.content.Context)>
<com.android.systemui.recents.model.RecentsTaskLoader: void unloadTaskData(com.android.systemui.shared.recents.model.Task)>
<com.android.settingslib.net.NetworkCycleDataForUid.Builder: com.android.settingslib.net.NetworkCycleDataForUid.Builder setForegroundUsage(long)>
<com.android.server.ServiceThread: void run()>
<com.android.server.devicepolicy.DevicePolicyManagerService: android.content.ComponentName getDeviceOwnerComponent(boolean)>
<com.android.server.content.ContentService: void resetTodayStats()>
<com.android.server.audio.AudioService.VolumeController: void postMasterMuteChanged(int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void reboot(android.content.ComponentName)>
<com.android.settingslib.display.BrightnessUtils: int convertGammaToLinear(int,int,int)>
<com.android.server.utils.ManagedApplicationService.LogEvent: java.lang.String eventToString(int)>
<android.text.StaticLayoutPerfTest: void testDraw_PrecomputedText_NoStyled()>
<com.android.server.usb.descriptors.tree.UsbDescriptorsEndpointNode: void <init>(com.android.server.usb.descriptors.UsbEndpointDescriptor)>
<com.android.systemui.qs.AlphaControlledSignalTileView: com.android.systemui.qs.tileimpl.SlashImageView createSlashImageView(android.content.Context)>
<com.android.systemui.qs.QSFragment: void setHeaderListening(boolean)>
<com.android.server.pm.PreferredComponent: void dump(java.io.PrintWriter,java.lang.String,java.lang.Object)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setPublicLayout(com.android.systemui.statusbar.notification.row.NotificationContentView)>
<com.android.server.locksettings.LockSettingsService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.recents.views.SystemBarScrimViews: void onBusEvent(com.android.systemui.recents.events.ui.DismissAllTaskViewsEvent)>
<com.android.systemui.statusbar.phone.DozeParameters: int getPulseVisibleDurationExtended()>
<com.android.printspooler.ui.PageAdapter.ContentCallbacks: void onRequestContentUpdate()>
<com.android.settingslib.core.lifecycle.Lifecycle: boolean onOptionsItemSelected(android.view.MenuItem)>
<com.android.server.media.MediaSessionRecord: int getUserId()>
<com.android.keyguard.KeyguardPatternView: void startAppearAnimation()>
<com.android.systemui.statusbar.notification.row.ExpandableView: boolean isGroupExpanded()>
<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin.MenuItem getSnoozeMenuItem(android.content.Context)>
<android.text.StaticLayoutPerfTest: void testCreate_RandomText_NoStyled_Balanced_Hyphenation()>
<com.android.systemui.qs.tiles.AirplaneModeTile: void handleClick()>
<com.android.systemui.qs.customize.TileQueryHelper: void queryTiles(com.android.systemui.qs.QSTileHost)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: com.android.systemui.statusbar.notification.row.ExpandableNotificationRow getNotificationParent()>
<com.android.systemui.statusbar.notification.row.ExpandableView: boolean hasOverlappingRendering()>
<com.android.systemui.globalactions.GlobalActionsLayout: int getCurrentRotation()>
<com.android.systemui.usb.UsbConfirmActivity: void onCheckedChanged(android.widget.CompoundButton,boolean)>
<javax.obex.ObexTransport: void connect()>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: java.lang.String getMobileDataNetworkName()>
<com.android.systemui.stackdivider.Divider: void start()>
<com.android.server.pm.permission.BasePermission: boolean isVendorPrivileged()>
<com.android.server.statusbar.StatusBarManagerInternal: void onProposedRotationChanged(int,boolean)>
<com.android.systemui.recents.views.lowram.TaskStackLowRamLayoutAlgorithm: void initialize(android.graphics.Rect)>
<com.android.server.AppStateTracker.Listener: void updateJobsForUidPackage(int,java.lang.String,boolean)>
<com.android.systemui.qs.tiles.LocationTile: android.content.Intent getLongClickIntent()>
<com.android.systemui.statusbar.phone.EdgeBackGestureHandler: void onNavBarAttached()>
<com.android.server.webkit.SystemInterface: android.webkit.WebViewProviderInfo[] getWebViewPackages()>
<com.android.server.pm.PackageManagerService: android.content.pm.ModuleInfo getModuleInfo(java.lang.String,int)>
<com.android.server.location.ContextHubService: void <init>(android.content.Context)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: int getMaxContentHeight()>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void setKeyguardEnabled(boolean)>
<com.android.systemui.classifier.DirectionClassifier: float getFalseTouchEvaluation(int,com.android.systemui.classifier.Stroke)>
<com.android.server.TelephonyRegistry: void notifyUserMobileDataStateChangedForPhoneId(int,int,boolean)>
<com.android.systemui.statusbar.phone.AutoHideController: void setSystemUiVisibility(int,int,int,int,int,android.graphics.Rect,android.graphics.Rect,boolean)>
<com.android.systemui.usb.UsbPermissionActivity: void onCreate(android.os.Bundle)>
<com.android.systemui.recents.RecentsImpl: void onBootCompleted()>
<com.google.android.startop.iorap.AppLaunchEvent.ActivityLaunched: void <init>(long,byte[],int)>
<com.android.systemui.recents.RecentsImplementation: void toggleRecentApps()>
<com.android.systemui.HardwareUiLayout: android.view.ViewOutlineProvider getOutlineProvider()>
<com.android.server.pm.Installer: void destroyProfileSnapshot(java.lang.String,java.lang.String)>
<com.android.server.pm.UserRestrictionsUtils: boolean canProfileOwnerChange(java.lang.String,int)>
<com.android.server.pm.Installer: void migrateAppData(java.lang.String,java.lang.String,int,int)>
<com.android.systemui.statusbar.notification.row.ExpandableView: boolean isChildInGroup()>
<com.android.printspooler.util.PageRangeUtils: android.print.PageRange[] parsePageRanges(java.lang.CharSequence,int)>
<com.android.printspooler.ui.PrintActivity: void onPrinterUnavailable(android.print.PrinterInfo)>
<com.android.keyguard.KeyguardPinBasedInputView: void setPasswordEntryInputEnabled(boolean)>
<com.android.server.notification.PreferencesHelper: int getAppLockedFields(java.lang.String,int)>
<com.android.systemui.qs.QuickStatusBarHeader: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.systemui.statusbar.policy.EthernetSignalController: void notifyListeners(com.android.systemui.statusbar.policy.NetworkController.SignalCallback)>
<com.android.server.appop.AppOpsService: int noteProxyOperation(int,int,java.lang.String,int,java.lang.String)>
<com.android.systemui.statusbar.KeyguardAffordanceView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.settingslib.applications.ApplicationsState.AppEntry: java.lang.String getVersion(android.content.Context)>
<com.android.server.notification.RankingConfig: boolean createNotificationChannel(java.lang.String,int,android.app.NotificationChannel,boolean,boolean)>
<com.android.keyguard.PasswordTextView: void setUserActivityListener(com.android.keyguard.PasswordTextView.UserActivityListener)>
<android.net.NetworkMonitorManager: boolean forceReevaluation(int)>
<com.android.settingslib.RestrictedLockUtils.EnforcedAdmin: void <init>(com.android.settingslib.RestrictedLockUtils.EnforcedAdmin)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: boolean isGoingToNotificationShade()>
<com.android.systemui.statusbar.phone.LockscreenWallpaper: android.graphics.Bitmap getBitmap()>
<com.android.photos.views.TiledImageRenderer: int getViewHeight()>
<com.android.systemui.shared.system.QuickStepContract: boolean isGesturalMode(int)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: void setShowInShadeWhenBubble(boolean)>
<javax.obex.ServerOperation: java.io.DataOutputStream openDataOutputStream()>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void dismissWithAction(com.android.systemui.plugins.ActivityStarter.OnDismissAction,java.lang.Runnable,boolean,java.lang.String)>
<android.net.netlink.StructNlAttr: java.nio.ByteBuffer getValueAsByteBuffer()>
<com.android.server.hdmi.HdmiCecController.AllocateAddressCallback: void onAllocated(int,int)>
<com.android.systemui.statusbar.phone.KeyguardIndicationTextView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void notifyDarkAnimationStart(boolean)>
<android.media.BufferingParams.Builder: android.media.BufferingParams build()>
<com.android.server.locksettings.LockSettingsService: java.lang.String importKey(java.lang.String,byte[])>
<com.android.settingslib.inputmethod.InputMethodSubtypePreference: void <init>(android.content.Context,android.view.inputmethod.InputMethodSubtype,android.view.inputmethod.InputMethodInfo)>
<com.android.server.usb.descriptors.Usb20ASGeneral: int getChannelConfig()>
<com.android.systemui.statusbar.phone.ShadeController: void onLaunchAnimationCancelled()>
<android.net.IIpMemoryStoreCallbacks: void onIpMemoryStoreFetched(android.net.IIpMemoryStore)>
<android.processor.view.inspector.InspectablePropertyProcessor: void <init>(java.lang.String,javax.annotation.processing.ProcessingEnvironment)>
<com.android.systemui.SystemUIFactory: com.android.systemui.statusbar.NotificationListener provideNotificationListener(android.content.Context)>
<com.android.systemui.keyguard.WorkLockActivity: void onBackPressed()>
<com.android.systemui.tuner.TunerService: boolean parseIntegerSwitch(java.lang.String,boolean)>
<com.android.preload.ui.SequenceUI: void ready()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: int getRelativeTopPadding(android.view.View)>
<com.android.systemui.statusbar.phone.StatusBar: void requestNotificationUpdate()>
<com.android.server.location.ContextHubService: void queryNanoApps(int,android.hardware.location.IContextHubTransactionCallback)>
<com.android.systemui.statusbar.RemoteInputController: void addSpinning(java.lang.String,java.lang.Object)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void reportKeyguardDismissed(int)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void performWhenContentInactive(int,java.lang.Runnable)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void onNavigationModeChanged(int)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: boolean isInputRestricted()>
<com.android.systemui.statusbar.phone.StatusBarIconHolder: com.android.systemui.statusbar.phone.StatusBarIconHolder fromResId(android.content.Context,int,java.lang.CharSequence)>
<com.android.systemui.statusbar.notification.MessagingLayoutTransformState: void reset()>
<com.android.server.notification.ZenModeHelper: void setAutomaticZenRuleState(java.lang.String,android.service.notification.Condition)>
<android.os.ParcelPerfTest: void timeGetDataCapacity()>
<com.android.settingslib.drawer.TileUtils: java.util.List getCategories(android.content.Context,java.util.Map)>
<com.android.server.pm.PackageManagerException: void <init>(int,java.lang.String)>
<com.android.systemui.statusbar.phone.StatusBarWindowController: void notifyStateChangedCallbacks()>
<com.android.server.storage.DiskStatsFileLogger: void <init>(com.android.server.storage.FileCollector.MeasurementResult,com.android.server.storage.FileCollector.MeasurementResult,java.util.List,long)>
<com.android.systemui.pip.phone.PipMenuActivity: void onUserInteraction()>
<com.android.systemui.plugins.FalsingManager: void onScreenOff()>
<com.android.server.slice.SliceClientPermissions: void grantUri(android.net.Uri,com.android.server.slice.SlicePermissionManager.PkgUser)>
<com.android.settingslib.bluetooth.HidProfile: boolean isPreferred(android.bluetooth.BluetoothDevice)>
<com.android.server.locksettings.SyntheticPasswordManager: void clearSidForUser(int)>
<com.android.systemui.statusbar.policy.DataSaverControllerImpl: void addCallback(android.net.NetworkPolicyManager.Listener)>
<com.google.android.startop.iorap.ActivityInfo: java.lang.String toString()>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean isPanelVisibleBecauseOfHeadsUp()>
<com.android.gallery3d.common.Utils: boolean equals(java.lang.Object,java.lang.Object)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: int getContrastedColor(android.content.Context,boolean,int)>
<com.android.systemui.qs.external.TileServices: boolean isSecure()>
<com.android.server.pm.PackageManagerServiceUtils: int compareSignatures(android.content.pm.Signature[],android.content.pm.Signature[])>
<com.android.settingslib.core.instrumentation.SharedPreferencesLogger: void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void toggleSplitScreen()>
<com.android.gallery3d.glrenderer.UploadedTexture: int getHeight()>
<com.android.printservice.recommendation.plugin.samsung.SamsungRecommendationPlugin: void <init>(android.content.Context)>
<com.android.server.notification.NotificationRecord: java.util.ArrayList getSmartReplies()>
<com.android.keyguard.KeyguardPatternView: void onEmergencyButtonClickedWhenInCall()>
<com.android.settingslib.bluetooth.BluetoothCallback: void onAclConnectionStateChanged(com.android.settingslib.bluetooth.CachedBluetoothDevice,int)>
<com.android.systemui.statusbar.policy.KeyguardMonitor: boolean isShowing()>
<com.android.systemui.qs.QSSecurityFooter: android.view.View getView()>
<com.android.server.notification.NotificationManagerService: boolean isCallerSystemOrPhone()>
<com.android.server.timedetector.TimeDetectorStrategy: void dump(java.io.PrintWriter,java.lang.String[])>
<com.android.server.slice.SliceProviderPermissions.SliceAuthority: java.lang.String getFileName()>
<com.android.server.timedetector.TimeDetectorService: void suggestTime(android.app.timedetector.TimeSignal)>
<com.android.server.notification.NotificationRecord: int getFreshnessMs(long)>
<com.android.gallery3d.exif.ExifInterface: boolean isTagCountDefined(int)>
<android.view.textclassifier.TextClassifierPerfTest: void setUp()>
<com.android.systemui.qs.QuickQSPanel: void onAttachedToWindow()>
<com.android.systemui.qs.tiles.FlashlightTile: void onFlashlightError()>
<com.android.server.pm.permission.PermissionsState: int revokeRuntimePermission(com.android.server.pm.permission.BasePermission,int)>
<com.android.systemui.statusbar.policy.NextAlarmController.NextAlarmChangeCallback: void onNextAlarmChanged(android.app.AlarmManager.AlarmClockInfo)>
<com.android.server.pm.AbstractStatsBase: android.util.AtomicFile getFile()>
<com.android.systemui.statusbar.phone.NotificationIconContainer: void onViewRemoved(android.view.View)>
<com.android.systemui.pip.tv.PipControlsView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.recents.IRecentsNonSystemUserCallbacks: void preloadRecents()>
<com.android.systemui.statusbar.notification.NotificationEntryManager: void onAsyncInflationFinished(com.android.systemui.statusbar.notification.collection.NotificationEntry,int)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setClipTopAmount(int)>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: com.android.systemui.recents.views.TaskStackLayoutAlgorithm.VisibilityReport computeStackVisibilityReport(java.util.ArrayList)>
<com.android.systemui.pip.phone.PipMotionHelper: void dismissPip()>
<com.android.systemui.shared.plugins.PluginInstanceManager.PluginContextWrapper: java.lang.Object getSystemService(java.lang.String)>
<com.android.server.accessibility.MagnificationController.ControllerContext: com.android.server.accessibility.AccessibilityManagerService getAms()>
<com.android.systemui.qs.QuickStatusBarHeader: void <init>(android.content.Context,android.util.AttributeSet,com.android.systemui.statusbar.policy.NextAlarmController,com.android.systemui.statusbar.policy.ZenModeController,com.android.systemui.statusbar.phone.StatusBarIconController,com.android.systemui.plugins.ActivityStarter)>
<com.android.systemui.statusbar.phone.StatusBar: boolean shouldUnlockOnMenuPressed()>
<com.android.systemui.qs.customize.TileQueryHelper: boolean isFinished()>
<javax.obex.ServerRequestHandler: boolean isSrmSupported()>
<com.android.systemui.SystemUIApplication: com.android.systemui.SystemUI[] getServices()>
<com.android.settingslib.development.DeveloperOptionsPreferenceController: void displayPreference(androidx.preference.PreferenceScreen)>
<com.android.systemui.statusbar.notification.logging.NotificationLogger: java.lang.Runnable getVisibilityReporter()>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper: void updatePreviews()>
<com.android.media.remotedisplay.RemoteDisplay: int getPresentationDisplayId()>
<com.android.settingslib.core.lifecycle.ObservablePreferenceFragment: void setPreferenceScreen(androidx.preference.PreferenceScreen)>
<com.android.pacprocessor.PacNative: boolean setCurrentProxyScript(java.lang.String)>
<com.android.systemui.tuner.TunerService: java.lang.String getValue(java.lang.String)>
<com.android.systemui.statusbar.phone.DemoStatusIcons: void addMobileView(com.android.systemui.statusbar.phone.StatusBarSignalPolicy.MobileIconState)>
<com.android.keyguard.KeyguardSecurityViewFlipper: boolean startDisappearAnimation(java.lang.Runnable)>
<com.android.printspooler.widget.PageContentView: void init(com.android.printspooler.model.PageContentRepository.PageContentProvider,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.print.PrintAttributes.MediaSize,android.print.PrintAttributes.Margins)>
<com.android.systemui.pip.tv.PipControlsView: void setListener(com.android.systemui.pip.tv.PipControlsView.Listener)>
<com.android.systemui.qs.tiles.NightDisplayTile: void handleSetListening(boolean)>
<com.android.server.policy.BurnInProtectionHelper: void onAnimationEnd(android.animation.Animator)>
<com.android.systemui.statusbar.phone.ContextualButton: android.content.Context getContext()>
<android.net.netlink.StructNlAttr: void <init>(short,java.net.InetAddress)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void onFinishInflate()>
<com.android.systemui.recents.OverviewProxyService: void removeCallback(com.android.systemui.recents.OverviewProxyService.OverviewProxyListener)>
<com.android.systemui.tuner.LockscreenFragment.Holder: void <init>(android.view.View)>
<com.android.systemui.statusbar.notification.MessagingImageTransformState: void recycle()>
<com.android.keyguard.KeyguardAbsKeyInputView: boolean shouldLockout(long)>
<com.android.server.pm.permission.PermissionsState.PermissionState: int getFlags()>
<com.android.systemui.plugins.GlobalActions.GlobalActionsManager: void onGlobalActionsHidden()>
<com.android.server.usb.descriptors.Usb20ASFormatIIEx: void report(com.android.server.usb.descriptors.report.ReportCanvas)>
<com.android.systemui.MultiListLayout: void setListViewAccessibilityDelegate(android.view.View.AccessibilityDelegate)>
<com.android.printspooler.model.RemotePrintDocument: boolean isDestroyed()>
<com.android.systemui.statusbar.policy.UserSwitcherController.BaseUserAdapter: void refresh()>
<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin.MenuItem: android.view.View getMenuView()>
<com.android.systemui.stackdivider.DividerView.DividerCallbacks: void onDraggingEnd()>
<com.android.systemui.qs.QSFragment: void setExpandClickListener(android.view.View.OnClickListener)>
<com.android.server.SystemService: void publishLocalService(java.lang.Class,java.lang.Object)>
<com.android.systemui.classifier.FalsingManagerImpl: boolean shouldEnforceBouncer()>
<com.android.server.biometrics.face.FaceService: void checkUseBiometricPermission()>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void onMeasure(int,int)>
<com.android.server.usb.UsbService: void enableContaminantDetection(java.lang.String,boolean)>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationViewWrapper: void setContentHeight(int,int)>
<com.android.systemui.statusbar.phone.PhoneStatusBarPolicy: void onBluetoothStateChange(boolean)>
<com.android.systemui.statusbar.phone.AutoTileManager: void destroy()>
<com.android.server.IntentResolver: void dumpFilter(java.io.PrintWriter,java.lang.String,android.content.IntentFilter)>
<com.android.server.audio.AudioService: void setFocusRequestResultFromExtPolicy(android.media.AudioFocusInfo,int,android.media.audiopolicy.IAudioPolicyCallback)>
<com.android.systemui.glwallpaper.GLWallpaperRenderer: void onSurfaceChanged(int,int)>
<com.android.server.notification.NotificationRecord: int getFlags()>
<com.android.server.appbinding.finders.AppServiceFinder: boolean isEnabled(com.android.server.appbinding.AppBindingConstants)>
<com.android.systemui.recents.Recents: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.biometrics.EnumerateClient: boolean onEnrollResult(android.hardware.biometrics.BiometricAuthenticator.Identifier,int)>
<com.android.systemui.pip.tv.PipManager: boolean isPipShown()>
<com.android.keyguard.clock.ImageClock: void onFinishInflate()>
<com.android.server.location.GeofenceState: double getDistanceToBoundary()>
<com.android.server.notification.ImportanceExtractor: void setZenHelper(com.android.server.notification.ZenModeHelper)>
<android.media.MediaSession2.SessionCallback: void onCommandResult(android.media.MediaSession2,android.media.MediaSession2.ControllerInfo,java.lang.Object,android.media.Session2Command,android.media.Session2Command.Result)>
<com.android.systemui.pip.tv.PipControlsView.Listener: void onClosed()>
<com.android.uiautomator.core.Configurator: com.android.uiautomator.core.Configurator setActionAcknowledgmentTimeout(long)>
<com.android.server.IoThread: com.android.server.IoThread get()>
<com.android.systemui.statusbar.phone.PanelView: void setHeadsUpManager(com.android.systemui.statusbar.phone.HeadsUpManagerPhone)>
<com.android.systemui.SwipeHelper.Callback: void onBeginDrag(android.view.View)>
<com.android.server.policy.WindowManagerPolicy: void setPipVisibilityLw(boolean)>
<com.android.systemui.statusbar.phone.StatusBar: void updateKeyguardMaxNotifications()>
<com.android.systemui.qs.QuickQSPanel: void drawTile(com.android.systemui.qs.QSPanel.TileRecord,com.android.systemui.plugins.qs.QSTile.State)>
<com.android.systemui.glwallpaper.ImageProcessHelper.ThresholdAlgorithm: float compute(android.graphics.Bitmap,int[])>
<com.android.systemui.statusbar.policy.NetworkController.SignalCallback: void setIsAirplaneMode(com.android.systemui.statusbar.policy.NetworkController.IconState)>
<com.android.server.twilight.TwilightState: boolean equals(java.lang.Object)>
<com.android.systemui.statusbar.policy.RemoteInputQuickSettingsDisabler: void onConfigChanged(android.content.res.Configuration)>
<com.android.settingslib.media.InfoMediaDevice: boolean connect()>
<com.android.providers.settings.SettingsProvider: int getTypeFromKey(int)>
<com.android.server.location.ContextHubService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.classifier.HistoryEvaluator: void addGesture(float)>
<com.android.gallery3d.exif.ExifInterface: long[] getTagLongValues(int,int)>
<com.android.systemui.recents.views.TaskStackView: com.android.systemui.recents.views.TaskView getChildViewForTask(com.android.systemui.shared.recents.model.Task)>
<com.android.server.policy.WindowManagerPolicy: boolean canBeHiddenByKeyguardLw(com.android.server.policy.WindowManagerPolicy.WindowState)>
<com.android.server.broadcastradio.hal1.BroadcastRadioService: android.hardware.radio.ITuner openTuner(int,android.hardware.radio.RadioManager.BandConfig,boolean,android.hardware.radio.ITunerCallback)>
<com.android.server.devicepolicy.DevicePolicyManagerService: android.app.admin.SystemUpdateInfo getPendingSystemUpdate(android.content.ComponentName)>
<com.android.systemui.assist.ui.InvocationLightsView: void onDarkIntensity(float)>
<com.android.server.notification.NotificationRecord: void setShowBadge(boolean)>
<com.android.simappdialog.InstallCarrierAppActivity: void onCreate(android.os.Bundle)>
<com.android.server.policy.PhoneWindowManager: void startedGoingToSleep(int)>
<com.android.systemui.recents.views.TaskViewTransform: boolean hasTranslationZChangedFrom(float)>
<com.android.server.DeviceIdleController.LocalService: void exitIdle(java.lang.String)>
<android.media.MediaPlayer2.EventNotifier: void notify(android.media.MediaPlayer2.EventCallback)>
<com.android.systemui.statusbar.notification.CustomInterpolatorTransformation: boolean transformTo(com.android.systemui.statusbar.notification.TransformState,com.android.systemui.statusbar.TransformableView,float)>
<com.android.systemui.plugins.VolumeDialogController: void scheduleTouchFeedback()>
<com.android.commands.uiautomator.RunTestCommand: java.lang.String detailedOptions()>
<android.net.shared.ProvisioningConfiguration: java.lang.String toString()>
<com.android.systemui.statusbar.notification.NotificationEntryManager: void handleInflationException(android.service.notification.StatusBarNotification,java.lang.Exception)>
<com.android.systemui.statusbar.notification.TransformState.TransformInfo: boolean isAnimating()>
<com.android.systemui.statusbar.phone.MultiUserSwitch: boolean isMultiUserEnabled()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setDeviceOwnerLockScreenInfo(android.content.ComponentName,java.lang.CharSequence)>
<com.android.systemui.ForegroundServicesDialog: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)>
<com.android.printspooler.widget.PrintContentView: void onFinishInflate()>
<com.android.systemui.statusbar.phone.NavigationBarFragment: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.notification.ZenModeHelper: boolean canManageAutomaticZenRule(android.service.notification.ZenModeConfig.ZenRule)>
<com.android.server.pm.PackageKeySetData: boolean isUsingUpgradeKeySets()>
<com.android.settingslib.wifi.TestAccessPointBuilder: com.android.settingslib.wifi.TestAccessPointBuilder setProviderFriendlyName(java.lang.String)>
<com.android.server.NetworkScoreService.ScoringServiceConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>
<com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem: boolean isSystemAudioActivated()>
<com.android.systemui.stackdivider.DividerView: void calculateBoundsForPosition(int,int,android.graphics.Rect)>
<com.android.systemui.statusbar.policy.SmartReplyConstants: int getMinNumSystemGeneratedReplies()>
<com.android.printspooler.ui.SelectPrinterActivity: boolean onContextItemSelected(android.view.MenuItem)>
<com.android.gallery3d.exif.ExifInterface: int getRotationForOrientationValue(short)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexParameterf(int,int,float)>
<com.android.systemui.statusbar.policy.NetworkController.AccessPointController.AccessPointCallback: void onSettingsActivityTriggered(android.content.Intent)>
<com.android.server.policy.WindowManagerPolicy: void startedWakingUp(int)>
<com.android.systemui.statusbar.policy.ZenModeController: long getNextAlarm()>
<com.android.commands.svc.PowerCommand: java.lang.String longHelp()>
<com.android.keyguard.KeyguardUpdateMonitor: boolean isFaceDetectionRunning()>
<com.android.server.biometrics.BiometricUserState: void doWriteState()>
<com.android.server.ConnectivityService: com.android.server.connectivity.MockableSystemProperties getSystemProperties()>
<lockedregioncodeinjection.LockTarget: java.lang.String getPostOwner()>
<com.android.keyguard.clock.DefaultClockController: void setStyle(android.graphics.Paint.Style)>
<android.multiuser.UserLifecycleTests: void managedProfileUnlock()>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void setUserSetupComplete(boolean)>
<com.android.systemui.statusbar.phone.StatusBar: void setUpDisableFlags(int,int)>
<com.android.settingslib.net.NetworkCycleDataForUid: long getBackgroudUsage()>
<com.android.systemui.statusbar.BackDropView: boolean hasOverlappingRendering()>
<com.android.server.uri.UriGrantsManagerService.Lifecycle: void <init>(android.content.Context)>
<com.android.server.vr.EnabledComponentsObserver: int isValid(android.content.ComponentName,int)>
<com.android.systemui.statusbar.policy.CallbackController: void removeCallback(java.lang.Object)>
<com.android.uiautomator.testrunner.TestCaseCollector.TestCaseFilter: boolean accept(java.lang.Class)>
<com.android.systemui.globalactions.GlobalActionsColumnLayout: void onUpdateList()>
<com.android.photos.views.TiledImageView: void invalidate()>
<com.android.systemui.statusbar.phone.LockscreenWallpaper: void run()>
<com.android.systemui.recents.utilities.Utilities: void postAtFrontOfQueueAsynchronously(android.os.Handler,java.lang.Runnable)>
<com.android.server.notification.NotificationRecord: boolean isRecentlyIntrusive()>
<com.android.settingslib.RestrictedPreference: void useAdminDisabledSummary(boolean)>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: boolean isBluetoothEnabled()>
<com.android.keyguard.KeyguardUpdateMonitor: android.telephony.ServiceState getServiceState(int)>
<com.android.systemui.assist.AssistOrbView: void onLayout(boolean,int,int,int,int)>
<com.android.server.policy.WindowManagerPolicy: long interceptKeyBeforeDispatching(com.android.server.policy.WindowManagerPolicy.WindowState,android.view.KeyEvent,int)>
<com.android.systemui.qs.customize.QSCustomizer: void hide()>
<com.android.systemui.bubbles.animation.PhysicsAnimationLayout.PhysicsPropertyAnimator: com.android.systemui.bubbles.animation.PhysicsAnimationLayout.PhysicsPropertyAnimator alpha(float,float,java.lang.Runnable[])>
<com.android.systemui.util.AsyncSensorManager: int configureDirectChannelImpl(android.hardware.SensorDirectChannel,android.hardware.Sensor,int)>
<com.android.server.autofill.ui.AutoFillUI: void setCallback(com.android.server.autofill.ui.AutoFillUI.AutoFillUiCallback)>
<com.android.systemui.recents.OverviewProxyService: boolean shouldShowSwipeUpUI()>
<com.android.systemui.statusbar.car.CarBatteryController: void removeCallback(com.android.systemui.statusbar.policy.BatteryController.BatteryStateChangeCallback)>
<com.android.systemui.shared.system.InputChannelCompat.InputEventListener: void onInputEvent(android.view.InputEvent)>
<com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem: boolean handleSetOsdName(com.android.server.hdmi.HdmiCecMessage)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: boolean isSecure(int)>
<com.android.systemui.statusbar.policy.SignalController: void notifyListeners()>
<com.android.printspooler.model.PrintSpoolerProvider: com.android.printspooler.model.PrintSpoolerService getSpooler()>
<com.android.uiautomator.core.InstrumentationUiAutomatorBridge: android.view.Display getDefaultDisplay()>
<com.android.server.pm.PackageManagerService: java.lang.CharSequence getHarmfulAppWarning(java.lang.String,int)>
<com.android.keyguard.KeyguardSimPinView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.qs.QSAnimator: void onRtlChanged()>
<com.android.server.biometrics.BiometricServiceBase: boolean hasEnrolledBiometrics(int)>
<com.android.systemui.classifier.AnglesClassifier: java.lang.String getTag()>
<com.android.systemui.statusbar.AlertingNotificationManager: com.android.systemui.statusbar.AlertingNotificationManager.AlertEntry createAlertEntry()>
<com.android.systemui.qs.tiles.DataSaverTile: java.lang.CharSequence getTileLabel()>
<com.android.systemui.qs.tileimpl.SlashImageView: void <init>(android.content.Context)>
<com.android.systemui.qs.external.TileLifecycleManager: boolean isTileAdded(android.content.Context,android.content.ComponentName)>
<com.android.server.locksettings.recoverablekeystore.certificate.CertUtils: byte[] decodeBase64(java.lang.String)>
<android.media.Session2Link: int describeContents()>
<com.android.systemui.statusbar.policy.AccessibilityManagerWrapper: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.android.server.locksettings.recoverablekeystore.KeyStoreProxyImpl: void deleteEntry(java.lang.String)>
<com.android.server.pm.PackageManagerService: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)>
<android.multiuser.UserLifecycleTests: void ephemeralUserStopped()>
<com.android.systemui.statusbar.notification.row.ExpandableOutlineView: float getCurrentBottomRoundness()>
<com.android.systemui.statusbar.FlingAnimationUtils: void applyDismissing(android.view.ViewPropertyAnimator,float,float,float,float)>
<com.android.systemui.qs.external.TileLifecycleManager: boolean hasPendingClick()>
<com.android.printspooler.widget.EmbeddedContentContainer: void onSizeChanged(int,int,int,int)>
<com.android.server.NativeDaemonConnectorException: int getCode()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isCaCertApproved(java.lang.String,int)>
<android.text.PrecomputedTextPerfTest: void testCreate_NoStyled_NoHyphenation()>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: void onTrackingStopped(boolean)>
<com.android.server.textservices.TextServicesManagerInternal: android.view.textservice.SpellCheckerInfo getCurrentSpellCheckerForUser(int)>
<com.android.systemui.statusbar.notification.row.ExpandableView: void setHeadsUpIsVisible()>
<com.android.systemui.statusbar.NotificationListener: void onSilentStatusBarIconsVisibilityChanged(boolean)>
<com.android.server.policy.PhoneWindowManager: void screenTurningOff(com.android.server.policy.WindowManagerPolicy.ScreenOffListener)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void onThemeChanged()>
<com.android.server.content.ContentService: java.util.List getCurrentSyncs()>
<com.android.server.pm.PackageManagerService: boolean isUidPrivileged(int)>
<com.android.systemui.pip.phone.PipTouchHandler: void dump(java.io.PrintWriter,java.lang.String)>
<com.android.server.inputmethod.InputMethodManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<com.android.settingslib.bluetooth.LocalBluetoothManager.BluetoothManagerCallback: void onBluetoothManagerInitialized(android.content.Context,com.android.settingslib.bluetooth.LocalBluetoothManager)>
<com.android.server.location.GnssBatchingProviderTest: void getBatchSize_nativeGetBatchSize()>
<com.android.providers.settings.SettingsProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])>
<android.net.util.SharedLog: void e(java.lang.String,java.lang.Throwable)>
<com.android.systemui.statusbar.policy.UserSwitcherController: java.lang.String getCurrentUserName(android.content.Context)>
<com.android.systemui.analytics.SensorLoggerSession: void setType(int)>
<com.android.systemui.qs.tiles.NightDisplayTile: void <init>(com.android.systemui.qs.QSHost)>
<com.android.server.policy.WindowManagerPolicy.WindowState: boolean hasAppShownWindows()>
<com.android.systemui.pip.tv.PipControlButtonView: void setText(int)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setMaxTopPadding(int)>
<com.android.server.pm.permission.BasePermission: void transfer(java.lang.String,java.lang.String)>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb: long setPlatformKeyGenerationId(int,int)>
<com.android.keyguard.KeyguardSecurityViewFlipper: com.android.keyguard.KeyguardSecurityViewFlipper.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<com.android.server.trust.TrustManagerService: void unlockUserWithToken(long,byte[],int)>
<com.android.systemui.recents.LegacyRecentsImpl: void onBusEvent(com.android.systemui.recents.events.activity.DockedFirstAnimationFrameEvent)>
<com.android.packageinstaller.handheld.UninstallAlertDialogFragment: void onDismiss(android.content.DialogInterface)>
<com.android.server.location.RemoteListenerHelper: boolean isRegistered()>
<com.android.server.slice.SliceProviderPermissions: void <init>(com.android.server.slice.SlicePermissionManager.PkgUser,com.android.server.slice.DirtyTracker)>
<com.android.uiautomator.core.UiDevice: boolean hasAnyWatcherTriggered()>
<com.android.systemui.statusbar.NotificationListener: void onNotificationRankingUpdate(android.service.notification.NotificationListenerService.RankingMap)>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: void onExpandingFinished()>
<com.android.systemui.qs.QSFragment: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.systemui.statusbar.phone.NotificationGroupManager: java.lang.String getGroupKey(android.service.notification.StatusBarNotification)>
<android.perftests.utils.Stats: long getPercentile90()>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: void addUnfocusedTaskOverride(com.android.systemui.shared.recents.model.Task,float)>
<com.android.settingslib.wifi.AccessPoint: boolean isOsuProvider()>
<com.android.systemui.classifier.Stroke: long getDurationNanos()>
<com.android.systemui.recents.views.TaskStackViewScroller: boolean boundScroll()>
<com.android.systemui.statusbar.phone.NotificationIconContainer: void setActualPaddingStart(float)>
<com.android.systemui.statusbar.phone.StatusBar: void showAssistDisclosure()>
<com.android.keyguard.KeyguardUpdateMonitor: boolean getUserHasTrust(int)>
<android.text.NonEditableTextGenerator: java.lang.CharSequence build()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setPasswordQuality(android.content.ComponentName,int,boolean)>
<com.android.systemui.recents.IRecentsNonSystemUserCallbacks: void splitPrimaryTask(int,int,android.graphics.Rect)>
<com.android.server.policy.WindowManagerPolicy: void registerDisplayFoldListener(android.view.IDisplayFoldListener)>
<com.android.keyguard.KeyguardHostView: void showPromptReason(int)>
<com.android.server.pm.PackageKeySetData: void addDefinedKeySet(long,java.lang.String)>
<com.android.systemui.statusbar.policy.RemoteInputView: void onClick(android.view.View)>
<com.android.systemui.plugins.qs.QSTile.Icon: android.graphics.drawable.Drawable getInvisibleDrawable(android.content.Context)>
<com.google.android.startop.iorap.ActivityInfo: boolean equals(java.lang.Object)>
<com.android.systemui.statusbar.policy.CallbackHandler: void setEmergencyCallsOnly(boolean)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void removeActiveAdmin(android.content.ComponentName,int)>
<android.multiuser.UserLifecycleTests: void createAndStartUser()>
<com.android.systemui.statusbar.FlingAnimationUtils: void <init>(android.content.Context,float,float)>
<com.android.server.pm.KeySetManagerService: void <init>(android.util.ArrayMap)>
<com.android.systemui.BatteryMeterView: void onDarkChanged(android.graphics.Rect,float,int)>
<com.android.settingslib.RestrictedSwitchPreference: void useAdminDisabledSummary(boolean)>
<com.android.gallery3d.exif.ExifInterface: boolean addGpsDateTimeStampTag(long)>
<com.android.systemui.statusbar.notification.row.RowInflaterTask: void abort()>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: void unpair()>
<com.android.server.infra.FrameworkResourcesServiceNameResolver: void setTemporaryService(int,java.lang.String,int)>
<com.android.server.pm.KeySetManagerService: boolean isIdValidKeySetId(long)>
<com.android.systemui.qs.customize.TileAdapter: void onTilesChanged(java.util.List)>
<com.android.systemui.qs.QSFooterImpl: void onAttachedToWindow()>
<com.android.systemui.plugins.FalsingManager: void onExpansionFromPulseStopped()>
<com.android.gallery3d.glrenderer.GLES20Canvas: void beginRenderTarget(com.android.gallery3d.glrenderer.RawTexture)>
<android.multiuser.BenchmarkRunner: java.util.ArrayList getAllDurations()>
<com.android.systemui.qs.QuickQSPanel: void onTuningChanged(java.lang.String,java.lang.String)>
<com.android.systemui.util.leak.LeakDetector: void trackInstance(java.lang.Object)>
<com.android.systemui.classifier.FalsingManagerImpl: void onNotificatonStartDraggingDown()>
<com.android.server.notification.ZenModeHelper: void initZenMode()>
<com.android.systemui.recents.views.AnimateableViewBounds: void setClipTop(int)>
<com.android.systemui.statusbar.StatusBarWifiView: void setDecorColor(int)>
<com.android.settingslib.RestrictedPreferenceHelper: void onAttachedToHierarchy()>
<com.android.systemui.statusbar.phone.NotificationGroupManager.NotificationGroup: java.lang.String toString()>
<com.android.systemui.bubbles.animation.PhysicsAnimationLayout: boolean canReceivePointerEvents()>
<com.android.systemui.statusbar.phone.LockIcon: void onShowingLaunchAffordanceChanged(boolean)>
<com.android.systemui.util.wakelock.KeepAwakeAnimationListener: void <init>(android.content.Context)>
<com.android.systemui.plugins.PluginEnablerImpl: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean isDozing()>
<com.android.statsd.loadtest.LoadtestActivity: void onDestroy()>
<com.android.systemui.statusbar.notification.row.NotificationGuts.GutsContent: boolean shouldBeSaved()>
<com.android.server.accounts.AccountManagerService.Lifecycle: void onStart()>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void closeRemoteInput()>
<com.android.server.notification.PreferencesHelper: android.content.pm.ParceledListSlice getNotificationChannels(java.lang.String,int,boolean)>
<com.android.server.media.MediaRouterService: void requestSetVolume(android.media.IMediaRouterClient,java.lang.String,int)>
<com.android.settingslib.core.instrumentation.SharedPreferencesLogger.EditorLogger: android.content.SharedPreferences.Editor putString(java.lang.String,java.lang.String)>
<com.android.server.usb.descriptors.Usb20ASFormatI: void report(com.android.server.usb.descriptors.report.ReportCanvas)>
<com.android.settingslib.applications.ServiceListing: void reload()>
<com.android.server.policy.PhoneWindowManager: void setDefaultDisplay(com.android.server.policy.WindowManagerPolicy.DisplayContentInfo)>
<com.android.systemui.statusbar.notification.NotificationInterruptionStateProvider: boolean canHeadsUpCommon(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.String getProfileOwnerName(int)>
<com.android.settingslib.CustomEditTextPreference: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.shared.recents.model.TaskKeyCache: java.lang.Object getCacheEntry(int)>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb: java.lang.Long getSnapshotVersion(int,int)>
<com.android.systemui.recents.views.TaskStackView: void onStackTaskRemoved(com.android.systemui.recents.model.TaskStack,com.android.systemui.shared.recents.model.Task,com.android.systemui.shared.recents.model.Task,com.android.systemui.recents.utilities.AnimationProps,boolean,boolean)>
<com.android.settingslib.core.lifecycle.Lifecycle: void onAttach(android.content.Context)>
<javax.microedition.khronos.opengles.GL10: void glMaterialfv(int,int,float[],int)>
<com.android.server.hdmi.HdmiControlService: com.android.server.hdmi.HdmiCecLocalDeviceTv tv()>
<com.android.systemui.pip.phone.PipAccessibilityInteractionConnection: void findAccessibilityNodeInfosByViewId(long,java.lang.String,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)>
<com.android.server.display.AmbientBrightnessStatsTracker: java.util.ArrayList getUserStats(int)>
<com.android.server.content.SyncOperation: void <init>(com.android.server.content.SyncStorageEngine.EndPoint,int,java.lang.String,int,int,android.os.Bundle,boolean,boolean,int,long,long,int)>
<com.android.settingslib.bluetooth.LocalBluetoothProfile: int getOrdinal()>
<com.android.printspooler.ui.PageAdapter: boolean isOpened()>
<com.android.server.ConnectivityService: void stopKeepalive(android.net.Network,int)>
<com.android.vpndialogs.ManageDialog: boolean handleMessage(android.os.Message)>
<com.android.settingslib.drawable.UserIconDrawable: void setFrameWidth(float)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean isAboveShelf()>
<com.android.settingslib.dream.DreamBackend: void setEnabled(boolean)>
<com.android.systemui.tuner.TunerServiceImpl: java.lang.String getValue(java.lang.String,java.lang.String)>
<com.android.systemui.SwipeHelper.Callback: boolean isAntiFalsingNeeded()>
<com.android.server.pm.PackageDexOptimizer: void <init>(com.android.server.pm.PackageDexOptimizer)>
<com.android.server.biometrics.iris.IrisService: boolean checkAppOps(int,java.lang.String)>
<android.net.util.KeepalivePacketDataUtil: android.net.NattKeepalivePacketDataParcelable toStableParcelable(android.net.NattKeepalivePacketData)>
<com.android.server.notification.NotificationDelegate: void onNotificationExpansionChanged(java.lang.String,boolean,boolean,int)>
<com.android.systemui.statusbar.policy.NextAlarmControllerImpl: void removeCallback(com.android.systemui.statusbar.policy.NextAlarmController.NextAlarmChangeCallback)>
<com.android.systemui.statusbar.phone.StatusBarSignalPolicy: void setMobileDataIndicators(com.android.systemui.statusbar.policy.NetworkController.IconState,com.android.systemui.statusbar.policy.NetworkController.IconState,int,int,boolean,boolean,java.lang.String,java.lang.String,boolean,int,boolean)>
<com.android.systemui.statusbar.notification.stack.NotificationListContainer: void notifyGroupChildAdded(com.android.systemui.statusbar.notification.row.ExpandableView)>
<com.android.gallery3d.common.BitmapUtils: int computeSampleSizeLarger(float)>
<javax.microedition.khronos.egl.EGLContext: javax.microedition.khronos.opengles.GL getGL()>
<com.android.gallery3d.exif.ExifInterface: int getComponentCountFromInfo(int)>
<com.android.server.notification.NotificationRecord: android.util.ArraySet getGrantableUris()>
<android.multiuser.BenchmarkResultsReporter: org.junit.runners.model.Statement apply(org.junit.runners.model.Statement,org.junit.runner.Description)>
<com.android.server.storage.DeviceStorageMonitorInternal: void checkMemory()>
<com.android.uiautomator.core.Configurator: long getScrollAcknowledgmentTimeout()>
<com.android.systemui.statusbar.HeadsUpStatusBarView: void onFinishInflate()>
<com.android.systemui.doze.DozeHost: void setAnimateScreenOff(boolean)>
<com.android.server.locksettings.SyntheticPasswordManager: com.android.internal.widget.VerifyCredentialResponse verifyFrpCredential(android.service.gatekeeper.IGateKeeperService,byte[],int,com.android.internal.widget.ICheckCredentialProgressCallback)>
<com.android.preload.actions.ScanPackageAction: void <init>(com.android.preload.ClientUtils,com.android.ddmlib.IDevice,com.android.preload.DumpTableModel)>
<com.android.server.notification.ScheduleConditionProvider: void dump(java.io.PrintWriter,com.android.server.notification.NotificationManagerService.DumpFilter)>
<com.android.settingslib.RestrictedLockUtilsInternal: com.android.settingslib.RestrictedLockUtils.EnforcedAdmin checkIfRemoteContactSearchDisallowed(android.content.Context,int)>
<com.android.server.accessibility.AccessibilityGestureDetector.Listener: boolean onDoubleTap(android.view.MotionEvent,int)>
<com.android.server.pm.UserManagerService: java.lang.String getSeedAccountType()>
<com.android.server.testing.shadows.ShadowSlog: int d(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void setContractedChild(android.view.View)>
<com.android.server.pm.permission.DefaultPermissionGrantPolicy: boolean wereDefaultPermissionsGrantedSinceBoot(int)>
<com.android.keyguard.KeyguardStatusView: boolean hasCustomClock()>
<com.android.systemui.tuner.PowerNotificationControlsFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: void startScanning(boolean)>
<com.android.systemui.doze.DozeLog: void traceKeyguard(boolean)>
<com.android.server.audio.RecordingActivityMonitor: void releaseRecorder(int)>
<com.android.server.pm.PackageInstallerService: void abandonSession(int)>
<com.android.server.usb.UsbHostManager: void setCurrentUserSettings(com.android.server.usb.UsbProfileGroupSettingsManager)>
<com.android.systemui.util.wakelock.SettableWakeLock: void setAcquired(boolean)>
<com.android.settingslib.suggestions.SuggestionControllerMixin: void onStop()>
<com.android.server.notification.PreferencesHelper: boolean areChannelsBypassingDnd()>
<com.android.server.firewall.FilterFactory: java.lang.String getTagName()>
<com.android.server.SensorNotificationService: void onSensorChanged(android.hardware.SensorEvent)>
<com.android.systemui.statusbar.notification.row.ExpandableOutlineView: boolean setBottomRoundness(float,boolean)>
<com.android.systemui.statusbar.phone.NotificationGroupAlertTransferHelper: void onStateChanged(int)>
<com.android.systemui.statusbar.car.CarBatteryController: void dispatchDemoCommand(java.lang.String,android.os.Bundle)>
<com.android.systemui.plugins.ClockPlugin: void setStyle(android.graphics.Paint.Style)>
<com.android.systemui.qs.tiles.WifiTile.WifiDetailAdapter: void onDetailItemDisconnect(com.android.systemui.qs.QSDetailItems.Item)>
<android.os.PackageManagerPerfTest: void testQueryIntentActivities()>
<com.android.systemui.plugins.FalsingManager: void dump(java.io.PrintWriter)>
<com.android.systemui.statusbar.notification.row.ExpandableView: int getMinHeight(boolean)>
<com.android.server.utils.ManagedApplicationService: boolean disconnectIfNotMatching(android.content.ComponentName,int)>
<com.android.systemui.recents.model.HighResThumbnailLoader: void onTaskDataUnloaded()>
<com.android.systemui.qs.QSPanel: void showEdit(android.view.View)>
<com.android.systemui.qs.customize.TileAdapter: int getItemCount()>
<com.android.systemui.biometrics.BiometricDialogImpl: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.settingslib.bluetooth.PbapServerProfile: boolean isProfileReady()>
<com.android.server.webkit.WebViewUpdateService: void prepareWebViewInSystemServer()>
<com.android.systemui.assist.ui.DisplayUtils: int getCornerRadiusTop(android.content.Context)>
<com.android.server.pm.Policy: boolean hasGlobalSeinfo()>
<com.android.settingslib.CustomDialogPreferenceCompat.CustomPreferenceDialogFragment: void onPrepareDialogBuilder(androidx.appcompat.app.AlertDialog.Builder)>
<com.android.server.content.SyncStorageEngine: void clearAllBackoffsLocked()>
<com.android.server.content.ContentService.Lifecycle: void <init>(android.content.Context)>
<com.android.server.webkit.SystemImpl: int getMultiProcessSetting(android.content.Context)>
<com.android.settingslib.bluetooth.BluetoothUtils: int getConnectionStateSummary(int)>
<com.android.server.firewall.FilterFactory: void <init>(java.lang.String)>
<com.android.systemui.statusbar.phone.KeyguardIndicationTextView: void switchIndication(java.lang.CharSequence)>
<com.android.server.voiceinteraction.VoiceInteractionSessionConnection.Callback: void onSessionShown(com.android.server.voiceinteraction.VoiceInteractionSessionConnection)>
<com.android.systemui.statusbar.phone.BarTransitions.BarBackgroundDrawable: void onBoundsChange(android.graphics.Rect)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void enforceCallerCanRequestDeviceIdAttestation(android.content.ComponentName,java.lang.String,int)>
<com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer: void updateHeaderForExpansion(boolean)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: boolean isConnectedA2dpDevice()>
<com.android.systemui.statusbar.phone.NavigationBarFragment: void onCreate(android.os.Bundle)>
<com.android.keyguard.EmergencyButton: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.server.firewall.IntentFirewall.AMSInterface: int checkComponentPermission(java.lang.String,int,int,int,boolean)>
<com.android.systemui.pip.tv.PipControlButtonView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.location.provider.ActivityRecognitionProviderWatcher: com.android.location.provider.ActivityRecognitionProvider getActivityRecognitionProvider()>
<com.android.systemui.shared.system.KeyguardManagerCompat: void <init>(android.content.Context)>
<com.android.systemui.statusbar.NotificationShelf: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)>
<com.android.systemui.statusbar.phone.StatusBarNotificationPresenter: boolean isDeviceInVrMode()>
<com.android.server.accessibility.AccessibilityGestureDetector.Listener: boolean onGestureStarted()>
<com.android.server.usb.descriptors.UsbConfigDescriptor: int getAttribs()>
<com.android.server.display.whitebalance.DisplayWhiteBalanceController: boolean setEnabled(boolean)>
<android.text.NonEditableTextGenerator: android.text.NonEditableTextGenerator setSequenceLength(int)>
<com.android.systemui.recents.utilities.Utilities: int clamp(int,int,int)>
<com.android.server.DeviceIdleController.LocalService: void setJobsActive(boolean)>
<com.android.settingslib.media.BluetoothMediaManager: void onServiceDisconnected()>
<com.android.systemui.plugins.ClockPlugin: java.lang.String getTitle()>
<com.android.systemui.util.Utils.DisableStateTracker: void onViewDetachedFromWindow(android.view.View)>
<com.android.systemui.statusbar.policy.SecurityController: java.lang.String getPrimaryVpnName()>
<com.android.systemui.classifier.brightline.TimeLimitedMotionEventBuffer: boolean add(android.view.MotionEvent)>
<com.android.uiautomator.core.UiScrollable: boolean flingBackward()>
<com.android.systemui.keyguard.KeyguardSliceProvider: boolean needsMediaLocked()>
<com.android.systemui.statusbar.phone.StatusIconContainer: void removeIgnoredSlot(java.lang.String)>
<com.android.commands.vr.Vr: void main(java.lang.String[])>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: void abortTask()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean getCrossProfileContactsSearchDisabled(android.content.ComponentName)>
<android.media.MediaPlayer2.TrackInfo: int getTrackType()>
<com.android.server.VibratorService: void onInputDeviceChanged(int)>
<com.android.systemui.qs.tiles.NfcTile: void handleUserSwitch(int)>
<javax.obex.PasswordAuthentication: byte[] getUserName()>
<com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer: void startAnimationToState(com.android.systemui.statusbar.notification.stack.AnimationProperties)>
<com.android.systemui.qs.SlashDrawable: void onBoundsChange(android.graphics.Rect)>
<com.android.server.usb.descriptors.Usb20ASFormatIIEx: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>
<com.android.server.content.ContentService: void cancelRequest(android.content.SyncRequest)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isMeteredDataDisabledPackageForUser(android.content.ComponentName,java.lang.String,int)>
<com.android.settingslib.drawer.DashboardCategory: void writeToParcel(android.os.Parcel,int)>
<com.android.settingslib.RestrictedPreference: boolean isDisabledByAdmin()>
<com.android.settingslib.utils.AsyncLoaderCompat: void <init>(android.content.Context)>
<com.android.server.notification.NotificationRecord: void setSnoozeCriteria(java.util.ArrayList)>
<com.android.settingslib.bluetooth.PanProfile: boolean isProfileReady()>
<com.android.server.biometrics.face.FaceConstants: int actionBiometricEnroll()>
<com.android.systemui.qs.QSContainerImpl: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.devicepolicy.DevicePolicyManagerService: long getRequiredStrongAuthTimeout(android.content.ComponentName,int,boolean)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setAmbientIndicationBottomPadding(int)>
<com.android.systemui.statusbar.phone.StatusBar: void animateCollapsePanels(int,boolean,boolean)>
<javax.microedition.khronos.opengles.GL10: void glNormalPointer(int,int,java.nio.Buffer)>
<com.android.server.usb.UsbDeviceManager: void updateUserRestrictions()>
<com.android.server.hdmi.HdmiControlService.DevicePollingCallback: void onPollingFinished(java.util.List)>
<com.android.server.statusbar.StatusBarManagerService: void showBiometricDialog(android.os.Bundle,android.hardware.biometrics.IBiometricServiceReceiverInternal,int,boolean,int)>
<com.android.systemui.recents.utilities.AnimationProps: com.android.systemui.recents.utilities.AnimationProps setInterpolator(int,android.view.animation.Interpolator)>
<com.android.systemui.shared.system.PackageManagerWrapper: com.android.systemui.shared.system.PackageManagerWrapper getInstance()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setUserIcon(android.content.ComponentName,android.graphics.Bitmap)>
<com.android.server.biometrics.ClientMonitor: android.content.Context getContext()>
<com.android.server.companion.CompanionDeviceManagerService: void binderDied()>
<com.android.wallpapercropper.WallpaperCropActivity.BitmapCropTask: void setNoCrop(boolean)>
<com.android.printservice.recommendation.plugin.hp.ServiceListener.Observer: void dataSetChanged()>
<com.android.settingslib.CustomDialogPreference: boolean isDialogOpen()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean showingAmbientPulsing()>
<com.android.server.location.LocationProviderProxy: void setRequest(com.android.internal.location.ProviderRequest,android.os.WorkSource)>
<com.android.server.pm.PackageManagerService: void waitForAppDataPrepared()>
<com.android.systemui.recents.utilities.Utilities: void scaleRectAboutCenter(android.graphics.RectF,float)>
<com.android.systemui.assist.ui.DefaultUiController: void logInvocationProgressMetrics(int,float,boolean)>
<com.android.settingslib.bluetooth.A2dpProfile: java.util.List getConnectedDevices()>
<com.android.systemui.assist.ui.PerimeterPathGuide: float getPerimeterPx()>
<com.android.server.notification.NotificationDelegate: void clearEffects()>
<com.android.commands.am.Am: void main(java.lang.String[])>
<com.android.settingslib.applications.StorageStatsSource.AppStorageStats: long getCacheBytes()>
<com.android.systemui.DependencyBinder: com.android.systemui.statusbar.policy.DeviceProvisionedController provideDeviceProvisionedController(com.android.systemui.statusbar.policy.DeviceProvisionedControllerImpl)>
<android.database.SQLiteDatabasePerfTest: void testInsert()>
<com.android.systemui.stackdivider.DividerView: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)>
<com.android.systemui.recents.RecentsImplementation: void dump(java.io.PrintWriter)>
<com.android.server.webkit.SystemImpl: void enableFallbackLogic(boolean)>
<com.android.systemui.statusbar.car.CarFacetButton: void setSelected(boolean,boolean)>
<com.android.systemui.statusbar.phone.PanelBar: void <init>(android.content.Context,android.util.AttributeSet)>
<com.google.android.startop.iorap.AppLaunchEvent.ActivityLaunchCancelled: java.lang.String toStringBody()>
<com.android.server.timezone.PackageManagerHelper: boolean isPrivilegedApp(java.lang.String)>
<javax.microedition.khronos.opengles.GL10: void glGenTextures(int,java.nio.IntBuffer)>
<com.android.server.trust.TrustArchive: void logAgentConnected(int,android.content.ComponentName)>
<com.android.systemui.statusbar.phone.StatusIconContainer: void onViewRemoved(android.view.View)>
<com.android.powermodel.component.GpsProfile.Builder: void setOnMa(float)>
<com.android.systemui.recents.views.TaskViewHeader: void onTaskDataLoaded()>
<android.net.netlink.StructNdMsg: boolean nudConnected()>
<com.android.systemui.recents.views.RecentsView: void onBusEvent(com.android.systemui.recents.events.ui.AllTaskViewsDismissedEvent)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: void setHasSentReply()>
<com.android.settingslib.bluetooth.MapClientProfile: boolean isAutoConnectable()>
<com.android.server.lights.Light: void setColor(int)>
<com.android.systemui.qs.tiles.CastTile: void handleSecondaryClick()>
<com.android.settingslib.applications.StorageStatsSource: com.android.settingslib.applications.StorageStatsSource.AppStorageStats getStatsForUid(java.lang.String,int)>
<com.android.server.input.InputManagerService: void setFocusedDisplay(int)>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationViewWrapper: int getMinLayoutHeight()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void dispatchDraw(android.graphics.Canvas)>
<com.android.server.usb.descriptors.UsbDeviceDescriptor: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>
<com.android.settingslib.applications.PermissionsSummaryHelper: void getPermissionSummary(android.content.Context,java.lang.String,com.android.settingslib.applications.PermissionsSummaryHelper.PermissionsResultCallback)>
<com.android.systemui.Dependency: java.lang.Object get(java.lang.Class)>
<com.android.server.usb.descriptors.Usb10ACMixerUnit: byte getNameID()>
<com.android.printservice.recommendation.util.MDNSUtils: java.lang.String getString(byte[])>
<com.android.systemui.statusbar.AlertingNotificationManager: boolean hasNotifications()>
<com.android.systemui.statusbar.RemoteInputController.Callback: void onRemoteInputActive(boolean)>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: void setAppName(java.lang.String)>
<com.android.systemui.qs.tiles.IntentTile: java.lang.CharSequence getTileLabel()>
<com.android.systemui.statusbar.phone.StatusBar: void onAmbientStateChanged(com.android.systemui.statusbar.notification.collection.NotificationEntry,boolean)>
<com.android.printspooler.model.RemotePrintDocument: boolean isUpdating()>
<com.android.server.pm.ShortcutBitmapSaver: void removeIcon(android.content.pm.ShortcutInfo)>
<com.android.systemui.util.leak.TrackedCollections: void track(java.util.Collection,java.lang.String)>
<com.android.server.pm.PackageManagerService: java.lang.String[] getPackagesForUid(int)>
<com.android.server.policy.WindowManagerPolicy.WindowManagerFuncs: int getCameraLensCoverState()>
<com.android.systemui.util.AsyncSensorManager: void destroyDirectChannelImpl(android.hardware.SensorDirectChannel)>
<javax.obex.ClientOperation: int getMaxPacketSize()>
<android.net.ip.IIpClientCallbacks: void onNewDhcpResults(android.net.DhcpResultsParcelable)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setEndUserSessionMessage(android.content.ComponentName,java.lang.CharSequence)>
<com.android.server.policy.WindowManagerPolicy.WindowState: android.graphics.Rect getContentFrameLw()>
<com.android.server.notification.RankingHandler: void requestReconsideration(com.android.server.notification.RankingReconsideration)>
<com.android.settingslib.core.AbstractPreferenceController: void setVisible(androidx.preference.PreferenceGroup,java.lang.String,boolean)>
<com.android.server.notification.NotificationManagerService.NotificationListeners: void notifyInterruptionFilterChanged(int)>
<com.android.systemui.recents.events.ui.DraggingInRecentsEvent: void <init>(float)>
<com.android.systemui.statusbar.phone.StatusBar: boolean hasActiveNotifications()>
<com.android.systemui.recents.misc.SystemServicesProxy: void startInPlaceAnimationOnFrontMostApplication(android.app.ActivityOptions)>
<com.android.settingslib.volume.Util: java.lang.String bitFieldToString(int,int[],java.lang.String[])>
<com.android.server.pm.dex.DynamicCodeLogger: void logDynamicCodeLoading(java.lang.String)>
<com.android.server.content.SyncOperation: void <init>(com.android.server.content.SyncOperation)>
<com.android.systemui.recents.misc.ReferenceCountedTrigger: void <init>(java.lang.Runnable,java.lang.Runnable,java.lang.Runnable)>
<com.android.systemui.classifier.brightline.BrightLineFalsingManager: void onTrackingStopped()>
<com.android.systemui.statusbar.phone.ReverseLinearLayout: void onFinishInflate()>
<com.android.server.usb.descriptors.UsbASFormat: int[] getChannelCounts()>
<com.android.server.biometrics.BiometricServiceBase.DaemonWrapper: int remove(int,int)>
<com.android.gallery3d.glrenderer.BasicTexture: void yield()>
<com.android.server.location.ContextHubService: int loadNanoApp(int,android.hardware.location.NanoApp)>
<com.android.printservice.recommendation.util.Preconditions: java.util.Collection checkCollectionElementsNotNull(java.util.Collection,java.lang.String)>
<com.android.systemui.statusbar.phone.StatusBar: boolean collapsePanel()>
<com.android.server.biometrics.BiometricUserState: void removeBiometric(int)>
<com.android.systemui.volume.ZenModePanel: void setCallback(com.android.systemui.volume.ZenModePanel.Callback)>
<com.android.systemui.fragments.ExtensionFragmentListener: void accept(com.android.systemui.plugins.FragmentBase)>
<com.android.systemui.SwipeHelper: boolean swipedFastEnough()>
<com.android.proxyhandler.ProxyServer: void setPort(int)>
<com.android.server.content.SyncStorageEngine: int getAuthorityCount()>
<com.android.systemui.qs.tiles.WifiTile: void setDetailListening(boolean)>
<com.android.server.notification.ZenModeHelper.RingerModeDelegate: int onSetRingerModeExternal(int,int,java.lang.String,int,android.media.VolumePolicy)>
<com.android.server.biometrics.LoggableMonitor: void logOnEnrolled(int,long,boolean)>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationCustomViewWrapper: void setVisible(boolean)>
<com.android.server.pm.Settings: void writeRuntimePermissionsForUserLPr(int,boolean)>
<com.android.systemui.ExpandHelper.Callback: boolean canChildBeExpanded(android.view.View)>
<com.android.systemui.shared.recents.model.IconLoader.DefaultIconLoader: android.graphics.drawable.Drawable getBadgedActivityIcon(android.content.pm.ActivityInfo,int,android.app.ActivityManager.TaskDescription)>
<android.perftests.utils.ManualBenchmarkState: void sendFullStatusReport(android.app.Instrumentation,java.lang.String)>
<com.android.systemui.statusbar.policy.AccessPointControllerImpl: void finalize()>
<com.android.systemui.recents.misc.ReferenceCountedTrigger: void addLastDecrementRunnable(java.lang.Runnable)>
<com.android.systemui.statusbar.phone.StatusBarIconControllerImpl: void <init>(android.content.Context)>
<com.android.systemui.media.RingtonePlayer: void start()>
<com.android.uiautomator.core.Tracer: void setOutputMode(com.android.uiautomator.core.Tracer.Mode)>
<com.android.keyguard.KeyguardSliceView.Row: void onMeasure(int,int)>
<com.android.server.locksettings.recoverablekeystore.PlatformKeyManager: void invalidatePlatformKey(int,int)>
<com.android.settingslib.net.ChartDataLoader: void onReset()>
<com.android.gallery3d.exif.ExifInterface: boolean addGpsTags(double,double)>
<com.android.server.locksettings.recoverablekeystore.storage.CleanupManager: void registerRecoveryAgent(int,int)>
<com.android.server.appbinding.AppBindingService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.pm.PreferredComponent: void <init>(com.android.server.pm.PreferredComponent.Callbacks,org.xmlpull.v1.XmlPullParser)>
<com.android.settingslib.dream.DreamBackend: void setActivatedOnDock(boolean)>
<android.widget.TextViewPrecomputedTextPerfTest: void testOnMeasure_RandomText()>
<com.android.commands.bu.Backup: void run(java.lang.String[])>
<com.android.uiautomator.core.UiScrollable: int getMaxSearchSwipes()>
<com.android.systemui.ScreenDecorations.DisplayCutoutView: void onAttachedToWindow()>
<com.android.server.usb.descriptors.UsbMSMidiOutputJack: void <init>(int,byte,byte,int)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void togglePanel()>
<com.android.server.adb.AdbService: void allowDebugging(boolean,java.lang.String)>
<com.android.server.timezone.ConfigHelper: boolean isTrackingEnabled()>
<com.android.systemui.qs.QSFragment: void <init>(com.android.systemui.statusbar.policy.RemoteInputQuickSettingsDisabler,com.android.systemui.util.InjectionInflationController,android.content.Context,com.android.systemui.qs.QSTileHost)>
<com.android.systemui.analytics.SensorLoggerSession: com.android.systemui.statusbar.phone.nano.TouchAnalyticsProto.Session toProto()>
<com.android.systemui.statusbar.policy.BatteryController: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.plugins.VolumeDialogController.Callbacks: void onScreenOff()>
<com.android.preload.ui.SwingUI: boolean isSingleThreaded()>
<com.android.server.pm.permission.PermissionManagerServiceInternal: boolean updatePermissionFlagsForAllApps(int,int,int,int,java.util.Collection,com.android.server.pm.permission.PermissionManagerServiceInternal.PermissionCallback)>
<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin.OnMenuEventListener: void onMenuClicked(android.view.View,int,int,com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin.MenuItem)>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationViewWrapper: boolean disallowSingleClick(float,float)>
<com.android.systemui.bubbles.BadgedImageView: void onDraw(android.graphics.Canvas)>
<com.android.server.usb.UsbService: boolean hasDevicePermission(android.hardware.usb.UsbDevice,java.lang.String)>
<com.android.systemui.volume.VolumeDialogControllerImpl: void scheduleTouchFeedback()>
<javax.microedition.khronos.opengles.GL10: void glAlphaFuncx(int,int)>
<com.android.uiautomator.core.UiAutomatorBridge: long getSystemLongPressTime()>
<javax.microedition.khronos.opengles.GL10: void glNormal3f(float,float,float)>
<com.android.settingslib.wifi.AccessPoint.AccessPointListener: void onLevelChanged(com.android.settingslib.wifi.AccessPoint)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setProfileName(android.content.ComponentName,java.lang.String)>
<com.android.preload.DumpData: java.lang.String getPackageName()>
<com.android.systemui.shared.system.TransactionCompat: com.android.systemui.shared.system.TransactionCompat hide(com.android.systemui.shared.system.SurfaceControlCompat)>
<com.android.server.notification.NotificationRecord: android.metrics.LogMaker getLogMaker()>
<com.android.server.inputmethod.InputMethodManagerInternal: java.util.List getInputMethodListAsUser(int)>
<com.android.systemui.classifier.FalsingManagerProxy: void onNotificationActive()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void onExpandedByGesture(boolean)>
<com.android.server.usb.UsbService: void getDeviceList(android.os.Bundle)>
<com.android.systemui.volume.VolumeDialogImpl: void showCaptionsTooltip()>
<com.android.powermodel.AppPower: java.util.Set getComponents()>
<com.android.keyguard.KeyguardSliceView.Row: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.statusbar.notification.ActionListTransformState: void transformViewFullyTo(com.android.systemui.statusbar.notification.TransformState,float)>
<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: void onTouchMove(float)>
<com.android.keyguard.KeyguardSecurityContainer: void verifyUnlock()>
<android.graphics.perftests.RenderNodePerfTest: void testStartEndDeepHierarchy()>
<com.android.gallery3d.exif.ExifTag: byte[] getValueAsBytes()>
<com.android.systemui.power.PowerUI: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.systemui.statusbar.notification.row.NotificationContentInflater.AsyncInflationTask: int getReInflateFlags()>
<com.android.server.AppStateTracker: boolean isRunAnyInBackgroundAppOpsAllowed(int,java.lang.String)>
<com.android.server.biometrics.LoggableMonitor: boolean isCryptoOperation()>
<com.android.systemui.qs.tiles.UserDetailItemView: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.server.locksettings.recoverablekeystore.certificate.CertUtils: void validateCertPath(java.security.cert.X509Certificate,java.security.cert.CertPath)>
<com.android.server.pm.PackageManagerService: android.content.pm.KeySet getSigningKeySet(java.lang.String)>
<com.android.settingslib.bluetooth.PbapServerProfile: int getSummaryResourceForDevice(android.bluetooth.BluetoothDevice)>
<com.android.systemui.pip.tv.PipManager: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.server.notification.NotificationManagerService: boolean isUidSystemOrPhone(int)>
<com.android.systemui.statusbar.notification.stack.NotificationSwipeHelper.NotificationCallback: void onDismiss()>
<com.android.systemui.statusbar.notification.row.NotificationBackgroundView: void drawableHotspotChanged(float,float)>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: boolean isSnapping()>
<com.android.server.slice.SliceProviderPermissions.SliceAuthority: void <init>(java.lang.String,com.android.server.slice.DirtyTracker)>
<android.net.netlink.RtNetlinkNeighborMessage: void pack(java.nio.ByteBuffer)>
<com.android.systemui.statusbar.phone.NavigationBarView: void onLayout(boolean,int,int,int,int)>
<com.android.server.locksettings.SyntheticPasswordManager: boolean hasEscrowData(int)>
<com.android.systemui.recents.model.HighResThumbnailLoader: void onIdleChanged(boolean)>
<com.android.statsd.loadtest.LoadtestActivity: void onNothingSelected(android.widget.AdapterView)>
<com.android.systemui.SystemUI: java.lang.Object getComponent(java.lang.Class)>
<com.android.systemui.statusbar.notification.MessagingLayoutTransformState: void recycle()>
<com.android.server.policy.PhoneWindowManager: int getMaxWallpaperLayer()>
<com.android.server.policy.PowerAction: boolean onLongPress()>
<com.android.server.policy.keyguard.KeyguardServiceDelegate.DrawnListener: void onDrawn()>
<com.android.systemui.recents.Recents: void onBootCompleted()>
<com.android.server.usb.descriptors.tree.UsbDescriptorsACInterfaceNode: void report(com.android.server.usb.descriptors.report.ReportCanvas)>
<com.android.keyguard.KeyguardHostView: boolean dismiss(int)>
<com.android.systemui.recents.RecentsActivity: void onBackPressed()>
<com.android.systemui.recents.views.lowram.TaskStackLowRamLayoutAlgorithm: void getBackOfStackTransform(com.android.systemui.recents.views.TaskViewTransform,com.android.systemui.recents.views.TaskStackLayoutAlgorithm)>
<com.android.server.devicepolicy.DevicePolicyManagerService.DevicePolicyData: void <init>(int)>
<com.android.systemui.statusbar.KeyguardIndicationController.BaseKeyguardCallback: void onBiometricHelp(int,java.lang.String,android.hardware.biometrics.BiometricSourceType)>
<com.android.systemui.classifier.brightline.BrightLineFalsingManager: void cleanup()>
<com.android.settingslib.graph.SignalDrawable: boolean onLevelChange(int)>
<com.android.systemui.statusbar.phone.DarkIconDispatcherImpl: com.android.systemui.statusbar.phone.LightBarTransitionsController getTransitionsController()>
<com.android.systemui.statusbar.phone.PanelView: void startExpandingFromPeek()>
<com.android.systemui.qs.QSPanel: void addDivider()>
<com.android.server.usb.descriptors.ByteStream: void <init>(byte[])>
<com.android.settingslib.bluetooth.PanProfile: int getProfileId()>
<com.android.systemui.tuner.ShortcutParser: java.util.List getShortcuts()>
<com.android.server.LockGuard: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.printspooler.model.PrintSpoolerService.PrintSpooler: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.pip.phone.PipMenuActivityController: void hideMenuWithoutResize()>
<com.android.systemui.qs.tiles.CastTile: android.content.Intent getLongClickIntent()>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: boolean isSecure()>
<com.android.systemui.statusbar.notification.row.ExpandableView: int getIntrinsicHeight()>
<lockedregioncodeinjection.LockTargetStateAnalysis: org.objectweb.asm.tree.analysis.BasicValue newValue(org.objectweb.asm.Type)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void setSize(int,int)>
<com.android.providers.settings.DeviceConfigService: void onShellCommand(java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ShellCallback,android.os.ResultReceiver)>
<com.android.settingslib.wifi.AccessPoint: java.lang.String toString()>
<com.android.systemui.statusbar.phone.NavigationBarView: com.android.systemui.statusbar.phone.ButtonDispatcher getAccessibilityButton()>
<com.android.settingslib.drawer.DashboardCategory: void sortTiles(java.lang.String)>
<com.android.systemui.recents.events.ui.dragndrop.DragDropTargetChangedEvent: void <init>(com.android.systemui.shared.recents.model.Task,com.android.systemui.recents.views.DropTarget)>
<com.android.server.ConnectivityService: com.android.internal.util.WakeupMessage makeWakeupMessage(android.content.Context,android.os.Handler,java.lang.String,int,java.lang.Object)>
<android.processor.view.inspector.InspectableClassModel.IntFlagEntry: java.lang.String getName()>
<com.android.systemui.plugins.PluginFragment: android.content.Context getContext()>
<com.android.settingslib.deviceinfo.AbstractBluetoothAddressPreferenceController: void updateConnectivity()>
<com.android.server.pm.dex.DexManager: com.android.server.pm.dex.DynamicCodeLogger getDynamicCodeLogger()>
<com.android.settingslib.applications.ServiceListing.Callback: void onServicesReloaded(java.util.List)>
<com.android.systemui.statusbar.policy.ZenModeController.Callback: void onConditionsChanged(android.service.notification.Condition[])>
<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: boolean onInterceptTouchEvent(android.view.View,android.view.MotionEvent)>
<com.android.systemui.volume.VolumeDialogControllerImpl: void setUserActivityListener(com.android.systemui.volume.VolumeDialogControllerImpl.UserActivityListener)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean isSummaryWithChildren()>
<com.android.printspooler.widget.PrintOptionsLayout: void onMeasure(int,int)>
<com.android.server.location.GnssLocationProvider: boolean isSupported()>
<com.android.systemui.qs.QSFragment: void setHeaderClickable(boolean)>
<com.android.settingslib.wifi.TestAccessPointBuilder: com.android.settingslib.wifi.TestAccessPointBuilder setScoredNetworkCache(java.util.ArrayList)>
<android.net.ip.IpClientManager: void <init>(android.net.ip.IIpClient)>
<com.android.server.pm.PackageManagerService: android.content.ComponentName getInstantAppResolverSettingsComponent()>
<com.android.server.locksettings.recoverablekeystore.RecoverableKeyStoreManager: java.lang.String getKey(java.lang.String)>
<com.android.systemui.colorextraction.SysuiColorExtractor: com.android.internal.colorextraction.ColorExtractor.GradientColors getColors(int,int)>
<com.android.keyguard.KeyguardUpdateMonitor: void onAuthInterruptDetected(boolean)>
<android.media.MediaPlayer2.TrackInfo: android.media.MediaFormat getFormat()>
<com.android.systemui.qs.TouchAnimator.ListenerAdapter: void onAnimationAtStart()>
<com.android.server.notification.ZenModeFiltering: boolean isCall(com.android.server.notification.NotificationRecord)>
<com.android.nfc_extras.NfcAdapterExtras: com.android.nfc_extras.NfcAdapterExtras get(android.nfc.NfcAdapter)>
<com.android.server.locksettings.recoverablekeystore.KeySyncTask: void run()>
<com.android.systemui.stackdivider.DividerView: void onLayout(boolean,int,int,int,int)>
<com.android.server.location.GnssGeofenceProviderTest: void removeGeofence_nativeRemoved()>
<com.android.server.updates.ConfigUpdateInstallReceiver: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.android.preload.Main: javax.swing.DefaultListModel getClientListModel()>
<com.android.systemui.bubbles.BadgedImageView: boolean isShowingDot()>
<com.android.server.notification.CountdownConditionProvider: void dump(java.io.PrintWriter,com.android.server.notification.NotificationManagerService.DumpFilter)>
<com.android.server.notification.PreferencesHelper: java.lang.String getNotificationDelegate(java.lang.String,int)>
<com.android.printspooler.ui.FusedPrintersProvider: void onLocationChanged(android.location.Location)>
<com.android.server.pm.ShortcutService.Lifecycle: void onUnlockUser(int)>
<com.android.systemui.statusbar.phone.PanelView: boolean onMiddleClicked()>
<com.android.server.pm.PackageInstallerSession: android.content.pm.PackageInstaller.SessionInfo generateInfoForCaller(boolean,int)>
<com.android.systemui.biometrics.DialogViewCallback: void onTryAgainPressed()>
<com.android.commands.svc.SystemServerCommand: java.lang.String longHelp()>
<com.android.settingslib.applications.ApplicationsState: com.android.settingslib.applications.ApplicationsState.Session newSession(com.android.settingslib.applications.ApplicationsState.Callbacks)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void applyRoundness()>
<com.android.server.policy.WindowManagerPolicy: void setSafeMode(boolean)>
<com.android.server.accessibility.MagnificationController: float getOffsetX(int)>
<javax.microedition.khronos.opengles.GL11: void glGetTexParameterxv(int,int,java.nio.IntBuffer)>
<com.android.server.inputmethod.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype getLastInputMethodSubtype()>
<com.android.server.hdmi.SelectRequestBuffer: void set(com.android.server.hdmi.SelectRequestBuffer.SelectRequest)>
<com.android.systemui.settings.ToggleSeekBar: void setAccessibilityLabel(java.lang.String)>
<com.android.systemui.bubbles.BubbleView: void setNotif(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<android.media.Session2Link: void onSessionCommand(android.media.Controller2Link,int,android.media.Session2Command,android.os.Bundle,android.os.ResultReceiver)>
<com.android.server.usb.descriptors.Usb10ACMixerUnit: void <init>(int,byte,byte,int)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: void connectProfile(com.android.settingslib.bluetooth.LocalBluetoothProfile)>
<com.android.systemui.statusbar.phone.StatusBar: void startActivity(android.content.Intent,boolean,android.os.Handler.Callback)>
<com.android.server.deviceidle.BluetoothConstraint: void <init>(android.content.Context,android.os.Handler,com.android.server.DeviceIdleController.LocalService)>
<com.android.systemui.statusbar.policy.SignalController: void notifyListeners(com.android.systemui.statusbar.policy.NetworkController.SignalCallback)>
<com.android.statsd.shelltools.testdrive.TestDrive: void main(java.lang.String[])>
<com.android.systemui.RegionInterceptingFrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.keyguard.KeyguardSliceView.Row: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.notification.row.ExpandableView: com.android.systemui.statusbar.notification.stack.ExpandableViewState createExpandableViewState()>
<com.android.systemui.statusbar.notification.collection.NotificationData: void add(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.settingslib.widget.FooterPreference: void onBindViewHolder(androidx.preference.PreferenceViewHolder)>
<com.android.server.pm.UserManagerService: boolean isDemoUser(int)>
<com.android.systemui.statusbar.phone.StatusBarIconList: java.lang.String getSlotName(int)>
<com.android.systemui.qs.tiles.CellularTile: void handleUpdateState(com.android.systemui.plugins.qs.QSTile.SignalState,java.lang.Object)>
<com.android.server.usb.UsbPortManager: android.hardware.usb.UsbPortStatus getPortStatus(java.lang.String)>
<com.android.packageinstaller.television.UninstallAppProgress: void setResultAndFinish()>
<com.android.server.media.MediaSessionRecord: boolean isActive()>
<com.android.server.content.SyncStorageEngine: boolean shouldGrantSyncAdaptersAccountAccess()>
<com.android.systemui.statusbar.notification.stack.AmbientState: boolean isFullyAwake()>
<com.android.server.vr.VrManagerInternal: void setPersistentVrModeEnabled(boolean)>
<com.android.systemui.recents.LegacyRecentsImpl: void onBusEvent(com.android.systemui.recents.events.component.ShowUserToastEvent)>
<android.media.MediaPlayer2Utils: boolean isOffloadedAudioPlaybackSupported(int,int,int)>
<com.android.server.policy.PhoneWindowManager: boolean performHapticFeedback(int,java.lang.String,int,boolean,java.lang.String)>
<com.android.systemui.tuner.TunerActivity: void onCreate(android.os.Bundle)>
<com.android.powermodel.PowerReport: double getTotalPowerMah()>
<com.android.settingslib.net.NetworkCycleChartData.Builder: com.android.settingslib.net.NetworkCycleChartData build()>
<com.android.server.pm.PackageKeySetData: long[] getUpgradeKeySets()>
<android.perftests.utils.Stats: double getMean()>
<com.android.server.security.VerityUtils.SetupResult: com.android.server.security.VerityUtils.SetupResult failed()>
<com.android.server.usb.UsbService: void grantDevicePermission(android.hardware.usb.UsbDevice,int)>
<com.android.systemui.statusbar.phone.StatusBar: void startKeyguard()>
<com.android.server.IpSecService.IResource: void invalidate()>
<com.android.gallery3d.glrenderer.GLCanvas: void drawRect(float,float,float,float,com.android.gallery3d.glrenderer.GLPaint)>
<com.android.printspooler.widget.PrintOptionsLayout: void setColumnCount(int)>
<com.android.systemui.qs.tileimpl.QSTileBaseView: com.android.systemui.plugins.qs.QSIconView getIcon()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onExpandingStarted()>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationHeaderViewWrapper: com.android.systemui.statusbar.notification.TransformState getCurrentState(int)>
<com.android.systemui.stackdivider.DividerView: void onAttachedToWindow()>
<com.android.server.ConnectivityService: android.net.NetworkQuotaInfo getActiveNetworkQuotaInfo()>
<com.android.server.usb.descriptors.UsbDescriptorParser: java.util.ArrayList getDescriptors(byte)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGenFramebuffersOES(int,int[],int)>
<com.android.server.notification.ZenLog: void traceDowntimeAutotrigger(java.lang.String)>
<com.android.server.locksettings.SyntheticPasswordManager: long createPasswordBasedSyntheticPassword(android.service.gatekeeper.IGateKeeperService,byte[],int,com.android.server.locksettings.SyntheticPasswordManager.AuthenticationToken,int,int)>
<com.android.server.webkit.SystemImpl: int onWebViewProviderChanged(android.content.pm.PackageInfo)>
<com.android.server.biometrics.iris.IrisService: java.lang.String getTag()>
<com.android.settingslib.RestrictedLockUtilsInternal: com.android.settingslib.RestrictedLockUtils.EnforcedAdmin checkIfApplicationIsSuspended(android.content.Context,java.lang.String,int)>
<com.android.printspooler.widget.PrintOptionsLayout: android.view.ViewGroup.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<com.android.systemui.qs.tiles.UserDetailItemView: com.android.systemui.qs.tiles.UserDetailItemView convertOrInflate(android.content.Context,android.view.View,android.view.ViewGroup)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setTranslation(float)>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: void setRippleAllowed(boolean)>
<com.android.server.locksettings.recoverablekeystore.WrappedKey: byte[] getKeyMetadata()>
<com.android.systemui.statusbar.car.CarFacetButton: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.settingslib.notification.EnableZenModeDialog: com.android.settingslib.notification.EnableZenModeDialog.ConditionTag getConditionTagAt(int)>
<com.android.systemui.DependencyBinder: com.android.systemui.power.PowerUI.WarningsUI provideWarningsUi(com.android.systemui.power.PowerNotificationWarnings)>
<com.android.server.signedconfig.SignatureVerifier: boolean verifySignature(java.lang.String,java.lang.String)>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: void update(com.android.systemui.recents.model.TaskStack,android.util.ArraySet,com.android.systemui.recents.RecentsActivityLaunchState,float)>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationDecoratedCustomViewWrapper: void onContentUpdated(com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<com.android.printspooler.ui.PrintActivity.PrintServiceApprovalDialog: void onStart()>
<com.android.server.pm.SharedUserSetting: int[] getNotInstalledUserIds()>
<com.android.statementservice.DirectStatementService: int onStartCommand(android.content.Intent,int,int)>
<com.android.systemui.recents.views.RecentsViewTouchHandler: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.android.systemui.qs.customize.QSCustomizer: void setContainer(com.android.systemui.statusbar.phone.NotificationsQuickSettingsContainer)>
<com.android.systemui.doze.DozeHost.PulseCallback: void onPulseFinished()>
<com.android.settingslib.wifi.AccessPointPreference: void refresh()>
<com.android.settingslib.bluetooth.HidProfile: int getNameResource(android.bluetooth.BluetoothDevice)>
<com.android.systemui.statusbar.notification.row.NotificationGuts.GutsContent: void setGutsParent(com.android.systemui.statusbar.notification.row.NotificationGuts)>
<com.android.systemui.statusbar.phone.NotificationPanelView: float getAffordanceFalsingFactor()>
<com.android.server.policy.PhoneWindowManager: void onDefaultDisplayFocusChangedLw(com.android.server.policy.WindowManagerPolicy.WindowState)>
<com.android.server.pm.PackageSettingBase: boolean isUpdateAvailable()>
<com.android.systemui.biometrics.BiometricDialogView: void updateIcon(int,int)>
<com.android.server.pm.permission.PermissionManagerServiceInternal: void grantRequestedRuntimePermissions(android.content.pm.PackageParser.Package,int[],java.lang.String[],int,com.android.server.pm.permission.PermissionManagerServiceInternal.PermissionCallback)>
<com.android.systemui.statusbar.phone.NotificationGroupManager: boolean isOnlyChildInGroup(android.service.notification.StatusBarNotification)>
<com.android.settingslib.deviceinfo.AbstractIpAddressPreferenceController: void <init>(android.content.Context,com.android.settingslib.core.lifecycle.Lifecycle)>
<com.android.photos.views.BlockingGLTextureView: void destroy()>
<com.android.systemui.statusbar.notification.stack.ViewState: boolean isAnimating(android.view.View)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean isBlockingHelperShowingAndTranslationFinished()>
<com.android.server.infra.AbstractMasterSystemService: void enforceCallingPermissionForManagement()>
<com.android.systemui.stackdivider.WindowManagerProxy: com.android.systemui.stackdivider.WindowManagerProxy getInstance()>
<com.android.keyguard.ViewMediatorCallback: void resetKeyguard()>
<com.android.server.pm.dex.ViewCompiler: void <init>(java.lang.Object,com.android.server.pm.Installer)>
<com.android.keyguard.KeyguardSecurityContainer: boolean needsInput()>
<com.android.server.Watchdog.Monitor: void monitor()>
<com.android.server.deviceidle.IDeviceIdleConstraint: void stopMonitoring()>
<com.android.server.hdmi.HdmiControlService: void onStandby(int)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void drawTexture(com.android.gallery3d.glrenderer.BasicTexture,int,int,int,int)>
<com.android.systemui.keyguard.KeyguardViewMediator: void onScreenTurningOn(com.android.internal.policy.IKeyguardDrawnCallback)>
<com.android.server.locksettings.recoverablekeystore.RecoverableKeyStoreManager: void removeKey(java.lang.String)>
<com.android.systemui.plugins.qs.QSTile: void clearState()>
<com.android.systemui.statusbar.KeyguardAffordanceView: void setImageScale(float,boolean)>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.ui.dragndrop.DragEndCancelledEvent)>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: boolean isUserTouching()>
<com.android.settingslib.fuelgauge.PowerWhitelistBackend: com.android.settingslib.fuelgauge.PowerWhitelistBackend getInstance(android.content.Context)>
<com.android.server.notification.ZenLog: void traceSetConsolidatedZenPolicy(android.app.NotificationManager.Policy,java.lang.String)>
<com.android.server.usb.descriptors.UsbACFeatureUnit: byte getSourceID()>
<com.android.server.usb.descriptors.Usb10ASFormatII: void <init>(int,byte,byte,byte,int)>
<com.android.uiautomator.core.ShellUiAutomatorBridge: void <init>(android.app.UiAutomation)>
<com.android.server.notification.PreferencesHelper: int getImportance(java.lang.String,int)>
<android.util.ArraySetPerfTest: void testRemoveIf_Large_Base()>
<com.android.printspooler.widget.PreviewPageFrame: java.lang.CharSequence getAccessibilityClassName()>
<com.android.server.LocationManagerService: java.util.List getTestProviderCurrentRequests(java.lang.String,java.lang.String)>
<com.android.systemui.volume.VolumeComponent: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.server.usb.descriptors.Usb10ASFormatI: void report(com.android.server.usb.descriptors.report.ReportCanvas)>
<com.android.systemui.statusbar.policy.KeyButtonDrawable: com.android.systemui.statusbar.policy.KeyButtonDrawable create(android.content.Context,android.content.Context,int,boolean,android.graphics.Color)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setBlockingHelperShowing(boolean)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setHeadsUpManager(com.android.systemui.statusbar.phone.HeadsUpManagerPhone)>
<com.android.server.biometrics.face.FaceService: void updateActiveGroup(int,java.lang.String)>
<com.android.settingslib.bluetooth.LocalBluetoothProfileManager: com.android.settingslib.bluetooth.MapClientProfile getMapClientProfile()>
<com.android.systemui.plugins.qs.QSTile: void click()>
<com.android.server.policy.WindowManagerPolicy: boolean performHapticFeedback(int,java.lang.String,int,boolean,java.lang.String)>
<com.android.systemui.tuner.PluginFragment: void onDestroy()>
<com.android.systemui.doze.DozePauser: void transitionTo(com.android.systemui.doze.DozeMachine.State,com.android.systemui.doze.DozeMachine.State)>
<com.android.printspooler.util.PageRangeUtils: boolean contains(android.print.PageRange[],android.print.PageRange[],int)>
<com.android.server.pm.UserManagerService: int getCredentialOwnerProfile(int)>
<com.android.server.ExtconUEventObserver.ExtconInfo: java.lang.String getName()>
<com.android.systemui.globalactions.ListGridLayout: void setReverseItems(boolean)>
<com.android.media.tv.remoteprovider.TvRemoteProvider: void clearInputBridge(android.os.IBinder)>
<com.android.systemui.qs.tiles.UserTile: android.content.Intent getLongClickIntent()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setHeadsUpAppearanceController(com.android.systemui.statusbar.phone.HeadsUpAppearanceController)>
<android.net.shared.InitialConfiguration: android.net.shared.InitialConfiguration copy(android.net.shared.InitialConfiguration)>
<com.android.systemui.egg.MLand: float getLastTimeStep()>
<com.android.server.statusbar.StatusBarManagerInternal: boolean showShutdownUi(boolean,java.lang.String)>
<com.android.server.location.AbstractLocationProvider: long getStatusUpdateTime()>
<com.android.carrierdefaultapp.CaptivePortalLoginActivity: void onDestroy()>
<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: void onSnapOpen()>
<com.android.server.pm.PackageManagerService: void setHomeActivity(android.content.ComponentName,int)>
<android.net.ip.IpClientCallbacks: void onProvisioningFailure(android.net.LinkProperties)>
<com.android.settingslib.net.NetworkCycleDataForUidLoader.Builder: com.android.settingslib.net.NetworkCycleDataForUidLoader.Builder setRetrieveDetail(boolean)>
<com.android.server.pm.Installer: void getAppSize(java.lang.String,java.lang.String[],int,int,int,long[],java.lang.String[],android.content.pm.PackageStats)>
<com.android.server.pm.dex.ArtManagerService: boolean isRuntimeProfilingEnabled(int,java.lang.String)>
<com.android.printspooler.ui.AddPrinterActivity: void onDestroy()>
<android.media.Session2Command.Result: void <init>(int,android.os.Bundle)>
<com.android.systemui.statusbar.notification.NotificationInterruptionStateProvider: void <init>(android.content.Context,android.os.PowerManager,android.service.dreams.IDreamManager,android.hardware.display.AmbientDisplayConfiguration)>
<com.android.server.DeviceIdleController.LocalService: void registerDeviceIdleConstraint(com.android.server.deviceidle.IDeviceIdleConstraint,java.lang.String,int)>
<com.android.server.biometrics.ClientMonitor: int getCookie()>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean isFullWidth()>
<com.android.systemui.bubbles.animation.ExpandedAnimationController: void collapseBackToStack(android.graphics.PointF,java.lang.Runnable)>
<com.android.systemui.statusbar.phone.StatusBarSignalPolicy.MobileIconState: boolean equals(java.lang.Object)>
<com.android.systemui.plugins.VolumeDialogController: void setRingerMode(int,boolean)>
<com.android.systemui.bubbles.animation.StackAnimationController: boolean isStackOnLeftSide()>
<com.android.companiondevicemanager.DeviceChooserActivity: void onCreate(android.os.Bundle)>
<com.android.server.pm.dex.DexManager: void notifyPackageInstalled(android.content.pm.PackageInfo,int)>
<com.android.server.timedetector.TimeDetectorStrategyCallbackImpl: void acquireWakeLock()>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationViewWrapper: int getBackgroundColor(android.view.View)>
<com.android.server.location.ComprehensiveCountryDetector: android.location.Country getNetworkBasedCountry()>
<javax.microedition.khronos.opengles.GL11: void glTexParameteriv(int,int,int[],int)>
<com.android.server.statusbar.StatusBarManagerService: void handleSystemKey(int)>
<com.android.server.ThreadPriorityBooster: void boost()>
<com.android.systemui.SwipeHelper: android.animation.Animator getViewTranslationAnimator(android.view.View,float,android.animation.ValueAnimator.AnimatorUpdateListener)>
<com.android.providers.settings.SettingsProvider: java.lang.String getType(android.net.Uri)>
<com.android.server.notification.NotificationRecord: int getUserSentiment()>
<com.android.systemui.statusbar.StatusBarIconView: boolean isDismissed()>
<com.android.server.locksettings.recoverablekeystore.storage.CleanupManager: com.android.server.locksettings.recoverablekeystore.storage.CleanupManager getInstance(android.content.Context,com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage,com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb,com.android.server.locksettings.recoverablekeystore.storage.ApplicationKeyStorage)>
<com.android.server.statusbar.StatusBarManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.statusbar.CommandQueue: void onProposedRotationChanged(int,boolean)>
<android.net.netlink.RtNetlinkNeighborMessage: android.net.netlink.StructNdaCacheInfo getCacheInfo()>
<com.android.systemui.qs.QSHost: void forceCollapsePanels()>
<com.android.server.notification.NotificationRecord: java.util.ArrayList getSystemGeneratedSmartActions()>
<com.android.server.devicepolicy.CryptoTestHelper: void runAndLogSelfTest()>
<com.android.systemui.stackdivider.DividerWindowManager: void setTouchable(boolean)>
<com.android.systemui.recents.RecentsImplProxy: void hideRecents(boolean,boolean)>
<com.android.server.hdmi.HdmiCecController.NativeWrapper: void nativeSetOption(long,int,boolean)>
<com.android.server.appop.AppOpsService: int checkPackage(int,java.lang.String)>
<com.android.server.pm.ShortcutService: int getMaxShortcutCountPerActivity(java.lang.String,int)>
<com.android.systemui.tuner.TunablePadding: void destroy()>
<com.android.systemui.qs.SecureSetting: void setListening(boolean)>
<com.android.mediadrm.signer.MediaDrmSigner.CertificateRequest: byte[] getData()>
<com.android.server.ConnectivityService: int reserveNetId()>
<com.android.systemui.statusbar.AmbientPulseManager: int getContentFlag()>
<com.android.uiautomator.core.UiScrollable: com.android.uiautomator.core.UiObject getChildByText(com.android.uiautomator.core.UiSelector,java.lang.String,boolean)>
<com.android.settingslib.core.lifecycle.ObservableActivity: boolean onPrepareOptionsMenu(android.view.Menu)>
<com.android.server.LocationManagerService: android.location.Location getLastLocation(android.location.LocationRequest,java.lang.String)>
<com.android.systemui.statusbar.StatusBarIconView: void setDecorColor(int)>
<com.android.systemui.statusbar.phone.NavigationBarView: void onPanelExpandedChange()>
<com.android.server.notification.ManagedServices.ManagedServiceInfo: java.lang.String toString()>
<com.android.keyguard.KeyguardSecurityContainer: boolean fitSystemWindows(android.graphics.Rect)>
<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: void onTouchStart()>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.google.android.startop.iorap.AppLaunchEvent.ActivityRecordProtoParcelable: byte[] create(android.os.Parcel)>
<com.android.systemui.statusbar.StatusBarMobileView: void applyMobileState(com.android.systemui.statusbar.phone.StatusBarSignalPolicy.MobileIconState)>
<com.android.systemui.stackdivider.DividerView: void stopDragging(int,com.android.internal.policy.DividerSnapAlgorithm.SnapTarget,long,android.view.animation.Interpolator)>
<android.media.MediaSession2.ControllerInfo: boolean isTrusted()>
<com.android.systemui.qs.QSPanel.QSTileLayout: void restoreInstanceState(android.os.Bundle)>
<com.android.server.usb.descriptors.Usb20ASFormatI: byte getSubSlotSize()>
<com.android.systemui.glwallpaper.EglHelper: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.biometrics.FaceDialogView: int getAuthenticatedAccessibilityResourceId()>
<android.text.CanvasDrawTextTest: void drawText_LongText_SmallWindow()>
<com.android.server.broadcastradio.hal2.AnnouncementAggregator: void <init>(android.hardware.radio.IAnnouncementListener)>
<com.android.systemui.recents.misc.SystemServicesProxy: void startActivityAsUserAsync(android.content.Intent,android.app.ActivityOptions)>
<javax.obex.Authenticator: byte[] onAuthenticationResponse(byte[])>
<com.android.server.content.ContentService: void notifyChange(android.net.Uri,android.database.IContentObserver,boolean,int,int,int,java.lang.String)>
<com.android.settingslib.bluetooth.A2dpProfile: int getConnectionStatus(android.bluetooth.BluetoothDevice)>
<com.android.settingslib.widget.AnimatedImageView: void setImageResource(int)>
<com.android.systemui.statusbar.phone.KeyguardBouncer: boolean isFullscreenBouncer()>
<com.android.carrierdefaultapp.CustomConfigLoader: java.util.List loadCarrierActionList(android.content.Context,android.content.Intent)>
<com.android.packageinstaller.television.UninstallAppProgressFragment: void showCompletion(java.lang.CharSequence)>
<com.android.systemui.shared.system.QuickStepContract: float getQuickStepTouchSlopPx(android.content.Context)>
<com.android.server.slice.SliceManagerService: java.lang.String getDefaultHome(int)>
<com.android.uiautomator.core.UiScrollable: boolean exists(com.android.uiautomator.core.UiSelector)>
<com.android.server.display.utils.Plog.SystemPlog: void emit(java.lang.String)>
<com.android.systemui.car.CarNotificationEntryManager: void <init>(android.content.Context)>
<com.android.server.slice.SliceClientPermissions: java.lang.String getFileName()>
<com.android.systemui.qs.QSFooter: void setListening(boolean)>
<com.android.server.notification.PreferencesHelper: void onUserSwitched(int)>
<com.android.systemui.statusbar.notification.NotificationAlertingManager: void <init>(com.android.systemui.statusbar.notification.NotificationEntryManager,com.android.systemui.statusbar.AmbientPulseManager,com.android.systemui.statusbar.NotificationRemoteInputManager,com.android.systemui.statusbar.notification.VisualStabilityManager,dagger.Lazy,com.android.systemui.statusbar.notification.NotificationInterruptionStateProvider,com.android.systemui.statusbar.NotificationListener)>
<com.android.settingslib.accounts.AuthenticatorHelper: int getLabelIdForType(java.lang.String)>
<com.android.server.pm.ShortcutService: void disableShortcuts(java.lang.String,java.util.List,java.lang.CharSequence,int,int)>
<com.android.server.locksettings.LockSettingsService: void requireStrongAuth(int,int)>
<android.media.DataSourceDesc.Builder: android.media.DataSourceDesc.Builder setEndPosition(long)>
<com.android.server.audio.AudioService: void unregisterAudioPolicy(android.media.audiopolicy.IAudioPolicyCallback)>
<com.android.systemui.plugins.NotificationListenerController: android.service.notification.NotificationListenerService.RankingMap getCurrentRanking(android.service.notification.NotificationListenerService.RankingMap)>
<com.android.systemui.pip.phone.PipMotionHelper: void dump(java.io.PrintWriter,java.lang.String)>
<com.android.systemui.shortcut.ShortcutKeyDispatcher: void start()>
<com.android.server.notification.NotificationRecord: boolean isNewEnoughForAlerting(long)>
<com.android.systemui.statusbar.notification.collection.NotificationData.KeyguardEnvironment: boolean isDeviceProvisioned()>
<com.android.server.accessibility.KeyEventDispatcher: void setOnKeyEventResult(com.android.server.accessibility.KeyEventDispatcher.KeyEventFilter,boolean,int)>
<com.android.statsd.loadtest.PerfDataRecorder: void <init>(boolean,int,com.android.internal.os.StatsdConfigProto.TimeUnit,long,int,boolean,boolean,boolean,boolean,boolean)>
<android.text.TextPerfUtils: java.lang.CharSequence nextRandomParagraph(int,int)>
<com.android.systemui.tuner.ShortcutPicker: void onDestroy()>
<com.android.systemui.plugins.qs.DetailAdapter: void setToggleState(boolean)>
<com.android.server.contentcapture.ContentCaptureManagerService: boolean isDisabledLocked(int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onHeadsUpPinnedModeChanged(boolean)>
<com.android.server.location.ContextHubClientBroker: void close()>
<com.android.systemui.statusbar.StatusBarMobileView: void setDecorColor(int)>
<com.android.gallery3d.exif.ExifTag: void getBytes(byte[])>
<com.android.systemui.statusbar.notification.row.NotificationContentView: java.lang.CharSequence getActiveRemoteInputText()>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: com.android.systemui.recents.views.TaskViewTransform getBackOfStackTransform()>
<com.android.systemui.classifier.brightline.BrightLineFalsingManager: void onSucccessfulUnlock()>
<com.android.server.vr.VrManagerService: void onSwitchUser(int)>
<com.android.server.utils.AppInstallerUtil: android.content.Intent createIntent(android.content.Context,java.lang.String,java.lang.String)>
<com.android.server.notification.ManagedServices: com.android.server.notification.ManagedServices.Config getConfig()>
<com.android.systemui.Dependency: void initDependencies(android.content.Context)>
<com.android.systemui.statusbar.notification.FakeShadowView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.server.signedconfig.SignatureVerifier: void <init>(com.android.server.signedconfig.SignedConfigEvent)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setTrustAgentConfiguration(android.content.ComponentName,android.content.ComponentName,android.os.PersistableBundle,boolean)>
<com.android.systemui.statusbar.notification.NotificationEntryListener: void onBeforeNotificationAdded(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.systemui.dock.DockManager.DockEventListener: void onEvent(int)>
<com.android.settingslib.notification.EnableZenModeDialog: void bind(android.service.notification.Condition,android.view.View,int)>
<com.android.systemui.tuner.TunerZenModePanel: void setCallback(com.android.systemui.volume.ZenModePanel.Callback)>
<com.android.server.policy.BurnInProtectionHelper: void onDisplayChanged(int)>
<com.android.server.contentcapture.ContentCaptureMetricsLogger: void writeSessionFlush(int,android.content.ComponentName,android.content.ComponentName,android.service.contentcapture.FlushMetrics,android.content.ContentCaptureOptions,int)>
<com.android.systemui.classifier.FalsingManagerProxy: void onCameraOn()>
<com.android.server.appprediction.AppPredictionPerUserService: void <init>(com.android.server.appprediction.AppPredictionManagerService,java.lang.Object,int)>
<com.android.preload.classdataretrieval.hprof.Hprof: java.io.File doHprof(com.android.ddmlib.Client,int)>
<com.android.systemui.qs.tiles.UserDetailView: void createAndSetAdapter(com.android.systemui.statusbar.policy.UserSwitcherController)>
<com.android.settingslib.deviceinfo.AbstractIpAddressPreferenceController: java.lang.String getPreferenceKey()>
<com.android.server.notification.NotificationRecord: void setContactAffinity(float)>
<com.android.systemui.assist.AssistManager: void startAssist(android.os.Bundle)>
<com.android.settingslib.core.lifecycle.ObservableDialogFragment: void onStop()>
<com.android.systemui.bubbles.BubbleController: void onUiModeChanged()>
<com.android.server.NetworkManagementService: boolean isBandwidthControlEnabled()>
<com.android.uiautomator.core.UiObject: boolean longClickBottomRight()>
<com.android.systemui.DependencyProvider: com.android.systemui.shared.plugins.PluginManager providePluginManager(android.content.Context)>
<com.android.nfc_extras.NfcAdapterExtras.CardEmulationRoute: void <init>(int,com.android.nfc_extras.NfcExecutionEnvironment)>
<com.android.uiautomator.core.UiObject: boolean waitUntilGone(long)>
<com.android.systemui.statusbar.phone.StatusBar: void animateExpandSettingsPanel(java.lang.String)>
<com.android.settingslib.bluetooth.BluetoothEventManager.Handler: void onReceive(android.content.Context,android.content.Intent,android.bluetooth.BluetoothDevice)>
<com.android.systemui.qs.tileimpl.QSIconViewImpl: int getIconMeasureMode()>
<com.android.systemui.qs.tiles.CellularTile: int getMetricsCategory()>
<com.android.server.signedconfig.SignedConfigService: void <init>(android.content.Context)>
<com.android.settingslib.fuelgauge.PowerWhitelistBackend: boolean isSysWhitelistedExceptIdle(java.lang.String)>
<com.android.systemui.plugins.FalsingManager: void setShowingAod(boolean)>
<com.android.systemui.statusbar.notification.row.ExpandableOutlineView: boolean isClippingNeeded()>
<com.android.systemui.qs.QSDetail.Callback: void onShowingDetail(com.android.systemui.plugins.qs.DetailAdapter,int,int)>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: java.lang.String getConnectedDeviceName()>
<com.android.systemui.qs.QSFooter: void setVisibility(int)>
<com.android.systemui.statusbar.phone.RotationButton: android.view.View getCurrentView()>
<com.android.uiautomator.core.UiAutomationShellWrapper: void connect()>
<com.android.systemui.statusbar.phone.EdgeBackGestureHandler: void <init>(android.content.Context,com.android.systemui.recents.OverviewProxyService)>
<com.android.systemui.pip.phone.PipTouchState: void reset()>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean hasCustomClock()>
<com.android.systemui.tuner.BatteryPreference: boolean persistString(java.lang.String)>
<android.graphics.perftests.RenderNodePerfTest: void testCreateRenderNodeNoName()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void generateAddAnimation(com.android.systemui.statusbar.notification.row.ExpandableView,boolean)>
<com.android.server.locksettings.recoverablekeystore.TestOnlyInsecureCertificateHelper: boolean isTestOnlyCertificateAlias(java.lang.String)>
<com.android.settingslib.drawable.CircleFramedDrawable: int getIntrinsicWidth()>
<com.android.server.uri.UriGrantsManagerService: void grantUriPermissionFromOwner(android.os.IBinder,int,java.lang.String,android.net.Uri,int,int,int)>
<com.android.server.notification.ManagedServices: void onSettingRestored(java.lang.String,java.lang.String,int,int)>
<com.android.systemui.statusbar.notification.row.NotificationInfo: boolean isAnimating()>
<com.android.systemui.pip.phone.ForegroundThread: android.os.Handler getHandler()>
<com.android.gallery3d.exif.ExifInterface: int getTagDefinitionForTag(short,short,int,int)>
<com.android.systemui.volume.CarVolumeDialogImpl: void init(int,android.graphics.drawable.Drawable.Callback)>
<com.android.systemui.Dependency: void destroy(java.lang.Class,java.util.function.Consumer)>
<com.android.systemui.statusbar.phone.SystemUIDialog: void setNeutralButton(int,android.content.DialogInterface.OnClickListener)>
<com.android.systemui.globalactions.GlobalActionsLayout: void onUpdateList()>
<com.android.server.location.GnssNavigationMessageProvider: boolean isAvailableInPlatform()>
<com.android.server.testing.shadows.ShadowKeyValueBackupTask: com.android.server.testing.shadows.ShadowKeyValueBackupTask getLastCreated()>
<com.android.systemui.statusbar.phone.StatusBar: void onStateChanged(int)>
<com.android.systemui.bubbles.animation.PhysicsAnimationLayout: void setEndActionForProperty(java.lang.Runnable,androidx.dynamicanimation.animation.DynamicAnimation.ViewProperty)>
<com.android.server.ConnectivityService: java.lang.String[] getTetheredIfaces()>
<com.android.settingslib.development.SystemPropPoker: void blockPokes()>
<com.android.systemui.statusbar.BackDropView: void setOnVisibilityChangedRunnable(java.lang.Runnable)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setMaximumFailedPasswordsForWipe(android.content.ComponentName,int,boolean)>
<com.android.systemui.glwallpaper.GLWallpaperRenderer: void updateOffsets(float,float)>
<com.android.systemui.statusbar.phone.KeyguardBouncer: boolean shouldDismissOnMenuPressed()>
<android.perftests.SystemPerfTest: void testNanoTimePerf()>
<com.android.server.biometrics.face.FaceUtils: void addBiometricForUser(android.content.Context,int,android.hardware.biometrics.BiometricAuthenticator.Identifier)>
<com.android.settingslib.CustomEditTextPreferenceCompat: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.systemui.classifier.brightline.TimeLimitedMotionEventBuffer: int size()>
<com.android.systemui.tuner.TunerZenModePanel: void setZenState(int)>
<com.android.server.autofill.AutofillManagerServiceShellCommand: int onCommand(java.lang.String)>
<com.android.server.LocationManagerService: void requestLocationUpdates(android.location.LocationRequest,android.location.ILocationListener,android.app.PendingIntent,java.lang.String)>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationHeaderViewWrapper: void transformFrom(com.android.systemui.statusbar.TransformableView)>
<com.android.systemui.qs.tiles.CastTile: void handleLongClick()>
<com.android.bluetoothmidiservice.MidiBtleTimeTracker: long convertTimestampToNanotime(int,long)>
<com.android.settingslib.wifi.AccessPoint: boolean isCarrierAp()>
<com.android.systemui.recents.views.grid.TaskGridLayoutAlgorithm: void reloadOnConfigurationChange(android.content.Context)>
<com.android.systemui.statusbar.phone.StatusBarWindowView: android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode.Callback,int)>
<com.android.settingslib.core.lifecycle.ObservablePreferenceFragment: void onPrepareOptionsMenu(android.view.Menu)>
<com.android.settingslib.deviceinfo.StorageVolumeProvider: java.util.List getVolumes()>
<com.android.server.pm.ShortcutNonPersistentUser: void <init>(com.android.server.pm.ShortcutService,int)>
<com.android.systemui.qs.QuickStatusBarHeader: void setupHost(com.android.systemui.qs.QSTileHost)>
<com.android.systemui.statusbar.phone.KeyguardStatusBarView: void setKeyguardUserSwitcherShowing(boolean,boolean)>
<com.android.systemui.qs.tileimpl.QSTileImpl: java.lang.String getTileSpec()>
<com.android.server.LocationManagerService: boolean geocoderIsPresent()>
<com.android.server.pm.PackageInstallerService: android.util.ArraySet newArraySet(java.lang.Object[])>
<com.android.systemui.bubbles.animation.StackAnimationController: void springStack(float,float)>
<com.android.server.ConnectivityService: void setAirplaneMode(boolean)>
<com.android.systemui.shortcut.ShortcutKeyDispatcher: void onShortcutKeyPressed(long)>
<com.android.systemui.doze.DozeFactory: com.android.systemui.doze.DozeMachine assembleMachine(com.android.systemui.doze.DozeService)>
<com.android.systemui.statusbar.policy.Clock: void disable(int,int,int,boolean)>
<com.android.settingslib.deviceinfo.AbstractSimStatusImeiInfoPreferenceController: boolean isAvailable()>
<com.android.uiautomator.core.UiAutomationShellWrapper: android.app.UiAutomation getUiAutomation()>
<com.android.server.policy.GlobalActionsProvider: boolean isGlobalActionsDisabled()>
<com.android.server.usb.descriptors.UsbDeviceDescriptor: byte getNumConfigs()>
<com.android.systemui.MultiListLayout: void rotate(int,int)>
<com.android.systemui.tuner.TunerServiceImpl: void removeTunable(com.android.systemui.tuner.TunerService.Tunable)>
<android.net.netlink.StructNlMsgHdr: java.lang.String stringForNlMsgFlags(short)>
<android.net.ipmemorystore.NetworkAttributes: android.net.ipmemorystore.NetworkAttributesParcelable toParcelable()>
<com.android.commands.appwidget.AppWidget: void main(java.lang.String[])>
<com.android.systemui.util.leak.DumpTruck: android.content.Intent createShareIntent()>
<com.android.systemui.qs.tiles.CastTile: java.lang.CharSequence getTileLabel()>
<com.android.server.NetworkManagementService: void removeInterfaceQuota(java.lang.String)>
<com.android.server.policy.WindowManagerPolicy.WindowManagerFuncs: com.android.server.policy.WindowManagerPolicy.InputConsumer createInputConsumer(android.os.Looper,java.lang.String,android.view.InputEventReceiver.Factory,int)>
<com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper: boolean swipedFarEnough(float,float)>
<com.android.systemui.statusbar.phone.PhoneStatusBarTransitions: android.animation.ObjectAnimator animateTransitionTo(android.view.View,float)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int stopUser(android.content.ComponentName,android.os.UserHandle)>
<com.android.server.pm.PackageSender: void notifyPackageAdded(java.lang.String,int)>
<com.android.server.NetworkScorerAppManager.SettingsFacade: boolean putString(android.content.Context,java.lang.String,java.lang.String)>
<com.android.media.remotedisplay.RemoteDisplay: int getStatus()>
<com.android.wallpapercropper.WallpaperCropActivity: int getRotationFromExif(android.content.res.Resources,int)>
<android.net.ip.IIpClientCallbacks: void onQuit()>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void reInflateViews()>
<com.android.systemui.shared.system.ActivityManagerWrapper: java.lang.String getBadgedActivityLabel(android.content.pm.ActivityInfo,int)>
<com.android.server.notification.ManagedServices.UserProfiles: void updateCache(android.content.Context)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: void notifyFullScreenIntentLaunched()>
<com.android.server.display.whitebalance.DisplayWhiteBalanceController: void onAmbientBrightnessChanged(float)>
<com.android.statsd.loadtest.LoadtestActivity.PusherAlarmReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.android.systemui.ForegroundServicesDialog: void onStop()>
<com.android.server.SensorNotificationService: void onLocationChanged(android.location.Location)>
<com.android.systemui.statusbar.notification.ImageTransformState: void disappear(float,com.android.systemui.statusbar.TransformableView)>
<com.android.systemui.biometrics.FaceDialogView: void onSaveState(android.os.Bundle)>
<com.android.settingslib.applications.ApplicationsState.AppEntry: java.lang.String getNormalizedLabel()>
<com.android.systemui.statusbar.notification.row.ExpandableView: void getBoundsOnScreen(android.graphics.Rect,boolean)>
<com.android.media.remotedisplay.RemoteDisplay: int getVolumeMax()>
<com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer: void updateGroupOverflow()>
<com.android.systemui.statusbar.phone.StatusBar: boolean isKeyguardSecure()>
<com.android.systemui.statusbar.KeyboardShortcutKeysLayout: void <init>(android.content.Context)>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: android.graphics.Rect getStackActionButtonRect()>
<android.os.StrictModeTest: void timeVmViolation()>
<com.android.server.pm.permission.PermissionsState: boolean updatePermissionFlags(com.android.server.pm.permission.BasePermission,int,int,int)>
<com.android.settingslib.drawer.Tile: void overrideSummary(java.lang.CharSequence)>
<com.android.server.pm.PackageManagerService: java.lang.String[] getNamesForUids(int[])>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean removeOverrideApn(android.content.ComponentName,int)>
<com.android.server.LooperStatsService.Lifecycle: void onStart()>
<com.android.media.remotedisplay.RemoteDisplayProvider: java.util.Collection getDisplays()>
<android.graphics.perftests.VectorDrawablePerfTest: void testBitmapDrawPerf()>
<com.android.settingslib.wifi.TestAccessPointBuilder: com.android.settingslib.wifi.TestAccessPointBuilder setIsCarrierAp(boolean)>
<com.android.systemui.shared.recents.model.IconLoader.DefaultIconLoader: android.graphics.drawable.Drawable createBadgedDrawable(android.graphics.drawable.Drawable,int,android.app.ActivityManager.TaskDescription)>
<com.android.systemui.charging.WirelessChargingLayout: void <init>(android.content.Context)>
<com.android.settingslib.bluetooth.HearingAidProfile: int getOrdinal()>
<com.android.server.pm.ShortcutService.Lifecycle: void onStopUser(int)>
<com.android.settingslib.net.NetworkCycleDataForUid: long getForegroudUsage()>
<com.android.server.DynamicSystemService: boolean write(byte[])>
<com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer: void setClipBottomAmount(int)>
<com.android.settingslib.drawable.UserIconDrawable: void onBoundsChange(android.graphics.Rect)>
<com.android.server.audio.AudioService: boolean isCameraSoundForced()>
<com.android.server.autofill.ui.AutoFillUI.AutoFillUiCallback: void startIntentSender(android.content.IntentSender)>
<com.android.server.audio.AudioService.VolumeController: void setController(android.media.IVolumeController)>
<com.android.server.testing.shadows.ShadowBinder: long clearCallingIdentity()>
<com.android.systemui.statusbar.policy.SecurityControllerImpl: boolean isDeviceManaged()>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb: byte[] getServerParams(int,int)>
<com.android.server.Watchdog.HandlerChecker: void resumeLocked(java.lang.String)>
<com.android.systemui.shared.system.ActivityManagerWrapper: void cancelWindowTransition(int)>
<com.android.server.content.ContentService: boolean isSyncActive(android.accounts.Account,java.lang.String,android.content.ComponentName)>
<com.android.printspooler.ui.FusedPrintersProvider: void onStartLoading()>
<com.android.systemui.shared.plugins.PluginManagerImpl: com.android.systemui.plugins.Plugin getOneShotPlugin(java.lang.Class)>
<com.android.gallery3d.glrenderer.GLCanvas: com.android.gallery3d.glrenderer.GLId getGLId()>
<com.android.settingslib.notification.ZenDurationDialog: com.android.settingslib.notification.ZenDurationDialog.ConditionTag getConditionTagAt(int)>
<com.android.systemui.statusbar.StatusBarMobileView: java.lang.String toString()>
<com.android.keyguard.KeyguardSecurityContainer: com.android.keyguard.KeyguardSecurityCallback getCallback()>
<com.android.systemui.stackdivider.WindowManagerProxy: void setTouchRegion(android.graphics.Rect)>
<com.android.server.pm.Installer: void clearAppProfiles(java.lang.String,java.lang.String)>
<com.android.settingslib.CustomDialogPreference: void onClick(android.content.DialogInterface,int)>
<com.android.server.textservices.TextServicesManagerService: void getSpellCheckerService(int,java.lang.String,java.lang.String,com.android.internal.textservice.ITextServicesSessionListener,com.android.internal.textservice.ISpellCheckerSessionListener,android.os.Bundle)>
<com.android.systemui.statusbar.policy.SecurityControllerImpl: java.lang.String getProfileOwnerName()>
<com.android.systemui.Gefingerpoken: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: android.view.View getHostView()>
<com.android.server.policy.role.LegacyRoleResolutionPolicy: void <init>(android.content.Context)>
<com.android.systemui.settings.BrightnessController: void <init>(android.content.Context,com.android.systemui.settings.ToggleSlider)>
<com.android.gallery3d.common.BitmapUtils: boolean isSupportedByRegionDecoder(java.lang.String)>
<com.android.server.ConnectivityService: boolean queryUserAccess(int,int)>
<com.android.keyguard.KeyguardSecurityContainer: boolean shouldDelayChildPressedState()>
<com.android.server.appprediction.AppPredictionPerUserService: void registerPredictionUpdatesLocked(android.app.prediction.AppPredictionSessionId,android.app.prediction.IPredictionCallback)>
<com.android.server.audio.AudioService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.appops.AppOpsController: void removeCallback(int[],com.android.systemui.appops.AppOpsController.Callback)>
<com.android.server.notification.NotificationDelegate: void onNotificationDirectReplied(java.lang.String)>
<com.android.systemui.statusbar.policy.CallbackController: java.lang.Object observe(androidx.lifecycle.Lifecycle,java.lang.Object)>
<com.android.systemui.keyguard.KeyguardViewMediator: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.biometrics.BiometricService: void <init>(android.content.Context)>
<com.android.systemui.statusbar.policy.CallbackHandler: void setSubs(java.util.List)>
<com.android.systemui.statusbar.phone.NotificationGroupAlertTransferHelper: void onDozingChanged(boolean)>
<com.android.systemui.statusbar.StatusBarMobileView: void getDrawingRect(android.graphics.Rect)>
<com.android.systemui.qs.PagedTileLayout.TilePage: int maxTiles()>
<com.android.server.accounts.AccountManagerService: void copyAccountToUser(android.accounts.IAccountManagerResponse,android.accounts.Account,int,int)>
<com.android.systemui.util.leak.TrackedCollections: void dump(java.io.PrintWriter,java.util.function.Predicate)>
<com.android.systemui.pip.tv.PipManager.Listener: void onShowPipMenu()>
<com.android.systemui.shared.plugins.PluginInitializer: java.lang.String[] getWhitelistedPlugins(android.content.Context)>
<com.android.systemui.qs.external.TileLifecycleManager: void onUnlockComplete()>
<com.android.settingslib.drawer.Tile: void setCategory(java.lang.String)>
<com.android.systemui.qs.PagedTileLayout: void onMeasure(int,int)>
<com.android.server.pm.InstructionSets: java.util.List getAllInstructionSets()>
<com.android.systemui.recents.views.TaskViewHeader: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.systemui.bubbles.animation.PhysicsAnimationLayout.PhysicsPropertyAnimator: com.android.systemui.bubbles.animation.PhysicsAnimationLayout.PhysicsPropertyAnimator translationX(float,float,java.lang.Runnable[])>
<com.android.systemui.bubbles.animation.PhysicsAnimationLayout: boolean isFirstChildXLeftOfCenter(float)>
<com.android.systemui.statusbar.phone.StatusBarWindowController: void setForcePluginOpen(boolean)>
<com.android.server.infra.AbstractMasterSystemService: com.android.server.infra.AbstractPerUserSystemService removeCachedServiceLocked(int)>
<com.android.systemui.qs.external.QSTileServiceWrapper: boolean onStopListening()>
<com.android.server.content.ContentService.Lifecycle: void onStopUser(int)>
<com.android.systemui.classifier.brightline.TimeLimitedMotionEventBuffer: boolean removeAll(java.util.Collection)>
<com.android.server.webkit.SystemImpl: android.webkit.WebViewProviderInfo[] getWebViewPackages()>
<com.android.gallery3d.exif.ExifInterface: void resetTagDefinitions()>
<javax.obex.ObexTransport: java.io.DataInputStream openDataInputStream()>
<com.android.server.devicepolicy.DevicePolicyCacheImpl: void setScreenCaptureDisabled(int,boolean)>
<com.android.systemui.qs.NonInterceptingScrollView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.pm.PackageManagerService: void setSystemAppHiddenUntilInstalled(java.lang.String,boolean)>
<com.android.systemui.statusbar.policy.ZenModeControllerImpl: void updateConsolidatedNotificationPolicy()>
<com.android.systemui.recents.views.TaskStackView: boolean performAccessibilityAction(int,android.os.Bundle)>
<android.net.ip.IIpClient: void addKeepalivePacketFilter(int,android.net.TcpKeepalivePacketDataParcelable)>
<com.android.settingslib.core.lifecycle.ObservableFragment: void onPause()>
<com.android.gallery3d.exif.ExifInterface: void writeExif(byte[],java.io.OutputStream)>
<com.android.server.notification.ZenModeHelper: boolean shouldIntercept(com.android.server.notification.NotificationRecord)>
<com.android.systemui.tuner.CustomListPreference.CustomListPreferenceDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
<com.android.systemui.statusbar.notification.row.ExpandableView: float getHeaderVisibleAmount()>
<com.android.systemui.util.wakelock.DelayedWakeLock: void release(java.lang.String)>
<com.android.systemui.statusbar.notification.row.ExpandableView: int getMinHeight()>
<com.android.keyguard.KeyguardSliceView: void setDarkAmount(float)>
<com.android.systemui.statusbar.policy.KeyguardMonitor: long getKeyguardFadingAwayDelay()>
<com.android.server.security.VerityUtils: boolean hasFsverity(java.lang.String)>
<com.android.systemui.statusbar.notification.row.NotificationBackgroundView: void setBottomAmountClips(boolean)>
<com.android.systemui.classifier.DirectionEvaluator: float evaluate(float,float,int)>
<com.android.printspooler.widget.EmbeddedContentContainer.OnSizeChangeListener: void onSizeChanged(int,int)>
<com.android.systemui.statusbar.StatusBarIconView: void setVisibleState(int,boolean,java.lang.Runnable)>
<com.android.server.usb.UsbDeviceManager: void onUnlockUser(int)>
<com.android.server.DynamicSystemService: boolean remove()>
<com.android.systemui.statusbar.policy.NetworkController.SignalCallback: void setNoSims(boolean,boolean)>
<com.android.server.utils.FlagNamespaceUtils: void resetDeviceConfig(int)>
<com.android.packageinstaller.television.ErrorFragment: void onCreateActions(java.util.List,android.os.Bundle)>
<com.android.preload.ui.IUI: void hideWaitDialog()>
<com.android.settingslib.bluetooth.MapClientProfile: int getOrdinal()>
<com.android.gallery3d.exif.Rational: double toDouble()>
<com.android.systemui.statusbar.policy.KeyguardMonitorImpl: void addCallback(com.android.systemui.statusbar.policy.KeyguardMonitor.Callback)>
<com.android.systemui.statusbar.phone.ButtonDispatcher: void setVisibility(int)>
<com.android.server.ConnectivityService: void releasePendingNetworkRequest(android.app.PendingIntent)>
<com.android.server.notification.NotificationRecord: android.app.NotificationChannel getChannel()>
<com.android.server.storage.DiskStatsFileLogger: void dumpToFile(java.io.File)>
<com.android.server.usb.descriptors.report.UsbStrings: java.lang.String getDescriptorName(byte)>
<com.android.settingslib.core.instrumentation.MetricsFeatureProvider: void visible(android.content.Context,int,int)>
<com.android.server.usb.descriptors.UsbACTerminal: void <init>(int,byte,byte,int)>
<com.android.systemui.shared.system.WindowManagerWrapper: boolean hasSoftNavigationBar(int)>
<com.android.server.NetworkScoreService.ScoringServiceConnection: boolean isAlive()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean hasUserChangedExpansion()>
<com.android.settingslib.development.AbstractEnableAdbPreferenceController: void <init>(android.content.Context)>
<android.net.INetworkStackConnector: void makeIpClient(java.lang.String,android.net.ip.IIpClientCallbacks)>
<com.android.server.slice.SliceFullAccessList: void writeXml(org.xmlpull.v1.XmlSerializer,int)>
<com.android.wallpapercropper.WallpaperCropActivity.BitmapCropTask: void <init>(android.content.Context,android.net.Uri,android.graphics.RectF,int,int,int,boolean,boolean,java.lang.Runnable)>
<com.android.server.NetworkScoreService.ServiceHandler: void <init>(android.os.Looper)>
<com.android.packageinstaller.RemoveReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.android.keyguard.KeyguardClockSwitch: float getTextSize()>
<com.android.server.autofill.AutofillManagerService: void enforceCallingPermissionForManagement()>
<com.android.systemui.bubbles.BubbleStackView: float getNormalizedYPosition()>
<com.android.systemui.statusbar.SmartReplyController: void smartActionClicked(com.android.systemui.statusbar.notification.collection.NotificationEntry,int,android.app.Notification.Action,boolean)>
<com.android.server.testing.shadows.ShadowSlog: int e(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.policy.UserSwitcherController: void <init>(android.content.Context,com.android.systemui.statusbar.policy.KeyguardMonitor,android.os.Handler,com.android.systemui.plugins.ActivityStarter)>
<com.android.systemui.plugins.qs.QSIconView: android.view.View getIconView()>
<com.android.systemui.qs.car.CarQSFragment: void setListening(boolean)>
<com.android.systemui.statusbar.notification.stack.NotificationListContainer: void applyExpandAnimationParams(com.android.systemui.statusbar.notification.ActivityLaunchAnimator.ExpandAnimationParameters)>
<com.android.systemui.statusbar.phone.StatusBar: void onActiveStateChanged(int,int,java.lang.String,boolean)>
<com.android.server.location.LocationRequestStatistics.PackageStatistics: long getSlowestIntervalMs()>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: java.lang.String getAddress()>
<com.android.systemui.SwipeHelper: void dismissChild(android.view.View,float,boolean)>
<com.android.systemui.assist.AssistHandleBehaviorController.BehaviorController: void onModeActivated(android.content.Context,com.android.systemui.assist.AssistHandleCallbacks)>
<com.android.systemui.statusbar.policy.HotspotControllerImpl: void removeCallback(android.os.Handler.Callback)>
<com.android.server.soundtrigger.SoundTriggerService: void onSwitchUser(int)>
<com.android.settingslib.wifi.AccessPointPreference.UserBadgeCache: void <init>(android.content.pm.PackageManager)>
<com.android.systemui.statusbar.phone.ButtonDispatcher: com.android.systemui.statusbar.policy.KeyButtonDrawable getImageDrawable()>
<com.android.keyguard.SecurityMessageDisplay: void setMessage(java.lang.CharSequence)>
<com.android.systemui.volume.CarVolumeItem: void setMax(int)>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: void onPanelPeeked()>
<com.android.externalstorage.TestDocumentsProvider: android.database.Cursor queryChildDocuments(java.lang.String,java.lang.String[],java.lang.String)>
<com.android.systemui.ScreenDecorations: android.graphics.Region rectsToRegion(java.util.List)>
<com.android.server.twilight.TwilightState: boolean isNight()>
<com.android.server.pm.PackageManagerService: boolean isPermissionEnforced(java.lang.String)>
<com.android.systemui.statusbar.NotificationLifetimeExtender: boolean shouldExtendLifetimeForPendingNotification(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.systemui.statusbar.phone.StatusBarNotificationPresenter: void onActivationReset(com.android.systemui.statusbar.notification.row.ActivatableNotificationView)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: com.android.systemui.statusbar.notification.row.ExpandableView getClosestChildAtRawPosition(float,float)>
<com.android.server.testing.shadows.ShadowPerformUnifiedRestoreTask: void reset()>
<com.android.wallpaperbackup.WallpaperBackupAgent: void onFullBackup(android.app.backup.FullBackupDataOutput)>
<com.android.systemui.statusbar.notification.row.ExpandableView: boolean hasExpandingChild()>
<com.android.uiautomator.core.UiObject: com.android.uiautomator.core.UiObject getChild(com.android.uiautomator.core.UiSelector)>
<com.android.systemui.qs.car.CarQSFragment.UserSwitchCallback: void show()>
<com.android.keyguard.KeyguardHostView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.policy.RemoteInputView.RemoteEditText: void getFocusedRect(android.graphics.Rect)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void drawMesh(com.android.gallery3d.glrenderer.BasicTexture,int,int,int,int,int,int)>
<com.android.systemui.qs.external.TileServices: void startUnlockAndRun(android.os.IBinder)>
<com.android.packageinstaller.PackageUtil: android.content.pm.PackageParser.Package getPackageInfo(android.content.Context,java.io.File)>
<com.android.systemui.globalactions.GlobalActionsImpl: void disable(int,int,int,boolean)>
<com.android.systemui.statusbar.StatusBarIconView: void setStaticDrawableColor(int)>
<com.android.server.usb.descriptors.UsbDescriptor: void report(com.android.server.usb.descriptors.report.ReportCanvas)>
<com.android.systemui.statusbar.HeadsUpStatusBarView: com.android.systemui.statusbar.notification.collection.NotificationEntry getShowingEntry()>
<com.android.server.policy.WindowManagerPolicy.DisplayContentInfo: android.view.Display getDisplay()>
<com.android.systemui.statusbar.ViewTransformationHelper: android.util.ArraySet getAllTransformingViews()>
<com.android.systemui.qs.QSScrollLayout: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.android.server.notification.PreferencesHelper: boolean isGroupBlocked(java.lang.String,int,java.lang.String)>
<com.android.systemui.statusbar.phone.ContextualButton: boolean hide()>
<com.android.systemui.statusbar.phone.NavigationBarView: void updateStates()>
<com.android.server.textclassifier.TextClassificationManagerService: void onDestroyTextClassificationSession(android.view.textclassifier.TextClassificationSessionId)>
<com.android.systemui.statusbar.notification.NotificationEntryListener: void onNotificationAdded(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.systemui.statusbar.CommandQueue: void showBiometricDialog(android.os.Bundle,android.hardware.biometrics.IBiometricServiceReceiverInternal,int,boolean,int)>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationViewWrapper: int getHeaderTranslation()>
<com.android.keyguard.CarrierText: void onVisibilityChanged(android.view.View,int)>
<com.android.systemui.bubbles.BubbleExpandedView: void updateView()>
<com.android.settingslib.widget.settingsspinner.SettingsSpinner: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.testing.shadows.ShadowRecoveryController: android.security.keystore.recovery.RecoveryController getInstance(android.content.Context)>
<com.android.uiautomator.core.UiDevice: java.lang.String getLastTraversedText()>
<com.android.server.usb.UsbDeviceManager: void <init>(android.content.Context,com.android.server.usb.UsbAlsaManager,com.android.server.usb.UsbSettingsManager)>
<com.android.powermodel.ParseException: void <init>(int,java.lang.String,java.lang.Throwable)>
<com.android.systemui.tuner.ShortcutPicker: void onCreatePreferences(android.os.Bundle,java.lang.String)>
<com.android.systemui.statusbar.policy.SplitClockView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.qs.tiles.DndTile: java.lang.CharSequence getTileLabel()>
<com.android.location.provider.ProviderPropertiesUnbundled: com.android.internal.location.ProviderProperties getProviderProperties()>
<com.android.server.pm.permission.PermissionsState: boolean hasPermission(java.lang.String,int)>
<com.android.systemui.recents.RecentsImpl: long getLastPipTime()>
<android.perftests.SystemPerfTest: void testBenchmarkPauseResumeOverhead()>
<android.text.StaticLayoutPerfTest: void testCreate_PrecomputedText_NoStyled_Greedy_NoHyphenation()>
<com.android.systemui.statusbar.car.UserGridRecyclerView.UserAdapter: void updateUsers(java.util.List)>
<com.android.server.stats.StatsCompanionService: void sendSubscriberBroadcast(android.os.IBinder,long,long,long,long,java.lang.String[],android.os.StatsDimensionsValue)>
<android.net.ipmemorystore.Status: void <init>(android.net.ipmemorystore.StatusParcelable)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isUninstallBlocked(android.content.ComponentName,java.lang.String)>
<com.android.systemui.plugins.qs.QSTile.State: boolean copyTo(com.android.systemui.plugins.qs.QSTile.State)>
<com.android.server.notification.ManagedServices.ManagedServiceInfo: void binderDied()>
<com.android.systemui.statusbar.notification.stack.AmbientState: void setCurrentScrollVelocity(float)>
<javax.microedition.khronos.opengles.GL11: void glTexParameteri(int,int,int)>
<com.android.systemui.util.wakelock.WakeLock: java.lang.Runnable wrap(java.lang.Runnable)>
<com.android.systemui.statusbar.phone.NotificationGroupManager: void onAmbientStateChanged(com.android.systemui.statusbar.notification.collection.NotificationEntry,boolean)>
<com.android.systemui.statusbar.phone.BarTransitions: java.lang.String modeToString(int)>
<com.android.server.appop.AppOpsService: void clearHistory()>
<com.android.server.usb.descriptors.UsbInterfaceDescriptor: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>
<com.android.settingslib.core.ConfirmationDialogController: void dismissConfirmationDialog()>
<com.android.server.dreams.DreamManagerService: void onBootPhase(int)>
<com.android.systemui.statusbar.phone.KeyguardBouncer: void setExpansion(float)>
<com.android.server.usb.descriptors.Usb10ASFormatII: byte getSamFreqType()>
<com.android.systemui.classifier.Stroke: void <init>(long,float)>
<javax.microedition.khronos.opengles.GL10: void glLightx(int,int,int)>
<com.android.server.appop.AppOpsService: void stopWatchingMode(com.android.internal.app.IAppOpsCallback)>
<com.android.settingslib.bluetooth.LocalBluetoothManager: com.android.settingslib.bluetooth.LocalBluetoothManager getInstance(android.content.Context,com.android.settingslib.bluetooth.LocalBluetoothManager.BluetoothManagerCallback)>
<com.android.server.accounts.AccountManagerService.Lifecycle: void <init>(android.content.Context)>
<com.android.systemui.statusbar.CommandQueue: void onDisplayAdded(int)>
<com.android.systemui.qs.tileimpl.QSTileImpl: java.lang.CharSequence getTileLabel()>
<com.android.systemui.shared.system.WindowManagerWrapper: com.android.systemui.shared.system.WindowManagerWrapper getInstance()>
<com.android.server.content.SyncManagerConstants: void onChange(boolean)>
<com.android.systemui.statusbar.phone.StatusBarIconController: void setSignalIcon(java.lang.String,com.android.systemui.statusbar.phone.StatusBarSignalPolicy.WifiIconState)>
<com.android.settingslib.drawer.Tile: boolean isIconTintable(android.content.Context)>
<android.net.dhcp.DhcpServingParamsParcelExt: android.net.dhcp.DhcpServingParamsParcelExt setDnsServers(java.net.Inet4Address[])>
<com.android.systemui.statusbar.policy.PreviewInflater: android.view.View inflatePreview(android.content.Intent)>
<com.android.server.policy.WindowManagerPolicy.WindowState: boolean getNeedsMenuLw(com.android.server.policy.WindowManagerPolicy.WindowState)>
<com.android.uiautomator.core.Configurator: com.android.uiautomator.core.Configurator setKeyInjectionDelay(long)>
<com.android.server.audio.AudioService: void playSoundEffectVolume(int,float)>
<com.android.systemui.plugins.FalsingManager: boolean isFalseTouch()>
<com.android.systemui.assist.AssistHandleBehaviorController: void hide()>
<com.android.systemui.bubbles.animation.PhysicsAnimationLayout: boolean arePropertiesAnimatingOnView(android.view.View,androidx.dynamicanimation.animation.DynamicAnimation.ViewProperty[])>
<com.android.server.autofill.ui.FillUi.Callback: void dispatchUnhandledKey(android.view.KeyEvent)>
<com.android.systemui.keyguard.WakefulnessLifecycle.Observer: void onStartedWakingUp()>
<com.android.server.inputmethod.InputMethodManagerService: void reportActivityView(com.android.internal.view.IInputMethodClient,int,float[])>
<com.android.systemui.statusbar.FlingAnimationUtils: float getMinVelocityPxPerSecond()>
<com.android.server.IntentResolver: boolean allowFilterResult(android.content.IntentFilter,java.util.List)>
<com.android.systemui.screenrecord.RecordingService: android.os.IBinder onBind(android.content.Intent)>
<com.android.server.trust.TrustAgentWrapper: void onDeviceLocked()>
<javax.obex.ClientOperation: java.lang.String getEncoding()>
<com.android.server.policy.PhoneWindowManager: void setCurrentUserLw(int)>
<android.os.ParcelArrayPerfTest: void timeReadByteArray()>
<com.android.server.pm.PackageManagerService: android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentity()>
<com.android.gallery3d.exif.ExifTag: com.android.gallery3d.exif.Rational[] getValueAsRationals()>
<com.android.commands.vr.Vr: void onShowUsage(java.io.PrintStream)>
<com.android.settingslib.bluetooth.MapClientProfile: int getSummaryResourceForDevice(android.bluetooth.BluetoothDevice)>
<com.android.systemui.qs.tileimpl.QSIconViewImpl: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.statusbar.CommandQueue: void showPictureInPictureMenu()>
<com.android.systemui.qs.tileimpl.QSTileImpl.DrawableIcon: void <init>(android.graphics.drawable.Drawable)>
<com.android.server.VibratorService: boolean hasAmplitudeControl()>
<com.android.systemui.statusbar.phone.StatusBarWindowController: void registerCallback(com.android.systemui.statusbar.phone.StatusBarWindowCallback)>
<com.android.gallery3d.exif.ExifInterface: java.lang.String getUserComment()>
<com.android.keyguard.PasswordTextView: void <init>(android.content.Context)>
<com.android.commands.uiautomator.Launcher.Command: java.lang.String detailedOptions()>
<com.android.systemui.statusbar.phone.NavigationBarFrame: boolean dispatchTouchEvent(android.view.MotionEvent)>
<com.android.systemui.statusbar.phone.DozeParameters: boolean getDisplayNeedsBlanking()>
<android.net.shared.ParcelableUtil: java.lang.Object[] toParcelableArray(java.util.Collection,java.util.function.Function,java.lang.Class)>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.activity.EnterRecentsWindowAnimationCompletedEvent)>
<com.android.server.pm.dex.DexoptOptions: boolean isBootComplete()>
<com.android.settingslib.bluetooth.HidProfile: void setPreferred(android.bluetooth.BluetoothDevice,boolean)>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: void <init>(android.content.Context,android.os.Looper,com.android.systemui.statusbar.policy.DeviceProvisionedController)>
<com.android.systemui.statusbar.policy.RemoteInputQuickSettingsDisabler: void <init>(android.content.Context,com.android.systemui.statusbar.policy.ConfigurationController)>
<com.android.server.policy.keyguard.KeyguardStateMonitor: boolean isShowing()>
<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService.PackageFreezer freezePackageForDelete(java.lang.String,int,java.lang.String)>
<com.android.settingslib.RestrictedLockUtilsInternal: com.android.settingslib.RestrictedLockUtils.EnforcedAdmin checkIfInputMethodDisallowed(android.content.Context,java.lang.String,int)>
<com.android.systemui.qs.SlashDrawable: int getOpacity()>
<com.android.systemui.volume.VolumeDialogComponent: void dispatchDemoCommand(java.lang.String,android.os.Bundle)>
<com.android.systemui.statusbar.policy.KeyButtonDrawable: void setAlpha(int)>
<com.android.settingslib.inputmethod.InputMethodAndSubtypeEnablerManagerCompat: void <init>(androidx.preference.PreferenceFragmentCompat)>
<com.android.systemui.statusbar.phone.NavigationBarView: com.android.systemui.statusbar.phone.RotationContextButton getRotateSuggestionButton()>
<com.android.server.input.InputManagerService: boolean hasKeys(int,int,int[],boolean[])>
<com.android.systemui.recents.model.RecentsTaskLoader: void deleteTaskData(com.android.systemui.shared.recents.model.Task,boolean)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setNotificationPanel(com.android.systemui.statusbar.phone.NotificationPanelView)>
<com.android.systemui.pip.phone.PipMenuActivity: void onUserLeaveHint()>
<com.android.systemui.recents.RecentsActivity: void onBusEvent(com.android.systemui.recents.events.component.ScreenPinningRequestEvent)>
<com.android.server.location.GnssStatusListenerHelper: com.android.server.location.RemoteListenerHelper.ListenerOperation getHandlerOperation(int)>
<com.android.systemui.recents.OverviewProxyRecentsImpl: boolean splitPrimaryTask(int,android.graphics.Rect,int)>
<com.android.settingslib.RestrictedPreference: void onBindViewHolder(androidx.preference.PreferenceViewHolder)>
<com.android.systemui.statusbar.HeadsUpStatusBarView: void setOnDrawingRectChangedListener(java.lang.Runnable)>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: boolean childNeedsClipping(android.view.View)>
<com.android.systemui.statusbar.phone.UserAvatarView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.tuner.CustomListPreference.CustomListPreferenceDialogFragment: void onDialogClosed(boolean)>
<com.android.systemui.statusbar.phone.StatusBarIconList: int getSlotIndex(java.lang.String)>
<com.android.systemui.statusbar.policy.DataSaverControllerImpl: void removeCallback(android.net.NetworkPolicyManager.Listener)>
<com.android.systemui.doze.DozeLog: void traceNotificationPulse(android.content.Context)>
<com.android.server.trust.TrustArchive: void logRevokeTrust(int,android.content.ComponentName)>
<com.android.systemui.ActivityStarterDelegate: void dismissKeyguardThenExecute(com.android.systemui.plugins.ActivityStarter.OnDismissAction,java.lang.Runnable,boolean)>
<com.android.settingslib.search.SearchIndexableResourcesBase: void addIndex(java.lang.Class)>
<com.android.printspooler.model.PrintSpoolerService.PrintSpooler: void setPrintJobState(android.print.PrintJobId,int,java.lang.String,android.print.IPrintSpoolerCallbacks,int)>
<com.android.server.notification.PreferencesHelper: java.util.List deleteNotificationChannelGroup(java.lang.String,int,java.lang.String)>
<com.android.server.content.ContentService: void unregisterContentObserver(android.database.IContentObserver)>
<com.android.systemui.statusbar.notification.row.FooterView: android.view.View findContentView()>
<com.android.systemui.analytics.DataCollector: void onNotificatonStopDismissing()>
<com.android.settingslib.datetime.ZoneGetter.ZoneGetterData: java.util.List lookupTimeZoneIdsByCountry(java.lang.String)>
<com.android.settingslib.fuelgauge.PowerWhitelistBackend: void addApp(java.lang.String)>
<com.android.shell.BugreportStorageProvider: java.lang.String getDocIdForFile(java.io.File)>
<com.android.preload.actions.ImportAction: void run()>
<android.widget.TextViewPrecomputedTextPerfTest: void testSetText_RandomText()>
<com.android.printspooler.model.PageContentRepository: void close(java.lang.Runnable)>
<com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper: float getMinDismissVelocity()>
<com.android.server.NetworkManagementService: void unregisterObserver(android.net.INetworkManagementEventObserver)>
<com.android.server.usb.descriptors.report.UsbStrings: java.lang.String getFormatName(int)>
<android.text.CanvasDrawTextTest: void setUp()>
<com.android.systemui.statusbar.ViewTransformationHelper.CustomTransformation: boolean initTransformation(com.android.systemui.statusbar.notification.TransformState,com.android.systemui.statusbar.notification.TransformState)>
<com.android.server.display.VirtualDisplayAdapter: com.android.server.display.DisplayDevice releaseVirtualDisplayLocked(android.os.IBinder)>
<com.android.server.pm.dex.DexoptOptions: java.lang.String getSplitName()>
<com.android.systemui.util.AsyncSensorManager: void onPluginConnected(com.android.systemui.plugins.SensorManagerPlugin,android.content.Context)>
<com.android.server.vr.EnabledComponentsObserver: android.util.ArraySet getEnabled(int)>
<com.android.systemui.keyguard.KeyguardViewMediator: void setOccluded(boolean,boolean)>
<com.android.systemui.statusbar.policy.BatteryController.BatteryStateChangeCallback: void onPowerSaveChanged(boolean)>
<com.android.server.NetworkManagementService: boolean isNetworkActive()>
<com.android.settingslib.net.SummaryForAllUidLoader: android.os.Bundle buildArgs(android.net.NetworkTemplate,long,long)>
<com.android.server.pm.PackageManagerService: void addPersistentPreferredActivity(android.content.IntentFilter,android.content.ComponentName,int)>
<com.android.statsd.loadtest.StatsdStatsRecorder: void startRecording(android.content.Context)>
<com.android.systemui.statusbar.phone.NavigationBarFragment: void onDestroy()>
<com.android.preload.classdataretrieval.hprof.GeneralHprofDumpHandler: void onSuccess(byte[],com.android.ddmlib.Client)>
<com.android.systemui.qs.tiles.CastTile: void showDetail(boolean)>
<com.android.server.statusbar.StatusBarManagerService: void onNotificationBubbleChanged(java.lang.String,boolean)>
<com.android.server.biometrics.BiometricServiceBase: void handleError(long,int,int)>
<com.android.statsd.shelltools.Utils: void logAppBreadcrumb(int,int,java.util.logging.Logger)>
<com.android.printspooler.ui.PageAdapter: void update(android.print.PageRange[],android.print.PageRange[],int,android.print.PrintAttributes.MediaSize,android.print.PrintAttributes.Margins)>
<android.net.ip.IpClientCallbacks: void onIpClientCreated(android.net.ip.IIpClient)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: java.lang.String getAddress()>
<com.android.server.tv.TvRemoteProviderProxy.ProviderMethods: void openInputBridge(com.android.server.tv.TvRemoteProviderProxy,android.os.IBinder,java.lang.String,int,int,int)>
<com.android.server.pm.PackageInstallerService: void updateSessionAppIcon(int,android.graphics.Bitmap)>
<com.android.systemui.recents.views.TaskView.TaskViewCallbacks: void onTaskViewClipStateChanged(com.android.systemui.recents.views.TaskView)>
<com.android.server.location.GnssMeasurementsProvider: int registerWithService()>
<com.android.server.biometrics.ClientMonitor: boolean onEnumerationResult(android.hardware.biometrics.BiometricAuthenticator.Identifier,int)>
<com.android.printservice.recommendation.plugin.hp.ServiceRecommendationPlugin: void dataSetChanged()>
<com.android.server.biometrics.BiometricServiceBase: long getHalDeviceId()>
<com.android.systemui.statusbar.policy.RemoteInputView: boolean requestScrollTo()>
<com.android.server.location.GnssNavigationMessageProviderTest: void unregister_nativeStopped()>
<com.android.systemui.qs.QSSecurityFooter: java.lang.CharSequence getManagementMessage(boolean,java.lang.CharSequence)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setPasswordExpirationTimeout(android.content.ComponentName,long,boolean)>
<android.processor.view.inspector.InspectableClassModel.Property: java.util.List getIntFlagEntries()>
<com.android.server.hdmi.HdmiCecMessage: byte[] getParams()>
<com.android.server.input.InputManagerService: java.lang.String getCurrentKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier)>
<com.android.systemui.statusbar.policy.BatteryControllerImpl: void setPowerSaveMode(boolean)>
<com.android.systemui.statusbar.AlphaOptimizedImageView: boolean hasOverlappingRendering()>
<com.android.server.notification.NotificationManagerService.NotificationListeners: void notifyListenerHintsChangedLocked(int)>
<com.android.server.notification.RankingHelper: com.android.server.notification.NotificationSignalExtractor findExtractor(java.lang.Class)>
<com.android.systemui.statusbar.phone.UserAvatarView: void setAvatarPadding(float)>
<com.android.pacprocessor.PacService: void onCreate()>
<com.android.server.usb.descriptors.UsbDescriptorParser: float getInputHeadsetProbability()>
<com.android.packageinstaller.wear.WearPackageArgs: boolean skipIfSameVersion(android.os.Bundle)>
<com.android.systemui.statusbar.policy.KeyguardMonitor.Callback: void onKeyguardShowingChanged()>
<com.android.server.locksettings.SyntheticPasswordManager: void destroyTokenBasedSyntheticPassword(long,int)>
<com.android.systemui.statusbar.policy.Clock: void <init>(android.content.Context)>
<com.android.settingslib.wifi.AccessPoint: void setListener(com.android.settingslib.wifi.AccessPoint.AccessPointListener)>
<com.android.statsd.loadtest.ValidationRecorder: void startRecording(android.content.Context)>
<com.android.systemui.statusbar.phone.ShadeController: boolean closeShadeIfOpen()>
<com.android.systemui.shared.recents.model.Task: void copyFrom(com.android.systemui.shared.recents.model.Task)>
<com.android.server.notification.ManagedServices.ManagedServiceInfo: boolean isGuest(com.android.server.notification.ManagedServices)>
<com.android.systemui.statusbar.phone.BiometricUnlockController: void onBiometricAuthFailed(android.hardware.biometrics.BiometricSourceType)>
<com.android.systemui.recents.IRecentsNonSystemUserCallbacks: void onDraggingInRecents(float)>
<com.android.statsd.loadtest.PerfData: void startRecording(android.content.Context)>
<com.android.server.pm.permission.PermissionManagerServiceInternal: void enforceCrossUserPermission(int,int,boolean,boolean,boolean,java.lang.String)>
<com.android.systemui.statusbar.policy.KeyguardMonitor: boolean isKeyguardGoingAway()>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.CharSequence getLongSupportMessage(android.content.ComponentName)>
<com.android.server.locksettings.recoverablekeystore.RecoverySnapshotListenersStorage: boolean hasListener(int)>
<com.android.packageinstaller.TemporaryFileManager: java.io.File getStagedFile(android.content.Context)>
<com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.systemui.bubbles.animation.PhysicsAnimationLayout.PhysicsPropertyAnimator: com.android.systemui.bubbles.animation.PhysicsAnimationLayout.PhysicsPropertyAnimator scaleX(float,java.lang.Runnable[])>
<com.android.server.media.MediaSessionRecord: android.media.session.ISessionCallback getCallback()>
<com.android.server.notification.GroupHelper: void <init>(int,com.android.server.notification.GroupHelper.Callback)>
<com.android.systemui.statusbar.phone.StatusBarIconController.DarkIconManager: android.widget.LinearLayout.LayoutParams onCreateLayoutParams()>
<com.android.settingslib.location.SettingsInjector: androidx.preference.Preference createPreference(android.content.Context,com.android.settingslib.location.InjectedSetting)>
<com.android.systemui.statusbar.phone.PanelView: void setLaunchingNotification(boolean)>
<com.android.gallery3d.glrenderer.GLES20IdImpl: void glDeleteFramebuffers(javax.microedition.khronos.opengles.GL11ExtensionPack,int,int[],int)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void resetTranslation()>
<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantDefaultPermissionsToDefaultBrowser(java.lang.String,int)>
<com.android.settingslib.inputmethod.InputMethodAndSubtypeUtil: java.util.HashMap parseInputMethodsAndSubtypesString(java.lang.String)>
<com.android.systemui.classifier.FalsingManagerImpl: void setQsExpanded(boolean)>
<android.media.DataSourceDesc: java.lang.String getMediaId()>
<com.android.systemui.recents.model.TaskKeyStrongCache: void dump(java.lang.String,java.io.PrintWriter)>
<com.android.server.pm.PackageInstallerSession: android.os.ParcelFileDescriptor openRead(java.lang.String)>
<android.net.netlink.StructNlAttr: android.net.netlink.StructNlAttr parse(java.nio.ByteBuffer)>
<com.android.systemui.statusbar.phone.NotificationIconContainer: void showIconIsolated(com.android.systemui.statusbar.StatusBarIconView,boolean)>
<com.android.systemui.keyboard.BluetoothDialog: void <init>(android.content.Context)>
<com.android.server.pm.Installer: void freeCache(java.lang.String,long,long,int)>
<com.android.systemui.volume.CarVolumeItem: void setSupplementalIconListener(android.view.View.OnClickListener)>
<com.android.systemui.statusbar.NotificationListener: void registerAsSystemService()>
<javax.microedition.khronos.opengles.GL10: void glLightModelf(int,float)>
<com.android.server.NativeDaemonConnectorException: void <init>(java.lang.String)>
<com.android.keyguard.KeyguardSecurityCallback: void reportUnlockAttempt(int,boolean,int)>
<com.android.server.policy.PhoneWindowManager: void writeToProto(android.util.proto.ProtoOutputStream,long)>
<com.android.systemui.SlicePermissionActivity: void onDismiss(android.content.DialogInterface)>
<com.android.systemui.statusbar.notification.TransformState: void setDefaultInterpolator(android.view.animation.Interpolator)>
<com.android.systemui.statusbar.phone.StatusBar: void goToLockedShade(android.view.View)>
<com.android.systemui.usb.UsbPermissionActivity: void onCheckedChanged(android.widget.CompoundButton,boolean)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void addTrackingHeadsUpListener(java.util.function.Consumer)>
<com.android.systemui.shared.plugins.PluginManagerImpl: void onReceive(android.content.Context,android.content.Intent)>
<com.android.systemui.qs.external.TileLifecycleManager: void <init>(android.os.Handler,android.content.Context,android.service.quicksettings.IQSService,android.service.quicksettings.Tile,android.content.Intent,android.os.UserHandle)>
<com.android.server.soundtrigger.SoundTriggerService.Operation.ExecuteOp: void run(int,android.media.soundtrigger.ISoundTriggerDetectionService)>
<com.android.pacprocessor.PacNative: boolean startPacSupport()>
<com.android.systemui.statusbar.phone.EdgeBackGestureHandler: void updateCurrentUserResources(android.content.res.Resources)>
<com.android.systemui.statusbar.notification.NotificationActivityStarter: void startNotificationGutsIntent(android.content.Intent,int,com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<com.android.systemui.bubbles.animation.PhysicsAnimationLayout.PhysicsPropertyAnimator: com.android.systemui.bubbles.animation.PhysicsAnimationLayout.PhysicsPropertyAnimator translationX(float,java.lang.Runnable[])>
<com.android.systemui.statusbar.notification.row.ExpandableView: boolean isInShelf()>
<com.android.systemui.statusbar.phone.PanelView: void flingToHeight(float,boolean,float,float,boolean)>
<com.android.preload.actions.ScanPackageAction: void run()>
<com.android.systemui.statusbar.notification.row.ExpandableView: void setHideSensitive(boolean,boolean,long,long)>
<com.android.systemui.qs.QSPanel: boolean shouldShowDetail()>
<com.android.server.locksettings.SyntheticPasswordManager: void destroySPBlobKey(java.lang.String)>
<com.android.systemui.qs.customize.TileAdapter: androidx.recyclerview.widget.ItemTouchHelper getItemTouchHelper()>
<com.android.systemui.statusbar.policy.Clock: void setClockVisibleByUser(boolean)>
<com.android.systemui.statusbar.policy.KeyButtonDrawable: void setRotation(float)>
<com.android.systemui.statusbar.policy.SecurityControllerImpl: java.lang.CharSequence getWorkProfileOrganizationName()>
<com.android.settingslib.inputmethod.InputMethodAndSubtypeUtilCompat: void saveInputMethodSubtypeList(androidx.preference.PreferenceFragmentCompat,android.content.ContentResolver,java.util.List,boolean)>
<com.android.systemui.statusbar.policy.ExtensionController.ExtensionBuilder: com.android.systemui.statusbar.policy.ExtensionController.ExtensionBuilder withPlugin(java.lang.Class)>
<com.android.systemui.statusbar.AlphaOptimizedImageView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.statusbar.notification.stack.SectionHeaderView: void onFinishInflate()>
<com.android.server.location.RemoteListenerHelper: boolean isGpsEnabled()>
<com.android.server.notification.ZenLog: void traceDisableEffects(com.android.server.notification.NotificationRecord,java.lang.String)>
<com.android.server.audio.AudioService: int trackPlayer(android.media.PlayerBase.PlayerIdCard)>
<com.android.printspooler.widget.PrintContentView: void computeScroll()>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void setExpandedInflatedSmartReplies(com.android.systemui.statusbar.policy.InflatedSmartReplies)>
<com.android.systemui.plugins.GlobalActionsPanelPlugin: com.android.systemui.plugins.GlobalActionsPanelPlugin.PanelViewController onPanelShown(com.android.systemui.plugins.GlobalActionsPanelPlugin.Callbacks,boolean)>
<com.android.server.accessibility.FingerprintGestureDispatcher: boolean handleMessage(android.os.Message)>
<com.android.server.pm.ShortcutService: int getIconMaxDimensions(java.lang.String,int)>
<com.android.server.autofill.ui.PendingUi: void setState(int)>
<com.android.systemui.qs.QSPanel: void showDeviceMonitoringDialog()>
<com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer: int getMaxContentHeight()>
<com.android.server.ServiceThread: void <init>(java.lang.String,int,boolean)>
<com.android.server.inputmethod.InputMethodManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.hdmi.HdmiCecLocalDevicePlayback: boolean handleSetMenuLanguage(com.android.server.hdmi.HdmiCecMessage)>
<com.android.settingslib.wifi.AccessPointPreference: void updateBadge(android.content.Context)>
<com.android.gallery3d.exif.ExifInterface: java.lang.Integer getTagIntValue(int)>
<com.android.systemui.recents.LegacyRecentsImpl: void onBusEvent(com.android.systemui.recents.events.component.HidePipMenuEvent)>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: void setName(java.lang.String)>
<com.android.gallery3d.exif.ExifInterface: com.android.gallery3d.exif.Rational getTagRationalValue(int)>
<com.android.systemui.statusbar.StatusBarIconView: float getIconScaleFullyDark()>
<com.android.server.policy.WindowManagerPolicy.WindowState: boolean canReceiveKeys()>
<com.android.server.timezone.RulesManagerService: int requestInstall(android.os.ParcelFileDescriptor,byte[],android.app.timezone.ICallback)>
<com.android.server.input.InputManagerService: android.view.InputMonitor monitorGestureInput(java.lang.String,int)>
<com.android.systemui.globalactions.GlobalActionsColumnLayout: float getAnimationDistance()>
<com.android.server.policy.WindowOrientationListener: void <init>(android.content.Context,android.os.Handler)>
<com.android.systemui.statusbar.StatusBarStateControllerImpl: boolean isDozing()>
<com.android.server.policy.WindowManagerPolicy.WindowState: boolean isAnimatingLw()>
<com.android.server.BatteryService.HealthServiceWrapper.IHealthSupplier: android.hardware.health.V2_0.IHealth get(java.lang.String)>
<com.android.systemui.analytics.DataCollector: void onNotificationDoubleTap()>
<com.android.server.soundtrigger.SoundTriggerLogger.Event: java.lang.String eventToString()>
<com.android.systemui.ForegroundServicesDialog: void onResume()>
<com.android.server.notification.NotificationRecord: boolean isIntercepted()>
<com.android.server.pm.InstructionSets: java.lang.String[] getDexCodeInstructionSets(java.lang.String[])>
<com.android.server.notification.NotificationRecord: android.net.Uri getSound()>
<com.android.systemui.statusbar.phone.StatusBarWindowController: void setForceWindowCollapsed(boolean)>
<com.android.systemui.statusbar.car.FullscreenUserSwitcher: void <init>(com.android.systemui.statusbar.car.CarStatusBar,android.view.ViewStub,android.content.Context)>
<com.android.localtransport.LocalTransport: int getTransportFlags()>
<com.android.systemui.shared.system.WindowCallbacksCompat: void detach()>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationMessagingTemplateViewWrapper: int getMinLayoutHeight()>
<com.android.systemui.statusbar.phone.NavigationPrototypeController: boolean isEnabled()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onThemeChanged()>
<com.android.settingslib.bluetooth.CachedBluetoothDeviceManager: void onActiveDeviceChanged(com.android.settingslib.bluetooth.CachedBluetoothDevice,int)>
<com.android.settingslib.bluetooth.PbapServerProfile: int getConnectionStatus(android.bluetooth.BluetoothDevice)>
<com.android.gallery3d.exif.ExifTag: int getElementSize(short)>
<com.android.server.usb.UsbService.Lifecycle: void onStart()>
<com.android.server.LocationManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.settingslib.wifi.AccessPointPreference: void notifyChanged()>
<javax.microedition.khronos.opengles.GL10: void glLightxv(int,int,java.nio.IntBuffer)>
<com.android.server.BinderCallsStatsService.LifeCycle: void onBootPhase(int)>
<com.android.settingslib.core.lifecycle.Lifecycle: void addObserver(androidx.lifecycle.LifecycleObserver)>
<javax.microedition.khronos.opengles.GL11: void glGetBooleanv(int,java.nio.IntBuffer)>
<com.android.systemui.settings.BrightnessController: boolean removeStateChangedCallback(com.android.systemui.settings.BrightnessController.BrightnessStateChangeCallback)>
<com.android.systemui.ScreenDecorations.DisplayCutoutView: void onMeasure(int,int)>
<com.android.systemui.classifier.HumanInteractionClassifier: boolean isEnabled()>
<com.android.systemui.statusbar.phone.NavigationBarFragment: void setLightBarController(com.android.systemui.statusbar.phone.LightBarController)>
<com.android.server.usb.descriptors.UsbConfigDescriptor: void report(com.android.server.usb.descriptors.report.ReportCanvas)>
<com.android.server.notification.PreferencesHelper: void createNotificationChannelGroup(java.lang.String,int,android.app.NotificationChannelGroup,boolean)>
<com.android.server.ExtconStateObserver: void onUEvent(com.android.server.ExtconUEventObserver.ExtconInfo,android.os.UEventObserver.UEvent)>
<com.android.server.wallpaper.WallpaperManagerService: void registerWallpaperColorsCallback(android.app.IWallpaperManagerCallback,int,int)>
<com.android.server.content.SyncStorageEngine: java.util.ArrayList getSyncHistory()>
<com.android.server.notification.NotificationRecord: int getUid()>
<com.android.systemui.statusbar.car.CarNavigationButton: void setUnseen(boolean)>
<com.android.server.notification.ZenModeFiltering: boolean shouldIntercept(int,android.app.NotificationManager.Policy,com.android.server.notification.NotificationRecord)>
<com.android.server.usb.descriptors.tree.UsbDescriptorsTree: void parse(com.android.server.usb.descriptors.UsbDescriptorParser)>
<com.android.server.appop.AppOpsService: void setUidMode(int,int,int)>
<com.android.systemui.statusbar.StatusBarWifiView: void setStaticDrawableColor(int)>
<com.android.server.notification.NotificationRecord: int getNumSmartRepliesAdded()>
<com.google.android.startop.iorap.AppLaunchEvent.ActivityLaunchFinished: void <init>(long,byte[])>
<android.media.MediaSession2Service: android.os.IBinder onBind(android.content.Intent)>
<com.android.server.biometrics.BiometricServiceBase: void startCurrentClient(int)>
<com.android.server.notification.NotificationManagerService.DumpFilter: boolean matches(java.lang.String)>
<com.android.systemui.statusbar.DragDownHelper: boolean isDraggingDown()>
<com.android.systemui.qs.tiles.DndTile: void handleClick()>
<com.android.systemui.statusbar.notification.TransformState: void transformViewFullyFrom(com.android.systemui.statusbar.notification.TransformState,com.android.systemui.statusbar.ViewTransformationHelper.CustomTransformation,float)>
<com.android.systemui.volume.VolumeDialogControllerImpl: void notifyVisible(boolean)>
<com.android.server.display.DisplayModeDirector: int[] getAllowedModes(int)>
<com.android.systemui.statusbar.phone.LockscreenGestureLogger: void write(int,int,int)>
<com.android.uiautomator.testrunner.UiAutomatorTestCaseFilter: boolean accept(java.lang.reflect.Method)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: boolean shouldSuppressNotificationList()>
<com.android.systemui.statusbar.phone.StatusIconContainer: void onDraw(android.graphics.Canvas)>
<com.android.settingslib.applications.ApplicationsState.Callbacks: void onPackageListChanged()>
<com.android.server.media.MediaRouterService: void unregisterClient(android.media.IMediaRouterClient)>
<com.android.systemui.statusbar.phone.StatusBar: com.android.systemui.statusbar.phone.BiometricUnlockController getBiometricUnlockController()>
<com.android.uiautomator.core.UiDevice: void initialize(com.android.uiautomator.core.UiAutomatorBridge)>
<com.android.systemui.classifier.brightline.TimeLimitedMotionEventBuffer: boolean retainAll(java.util.Collection)>
<com.android.systemui.power.PowerUI.WarningsUI: void dismissLowBatteryWarning()>
<com.android.gallery3d.exif.ExifInterface: java.lang.String getTagStringValue(int)>
<com.android.server.DeviceIdleController: boolean getPowerSaveWhitelistAppInternal(java.lang.String)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void reset()>
<com.android.server.pm.permission.PermissionSettings: boolean canPropagatePermissionToInstantApp(java.lang.String)>
<com.android.server.pm.permission.BasePermission: java.lang.String getName()>
<android.net.netlink.RtNetlinkNeighborMessage: android.net.netlink.StructNdMsg getNdHeader()>
<com.android.server.locksettings.SyntheticPasswordManager: boolean existsHandle(long,int)>
<com.android.server.location.GeofenceManager: void addFence(android.location.LocationRequest,android.location.Geofence,android.app.PendingIntent,int,int,java.lang.String)>
<com.android.keyguard.KeyguardSecurityContainer: void <init>(android.content.Context)>
<javax.microedition.khronos.opengles.GL11: void glGetTexEnviv(int,int,int[],int)>
<javax.microedition.khronos.opengles.GL11Ext: void glMatrixIndexPointerOES(int,int,int,int)>
<android.net.shared.ParcelableUtil: java.util.ArrayList fromParcelableArray(java.lang.Object[],java.util.function.Function)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.qs.SignalTileView: int getIconMeasureMode()>
<com.android.systemui.shared.recents.model.IconLoader: android.graphics.drawable.Drawable createBadgedDrawable(android.graphics.drawable.Drawable,int,android.app.ActivityManager.TaskDescription)>
<com.android.server.locksettings.LockSettingsService: void setLong(java.lang.String,long,int)>
<com.android.systemui.statusbar.notification.stack.AmbientState: void setUnlockHintRunning(boolean)>
<com.android.systemui.statusbar.policy.WifiSignalController: void notifyListeners(com.android.systemui.statusbar.policy.NetworkController.SignalCallback)>
<com.android.localtransport.LocalTransport: int getNextFullRestoreDataChunk(android.os.ParcelFileDescriptor)>
<com.android.systemui.DemoMode: void dispatchDemoCommand(java.lang.String,android.os.Bundle)>
<com.android.systemui.recents.RecentsConfiguration: void <init>(android.content.Context)>
<com.android.systemui.SwipeHelper: void dismissChild(android.view.View,float,java.lang.Runnable,long,boolean,long,boolean)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean wasChildInGroupWhenRemoved()>
<com.android.systemui.tuner.CustomListPreference: java.lang.CharSequence getConfirmationMessage(java.lang.String)>
<com.android.settingslib.HelpUtils: boolean prepareHelpMenuItem(android.app.Activity,android.view.Menu,int,java.lang.String)>
<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: void setMenuClickListener(com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin.OnMenuEventListener)>
<com.android.server.notification.ConditionProviders.Callback: void onBootComplete()>
<com.android.settingslib.net.NetworkCycleDataForUidLoader: java.util.List getUids()>
<com.android.server.hdmi.HdmiCecLocalDevicePlayback: int getPreferredAddress()>
<com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper.SnoozeOption: android.service.notification.SnoozeCriterion getSnoozeCriterion()>
<com.android.server.notification.ConditionProviders: void dump(java.io.PrintWriter,com.android.server.notification.NotificationManagerService.DumpFilter)>
<com.android.commands.hid.Event.Reader: void <init>(java.io.InputStreamReader)>
<com.android.server.pm.PackageManagerService: boolean isStorageLow()>
<com.android.systemui.volume.CarVolumeItem.CarVolumeItemViewHolder: void <init>(android.view.View)>
<com.android.systemui.settings.ToggleSeekBar: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.android.systemui.bubbles.animation.PhysicsAnimationLayout: boolean arePropertiesAnimating(androidx.dynamicanimation.animation.DynamicAnimation.ViewProperty[])>
<com.android.server.usb.descriptors.report.HTMLReportCanvas: void openParagraph(boolean)>
<com.android.server.biometrics.BiometricUtils: void removeBiometricForUser(android.content.Context,int,int)>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationTemplateViewWrapper: void setHeaderVisibleAmount(float)>
<com.android.systemui.ForegroundServiceController: void onAppOpChanged(int,int,java.lang.String,boolean)>
<android.view.ViewShowHidePerfTest: void testGoneToVisible()>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: int getDimensionForDevice(android.content.Context,int,int,int,int,int,int,int)>
<com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer: int getCollapsedHeight()>
<com.android.keyguard.KeyguardUpdateMonitor: void <init>(android.content.Context)>
<com.android.server.notification.PreferencesHelper: void setShowBadge(java.lang.String,int,boolean)>
<com.android.server.biometrics.BiometricServiceBase.ServiceListener: void onRemoved(android.hardware.biometrics.BiometricAuthenticator.Identifier,int)>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationCustomViewWrapper: int getCustomBackgroundColor()>
<com.android.externalstorage.TestDocumentsProvider: android.database.Cursor queryRoots(java.lang.String[])>
<com.android.systemui.qs.QSTileHost: void onPluginDisconnected(com.android.systemui.plugins.qs.QSFactory)>
<android.graphics.perftests.RenderNodePerfTest: void testStartEnd()>
<com.android.location.provider.ActivityChangedEvent: void <init>(java.util.List)>
<com.example.android.networkusage.NetworkActivity: void onStart()>
<com.android.server.pm.PackageManagerServiceUtils: boolean isUnusedSinceTimeInMillis(long,long,long,com.android.server.pm.dex.PackageDexUsage.PackageUseInfo,long,long)>
<com.android.settingslib.search.IndexableProcessor: void init(javax.annotation.processing.ProcessingEnvironment)>
<com.android.systemui.plugins.DarkIconDispatcher: void addDarkReceiver(android.widget.ImageView)>
<com.android.gallery3d.glrenderer.GLCanvas: void translate(float,float)>
<com.android.systemui.statusbar.notification.row.NotificationInfo: void onFinishInflate()>
<com.android.server.usb.descriptors.report.TextReportCanvas: void <init>(com.android.server.usb.descriptors.UsbDescriptorParser,java.lang.StringBuilder)>
<com.android.server.display.BrightnessTracker: void persistBrightnessTrackerState()>
<com.android.systemui.egg.MLand: void addPlayer()>
<com.android.settingslib.bluetooth.PbapClientProfile: boolean isAutoConnectable()>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void keyguardGoingAway()>
<com.android.systemui.qs.tiles.AirplaneModeTile: java.lang.String composeChangeAnnouncement()>
<com.android.systemui.doze.DozeUi: void transitionTo(com.android.systemui.doze.DozeMachine.State,com.android.systemui.doze.DozeMachine.State)>
<com.android.systemui.statusbar.KeyguardAffordanceView: void setImageDrawable(android.graphics.drawable.Drawable,boolean)>
<com.android.systemui.classifier.SpeedAnglesClassifier: java.lang.String getTag()>
<com.android.systemui.doze.DozeBrightnessHostForwarder: void <init>(com.android.systemui.doze.DozeMachine.Service,com.android.systemui.doze.DozeHost)>
<com.android.systemui.statusbar.CrossFadeHelper: void fadeOut(android.view.View,long,int,java.lang.Runnable)>
<com.android.systemui.statusbar.phone.NotificationGroupManager: void onEntryAdded(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.server.usb.descriptors.tree.UsbDescriptorsDeviceNode: void addConfigDescriptorNode(com.android.server.usb.descriptors.tree.UsbDescriptorsConfigNode)>
<com.android.systemui.statusbar.policy.RemoteInputView.RemoteEditText: void onCommitCompletion(android.view.inputmethod.CompletionInfo)>
<com.android.systemui.statusbar.policy.RotationLockControllerImpl: void addCallback(com.android.systemui.statusbar.policy.RotationLockController.RotationLockControllerCallback)>
<com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer: void setChildrenExpanded(boolean)>
<com.android.systemui.statusbar.KeyguardIndicationController: void showTransientIndication(java.lang.CharSequence,android.content.res.ColorStateList)>
<com.android.settingslib.RestrictedLockUtilsInternal: com.android.settingslib.RestrictedLockUtils.EnforcedAdmin checkIfAccountManagementDisabled(android.content.Context,java.lang.String,int)>
<com.android.server.textservices.TextServicesManagerInternal: com.android.server.textservices.TextServicesManagerInternal get()>
<com.android.systemui.statusbar.policy.KeyButtonDrawable: int getIntrinsicHeight()>
<com.android.location.provider.GeocodeProvider: java.lang.String onGetFromLocationName(java.lang.String,double,double,double,double,int,android.location.GeocoderParams,java.util.List)>
<com.android.server.notification.CriticalNotificationExtractor: void initialize(android.content.Context,com.android.server.notification.NotificationUsageStats)>
<com.android.server.location.GeofenceManager: void onProviderDisabled(java.lang.String)>
<com.android.systemui.classifier.SpeedAnglesPercentageEvaluator: float evaluate(float)>
<com.android.systemui.qs.external.TileServices: void <init>(com.android.systemui.qs.QSTileHost,android.os.Looper)>
<com.android.server.OldNetworkTimeUpdateService: void systemRunning()>
<com.android.systemui.bubbles.BubbleExpandedView: void onDetachedFromWindow()>
<com.android.systemui.statusbar.notification.TextViewTransformState: boolean transformScale(com.android.systemui.statusbar.notification.TransformState)>
<com.android.systemui.pip.phone.PipMotionHelper: boolean handleMessage(android.os.Message)>
<android.perftests.utils.PerfManualStatusReporter: org.junit.runners.model.Statement apply(org.junit.runners.model.Statement,org.junit.runner.Description)>
<com.android.systemui.shared.system.SystemGestureExclusionListenerCompat: void <init>(int)>
<com.android.systemui.statusbar.notification.row.NotificationSnooze: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.recents.RecentsActivity: void onBusEvent(com.android.systemui.recents.events.ui.TaskViewDismissedEvent)>
<com.android.keyguard.KeyguardHostView: boolean dismiss(boolean,int)>
<com.android.systemui.statusbar.phone.HeadsUpAppearanceController: void onHeadsUpPinned(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.server.infra.AbstractPerUserSystemService: android.content.ComponentName getServiceComponentName()>
<com.android.systemui.ImageWallpaper: void onDestroy()>
<com.android.server.usb.descriptors.UsbACFeatureUnit: void <init>(int,byte,byte,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean installExistingPackage(android.content.ComponentName,java.lang.String,java.lang.String)>
<com.android.systemui.recents.views.TaskViewAccessibilityDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>
<com.android.systemui.plugins.VolumeDialogController: void addCallback(com.android.systemui.plugins.VolumeDialogController.Callbacks,android.os.Handler)>
<com.android.keyguard.AlphaOptimizedImageButton: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.notification.NotificationRecord: long getLastAudiblyAlertedMs()>
<com.android.systemui.plugins.DozeServicePlugin: void setDozeRequester(com.android.systemui.plugins.DozeServicePlugin.RequestDoze)>
<com.android.server.accounts.AccountManagerService: void writeAuthTokenIntoCacheLocked(com.android.server.accounts.AccountManagerService.UserAccounts,android.accounts.Account,java.lang.String,java.lang.String)>
<com.android.server.locksettings.PasswordSlotManager: java.lang.String getSlotMapDir()>
<com.android.preload.Main: void <init>(com.android.preload.ui.IUI)>
<com.android.systemui.stackdivider.ForcedResizableInfoActivityController: void <init>(android.content.Context)>
<com.android.systemui.pip.tv.PipMenuActivity: void onNewIntent(android.content.Intent)>
<com.android.systemui.util.Assert: void isNotMainThread()>
<com.android.settingslib.notification.EnableZenModeDialog: android.view.View getContentView()>
<com.android.server.location.ComprehensiveCountryDetector: android.location.Country detectCountry()>
<com.android.settingslib.net.DataUsageUtils: android.net.NetworkTemplate getMobileTemplate(android.content.Context,int)>
<com.android.server.pm.UserManagerService: android.os.Bundle getUserRestrictions(int)>
<com.android.gallery3d.exif.ExifTag: boolean setValue(long[])>
<com.android.systemui.statusbar.notification.NotificationEntryListener: void onPostEntryUpdated(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.server.pm.PackageManagerService: java.lang.String[] getSystemSharedLibraryNames()>
<com.android.systemui.Dependency.DependencyInjector: void createSystemUI(com.android.systemui.Dependency)>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: void dispatchDemoCommand(java.lang.String,android.os.Bundle)>
<com.android.server.location.ContextHubService: int unloadNanoApp(int)>
<com.android.server.accessibility.AccessibilityManagerService: java.util.List getInstalledAccessibilityServiceList(int)>
<com.android.server.storage.FileCollector: com.android.server.storage.FileCollector.MeasurementResult getMeasurementResult(android.content.Context)>
<com.android.systemui.qs.tileimpl.QSTileImpl: void handleSecondaryClick()>
<com.android.systemui.statusbar.notification.row.ExpandableView: boolean mustStayOnScreen()>
<com.android.systemui.statusbar.policy.UserSwitcherController: void removeUserId(int)>
<com.android.server.BinderCallsStatsService.Internal: android.util.ArrayMap getExportedExceptionStats()>
<com.android.server.search.SearchManagerService: java.util.List getGlobalSearchActivities()>
<com.android.systemui.statusbar.phone.EdgeBackGestureHandler: void setInsets(int,int)>
<com.android.systemui.statusbar.phone.ObservableScrollView: void setBlockFlinging(boolean)>
<javax.microedition.khronos.opengles.GL11: boolean glIsTexture(int)>
<com.android.keyguard.KeyguardUpdateMonitor: boolean getUserCanSkipBouncer(int)>
<com.android.systemui.FontSizeUtils: void updateFontSize(android.widget.TextView,int)>
<com.android.systemui.usb.UsbDebuggingSecondaryUserActivity: void onClick(android.content.DialogInterface,int)>
<com.android.systemui.util.AsyncSensorManager: boolean setOperationParameterImpl(android.hardware.SensorAdditionalInfo)>
<javax.obex.ServerRequestHandler: int onPut(javax.obex.Operation)>
<android.net.netlink.StructNdMsg: boolean isNudStateConnected(short)>
<com.android.backupconfirm.BackupRestoreConfirmation: java.lang.Object onRetainNonConfigurationInstance()>
<com.android.systemui.statusbar.phone.PanelBar: void setBouncerShowing(boolean)>
<com.android.server.locksettings.recoverablekeystore.RecoverableKeyStoreManager: java.lang.String importKey(java.lang.String,byte[])>
<android.net.ipmemorystore.OnStatusListener: void onComplete(android.net.ipmemorystore.Status)>
<com.android.systemui.shared.system.TaskStackChangeListeners: void onPinnedActivityRestartAttempt(boolean)>
<com.android.server.twilight.TwilightState: long sunriseTimeMillis()>
<com.android.server.voiceinteraction.DatabaseHelper: void <init>(android.content.Context)>
<com.android.server.locksettings.recoverablekeystore.KeySyncUtils: byte[] decryptRecoveryKey(byte[],byte[])>
<com.google.android.startop.iorap.SystemServiceUserEvent: void writeToParcel(android.os.Parcel,int)>
<com.android.providers.settings.SettingsProvider: java.lang.String settingTypeToString(int)>
<com.android.systemui.qs.QSPanel: void openDetails(java.lang.String)>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationTemplateViewWrapper: boolean shouldClipToRounding(boolean,boolean)>
<com.android.printservice.recommendation.RecommendationServiceImpl: void onConnected()>
<com.android.settingslib.inputmethod.InputMethodAndSubtypeUtil: boolean isValidNonAuxAsciiCapableIme(android.view.inputmethod.InputMethodInfo)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void showWirelessChargingAnimation(int)>
<com.android.server.LocationManagerService: void removeGnssNavigationMessageListener(android.location.IGnssNavigationMessageListener)>
<com.android.server.notification.NotificationRecord: boolean isSeen()>
<com.android.systemui.statusbar.phone.DozeScrimController: void pulse(com.android.systemui.doze.DozeHost.PulseCallback,int)>
<com.android.server.biometrics.BiometricServiceBase.BiometricServiceListener: android.hardware.biometrics.IBiometricServiceReceiverInternal getWrapperReceiver()>
<com.android.server.wallpaper.WallpaperManagerService.Lifecycle: void onBootPhase(int)>
<com.android.systemui.statusbar.phone.StatusBarIconController: void addIconGroup(com.android.systemui.statusbar.phone.StatusBarIconController.IconManager)>
<com.android.systemui.statusbar.phone.StatusBarIconController.TintedIconManager: void onIconAdded(int,java.lang.String,boolean,com.android.systemui.statusbar.phone.StatusBarIconHolder)>
<com.android.systemui.shared.plugins.PluginInstanceManager: com.android.systemui.shared.plugins.PluginInstanceManager.PluginInfo getPlugin()>
<com.android.systemui.qs.QSDetail: void setHost(com.android.systemui.qs.QSTileHost)>
<android.net.shared.IpConfigurationParcelableUtil: java.lang.String parcelAddress(java.net.InetAddress)>
<javax.microedition.khronos.opengles.GL10: void glEnableClientState(int)>
<com.android.server.pm.PackageManagerService: void deleteApplicationCacheFilesAsUser(java.lang.String,int,android.content.pm.IPackageDataObserver)>
<com.android.systemui.statusbar.CommandQueue: void onDisplayChanged(int)>
<com.android.systemui.assist.AssistManager: boolean canVoiceAssistBeLaunchedFromKeyguard()>
<com.android.server.policy.PhoneWindowManager: boolean isKeyguardTrustedLw()>
<com.android.keyguard.clock.DefaultClockController: int getPreferredY(int)>
<com.android.settingslib.deviceinfo.StorageMeasurement.MeasurementReceiver: void onDetailsChanged(com.android.settingslib.deviceinfo.StorageMeasurement.MeasurementDetails)>
<com.android.systemui.shared.system.BackgroundExecutor: java.util.concurrent.Future submit(java.util.concurrent.Callable)>
<com.android.systemui.volume.CaptionsToggleImageButton.ConfirmedTapListener: void onConfirmedTap()>
<com.android.systemui.statusbar.notification.stack.AnimationFilter: void combineFilter(com.android.systemui.statusbar.notification.stack.AnimationFilter)>
<com.android.systemui.statusbar.NotificationMediaManager: java.lang.String getMediaNotificationKey()>
<com.android.gallery3d.exif.ExifInterface: com.android.gallery3d.exif.Rational getTagRationalValue(int,int)>
<com.android.wallpapercropper.CropView: android.graphics.RectF getCrop()>
<android.multiuser.BenchmarkResults: void addDuration(long)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void onAppearAnimationFinished(boolean)>
<com.android.systemui.tuner.DemoModeFragment: boolean onOptionsItemSelected(android.view.MenuItem)>
<android.processor.view.inspector.InspectableClassModel.IntEnumEntry: java.lang.String getName()>
<com.android.systemui.classifier.FalsingLog: void dump(java.io.PrintWriter)>
<com.android.settingslib.dream.DreamBackend: int getWhenToDreamSetting()>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void setCurrentUser(int)>
<com.android.photos.views.TiledImageView: void destroy()>
<com.android.preload.actions.ReloadListAction: void <init>(com.android.preload.ClientUtils,com.android.ddmlib.IDevice,javax.swing.DefaultListModel)>
<com.android.server.accessibility.AccessibilityManagerService: void notifyAccessibilityButtonClicked(int)>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: void setScrimController(com.android.systemui.statusbar.phone.ScrimController)>
<com.android.systemui.MultiListLayout: void setDivisionView(android.view.View)>
<com.android.systemui.qs.car.CarQSFragment: void onViewCreated(android.view.View,android.os.Bundle)>
<com.android.server.testing.shadows.ShadowBackupDataOutput: java.io.ObjectOutputStream getOutputStream()>
<com.android.systemui.qs.customize.TileAdapter: void setHost(com.android.systemui.qs.QSTileHost)>
<com.android.server.LocationManagerService: void locationCallbackFinished(android.location.ILocationListener)>
<android.view.autofill.AbstractAutofillPerfTestCase: void prepareActivity()>
<com.android.server.notification.NotificationChannelExtractor: void setZenHelper(com.android.server.notification.ZenModeHelper)>
<com.android.server.AnyMotionDetector.DeviceIdleCallback: void onAnyMotionResult(int)>
<com.android.server.NetworkManagementService: void setFirewallUidRules(int,int[],int[])>
<com.android.keyguard.KeyguardAbsKeyInputView: void onAttachedToWindow()>
<com.android.systemui.statusbar.policy.ExtensionController.ExtensionBuilder: com.android.systemui.statusbar.policy.ExtensionController.Extension build()>
<com.android.server.pm.SELinuxMMAC: java.lang.String getSeInfo(android.content.pm.PackageParser.Package,boolean,int,int)>
<com.android.systemui.statusbar.NotificationMediaManager: void removeCallback(com.android.systemui.statusbar.NotificationMediaManager.MediaListener)>
<com.android.systemui.statusbar.phone.NotificationGroupAlertTransferHelper: void bind(com.android.systemui.statusbar.notification.NotificationEntryManager,com.android.systemui.statusbar.phone.NotificationGroupManager)>
<com.android.server.tv.TvInputHardwareManager.Listener: void onHardwareDeviceAdded(android.media.tv.TvInputHardwareInfo)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void animateCollapsePanels(int,boolean)>
<com.android.systemui.classifier.DirectionClassifier: java.lang.String getTag()>
<android.app.backup.BackupUtilsTest: void testIsFileSpecifiedInPathList_whenFileAndPathListDoesntContainDirectory()>
<com.android.settingslib.RestrictedLockUtils.EnforcedAdmin: boolean equals(java.lang.Object)>
<com.android.server.audio.AudioService: boolean isStreamMute(int)>
<com.android.systemui.assist.AssistOrbView: boolean hasOverlappingRendering()>
<com.android.server.biometrics.face.FaceUtils: java.lang.CharSequence getUniqueName(android.content.Context,int)>
<com.android.systemui.statusbar.phone.LockscreenWallpaper: void onWallpaperColorsChanged(android.app.WallpaperColors,int,int)>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: void onClick(android.view.View)>
<com.android.settingslib.Utils: int getBatteryLevel(android.content.Intent)>
<com.android.systemui.recents.views.grid.TaskViewFocusFrame: void onGlobalFocusChanged(android.view.View,android.view.View)>
<com.android.gallery3d.glrenderer.BitmapTexture: void <init>(android.graphics.Bitmap,boolean)>
<com.android.statsd.loadtest.MemoryDataRecorder: void startRecording(android.content.Context)>
<com.android.systemui.qs.QSCarrier: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.server.print.RemotePrintSpooler.PrintSpoolerCallbacks: void onAllPrintJobsForServiceHandled(android.content.ComponentName)>
<com.android.systemui.shared.system.ActivityManagerWrapper: java.util.List getRecentTasks(int,int)>
<android.net.ip.IpServer.Dependencies: android.net.util.InterfaceParams getInterfaceParams(java.lang.String)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: float getTranslationWhenRemoved()>
<com.android.systemui.shared.system.ActivityManagerWrapper: void registerTaskStackListener(com.android.systemui.shared.system.TaskStackChangeListener)>
<com.android.server.notification.CountdownConditionProvider: void onDestroy()>
<com.android.systemui.classifier.brightline.BrightLineFalsingManager: void onNotificatonStopDraggingDown()>
<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexfOES(float,float,float,float,float)>
<com.android.systemui.statusbar.StatusBarWifiView: void getDrawingRect(android.graphics.Rect)>
<com.android.server.LocationManagerService: boolean sendNiResponse(int,int)>
<com.android.systemui.power.PowerUI.WarningsUI: void dump(java.io.PrintWriter)>
<com.android.settingslib.bluetooth.A2dpProfile: java.lang.String getHighQualityAudioOptionLabel(android.bluetooth.BluetoothDevice)>
<com.android.packageinstaller.wear.PackageInstallerImpl: void install(java.lang.String,android.os.ParcelFileDescriptor,com.android.packageinstaller.wear.PackageInstallerImpl.InstallListener)>
<com.android.systemui.qs.QuickStatusBarHeader: void updateEverything()>
<com.android.server.slice.PinnedSliceState: void destroy()>
<javax.microedition.khronos.opengles.GL10: void glPixelStorei(int,int)>
<com.android.systemui.statusbar.policy.BluetoothController: int getMaxConnectionState(com.android.settingslib.bluetooth.CachedBluetoothDevice)>
<com.android.preload.ui.SwingUI: java.lang.Object showChoiceDialog(java.lang.String,java.lang.String,java.lang.Object[])>
<com.android.server.appop.AppOpsService: int checkOperation(int,int,java.lang.String)>
<com.android.systemui.recents.views.TaskViewHeader: void reset()>
<com.android.systemui.statusbar.phone.NavigationBarFrame: void setDeadZone(com.android.systemui.statusbar.policy.DeadZone)>
<com.android.packageinstaller.TemporaryFileManager: java.io.File getInstallStateFile(android.content.Context)>
<com.android.systemui.statusbar.policy.MobileSignalController: void <init>(android.content.Context,com.android.systemui.statusbar.policy.NetworkControllerImpl.Config,boolean,android.telephony.TelephonyManager,com.android.systemui.statusbar.policy.CallbackHandler,com.android.systemui.statusbar.policy.NetworkControllerImpl,android.telephony.SubscriptionInfo,com.android.systemui.statusbar.policy.NetworkControllerImpl.SubscriptionDefaults,android.os.Looper)>
<javax.microedition.khronos.opengles.GL10: void glLightModelxv(int,java.nio.IntBuffer)>
<com.android.settingslib.development.DevelopmentSettingsEnabler: boolean isDevelopmentSettingsEnabled(android.content.Context)>
<com.android.server.pm.PackageKeySetData: boolean isUsingDefinedKeySets()>
<com.android.server.Watchdog.OpenFdMonitor: boolean monitor()>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: void updateBackgroundColors()>
<com.android.server.biometrics.EnumerateClient: boolean onRemoved(android.hardware.biometrics.BiometricAuthenticator.Identifier,int)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setOverScrollAmount(float,boolean,boolean)>
<com.android.printspooler.model.PrintSpoolerService: void setPrintJobCancelling(android.print.PrintJobId,boolean)>
<com.android.server.audio.AudioService.VolumeController: android.os.IBinder asBinder()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void bindRow(com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<com.android.systemui.statusbar.phone.HeadsUpTouchHelper.Callback: boolean isExpanded()>
<com.android.powermodel.AttributionKey: com.google.common.collect.ImmutableSet getPackages()>
<com.android.systemui.qs.tiles.NightDisplayTile: boolean isAvailable()>
<com.android.server.display.utils.RollingBuffer: int size()>
<com.android.systemui.statusbar.NavigationBarController: com.android.systemui.statusbar.phone.NavigationBarView getNavigationBarView(int)>
<com.android.server.pm.permission.PermissionsState: boolean updatePermissionFlagsForAllPermissions(int,int,int)>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: boolean isHeadsUpAnimatingAway()>
<com.android.server.pm.InstantAppResolver: android.content.Intent sanitizeIntent(android.content.Intent)>
<com.android.server.usb.descriptors.tree.UsbDescriptorsDeviceNode: void <init>(com.android.server.usb.descriptors.UsbDeviceDescriptor)>
<com.android.keyguard.clock.AnalogClockController: void setDarkAmount(float)>
<com.android.settingslib.widget.AppEntitiesHeaderController: com.android.settingslib.widget.AppEntitiesHeaderController setHeaderTitleRes(int)>
<com.android.systemui.statusbar.phone.StatusBarIconList: int size()>
<com.android.keyguard.clock.AnalogClockController: void <init>(android.content.res.Resources,android.view.LayoutInflater,com.android.systemui.colorextraction.SysuiColorExtractor)>
<com.android.systemui.shared.system.RecentsAnimationControllerCompat: void setAnimationTargetsBehindSystemBars(boolean)>
<com.android.server.stats.StatsCompanionService.PeriodicAlarmListener: void onAlarm()>
<com.android.uiautomator.core.UiDevice: void setOrientationNatural()>
<com.android.localtransport.LocalTransport: int clearBackupData(android.content.pm.PackageInfo)>
<com.android.systemui.statusbar.KeyguardIndicationController.BaseKeyguardCallback: void onKeyguardBouncerChanged(boolean)>
<com.android.server.locksettings.SyntheticPasswordManager: byte[] fromByteArrayList(java.util.ArrayList)>
<com.android.systemui.statusbar.phone.PhoneStatusBarTransitions: void init()>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: int getSpaceForMenu()>
<com.android.systemui.statusbar.phone.DemoStatusIcons: void updateWifiState(com.android.systemui.statusbar.phone.StatusBarSignalPolicy.WifiIconState)>
<com.android.location.fused.FusionEngine: void onProviderEnabled(java.lang.String)>
<com.android.systemui.statusbar.notification.row.NotificationContentInflater.InflationCallback: void handleInflationException(android.service.notification.StatusBarNotification,java.lang.Exception)>
<com.android.systemui.shared.system.TaskStackChangeListener: void onTaskSnapshotChanged(int,com.android.systemui.shared.recents.model.ThumbnailData)>
<com.android.systemui.PluginInflateContainer: void inflateLayoutImpl()>
<android.os.ParcelPerfTest: void timeWriteInt()>
<com.android.systemui.qs.PseudoGridView: void onMeasure(int,int)>
<com.android.systemui.pip.tv.PipControlsView: void reset()>
<com.android.server.NetworkManagementService: void setUidMeteredNetworkBlacklist(int,boolean)>
<android.view.autofill.LoginTest: void testFocus_autofillUsernameOnly()>
<com.android.server.locksettings.PasswordSlotManager: void markSlotDeleted(int)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: android.view.NotificationHeaderView getNotificationHeader()>
<com.android.preload.ui.SequenceUI: com.android.preload.ui.SequenceUI input(java.lang.String)>
<com.android.systemui.statusbar.notification.collection.NotificationData: void update(com.android.systemui.statusbar.notification.collection.NotificationEntry,android.service.notification.NotificationListenerService.RankingMap,android.service.notification.StatusBarNotification)>
<com.android.server.display.DisplayManagerService: void setupSchedulerPolicies()>
<com.android.systemui.statusbar.notification.MessagingImageTransformState: void initFrom(android.view.View,com.android.systemui.statusbar.notification.TransformState.TransformInfo)>
<com.android.systemui.shared.recents.model.Task.TaskKey: void <init>(android.app.ActivityManager.RecentTaskInfo)>
<com.android.server.tv.UinputBridge: void clear(android.os.IBinder)>
<com.android.systemui.globalactions.GlobalActionsDialog: void <init>(android.content.Context,com.android.systemui.plugins.GlobalActions.GlobalActionsManager)>
<com.android.systemui.classifier.FalsingManagerImpl: void onScreenOnFromTouch()>
<android.text.TextPerfUtils: java.lang.CharSequence nextRandomParagraph(int,boolean,java.lang.String)>
<com.android.server.policy.PhoneWindowManager: void requestUserActivityNotification()>
<com.android.systemui.pip.tv.PipManager: void resumePipResizing(int)>
<com.android.preload.classdataretrieval.jdwp.PreloadDebugeeWrapper: void <init>(org.apache.harmony.jpda.tests.share.JPDATestOptions,org.apache.harmony.jpda.tests.framework.LogWriter)>
<com.google.android.startop.iorap.SystemServiceEvent: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.statusbar.policy.ZenModeControllerImpl: android.service.notification.ZenModeConfig getConfig()>
<com.android.keyguard.CarrierTextController: void updateDisplayOpportunisticSubscriptionCarrierText(boolean)>
<com.android.server.uri.UriGrantsManagerInternal: void onActivityManagerInternalAdded()>
<com.android.server.notification.ManagedServices: void populateComponentsToUnbind(boolean,java.util.Set,android.util.SparseArray,android.util.SparseArray)>
<com.android.server.statusbar.StatusBarManagerService: void onNotificationActionClick(java.lang.String,int,android.app.Notification.Action,com.android.internal.statusbar.NotificationVisibility,boolean)>
<com.android.server.textclassifier.TextClassificationManagerService.Lifecycle: void onStart()>
<com.android.systemui.recents.views.TaskViewHeader: void bindToTask(com.android.systemui.shared.recents.model.Task,boolean,boolean)>
<com.android.keyguard.clock.AnalogClockController: void onTimeZoneChanged(java.util.TimeZone)>
<com.android.systemui.statusbar.phone.BiometricUnlockController: void onBiometricAcquired(android.hardware.biometrics.BiometricSourceType)>
<javax.obex.ServerOperation: int getHeaderLength()>
<com.android.server.uri.UriGrantsManagerInternal: android.os.IBinder newUriPermissionOwner(java.lang.String)>
<com.android.systemui.AutoReinflateContainer.InflateListener: void onInflated(android.view.View)>
<com.android.server.notification.ManagedServices.ManagedServiceInfo: boolean isEnabledForCurrentProfiles()>
<com.android.server.trust.TrustAgentWrapper: void onEscrowTokenActivated(long,int)>
<com.android.gallery3d.common.BitmapUtils: byte[] compressToBytes(android.graphics.Bitmap)>
<com.android.systemui.statusbar.NotificationShelf: void setCollapsedIcons(com.android.systemui.statusbar.phone.NotificationIconContainer)>
<com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer: int getMinHeight()>
<com.android.server.wallpaper.WallpaperManagerService: android.app.WallpaperColors getWallpaperColors(int,int,int)>
<com.google.android.startop.iorap.AppLaunchEvent.ActivityLaunchFinished: boolean equals(java.lang.Object)>
<com.android.systemui.recents.ScreenPinningRequest: void onClick(android.view.View)>
<com.android.systemui.SystemUIFactory: com.android.systemui.assist.AssistManager provideAssistManager(com.android.systemui.statusbar.policy.DeviceProvisionedController,android.content.Context)>
<com.android.server.display.BrightnessMappingStrategy: void dump(java.io.PrintWriter)>
<com.android.systemui.doze.DozePauser: void <init>(android.os.Handler,com.android.systemui.doze.DozeMachine,android.app.AlarmManager,com.android.systemui.doze.AlwaysOnDisplayPolicy)>
<com.android.systemui.recents.RecentsImplProxy: void preloadRecents()>
<com.android.wallpapercropper.WallpaperCropActivity.BitmapCropTask: android.graphics.Bitmap getCroppedBitmap()>
<com.android.systemui.egg.MLand: void showSplash()>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: com.android.systemui.statusbar.notification.row.ExpandableNotificationRow getRow()>
<com.android.systemui.qs.customize.TileAdapter: boolean onFailedToRecycleView(com.android.systemui.qs.customize.TileAdapter.Holder)>
<com.android.server.location.PassiveProvider: void <init>(android.content.Context,com.android.server.location.AbstractLocationProvider.LocationProviderManager)>
<com.android.preload.actions.RunMonkeyAction: void actionPerformed(java.awt.event.ActionEvent)>
<com.android.settingslib.bluetooth.HidDeviceProfile: boolean connect(android.bluetooth.BluetoothDevice)>
<com.android.systemui.statusbar.phone.StatusBarIconControllerImpl: void setIcon(java.lang.String,int,java.lang.CharSequence)>
<com.android.server.biometrics.BiometricServiceBase.AuthenticationClientImpl: void <init>(android.content.Context,com.android.server.biometrics.BiometricServiceBase.DaemonWrapper,long,android.os.IBinder,com.android.server.biometrics.BiometricServiceBase.ServiceListener,int,int,long,boolean,java.lang.String,int,boolean)>
<com.android.photos.views.TiledImageRenderer: boolean draw(com.android.gallery3d.glrenderer.GLCanvas)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setApplicationRestrictions(android.content.ComponentName,java.lang.String,java.lang.String,android.os.Bundle)>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: void connect(com.android.settingslib.bluetooth.CachedBluetoothDevice)>
<android.media.MediaPlayer2: android.os.PersistableBundle getMetrics()>
<com.android.server.usb.descriptors.UsbInterfaceDescriptor: int getUsbClass()>
<javax.microedition.khronos.opengles.GL11: void glPointParameterxv(int,int[],int)>
<com.android.systemui.statusbar.policy.FlashlightControllerImpl: void removeCallback(com.android.systemui.statusbar.policy.FlashlightController.FlashlightListener)>
<com.android.systemui.statusbar.notification.NotificationInterruptionStateProvider: void setDisableNotificationAlerts(boolean)>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: void onPanelCollapsed()>
<com.android.server.DynamicSystemService: android.gsi.GsiProgress getInstallationProgress()>
<com.android.systemui.statusbar.notification.NotificationIconDozeHelper: void <init>(android.content.Context)>
<com.android.settingslib.bluetooth.HidDeviceProfile: void setPreferred(android.bluetooth.BluetoothDevice,boolean)>
<com.android.systemui.statusbar.phone.KeyguardBouncer: int getTop()>
<javax.microedition.khronos.opengles.GL10: void glLoadMatrixf(java.nio.FloatBuffer)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void startFinishDozeAnimation()>
<com.android.server.appbinding.AppBindingService.Lifecycle: void onStart()>
<com.android.systemui.recents.views.TaskStackView: void setRelativeFocusedTask(boolean,boolean,boolean)>
<com.android.settingslib.inputmethod.InputMethodPreference: android.view.inputmethod.InputMethodInfo getInputMethodInfo()>
<com.android.server.biometrics.BiometricServiceBase: java.lang.String getLockoutResetIntent()>
<com.android.server.utils.UserTokenWatcher: void acquire(android.os.IBinder,java.lang.String,int)>
<com.android.server.notification.NotificationRecord: void setOverrideGroupKey(java.lang.String)>
<com.android.location.fused.FusedLocationService: void onDestroy()>
<com.android.systemui.assist.ui.InvocationLightsView: void setColors(java.lang.Integer)>
<com.android.systemui.statusbar.policy.SensorPrivacyControllerImpl: void addCallback(android.hardware.SensorPrivacyManager.OnSensorPrivacyChangedListener)>
<com.android.server.ConnectivityService: android.net.Network getActiveNetworkForUid(int,boolean)>
<com.android.systemui.statusbar.phone.DarkIconDispatcherImpl: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.usb.descriptors.UsbDescriptorParser: boolean hasStorageInterface()>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getPermissionGrantState(android.content.ComponentName,java.lang.String,java.lang.String,java.lang.String)>
<com.android.server.autofill.ui.AutoFillUI.AutoFillUiCallback: void fill(int,int,android.service.autofill.Dataset)>
<com.android.server.pm.PackageInstallerSession: void <init>(com.android.server.pm.PackageInstallerService.InternalCallback,android.content.Context,com.android.server.pm.PackageManagerService,com.android.server.pm.PackageSessionProvider,android.os.Looper,com.android.server.pm.StagingManager,int,int,java.lang.String,int,android.content.pm.PackageInstaller.SessionParams,long,java.io.File,java.lang.String,boolean,boolean,boolean,int[],int,boolean,boolean,boolean,int,java.lang.String)>
<com.android.server.NsdService.DaemonConnection: boolean execute(java.lang.Object[])>
<com.android.systemui.statusbar.hvac.AnimatedTemperatureView: void onDetachedFromWindow()>
<com.android.server.accessibility.FingerprintGestureDispatcher: void updateClientList(java.util.List)>
<com.android.server.IntentResolver: boolean isFilterVerified(android.content.IntentFilter)>
<com.android.systemui.statusbar.phone.PhoneStatusBarPolicy: void onConfigChanged(android.service.notification.ZenModeConfig)>
<com.android.server.pm.PackageManagerService: void deleteCompilerPackageStats(java.lang.String)>
<android.media.MediaPlayer2: java.lang.Object notifyWhenCommandLabelReached(java.lang.Object)>
<com.android.server.policy.IconUtilities: android.graphics.ColorFilter getDisabledColorFilter()>
<com.android.systemui.statusbar.ScrimView: float getViewAlpha()>
<com.android.server.biometrics.ClientMonitor: int start()>
<com.android.server.inputmethod.InputMethodManagerService: int getInputMethodWindowVisibleHeight()>
<com.android.systemui.qs.AlphaControlledSignalTileView: void <init>(android.content.Context)>
<com.android.server.biometrics.BiometricServiceBase.ServiceListener: void onAcquired(long,int,int)>
<com.android.keyguard.clock.BubbleClockController: void onTimeTick()>
<com.android.systemui.util.AsyncSensorManager: android.hardware.SensorDirectChannel createDirectChannelImpl(android.os.MemoryFile,android.hardware.HardwareBuffer)>
<com.android.systemui.statusbar.DragDownHelper: void <init>(android.content.Context,android.view.View,com.android.systemui.ExpandHelper.Callback,com.android.systemui.statusbar.DragDownHelper.DragDownCallback)>
<com.android.server.usb.UsbAlsaDevice: void <init>(android.media.IAudioService,int,int,java.lang.String,boolean,boolean,boolean,boolean)>
<com.android.systemui.plugins.VolumeDialogController: boolean hasVibrator()>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onHasLockscreenWallpaperChanged(boolean)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void drawTexture(com.android.gallery3d.glrenderer.BasicTexture,float[],int,int,int,int)>
<com.android.systemui.statusbar.policy.HotspotControllerImpl: boolean isHotspotEnabled()>
<com.android.server.pm.permission.PermissionSettings: void dumpPermissions(java.io.PrintWriter,java.lang.String,android.util.ArraySet,boolean,com.android.server.pm.DumpState)>
<com.android.printspooler.widget.PrintContentView: void setOptionsStateChangeListener(com.android.printspooler.widget.PrintContentView.OptionsStateChangeListener)>
<com.android.server.content.SyncStorageEngine: void clearAndReadState()>
<com.android.systemui.doze.DozeLog: void tracePulseTouchDisabledByProx(android.content.Context,boolean)>
<com.android.systemui.globalactions.GlobalActionsLayout: int getCurrentLayoutDirection()>
<com.android.server.policy.WindowManagerPolicy.WindowManagerFuncs: void notifyKeyguardTrustedChanged()>
<com.android.systemui.volume.VolumeDialogComponent: void onTuningChanged(java.lang.String,java.lang.String)>
<com.android.settingslib.applications.AppUtils: boolean hasPreferredActivities(android.content.pm.PackageManager,java.lang.String)>
<android.media.Session2Link: int hashCode()>
<com.android.server.usb.descriptors.UsbEndpointDescriptor: int getEndpointAddress()>
<com.android.systemui.statusbar.phone.ButtonDispatcher: void setLongClickable(boolean)>
<com.android.systemui.statusbar.notification.row.AppOpsInfo: android.view.View getContentView()>
<com.android.server.timedetector.TimeDetectorStrategyCallbackImpl: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.DozeParameters: boolean getVibrateOnSigMotion()>
<com.android.server.textclassifier.TextClassificationManagerService: void onDetectLanguage(android.view.textclassifier.TextClassificationSessionId,android.view.textclassifier.TextLanguage.Request,android.service.textclassifier.ITextClassifierCallback)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void onQsExpansionChanged(float)>
<com.android.systemui.statusbar.phone.NotificationIconContainer: void setIsolatedIconLocation(android.graphics.Rect,boolean)>
<com.android.systemui.statusbar.NotificationRemoteInputManager: void bindRow(com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<com.android.settingslib.widget.ActionButtonsPreference: com.android.settingslib.widget.ActionButtonsPreference setButton4Enabled(boolean)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onTrustChanged(int)>
<com.android.systemui.bubbles.animation.StackAnimationController: android.graphics.PointF getStackPosition()>
<com.android.server.LocationManagerService: android.location.LocationTime getGnssTimeMillis()>
<com.android.server.locksettings.LockSettingsService: void onCleanupUser(int)>
<com.android.systemui.util.wakelock.WakeLock: void release(java.lang.String)>
<com.android.systemui.statusbar.phone.StatusBarTouchableRegionManager: void onOverlayChanged()>
<com.android.server.pm.IntentFilterVerificationState: void <init>(int,int,java.lang.String)>
<com.android.server.locksettings.SyntheticPasswordManager: void migrateFrpPasswordLocked(long,android.content.pm.UserInfo,int)>
<com.android.server.notification.NotificationManagerService.NotificationAssistants: boolean checkType(android.os.IInterface)>
<com.android.systemui.statusbar.phone.BiometricUnlockController: void onFinishedGoingToSleep(int)>
<com.android.keyguard.KeyguardSliceView: void onAttachedToWindow()>
<com.android.systemui.statusbar.phone.RotationContextButton: boolean acceptRotationProposal()>
<com.android.systemui.DessertCaseView.RescalingContainer: void setDarkness(float)>
<com.android.systemui.statusbar.notification.row.ExpandableView: int getActualHeight()>
<com.android.systemui.shared.system.TaskStackChangeListener: void onActivityLaunchOnSecondaryDisplayRerouted(android.app.ActivityManager.RunningTaskInfo)>
<com.android.systemui.assist.AssistOrbContainer: void <init>(android.content.Context)>
<com.android.systemui.util.InjectionInflationController: android.view.LayoutInflater injectable(android.view.LayoutInflater)>
<com.android.server.PersistentDataBlockService: void onStart()>
<com.android.systemui.power.PowerUI.WarningsUI: void dismissHighTemperatureWarning()>
<com.android.systemui.biometrics.FaceDialogView: int getDelayAfterAuthenticatedDurationMs()>
<com.android.systemui.pip.tv.PipControlsView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.systemui.pip.phone.PipAccessibilityInteractionConnection: void performAccessibilityAction(long,int,android.os.Bundle,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long)>
<com.android.systemui.statusbar.policy.EthernetSignalController: com.android.systemui.statusbar.policy.SignalController.State cleanState()>
<com.android.server.notification.PreferencesHelper: org.json.JSONObject dumpJson(com.android.server.notification.NotificationManagerService.DumpFilter)>
<com.android.uiautomator.testrunner.UiAutomatorTestRunner: void removeTestListener(junit.framework.TestListener)>
<com.android.systemui.qs.PseudoGridView.ViewGroupAdapterBridge: void onChanged()>
<com.android.settingslib.CustomEditTextPreference.CustomPreferenceDialogFragment: com.android.settingslib.CustomEditTextPreference.CustomPreferenceDialogFragment newInstance(java.lang.String)>
<com.android.server.pm.ShortcutService: boolean setDynamicShortcuts(java.lang.String,android.content.pm.ParceledListSlice,int)>
<com.android.systemui.pip.phone.PipDismissViewController: void showDismissTarget()>
<com.android.server.NetworkManagementService: void stopInterfaceForwarding(java.lang.String,java.lang.String)>
<com.android.settingslib.bluetooth.LocalBluetoothProfile: int getProfileId()>
<com.android.settingslib.animation.DisappearAnimationUtils: void <init>(android.content.Context)>
<com.android.systemui.statusbar.EmptyShadeView: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.server.appprediction.AppPredictionPerUserService: void onServiceDied(com.android.server.appprediction.RemoteAppPredictionService)>
<com.android.server.notification.NotificationUsageStats: void registerDismissedByUser(com.android.server.notification.NotificationRecord)>
<com.android.systemui.classifier.brightline.TimeLimitedMotionEventBuffer: boolean equals(java.lang.Object)>
<com.android.systemui.pip.phone.PipMenuActivity: void onCreate(android.os.Bundle)>
<com.android.settingslib.volume.MediaSessions.Callbacks: void onRemoteRemoved(android.media.session.MediaSession.Token)>
<com.android.settingslib.core.lifecycle.ObservableDialogFragment: void onCreate(android.os.Bundle)>
<com.android.systemui.qs.tiles.HotspotTile: java.lang.CharSequence getTileLabel()>
<com.android.uiautomator.core.UiDevice: void removeWatcher(java.lang.String)>
<com.android.systemui.statusbar.car.hvac.TemperatureTextView: int getAreaId()>
<com.android.server.accessibility.AccessibilityManagerService: void sendAccessibilityEvent(android.view.accessibility.AccessibilityEvent,int)>
<com.android.statsd.loadtest.PerfDataRecorder: void writeData(android.content.Context,java.lang.String,java.lang.String,java.lang.StringBuilder)>
<com.android.server.notification.SystemConditionProviderService: java.lang.String ts(long)>
<com.android.statsd.loadtest.DisplayProtoUtils: java.lang.String getDateStr(long)>
<com.android.systemui.recents.model.HighResThumbnailLoader: void onTaskInvisible(com.android.systemui.shared.recents.model.Task)>
<com.android.server.usb.descriptors.UsbUnknown: void <init>(int,byte)>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb: java.lang.Long getRecoveryServiceCertSerial(int,int,java.lang.String)>
<com.android.server.GestureLauncherService: boolean isCameraLiftTriggerEnabled(android.content.res.Resources)>
<com.android.commands.hid.Device: void close()>
<android.media.Session2Command: android.os.Bundle getCustomExtras()>
<com.android.systemui.statusbar.StatusBarIconView: float getDotAppearAmount()>
<lockedregioncodeinjection.LockTarget: java.lang.String getPreOwner()>
<com.android.uiautomator.core.Configurator: com.android.uiautomator.core.Configurator setScrollAcknowledgmentTimeout(long)>
<com.android.server.pm.PackageManagerService: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int,int)>
<com.android.server.locksettings.LockSettingsStrongAuth: void <init>(android.content.Context)>
<com.android.server.audio.AudioService: void setRingerModeExternal(int,java.lang.String)>
<com.android.systemui.statusbar.phone.BarTransitions.BarBackgroundDrawable: void setFrame(android.graphics.Rect)>
<com.android.systemui.qs.TouchAnimator.ListenerAdapter: void onAnimationStarted()>
<com.android.server.pm.dex.ViewCompiler: boolean compileLayouts(android.content.pm.PackageParser.Package)>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.ui.RecentsGrowingEvent)>
<com.android.server.usb.descriptors.UsbACMidiEndpoint: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>
<com.android.systemui.statusbar.notification.stack.AnimationProperties: com.android.systemui.statusbar.notification.stack.AnimationProperties resetCustomInterpolators()>
<com.android.statementservice.retriever.Statement: com.android.statementservice.retriever.AbstractAsset getSource()>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: boolean isEmergencyOnly()>
<com.android.server.notification.PreferencesHelper: void clearData(java.lang.String,int)>
<com.android.server.notification.NotificationUsageStats: void emit()>
<com.android.systemui.statusbar.notification.stack.AmbientState: void setLayoutMinHeight(int)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: int getFooterViewHeight()>
<com.android.server.statusbar.StatusBarManagerService: void onNotificationSmartSuggestionsAdded(java.lang.String,int,int,boolean,boolean)>
<com.android.systemui.statusbar.notification.NotificationAlertingManager: void setHeadsUpManager(com.android.systemui.statusbar.policy.HeadsUpManager)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setCrossProfileCallerIdDisabled(android.content.ComponentName,boolean)>
<com.android.server.accounts.AccountManagerService: void updateCredentials(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String,boolean,android.os.Bundle)>
<com.android.server.os.SchedulingPolicyService: int requestPriority(int,int,int,boolean)>
<com.android.server.policy.GlobalActionsProvider.GlobalActionsListener: void onGlobalActionsAvailableChanged(boolean)>
<com.android.packageinstaller.wear.WearPackageIconProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)>
<com.android.photos.views.BlockingGLTextureView: void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int)>
<com.android.systemui.settings.ToggleSliderView: int getValue()>
<com.android.systemui.recents.misc.SystemServicesProxy: void registerDockedStackListener(android.view.IDockedStackListener)>
<javax.microedition.khronos.opengles.GL10: void glLogicOp(int)>
<android.text.StaticLayoutPerfTest: void testDraw_FixedText_NoStyled()>
<com.android.server.NetworkScorerAppManager: void <init>(android.content.Context)>
<com.android.server.infra.AbstractMasterSystemService: void updateCachedServiceLocked(int)>
<com.android.server.ConnectivityService: int getRestoreDefaultNetworkDelay(int)>
<com.android.server.appprediction.AppPredictionPerUserService: void notifyLaunchLocationShownLocked(android.app.prediction.AppPredictionSessionId,java.lang.String,android.content.pm.ParceledListSlice)>
<com.android.systemui.statusbar.NotificationUiAdjustment: boolean needReinflate(com.android.systemui.statusbar.NotificationUiAdjustment,com.android.systemui.statusbar.NotificationUiAdjustment)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow.OnExpandClickListener: void onExpandClicked(com.android.systemui.statusbar.notification.collection.NotificationEntry,boolean)>
<com.android.systemui.statusbar.notification.stack.AmbientState: void setIntrinsicPadding(int)>
<com.android.server.audio.MediaFocusControl: boolean duckPlayers(com.android.server.audio.FocusRequester,com.android.server.audio.FocusRequester,boolean)>
<com.android.systemui.statusbar.phone.StatusBar: void onExpandAnimationFinished(boolean)>
<com.android.systemui.settings.ToggleSlider.Listener: void onChanged(com.android.systemui.settings.ToggleSlider,boolean,boolean,int,boolean)>
<com.android.systemui.stackdivider.Divider: boolean isMinimized()>
<com.android.systemui.plugins.qs.QSTile: void setDetailListening(boolean)>
<com.android.settingslib.bluetooth.BluetoothEventManager: void unregisterCallback(com.android.settingslib.bluetooth.BluetoothCallback)>
<com.android.settingslib.animation.AppearAnimationUtils: void createAnimation(android.view.View,long,long,float,boolean,android.view.animation.Interpolator,java.lang.Runnable)>
<com.android.photos.views.TiledImageRenderer: int suggestedTileSize(android.content.Context)>
<com.android.systemui.statusbar.policy.SmartReplyConstants: boolean getShowInHeadsUp()>
<com.android.server.locksettings.LockSettingsService: void setRecoveryStatus(java.lang.String,int)>
<com.android.systemui.statusbar.phone.ButtonInterface: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.android.systemui.recents.views.AnimateableViewBounds: android.graphics.Rect getClipBounds()>
<com.android.systemui.statusbar.policy.HeadsUpManager.HeadsUpEntry: int compareTo(com.android.systemui.statusbar.AlertingNotificationManager.AlertEntry)>
<javax.obex.Operation: long getLength()>
<com.android.systemui.plugins.PluginEnablerImpl: void setDisabled(android.content.ComponentName,int)>
<com.android.systemui.util.leak.GarbageMonitor.Service: void start()>
<com.android.systemui.ConfigurationChangedReceiver: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.packageinstaller.television.UninstallAppProgressFragment: void setUsersButtonVisible(boolean)>
<com.android.systemui.statusbar.policy.HeadsUpManager: void <init>(android.content.Context)>
<com.android.server.locksettings.recoverablekeystore.storage.ApplicationKeyStorage: void deleteEntry(int,int,java.lang.String)>
<com.android.systemui.recents.views.FixedSizeImageView: void invalidate()>
<com.android.systemui.statusbar.phone.LightBarTransitionsController: void <init>(android.content.Context,com.android.systemui.statusbar.phone.LightBarTransitionsController.DarkIntensityApplier)>
<com.android.server.ConnectivityService: void <init>(android.content.Context,android.os.INetworkManagementService,android.net.INetworkStatsService,android.net.INetworkPolicyManager,android.net.IDnsResolver,android.net.metrics.IpConnectivityLog,android.net.INetd)>
<com.android.location.provider.ActivityRecognitionProviderWatcher: com.android.location.provider.ActivityRecognitionProviderWatcher getInstance()>
<com.android.server.location.GnssSatelliteBlacklistHelperTest: void blacklistOf2Satellites_callbackIsCalled()>
<com.android.systemui.qs.car.CarQSFragment: void setOverscrolling(boolean)>
<com.android.server.content.SyncManager: java.util.List getPeriodicSyncs(com.android.server.content.SyncStorageEngine.EndPoint)>
<com.android.location.fused.FusionEngine: void switchUser()>
<com.android.settingslib.bluetooth.PbapClientProfile: int getConnectionStatus(android.bluetooth.BluetoothDevice)>
<com.android.server.NsdService: com.android.server.NsdService create(android.content.Context)>
<com.android.settingslib.TwoTargetPreference: void setIconSize(int)>
<com.android.systemui.statusbar.phone.NavigationPrototypeController: void register()>
<com.android.systemui.classifier.FalsingManagerImpl: void onNotificationDismissed()>
<com.android.systemui.statusbar.phone.NavigationHandle: void setDarkIntensity(float)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void setTextureParameters(com.android.gallery3d.glrenderer.BasicTexture)>
<com.android.keyguard.KeyguardClockSwitch: void setDarkAmount(float)>
<com.android.server.usb.descriptors.Usb20ASFormatII: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>
<com.android.systemui.plugins.FalsingManager: void onCameraOn()>
<com.android.server.audio.AudioService: void adjustStreamVolume(int,int,int,java.lang.String,java.lang.String,int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onExpandingFinished()>
<com.android.settingslib.applications.PermissionsSummaryHelper.PermissionsResultCallback: void onAppWithPermissionsCountsResult(int,int)>
<com.android.systemui.statusbar.phone.StatusBarWindowController: android.view.ViewGroup getStatusBarView()>
<com.android.systemui.shared.system.QuickStepContract: float getWindowCornerRadius(android.content.res.Resources)>
<android.graphics.perftests.PathPerfTest: void testAddReset()>
<android.widget.TextViewPrecomputedTextPerfTest: void testSetText_PrecomputedText_Selectable()>
<com.android.server.usb.UsbAlsaJackDetector: boolean isInputJackConnected()>
<com.android.server.pm.PackageManagerService: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>
<com.android.settingslib.notification.ZenDurationDialog: void onClickTimeButton(android.view.View,com.android.settingslib.notification.ZenDurationDialog.ConditionTag,boolean,int)>
<com.android.server.DynamicSystemService: boolean commit()>
<com.android.systemui.recents.OverviewProxyService: void startConnectionToCurrentUser()>
<com.android.server.biometrics.iris.IrisService: com.android.server.biometrics.Constants getConstants()>
<com.android.settingslib.media.MediaManager.MediaDeviceCallback: void onDeviceRemoved(com.android.settingslib.media.MediaDevice)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onHeadsUpUnPinned(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.server.utils.UserTokenWatcher: void release(android.os.IBinder,int)>
<com.google.android.startop.iorap.AppLaunchEvent.ActivityRecordProtoParcelable: void write(android.os.Parcel,byte[],int)>
<com.android.server.appprediction.AppPredictionManagerService: void enforceCallingPermissionForManagement()>
<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService.PackageFreezer freezePackageForInstall(java.lang.String,int,int,java.lang.String)>
<com.android.server.timedetector.SimpleTimeDetectorStrategy: void dump(java.io.PrintWriter,java.lang.String[])>
<com.android.settingslib.applications.ApplicationsState.CompoundFilter: boolean filterApp(com.android.settingslib.applications.ApplicationsState.AppEntry)>
<com.android.keyguard.KeyguardHostView: void onSecurityModeChanged(com.android.keyguard.KeyguardSecurityModel.SecurityMode,boolean)>
<com.android.systemui.shared.system.PackageManagerWrapper: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)>
<com.android.systemui.statusbar.KeyguardIndicationController: void setRestingIndication(java.lang.String)>
<com.android.systemui.statusbar.phone.StatusBarIconController.TintedIconManager: com.android.systemui.statusbar.phone.DemoStatusIcons createDemoStatusIcons()>
<com.android.systemui.qs.QSContainerImpl: void setExpansion(float)>
<android.media.MediaSession2.ControllerInfo: android.os.Bundle getConnectionHints()>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: void setDebugThrowable(java.lang.Throwable)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector focused(boolean)>
<com.android.systemui.util.leak.GarbageMonitor.ProcessMemInfo: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.utils.UserTokenWatcher: void <init>(com.android.server.utils.UserTokenWatcher.Callback,android.os.Handler,java.lang.String)>
<com.android.server.adb.AdbDebuggingManager: void <init>(android.content.Context,java.lang.String,java.io.File)>
<com.android.systemui.keyguard.WakefulnessLifecycle: void dispatchFinishedWakingUp()>
<com.android.systemui.statusbar.policy.RemoteInputView: java.lang.CharSequence getText()>
<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexivOES(java.nio.IntBuffer)>
<javax.obex.ServerRequestHandler: int onDelete(javax.obex.HeaderSet,javax.obex.HeaderSet)>
<com.android.systemui.statusbar.policy.RotationLockControllerImpl: void setRotationLocked(boolean)>
<com.android.server.usb.descriptors.Usb20ASGeneral: byte getChannelNames()>
<com.android.systemui.DependencyProvider: com.android.systemui.shared.system.ActivityManagerWrapper provideActivityManagerWrapper()>
<com.android.systemui.globalactions.GlobalActionsDialog.MyAdapter: boolean areAllItemsEnabled()>
<com.android.systemui.statusbar.notification.stack.AmbientState: boolean isAppearing()>
<com.android.systemui.HardwareBgDrawable: void setAlpha(int)>
<com.android.server.policy.WindowManagerPolicy: void screenTurningOn(com.android.server.policy.WindowManagerPolicy.ScreenOnListener)>
<com.android.systemui.recents.views.TaskStackView: void setSystemInsets(android.graphics.Rect)>
<com.android.commands.bu.AdbBackupTest: void testRun_whenUserSpecified_callsBackupManagerAsSpecifiedUser()>
<com.android.systemui.classifier.LengthCountClassifier: java.lang.String getTag()>
<com.android.systemui.shared.recents.model.IconLoader.DefaultIconLoader: void <init>(android.content.Context,com.android.systemui.shared.recents.model.TaskKeyLruCache,android.util.LruCache)>
<com.android.server.appop.AppOpsService: void getHistoricalOps(int,java.lang.String,java.util.List,long,long,int,android.os.RemoteCallback)>
<android.media.DataSourceDesc: java.lang.String toString()>
<com.android.systemui.recents.RecentsImplementation: void showRecentApps(boolean)>
<com.android.systemui.classifier.FalsingLog: void wLogcat(java.lang.String,java.lang.String)>
<com.android.server.pm.permission.BasePermission: boolean isPermission(android.content.pm.PackageParser.Permission)>
<com.android.systemui.qs.external.TileColorPicker: int getColor(int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onUnlockHintFinished()>
<com.android.server.accessibility.MagnificationController: void unregisterAll()>
<android.net.NetworkMonitorManager: boolean launchCaptivePortalApp()>
<com.android.server.biometrics.EnumerateClient: int statsAction()>
<com.android.server.locksettings.LockSettingsService: void unregisterStrongAuthTracker(android.app.trust.IStrongAuthTracker)>
<com.android.systemui.doze.DozeSensors: void ignoreTouchScreenSensorsSettingInterferingWithDocking(boolean)>
<com.android.server.NetworkManagementService: void setInterfaceConfig(java.lang.String,android.net.InterfaceConfiguration)>
<com.android.systemui.assist.ui.EdgeLight: void <init>(com.android.systemui.assist.ui.EdgeLight)>
<com.android.systemui.statusbar.policy.HeadsUpManager: boolean isTrackingHeadsUp()>
<com.android.systemui.statusbar.phone.StatusBar: boolean interceptMediaKey(android.view.KeyEvent)>
<com.android.systemui.globalactions.GlobalActionsGridLayout: float getAnimationOffsetX()>
<com.android.server.slice.SliceFullAccessList: void <init>(android.content.Context)>
<com.android.systemui.statusbar.notification.row.NotificationGuts: boolean hasOverlappingRendering()>
<com.android.systemui.volume.CarVolumeDialogImpl: void destroy()>
<com.android.statsd.loadtest.DisplayProtoUtils: void displayGaugeMetricData(java.lang.StringBuilder,com.android.os.StatsLog.StatsLogReport)>
<android.util.ArraySetPerfTest: void testRemoveIf_Small_Base()>
<com.android.settingslib.bluetooth.HidDeviceProfile: boolean isProfileReady()>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: void reset()>
<com.android.server.ConnectivityService: boolean avoidBadWifi()>
<com.android.systemui.statusbar.policy.SecurityControllerImpl: void <init>(android.content.Context,android.os.Handler,com.android.systemui.statusbar.policy.SecurityController.SecurityControllerCallback)>
<com.android.server.biometrics.BiometricServiceBase: void updateActiveGroup(int,java.lang.String)>
<com.android.systemui.appops.AppOpItem: long getTimeStarted()>
<com.android.systemui.globalactions.GlobalActionsDialog.MyAdapter: boolean shouldBeSeparated(int)>
<com.android.server.media.MediaSessionRecord: android.media.AudioAttributes getAudioAttributes()>
<com.android.systemui.bubbles.BubbleController: boolean hasBubbles()>
<com.android.server.timedetector.TimeDetectorStrategyCallbackImpl: long elapsedRealtimeMillis()>
<com.android.systemui.statusbar.phone.NavBarTintController: boolean isEnabled(android.content.Context,int)>
<com.android.server.location.GnssNavigationMessageProvider: void unregisterFromService()>
<com.android.systemui.volume.Events.Callback: void writeEvent(long,int,java.lang.Object[])>
<com.android.server.usb.descriptors.UsbASFormat: int[] getSampleRates()>
<com.android.settingslib.net.UidDetailProvider: void clearCache()>
<com.android.server.hdmi.HdmiCecMessage: boolean equals(java.lang.Object)>
<com.android.server.pm.PackageSetting: boolean isUpdatedSystem()>
<com.android.systemui.recents.views.TaskViewTransform: void fillIn(com.android.systemui.recents.views.TaskView)>
<com.android.keyguard.KeyguardAbsKeyInputView: com.android.keyguard.KeyguardSecurityCallback getCallback()>
<com.android.server.biometrics.face.FaceConstants: java.lang.String tagHalDied()>
<com.android.systemui.statusbar.NotificationLockscreenUserManagerImpl: int getCurrentUserId()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setSystemSetting(android.content.ComponentName,java.lang.String,java.lang.String)>
<javax.obex.ServerSession: javax.obex.ObexTransport getTransport()>
<com.android.server.infra.FrameworkResourcesServiceNameResolver: java.lang.String getDefaultServiceName(int)>
<android.multiuser.UserLifecycleTests: void switchUser()>
<com.android.server.pm.UserManagerService: android.content.pm.UserInfo createProfileForUser(java.lang.String,int,int,java.lang.String[])>
<com.android.server.pm.PackageInstallerSession: void removeChildSessionId(int)>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: void onTouchMove(float)>
<android.app.backup.BackupUtilsTest: void setUp()>
<com.android.systemui.statusbar.notification.row.NotificationBackgroundView: void setBackgroundTop(int)>
<com.android.systemui.classifier.FalsingManagerImpl: void onNotificationActive()>
<com.android.commands.svc.PowerCommand: java.lang.String shortHelp()>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.ui.DismissAllTaskViewsEvent)>
<com.android.systemui.statusbar.notification.row.NotificationGuts: void drawableStateChanged()>
<com.android.systemui.statusbar.phone.StatusBar: int computeBarMode(int,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.String[] getLockTaskPackages(android.content.ComponentName)>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean isInSettings()>
<com.android.systemui.statusbar.policy.FlashlightControllerImpl: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.StatusBarWindowController: void add(android.view.ViewGroup,int)>
<android.media.filterfw.samples.CameraEffectsRecordingSample: void onCreate(android.os.Bundle)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: com.android.systemui.statusbar.notification.row.ExpandableNotificationRow getHeadsUpAnimationView()>
<com.android.server.pm.dex.PackageDexUsage.DexUseInfo: java.lang.String getClassLoaderContext()>
<javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLSurface eglCreatePbufferSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int[])>
<com.android.systemui.SwipeHelper: void setTranslation(android.view.View,float)>
<javax.obex.ObexHelper: long convertToLong(byte[])>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void setAffordanceHelper(com.android.systemui.statusbar.phone.KeyguardAffordanceHelper)>
<com.android.settingslib.bluetooth.BluetoothCallback: void onScanningStateChanged(boolean)>
<com.android.settingslib.development.DeveloperOptionsPreferenceController: void onDeveloperOptionsEnabled()>
<com.android.uiautomator.core.UiDevice: com.android.uiautomator.core.UiDevice getInstance()>
<com.android.settingslib.deviceinfo.AbstractBluetoothAddressPreferenceController: void displayPreference(androidx.preference.PreferenceScreen)>
<com.android.settingslib.net.NetworkCycleChartDataLoader.Builder: void <init>(android.content.Context)>
<com.android.keyguard.KeyguardAbsKeyInputView: void reset()>
<com.android.server.autofill.AutofillManagerService: void <init>(android.content.Context)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.util.List getOverrideApns(android.content.ComponentName)>
<com.android.server.GraphicsStatsService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.statusbar.notification.NotificationClicker: void <init>(com.android.systemui.statusbar.phone.ShadeController,com.android.systemui.bubbles.BubbleController,com.android.systemui.statusbar.notification.NotificationActivityStarter)>
<com.android.systemui.statusbar.phone.ShadeController: boolean isDozing()>
<com.android.keyguard.EmergencyButton: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.printspooler.ui.PageAdapter: android.print.PageRange[] getSelectedPages()>
<com.android.systemui.appops.AppOpsControllerImpl: void setBGHandler(java.lang.Object)>
<com.android.systemui.statusbar.phone.NotificationIconAreaController: void updateNotificationIcons()>
<com.android.location.fused.FusionEngine: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice getPackagesHoldingPermissions(java.lang.String[],int,int)>
<com.android.systemui.statusbar.phone.StatusBar: void toggleKeyboardShortcuts(int)>
<com.android.server.notification.NotificationRecord: void setRecentlyIntrusive(boolean)>
<com.android.server.wallpaper.WallpaperManagerService: void setInAmbientMode(boolean,long)>
<com.android.server.notification.PropConfig: java.lang.String[] getStringArray(android.content.Context,java.lang.String,int)>
<com.android.server.DeviceIdleController: java.lang.String[] getUserPowerWhitelistInternal()>
<com.android.systemui.qs.NonInterceptingScrollView: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.systemui.statusbar.policy.ZenModeControllerImpl: void setZen(int,android.net.Uri,java.lang.String)>
<android.view.textclassifier.TextClassifierPerfTest: java.util.Collection data()>
<android.os.ParcelArrayPerfTest: void <init>(int)>
<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin.OnMenuEventListener: void onMenuReset(android.view.View)>
<com.android.systemui.statusbar.policy.SensorPrivacyController.OnSensorPrivacyChangedListener: void onSensorPrivacyChanged(boolean)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setUserSetupComplete(boolean)>
<com.android.systemui.statusbar.KeyguardIndicationController: void hideTransientIndication()>
<com.android.keyguard.KeyguardSecurityView: boolean disallowInterceptTouch(android.view.MotionEvent)>
<com.android.systemui.statusbar.phone.StatusBarWindowView.LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.usb.descriptors.Usb10ASFormatI: byte getBitResolution()>
<com.android.systemui.statusbar.notification.collection.NotificationData: com.android.systemui.statusbar.notification.collection.NotificationEntry remove(java.lang.String,android.service.notification.NotificationListenerService.RankingMap)>
<com.android.keyguard.KeyguardPasswordView: void resetPasswordText(boolean,boolean)>
<com.android.server.biometrics.Constants: java.lang.String tagEnrollStartError()>
<com.android.systemui.plugins.PluginEnablerImpl: void setEnabled(android.content.ComponentName)>
<com.android.systemui.statusbar.phone.StatusBar: void cancelPreloadRecentApps()>
<com.android.server.pm.PackageManagerService: android.os.PersistableBundle getSuspendedPackageAppExtras(java.lang.String,int)>
<com.android.gallery3d.exif.ExifTag: java.lang.String toString()>
<com.android.systemui.shared.recents.utilities.AppTrace: void end(java.lang.String,int)>
<android.net.IpMemoryStore: android.net.IpMemoryStore getMemoryStore(android.content.Context)>
<com.android.systemui.recents.views.RecentsView: void onBusEvent(com.android.systemui.recents.events.ui.DraggingInRecentsEvent)>
<com.android.server.slice.SliceManagerService: void grantPermissionFromUser(android.net.Uri,java.lang.String,java.lang.String,boolean)>
<com.android.printspooler.ui.FusedPrintersProvider: void onAbandon()>
<com.android.server.content.SyncStorageEngine: long getDelayUntilTime(com.android.server.content.SyncStorageEngine.EndPoint)>
<com.android.settingslib.bluetooth.CachedBluetoothDeviceManager: java.lang.String getSubDeviceSummary(com.android.settingslib.bluetooth.CachedBluetoothDevice)>
<android.text.PaintMeasureDrawPerfTest: java.util.Collection cases()>
<com.android.server.notification.ZenModeHelper: java.util.List getZenRules()>
<com.android.server.usb.descriptors.UsbConfigDescriptor: int getConfigValue()>
<com.android.systemui.shared.system.PinnedStackListenerForwarder: void onListenerRegistered(android.view.IPinnedStackController)>
<com.android.systemui.shared.system.TransactionCompat: com.android.systemui.shared.system.TransactionCompat setPosition(com.android.systemui.shared.system.SurfaceControlCompat,float,float)>
<android.media.MediaPlayer2: float getPlayerVolume()>
<com.android.server.infra.AbstractMasterSystemService: void onServicePackageUpdatedLocked(int)>
<com.android.server.pm.permission.PermissionsState.PermissionState: java.lang.String getName()>
<android.net.IpMemoryStore: void <init>(android.content.Context)>
<com.android.systemui.statusbar.policy.LocationControllerImpl: void onReceive(android.content.Context,android.content.Intent)>
<com.android.server.notification.ZenModeHelper: void setNotificationPolicy(android.app.NotificationManager.Policy)>
<com.android.systemui.statusbar.notification.row.ExpandableView: void setDark(boolean,boolean,long)>
<com.android.server.content.SyncJobService: boolean isReady()>
<com.android.systemui.doze.DozeService: void dumpOnHandler(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.Prefs: void putBoolean(android.content.Context,java.lang.String,boolean)>
<com.android.server.infra.AbstractPerUserSystemService: void resetTemporaryServiceLocked()>
<com.android.server.location.GnssBatchingProvider: void disable()>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: com.android.systemui.statusbar.notification.row.ExpandableNotificationRow getParent()>
<com.android.server.usb.descriptors.UsbDescriptorParser: int getACInterfaceSpec()>
<com.android.systemui.qs.QSScrollLayout: void <init>(android.content.Context,android.view.View[])>
<com.android.systemui.qs.tileimpl.QSTileBaseView: void setClickable(boolean)>
<com.android.systemui.util.leak.RotationUtils: int getExactRotation(android.content.Context)>
<com.android.server.NetworkManagementService: void setGlobalAlert(long)>
<android.processor.view.inspector.InspectableClassModel.Property: boolean isAttributeIdInferrableFromR()>
<com.android.systemui.statusbar.policy.RemoteInputView: void onFinishInflate()>
<com.android.systemui.statusbar.notification.row.FooterView: void setDismissButtonClickListener(android.view.View.OnClickListener)>
<com.android.server.display.BrightnessMappingStrategy: com.android.server.display.BrightnessMappingStrategy create(android.content.res.Resources)>
<com.android.systemui.MultiListLayout: void removeAllSeparatedViews()>
<com.android.settingslib.widget.ActionButtonsPreference: com.android.settingslib.widget.ActionButtonsPreference setButton3Enabled(boolean)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean getCrossProfileContactsSearchDisabledForUser(int)>
<com.android.settingslib.applications.ApplicationsState.Callbacks: void onAllSizesComputed()>
<com.android.systemui.statusbar.policy.NetworkController.AccessPointController.AccessPointCallback: void onAccessPointsChanged(java.util.List)>
<android.graphics.perftests.TypefaceCreatePerfTest: void testCreate_fromResources()>
<com.android.server.usb.UsbAlsaDevice: void start()>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationViewWrapper: int resolveBackgroundColor()>
<com.android.printspooler.model.PrintSpoolerService: boolean setPrintJobTag(android.print.PrintJobId,java.lang.String)>
<com.android.server.media.MediaSessionRecord: int getMaxVolume()>
<com.android.systemui.statusbar.phone.NotificationPanelView: float getOverExpansionPixels()>
<com.android.systemui.statusbar.policy.SmartReplyView: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.statusbar.policy.ExtensionControllerImpl: void <init>(android.content.Context,com.android.systemui.util.leak.LeakDetector,com.android.systemui.shared.plugins.PluginManager,com.android.systemui.tuner.TunerService,com.android.systemui.statusbar.policy.ConfigurationController)>
<com.android.server.notification.ManagedServices: void rebindServices(boolean,int)>
<android.os.ParcelArrayPerfTest: void timeCreateLongArray()>
<com.android.gallery3d.exif.ExifInterface: int getTrueIfd(int)>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: void setClipTopAmount(int)>
<com.android.server.policy.PhoneWindowManager: boolean isKeyguardOccluded()>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.activity.HideStackActionButtonEvent)>
<com.android.systemui.statusbar.NotificationLockscreenUserManager: boolean isAnyProfilePublicMode()>
<com.android.systemui.statusbar.policy.CallbackHandler: void setNoSims(boolean,boolean)>
<com.android.server.display.whitebalance.AmbientSensor.AmbientColorTemperatureSensor.Callbacks: void onAmbientColorTemperatureChanged(float)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void dozeTimeTick()>
<com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer: java.util.List getNotificationChildren()>
<com.android.server.notification.NotificationRecord: void setAssistantImportance(int)>
<com.android.printservice.recommendation.util.Preconditions: int checkArgumentPositive(int,java.lang.String)>
<com.android.settingslib.core.lifecycle.events.OnStart: void onStart()>
<com.android.server.accessibility.AccessibilityManagerService: long getRecommendedTimeoutMillis()>
<com.android.systemui.recents.utilities.Utilities: void setViewFrameFromTranslation(android.view.View)>
<com.android.systemui.statusbar.notification.collection.NotificationData: boolean isAmbient(java.lang.String)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: boolean isHighPriority()>
<com.android.server.content.SyncManager: void onUnlockUser(int)>
<com.android.server.policy.WindowManagerPolicy.WindowState: boolean showLw(boolean)>
<com.android.server.usb.descriptors.UsbACInterface: byte getSubtype()>
<com.android.server.statusbar.StatusBarManagerService: void disable2(int,android.os.IBinder,java.lang.String)>
<com.android.systemui.statusbar.phone.NavigationHandle: void onDraw(android.graphics.Canvas)>
<com.android.server.location.PassiveProvider: void sendExtraCommand(java.lang.String,android.os.Bundle)>
<com.android.server.usb.UsbAlsaDevice: java.lang.String toString()>
<com.android.systemui.statusbar.CommandQueue.CommandQueueStart: void start()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: int getNumUniqueChannels()>
<com.android.server.tv.TvInputHardwareManager.Listener: void onHdmiDeviceRemoved(android.hardware.hdmi.HdmiDeviceInfo)>
<com.android.systemui.statusbar.phone.StatusBarIconHolder: com.android.systemui.statusbar.phone.StatusBarIconHolder fromIcon(com.android.internal.statusbar.StatusBarIcon)>
<com.android.server.pm.PackageSessionProvider: com.android.server.pm.PackageInstallerSession getSession(int)>
<com.android.dynsystem.DynamicSystemInstallationService: void onDestroy()>
<com.android.packageinstaller.wear.PackageInstallerFactory: com.android.packageinstaller.wear.PackageInstallerImpl getPackageInstaller(android.content.Context)>
<com.android.keyguard.ViewMediatorCallback: void setNeedsInput(boolean)>
<com.android.localtransport.LocalTransport: int finishBackup()>
<com.android.settingslib.wifi.AccessPointPreference: void setShowDivider(boolean)>
<com.android.server.ConnectivityService: void getLatestTetheringEntitlementResult(int,android.os.ResultReceiver,boolean,java.lang.String)>
<com.android.server.usb.descriptors.UsbACFeatureUnit: byte getUnitID()>
<com.android.systemui.statusbar.NotificationLifetimeExtender: boolean shouldExtendLifetime(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.server.pm.ProtectedPackages: java.lang.String getDeviceOwnerOrProfileOwnerPackage(int)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: java.util.List getProfiles()>
<com.android.systemui.statusbar.RemoteInputController: boolean isRemoteInputActive(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.systemui.statusbar.notification.MessagingImageTransformState: void reset()>
<com.android.server.pm.PackageManagerService: void grantRuntimePermission(java.lang.String,java.lang.String,int)>
<com.android.server.pm.PackageManagerService: boolean setRequiredForSystemUser(java.lang.String,boolean)>
<com.android.keyguard.KeyguardPatternView: void reset()>
<com.android.server.locksettings.LockSettingsService: void initRecoveryServiceWithSigFile(java.lang.String,byte[],byte[])>
<com.android.settingslib.bluetooth.BluetoothUtils: java.lang.String getStringMetaData(android.bluetooth.BluetoothDevice,int)>
<com.android.server.pm.Installer: boolean createProfileSnapshot(int,java.lang.String,java.lang.String,java.lang.String)>
<com.android.photos.views.BlockingGLTextureView: void finalize()>
<com.android.externalstorage.ExternalStorageProvider: android.net.Uri buildNotificationUri(java.lang.String)>
<com.android.powermodel.component.ModemAppActivity: com.android.powermodel.component.ModemAppPower applyProfile(com.android.powermodel.ActivityReport,com.android.powermodel.PowerProfile)>
<android.net.netlink.StructNlAttr: void <init>(short,byte)>
<com.android.systemui.statusbar.notification.stack.AmbientState: void setAnchorViewY(int)>
<android.media.MediaPlayer2.DrmPreparationInfo: java.util.UUID getUuid()>
<com.android.systemui.media.NotificationPlayer: void <init>(java.lang.String)>
<com.android.printspooler.model.PrintSpoolerService.PrintSpooler: void getPrintJobInfo(android.print.PrintJobId,android.print.IPrintSpoolerCallbacks,int,int)>
<com.android.systemui.recents.views.TaskView: void cancelTransformAnimation()>
<com.android.systemui.recents.views.TaskViewAccessibilityDelegate: void <init>(com.android.systemui.recents.views.TaskView)>
<com.android.server.locksettings.recoverablekeystore.KeySyncTask: com.android.server.locksettings.recoverablekeystore.KeySyncTask newInstance(android.content.Context,com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb,com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage,com.android.server.locksettings.recoverablekeystore.RecoverySnapshotListenersStorage,int,int,byte[],boolean)>
<com.android.systemui.recents.misc.DozeTrigger: void poke()>
<android.net.util.SharedLog: void <init>(int,java.lang.String)>
<android.net.shared.ProvisioningConfiguration.Builder: android.net.shared.ProvisioningConfiguration.Builder withPreDhcpAction()>
<com.android.server.biometrics.BiometricServiceBase: void enrollInternal(com.android.server.biometrics.BiometricServiceBase.EnrollClientImpl,int)>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: boolean isMenuOnLeft()>
<com.android.server.statusbar.StatusBarShellCommand: void onHelp()>
<android.database.TableHelper: java.lang.Object[] createItem(int)>
<com.android.uiautomator.testrunner.UiAutomatorTestCase: void setUp()>
<com.android.server.location.CountryDetectorBase: void <init>(android.content.Context)>
<com.android.server.slice.SliceShellCommand: void onHelp()>
<com.android.systemui.charging.WirelessChargingLayout: void <init>(android.content.Context,int,boolean)>
<com.android.settingslib.core.AbstractPreferenceController: java.lang.String getPreferenceKey()>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: void setSubDevice(com.android.settingslib.bluetooth.CachedBluetoothDevice)>
<com.android.settingslib.location.SettingsInjector.Setting: long getElapsedTime()>
<com.android.server.pm.PackageManagerService: boolean canForwardTo(android.content.Intent,java.lang.String,int,int)>
<com.android.systemui.globalactions.GlobalActionsColumnLayout: boolean shouldSnapToPowerButton()>
<javax.microedition.khronos.opengles.GL10Ext: int glQueryMatrixxOES(int[],int,int[],int)>
<android.net.netlink.StructNdMsg: java.lang.String toString()>
<com.android.settingslib.core.lifecycle.ObservableActivity: void onStop()>
<com.android.systemui.qs.external.CustomTile: android.content.ComponentName getComponentFromSpec(java.lang.String)>
<com.android.systemui.statusbar.policy.HeadsUpManager: void addListener(com.android.systemui.statusbar.policy.OnHeadsUpChangedListener)>
<com.android.server.pm.PackageManagerService: boolean getBlockUninstallForUser(java.lang.String,int)>
<com.android.uiautomator.core.ShellUiAutomatorBridge: boolean isScreenOn()>
<com.android.server.timedetector.TimeDetectorStrategy: void handleAutoTimeDetectionToggle(boolean)>
<com.android.server.policy.WindowManagerPolicy.WindowState: android.graphics.Rect getOverscanFrameLw()>
<com.android.systemui.volume.VolumeDialogComponent: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.server.trust.TrustArchive: void logGrantTrust(int,android.content.ComponentName,java.lang.String,long,int)>
<com.android.settingslib.wifi.AccessPoint: boolean isPasspoint()>
<com.android.server.notification.NotificationManagerService.NotificationAssistants: void onNotificationsSeenLocked(java.util.ArrayList)>
<com.android.vpndialogs.ManageDialog: void onCreate(android.os.Bundle)>
<com.android.server.notification.ManagedServices.ManagedServiceInfo: boolean isSameUser(int)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: boolean pointInView(float,float,float)>
<com.android.server.testing.shadows.ShadowEventLog: void setUp()>
<com.android.systemui.shared.system.SystemGestureExclusionListenerCompat: void register()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void updateBackgroundForGroupState()>
<android.widget.TextViewFontFamilyLayoutPerfTest: void <init>(java.lang.String,int)>
<android.text.PaintMeasureDrawPerfTest: void timeDraw()>
<com.android.systemui.egg.MLand: void hideSplash()>
<com.android.systemui.statusbar.phone.CollapsedStatusBarFragment: void hideClock(boolean)>
<com.android.gallery3d.exif.ExifInterface: void readExif(java.lang.String)>
<com.android.gallery3d.exif.ExifInterface: void writeExif(java.io.InputStream,java.io.OutputStream)>
<com.android.server.uri.UriGrantsManagerInternal: void grantUriPermissionUncheckedFromIntent(com.android.server.uri.NeededUriGrants,com.android.server.uri.UriPermissionOwner)>
<com.android.server.notification.NotificationManagerService.NotificationListeners: java.lang.String getRequiredPermission()>
<com.android.server.biometrics.BiometricUserState: int getNameTemplateResource()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setSecureStateProvider(java.util.function.BooleanSupplier)>
<com.android.systemui.shared.system.WindowManagerWrapper: void removePinnedStackListener(android.view.IPinnedStackListener)>
<com.android.server.usb.UsbPortManager: void connectSimulatedPort(java.lang.String,int,boolean,int,boolean,int,boolean,com.android.internal.util.IndentingPrintWriter)>
<com.android.systemui.statusbar.phone.NavigationBarView: com.android.systemui.statusbar.phone.RotationButtonController getRotationButtonController()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onDetachedFromWindow()>
<com.android.server.accounts.AccountManagerService: void getAuthTokenLabel(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String)>
<com.android.systemui.stackdivider.DividerView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.server.broadcastradio.hal2.BroadcastRadioService: android.hardware.radio.ICloseHandle addAnnouncementListener(int[],android.hardware.radio.IAnnouncementListener)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: int getVisibleNotificationCount()>
<com.android.systemui.bubbles.animation.PhysicsAnimationLayout.PhysicsPropertyAnimator: void animateValueForChild(androidx.dynamicanimation.animation.DynamicAnimation.ViewProperty,android.view.View,float,float,long,float,float,java.lang.Runnable[])>
<com.android.settingslib.suggestions.SuggestionControllerMixin: boolean isSuggestionLoaded()>
<com.android.systemui.statusbar.phone.StatusBarWindowController: void setForceUserActivity(boolean)>
<com.android.server.Watchdog: void setAllowRestart(boolean)>
<com.android.server.textclassifier.TextClassificationManagerService.Lifecycle: void onStartUser(int)>
<com.android.server.biometrics.BiometricServiceBase: void onStart()>
<com.android.systemui.qs.QuickTileLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.location.LocationBlacklist: void onChange(boolean)>
<com.android.systemui.recents.utilities.Utilities: android.view.ViewStub findViewStubById(android.app.Activity,int)>
<com.android.systemui.statusbar.UserUtil: void deleteUserWithPrompt(android.content.Context,int,com.android.systemui.statusbar.policy.UserSwitcherController)>
<com.android.systemui.recents.misc.SystemServicesProxy: boolean isInSafeMode()>
<com.android.systemui.pip.phone.PipAccessibilityInteractionConnection: void notifyOutsideTouch()>
<com.android.server.usb.descriptors.UsbDescriptorParser: boolean isInputHeadset()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onTrackingStopped(boolean)>
<com.android.photos.BitmapRegionTileSource: int getImageHeight()>
<com.android.systemui.statusbar.policy.SmartReplyView: void onMeasure(int,int)>
<com.android.systemui.statusbar.policy.BatteryController: void setPowerSaveMode(boolean)>
<com.android.systemui.biometrics.FaceDialogView: void handleResetMessage()>
<android.text.StaticLayoutPerfTest: void testDraw_RandomText_NoStyled_WithoutCache()>
<android.util.ArraySetPerfTest: void testValueAt_OutOfBounds_EdgeCase()>
<com.android.server.slice.PinnedSliceState: java.lang.String getPkg()>
<com.android.systemui.SystemUIFactory.ContextHolder: void <init>(android.content.Context)>
<com.android.server.location.GnssMeasurementsProvider: void onCapabilitiesUpdated(boolean)>
<com.android.server.audio.AudioService: void setVibrateSetting(int,int)>
<com.android.server.usb.descriptors.Usb10ASFormatII: void report(com.android.server.usb.descriptors.report.ReportCanvas)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setActivatedChild(com.android.systemui.statusbar.notification.row.ActivatableNotificationView)>
<com.android.systemui.pip.phone.PipTouchState: boolean allowDraggingOffscreen()>
<com.android.systemui.statusbar.phone.AutoTileManager: void unmarkTileAsAutoAdded(java.lang.String)>
<com.android.settingslib.RestrictedPreference: void checkRestrictionAndSetDisabled(java.lang.String,int)>
<com.android.systemui.recents.RecentsSystemUser: void sendRecentsDrawnEvent()>
<com.android.systemui.doze.DozeLog: void setRegisterKeyguardCallback(boolean)>
<com.android.server.pm.SharedUserSetting: boolean isPrivileged()>
<com.android.server.usb.descriptors.UsbDescriptorParser: java.lang.String getDeviceAddr()>
<com.android.systemui.statusbar.phone.StatusBar: android.view.ViewGroup getNotificationScrollLayout()>
<com.android.server.biometrics.fingerprint.FingerprintConstants: java.lang.String tagHalDied()>
<com.android.server.usb.descriptors.Usb20ASGeneral: byte getFormatType()>
<com.android.media.remotedisplay.RemoteDisplayProvider: void onDisconnect(com.android.media.remotedisplay.RemoteDisplay)>
<com.android.server.ConnectivityService: boolean isCallerCurrentAlwaysOnVpnLockdownApp()>
<android.net.ip.IpClientCallbacks: void onLinkPropertiesChange(android.net.LinkProperties)>
<com.android.server.NetworkManagementService: void systemReady()>
<com.android.settingslib.CustomEditTextPreference: void onClick(android.content.DialogInterface,int)>
<com.android.server.accounts.AccountManagerService: android.os.IBinder onBind(android.content.Intent)>
<com.android.server.notification.NotificationManagerService: void maybeRecordInterruptionLocked(com.android.server.notification.NotificationRecord)>
<android.media.MediaPlayer2: int getState()>
<com.android.server.location.GnssLocationProvider: com.android.server.location.GnssCapabilitiesProvider getGnssCapabilitiesProvider()>
<com.android.printspooler.ui.PrintActivity: void onCreate(android.os.Bundle)>
<com.android.server.twilight.TwilightService: boolean handleMessage(android.os.Message)>
<com.android.systemui.pip.phone.PipManager: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.companiondevicemanager.DeviceChooserActivity: void setTitle(java.lang.CharSequence)>
<com.android.systemui.statusbar.policy.HeadsUpManager: void updatePinnedMode()>
<com.android.settingslib.wifi.AccessPoint: boolean matches(com.android.settingslib.wifi.AccessPoint)>
<com.android.keyguard.CarrierText: void onAttachedToWindow()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean getForceEphemeralUsers(android.content.ComponentName)>
<com.android.server.contentcapture.ContentCaptureManagerService: void registerForExtraSettingsChanges(android.content.ContentResolver,android.database.ContentObserver)>
<com.android.server.BatteryService: void onBootPhase(int)>
<android.net.ipmemorystore.SameL3NetworkResponse: java.lang.String toString()>
<com.android.systemui.statusbar.notification.row.NotificationGuts.GutsContent: boolean isLeavebehind()>
<com.android.systemui.statusbar.phone.StatusBar: com.android.systemui.statusbar.phone.StatusBarWindowView getStatusBarWindow()>
<com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer: boolean hasOverlappingRendering()>
<com.android.settingslib.core.instrumentation.SharedPreferencesLogger: boolean getBoolean(java.lang.String,boolean)>
<com.android.keyguard.KeyguardSecurityContainer.SecurityCallback: void finish(boolean,int)>
<com.android.server.updates.ConfigUpdateInstallReceiver: void postInstall(android.content.Context,android.content.Intent)>
<com.android.systemui.SystemUIFactory: com.android.systemui.statusbar.notification.NotificationInterruptionStateProvider provideNotificationInterruptionStateProvider(android.content.Context)>
<com.android.systemui.statusbar.KeyguardAffordanceView: void setImageScale(float,boolean,long,android.view.animation.Interpolator)>
<com.android.systemui.statusbar.notification.TransformState: float getTransformationStartY()>
<com.android.systemui.statusbar.notification.row.ExpandableView: void setExtraWidthForClipping(float)>
<com.android.keyguard.KeyguardSimPukView: void <init>(android.content.Context)>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb: long setServerParams(int,int,byte[])>
<com.android.settingslib.accounts.AuthenticatorHelper: void onReceive(android.content.Context,android.content.Intent)>
<com.android.systemui.statusbar.policy.DeadZone: void setFlash(float)>
<com.android.systemui.biometrics.BiometricDialogView: int getDelayAfterAuthenticatedDurationMs()>
<com.android.systemui.DependencyBinder: com.android.systemui.statusbar.policy.UserInfoController provideUserInfoContrller(com.android.systemui.statusbar.policy.UserInfoControllerImpl)>
<android.net.dhcp.DhcpServerCallbacks: int getInterfaceVersion()>
<android.database.sqlite.SQLiteTokenizer: boolean isType(java.lang.String)>
<com.android.server.appbinding.finders.AppServiceFinder: android.os.IInterface asInterface(android.os.IBinder)>
<com.android.server.contentcapture.ContentCaptureMetricsLogger: void writeServiceEvent(int,android.content.ComponentName)>
<com.android.server.ConnectivityService: boolean prepareVpn(java.lang.String,java.lang.String,int)>
<com.android.server.audio.AudioService: int getStreamVolume(int)>
<com.android.server.pm.PackageManagerService: byte[] getInstantAppCookie(java.lang.String,int)>
<com.android.server.utils.UserTokenWatcher: boolean isAcquired(int)>
<com.android.server.DeviceIdleController.LocalService: void addPowerSaveTempWhitelistAppDirect(int,long,boolean,java.lang.String)>
<com.android.server.usb.descriptors.UsbACTerminal: void report(com.android.server.usb.descriptors.report.ReportCanvas)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void setGroupManager(com.android.systemui.statusbar.phone.NotificationGroupManager)>
<com.android.systemui.recents.utilities.Utilities: int getColorWithOverlay(int,int,float)>
<android.media.MediaSession2Service: void addSession(android.media.MediaSession2)>
<com.android.systemui.statusbar.notification.row.HybridNotificationView: void transformTo(com.android.systemui.statusbar.TransformableView,float)>
<com.android.server.display.whitebalance.DisplayWhiteBalanceController: void <init>(com.android.server.display.whitebalance.AmbientSensor.AmbientBrightnessSensor,com.android.server.display.whitebalance.AmbientFilter,com.android.server.display.whitebalance.AmbientSensor.AmbientColorTemperatureSensor,com.android.server.display.whitebalance.AmbientFilter,com.android.server.display.whitebalance.DisplayWhiteBalanceThrottler,float,float,float[],float[])>
<com.android.systemui.qs.QSFragment: boolean isShowingDetail()>
<com.android.settingslib.bluetooth.PbapServerProfile: int getOrdinal()>
<com.android.server.pm.PackageManagerService: boolean isDeviceUpgrading()>
<com.android.gallery3d.glrenderer.GLCanvas: void clearBuffer(float[])>
<com.android.packageinstaller.wear.WearPackageIconProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<com.android.systemui.qs.tileimpl.QSTileImpl.H: void <init>(android.os.Looper)>
<com.android.server.notification.NotificationAdjustmentExtractor: com.android.server.notification.RankingReconsideration process(com.android.server.notification.NotificationRecord)>
<com.android.systemui.statusbar.notification.FakeShadowView: void setFakeShadowTranslationZ(float,float,int,int)>
<com.android.settingslib.NetworkPolicyEditor: void read()>
<com.android.server.LocationManagerService: boolean isExtraLocationControllerPackageEnabled()>
<android.net.IpMemoryStoreClient.ThrowingRunnable: void run()>
<com.android.server.notification.GroupHelper.Callback: void removeAutoGroup(java.lang.String)>
<com.android.systemui.statusbar.notification.collection.NotificationData: int getImportance(java.lang.String)>
<com.android.keyguard.KeyguardHostView: void userActivity()>
<com.android.server.pm.ShortcutService: boolean isRequestPinItemSupported(int,int)>
<com.android.server.pm.permission.BasePermission: boolean isSignature()>
<com.android.systemui.keyguard.DismissCallbackWrapper: void <init>(com.android.internal.policy.IKeyguardDismissCallback)>
<com.android.server.GestureLauncherService: void onBootPhase(int)>
<com.android.server.pm.UserManagerService: android.content.pm.UserInfo getPrimaryUser()>
<android.media.MediaSession2: android.media.Session2Token getToken()>
<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void setSmsAppPackagesProvider(android.content.pm.PackageManagerInternal.PackagesProvider)>
<com.android.systemui.statusbar.phone.PanelView: void fling(float,boolean,boolean)>
<com.android.systemui.qs.customize.TileAdapter: void onBindViewHolder(com.android.systemui.qs.customize.TileAdapter.Holder,int)>
<android.perftests.utils.Stats: long getMedian()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void generateChildOrderChangedEvent()>
<com.android.systemui.statusbar.phone.PanelBar: float getExpansionFraction()>
<com.android.keyguard.PasswordTextView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.usb.descriptors.UsbHIDDescriptor: byte getCountryCode()>
<com.android.server.usb.UsbHostManager: void getDeviceList(android.os.Bundle)>
<com.android.server.ServiceWatcher: void onBind()>
<com.android.systemui.egg.MLandActivity: void updateSplashPlayers()>
<com.android.systemui.pip.tv.PipManager: android.graphics.Rect getPipBounds()>
<com.android.systemui.statusbar.policy.HeadsUpManager: com.android.systemui.statusbar.policy.HeadsUpManager.HeadsUpEntry getTopHeadsUpEntry()>
<com.android.systemui.statusbar.phone.ScrimController: void setWakeLockScreenSensorActive(boolean)>
<com.android.systemui.classifier.FalsingManagerProxy: void onLeftAffordanceOn()>
<com.android.keyguard.KeyguardPasswordView: void onTextChanged(java.lang.CharSequence,int,int,int)>
<com.android.server.testing.shadows.ShadowRecoveryController: void __constructor__()>
<com.android.server.notification.PreferencesHelper: void setBubblesAllowed(java.lang.String,int,boolean)>
<com.android.server.timedetector.TimeDetectorStrategyCallbackImpl: boolean isTimeDetectionEnabled()>
<android.media.MediaPlayer2: long getCurrentPosition()>
<com.android.mtp.MtpDocumentsProvider: android.provider.DocumentsContract.Path findDocumentPath(java.lang.String,java.lang.String)>
<com.android.systemui.bubbles.BubbleStackView.SurfaceSynchronizer: void syncSurfaceAndRun(java.lang.Runnable)>
<com.android.server.notification.ImportanceExtractor: void setConfig(com.android.server.notification.RankingConfig)>
<com.android.systemui.statusbar.phone.NotificationListenerWithPlugins: void unregisterAsSystemService()>
<com.android.server.pm.permission.PermissionsState: int revokeInstallPermission(com.android.server.pm.permission.BasePermission)>
<com.android.systemui.statusbar.phone.RotationButton: void setOnHoverListener(android.view.View.OnHoverListener)>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: void setDiscoverableTimeout(int)>
<com.android.systemui.recents.RecentsActivity: void onBusEvent(com.android.systemui.recents.events.activity.ExitRecentsWindowFirstAnimationFrameEvent)>
<com.android.server.autofill.ui.AutoFillUI.AutoFillUiCallback: void requestHideFillUi(android.view.autofill.AutofillId)>
<com.android.server.locksettings.LockSettingsStrongAuth: void removeUser(int)>
<com.android.server.policy.BurnInProtectionHelper: void onAnimationRepeat(android.animation.Animator)>
<com.android.gallery3d.glrenderer.GLCanvas: void recoverFromLightCycle()>
<com.android.server.pm.permission.PermissionManagerServiceInternal: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String,java.lang.String,int,int)>
<com.android.systemui.qs.tiles.AirplaneModeTile: void <init>(com.android.systemui.qs.QSHost,com.android.systemui.plugins.ActivityStarter)>
<com.android.systemui.recents.utilities.AnimationProps: boolean isImmediate()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void fling(float,boolean)>
<com.android.systemui.recents.views.grid.TaskGridLayoutAlgorithm: void <init>(android.content.Context)>
<com.android.wallpapercropper.CropView.TouchCallback: void onTap()>
<com.android.systemui.qs.tiles.WifiTile.WifiDetailAdapter: void onSettingsActivityTriggered(android.content.Intent)>
<com.android.server.policy.keyguard.KeyguardStateMonitor: void setCurrentUser(int)>
<com.android.systemui.statusbar.phone.NavigationBarInflaterView: java.lang.String extractButton(java.lang.String)>
<com.android.server.timezone.PackageTracker: int getCheckFailureCountForTests()>
<com.android.systemui.qs.external.TileLifecycleManager: void onTileAdded()>
<javax.microedition.khronos.opengles.GL11: void glGetClipPlanex(int,int[],int)>
<com.android.commands.hid.Event: int getVendorId()>
<com.android.server.updates.ConfigUpdateInstallReceiver: boolean verifyVersion(int,int)>
<com.android.server.appprediction.AppPredictionPerUserService: void onCreatePredictionSessionLocked(android.app.prediction.AppPredictionContext,android.app.prediction.AppPredictionSessionId)>
<com.android.server.locksettings.recoverablekeystore.SecureBox: byte[] encrypt(java.security.PublicKey,byte[],byte[],byte[])>
<com.android.systemui.statusbar.phone.DarkIconDispatcherImpl: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void initFrom(com.android.systemui.statusbar.phone.KeyguardBottomAreaView)>
<com.android.uiautomator.core.UiScrollable: com.android.uiautomator.core.UiScrollable setMaxSearchSwipes(int)>
<com.android.systemui.statusbar.phone.StatusBarWindowView: void setPulsing(boolean)>
<com.android.systemui.recents.Recents: void cancelPreloadRecentApps()>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: android.bluetooth.BluetoothClass getBtClass()>
<com.android.systemui.recents.IRecentsSystemUserCallbacks: void sendDockingTopTaskEvent(android.graphics.Rect)>
<com.android.server.tv.UinputBridge: void sendPointerUp(android.os.IBinder,int)>
<com.android.server.deviceidle.BluetoothConstraint: void stopMonitoring()>
<com.android.server.policy.WindowManagerPolicy.WindowState: boolean canAcquireSleepToken()>
<com.android.systemui.pip.tv.PipManager.Listener: void onPipResizeAboutToStart()>
<com.android.systemui.statusbar.phone.NavigationBarView: void showPinningEscapeToast()>
<com.android.preload.ui.SequenceUI: boolean isSingleThreaded()>
<com.android.server.hdmi.HdmiControlService: void initPortInfo()>
<com.android.server.accessibility.AbstractAccessibilityServiceConnection.SystemSupport: android.view.MagnificationSpec getCompatibleMagnificationSpecLocked(int)>
<com.android.server.policy.BurnInProtectionHelper: void onAnimationCancel(android.animation.Animator)>
<com.android.systemui.qs.tiles.LocationTile: java.lang.CharSequence getTileLabel()>
<android.app.backup.BackupUtilsTest: void testIsFileSpecifiedInPathList_whenDirectoryAndPathListHasIt()>
<com.android.server.location.LocationProviderProxy: void sendExtraCommand(java.lang.String,android.os.Bundle)>
<com.android.systemui.statusbar.phone.StatusBarWindowController.OtherwisedCollapsedListener: void setWouldOtherwiseCollapse(boolean)>
<javax.microedition.khronos.egl.EGL10: boolean eglDestroyContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext)>
<javax.obex.ObexHelper: byte[] convertToUnicodeByteArray(java.lang.String)>
<com.android.systemui.statusbar.policy.ZenModeController: boolean isVolumeRestricted()>
<com.android.settingslib.bluetooth.HearingAidProfile: int getNameResource(android.bluetooth.BluetoothDevice)>
<android.net.ipmemorystore.SameL3NetworkResponse: int hashCode()>
<com.android.settingslib.inputmethod.InputMethodAndSubtypeUtilCompat: boolean isValidSystemNonAuxAsciiCapableIme(android.view.inputmethod.InputMethodInfo)>
<com.android.systemui.statusbar.notification.stack.NotificationListContainer: android.view.View getContainerChildAt(int)>
<com.android.systemui.statusbar.notification.AboveShelfObserver.HasViewAboveShelfChangedListener: void onHasViewsAboveShelfChanged(boolean)>
<com.android.server.testing.shadows.ShadowInternalRecoveryServiceException: void __constructor__(java.lang.String,java.lang.Throwable)>
<com.android.gallery3d.glrenderer.GLCanvas: int uploadBuffer(java.nio.ByteBuffer)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void drawMixed(com.android.gallery3d.glrenderer.BasicTexture,int,float,android.graphics.RectF,android.graphics.RectF)>
<com.android.server.pm.CrossProfileAppsServiceImpl.Injector: int getCallingUid()>
<com.android.systemui.statusbar.phone.NavigationBarView: com.android.systemui.statusbar.phone.NavBarTintController getTintController()>
<com.android.systemui.plugins.VolumeDialogController.Callbacks: void onShowRequested(int)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void setSingleLineWidthIndention(int)>
<com.android.server.notification.PreferencesHelper: void dump(android.util.proto.ProtoOutputStream,com.android.server.notification.NotificationManagerService.DumpFilter)>
<com.android.proxyhandler.SocketConnect: void run()>
<com.android.settingslib.bluetooth.HidDeviceProfile: int getOrdinal()>
<com.android.systemui.statusbar.CommandQueue: void showPinningEscapeToast()>
<com.android.systemui.pip.phone.PipMenuActivityController.Listener: void onPipMinimize()>
<com.android.server.NetworkManagementService: void registerNetworkActivityListener(android.os.INetworkActivityListener)>
<com.android.systemui.statusbar.notification.row.ExpandableView: boolean isTransparent()>
<com.android.settingslib.development.SystemPropPoker: com.android.settingslib.development.SystemPropPoker getInstance()>
<com.android.server.biometrics.BiometricServiceBase: void removeClient(com.android.server.biometrics.ClientMonitor)>
<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin.MenuItem: android.view.View getGutsView()>
<com.android.wallpapercropper.CropView: void setTileSource(com.android.photos.views.TiledImageRenderer.TileSource,java.lang.Runnable)>
<com.google.android.startop.iorap.AppLaunchEvent.ActivityLaunched: void writeToParcelImpl(android.os.Parcel,int)>
<com.android.systemui.qs.QSPanel: void onDetachedFromWindow()>
<com.android.preload.ui.IUI: void showMessageDialog(java.lang.String)>
<com.android.settingslib.widget.AdaptiveIcon: void setBackgroundColor(int)>
<com.android.systemui.recents.views.ViewPool.ViewPoolConsumer: java.lang.Object createView(android.content.Context)>
<com.android.server.pm.permission.PermissionManagerServiceInternal: boolean addDynamicPermission(android.content.pm.PermissionInfo,boolean,int,com.android.server.pm.permission.PermissionManagerServiceInternal.PermissionCallback)>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean setPanelAlpha(int,boolean)>
<com.android.server.pm.permission.PermissionsState: void reset()>
<com.android.settingslib.RestrictedPreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: android.view.View getLeftPreview()>
<com.android.server.notification.ManagedServices.ManagedServiceInfo: com.android.server.notification.ManagedServices getOwner()>
<com.android.systemui.bubbles.BubbleController: void collapseStack()>
<com.android.systemui.recents.IRecentsNonSystemUserCallbacks: void onConfigurationChanged()>
<com.android.systemui.statusbar.notification.row.NotificationSnooze: android.view.View getContentView()>
<com.android.systemui.qs.touch.SwipeDetector: void <init>(float,com.android.systemui.qs.touch.SwipeDetector.Listener,com.android.systemui.qs.touch.SwipeDetector.Direction)>
<com.android.server.contentcapture.ContentCaptureMetricsLogger: void writeSetWhitelistEvent(android.content.ComponentName,java.util.List,java.util.List)>
<com.android.systemui.recents.events.EventBus: void post(com.android.systemui.recents.events.EventBus.Event)>
<com.android.server.usb.UsbAlsaDevice: boolean equals(java.lang.Object)>
<android.view.autofill.AbstractAutofillPerfTestCase: void disableService()>
<com.android.printservice.recommendation.plugin.google.CloudPrintPlugin: void <init>(android.content.Context)>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: boolean setBluetoothEnabled(boolean)>
<com.android.server.usb.UsbAlsaDevice: boolean isOutputHeadset()>
<android.net.netlink.StructInetDiagSockId: void pack(java.nio.ByteBuffer)>
<com.android.uiautomator.core.UiDevice: boolean openNotification()>
<com.android.systemui.qs.QSPanel: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.server.locksettings.recoverablekeystore.certificate.CertValidationException: void <init>(java.lang.String)>
<com.android.server.ConnectivityService: void onShellCommand(java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ShellCallback,android.os.ResultReceiver)>
<com.android.keyguard.KeyguardSecurityViewFlipper: java.lang.CharSequence getTitle()>
<com.android.server.location.RemoteListenerHelper: int registerWithService()>
<com.android.server.IpSecService.IResource: void freeUnderlyingResources()>
<com.android.systemui.qs.external.CustomTile: void startUnlockAndRun()>
<com.android.systemui.plugins.FalsingManager: void onLeftAffordanceOn()>
<com.android.printspooler.model.PrintSpoolerService: android.os.IBinder onBind(android.content.Intent)>
<com.android.settingslib.bluetooth.HeadsetProfile: int getProfileId()>
<com.android.server.policy.PowerAction: boolean showDuringKeyguard()>
<com.android.server.pm.dex.PackageDexUsage.DexUseInfo: boolean isVariableClassLoaderContext()>
<com.android.systemui.tuner.TunerService: void showResetRequest(android.content.Context,java.lang.Runnable)>
<com.android.systemui.shared.plugins.PluginManagerImpl: void addPluginListener(java.lang.String,com.android.systemui.plugins.PluginListener,java.lang.Class)>
<com.android.server.inputmethod.InputMethodManagerInternal: java.util.List getEnabledInputMethodListAsUser(int)>
<com.android.settingslib.users.AppRestrictionsHelper: java.util.List getVisibleApps()>
<com.android.server.pm.dex.ArtManagerService: void <init>(android.content.Context,android.content.pm.IPackageManager,com.android.server.pm.Installer,java.lang.Object)>
<com.android.systemui.statusbar.notification.collection.NotificationData: boolean shouldHide(java.lang.String)>
<com.android.systemui.plugins.qs.QSTile: void removeCallback(com.android.systemui.plugins.qs.QSTile.Callback)>
<com.android.server.appprediction.RemoteAppPredictionService: void onCreatePredictionSession(android.app.prediction.AppPredictionContext,android.app.prediction.AppPredictionSessionId)>
<com.android.uiautomator.core.InstrumentationUiAutomatorBridge: void <init>(android.content.Context,android.app.UiAutomation)>
<com.android.server.SerialService: java.lang.String[] getSerialPorts()>
<com.android.server.notification.RankingConfig: int getImportance(java.lang.String,int)>
<com.android.systemui.plugins.VolumeDialog: void destroy()>
<com.android.settingslib.graph.BatteryMeterDrawableBase: void setPadding(int,int,int,int)>
<com.android.settingslib.Utils: int applyAlpha(float,int)>
<com.android.settingslib.development.AbstractLogpersistPreferenceController: void updateLogpersistValues()>
<com.android.systemui.RegionInterceptingFrameLayout: void onDetachedFromWindow()>
<com.android.gallery3d.glrenderer.GLCanvas: void initializeTextureSize(com.android.gallery3d.glrenderer.BasicTexture,int,int)>
<com.android.systemui.DependencyBinder: com.android.systemui.plugins.statusbar.StatusBarStateController provideStatusBarStateController(com.android.systemui.statusbar.StatusBarStateControllerImpl)>
<com.android.systemui.statusbar.phone.HeadsUpManagerPhone.HeadsUpEntryPhone: boolean isSticky()>
<com.android.systemui.statusbar.policy.UserSwitcherController.UserRecord: com.android.systemui.statusbar.policy.UserSwitcherController.UserRecord copyWithIsCurrent(boolean)>
<com.android.server.pm.PackageManagerServiceUtils: java.lang.String packagesToString(java.util.Collection)>
<com.android.settingslib.bluetooth.MapProfile: int getDrawableResource(android.bluetooth.BluetoothClass)>
<com.android.systemui.bubbles.BubbleExpandedView: void setEntry(com.android.systemui.statusbar.notification.collection.NotificationEntry,com.android.systemui.bubbles.BubbleStackView,java.lang.String)>
<com.android.systemui.statusbar.policy.RemoteInputView: void dispatchStartTemporaryDetach()>
<com.android.systemui.keyguard.KeyguardViewMediator: void keyguardDone()>
<com.android.settingslib.Utils: int getWifiIconResource(int)>
<com.android.systemui.pip.PipUI: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.settingslib.RestrictedLockUtils: void sendShowAdminSupportDetailsIntent(android.content.Context,com.android.settingslib.RestrictedLockUtils.EnforcedAdmin)>
<com.android.systemui.doze.DozeScreenBrightness: void onSensorChanged(android.hardware.SensorEvent)>
<com.android.server.pm.PackageSettingBase: boolean isSharedUser()>
<com.android.server.testing.shadows.ShadowEventLog.Entry: boolean equals(java.lang.Object)>
<com.android.server.notification.NotificationUsageStats: void dump(java.io.PrintWriter,java.lang.String,com.android.server.notification.NotificationManagerService.DumpFilter)>
<com.android.systemui.stackdivider.DividerView: void setAdjustedForIme(boolean)>
<com.android.uiautomator.core.UiScrollable: boolean flingForward()>
<com.android.keyguard.clock.BubbleClockController: void onTimeZoneChanged(java.util.TimeZone)>
<com.android.server.pm.permission.PermissionManagerServiceInternal: android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String,int,int)>
<com.android.server.policy.WindowManagerPolicy.WindowManagerFuncs: java.lang.Object getWindowManagerLock()>
<javax.microedition.khronos.opengles.GL10: void glMultiTexCoord4f(int,float,float,float,float)>
<com.android.systemui.keyguard.KeyguardSliceProvider: void addMediaLocked(androidx.slice.builders.ListBuilder)>
<com.android.systemui.statusbar.notification.row.NotificationBackgroundView: boolean hasOverlappingRendering()>
<android.net.shared.InitialConfiguration: android.net.InitialConfigurationParcelable toStableParcelable()>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: void onSnapClosed()>
<com.android.systemui.statusbar.phone.StatusBarWindowView: void onViewAdded(android.view.View)>
<com.android.server.RecoverySystemService: void onStart()>
<com.android.packageinstaller.InstallFailed.OutOfSpaceDialog: void onCancel(android.content.DialogInterface)>
<com.android.systemui.classifier.Stroke: float getDurationSeconds()>
<com.android.systemui.statusbar.phone.NavigationBarView: boolean isRecentsButtonVisible()>
<com.android.systemui.statusbar.notification.collection.NotificationData.KeyguardEnvironment: boolean isNotificationForCurrentProfiles(android.service.notification.StatusBarNotification)>
<com.android.settingslib.DeviceInfoUtils: java.lang.String getFeedbackReporterPackage(android.content.Context)>
<com.android.systemui.statusbar.phone.StatusBar: boolean isPulsing()>
<com.android.systemui.plugins.ActivityStarter: void startPendingIntentDismissingKeyguard(android.app.PendingIntent,java.lang.Runnable,android.view.View)>
<com.android.server.pm.UserManagerService: boolean someUserHasSeedAccount(java.lang.String,java.lang.String)>
<com.android.settingslib.RestrictedLockUtilsInternal: com.android.settingslib.RestrictedLockUtils.EnforcedAdmin checkIfUninstallBlocked(android.content.Context,java.lang.String,int)>
<android.net.ip.IpServer: void <init>(java.lang.String,android.os.Looper,int,android.net.util.SharedLog,android.os.INetworkManagementService,android.net.INetworkStatsService,android.net.ip.IpServer.Callback,boolean,android.net.ip.IpServer.Dependencies)>
<android.media.MediaPlayer2: java.lang.Object setAudioAttributes(android.media.AudioAttributes)>
<com.android.uiautomator.core.UiObject: boolean click()>
<com.android.server.testing.shadows.ShadowBackupDataOutput: int getTransportFlags()>
<com.android.keyguard.EmergencyCarrierArea: void setCarrierTextVisible(boolean)>
<com.android.settingslib.development.AbstractEnableAdbPreferenceController: void writeAdbSetting(boolean)>
<com.android.server.infra.AbstractMasterSystemService: void onServiceRemoved(com.android.server.infra.AbstractPerUserSystemService,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isSeparateProfileChallengeAllowed(int)>
<com.android.systemui.statusbar.StatusBarIconView: java.lang.String toString()>
<com.android.keyguard.KeyguardPasswordView: void beforeTextChanged(java.lang.CharSequence,int,int,int)>
<com.android.settingslib.core.lifecycle.ObservablePreferenceFragment: void onResume()>
<android.net.INetworkMonitorCallbacks: void notifyNetworkTested(int,java.lang.String)>
<com.android.uiautomator.testrunner.UiAutomatorTestCaseFilter: boolean accept(java.lang.Class)>
<com.android.systemui.statusbar.CommandQueue: void toggleSplitScreen()>
<com.android.server.notification.RankingConfig: void setShowBadge(java.lang.String,int,boolean)>
<com.android.server.usb.descriptors.ByteStream: void reverse(int)>
<com.android.server.trust.TrustManagerService: long addEscrowToken(byte[],int)>
<android.media.MediaSession2.SessionCallback: android.media.Session2CommandGroup onConnect(android.media.MediaSession2,android.media.MediaSession2.ControllerInfo)>
<com.android.systemui.statusbar.StatusIconDisplayable: void setVisibleState(int,boolean)>
<android.processor.view.inspector.InspectionCompanionGenerator: void <init>(javax.annotation.processing.Filer,java.lang.Class)>
<android.media.BufferingParams: int getResumePlaybackMarkMs()>
<com.android.keyguard.KeyguardAbsKeyInputView: void setPasswordEntryInputEnabled(boolean)>
<com.android.systemui.statusbar.NotificationRemoteInputManager.SmartReplyHistoryExtender: boolean shouldExtendLifetime(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.server.pm.PackageManagerService: void sendSessionUpdatedBroadcast(android.content.pm.PackageInstaller.SessionInfo,int)>
<com.android.server.webkit.SystemInterface: void ensureZygoteStarted()>
<com.android.systemui.qs.tiles.UiModeNightTile: void handleClick()>
<com.android.server.soundtrigger.SoundTriggerLogger: void log(com.android.server.soundtrigger.SoundTriggerLogger.Event)>
<com.android.server.webkit.SystemImpl: void enablePackageForAllUsers(android.content.Context,java.lang.String,boolean)>
<com.android.egg.paint.PaintActivity: void onTrimMemory(int)>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: void onFinishInflate()>
<com.android.systemui.SystemUI: void putComponent(java.lang.Class,com.android.server.ResettableTimeout.T)>
<com.android.systemui.statusbar.notification.row.FooterViewButton: void getDrawingRect(android.graphics.Rect)>
<com.android.server.policy.PhoneWindowManager: boolean isScreenOn()>
<com.android.settingslib.development.AbstractEnableAdbPreferenceController: boolean handlePreferenceTreeClick(androidx.preference.Preference)>
<com.android.systemui.statusbar.policy.UserSwitcherController: java.util.ArrayList getUsers()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void closeQs()>
<com.android.systemui.analytics.DataCollector: void onScreenOnFromTouch()>
<com.android.server.locksettings.LockSettingsService: boolean shouldMigrateToSyntheticPasswordLocked(int)>
<com.android.systemui.statusbar.phone.NavigationBarFragment: void onDestroyView()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void clearPackagePersistentPreferredActivities(android.content.ComponentName,java.lang.String)>
<com.android.systemui.qs.QSFragment: void disable(int,int,int,boolean)>
<com.android.systemui.statusbar.policy.RemoteInputView: void afterTextChanged(android.text.Editable)>
<com.android.systemui.statusbar.AnimatedImageView: void onVisibilityChanged(android.view.View,int)>
<com.android.systemui.statusbar.phone.RotationButton: boolean hide()>
<com.android.settingslib.core.instrumentation.MetricsFeatureProvider: void action(int,int,int,java.lang.String,int)>
<com.android.systemui.recents.views.TaskStackView: void onTaskViewClipStateChanged(com.android.systemui.recents.views.TaskView)>
<com.android.systemui.doze.DozeFalsingManagerAdapter: void <init>(com.android.systemui.plugins.FalsingManager)>
<com.android.systemui.keyguard.Lifecycle: void addObserver(java.lang.Object)>
<com.android.systemui.stackdivider.DividerView: boolean startDragging(boolean,boolean)>
<com.android.server.pm.PackageInstallerSession: boolean isPrepared()>
<com.android.server.audio.AudioService: java.util.List getAudioProductStrategies()>
<com.android.uiautomator.core.UiScrollable: com.android.uiautomator.core.UiObject getChildByDescription(com.android.uiautomator.core.UiSelector,java.lang.String)>
<com.android.keyguard.KeyguardAbsKeyInputView: boolean startDisappearAnimation(java.lang.Runnable)>
<android.net.util.InterfaceSet: boolean equals(java.lang.Object)>
<com.android.externalstorage.ExternalStorageProvider: android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle)>
<com.android.server.uri.UriPermissionOwner: void removeUriPermissions()>
<com.android.systemui.statusbar.policy.LocationController: boolean isLocationEnabled()>
<com.android.systemui.statusbar.ScalingDrawableWrapper: void <init>(android.graphics.drawable.Drawable,float)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.util.List getPermittedInputMethods(android.content.ComponentName)>
<com.android.printservice.recommendation.plugin.hp.ServiceListener: void stop()>
<com.android.systemui.statusbar.phone.ButtonDispatcher: float getAlpha()>
<com.android.gallery3d.exif.ExifInterface: void forceRewriteExif(java.lang.String,java.util.Collection)>
<com.android.server.appbinding.AppBindingConstants: void dump(java.lang.String,java.io.PrintWriter)>
<com.android.systemui.statusbar.policy.RemoteInputView: void onAttachedToWindow()>
<com.android.systemui.statusbar.phone.NotificationIconContainer: void onViewAdded(android.view.View)>
<com.android.powermodel.PowerReport: com.android.powermodel.PowerReport createReport(com.android.powermodel.PowerProfile,com.android.powermodel.ActivityReport)>
<com.android.gallery3d.exif.ExifTag: short getTagId()>
<com.android.printspooler.model.RemotePrintDocument: void start()>
<com.android.systemui.shared.system.TaskStackChangeListeners: void onTaskDisplayChanged(int,int)>
<com.android.location.provider.ActivityRecognitionEvent: long getTimestampNs()>
<com.android.systemui.qs.tiles.ColorInversionTile: android.content.Intent getLongClickIntent()>
<com.android.systemui.recents.OverviewProxyService.OverviewProxyListener: void onOverviewShown(boolean)>
<com.android.server.pm.Installer.InstallerException: com.android.server.pm.Installer.InstallerException from(java.lang.Exception)>
<com.android.systemui.shared.system.InputChannelCompat.InputEventDispatcher: void <init>(android.view.InputChannel,android.os.Looper)>
<com.android.systemui.statusbar.phone.LockscreenWallpaper: void setSelectedUser(android.os.UserHandle)>
<com.android.server.policy.WindowManagerPolicy: int interceptMotionBeforeQueueingNonInteractive(int,long,int)>
<com.android.systemui.statusbar.FlingAnimationUtils: void apply(android.animation.Animator,float,float,float)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: void createIcons(android.content.Context,android.service.notification.StatusBarNotification)>
<com.android.systemui.statusbar.notification.MessagingImageTransformState: void resetTransformedView()>
<com.android.systemui.bubbles.BubbleController.BubbleStateChangeListener: void onHasBubblesChanged(boolean)>
<com.android.server.notification.SnoozeHelper: java.util.Collection getSnoozed(int,java.lang.String)>
<com.android.systemui.assist.ui.EdgeLight: void <init>(int,float,float)>
<com.android.systemui.recents.views.RecentsView: void onBusEvent(com.android.systemui.recents.events.activity.LaunchTaskEvent)>
<com.android.server.pm.permission.BasePermission: boolean isDynamic()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setQsScrimEnabled(boolean)>
<com.android.server.pm.PackageManagerService: boolean setDefaultBrowserPackageName(java.lang.String,int)>
<com.android.systemui.assist.AssistManager.UiController: void hide()>
<com.android.keyguard.EmergencyButton: boolean performLongClick()>
<com.android.systemui.SwipeHelper: void setMinSwipeProgress(float)>
<com.android.server.policy.PhoneWindowManager: void showGlobalActions()>
<com.android.server.input.InputManagerService.WindowManagerCallbacks: void notifyCameraLensCoverSwitchChanged(long,boolean)>
<com.android.server.hdmi.HdmiCecMessage: int getSource()>
<com.android.server.accessibility.MagnificationController: float getOffsetY(int)>
<com.android.gallery3d.common.BitmapUtils: boolean isRotationSupported(java.lang.String)>
<com.android.settingslib.Utils: boolean isSystemPackage(android.content.res.Resources,android.content.pm.PackageManager,android.content.pm.PackageInfo)>
<com.android.systemui.analytics.DataCollector: void onSensorChanged(android.hardware.SensorEvent)>
<com.android.systemui.shared.system.InputConsumerController: void dump(java.io.PrintWriter,java.lang.String)>
<com.android.systemui.statusbar.notification.MessagingLayoutTransformState: void prepareFadeIn()>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: boolean hasFinishedInitialization()>
<com.android.systemui.statusbar.policy.SensorPrivacyControllerImpl: void onSensorPrivacyChanged(boolean)>
<com.android.keyguard.KeyguardAbsKeyInputView: void verifyPasswordAndUnlock()>
<com.android.systemui.statusbar.phone.PanelView: boolean isInContentBounds(float,float)>
<com.android.systemui.classifier.FalsingManagerProxy: void onBouncerHidden()>
<com.android.statementservice.retriever.AbstractStatementRetriever: com.android.statementservice.retriever.AbstractStatementRetriever createDirectRetriever(android.content.Context)>
<android.text.StaticLayoutPerfTest: void testDraw_RandomText_Styled_WithoutCache()>
<com.android.keyguard.clock.BubbleClockController: void setDarkAmount(float)>
<com.android.systemui.statusbar.notification.row.NotificationGuts: void setHeightChangedListener(com.android.systemui.statusbar.notification.row.NotificationGuts.OnHeightChangedListener)>
<com.android.server.rollback.AppDataRollbackHelper: java.util.Set commitPendingBackupAndRestoreForUser(int,java.util.List)>
<com.android.server.pm.Installer: void moveCompleteApp(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,int)>
<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice queryContentProviders(java.lang.String,int,int,java.lang.String)>
<com.android.powermodel.ActivityReport.Builder: com.android.powermodel.ActivityReport build()>
<com.android.systemui.shortcut.ShortcutKeyServiceProxy.Callbacks: void onShortcutKeyPressed(long)>
<com.android.systemui.tuner.SelectablePreference: void <init>(android.content.Context)>
<com.android.server.autofill.ui.AutoFillUI: void dump(java.io.PrintWriter)>
<com.android.server.location.PassiveProvider: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.statusbar.NotificationLockscreenUserManagerImpl: void updateLockscreenNotificationSetting()>
<com.android.server.usb.descriptors.Usb10ASGeneral: void <init>(int,byte,byte,int)>
<com.android.server.appprediction.RemoteAppPredictionService.RemoteAppPredictionServiceCallbacks: void onConnectedStateChanged(boolean)>
<com.android.server.pm.PackageManagerService: void sendSessionCommitBroadcast(android.content.pm.PackageInstaller.SessionInfo,int)>
<com.android.systemui.volume.VolumeDialogImpl: void onStateChangedH(com.android.systemui.plugins.VolumeDialogController.State)>
<com.android.systemui.bubbles.BubbleData: com.android.systemui.bubbles.Bubble getSelectedBubble()>
<com.android.systemui.volume.VolumeToolTipView: void onFinishInflate()>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector textMatches(java.lang.String)>
<com.android.systemui.statusbar.phone.NotificationsQuickSettingsContainer: void onFinishInflate()>
<com.android.systemui.shared.recents.model.Task: void removeCallback(com.android.systemui.shared.recents.model.Task.TaskCallbacks)>
<com.android.keyguard.NumPadKey: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.classifier.FalsingManagerImpl: void dump(java.io.PrintWriter)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: void setUserLocked(boolean)>
<com.android.server.usb.descriptors.Usb10ASFormatII: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>
<com.android.systemui.pip.phone.PipManager: void expandPip()>
<com.android.systemui.statusbar.SysuiStatusBarStateController: void setDozeAmount(float,boolean)>
<com.android.systemui.statusbar.AlertingNotificationManager: void updateNotification(java.lang.String,boolean)>
<com.android.settingslib.animation.AppearAnimationUtils: float getStartTranslation()>
<com.android.systemui.doze.DozeTriggers: void dump(java.io.PrintWriter)>
<com.android.settingslib.core.lifecycle.Lifecycle: void onSaveInstanceState(android.os.Bundle)>
<com.android.systemui.statusbar.KeyguardAffordanceView: void setImageAlpha(float,boolean)>
<com.android.server.NetworkScoreService.ScoringServiceConnection: void onServiceDisconnected(android.content.ComponentName)>
<com.android.server.audio.AudioService: int getCurrentAudioFocus()>
<com.android.server.pm.PreferredComponent: boolean sameSet(java.util.List,boolean)>
<com.android.settingslib.CustomEditTextPreferenceCompat.CustomPreferenceDialogFragment: com.android.settingslib.CustomEditTextPreferenceCompat.CustomPreferenceDialogFragment newInstance(java.lang.String)>
<com.android.uiautomator.core.UiAutomatorBridge: int getRotation()>
<com.android.systemui.statusbar.phone.NotificationListenerWithPlugins: void onPluginDisconnected(com.android.systemui.plugins.NotificationListenerController)>
<com.android.systemui.pip.phone.PipTouchState: void setDisallowDraggingOffscreen()>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void showRecentApps(boolean)>
<com.android.systemui.usb.UsbDebuggingActivity: void onClick(android.content.DialogInterface,int)>
<com.android.server.policy.PhoneWindowManager: boolean inKeyguardRestrictedKeyInputMode()>
<com.android.systemui.shared.system.RemoteAnimationDefinitionCompat: void addRemoteAnimation(int,com.android.systemui.shared.system.RemoteAnimationAdapterCompat)>
<com.android.systemui.biometrics.FaceDialogView: void restoreState(android.os.Bundle)>
<com.android.server.lights.LightsManager: com.android.server.lights.Light getLight(int)>
<com.android.systemui.statusbar.phone.NavigationBarEdgePanel: void onDraw(android.graphics.Canvas)>
<com.android.server.pm.PackageManagerService: java.lang.String getSharedSystemSharedLibraryPackageName()>
<com.android.systemui.CarSystemUIFactory.ContextHolder: android.content.Context provideContext()>
<com.android.systemui.recents.misc.ReferenceCountedTrigger: java.lang.Runnable incrementAsRunnable()>
<com.android.systemui.ScreenDecorations.DisplayCutoutView: void boundsFromDirection(android.view.DisplayCutout,int,android.graphics.Rect)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: android.bluetooth.BluetoothDevice getDevice()>
<com.android.server.notification.ZenModeFiltering: boolean isMessage(com.android.server.notification.NotificationRecord)>
<javax.microedition.khronos.opengles.GL10: void glLoadMatrixf(float[],int)>
<com.android.printspooler.widget.CustomErrorEditText: void setError(java.lang.CharSequence,android.graphics.drawable.Drawable)>
<com.android.server.pm.Policy: boolean hasInnerPackages()>
<com.android.settingslib.bluetooth.HeadsetProfile: boolean accessProfileEnabled()>
<com.android.server.biometrics.BiometricServiceBase: void enumerateInternal(com.android.server.biometrics.EnumerateClient)>
<com.android.server.pm.UserManagerService: void setApplicationRestrictions(java.lang.String,android.os.Bundle,int)>
<com.android.server.accessibility.AccessibilityManagerService: void removeAccessibilityInteractionConnection(android.view.IWindow)>
<com.android.server.notification.NotificationRecord: com.android.server.notification.NotificationRecord.Light getLight()>
<com.android.server.DynamicSystemService: boolean isInstalled()>
<com.android.systemui.classifier.brightline.BrightLineFalsingManager: void onExpansionFromPulseStopped()>
<com.android.systemui.qs.QSFragment: void hideImmediately()>
<com.android.systemui.qs.QSPanel: void setDetailRecord(com.android.systemui.qs.QSPanel.Record)>
<com.android.gallery3d.common.BitmapUtils: android.graphics.Bitmap resizeDownBySideLength(android.graphics.Bitmap,int,boolean)>
<com.android.server.pm.PackageManagerService: android.content.pm.ChangedPackages getChangedPackages(int,int)>
<com.android.systemui.bubbles.animation.PhysicsAnimationLayout.PhysicsPropertyAnimator: com.android.systemui.bubbles.animation.PhysicsAnimationLayout.PhysicsPropertyAnimator scaleY(float,java.lang.Runnable[])>
<com.android.mtp.MtpDocumentsProvider: void onTrimMemory(int)>
<com.android.settingslib.bluetooth.HeadsetProfile: boolean connect(android.bluetooth.BluetoothDevice)>
<com.android.settingslib.utils.PowerUtil: long convertMsToUs(long)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void updateSectionBoundaries()>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void onStartedWakingUp()>
<com.android.systemui.qs.external.CustomTile: void onDialogShown()>
<com.android.server.hdmi.HdmiCecMessageBuilder: com.android.server.hdmi.HdmiCecMessage buildStandby(int,int)>
<com.android.server.tv.TvInputHardwareManager.Listener: void onHdmiDeviceAdded(android.hardware.hdmi.HdmiDeviceInfo)>
<com.android.settingslib.graph.BatteryMeterDrawableBase: int getOpacity()>
<com.android.server.AnyMotionDetector.Vector3: java.lang.String toString()>
<android.net.dhcp.DhcpServingParamsParcelExt: android.net.dhcp.DhcpServingParamsParcelExt setExcludedAddrs(java.util.Set)>
<com.android.systemui.statusbar.HeadsUpStatusBarView: android.graphics.Rect getIconDrawingRect()>
<com.android.settingslib.NetworkPolicyEditor: android.net.NetworkPolicy getOrCreatePolicy(android.net.NetworkTemplate)>
<com.android.systemui.keyguard.KeyguardSliceProvider: void onDozingChanged(boolean)>
<com.android.systemui.plugins.qs.QS: void hideImmediately()>
<com.android.systemui.doze.DozeHost: void stopPulsing()>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onStrongAuthStateChanged(int)>
<com.android.systemui.statusbar.policy.KeyguardMonitorImpl: boolean isKeyguardFadingAway()>
<com.android.systemui.plugins.FalsingManager: void onQsDown()>
<com.android.vpndialogs.ConfirmDialog: android.graphics.drawable.Drawable getDrawable(java.lang.String)>
<android.media.MediaPlayer2.SubtitleData: byte[] getData()>
<com.android.systemui.HardwareUiLayout: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.PluginInflateContainer: void onDetachedFromWindow()>
<com.android.systemui.statusbar.phone.NavigationPrototypeController: void onLowMemory()>
<com.android.gallery3d.glrenderer.UploadedTexture: int getTarget()>
<com.android.settingslib.RestrictedSwitchPreference: boolean isDisabledByAdmin()>
<com.android.settingslib.wifi.AccessPoint: java.lang.String getKey()>
<com.android.server.content.SyncStorageEngine: android.content.SyncStatusInfo getStatusByAuthority(com.android.server.content.SyncStorageEngine.EndPoint)>
<com.android.systemui.recents.model.RecentsTaskLoader: void onPackageChanged(java.lang.String)>
<com.android.systemui.statusbar.phone.ScrimController: com.android.systemui.statusbar.phone.ScrimState getState()>
<com.android.systemui.statusbar.phone.NavigationBarInflaterView: void onDetachedFromWindow()>
<com.android.systemui.assist.AssistOrbView: void reset()>
<com.android.settingslib.bluetooth.CachedBluetoothDeviceManager: void onScanningStateChanged(boolean)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void drawRect(float,float,float,float,com.android.gallery3d.glrenderer.GLPaint)>
<com.android.server.pm.permission.BasePermission: int getType()>
<com.android.systemui.statusbar.car.ConnectedDeviceSignalController: void onBluetoothStateChange(boolean)>
<com.android.systemui.volume.VolumeDialogImpl: void tryToRemoveCaptionsTooltip()>
<com.android.systemui.ResizingSpace: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.systemui.util.AsyncSensorManager: java.util.List getFullDynamicSensorList()>
<com.android.gallery3d.glrenderer.RawTexture: void yield()>
<com.android.server.audio.PlayerFocusEnforcer: void unduckPlayers(com.android.server.audio.FocusRequester)>
<com.android.server.wallpaper.WallpaperManagerService: android.app.WallpaperInfo getWallpaperInfo(int)>
<com.android.uiautomator.core.UiObject: boolean isLongClickable()>
<com.android.server.pm.Installer: void clearAppData(java.lang.String,java.lang.String,int,int,long)>
<com.android.printspooler.ui.PageAdapter.PreviewArea: void setColumnCount(int)>
<com.android.systemui.qs.QSCarrierGroup: int getSlotIndex(int)>
<com.android.systemui.statusbar.ScrimView: boolean hasOverlappingRendering()>
<com.android.server.display.DisplayBlanker: void requestDisplayState(int,int)>
<com.android.server.TelephonyRegistry: void notifyDataActivity(int)>
<com.android.server.AnyMotionDetector.Vector3: com.android.server.AnyMotionDetector.Vector3 normalized()>
<android.net.netlink.StructInetDiagReqV2: void pack(java.nio.ByteBuffer)>
<com.android.server.media.MediaSessionRecord: void dump(java.io.PrintWriter,java.lang.String)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getDeviceOwnerUserId()>
<com.android.systemui.statusbar.phone.StatusBarWindowController: void setDozing(boolean)>
<com.android.keyguard.CarrierText: void onDetachedFromWindow()>
<com.android.systemui.qs.QSFragment: void animateHeaderSlidingIn(long)>
<com.android.commands.hid.Event: int getProductId()>
<com.android.media.tv.remoteprovider.TvRemoteProvider: void sendPointerSync(android.os.IBinder)>
<com.android.systemui.shared.system.RotationWatcher: void <init>(android.content.Context)>
<com.android.server.display.whitebalance.DisplayWhiteBalanceSettings: void <init>(android.content.Context,android.os.Handler)>
<com.android.systemui.qs.tiles.NightDisplayTile: java.lang.CharSequence getTileLabel()>
<com.android.server.notification.ManagedServices: android.util.SparseArray getAllowedComponents(android.util.IntArray)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void dismiss(com.android.internal.policy.IKeyguardDismissCallback,java.lang.CharSequence)>
<com.android.settingslib.deviceinfo.AbstractWifiMacAddressPreferenceController: void <init>(android.content.Context,com.android.settingslib.core.lifecycle.Lifecycle)>
<com.android.server.slice.SliceProviderPermissions: com.android.server.slice.SliceProviderPermissions.SliceAuthority getOrCreateAuthority(java.lang.String)>
<com.android.server.timedetector.TimeDetectorStrategyCallbackImpl: int systemClockUpdateThresholdMillis()>
<com.android.systemui.statusbar.notification.stack.AmbientState: int getZDistanceBetweenElements()>
<com.android.settingslib.drawer.Tile: int getOrder()>
<com.android.server.usb.descriptors.UsbDescriptorParser: void <init>(java.lang.String,java.util.ArrayList)>
<com.android.settingslib.core.lifecycle.ObservableFragment: void onResume()>
<com.android.systemui.statusbar.policy.KeyguardMonitor: boolean isKeyguardFadingAway()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void onConfigurationChanged(android.content.res.Configuration)>
<android.net.shared.PrivateDnsConfig: void <init>(boolean)>
<com.android.systemui.recents.events.component.SetWaitingForTransitionStartEvent: void <init>(boolean)>
<com.android.keyguard.EmergencyButton.EmergencyButtonCallback: void onEmergencyButtonClickedWhenInCall()>
<com.android.server.broadcastradio.hal2.BroadcastRadioService: boolean hasModule(int)>
<com.android.server.pm.PackageInstallerService: boolean isStageName(java.lang.String)>
<com.android.systemui.recents.views.AnimateableViewBounds: void reset()>
<com.android.systemui.plugins.Plugin: int getVersion()>
<com.android.systemui.qs.QuickStatusBarHeader: void setQSPanel(com.android.systemui.qs.QSPanel)>
<com.android.server.policy.PowerAction: boolean showBeforeProvisioning()>
<com.android.server.usb.descriptors.Usb10ASFormatII: int[] getSampleRates()>
<com.android.server.biometrics.fingerprint.FingerprintService: java.lang.String getLockoutResetIntent()>
<com.android.systemui.ExpandHelper: void <init>(android.content.Context,com.android.systemui.ExpandHelper.Callback,int,int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void showEmptyShadeView(boolean)>
<com.android.systemui.statusbar.phone.NavigationBarTransitions: void onNavigationModeChanged(int)>
<com.android.server.content.ContentService.Lifecycle: void onStartUser(int)>
<com.android.server.locksettings.recoverablekeystore.WrappedKey: void <init>(byte[],byte[],byte[],int)>
<com.android.systemui.plugins.VolumeDialog: void init(int,com.android.systemui.plugins.VolumeDialog.Callback)>
<com.android.server.location.LocationBasedCountryDetector: android.location.Country detectCountry()>
<com.android.server.VibratorService: void systemReady()>
<com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand: int onCommand(java.lang.String)>
<com.android.settingslib.drawable.UserIconDrawable: android.graphics.drawable.Drawable getManagedUserDrawable(android.content.Context)>
<com.android.systemui.recents.utilities.Utilities: boolean isDescendentAccessibilityFocused(android.view.View)>
<com.android.systemui.qs.QSFragment: com.android.systemui.qs.customize.QSCustomizer getCustomizer()>
<com.android.systemui.recents.OverviewProxyService.OverviewProxyListener: void onAssistantProgress(float)>
<com.android.powermodel.AppPower: com.android.powermodel.ComponentPower getComponentPower(com.android.powermodel.Component)>
<com.android.server.policy.WindowManagerPolicy: void systemReady()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onHeadsUpStateChanged(com.android.systemui.statusbar.notification.collection.NotificationEntry,boolean)>
<com.android.systemui.recents.misc.SystemServicesProxy: boolean isTouchExplorationEnabled()>
<com.android.server.input.InputManagerService: void requestPointerCapture(android.os.IBinder,boolean)>
<android.net.ip.RouterAdvertisementDaemon: void <init>(android.net.util.InterfaceParams)>
<com.android.systemui.DessertCase: void onPause()>
<com.android.systemui.shared.recents.view.AppTransitionAnimationSpecsFuture: void composeSpecsSynchronous()>
<com.android.server.policy.PhoneWindowManager: void setKeyguardCandidateLw(com.android.server.policy.WindowManagerPolicy.WindowState)>
<com.android.systemui.shared.system.InputConsumerController: void registerInputConsumer()>
<com.android.systemui.statusbar.policy.CastControllerImpl: void <init>(android.content.Context)>
<com.android.systemui.qs.tileimpl.SlashImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.android.server.location.PassiveProvider: void updateLocation(android.location.Location)>
<com.android.vpndialogs.AlwaysOnDisconnectedDialog: void onClick(android.content.DialogInterface,int)>
<com.android.systemui.statusbar.phone.NotificationIconContainer: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean isDismissed()>
<com.android.server.contentcapture.ContentCaptureManagerService: void onServicePackageUpdatingLocked(int)>
<com.android.gallery3d.exif.ExifTag: boolean isValidIfd(int)>
<com.android.packageinstaller.wear.WearPackageArgs: int getCompanionDeviceVersion(android.os.Bundle)>
<com.android.server.input.InputManagerService.WindowManagerCallbacks: void notifyInputChannelBroken(android.os.IBinder)>
<com.android.systemui.statusbar.notification.TransformState: int getViewWidth()>
<com.android.server.accessibility.AccessibilityManagerService.SecurityPolicy: boolean checkAccessibilityAccess(com.android.server.accessibility.AbstractAccessibilityServiceConnection)>
<com.android.systemui.statusbar.policy.BrightnessMirrorController: void onUiModeChanged()>
<com.android.server.usb.descriptors.Usb20ACOutputTerminal: int getControls()>
<com.android.systemui.statusbar.notification.NotificationEntryManager: void setRowBinder(com.android.systemui.statusbar.notification.collection.NotificationRowBinder)>
<com.android.server.pm.UserManagerService: android.os.Bundle getApplicationRestrictions(java.lang.String)>
<com.android.systemui.keyguard.KeyguardSliceProvider: void onMetadataOrStateChanged(android.media.MediaMetadata,int)>
<com.android.server.pm.UserManagerService: android.os.Bundle getApplicationRestrictionsForUser(java.lang.String,int)>
<com.android.powermodel.AttributionKey: java.lang.String toString()>
<com.android.systemui.shared.system.ActivityManagerWrapper: boolean isLockToAppActive()>
<com.android.server.autofill.AutofillManagerService: void onStart()>
<com.android.server.wallpaper.WallpaperManagerService.Lifecycle: void onStart()>
<com.android.systemui.doze.DozeFactory: com.android.systemui.statusbar.phone.BiometricUnlockController getBiometricUnlockController(com.android.systemui.doze.DozeService)>
<com.android.media.tv.remoteprovider.TvRemoteProvider: void sendKeyDown(android.os.IBinder,int)>
<com.android.systemui.plugins.VolumeDialogController.Callbacks: void onLayoutDirectionChanged(int)>
<com.android.gallery3d.exif.ExifInterface: int setTagDefinition(short,int,short,short,int[])>
<com.android.server.pm.dex.DexManager.RegisterDexModuleResult: void <init>(boolean,java.lang.String)>
<com.android.systemui.keyguard.KeyguardService: android.os.IBinder onBind(android.content.Intent)>
<com.android.systemui.stackdivider.DividerView: void setAdjustedForIme(boolean,long)>
<com.android.systemui.pip.phone.PipMenuActivityController: void onPinnedStackAnimationEnded()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void wipeDataWithReason(int,java.lang.String)>
<com.android.server.display.utils.History: void add(float)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.server.accessibility.AccessibilityManagerService.SecurityPolicy: int getActiveWindowId()>
<com.android.systemui.shared.recents.view.RecentsTransition: android.graphics.Bitmap drawViewIntoHardwareBitmap(int,int,android.view.View,float,int)>
<com.android.systemui.statusbar.policy.CallbackController: void addCallback(java.lang.Object)>
<com.android.systemui.statusbar.phone.LightBarTransitionsController.DarkIntensityApplier: int getTintAnimationDuration()>
<com.android.powermodel.PowerProfile: com.android.powermodel.ComponentProfile getComponent(com.android.powermodel.Component)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: int getNumberOfNotificationChildren()>
<com.android.server.policy.WindowOrientationListener: void writeToProto(android.util.proto.ProtoOutputStream,long)>
<com.android.systemui.plugins.qs.QS: int getDesiredHeight()>
<com.android.systemui.bubbles.BubbleStackView: void onImeVisibilityChanged(boolean,int)>
<com.android.settingslib.bluetooth.PbapClientProfile: void finalize()>
<com.android.server.locksettings.recoverablekeystore.certificate.CertValidationException: void <init>(java.lang.Exception)>
<com.android.systemui.doze.DozeService: void onRequestHideDoze()>
<com.android.keyguard.KeyguardSecurityViewFlipper.LayoutParams: void encodeProperties(android.view.ViewHierarchyEncoder)>
<com.android.systemui.statusbar.notification.row.NotificationContentInflater: void inflateNotificationViews()>
<com.android.printservice.recommendation.util.Preconditions: float[] checkArrayElementsInRange(float[],float,float,java.lang.String)>
<com.android.server.pm.Installer: void idmap(java.lang.String,java.lang.String,int)>
<com.android.systemui.statusbar.phone.StatusBar: com.android.systemui.statusbar.notification.row.NotificationGutsManager getGutsManager()>
<com.android.settingslib.inputmethod.InputMethodSettingValuesWrapper: boolean isEnabledImi(android.view.inputmethod.InputMethodInfo)>
<com.android.preload.DumpDataIO: java.util.Collection deserialize(java.io.File)>
<com.android.printservice.recommendation.plugin.hp.ServiceRecommendationPlugin: void stop()>
<com.android.server.pm.PackageManagerService: boolean setSystemAppInstallState(java.lang.String,boolean,int)>
<com.android.server.appbinding.finders.CarrierMessagingClientServiceFinder: java.lang.String getServiceAction()>
<com.android.settingslib.widget.AppEntitiesHeaderController: com.android.settingslib.widget.AppEntitiesHeaderController setHeaderEmptyRes(int)>
<com.android.settingslib.suggestions.SuggestionControllerMixin: void onLoadFinished(android.content.Loader,java.util.List)>
<com.android.server.content.ContentService.ObserverNode: void <init>(java.lang.String)>
<com.android.gallery3d.common.Utils: java.lang.String[] copyOf(java.lang.String[],int)>
<android.net.ipmemorystore.SameL3NetworkResponse: android.net.ipmemorystore.SameL3NetworkResponseParcelable toParcelable()>
<com.android.server.content.SyncStorageEngine.OnAuthorityRemovedListener: void onAuthorityRemoved(com.android.server.content.SyncStorageEngine.EndPoint)>
<com.android.systemui.qs.tiles.ColorInversionTile: void <init>(com.android.systemui.qs.QSHost)>
<com.android.systemui.statusbar.phone.StatusBarRemoteInputCallback: boolean shouldHandleRemoteInput(android.view.View,android.app.PendingIntent)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void onDetachedFromWindow()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: int getNotificationColor()>
<com.android.server.NetworkManagementService: void addInterfaceToNetwork(java.lang.String,int)>
<com.android.printspooler.ui.PrintActivity: void onPrinterAvailable(android.print.PrinterInfo)>
<android.net.ip.IIpClient: void readPacketFilterComplete(byte[])>
<com.android.server.notification.ConditionProviders: void onUserSwitched(int)>
<com.android.server.vr.SettingsObserver.SettingChangeListener: void onSettingChanged()>
<com.android.settingslib.development.DeveloperOptionsPreferenceController: void <init>(android.content.Context)>
<javax.obex.ClientOperation: java.io.OutputStream openOutputStream()>
<com.android.systemui.statusbar.notification.InstantAppNotifier: void onKeyguardShowingChanged()>
<android.media.MediaSession2Service: void onCreate()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean areGutsExposed()>
<com.android.systemui.analytics.DataCollector: void onNotificatonStartDraggingDown()>
<android.media.MediaPlayer2: void <init>(android.content.Context)>
<javax.obex.ObexHelper: byte[] computeMd5Hash(byte[])>
<com.android.server.usb.descriptors.UsbInterfaceAssoc: byte getFirstInterface()>
<com.android.systemui.doze.DozeScreenState: void transitionTo(com.android.systemui.doze.DozeMachine.State,com.android.systemui.doze.DozeMachine.State)>
<com.android.systemui.statusbar.phone.NavigationBarEdgePanel: void handleTouch(android.view.MotionEvent)>
<com.android.settingslib.net.NetworkCycleDataLoader: void onStartLoading()>
<com.android.gallery3d.common.Utils: boolean handleInterrruptedException(java.lang.Throwable)>
<com.android.systemui.statusbar.notification.row.NotificationGuts.OnGutsClosedListener: void onGutsClosed(com.android.systemui.statusbar.notification.row.NotificationGuts)>
<com.android.statementservice.retriever.Relation: com.android.statementservice.retriever.Relation create(java.lang.String)>
<javax.microedition.khronos.opengles.GL11: void glGenBuffers(int,int[],int)>
<com.android.systemui.assist.ui.CornerPathRenderer: android.graphics.Path getCornerPath(com.android.systemui.assist.ui.CornerPathRenderer.Corner)>
<com.android.systemui.qs.QSAnimator: void onTuningChanged(java.lang.String,java.lang.String)>
<com.android.location.provider.FusedProvider: android.os.IBinder getBinder()>
<com.android.server.notification.ManagedServices.ManagedServiceInfo: void writeToProto(android.util.proto.ProtoOutputStream,long,com.android.server.notification.ManagedServices)>
<com.android.systemui.statusbar.NotificationViewHierarchyManager: void setUpWithPresenter(com.android.systemui.statusbar.NotificationPresenter,com.android.systemui.statusbar.notification.stack.NotificationListContainer)>
<com.android.systemui.statusbar.phone.NavigationBarFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.android.systemui.shared.system.ActivityManagerWrapper: boolean isScreenPinningEnabled()>
<com.android.server.pm.UserManagerService: void onUserLoggedIn(int)>
<com.android.systemui.statusbar.notification.row.HybridNotificationView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.systemui.statusbar.phone.KeyguardPreviewContainer: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.Constants getConstants()>
<com.android.systemui.statusbar.NotificationMediaManager: void setUpWithPresenter(com.android.systemui.statusbar.NotificationPresenter)>
<com.android.packageinstaller.EventResultPersister.EventResultObserver: void onResult(int,int,java.lang.String)>
<com.android.systemui.qs.car.CarQSFooter: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.keyguard.KeyguardSliceProvider: void onConfigChanged(android.service.notification.ZenModeConfig)>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: boolean onTouchEvent(android.view.MotionEvent)>
<javax.microedition.khronos.opengles.GL11: void glBindBuffer(int,int)>
<com.android.settingslib.widget.ActionButtonsPreference: com.android.settingslib.widget.ActionButtonsPreference setButton1Enabled(boolean)>
<android.os.ParcelPerfTest: void timeSetDataPosition()>
<com.android.systemui.statusbar.policy.ExtensionController.ExtensionBuilder: com.android.systemui.statusbar.policy.ExtensionController.ExtensionBuilder withDefault(java.util.function.Supplier)>
<com.android.systemui.shared.system.PinnedStackListenerForwarder: void onShelfVisibilityChanged(boolean,int)>
<com.android.server.notification.PreferencesHelper: java.util.Collection getNotificationChannelGroups(java.lang.String,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setUserProvisioningState(int,int)>
<com.android.printspooler.renderer.IPdfEditor: void write(android.os.ParcelFileDescriptor)>
<com.android.server.appbinding.AppBindingUtils: android.content.pm.ServiceInfo findService(java.lang.String,int,java.lang.String,java.lang.String,java.lang.Class,android.content.pm.IPackageManager,java.lang.StringBuilder)>
<com.android.systemui.volume.MediaRouterWrapper: void addCallback(androidx.mediarouter.media.MediaRouteSelector,androidx.mediarouter.media.MediaRouter.Callback,int)>
<com.android.server.notification.NotificationRecord: java.util.ArrayList getPeopleOverride()>
<com.android.keyguard.KeyguardUpdateMonitor: boolean isUnlockWithFacePossible(int)>
<com.android.server.notification.ZenLog: void traceSetRingerModeInternal(int,int,java.lang.String,int,int)>
<com.android.gallery3d.glrenderer.BasicTexture: void setBorder(boolean)>
<com.android.gallery3d.exif.ExifInterface: boolean hasThumbnail()>
<com.android.systemui.recents.events.component.ShowUserToastEvent: void <init>(int,int)>
<com.android.systemui.util.leak.GarbageMonitor.MemoryTile: long getPss()>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverySessionStorage: void destroy()>
<com.android.server.DisplayThread: android.os.Handler getHandler()>
<com.android.systemui.volume.VolumeDialogComponent: void register()>
<com.android.systemui.statusbar.phone.StatusBarWindowView: android.widget.FrameLayout.LayoutParams generateDefaultLayoutParams()>
<com.android.server.usb.UsbService.Lifecycle: void onStopUser(int)>
<com.android.systemui.util.leak.GarbageMonitor: void startLeakMonitor()>
<android.graphics.perftests.RenderNodePerfTest: void testSetOutline()>
<com.android.systemui.statusbar.phone.PhoneStatusBarPolicy: void onLocationActiveChanged(boolean)>
<com.android.systemui.qs.external.PackageManagerAdapter: android.content.pm.PackageInfo getPackageInfoAsUser(java.lang.String,int,int)>
<com.android.systemui.statusbar.phone.NavigationBarFrame: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.notification.NotificationManagerService: boolean isVisuallyInterruptive(com.android.server.notification.NotificationRecord,com.android.server.notification.NotificationRecord)>
<com.android.gallery3d.exif.ExifTag: boolean setValue(byte[],int,int)>
<com.android.statementservice.retriever.AbstractStatementRetriever.Result: java.util.List getStatements()>
<com.android.settingslib.utils.ThreadUtils: boolean isMainThread()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isCallerApplicationRestrictionsManagingPackage(java.lang.String)>
<com.android.wallpapercropper.CropView: void setTouchEnabled(boolean)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void onHeightChanged(com.android.systemui.statusbar.notification.row.ExpandableView,boolean)>
<com.android.systemui.statusbar.notification.stack.NotificationListContainer: void setExpandingNotification(com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<com.android.systemui.statusbar.policy.BluetoothController: java.util.Collection getDevices()>
<com.android.systemui.statusbar.phone.StatusBar: void notifyBiometricAuthModeChanged()>
<com.android.keyguard.KeyguardSecurityViewFlipper: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.usb.descriptors.report.HTMLReportCanvas: void closeListItem()>
<com.android.systemui.qs.tileimpl.QSIconViewImpl: void setIcon(android.widget.ImageView,com.android.systemui.plugins.qs.QSTile.State,boolean)>
<com.android.server.security.VerityUtils: com.android.server.security.VerityUtils.SetupResult generateApkVeritySetupData(java.lang.String)>
<com.android.server.display.RampAnimator.Listener: void onAnimationEnd()>
<com.android.statementservice.retriever.JsonParser: org.json.JSONObject parse(android.util.JsonReader)>
<com.android.server.usb.descriptors.Usb10ACOutputTerminal: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>
<com.android.server.om.DumpState: void setField(java.lang.String)>
<com.android.server.pm.dex.DexoptUtils: java.lang.String getClassLoaderContext(android.content.pm.SharedLibraryInfo)>
<com.android.server.usb.descriptors.Usb20ACMixerUnit: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>
<com.android.server.usb.descriptors.UsbEndpointDescriptor: void report(com.android.server.usb.descriptors.report.ReportCanvas)>
<com.android.settingslib.widget.AppEntityInfo: java.lang.CharSequence getTitle()>
<com.android.systemui.bubbles.animation.PhysicsAnimationLayout: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: int getBluetoothState()>
<com.android.systemui.statusbar.phone.PanelView: void onHeightUpdated(float)>
<javax.obex.ClientSession: javax.obex.HeaderSet delete(javax.obex.HeaderSet)>
<com.android.server.hdmi.HdmiCecLocalDevicePlayback.ActiveWakeLock: void acquire()>
<com.android.systemui.statusbar.notification.row.NotificationGuts: com.android.systemui.statusbar.notification.row.NotificationGuts.GutsContent getGutsContent()>
<com.android.systemui.statusbar.policy.AccessPointControllerImpl: boolean connect(com.android.settingslib.wifi.AccessPoint)>
<com.android.systemui.qs.tiles.WifiTile.WifiDetailAdapter: void onDetailItemClick(com.android.systemui.qs.QSDetailItems.Item)>
<com.android.systemui.statusbar.policy.RemoteInputView: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.server.notification.NotificationManagerService: void hideNotificationsForPackages(java.lang.String[])>
<com.android.settingslib.NetworkPolicyEditor: void setPolicyCycleDay(android.net.NetworkTemplate,int,java.lang.String)>
<com.android.systemui.qs.QSPanel: void updateBrightnessMirror()>
<com.android.settingslib.widget.apppreference.AppPreference: void setProgress(int)>
<com.android.settingslib.core.lifecycle.ObservableFragment: boolean onOptionsItemSelected(android.view.MenuItem)>
<com.android.server.biometrics.BiometricServiceBase: void handleRemoved(android.hardware.biometrics.BiometricAuthenticator.Identifier,int)>
<com.android.systemui.bubbles.BubbleExpandedView: void setOnBlockedListener(com.android.systemui.bubbles.BubbleExpandedView.OnBubbleBlockedListener)>
<com.android.server.devicepolicy.DevicePolicyCacheImpl: void setPasswordQuality(int,int)>
<com.android.systemui.statusbar.NotificationLockscreenUserManagerImpl: void addUserChangedListener(com.android.systemui.statusbar.NotificationLockscreenUserManager.UserChangedListener)>
<com.android.systemui.recents.views.FixedSizeFrameLayout: void requestLayout()>
<com.android.systemui.qs.QSPanel: android.view.View getDivider()>
<com.android.systemui.classifier.SpeedAnglesClassifier: void <init>(com.android.systemui.classifier.ClassifierData)>
<com.android.server.notification.NotificationSignalExtractor: void initialize(android.content.Context,com.android.server.notification.NotificationUsageStats)>
<com.android.systemui.tuner.TunerPreferenceFragment: void onDisplayPreferenceDialog(androidx.preference.Preference)>
<com.android.server.pm.Installer: void invalidateMounts()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetRenderbufferParameterivOES(int,int,int[],int)>
<com.android.server.location.GnssLocationProvider: com.android.server.location.GnssNavigationMessageProvider getGnssNavigationMessageProvider()>
<com.android.systemui.doze.DozeHost: void onSlpiTap(float,float)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void applyTint(android.view.View,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setDelegatedScopes(android.content.ComponentName,java.lang.String,java.util.List)>
<com.android.systemui.statusbar.notification.row.ExpandableOutlineView: void setActualHeight(int,boolean)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean addCrossProfileWidgetProvider(android.content.ComponentName,java.lang.String)>
<com.android.server.content.ContentService: boolean getSyncAutomaticallyAsUser(android.accounts.Account,java.lang.String,int)>
<com.android.preload.actions.AbstractThreadedDeviceSpecificAction: void <init>(java.lang.String,com.android.ddmlib.IDevice)>
<com.android.preload.classdataretrieval.jdwp.PreloadDebugeeWrapper: void WaitForProcessExit(java.lang.Process)>
<com.android.printspooler.widget.PrintContentView: void openOptions()>
<com.android.server.display.whitebalance.DisplayWhiteBalanceController: boolean setAmbientColorTemperatureOverride(float)>
<com.android.server.policy.WindowManagerPolicy: void keepScreenOnStoppedLw()>
<com.android.preload.classdataretrieval.hprof.Hprof: java.util.Map analyzeHprof(java.io.File)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: boolean hasOverlappingRendering()>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: void setName(java.lang.String)>
<com.android.systemui.statusbar.phone.StatusBar: void startAssist(android.os.Bundle)>
<com.android.systemui.shared.system.WindowCallbacksCompat: void onWindowSizeIsChanging(android.graphics.Rect,boolean,android.graphics.Rect,android.graphics.Rect)>
<android.text.BoringLayoutIsBoringPerfTest: void <init>(java.lang.String,int,boolean,android.text.NonEditableTextGenerator.TextType,boolean)>
<com.android.server.slice.SliceProviderPermissions: java.lang.String getFileName(com.android.server.slice.SlicePermissionManager.PkgUser)>
<com.android.systemui.qs.tiles.DndTile: boolean isAvailable()>
<com.android.systemui.statusbar.phone.PanelView: void startExpandMotion(float,float,boolean,float)>
<com.android.systemui.statusbar.notification.stack.StackStateAnimator: void startAnimationForEvents(java.util.ArrayList,long)>
<com.android.server.pm.PackageManagerService: boolean isFirstBoot()>
<com.android.systemui.shared.system.TaskStackChangeListener: void onActivityUnpinned()>
<com.android.server.slice.SliceClientPermissions: void <init>(com.android.server.slice.SlicePermissionManager.PkgUser,com.android.server.slice.DirtyTracker)>
<com.android.systemui.tuner.RadioListPreference: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.stats.StatsCompanionService.PullingAlarmListener: void onAlarm()>
<com.android.systemui.statusbar.phone.PanelView: void onTrackingStopped(boolean)>
<com.android.printspooler.model.RemotePrintDocument.RemoteAdapterDeathObserver: void onDied()>
<com.android.systemui.statusbar.policy.BatteryControllerImpl: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.SwipeHelper: void setPagingTouchSlop(float)>
<com.android.settingslib.bluetooth.HidProfile: boolean isAutoConnectable()>
<com.android.server.accessibility.AccessibilityManagerService.UserState: java.util.Set getEnabledServicesLocked()>
<com.android.systemui.statusbar.policy.ZenModeController: android.app.NotificationManager.Policy getConsolidatedPolicy()>
<com.android.systemui.statusbar.phone.StatusBar: boolean onSpacePressed()>
<android.media.MediaPlayer2.EventCallback: void onCommandLabelReached(android.media.MediaPlayer2,java.lang.Object)>
<com.android.systemui.statusbar.notification.NotificationEntryManager: void addNotificationLifetimeExtenders(java.util.List)>
<com.android.server.autofill.ui.AutoFillUI: void destroyAll(com.android.server.autofill.ui.PendingUi,com.android.server.autofill.ui.AutoFillUI.AutoFillUiCallback,boolean)>
<com.android.server.audio.AudioService: int requestAudioFocus(android.media.AudioAttributes,int,android.os.IBinder,android.media.IAudioFocusDispatcher,java.lang.String,java.lang.String,int,android.media.audiopolicy.IAudioPolicyCallback,int)>
<com.android.settingslib.net.NetworkCycleDataLoader: long getTotalUsage(android.app.usage.NetworkStats)>
<com.android.server.notification.ConditionProviders: void setCallback(com.android.server.notification.ConditionProviders.Callback)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setKeyguardUserSwitcher(com.android.systemui.statusbar.policy.KeyguardUserSwitcher)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void setContentHeightAnimating(boolean)>
<android.perftests.utils.Stats: void <init>(java.util.List)>
<com.android.server.policy.GlobalActionsProvider.GlobalActionsListener: void onGlobalActionsShown()>
<com.android.systemui.statusbar.phone.BarTransitions: void setAutoDim(boolean)>
<com.android.systemui.qs.QSFooterImpl: void onFinishInflate()>
<com.android.systemui.statusbar.phone.KeyguardStatusBarView: void setVisibility(int)>
<com.android.settingslib.bluetooth.HearingAidProfile: long getHiSyncId(android.bluetooth.BluetoothDevice)>
<com.android.systemui.qs.QSPanel: void updateResources()>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper.Callback: android.view.View getLeftPreview()>
<com.android.systemui.volume.VolumeDialogImpl: void updateRingerH()>
<javax.microedition.khronos.opengles.GL11: void glNormalPointer(int,int,int)>
<com.android.settingslib.applications.AppUtils: boolean isSystemModule(android.content.Context,java.lang.String)>
<com.android.server.LocationManagerService: boolean addGnssNavigationMessageListener(android.location.IGnssNavigationMessageListener,java.lang.String)>
<com.android.systemui.shared.plugins.PluginManagerImpl: void <init>(android.content.Context,com.android.systemui.shared.plugins.PluginInitializer)>
<com.android.mtp.MtpDocumentsService: int onStartCommand(android.content.Intent,int,int)>
<com.android.systemui.statusbar.notification.row.HybridNotificationView: void bind(java.lang.CharSequence,java.lang.CharSequence)>
<com.android.settingslib.notification.ZenRadioLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.policy.CallbackHandler: void setListening(com.android.systemui.statusbar.policy.NetworkController.EmergencyListener,boolean)>
<com.android.server.biometrics.RemovalClient: int stop(boolean)>
<com.android.server.accessibility.MagnificationController: void getMagnificationBounds(int,android.graphics.Rect)>
<com.android.printspooler.model.PageContentRepository.RenderSpec: int hashCode()>
<com.android.systemui.SystemUIFactory: boolean provideAllowNotificationLongPress()>
<com.android.server.ConnectivityService: void reportInetCondition(int,int)>
<com.android.server.location.GnssLocationProvider: com.android.server.location.GnssBatchingProvider getGnssBatchingProvider()>
<android.text.BoringLayoutCreateDrawPerfTest: void timeCreate()>
<com.android.systemui.statusbar.phone.ReverseLinearLayout: void addView(android.view.View,android.view.ViewGroup.LayoutParams)>
<android.media.MediaController2: boolean isPlaybackActive()>
<com.android.server.display.color.DisplayTransformManager: float[] getColorMatrix(int)>
<com.android.systemui.plugins.VolumeDialogController.Callbacks: void onDismissRequested(int)>
<com.android.server.notification.NotificationAdjustmentExtractor: void initialize(android.content.Context,com.android.server.notification.NotificationUsageStats)>
<com.android.systemui.plugins.GlobalActions.GlobalActionsManager: void onGlobalActionsShown()>
<com.android.location.provider.GeocodeProvider: android.os.IBinder getBinder()>
<com.android.systemui.volume.VolumeDialogComponent: void <init>(com.android.systemui.SystemUI,android.content.Context)>
<com.android.server.trust.TrustManagerService: boolean isEscrowTokenActive(long,int)>
<com.android.systemui.doze.DozeDockHandler: void dump(java.io.PrintWriter)>
<com.google.android.startop.iorap.AppLaunchEvent.ActivityLaunchCancelled: void writeToParcelImpl(android.os.Parcel,int)>
<com.android.systemui.statusbar.CastDrawable: boolean setVisible(boolean,boolean)>
<com.android.server.usb.descriptors.UsbDescriptorParser: boolean hasAudioInterface()>
<com.android.server.location.GnssSatelliteBlacklistHelperTest: void blacklistWithOddNumberOfValues_callbackIsNotCalled()>
<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: void createMenu(android.view.ViewGroup,android.service.notification.StatusBarNotification)>
<com.android.settingslib.media.BluetoothMediaDevice: boolean isCarKitDevice()>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: void setBackgroundTintColor(int)>
<com.android.server.location.GnssMeasurementsProvider: void onMeasurementsAvailable(android.location.GnssMeasurementsEvent)>
<com.android.server.ConnectivityService: void startNattKeepaliveWithFd(android.net.Network,java.io.FileDescriptor,int,int,android.net.ISocketKeepaliveCallback,java.lang.String,java.lang.String)>
<com.android.uiautomator.testrunner.TestCaseCollector: void addTestClass(java.lang.String)>
<com.android.server.accounts.AccountManagerService: java.util.Map getPackagesAndVisibilityForAccount(android.accounts.Account)>
<com.android.systemui.statusbar.phone.KeyguardBouncer: boolean isSecure()>
<com.android.systemui.statusbar.phone.ShadeController: boolean isOccluded()>
<android.perftests.utils.ShellHelper: java.lang.String runShellCommand(java.lang.String,java.lang.Object[])>
<com.android.server.pm.PackageManagerService: boolean shouldShowRequestPermissionRationale(java.lang.String,java.lang.String,int)>
<com.android.backupconfirm.BackupRestoreConfirmation: void onSaveInstanceState(android.os.Bundle)>
<com.android.systemui.statusbar.phone.HeadsUpManagerPhone: boolean isHeadsUpGoingAway()>
<com.android.systemui.statusbar.phone.DozeParameters.IntInOutMatcher: boolean isIn(int)>
<javax.obex.PrivateInputStream: void close()>
<com.android.server.pm.KeySetManagerService: java.lang.String encodePublicKey(java.security.PublicKey)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: int getHeadsUpHeight()>
<com.android.server.statusbar.StatusBarShellCommand: int onCommand(java.lang.String)>
<com.android.keyguard.KeyguardPatternView: void <init>(android.content.Context)>
<com.android.systemui.bubbles.animation.OneTimeEndListener: void onAnimationEnd(androidx.dynamicanimation.animation.DynamicAnimation,boolean,float,float)>
<android.os.TracePerfTest: void verifyTracingEnabled()>
<com.android.server.devicepolicy.DevicePolicyManagerService: android.content.Intent createAdminSupportIntent(java.lang.String)>
<com.android.server.testing.shadows.ShadowPerformUnifiedRestoreTask: com.android.server.testing.shadows.ShadowPerformUnifiedRestoreTask getLastCreated()>
<com.android.settingslib.dream.DreamBackend: com.android.settingslib.dream.DreamBackend getInstance(android.content.Context)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void applyExpandAnimationParams(com.android.systemui.statusbar.notification.ActivityLaunchAnimator.ExpandAnimationParameters)>
<com.android.systemui.recents.RecentsImplProxy: void onConfigurationChanged()>
<com.android.server.policy.RestartAction: void <init>(android.content.Context,com.android.server.policy.WindowManagerPolicy.WindowManagerFuncs)>
<com.android.systemui.statusbar.AlertingNotificationManager.AlertEntry: boolean isSticky()>
<com.android.systemui.statusbar.policy.FlashlightControllerImpl: boolean isAvailable()>
<com.android.server.accounts.AccountManagerService: void editProperties(android.accounts.IAccountManagerResponse,java.lang.String,boolean)>
<com.android.server.pm.Policy.PolicyBuilder: com.android.server.pm.Policy.PolicyBuilder setGlobalSeinfoOrThrow(java.lang.String)>
<com.android.gallery3d.glrenderer.BasicTexture: boolean onBind(com.android.gallery3d.glrenderer.GLCanvas)>
<com.android.commands.locksettings.LockSettingsCmd: void main(java.lang.String[])>
<com.android.server.accessibility.AccessibilityManagerService: void setPictureInPictureActionReplacingConnection(android.view.accessibility.IAccessibilityInteractionConnection)>
<com.android.server.locksettings.SyntheticPasswordManager: android.hardware.weaver.V1_0.IWeaver getWeaverService()>
<android.graphics.perftests.RenderNodePerfTest: void testMeasureRenderNodeJniOverhead()>
<com.android.keyguard.KeyguardPINView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.commands.bmgr.BmgrTest: void testRun_whenUserNotSpecified_callsBackupManagerAsSystemUser()>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: android.util.Pair cornerCutoutMargins(android.view.DisplayCutout,android.view.Display)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void resetCheckSnoozeLeavebehind()>
<com.android.future.usb.UsbAccessory: java.lang.String getDescription()>
<android.perftests.SystemPerfTest: void testJniArrayNoop()>
<com.android.systemui.qs.tiles.FlashlightTile: void handleLongClick()>
<com.android.server.ConnectivityService: android.net.ProxyInfo getProxyForNetwork(android.net.Network)>
<com.android.systemui.qs.external.TileLifecycleManager: android.os.IBinder getToken()>
<com.android.settingslib.wifi.AccessPoint: java.lang.String getSpeedLabel(android.content.Context,android.net.ScoredNetwork,int)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: boolean isDimmable()>
<com.android.systemui.statusbar.AlertingNotificationManager: com.android.systemui.statusbar.notification.collection.NotificationEntry getEntry(java.lang.String)>
<com.android.server.slice.SlicePermissionManager.PkgUser: int hashCode()>
<android.text.BoringLayoutCreateDrawPerfTest: void timeDraw()>
<com.android.systemui.recents.views.RecentsView: void setScrimColors(com.android.internal.colorextraction.ColorExtractor.GradientColors,boolean)>
<com.android.settingslib.media.MediaDevice: boolean equals(java.lang.Object)>
<com.android.server.usb.UsbService: void systemReady()>
<com.android.uiautomator.core.UiObject: boolean isCheckable()>
<javax.microedition.khronos.opengles.GL11: void glDeleteBuffers(int,java.nio.IntBuffer)>
<com.android.server.trust.TrustArchive: void logManagingTrust(int,android.content.ComponentName,boolean)>
<com.android.systemui.doze.DozeWallpaperState: void <init>(android.content.Context,com.android.systemui.statusbar.phone.BiometricUnlockController)>
<com.android.server.appop.AppOpsService: void resetHistoryParameters()>
<com.android.systemui.ForegroundServiceLifetimeExtender: boolean shouldExtendLifetime(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.settingslib.display.DisplayDensityUtils: int getDefaultDensity()>
<com.android.systemui.statusbar.notification.row.HybridGroupManager: android.widget.TextView bindOverflowNumber(android.widget.TextView,int)>
<com.android.systemui.statusbar.phone.NotificationGroupAlertTransferHelper: void onHeadsUpStateChanged(com.android.systemui.statusbar.notification.collection.NotificationEntry,boolean)>
<com.android.powermodel.component.ModemProfile: float getScanningMa()>
<com.android.systemui.statusbar.notification.ImageTransformState: void appear(float,com.android.systemui.statusbar.TransformableView)>
<com.android.systemui.doze.DozeMachine: com.android.systemui.doze.DozeMachine.State getState()>
<com.android.server.usb.descriptors.ByteStream: int getUnsignedByte()>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: void removePendingHideExpandedRunnables()>
<com.android.location.provider.ActivityRecognitionProvider: void registerSink(com.android.location.provider.ActivityRecognitionProvider.Sink)>
<javax.microedition.khronos.opengles.GL11: void glTexCoordPointer(int,int,int,int)>
<com.android.commands.bu.AdbBackupTest: void testRun_whenUserNotSpecified_callsAdbBackupAsSystemUser()>
<com.android.settingslib.wifi.WifiTracker: void onDestroy()>
<com.android.systemui.statusbar.phone.NotificationIconContainer: void onDraw(android.graphics.Canvas)>
<com.android.settingslib.bluetooth.A2dpProfile: boolean isHighQualityAudioEnabled(android.bluetooth.BluetoothDevice)>
<android.net.INetworkStackConnector: void makeDhcpServer(java.lang.String,android.net.dhcp.DhcpServingParamsParcel,android.net.dhcp.IDhcpServerCallbacks)>
<com.android.server.audio.PlaybackActivityMonitor: int trackPlayer(android.media.PlayerBase.PlayerIdCard)>
<com.android.server.notification.ConditionProviders: void onBootPhaseAppsCanStart()>
<com.android.settingslib.location.RecentLocationApps: java.util.List getAppList(boolean)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int enableSystemAppWithIntent(android.content.ComponentName,java.lang.String,android.content.Intent)>
<com.android.systemui.statusbar.notification.row.ExpandableView: void updateClipping()>
<com.android.systemui.statusbar.notification.NotificationEntryManager: void addNotificationEntryListener(com.android.systemui.statusbar.notification.NotificationEntryListener)>
<com.android.systemui.keyguard.ScreenLifecycle.Observer: void onScreenTurnedOn()>
<com.android.server.SystemService: void onSwitchUser(int)>
<com.android.gallery3d.exif.ExifInterface: boolean setTagValue(int,java.lang.Object)>
<com.android.photos.views.TiledImageRenderer: int getViewWidth()>
<com.android.server.location.LocationFudger: android.location.Location getOrCreate(android.location.Location)>
<com.android.systemui.statusbar.phone.NotificationIconAreaController: void onDensityOrFontScaleChanged(android.content.Context)>
<com.android.systemui.recents.views.TaskStackView: void updateLayoutAlgorithm(boolean,com.android.systemui.recents.RecentsActivityLaunchState)>
<com.android.packageinstaller.television.UninstallAppProgressFragment: void setDeviceManagerButtonVisible(boolean)>
<com.android.keyguard.clock.ClockLayout: void onFinishInflate()>
<android.media.Session2Link: void disconnect(android.media.Controller2Link,int)>
<com.android.systemui.qs.tiles.WorkModeTile: android.content.Intent getLongClickIntent()>
<com.android.server.policy.WindowOrientationListener: void dump(java.io.PrintWriter,java.lang.String)>
<com.android.systemui.statusbar.policy.RotationLockController: boolean isRotationLocked()>
<com.android.settingslib.CustomDialogPreference: void <init>(android.content.Context)>
<com.android.systemui.statusbar.policy.NetworkController: void addEmergencyListener(com.android.systemui.statusbar.policy.NetworkController.EmergencyListener)>
<com.android.systemui.statusbar.CommandQueue: void topAppWindowChanged(int,boolean)>
<com.android.systemui.statusbar.phone.NotificationIconContainer: int getPartialOverflowExtraPadding()>
<com.android.settingslib.wifi.WifiTrackerFactory: com.android.settingslib.wifi.WifiTracker create(android.content.Context,com.android.settingslib.wifi.WifiTracker.WifiListener,com.android.settingslib.core.lifecycle.Lifecycle,boolean,boolean)>
<com.android.systemui.statusbar.policy.ZenModeControllerImpl: android.service.notification.ZenModeConfig.ZenRule getManualRule()>
<com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper: boolean swipedFastEnough(float,float)>
<com.android.systemui.qs.QuickQSPanel: void setQSPanelAndHeader(com.android.systemui.qs.QSPanel,android.view.View)>
<com.android.systemui.volume.Interaction: void register(android.view.View,com.android.systemui.volume.Interaction.Callback)>
<android.net.shared.ProvisioningConfiguration.Builder: android.net.shared.ProvisioningConfiguration build()>
<com.android.printservice.recommendation.util.MDNSFilteredDiscovery: void <init>(android.content.Context,java.util.Set,com.android.printservice.recommendation.util.MDNSFilteredDiscovery.PrinterFilter)>
<com.android.server.pm.PreferredComponent: java.lang.String getParseError()>
<com.android.systemui.recents.model.RecentsTaskLoadPlan: boolean hasTasks()>
<com.android.server.pm.PackageManagerService: void clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver,int)>
<com.android.server.audio.AudioService: void setBluetoothHearingAidDeviceConnectionState(android.bluetooth.BluetoothDevice,int,boolean,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean requestBugreport(android.content.ComponentName)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glBlendEquation(int)>
<com.android.systemui.recents.views.RecentsView: com.android.systemui.recents.model.TaskStack getStack()>
<com.android.uiautomator.core.UiAutomatorBridge: boolean performGlobalAction(int)>
<com.android.systemui.statusbar.phone.ReverseLinearLayout.Reversable: void reverse(boolean)>
<android.view.textclassifier.TextClassifierPerfTest: void <init>(int)>
<com.android.systemui.statusbar.policy.Clock: void onDarkChanged(android.graphics.Rect,float,int)>
<android.os.ParcelPerfTest: void timeWriteException()>
<com.android.settingslib.CustomEditTextPreferenceCompat: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.util.leak.TrackedObjects: void <init>(com.android.systemui.util.leak.TrackedCollections)>
<com.android.server.pm.permission.PermissionManagerServiceInternal.PermissionCallback: void onPermissionRemoved()>
<com.android.systemui.statusbar.phone.PanelView: void setBar(com.android.systemui.statusbar.phone.PanelBar)>
<com.android.systemui.recents.Recents: void growRecents()>
<com.android.settingslib.wifi.TestAccessPointBuilder: com.android.settingslib.wifi.TestAccessPointBuilder setNetworkInfo(android.net.NetworkInfo)>
<com.android.systemui.stackdivider.ForcedResizableInfoActivity: void onStop()>
<com.android.systemui.statusbar.phone.StatusBarIconHolder: void setWifiState(com.android.systemui.statusbar.phone.StatusBarSignalPolicy.WifiIconState)>
<com.android.server.usb.descriptors.UsbConfigDescriptor: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>
<com.android.systemui.classifier.FalsingManagerImpl: void onNotificationDoubleTap(boolean,float,float)>
<com.android.statsd.loadtest.MemInfoParser: void <init>(long)>
<com.android.server.display.BrightnessTracker: android.content.pm.ParceledListSlice getAmbientBrightnessStats(int)>
<com.android.systemui.statusbar.policy.KeyButtonRipple: void jumpToCurrentState()>
<com.android.settingslib.Utils: int getColorAccentDefaultColor(android.content.Context)>
<com.android.systemui.HardwareBgDrawable: int getCutPoint()>
<com.android.systemui.statusbar.phone.KeyguardDismissHandler: void executeWhenUnlocked(com.android.systemui.plugins.ActivityStarter.OnDismissAction)>
<com.android.systemui.recents.misc.SystemServicesProxy: int getCurrentUser()>
<com.android.server.testing.shadows.ShadowBackupDataOutput: void __constructor__(java.io.FileDescriptor,long,int)>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: boolean isTowardsMenu(float)>
<com.android.server.tv.TvRemoteService: void onStart()>
<com.android.systemui.statusbar.phone.EdgeBackGestureHandler: void dump(java.io.PrintWriter)>
<com.android.systemui.SystemUIFactory: com.android.systemui.statusbar.phone.NotificationIconAreaController createNotificationIconAreaController(android.content.Context,com.android.systemui.statusbar.phone.StatusBar,com.android.systemui.plugins.statusbar.StatusBarStateController)>
<com.android.systemui.statusbar.phone.StatusBar: boolean isKeyguardCurrentlySecure()>
<com.android.systemui.BatteryMeterView: void setIgnoreTunerUpdates(boolean)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void onInstalledCertificatesChanged(android.os.UserHandle,java.util.Collection)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean getStorageEncryption(android.content.ComponentName,int)>
<com.android.systemui.recents.views.RecentsView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.shared.system.SurfaceControlCompat: void <init>(android.view.SurfaceControl)>
<com.android.systemui.recents.RecentsOnboarding: void dump(java.io.PrintWriter)>
<com.android.systemui.statusbar.policy.RotationLockController: void setRotationLockedAtAngle(boolean,int)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setDismissed(boolean)>
<com.android.server.locksettings.SyntheticPasswordManager: long createTokenBasedSyntheticPassword(byte[],int,com.android.internal.widget.LockPatternUtils.EscrowTokenStateChangeCallback)>
<com.android.systemui.statusbar.notification.collection.NotificationData: int getRank(java.lang.String)>
<com.android.systemui.recents.LegacyRecentsImpl: android.os.IBinder getSystemUserCallbacks()>
<com.android.systemui.statusbar.phone.MultiUserSwitch: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.android.server.notification.RankingConfig: void permanentlyDeleteNotificationChannels(java.lang.String,int)>
<com.android.systemui.statusbar.notification.row.NotificationBackgroundView: void setDrawableAlpha(int)>
<com.android.systemui.recents.RecentsActivity: boolean onKeyDown(int,android.view.KeyEvent)>
<com.android.server.content.ContentService: boolean isSyncPending(android.accounts.Account,java.lang.String,android.content.ComponentName)>
<com.android.server.policy.WindowManagerPolicy.WindowState: boolean isVisibleLw()>
<com.android.systemui.statusbar.phone.HeadsUpAppearanceController: void onHeadsUpUnPinned(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.packageinstaller.InstallInstalling: void onResume()>
<android.text.PrecomputedTextPerfTest: void testCreate_NoStyled_Hyphenation()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void onLayout(boolean,int,int,int,int)>
<com.android.server.accessibility.AccessibilityManagerService.SecurityPolicy: boolean canRetrieveWindowsLocked(com.android.server.accessibility.AbstractAccessibilityServiceConnection)>
<com.android.server.DropBoxManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setStatusBar(com.android.systemui.statusbar.phone.StatusBar)>
<com.android.systemui.statusbar.AlphaOptimizedButton: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.uiautomator.core.UiDevice: java.lang.String getCurrentPackageName()>
<com.android.systemui.statusbar.phone.HeadsUpManagerPhone: void onConfigChanged(android.content.res.Configuration)>
<com.android.media.remotedisplay.RemoteDisplay: int getVolumeHandling()>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: int getBluetoothState()>
<com.android.server.display.BrightnessMappingStrategy: void addUserDataPoint(float,float)>
<com.android.systemui.plugin.testoverlayplugin.CustomView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.policy.WindowManagerPolicy: void enableScreenAfterBoot()>
<com.android.systemui.recents.views.TaskViewHeader: void onClick(android.view.View)>
<javax.obex.ClientSession: boolean sendRequest(int,byte[],javax.obex.HeaderSet,javax.obex.PrivateInputStream,boolean)>
<com.android.server.broadcastradio.BroadcastRadioService: void onStart()>
<com.android.systemui.bubbles.BubbleStackView: void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo)>
<com.android.systemui.qs.TileLayout: int getColumnStart(int)>
<com.android.server.notification.NotificationRecord: void setRecordedInterruption(boolean)>
<com.android.systemui.qs.tiles.ColorInversionTile: void handleUserSwitch(int)>
<com.android.keyguard.KeyguardClockSwitch: int getCurrentTextColor()>
<com.android.server.pm.ShortcutService: boolean updateShortcuts(java.lang.String,android.content.pm.ParceledListSlice,int)>
<com.android.server.accounts.AccountManagerService: android.accounts.AuthenticatorDescription[] getAuthenticatorTypes(int)>
<com.android.server.pm.AbstractStatsBase: void <init>(java.lang.String,java.lang.String,boolean)>
<com.android.server.pm.Installer: boolean restoreAppDataSnapshot(java.lang.String,int,java.lang.String,int,int,int)>
<com.android.systemui.tuner.ShortcutPicker: boolean onPreferenceTreeClick(androidx.preference.Preference)>
<android.media.MediaSession2.Builder: android.media.MediaSession2.Builder setSessionActivity(android.app.PendingIntent)>
<com.android.systemui.recents.utilities.Utilities: void removeAnimationListenersRecursive(android.animation.Animator)>
<com.android.server.usb.UsbAlsaDevice: void updateWiredDeviceConnectionState(boolean)>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.ui.dragndrop.DragDropTargetChangedEvent)>
<com.android.systemui.statusbar.notification.row.NotificationContentInflater.AsyncInflationTask: com.android.systemui.statusbar.notification.row.NotificationContentInflater.InflationProgress doInBackground(java.lang.Void[])>
<com.android.server.Watchdog.HandlerChecker: int getCompletionStateLocked()>
<com.android.settingslib.widget.ActionButtonsPreference: com.android.settingslib.widget.ActionButtonsPreference setButton3Icon(int)>
<com.android.systemui.statusbar.phone.NotificationsQuickSettingsContainer: void onHasViewsAboveShelfChanged(boolean)>
<com.android.server.testing.shadows.ShadowCloseGuard: boolean hasReported()>
<com.android.location.provider.ActivityRecognitionEvent: int getEventType()>
<com.android.systemui.qs.external.TileServices: void setMemoryPressure(boolean)>
<com.android.systemui.statusbar.notification.TextViewTransformState: void initFrom(android.view.View,com.android.systemui.statusbar.notification.TransformState.TransformInfo)>
<com.android.systemui.recents.Recents: void onConfigurationChanged(android.content.res.Configuration)>
<android.media.Controller2Link: void notifyPlaybackActiveChanged(int,boolean)>
<com.android.systemui.DessertCaseView.RescalingContainer: void setView(com.android.systemui.DessertCaseView)>
<com.android.settingslib.applications.ApplicationsState.Callbacks: void onRebuildComplete(java.util.ArrayList)>
<com.android.server.slice.SlicePermissionManager: void writeBackup(org.xmlpull.v1.XmlSerializer)>
<com.android.server.GestureLauncherService: boolean isCameraLaunchEnabled(android.content.res.Resources)>
<com.android.systemui.statusbar.StatusBarStateControllerImpl: void setLeaveOpenOnKeyguardHide(boolean)>
<android.os.CpuUsageTrackingPerfTest: void timeSystemThread()>
<com.android.gallery3d.glrenderer.GLCanvas: void drawTexture(com.android.gallery3d.glrenderer.BasicTexture,float[],int,int,int,int)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: void updateIcons(android.content.Context,android.service.notification.StatusBarNotification)>
<android.perftests.utils.ManualBenchmarkState: boolean keepRunning(long)>
<android.database.sqlite.SQLiteTokenizer: boolean isFunction(java.lang.String)>
<com.android.systemui.shared.system.WindowCallbacksCompat: void onWindowDragResizeEnd()>
<com.android.systemui.recents.views.TaskView: void onTaskDataLoaded(com.android.systemui.shared.recents.model.Task,com.android.systemui.shared.recents.model.ThumbnailData)>
<com.android.systemui.keyguard.KeyguardViewMediator: void verifyUnlock(com.android.internal.policy.IKeyguardExitCallback)>
<com.android.systemui.statusbar.notification.VisualStabilityManager: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.notification.NotificationRecord: float getContactAffinity()>
<com.android.systemui.statusbar.phone.NavigationBarView: com.android.systemui.statusbar.phone.ButtonDispatcher getHomeButton()>
<com.android.systemui.recents.views.TaskStackView: boolean useGridLayout()>
<com.android.server.input.InputManagerService: void registerInputDevicesChangedListener(android.hardware.input.IInputDevicesChangedListener)>
<javax.obex.ClientSession: javax.obex.Operation get(javax.obex.HeaderSet)>
<com.android.systemui.qs.tileimpl.ButtonRelativeLayout: java.lang.CharSequence getAccessibilityClassName()>
<com.android.server.content.SyncManager: void clearScheduledSyncOperations(com.android.server.content.SyncStorageEngine.EndPoint)>
<com.android.systemui.qs.QSSecurityFooter: java.lang.CharSequence getVpnMessage(boolean,boolean,java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.policy.SecurityController: boolean isDeviceManaged()>
<com.android.systemui.plugins.ClockPlugin: boolean shouldShowStatusArea()>
<com.android.server.ConnectivityService: void notifyNetworkCallbacks(com.android.server.connectivity.NetworkAgentInfo,int,int)>
<com.android.server.twilight.TwilightState: boolean equals(com.android.server.twilight.TwilightState)>
<com.android.systemui.statusbar.phone.NotificationIconAreaController: void showIconIsolated(com.android.systemui.statusbar.StatusBarIconView,boolean)>
<com.android.server.content.SyncManager.OnReadyCallback: void onReady()>
<com.android.settingslib.deviceinfo.AbstractImsStatusPreferenceController: void displayPreference(androidx.preference.PreferenceScreen)>
<com.android.systemui.statusbar.notification.stack.StackScrollAlgorithm: void <init>(android.content.Context,android.view.ViewGroup)>
<com.android.systemui.statusbar.notification.row.NotificationSnooze.NotificationSnoozeOption: android.service.notification.SnoozeCriterion getSnoozeCriterion()>
<com.android.server.usb.descriptors.Usb10ACHeader: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>
<com.android.server.usb.descriptors.Usb20ASFormatIII: void report(com.android.server.usb.descriptors.report.ReportCanvas)>
<com.android.systemui.qs.car.CarQSFragment: void hideImmediately()>
<com.android.systemui.statusbar.phone.StatusBarWindowController: void setStatusBarFocusable(boolean)>
<com.android.systemui.plugins.FalsingManager: void onTrackingStopped()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean wasJustClicked()>
<com.android.server.content.SyncStorageEngine: com.android.server.content.SyncStorageEngine.AuthorityInfo getAuthority(int)>
<com.android.server.pm.Settings: com.android.server.pm.SettingBase getSettingLPr(int)>
<com.android.settingslib.inputmethod.InputMethodAndSubtypeEnablerManagerCompat: void save(android.content.Context,androidx.preference.PreferenceFragmentCompat)>
<com.android.server.slice.SlicePermissionManager.PkgUser: void <init>(java.lang.String,int)>
<com.android.server.usb.descriptors.Usb20ACOutputTerminal: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>
<com.android.systemui.statusbar.BackDropView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.settingslib.wifi.WifiTracker: void resumeScanning()>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: void setActualHeight(int,boolean)>
<com.android.printspooler.ui.PageAdapter.ContentCallbacks: void onMalformedPdfFile()>
<com.android.systemui.volume.CarVolumeItemAdapter: void <init>(android.content.Context,java.util.List)>
<com.android.gallery3d.glrenderer.RawTexture: void <init>(int,int,boolean)>
<com.android.systemui.statusbar.notification.row.StackScrollerDecorView: void performAddAnimation(long,long,boolean)>
<com.android.server.usb.descriptors.UsbMSMidiHeader: void <init>(int,byte,byte,int)>
<com.android.server.notification.NotificationChannelExtractor: void initialize(android.content.Context,com.android.server.notification.NotificationUsageStats)>
<com.android.systemui.HardwareUiLayout: void onTuningChanged(java.lang.String,java.lang.String)>
<com.android.server.policy.PhoneWindowManager: void unregisterDisplayFoldListener(android.view.IDisplayFoldListener)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setOrganizationColor(android.content.ComponentName,int)>
<com.android.server.devicepolicy.CertificateMonitor: java.lang.String installCaCert(android.os.UserHandle,byte[])>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onKeyguardVisibilityChangedRaw(boolean)>
<com.android.systemui.ResizingSpace: void draw(android.graphics.Canvas)>
<com.android.systemui.settings.ToggleSlider: void setOnChangedListener(com.android.systemui.settings.ToggleSlider.Listener)>
<com.android.systemui.classifier.brightline.BrightLineFalsingManager: void onScreenOff()>
<com.android.server.biometrics.BiometricServiceBase.DaemonWrapper: int authenticate(long,int)>
<com.android.systemui.classifier.FalsingManagerImpl: void onQsDown()>
<com.android.server.LocationManagerService: void requestGeofence(android.location.LocationRequest,android.location.Geofence,android.app.PendingIntent,java.lang.String)>
<com.android.systemui.shared.system.TaskStackChangeListener: void onActivityDismissingDockedStack()>
<com.android.server.pm.PackageManagerService: void grantDefaultPermissionsToActiveLuiApp(java.lang.String,int)>
<android.net.ipmemorystore.OnBlobRetrievedListener: void onBlobRetrieved(android.net.ipmemorystore.Status,java.lang.String,java.lang.String,android.net.ipmemorystore.Blob)>
<com.android.server.notification.NotificationManagerService.NotificationAssistants: java.lang.String getRequiredPermission()>
<com.android.systemui.statusbar.policy.DeadZone: float getFlash()>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.printspooler.ui.FusedPrintersProvider: void setTrackedPrinter(android.print.PrinterId)>
<com.android.server.ConnectivityService: void sendLegacyNetworkBroadcast(com.android.server.connectivity.NetworkAgentInfo,android.net.NetworkInfo.DetailedState,int)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void onVisibilityChanged(android.view.View,int)>
<javax.obex.ClientOperation: long getLength()>
<com.android.server.broadcastradio.hal1.TunerCallback.RunnableThrowingRemoteException: void run()>
<com.android.systemui.assist.ui.InvocationLightsView: void onLayout(boolean,int,int,int,int)>
<com.android.settingslib.inputmethod.InputMethodSettingValuesWrapper: void refreshAllInputMethodAndSubtypes()>
<com.android.keyguard.KeyguardSliceView.Row: void onVisibilityAggregated(boolean)>
<com.android.systemui.statusbar.NotificationViewHierarchyManager: void updateNotificationViews()>
<com.android.systemui.shared.recents.model.TaskKeyLruCache: void <init>(int,com.android.systemui.shared.recents.model.TaskKeyLruCache.EvictionCallback)>
<com.android.systemui.recents.model.HighResThumbnailLoader: void onTaskWindowingModeChanged()>
<com.android.server.devicepolicy.DevicePolicyManagerService: android.content.pm.ParceledListSlice retrievePreRebootSecurityLogs(android.content.ComponentName)>
<com.android.systemui.statusbar.AlertingNotificationManager.AlertEntry: long calculateFinishTime()>
<com.android.packageinstaller.TemporaryFileManager: void onReceive(android.content.Context,android.content.Intent)>
<com.android.systemui.recents.views.FixedSizeFrameLayout: void layoutContents(android.graphics.Rect,boolean)>
<com.android.keyguard.KeyguardSecurityView: void onResume(int)>
<com.android.systemui.glwallpaper.EglHelper: boolean hasEglSurface()>
<com.android.systemui.statusbar.policy.BluetoothController.Callback: void onBluetoothStateChange(boolean)>
<com.android.server.LocationManagerService: void removeGnssMeasurementsListener(android.location.IGnssMeasurementsListener)>
<com.android.printspooler.widget.PrintContentView: int getChildDrawingOrder(int,int)>
<com.android.keyguard.CarrierText: void <init>(android.content.Context)>
<com.android.server.content.ContentShellCommand: int onCommand(java.lang.String)>
<com.android.systemui.statusbar.notification.row.NotificationSnooze: void onFinishInflate()>
<com.android.systemui.statusbar.phone.StatusBarNotificationPresenter: void onExpandClicked(com.android.systemui.statusbar.notification.collection.NotificationEntry,boolean)>
<com.android.server.accounts.AccountManagerService: void clearPassword(android.accounts.Account)>
<com.android.systemui.statusbar.phone.HeadsUpManagerPhone.HeadsUpEntryPhone: void setExpanded(boolean)>
<com.android.systemui.statusbar.notification.NotificationEntryManager: void setUpWithPresenter(com.android.systemui.statusbar.NotificationPresenter,com.android.systemui.statusbar.notification.stack.NotificationListContainer,com.android.systemui.statusbar.policy.HeadsUpManager)>
<com.android.server.DeviceIdleController: void resetPowerSaveWhitelistExceptIdleInternal()>
<com.android.server.usb.UsbDeviceManager: void dump(com.android.internal.util.dump.DualDumpOutputStream,java.lang.String,long)>
<com.android.server.infra.AbstractPerUserSystemService: int getServiceUidLocked()>
<com.android.server.NetworkScoreService.Lifecycle: void <init>(android.content.Context)>
<com.android.settingslib.bluetooth.HearingAidProfile: void setVolume(int)>
<com.android.server.policy.WindowManagerPolicy.WindowState: boolean hasDrawnLw()>
<com.android.systemui.qs.QuickStatusBarHeader: void disable(int,int,boolean)>
<com.android.systemui.statusbar.policy.BatteryController.BatteryStateChangeCallback: void onBatteryLevelChanged(int,boolean,boolean)>
<com.android.systemui.globalactions.GlobalActionsDialog.MyAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<com.android.server.usb.descriptors.report.UsbStrings: java.lang.String getACStreamingInterfaceName(byte)>
<com.android.statsd.loadtest.PerfData: void stopRecording(android.content.Context)>
<com.android.systemui.statusbar.phone.NavigationBarInflaterView: android.view.View inflateButton(java.lang.String,android.view.ViewGroup,boolean,boolean)>
<android.media.MediaPlayer2: void setDrmPropertyString(android.media.DataSourceDesc,java.lang.String,java.lang.String)>
<com.android.uiautomator.core.UiDevice: void unfreezeRotation()>
<com.android.server.display.utils.History: java.lang.String toString()>
<com.android.powermodel.ActivityReport.Builder: void addActivity(com.android.powermodel.Component,com.android.powermodel.ComponentActivity)>
<android.net.shared.ProvisioningConfiguration.Builder: android.net.shared.ProvisioningConfiguration.Builder withRandomMacAddress()>
<com.android.settingslib.bluetooth.A2dpProfile: java.util.List getConnectableDevices()>
<com.android.server.usb.UsbHostManager: void dump(com.android.internal.util.dump.DualDumpOutputStream,java.lang.String,long)>
<com.android.photos.BitmapRegionTileSource.FilePathBitmapSource: com.android.photos.SimpleBitmapRegionDecoder loadBitmapRegionDecoder()>
<com.android.uiautomator.core.UiObject: int getChildCount()>
<com.android.server.policy.WindowOrientationListener: void onTouchStart()>
<com.android.systemui.shared.system.KeyguardManagerCompat: boolean isDeviceLocked(int)>
<android.widget.TextViewSetTextLocalePerfTest: void testSetTextLocale()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: boolean isFullyDark()>
<com.android.keyguard.KeyguardUpdateMonitor: void onKeyguardVisibilityChanged(boolean)>
<com.android.wallpapercropper.CropView: void onSizeChanged(int,int,int,int)>
<com.android.uiautomator.core.UiWatcher: boolean checkForCondition()>
<com.android.server.appprediction.AppPredictionPerUserService: android.content.pm.ServiceInfo newServiceInfoLocked(android.content.ComponentName)>
<com.android.settingslib.RestrictedLockUtilsInternal: void setTextViewPadlock(android.content.Context,android.widget.TextView,boolean)>
<com.android.server.timezone.PackageTrackerIntentHelper: void initialize(java.lang.String,java.lang.String,com.android.server.timezone.PackageTracker)>
<com.android.settingslib.net.NetworkStatsSummaryLoader: void onStartLoading()>
<android.media.MediaPlayer2.EventCallback: void onSubtitleData(android.media.MediaPlayer2,android.media.DataSourceDesc,android.media.MediaPlayer2.SubtitleData)>
<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void revokeDefaultPermissionsFromLuiApps(java.lang.String[],int)>
<com.android.printspooler.ui.FusedPrintersProvider: boolean areHistoricalPrintersLoaded()>
<android.processor.view.inspector.InspectableClassModel.Property: java.util.List getIntEnumEntries()>
<com.android.systemui.statusbar.phone.NavigationBarView: com.android.systemui.statusbar.phone.ButtonDispatcher getImeSwitchButton()>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.ui.focus.FocusNextTaskViewEvent)>
<com.android.server.usb.descriptors.Usb10ACHeader: void report(com.android.server.usb.descriptors.report.ReportCanvas)>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView.OnActivatedListener: void onActivated(com.android.systemui.statusbar.notification.row.ActivatableNotificationView)>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationViewWrapper: void updateExpandability(boolean,android.view.View.OnClickListener)>
<com.android.server.NativeDaemonConnectorException: java.lang.IllegalArgumentException rethrowAsParcelableException()>
<com.android.keyguard.KeyguardUpdateMonitor: boolean isSimPinVoiceSecure()>
<com.android.printspooler.widget.PrintContentView.OptionsStateChangeListener: void onOptionsClosed()>
<com.android.settingslib.graph.BatteryMeterDrawableBase: void setColorFilter(android.graphics.ColorFilter)>
<com.android.server.signedconfig.SignedConfig: void <init>(int,java.util.List)>
<com.android.systemui.qs.tiles.CellularTile: void handleClick()>
<com.android.systemui.recents.views.TaskViewHeader: android.widget.ImageView getIconView()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: com.android.systemui.statusbar.RemoteInputController.Delegate createDelegate()>
<com.android.keyguard.AlphaOptimizedLinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.qs.QSDualTileLabel: void setTypeface(android.graphics.Typeface)>
<com.android.server.NativeDaemonTimeoutException: void <init>(java.lang.String,com.android.server.NativeDaemonEvent)>
<android.net.ipmemorystore.NetworkAttributes: void <init>(java.net.Inet4Address,java.lang.Long,java.lang.String,java.util.List,java.lang.Integer)>
<com.android.systemui.classifier.Stroke: void addPoint(float,float,long)>
<com.android.systemui.shared.system.RecentTaskInfoCompat: boolean supportsSplitScreenMultiWindow()>
<com.android.settingslib.core.instrumentation.LogWriter: void visible(android.content.Context,int,int)>
<com.android.systemui.recents.events.component.ActivityPinnedEvent: void <init>(int)>
<com.android.systemui.statusbar.notification.ActivityLaunchAnimator.ExpandAnimationParameters: int getParentStartClipTopAmount()>
<com.android.media.remotedisplay.RemoteDisplayProvider: android.content.Context getContext()>
<com.android.printservice.recommendation.plugin.xerox.XeroxPrintServiceRecommendationPlugin: void stop()>
<com.android.server.ConnectivityService: void startTcpKeepalive(android.net.Network,java.io.FileDescriptor,int,android.net.ISocketKeepaliveCallback)>
<com.android.server.ConnectivityService: com.android.server.connectivity.NetworkAgentInfo getNetworkAgentInfoForNetwork(android.net.Network)>
<javax.obex.ServerRequestHandler: void updateStatus(java.lang.String)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void scale(float,float,float)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setLegacy(boolean)>
<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin.MenuItem menuItemToExposeOnSnap()>
<android.media.MediaPlayer2: int getAudioSessionId()>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: java.util.ArrayList getMenuItems(android.content.Context)>
<com.android.server.accessibility.KeyboardInterceptor: void onKeyEvent(android.view.KeyEvent,int)>
<com.android.server.appbinding.finders.AppServiceFinder: int getBindFlags(com.android.server.appbinding.AppBindingConstants)>
<com.android.server.pm.PackageManagerService: void notifyPackagesReplacedReceived(java.lang.String[])>
<com.google.android.startop.iorap.AppLaunchEvent: java.lang.String toString()>
<com.android.server.notification.NotificationManagerService: void reportUserInteraction(com.android.server.notification.NotificationRecord)>
<com.android.server.ExtconUEventObserver: void onUEvent(android.os.UEventObserver.UEvent)>
<com.android.server.pm.PackageManagerService: void sendDeviceCustomizationReadyBroadcast()>
<com.android.systemui.statusbar.policy.SmartReplyView: int getHeightUpperLimit()>
<com.android.systemui.statusbar.CommandQueue: void hideBiometricDialog()>
<com.android.systemui.statusbar.notification.TextViewTransformState: int getViewHeight()>
<com.android.systemui.volume.VolumeDialogControllerImpl: void showDndTile(boolean)>
<com.android.settingslib.applications.DefaultAppInfo: void <init>(android.content.Context,android.content.pm.PackageManager,int,android.content.pm.PackageItemInfo)>
<com.android.printservice.recommendation.util.PrinterHashMap: android.net.nsd.NsdServiceInfo addPrinter(android.net.nsd.NsdServiceInfo)>
<com.android.server.infra.AbstractPerUserSystemService: java.lang.String getServicePackageName()>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.util.List setMeteredDataDisabledPackages(android.content.ComponentName,java.util.List)>
<com.android.systemui.recents.model.TaskStack: com.android.systemui.shared.recents.model.Task getNextLaunchTarget()>
<com.android.server.midi.MidiService: android.media.midi.MidiDeviceInfo registerDeviceServer(android.media.midi.IMidiDeviceServer,int,int,java.lang.String[],java.lang.String[],android.os.Bundle,int)>
<com.android.settingslib.CustomDialogPreference.CustomPreferenceDialogFragment: com.android.settingslib.CustomDialogPreference.CustomPreferenceDialogFragment newInstance(java.lang.String)>
<com.android.systemui.qs.external.CustomTile: android.service.quicksettings.Tile getQsTile()>
<com.android.systemui.statusbar.KeyguardIndicationController: void updateIndication(boolean)>
<com.android.server.devicepolicy.OverlayPackagesProvider.Injector: boolean isPerProfileImeEnabled()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean isSystemExpanded()>
<com.android.systemui.pip.tv.PipMenuActivity: void onBackPressed()>
<com.android.printspooler.renderer.IPdfRenderer: int openDocument(android.os.ParcelFileDescriptor)>
<android.text.StaticLayoutPerfTest: void testDraw_RandomText_Styled()>
<com.android.systemui.statusbar.notification.row.NotificationInlineImageResolver: android.graphics.drawable.Drawable loadImage(android.net.Uri)>
<com.android.systemui.statusbar.phone.BarTransitions: int getMode()>
<com.android.server.devicepolicy.DevicePolicyManagerService.Lifecycle: void onUnlockUser(int)>
<com.android.systemui.statusbar.phone.StatusBar: void startPendingIntentDismissingKeyguard(android.app.PendingIntent)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: boolean isConnectedHfpDevice()>
<com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotDeserializer: android.security.keystore.recovery.KeyChainSnapshot deserialize(java.io.InputStream)>
<com.android.systemui.statusbar.StatusBarIconView: com.android.internal.statusbar.StatusBarIcon getStatusBarIcon()>
<com.android.gallery3d.exif.Rational: boolean equals(java.lang.Object)>
<com.android.statsd.shelltools.Utils: boolean isAcceptableStatsd(java.util.logging.Logger,int,java.lang.String)>
<com.android.statsd.loadtest.ConfigFactory: void <init>(android.content.Context)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void onLayout(boolean,int,int,int,int)>
<com.android.settingslib.bluetooth.MapProfile: void finalize()>
<com.android.settingslib.media.PhoneMediaDevice: boolean isConnected()>
<com.android.systemui.statusbar.phone.StatusBarWindowView: void onScrimVisibilityChanged(int)>
<com.android.statementservice.retriever.WebContent: void <init>(java.lang.String,java.lang.Long)>
<com.android.systemui.plugins.qs.QSTile: void userSwitch(int)>
<com.android.systemui.assist.AssistManager: void registerVoiceInteractionSessionListener()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setSystemChildExpanded(boolean)>
<com.android.server.biometrics.fingerprint.FingerprintUserState: java.lang.String getBiometricFile()>
<android.media.Session2Link: void onCancelCommand(android.media.Controller2Link,int)>
<com.android.commands.input.Input: void onRun()>
<android.net.netlink.NetlinkSocket: void sendOneShotKernelMessage(int,byte[])>
<com.android.server.devicepolicy.DevicePolicyManagerService: long getLastSecurityLogRetrievalTime()>
<com.android.systemui.bubbles.BubbleData: void setListener(com.android.systemui.bubbles.BubbleData.Listener)>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverySessionStorage.Entry: void destroy()>
<com.android.systemui.plugins.FalsingManager: boolean isClassiferEnabled()>
<com.android.server.location.GnssLocationProvider.GnssSystemInfoProvider: java.lang.String getGnssHardwareModelName()>
<com.android.systemui.statusbar.notification.stack.StackStateAnimator: void <init>(com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout)>
<com.android.systemui.statusbar.notification.row.NotificationGuts: void onFinishInflate()>
<com.android.server.display.whitebalance.DisplayWhiteBalanceSettings: boolean setLoggingEnabled(boolean)>
<com.android.server.accounts.IAccountAuthenticatorCache: void setListener(android.content.pm.RegisteredServicesCacheListener,android.os.Handler)>
<com.android.server.notification.NotificationRecord: void setSuggestionsGeneratedByAssistant(boolean)>
<com.android.keyguard.KeyguardPatternView: void setKeyguardCallback(com.android.keyguard.KeyguardSecurityCallback)>
<com.android.settingslib.bluetooth.LocalBluetoothProfileManager: com.android.settingslib.bluetooth.HearingAidProfile getHearingAidProfile()>
<com.android.systemui.statusbar.phone.KeyguardBouncer: boolean interceptMediaKey(android.view.KeyEvent)>
<com.android.server.input.InputManagerService: android.hardware.input.TouchCalibration getTouchCalibrationForInputDevice(java.lang.String,int)>
<com.android.server.notification.RankingConfig: android.content.pm.ParceledListSlice getNotificationChannelGroups(java.lang.String,int,boolean,boolean,boolean)>
<com.android.systemui.statusbar.phone.KeyguardClockPositionAlgorithm: int getExpandedClockPosition()>
<com.android.settingslib.core.ConfirmationDialogController: boolean isConfirmationDialogShowing()>
<com.android.preload.ui.SequenceUI: java.lang.String showInputDialog(java.lang.String)>
<com.android.server.policy.WindowManagerPolicy: int interceptKeyBeforeQueueing(android.view.KeyEvent,int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void updateResources()>
<com.android.systemui.glwallpaper.ImageWallpaperRenderer: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.net.netlink.RtNetlinkNeighborMessage: android.net.netlink.RtNetlinkNeighborMessage parse(android.net.netlink.StructNlMsgHdr,java.nio.ByteBuffer)>
<com.android.systemui.volume.ZenModePanel: void setState(int)>
<com.android.server.usb.descriptors.Usb20ASFormatI: void <init>(int,byte,byte,byte,int)>
<com.android.systemui.statusbar.notification.row.NotificationSnooze: boolean isExpanded()>
<com.android.server.webkit.SystemInterface: android.content.pm.PackageInfo getPackageInfoForProvider(android.webkit.WebViewProviderInfo)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean removeKeyPair(android.content.ComponentName,java.lang.String,java.lang.String)>
<com.android.server.pm.PackageInstallerSession: boolean isStagedAndInTerminalState()>
<android.net.ip.IIpClientCallbacks: void startReadPacketFilter()>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb: boolean getShouldCreateSnapshot(int,int)>
<com.android.server.usb.descriptors.UsbInterfaceAssoc: byte getFunctionProtocol()>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onBiometricAuthFailed(android.hardware.biometrics.BiometricSourceType)>
<com.android.settingslib.deviceinfo.AbstractSerialNumberPreferenceController: void displayPreference(androidx.preference.PreferenceScreen)>
<android.net.shared.PrivateDnsConfig: boolean inStrictMode()>
<com.android.systemui.statusbar.phone.NotificationListenerWithPlugins: boolean onPluginNotificationPosted(android.service.notification.StatusBarNotification,android.service.notification.NotificationListenerService.RankingMap)>
<com.android.server.notification.RankingReconsideration: java.lang.String getKey()>
<com.android.statsd.dogfood.DisplayProtoUtils: java.lang.String getDateStr(long)>
<com.android.server.location.RemoteListenerHelper: void setSupported(boolean)>
<android.net.netlink.RtNetlinkNeighborMessage: java.net.InetAddress getDestination()>
<com.android.server.appprediction.RemoteAppPredictionService: long getRemoteRequestMillis()>
<com.android.server.AppStateTracker: void setPowerSaveWhitelistAppIds(int[],int[],int[])>
<android.net.IIpMemoryStore: void retrieveNetworkAttributes(java.lang.String,android.net.ipmemorystore.IOnNetworkAttributesRetrievedListener)>
<com.android.server.content.SyncStorageEngine: boolean getSyncAutomatically(android.accounts.Account,int,java.lang.String)>
<com.android.commands.dpm.Dpm: void onRun()>
<com.android.server.inputmethod.LocaleUtils.LocaleExtractor: java.util.Locale get(java.lang.Object)>
<com.android.server.pm.InstructionSets: java.lang.String getPrimaryInstructionSet(android.content.pm.ApplicationInfo)>
<com.android.systemui.statusbar.phone.NavigationBarView: void setAccessibilityButtonState(boolean,boolean)>
<com.android.server.biometrics.BiometricUserState: java.lang.String getUniqueName()>
<com.android.systemui.statusbar.notification.row.NotificationSnooze.NotificationSnoozeOption: void <init>(android.service.notification.SnoozeCriterion,int,java.lang.CharSequence,java.lang.CharSequence,android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction)>
<com.android.systemui.plugins.IntentButtonProvider: com.android.systemui.plugins.IntentButtonProvider.IntentButton getIntentButton()>
<com.android.systemui.classifier.brightline.TimeLimitedMotionEventBuffer: boolean containsAll(java.util.Collection)>
<com.android.systemui.pip.phone.PipTouchHandler: void onImeVisibilityChanged(boolean,int)>
<com.android.systemui.statusbar.policy.NetworkController: void removeCallback(com.android.systemui.statusbar.policy.NetworkController.SignalCallback)>
<com.android.systemui.qs.tiles.HotspotTile: void handleDestroy()>
<com.android.systemui.statusbar.phone.StatusBarWindowView: com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout getStackScrollLayout()>
<com.android.systemui.statusbar.phone.PanelView: boolean isFullyExpanded()>
<com.android.systemui.recents.views.TaskStackView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.android.settingslib.widget.ActionButtonsPreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.server.biometrics.RemovalClient: boolean onRemoved(android.hardware.biometrics.BiometricAuthenticator.Identifier,int)>
<com.android.systemui.util.leak.GarbageMonitor.Service: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.ScreenDecorations: void onTuningChanged(java.lang.String,java.lang.String)>
<com.android.systemui.qs.QSTileHost: void addCallback(android.os.Handler.Callback)>
<com.android.systemui.tuner.DemoModeFragment: void onResume()>
<com.android.commands.am.Am: void onShowUsage(java.io.PrintStream)>
<android.net.netlink.NetlinkSocket: java.nio.ByteBuffer recvMessage(java.io.FileDescriptor,int,long)>
<com.android.systemui.statusbar.policy.DataSaverController.Listener: void onDataSaverChanged(boolean)>
<com.android.systemui.statusbar.phone.StatusBarSignalPolicy.MobileIconState: com.android.systemui.statusbar.phone.StatusBarSignalPolicy.MobileIconState copy()>
<com.android.server.hdmi.SelectRequestBuffer.PortSelectRequest: void process()>
<com.android.settingslib.inputmethod.SwitchWithNoTextPreference: void <init>(android.content.Context)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glDeleteRenderbuffersOES(int,int[],int)>
<android.media.MediaPlayer2: java.lang.Object loopCurrent(boolean)>
<com.android.settingslib.media.PhoneMediaDevice: boolean connect()>
<com.android.server.display.utils.Plog: com.android.server.display.utils.Plog createSystemPlog(java.lang.String)>
<com.android.server.dreams.DreamController.Listener: void onDreamStopped(android.os.Binder)>
<com.android.systemui.stackdivider.Divider: void onDockedFirstAnimationFrame()>
<com.android.server.ExtconUEventObserver.ExtconInfo: java.lang.String getStatePath()>
<com.android.server.content.SyncStorageEngine: void resetTodayStats(boolean)>
<com.android.server.pm.PackageInstallerSession: void addChildSessionId(int)>
<com.android.server.infra.AbstractMasterSystemService: void visitServicesLocked(com.android.server.infra.AbstractMasterSystemService.Visitor)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void onInitializeAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)>
<com.android.server.biometrics.fingerprint.FingerprintService: com.android.server.biometrics.Constants getConstants()>
<com.android.server.usb.UsbMidiDevice: void close()>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationBigTextTemplateViewWrapper: void <init>(android.content.Context,android.view.View,com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<com.android.server.location.GnssNavigationMessageProviderTest: void register_resume_started()>
<com.android.server.infra.AbstractPerUserSystemService: int getUserId()>
<com.android.systemui.statusbar.phone.NotificationsQuickSettingsContainer: void onFragmentViewCreated(java.lang.String,android.app.Fragment)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector classNameMatches(java.lang.String)>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: void setCurrentSubscriptionsLocked(java.util.List)>
<com.android.server.autofill.ui.AutoFillUI.AutoFillUiCallback: void authenticate(int,int,android.content.IntentSender,android.os.Bundle)>
<com.android.systemui.statusbar.NotificationLockscreenUserManagerImpl: android.util.SparseArray getCurrentProfiles()>
<com.android.server.policy.WindowManagerPolicy.WindowState: boolean canShowWhenLocked()>
<com.android.systemui.pip.phone.PipAccessibilityInteractionConnection.AccessibilityCallbacks: void onAccessibilityShowMenu()>
<com.android.systemui.qs.PagedTileLayout: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.statusbar.notification.stack.AmbientState: boolean isDark()>
<com.android.systemui.classifier.brightline.TimeLimitedMotionEventBuffer: java.util.List subList(int,int)>
<com.android.server.location.ContextHubService: void enableNanoApp(int,android.hardware.location.IContextHubTransactionCallback,long)>
<com.android.systemui.globalactions.GlobalActionsComponent: void handleShowGlobalActionsMenu()>
<com.android.systemui.shared.recents.model.IconLoader.DefaultIconLoader: android.graphics.drawable.Drawable getDefaultIcon(int)>
<com.android.server.locksettings.recoverablekeystore.KeyStoreProxyImpl: void setEntry(java.lang.String,java.security.KeyStore.Entry,java.security.KeyStore.ProtectionParameter)>
<com.android.server.hdmi.HdmiCecLocalDevice.PendingActionClearedCallback: void onCleared(com.android.server.hdmi.HdmiCecLocalDevice)>
<com.android.keyguard.KeyguardPINView: int getWrongPasswordStringId()>
<com.android.server.uri.UriGrantsManagerInternal: void revokeUriPermissionFromOwner(android.os.IBinder,android.net.Uri,int,int)>
<com.android.systemui.recents.events.activity.CancelEnterRecentsWindowAnimationEvent: void <init>(com.android.systemui.shared.recents.model.Task)>
<com.android.settingslib.applications.ApplicationsState.Callbacks: void onPackageIconChanged()>
<com.android.keyguard.clock.BubbleClockController: android.graphics.Bitmap getThumbnail()>
<com.android.server.notification.NotificationUsageStats.SingleNotificationStats: void onDismiss()>
<com.android.systemui.qs.external.TileServiceManager: android.service.quicksettings.IQSTileService getTileService()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setIconAreaController(com.android.systemui.statusbar.phone.NotificationIconAreaController)>
<com.android.systemui.globalactions.ListGridLayout: void removeAllItems()>
<com.android.printservice.recommendation.plugin.hp.ServiceListener.Observer: boolean matchesCriteria(java.lang.String,android.net.nsd.NsdServiceInfo)>
<com.android.systemui.volume.ZenModePanel: void setAutoText(java.lang.CharSequence)>
<com.android.commands.uiautomator.Launcher.Command: void run(java.lang.String[])>
<com.android.server.pm.PackageManagerService: java.lang.String[] setDistractingPackageRestrictionsAsUser(java.lang.String[],int,int)>
<com.android.systemui.statusbar.CommandQueue: void clickQsTile(android.content.ComponentName)>
<com.android.systemui.bubbles.BubbleView: com.android.systemui.statusbar.notification.collection.NotificationEntry getEntry()>
<com.android.server.statusbar.StatusBarManagerInternal: void showPictureInPictureMenu()>
<com.android.keyguard.KeyguardSecurityCallback: boolean isVerifyUnlockOnly()>
<com.android.server.slice.SliceProviderPermissions: com.android.server.slice.SlicePermissionManager.PkgUser getPkg()>
<com.android.systemui.qs.touch.SwipeDetector: void setDetectableScrollConditions(int,boolean)>
<com.android.systemui.shared.system.TransactionCompat: com.android.systemui.shared.system.TransactionCompat setColor(com.android.systemui.shared.system.SurfaceControlCompat,float[])>
<com.android.keyguard.CarrierTextController: void postToCallback(com.android.keyguard.CarrierTextController.CarrierTextCallbackInfo)>
<com.android.systemui.statusbar.notification.stack.AmbientState: com.android.systemui.statusbar.notification.row.ActivatableNotificationView getActivatedChild()>
<com.android.server.NetworkManagementService: void setInterfaceUp(java.lang.String)>
<com.android.systemui.fragments.FragmentService: com.android.systemui.fragments.FragmentHostManager getFragmentHostManager(android.view.View)>
<com.android.server.pm.PackageManagerService: void reportSettingsProblem(int,java.lang.String)>
<android.net.netlink.StructNlAttr: void <init>(short,int,java.nio.ByteOrder)>
<com.android.uiautomator.core.UiObject: java.lang.String getPackageName()>
<com.android.systemui.recents.views.TaskView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.android.systemui.statusbar.phone.PhoneStatusBarPolicy: void onZenChanged(int)>
<com.android.systemui.qs.touch.SwipeDetector.Listener: boolean onDrag(float,float)>
<com.android.server.biometrics.iris.IrisService: com.android.server.biometrics.BiometricUtils getBiometricUtils()>
<com.android.keyguard.clock.BubbleClockController: void onDestroyView()>
<com.android.server.audio.PlayerFocusEnforcer: void mutePlayersForCall(int[])>
<com.android.server.statusbar.StatusBarManagerService: void addTile(android.content.ComponentName)>
<com.android.server.soundtrigger.SoundTriggerInternal: android.hardware.soundtrigger.SoundTrigger.ModuleProperties getModuleProperties()>
<com.android.settingslib.net.NetworkCycleDataLoader: java.lang.Object loadInBackground()>
<com.android.systemui.doze.DozeScreenBrightness: void <init>(android.content.Context,com.android.systemui.doze.DozeMachine.Service,android.hardware.SensorManager,android.hardware.Sensor,com.android.systemui.doze.DozeHost,android.os.Handler,int,int[],int[],boolean)>
<com.android.systemui.statusbar.notification.stack.StackStateAnimator: void setShadeExpanded(boolean)>
<com.android.photos.SimpleBitmapRegionDecoderWrapper: int getHeight()>
<com.android.server.usb.descriptors.UsbInterfaceAssoc: byte getInterfaceCount()>
<com.android.systemui.recents.views.FixedSizeImageView: void <init>(android.content.Context)>
<com.android.server.location.AbstractLocationProvider: void sendExtraCommand(java.lang.String,android.os.Bundle)>
<com.android.systemui.shared.system.PinnedStackListenerForwarder: void onMinimizedStateChanged(boolean)>
<com.android.systemui.qs.car.CarQSFragment: void setHeightOverride(int)>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: boolean isInteractive()>
<com.android.statsd.shelltools.Utils: void runCommand(java.io.File,java.util.logging.Logger,java.lang.String[])>
<com.android.systemui.recents.ScreenPinningRequest: android.widget.FrameLayout.LayoutParams getRequestLayoutParams(int)>
<com.android.server.display.AmbientBrightnessStatsTracker: void dump(java.io.PrintWriter)>
<com.android.systemui.tuner.TunerFragment: void onPause()>
<com.android.settingslib.location.RecentLocationAccesses: java.util.List getAppList()>
<com.android.systemui.glwallpaper.EglHelper: boolean hasEglContext()>
<com.android.systemui.bubbles.BubbleController: boolean shouldAutoBubbleForFlags(android.content.Context,com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.systemui.util.InjectionInflationController.ViewInstanceCreator: com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout createNotificationStackScrollLayout()>
<com.android.keyguard.KeyguardPINView: void showUsabilityHint()>
<com.android.server.policy.WindowManagerPolicy: boolean isKeyguardDrawnLw()>
<com.android.server.pm.UserManagerService: int getUserHandle(int)>
<com.android.server.dreams.DreamManagerService: void <init>(android.content.Context)>
<com.android.server.policy.WindowOrientationListener: void disable()>
<com.android.statsd.dogfood.DisplayProtoUtils: void displayDurationMetricData(java.lang.StringBuilder,com.android.os.StatsLog.StatsLogReport)>
<com.android.server.accessibility.AutoclickController: void onDestroy()>
<com.android.gallery3d.exif.ExifTag: long[] getValueAsLongs()>
<com.android.settingslib.widget.ActionButtonsPreference: com.android.settingslib.widget.ActionButtonsPreference setButton1Visible(boolean)>
<com.android.server.display.color.DisplayTransformManager: boolean setColorMode(int,float[])>
<com.android.server.midi.MidiService.Lifecycle: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void resetViews(boolean)>
<com.android.server.biometrics.BiometricServiceBase: void handleAuthenticated(android.hardware.biometrics.BiometricAuthenticator.Identifier,java.util.ArrayList)>
<com.android.systemui.statusbar.phone.StatusBarWindowController: void setNotTouchable(boolean)>
<com.android.server.DeviceIdleController: boolean addPowerSaveWhitelistExceptIdleInternal(java.lang.String)>
<com.android.server.usb.descriptors.UsbACAudioControlEndpoint: byte getInterval()>
<android.media.MediaSession2Service: void removeSession(android.media.MediaSession2)>
<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: boolean isSnappedAndOnSameSide()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setQsCustomizerShowing(boolean)>
<com.android.server.NetworkScoreService.DispatchingContentObserver: void onChange(boolean,android.net.Uri)>
<com.android.server.devicepolicy.DevicePolicyManagerService: long getMaximumTimeToLock(android.content.ComponentName,int,boolean)>
<com.android.systemui.usb.UsbContaminantActivity: void onCreate(android.os.Bundle)>
<com.android.server.accessibility.AccessibilityManagerService.SecurityPolicy: int resolveCallingUserIdEnforcingPermissionsLocked(int)>
<com.android.systemui.statusbar.policy.KeyButtonRipple: void setDelayTouchFeedback(boolean)>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationViewWrapper: void transformTo(com.android.systemui.statusbar.TransformableView,float)>
<com.android.server.wallpaper.WallpaperManagerService: boolean hasNamedWallpaper(java.lang.String)>
<android.net.IIpMemoryStore: void findL2Key(android.net.ipmemorystore.NetworkAttributesParcelable,android.net.ipmemorystore.IOnL2KeyResponseListener)>
<com.android.systemui.statusbar.notification.row.ExpandableView: void setClipToActualHeight(boolean)>
<com.android.systemui.shared.system.TaskDescriptionCompat: void <init>(android.app.ActivityManager.TaskDescription)>
<com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper.SnoozeOption: int getMinutesToSnoozeFor()>
<com.android.server.audio.AudioService: void setVolumeController(android.media.IVolumeController)>
<com.google.android.startop.iorap.AppIntentEvent: int describeContents()>
<com.android.server.usb.descriptors.UsbEndpointDescriptor: byte getRefresh()>
<com.android.server.notification.PreferencesHelper: void readXml(org.xmlpull.v1.XmlPullParser,boolean,int)>
<com.android.systemui.recents.views.TaskViewHeader: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.settingslib.core.instrumentation.SharedPreferencesLogger.EditorLogger: android.content.SharedPreferences.Editor putInt(java.lang.String,int)>
<com.android.keyguard.KeyguardUpdateMonitor: void dispatchDreamingStarted()>
<com.android.gallery3d.exif.ExifInterface: int getActualTagCount(int,int)>
<com.android.systemui.statusbar.policy.MobileSignalController: void setConfiguration(com.android.systemui.statusbar.policy.NetworkControllerImpl.Config)>
<com.android.systemui.volume.ZenModePanel: void setHidden(boolean)>
<com.android.systemui.statusbar.NotificationShelf: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.bubbles.BubbleController: void onOverlayChanged()>
<com.android.systemui.statusbar.phone.KeyguardBouncer: void showPromptReason(int)>
<com.android.systemui.qs.tiles.DndTile: void <init>(com.android.systemui.qs.QSHost,com.android.systemui.statusbar.policy.ZenModeController,com.android.systemui.plugins.ActivityStarter)>
<com.android.server.stats.StatsCompanionService.AnomalyAlarmListener: void onAlarm()>
<com.android.systemui.recents.model.TaskStack: void setTasks(java.util.List,boolean)>
<com.android.packageinstaller.PackageInstallerActivity.AppErrorDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>
<com.android.gallery3d.glrenderer.UploadedTexture: int getWidth()>
<com.android.server.accessibility.KeyEventDispatcher: boolean notifyKeyEventLocked(android.view.KeyEvent,int,java.util.List)>
<com.android.server.pm.CrossProfileAppsServiceImpl.Injector: android.app.ActivityManagerInternal getActivityManagerInternal()>
<com.android.server.companion.CompanionDeviceManagerService: void <init>(android.content.Context)>
<com.android.server.slice.SliceClientPermissions: void removeAuthority(java.lang.String,int)>
<com.android.keyguard.KeyguardPINView: boolean startDisappearAnimation(java.lang.Runnable)>
<com.android.systemui.statusbar.notification.TransformState: com.android.systemui.statusbar.notification.TransformState createFrom(android.view.View,com.android.systemui.statusbar.notification.TransformState.TransformInfo)>
<com.android.server.pm.UserRestrictionsUtils: boolean contains(android.os.Bundle,java.lang.String)>
<com.android.settingslib.utils.AsyncLoader: void onReset()>
<com.android.systemui.statusbar.car.CarStatusBarKeyguardViewManager: boolean shouldDestroyViewOnReset()>
<com.android.systemui.statusbar.notification.row.FooterViewButton: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.media.projection.MediaProjectionManagerService: void monitor()>
<com.android.systemui.statusbar.policy.NetworkController: java.lang.String getMobileDataNetworkName()>
<javax.obex.ObexTransport: int getMaxTransmitPacketSize()>
<com.android.systemui.statusbar.policy.InflatedSmartReplies: boolean hasFreeformRemoteInput(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.systemui.egg.MLandActivity: void playerMinus(android.view.View)>
<com.android.server.DeviceIdleController.LocalService: void setAlarmsActive(boolean)>
<com.android.systemui.qs.PseudoGridView: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.bubbles.animation.PhysicsAnimationLayout: void <init>(android.content.Context)>
<com.android.server.content.SyncStorageEngine: boolean isSyncPending(com.android.server.content.SyncStorageEngine.EndPoint)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setDark(boolean,boolean,android.graphics.PointF)>
<com.android.commands.uiautomator.RunTestCommand: void run(java.lang.String[])>
<com.android.server.usb.descriptors.tree.UsbDescriptorsTree: void report(com.android.server.usb.descriptors.report.ReportCanvas)>
<com.android.systemui.util.LifecycleFragment: void onDestroy()>
<com.android.systemui.power.EnhancedEstimatesImpl: com.android.settingslib.fuelgauge.Estimate getEstimate()>
<com.android.server.pm.Policy: java.lang.String getMatchedSeInfo(android.content.pm.PackageParser.Package)>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: int getCurrentBackgroundTint()>
<com.android.nfc_extras.NfcAdapterExtras: void setCardEmulationRoute(com.android.nfc_extras.NfcAdapterExtras.CardEmulationRoute)>
<com.android.systemui.qs.tiles.BluetoothTile.BluetoothDetailAdapter: java.lang.CharSequence getTitle()>
<android.media.Session2Link: void onDisconnect(android.media.Controller2Link,int)>
<com.android.server.infra.ServiceNameResolver: java.lang.String getDefaultServiceName(int)>
<com.android.systemui.statusbar.phone.StatusBar: void animateExpandNotificationsPanel()>
<com.android.systemui.statusbar.notification.collection.NotificationData: java.lang.String getOverrideGroupKey(java.lang.String)>
<com.android.systemui.classifier.FalsingManagerProxy: void onStartExpandingFromPulse()>
<com.android.systemui.statusbar.NotificationHeaderUtil: void <init>(com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isAlwaysOnVpnLockdownEnabled(android.content.ComponentName)>
<com.android.systemui.statusbar.phone.NotificationPanelView: float getOverExpansionAmount()>
<com.android.server.locksettings.LockSettingsService: java.lang.String getStringUnchecked(java.lang.String,java.lang.String,int)>
<com.android.commands.locksettings.LockSettingsCmd: void onRun()>
<android.text.StaticLayoutPerfTest: void testCreate_PrecomputedText_NoStyled_Balanced_NoHyphenation()>
<com.android.server.usb.descriptors.ByteStream: int available()>
<com.android.systemui.SystemUIFactory: com.android.systemui.SystemUIFactory getInstance()>
<com.android.preload.ui.SequenceUI: void prepare(javax.swing.ListModel,javax.swing.table.TableModel,java.util.List)>
<com.android.settingslib.media.MediaDevice: java.lang.String getId()>
<com.android.systemui.qs.tileimpl.QSIconViewImpl: android.view.View getIconView()>
<com.android.systemui.recents.views.TaskStackAnimationHelper.Callbacks: void onStartLaunchTargetLaunchAnimation(int,boolean,com.android.systemui.recents.misc.ReferenceCountedTrigger)>
<com.android.server.policy.PowerAction: void onPress()>
<com.android.server.appop.AppOpsService: int noteOperation(int,int,java.lang.String)>
<com.android.server.appprediction.RemoteAppPredictionService: void unregisterPredictionUpdates(android.app.prediction.AppPredictionSessionId,android.app.prediction.IPredictionCallback)>
<android.database.TableHelper: java.lang.String insertSql()>
<android.ext.shared.Version: int getVersionCode()>
<com.android.server.usb.descriptors.UsbDescriptor: byte[] getRawData()>
<com.android.server.search.Searchables: void <init>(android.content.Context,int)>
<com.android.systemui.qs.QSContainerImpl: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.server.pm.PackageManagerService: int checkPermission(java.lang.String,java.lang.String,int)>
<android.net.ip.IpClientCallbacks: void onPostDhcpAction()>
<com.android.externalstorage.ExternalStorageProvider: void onDocIdChanged(java.lang.String)>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: android.os.ParcelUuid[] getUuids()>
<com.android.server.role.RoleManagerService: void <init>(android.content.Context,com.android.server.role.RoleManagerService.RoleHoldersResolver)>
<com.android.systemui.statusbar.phone.DozeParameters: boolean getProxCheckBeforePulse()>
<com.android.systemui.bubbles.animation.PhysicsAnimationLayout.PhysicsPropertyAnimator: com.android.systemui.bubbles.animation.PhysicsAnimationLayout.PhysicsPropertyAnimator withStiffness(float)>
<com.android.systemui.qs.QSAnimator: void onTilesChanged()>
<com.android.systemui.bubbles.BadgedImageView: boolean getDotPosition()>
<com.android.systemui.qs.QSFooterImpl: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.android.server.policy.keyguard.KeyguardStateMonitor: void onTrustedChanged(boolean)>
<com.android.statsd.loadtest.PerfData: void <init>(com.android.statsd.loadtest.LoadtestActivity,boolean,int,com.android.internal.os.StatsdConfigProto.TimeUnit,long,int,boolean,boolean,boolean,boolean,boolean)>
<com.android.server.usb.UsbAlsaDevice: void stop()>
<com.android.server.pm.permission.PermissionManagerServiceInternal: void enforceCrossUserPermission(int,int,boolean,boolean,java.lang.String)>
<com.android.systemui.statusbar.policy.ExtensionController.TunerFactory: java.lang.Object create(java.util.Map)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void <init>(android.content.Context)>
<com.android.gallery3d.exif.ExifTag: void getBytes(byte[],int,int)>
<com.android.systemui.util.Assert: void isMainThread()>
<com.android.server.usb.descriptors.UsbACAudioControlEndpoint: byte getAttribs()>
<com.android.location.provider.ActivityRecognitionProvider: java.lang.String[] getSupportedActivities()>
<com.android.server.usb.UsbService: void setDevicePackage(android.hardware.usb.UsbDevice,java.lang.String,int)>
<com.android.systemui.recents.misc.ReferenceCountedTrigger: void decrement()>
<com.android.systemui.globalactions.GlobalActionsDialog.Action: void onPress()>
<com.android.systemui.statusbar.KeyguardAffordanceView: void finishAnimation(float,java.lang.Runnable)>
<com.android.gallery3d.exif.Rational: void <init>(long,long)>
<com.android.systemui.DependencyBinder: com.android.systemui.statusbar.policy.BluetoothController provideBluetoothController(com.android.systemui.statusbar.policy.BluetoothControllerImpl)>
<com.android.keyguard.NumPadKey: boolean hasOverlappingRendering()>
<com.android.systemui.statusbar.phone.PanelView: void collapseWithDuration(int)>
<android.app.backup.BackupUtilsTest: void testIsFileSpecifiedInPathList_whenFileAndPathListContainsFirstNotRelatedAndSecondContainingDirectory()>
<javax.obex.ClientOperation: void streamClosed(boolean)>
<com.android.settingslib.CustomEditTextPreferenceCompat: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.pip.phone.PipTouchState: boolean isDragging()>
<android.net.dhcp.DhcpServingParamsParcelExt: android.net.dhcp.DhcpServingParamsParcelExt setDefaultRouters(java.util.Set)>
<com.android.systemui.statusbar.phone.NotificationGroupManager: java.util.ArrayList getLogicalChildren(android.service.notification.StatusBarNotification)>
<com.android.systemui.statusbar.KeyguardAffordanceView: float getRestingAlpha()>
<com.android.server.tv.UinputBridge: void sendKeyDown(android.os.IBinder,int)>
<com.android.systemui.chooser.ChooserActivity: void onCreate(android.os.Bundle)>
<com.android.server.locksettings.recoverablekeystore.storage.ApplicationKeyStorage: com.android.server.locksettings.recoverablekeystore.storage.ApplicationKeyStorage getInstance(android.security.KeyStore)>
<com.android.systemui.statusbar.phone.NavigationBarView: com.android.systemui.statusbar.phone.LightBarTransitionsController getLightTransitionsController()>
<android.net.IpMemoryStore: void runWhenServiceReady(java.util.function.Consumer)>
<com.android.server.location.RemoteListenerHelper: com.android.server.location.RemoteListenerHelper.ListenerOperation getHandlerOperation(int)>
<com.android.packageinstaller.PackageInstallerActivity: void onCreate(android.os.Bundle)>
<com.android.settingslib.wifi.TestAccessPointBuilder: com.android.settingslib.wifi.TestAccessPointBuilder setSaved(boolean)>
<com.android.systemui.plugins.DarkIconDispatcher: void removeDarkReceiver(android.widget.ImageView)>
<com.android.settingslib.wifi.WifiTracker.WifiListener: void onWifiStateChanged(int)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: boolean shouldSuppressAmbient()>
<com.android.systemui.statusbar.GestureRecorder.Gesture: java.lang.String toJson()>
<com.android.server.pm.ShortcutService.Lifecycle: void onBootPhase(int)>
<com.android.keyguard.clock.BubbleClockController: void setStyle(android.graphics.Paint.Style)>
<com.android.server.audio.AudioService: int getVibrateSetting(int)>
<com.android.systemui.doze.DozeHost: void stopDozing()>
<com.android.systemui.MultiListLayout: float getAnimationOffsetX()>
<com.android.server.pm.PackageManagerServiceUtils: long getLastModifiedTime(android.content.pm.PackageParser.Package)>
<com.android.uiautomator.testrunner.UiAutomatorInstrumentationTestRunner: android.test.AndroidTestRunner getAndroidTestRunner()>
<com.android.systemui.statusbar.phone.ObservableScrollView: boolean isScrolledToBottom()>
<com.android.systemui.volume.ConfigurableTexts: void <init>(android.content.Context)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.util.List getDelegatedScopes(android.content.ComponentName,java.lang.String)>
<com.android.systemui.statusbar.notification.row.AppOpsInfo: void setGutsParent(com.android.systemui.statusbar.notification.row.NotificationGuts)>
<com.android.settingslib.applications.ApplicationsState: void removePackage(java.lang.String,int)>
<com.android.printspooler.model.MutexFileProvider: void releaseFile()>
<com.android.server.policy.WindowManagerPolicy: boolean isKeyguardOccluded()>
<com.android.server.input.InputManagerService: android.view.InputDevice getInputDevice(int)>
<com.android.systemui.statusbar.policy.UserInfoControllerImpl: void removeCallback(com.android.systemui.statusbar.policy.UserInfoController.OnUserInfoChangedListener)>
<android.net.util.NetdService: android.net.INetd getInstance()>
<com.android.server.media.MediaRouterService: void monitor()>
<android.media.MediaPlayer2.EventCallback: void onTimedMetaDataAvailable(android.media.MediaPlayer2,android.media.DataSourceDesc,android.media.TimedMetaData)>
<com.android.server.notification.ZenModeHelper.RingerModeDelegate: int getRingerModeAffectedStreams(int)>
<com.android.systemui.qs.QSHost: void addCallback(com.android.systemui.qs.QSHost.Callback)>
<com.android.settingslib.deviceinfo.AbstractIpAddressPreferenceController: void updateConnectivity()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void resetScrollPosition()>
<com.android.systemui.qs.QSTileHost: void <init>(android.content.Context,com.android.systemui.statusbar.phone.StatusBarIconController,com.android.systemui.qs.tileimpl.QSFactoryImpl,android.os.Handler,android.os.Looper,com.android.systemui.shared.plugins.PluginManager,com.android.systemui.tuner.TunerService,javax.inject.Provider,com.android.systemui.DumpController)>
<com.android.systemui.recents.views.FixedSizeImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<javax.obex.ApplicationParameter: void addAPPHeader(byte,byte,byte[])>
<com.android.settingslib.widget.FooterPreferenceMixinCompat: com.android.settingslib.widget.FooterPreference createFooterPreference()>
<com.android.systemui.qs.tiles.IntentTile: void handleSetListening(boolean)>
<com.android.keyguard.KeyguardMessageArea: void setNextMessageColor(android.content.res.ColorStateList)>
<com.android.systemui.DessertCaseView: void place(android.view.View,android.graphics.Point,boolean)>
<com.android.server.pm.CrossProfileAppsServiceImpl: java.util.List getTargetUserProfiles(java.lang.String)>
<com.android.server.DeviceIdleController.LocalService: boolean isAppOnWhitelist(int)>
<com.android.settingslib.core.instrumentation.EventLogWriter: void action(int,int,int,java.lang.String,int)>
<android.net.util.VersionedBroadcastListener: void stopListening()>
<com.android.server.usb.descriptors.Usb20ACOutputTerminal: byte getTerminalID()>
<javax.microedition.khronos.opengles.GL11: boolean glIsBuffer(int)>
<com.android.server.accessibility.MagnificationGestureHandler.State: void clear()>
<javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLContext eglGetCurrentContext()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void removeVerticalTranslationListener(java.lang.Runnable)>
<com.android.server.twilight.TwilightState: int hashCode()>
<com.android.systemui.util.InjectionInflationController.ViewInstanceCreator: com.android.keyguard.KeyguardSliceView createKeyguardSliceView()>
<javax.microedition.khronos.opengles.GL10: void glScalex(int,int,int)>
<android.util.ArraySetPerfTest: void testRemoveIf_Small_RemoveNothing()>
<com.android.server.display.VirtualDisplayAdapter.SurfaceControlDisplayFactory: android.os.IBinder createDisplay(java.lang.String,boolean)>
<com.android.systemui.recents.events.ui.TaskSnapshotChangedEvent: void <init>(int,com.android.systemui.shared.recents.model.ThumbnailData)>
<com.android.systemui.recents.views.TaskStackAnimationHelper: void startDeleteAllTasksAnimation(java.util.List,boolean,com.android.systemui.recents.misc.ReferenceCountedTrigger)>
<com.android.server.policy.PhoneWindowManager: void setAllowLockscreenWhenOn(int,boolean)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isRuntimePermission(java.lang.String)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isUninstallInQueue(java.lang.String)>
<com.android.providers.settings.SettingsProvider: java.lang.String keyToString(int)>
<com.android.server.biometrics.BiometricUserState: void parseBiometricsLocked(org.xmlpull.v1.XmlPullParser)>
<com.android.server.pm.DumpState: void setSharedUser(com.android.server.pm.SharedUserSetting)>
<com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer: android.view.NotificationHeaderView getVisibleHeader()>
<com.android.printspooler.ui.PageAdapter: void onPreviewAreaSizeChanged()>
<com.android.server.usb.descriptors.UsbDescriptor: int getOverUnderRunCount()>
<com.android.systemui.qs.PagedTileLayout.TilePage: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.tuner.TunerZenModePanel: void onClick(android.view.View)>
<com.android.gallery3d.glrenderer.BasicTexture: boolean isFlippedVertically()>
<com.android.settingslib.CustomEditTextPreference: boolean isDialogOpen()>
<com.android.server.midi.MidiService: void unregisterDeviceServer(android.media.midi.IMidiDeviceServer)>
<com.android.systemui.fragments.FragmentHostManager: java.lang.Object create(java.lang.Class)>
<javax.microedition.khronos.egl.EGL10: boolean eglWaitGL()>
<com.android.systemui.statusbar.phone.SettingsButton: boolean isAnimating()>
<com.android.externalstorage.TestDocumentsProvider: android.database.Cursor queryDocument(java.lang.String,java.lang.String[])>
<com.android.server.ConnectivityService: java.lang.String getCaptivePortalServerUrl()>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: android.app.Notification.BubbleMetadata getBubbleMetadata()>
<com.android.server.LocationManagerService: boolean stopGnssBatch()>
<com.android.server.pm.permission.PermissionSettings: void readPermissions(org.xmlpull.v1.XmlPullParser)>
<com.android.keyguard.KeyguardPatternView: void setLockPatternUtils(com.android.internal.widget.LockPatternUtils)>
<com.android.systemui.statusbar.notification.stack.AmbientState: boolean isPulsing(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.server.appbinding.finders.AppServiceFinder: java.lang.String validateService(android.content.pm.ServiceInfo)>
<com.android.statsd.dogfood.DisplayProtoUtils: void displayValueMetricData(java.lang.StringBuilder,com.android.os.StatsLog.StatsLogReport)>
<com.android.systemui.statusbar.policy.BluetoothController: java.lang.String getConnectedDeviceName()>
<com.android.systemui.qs.tiles.NightDisplayTile: void handleClick()>
<com.android.systemui.statusbar.phone.DoubleTapHelper: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.systemui.pip.tv.PipMenuActivity: void onResume()>
<com.android.systemui.classifier.FalsingManagerProxy: void onUnlockHintStarted()>
<com.android.powermodel.component.CpuProfile.Builder: void setCoreCount(int[])>
<com.android.systemui.qs.QuickStatusBarHeader: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)>
<android.text.StaticLayoutGetOffsetForHorizontalPerfTest: void setUp()>
<com.android.systemui.statusbar.notification.VisibilityLocationProvider: boolean isInVisibleLocation(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.systemui.recents.views.lowram.TaskStackLowRamLayoutAlgorithm: void <init>(android.content.Context)>
<com.android.systemui.statusbar.notification.stack.ExpandableViewState: void cancelAnimations(android.view.View)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onTrustManagedChanged(int)>
<com.android.wallpapercropper.WallpaperCropActivity: void onDestroy()>
<com.android.systemui.statusbar.phone.StatusBarIconController.IconManager: void destroy()>
<com.android.server.pm.PackageManagerServiceUtils: long calculateInstalledSize(java.lang.String,java.lang.String)>
<com.android.providers.settings.SettingsBackupAgent: void onRestoreFile(android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long)>
<com.android.server.usb.descriptors.Usb20ASGeneral: void report(com.android.server.usb.descriptors.report.ReportCanvas)>
<com.android.systemui.pip.phone.PipAppOpsListener: void onActivityUnpinned()>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void onChildVisibilityChanged(android.view.View,int,int)>
<android.net.ipmemorystore.OnL2KeyResponseListener: void onL2KeyResponse(android.net.ipmemorystore.Status,java.lang.String)>
<com.android.systemui.statusbar.NotificationRemoteInputManager: java.util.Set getEntriesKeptForRemoteInputActive()>
<com.android.systemui.recents.misc.SystemServicesProxy: boolean setTaskWindowingModeSplitScreenPrimary(int,int,android.graphics.Rect)>
<com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer: void addNotification(com.android.systemui.statusbar.notification.row.ExpandableNotificationRow,int)>
<com.android.media.remotedisplay.RemoteDisplayProvider: void onAdjustVolume(com.android.media.remotedisplay.RemoteDisplay,int)>
<com.android.server.appop.AppOpsService: void stopWatchingNoted(com.android.internal.app.IAppOpsNotedCallback)>
<com.android.server.BinderCallsStatsService: void systemReady(android.content.Context)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: android.view.NotificationHeaderView getContractedNotificationHeader()>
<com.android.server.usb.UsbService.Lifecycle: void onBootPhase(int)>
<com.android.server.pm.IntentFilterVerificationState: void addFilter(android.content.pm.PackageParser.ActivityIntentInfo)>
<javax.obex.ServerRequestHandler: void setConnectionId(long)>
<com.android.systemui.pip.phone.PipMenuActivityController: void pokeMenu()>
<com.android.settingslib.net.NetworkStatsSummaryLoader.Builder: com.android.settingslib.net.NetworkStatsSummaryLoader.Builder setEndTime(long)>
<com.android.server.accessibility.KeyEventDispatcher: void <init>(android.os.Handler,int,java.lang.Object,android.os.PowerManager,android.os.Handler)>
<com.android.systemui.statusbar.policy.SecurityControllerImpl: java.lang.CharSequence getDeviceOwnerOrganizationName()>
<android.net.netlink.StructNdMsg: android.net.netlink.StructNdMsg parse(java.nio.ByteBuffer)>
<com.android.pacprocessor.PacNative: boolean isActive()>
<com.android.server.notification.NotificationRecord: boolean hasAdjustment(java.lang.String)>
<com.android.systemui.recents.views.lowram.TaskStackLowRamLayoutAlgorithm: float getMaxOverscroll()>
<android.net.shared.LinkPropertiesParcelableUtil: android.net.LinkProperties toStableParcelable(android.net.LinkProperties)>
<com.android.server.statusbar.StatusBarManagerService: void onPanelRevealed(boolean,int)>
<com.android.server.midi.MidiService: void registerListener(android.os.IBinder,android.media.midi.IMidiDeviceListener)>
<com.android.systemui.statusbar.phone.StatusBar: void animateCollapsePanels()>
<com.android.pacprocessor.PacNative: boolean stopPacSupport()>
<com.android.server.pm.Installer: void markBootComplete(java.lang.String)>
<com.android.systemui.statusbar.RemoteInputController: void <init>(com.android.systemui.statusbar.RemoteInputController.Delegate)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: boolean isRowAnimatingAway()>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void onStartedGoingToSleep(int)>
<com.android.systemui.power.PowerNotificationWarnings: void userSwitched()>
<com.android.server.slice.SlicePermissionManager: void revokeSliceAccess(java.lang.String,int,java.lang.String,int,android.net.Uri)>
<javax.obex.ServerRequestHandler: int onSetPath(javax.obex.HeaderSet,javax.obex.HeaderSet,boolean,boolean)>
<com.android.server.pm.Installer: void installApkVerity(java.lang.String,java.io.FileDescriptor,int)>
<com.android.printspooler.ui.PageAdapter: long getItemId(int)>
<com.android.server.pm.PackageManagerService: void resetRuntimePermissions()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void updateFooter()>
<com.android.server.policy.WakeGestureListener: void onWakeUp()>
<com.android.server.location.GnssMeasurementsProviderTest: void setUp()>
<android.app.ResourcesPerfTest: void getColor()>
<com.android.server.pm.IntentFilterVerificationState: void setPendingState()>
<com.android.server.pm.Installer: void destroyAppProfiles(java.lang.String)>
<com.android.settingslib.suggestions.SuggestionLoader: void onDiscardResult(java.util.List)>
<com.android.systemui.statusbar.phone.BiometricUnlockController: boolean hasScreenTurnedOnSinceAuthenticating()>
<com.android.server.biometrics.ClientMonitor: com.android.server.biometrics.BiometricServiceBase.DaemonWrapper getDaemonWrapper()>
<com.android.keyguard.clock.BubbleClockController: void setTextColor(int)>
<com.android.systemui.recents.views.TaskStackView: boolean setFocusedTask(int,boolean,boolean)>
<com.android.systemui.qs.external.TileLifecycleManager: void flushMessagesAndUnbind()>
<com.android.nfc_extras.NfcAdapterExtras: com.android.nfc_extras.NfcAdapterExtras.CardEmulationRoute getCardEmulationRoute()>
<com.android.systemui.statusbar.EmptyShadeView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.notification.NotificationManagerService.NotificationListeners: void onServiceRemovedLocked(com.android.server.notification.ManagedServices.ManagedServiceInfo)>
<com.google.android.startop.iorap.SystemServiceEvent: boolean equals(java.lang.Object)>
<android.app.backup.ForwardingBackupAgent: void onRestoreFile(android.os.ParcelFileDescriptor,long,java.io.File,int,long,long)>
<com.android.systemui.ExpandHelper.Callback: void expansionStateChanged(boolean)>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)>
<com.android.systemui.SystemUISecondaryUserService: android.os.IBinder onBind(android.content.Intent)>
<com.android.server.locksettings.LockSettingsService: java.lang.String generateKey(java.lang.String)>
<com.android.server.stats.StatsCompanionService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.notification.NotificationManagerService.NotificationListeners: void notifyRankingUpdateLocked(java.util.List)>
<com.android.systemui.statusbar.policy.DeviceProvisionedControllerImpl: boolean isUserSetup(int)>
<com.android.server.notification.ManagedServices: boolean isSameUser(android.os.IInterface,int)>
<com.android.uiautomator.core.UiObject: java.lang.String getClassName()>
<com.android.server.IpSecService: void systemReady()>
<com.android.systemui.statusbar.policy.DeviceProvisionedControllerImpl: void <init>(android.content.Context,android.os.Handler)>
<com.android.server.policy.WindowOrientationListener: android.os.Handler getHandler()>
<com.android.preload.actions.ComputeThresholdAction: void run()>
<com.android.systemui.statusbar.CommandQueue: void animateExpandSettingsPanel(java.lang.String)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector packageName(java.lang.String)>
<com.android.server.notification.ZenModeHelper: void dump(java.io.PrintWriter,java.lang.String)>
<com.android.server.pm.permission.PermissionManagerServiceInternal: void setWhitelistedRestrictedPermissions(android.content.pm.PackageParser.Package,int[],java.util.List,int,int,com.android.server.pm.permission.PermissionManagerServiceInternal.PermissionCallback)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setBackupServiceEnabled(android.content.ComponentName,boolean)>
<com.android.systemui.recents.utilities.AnimationProps: long getStartDelay(int)>
<com.android.server.audio.AudioService.Lifecycle: void onStart()>
<com.android.server.biometrics.BiometricServiceBase: java.lang.String getManageBiometricPermission()>
<com.android.systemui.DessertCaseView: void fillFreeList()>
<com.android.systemui.statusbar.phone.StatusBarNotificationPresenter: void onActivated(com.android.systemui.statusbar.notification.row.ActivatableNotificationView)>
<com.android.systemui.shared.plugins.PluginEnabler: void setEnabled(android.content.ComponentName)>
<com.android.systemui.SystemUIFactory: com.android.systemui.statusbar.NotificationLockscreenUserManager provideNotificationLockscreenUserManager(android.content.Context)>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationHeaderViewWrapper: void onContentUpdated(com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<com.android.photos.views.TiledImageView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.phone.DozeParameters: long getWallpaperAodDuration()>
<com.android.systemui.shared.system.RecentTaskInfoCompat: android.app.ActivityManager.TaskDescription getTaskDescription()>
<com.android.commands.am.Am: void onRun()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onAnimationToSideStarted(boolean,float,float)>
<com.android.server.pm.PreferredComponent: android.content.ComponentName[] discardObsoleteComponents(java.util.List)>
<com.android.server.usb.descriptors.report.ReportCanvas: void closeListItem()>
<com.android.server.midi.MidiService: void closeDevice(android.os.IBinder,android.os.IBinder)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isCurrentInputMethodSetByOwner()>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: void setScanMode(int)>
<com.android.server.slice.SliceManagerService: com.android.server.slice.PinnedSliceState createPinnedSlice(android.net.Uri,java.lang.String)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean switchUser(android.content.ComponentName,android.os.UserHandle)>
<com.android.systemui.volume.VolumePrefs: boolean get(android.content.Context,java.lang.String,boolean)>
<com.android.systemui.statusbar.phone.StatusBarWindowController: boolean getPanelExpanded()>
<com.android.systemui.InitController: void addPostInitTask(java.lang.Runnable)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean isShowingIcon()>
<android.processor.view.inspector.InspectableClassModel.Accessor: void <init>(java.lang.String,android.processor.view.inspector.InspectableClassModel.Accessor.Type)>
<com.android.server.policy.WindowOrientationListener: void enable(boolean)>
<com.android.systemui.qs.QSDualTileLabel: void setFirstLineCaret(android.graphics.drawable.Drawable)>
<com.android.systemui.statusbar.phone.NavigationBarView: void updateSystemUiStateFlags()>
<android.media.Session2Token: boolean equals(java.lang.Object)>
<com.android.systemui.qs.external.TileLifecycleManager: void onReceive(android.content.Context,android.content.Intent)>
<com.android.settingslib.bluetooth.PbapClientProfile: java.util.List getConnectedDevices()>
<com.android.systemui.DependencyBinder: com.android.systemui.statusbar.phone.ManagedProfileController provideManagedProfileController(com.android.systemui.statusbar.phone.ManagedProfileControllerImpl)>
<com.android.server.ConnectivityService: int getLastTetherError(java.lang.String)>
<com.android.server.biometrics.fingerprint.FingerprintConstants: java.lang.String tagEnrollStartError()>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void onScreenTurnedOn()>
<com.android.server.usb.UsbService: void bootCompleted()>
<com.android.systemui.usb.UsbDebuggingActivity: void onWindowAttributesChanged(android.view.WindowManager.LayoutParams)>
<com.android.systemui.pip.phone.PipAppOpsListener.Callback: void dismissPip()>
<com.android.gallery3d.common.Utils: void assertTrue(boolean)>
<javax.obex.PrivateOutputStream: void <init>(javax.obex.BaseStream,int)>
<com.android.server.policy.WindowManagerPolicy: void onSystemUiStarted()>
<com.android.server.timezone.PackageTracker: java.lang.String toString()>
<com.android.settingslib.applications.StorageStatsSource: com.android.settingslib.applications.StorageStatsSource.ExternalStorageStats getExternalStorageStats(java.lang.String,android.os.UserHandle)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void onBiometricHelp(java.lang.String)>
<com.android.systemui.pip.phone.PipTouchState: boolean isWaitingForDoubleTap()>
<com.android.systemui.statusbar.phone.DozeParameters: int getPulseInDuration()>
<com.android.server.locksettings.recoverablekeystore.KeyStoreProxy: java.security.Key getKey(java.lang.String,char[])>
<com.android.printservice.recommendation.plugin.xerox.XeroxPrintServiceRecommendationPlugin: void <init>(android.content.Context)>
<com.android.server.notification.NotificationManagerService.NotificationListeners: void onServiceAdded(com.android.server.notification.ManagedServices.ManagedServiceInfo)>
<com.android.systemui.AutoReinflateContainer: void onLocaleListChanged()>
<com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem: boolean handleRequestShortAudioDescriptor(com.android.server.hdmi.HdmiCecMessage)>
<com.android.packageinstaller.television.UninstallAppProgress.ProgressFragment: void setUsersButtonVisible(boolean)>
<com.android.systemui.qs.external.QSTileServiceWrapper: android.os.IBinder asBinder()>
<com.android.systemui.shared.system.RemoteAnimationDefinitionCompat: void addRemoteAnimation(int,int,com.android.systemui.shared.system.RemoteAnimationAdapterCompat)>
<com.android.server.policy.WindowManagerPolicy: void screenTurningOff(com.android.server.policy.WindowManagerPolicy.ScreenOffListener)>
<com.android.server.usb.UsbService: void grantAccessoryPermission(android.hardware.usb.UsbAccessory,int)>
<com.android.server.notification.RankingReconsideration: boolean isDone()>
<com.android.server.location.GnssLocationProvider: void onUpdateSatelliteBlacklist(int[],int[])>
<com.android.settingslib.CustomDialogPreferenceCompat: void <init>(android.content.Context)>
<com.android.server.location.CountryDetectorBase: void stop()>
<com.android.systemui.plugins.qs.QS: android.view.View getHeader()>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onBiometricAcquired(android.hardware.biometrics.BiometricSourceType)>
<com.android.statementservice.retriever.Statement: com.android.statementservice.retriever.Statement create(com.android.statementservice.retriever.AbstractAsset,com.android.statementservice.retriever.AbstractAsset,com.android.statementservice.retriever.Relation)>
<com.android.systemui.doze.DozeMachine.Part: void transitionTo(com.android.systemui.doze.DozeMachine.State,com.android.systemui.doze.DozeMachine.State)>
<com.android.systemui.recents.views.TaskViewAccessibilityDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)>
<com.android.server.biometrics.BiometricServiceBase: boolean checkAppOps(int,java.lang.String)>
<com.android.systemui.recents.IRecentsSystemUserCallbacks: void sendRecentsDrawnEvent()>
<android.app.backup.BackupUtilsTest: void testIsFileSpecifiedInPathList_whenFileAndPathListHasDirectoryWhoseNameIsPrefix2()>
<com.android.settingslib.widget.LayoutPreference: void <init>(android.content.Context,android.view.View)>
<com.android.server.usb.UsbAlsaDevice: java.lang.String getAlsaCardDeviceString()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: boolean glIsFramebufferOES(int)>
<com.android.systemui.statusbar.hvac.AnimatedTemperatureView: void setTemp(float)>
<com.android.settingslib.animation.AppearAnimationUtils: void <init>(android.content.Context)>
<com.android.server.display.DisplayModeDirector: void setListener(com.android.server.display.DisplayModeDirector.Listener)>
<javax.microedition.khronos.opengles.GL10: void glLightModelx(int,int)>
<com.android.server.notification.NotificationRecord: void calculateGrantableUris()>
<com.android.server.notification.RankingHelper: int indexOf(java.util.ArrayList,com.android.server.notification.NotificationRecord)>
<com.android.systemui.plugins.VolumeDialogController: void removeCallback(com.android.systemui.plugins.VolumeDialogController.Callbacks)>
<com.android.server.locksettings.LockSettingsService: void tieManagedProfileLockIfNecessary(int,byte[])>
<com.android.server.soundtrigger.SoundTriggerHelper: void onServiceDied()>
<com.android.server.statusbar.StatusBarManagerService: void onNotificationVisibilityChanged(com.android.internal.statusbar.NotificationVisibility[],com.android.internal.statusbar.NotificationVisibility[])>
<com.android.systemui.volume.VolumeDialogImpl: android.view.ViewGroup getDialogView()>
<com.android.systemui.statusbar.phone.StatusBarNotificationPresenter: boolean hasActiveNotifications()>
<com.android.settingslib.NetworkPolicyEditor: android.net.NetworkPolicy getPolicy(android.net.NetworkTemplate)>
<com.android.server.notification.NotificationAdjustmentExtractor: void setZenHelper(com.android.server.notification.ZenModeHelper)>
<com.android.uiautomator.core.UiScrollable: boolean scrollToBeginning(int)>
<android.net.netlink.NetlinkSocket: void connectToKernel(java.io.FileDescriptor)>
<com.android.systemui.statusbar.SmartReplyController: void smartReplySent(com.android.systemui.statusbar.notification.collection.NotificationEntry,int,java.lang.CharSequence,int,boolean)>
<com.android.server.notification.ZenModeHelper: android.os.Looper getLooper()>
<com.android.systemui.statusbar.NotificationRemoteInputManager: com.android.systemui.statusbar.RemoteInputController getController()>
<com.android.systemui.shared.plugins.PluginManagerImpl: java.lang.ClassLoader getClassLoader(android.content.pm.ApplicationInfo)>
<com.android.server.PackageWatchdog: void startObservingHealth(com.android.server.PackageWatchdog.PackageHealthObserver,java.util.List,long)>
<com.android.systemui.statusbar.phone.RotationContextButton: void setRotationButtonController(com.android.systemui.statusbar.phone.RotationButtonController)>
<com.android.server.security.VerityUtils.SetupResult: java.io.FileDescriptor getUnownedFileDescriptor()>
<com.android.settingslib.media.LocalMediaManager: void registerCallback(com.android.settingslib.media.LocalMediaManager.DeviceCallback)>
<com.android.server.accessibility.AccessibilityManagerService.SecurityPolicy: boolean canPerformGestures(com.android.server.accessibility.AccessibilityServiceConnection)>
<com.android.server.pm.PackageManagerService: boolean performDexOptMode(java.lang.String,boolean,java.lang.String,boolean,boolean,java.lang.String)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setHeadsUpAnimatingAway(boolean)>
<com.android.server.pm.PackageInstallerSession: int getParentSessionId()>
<javax.microedition.khronos.opengles.GL11: void glClipPlanex(int,java.nio.IntBuffer)>
<com.android.systemui.shared.system.ChoreographerCompat: void postInputFrame(android.view.Choreographer,java.lang.Runnable)>
<com.android.systemui.statusbar.phone.NavBarTintController: void onViewAttachedToWindow(android.view.View)>
<com.android.settingslib.deviceinfo.AbstractImsStatusPreferenceController: java.lang.String[] getConnectivityIntents()>
<com.android.keyguard.KeyguardPasswordView: void setPasswordEntryEnabled(boolean)>
<com.android.settingslib.media.PhoneMediaDevice: void updateSummary(boolean)>
<com.android.systemui.plugins.qs.QS: void setExpandClickListener(android.view.View.OnClickListener)>
<com.android.systemui.volume.Events: void writeEvent(android.content.Context,int,java.lang.Object[])>
<com.android.settingslib.utils.AsyncLoader: void <init>(android.content.Context)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector checked(boolean)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void removeListener()>
<com.android.wallpapercropper.CropView: int getImageRotation()>
<com.android.server.usb.descriptors.UsbDescriptor: byte getType()>
<com.android.systemui.qs.TouchAnimator.Builder: com.android.systemui.qs.TouchAnimator build()>
<com.android.systemui.qs.TouchAnimator.Builder: com.android.systemui.qs.TouchAnimator.Builder addInt(java.lang.Object,java.lang.String,int[])>
<com.android.server.notification.ZenModeHelper: boolean updateAutomaticZenRule(java.lang.String,android.app.AutomaticZenRule,java.lang.String)>
<com.android.keyguard.EmergencyButton: void onDetachedFromWindow()>
<com.android.server.biometrics.AuthenticationClient: boolean onError(long,int,int)>
<com.android.settingslib.graph.BatteryMeterDrawableBase: void <init>(android.content.Context,int)>
<com.android.systemui.shared.recents.model.Task.TaskKey: android.content.ComponentName getComponent()>
<com.android.server.uri.UriGrantsManagerInternal: int checkGrantUriPermission(int,java.lang.String,com.android.server.uri.GrantUri,int,int)>
<com.android.server.slice.SliceProviderPermissions.SliceAuthority: java.lang.String getAuthority()>
<com.android.systemui.statusbar.notification.TransformState: int getViewHeight()>
<com.android.systemui.keyguard.WakefulnessLifecycle: void dispatchStartedGoingToSleep()>
<com.android.systemui.analytics.DataCollector: void onFalsingSessionStarted()>
<com.android.systemui.statusbar.policy.BatteryControllerImpl: void getEstimatedTimeRemainingString(com.android.systemui.statusbar.policy.BatteryController.EstimateFetchCompletion)>
<com.android.server.inputmethod.InputMethodManagerService: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtype()>
<com.android.systemui.statusbar.notification.row.ExpandableView: boolean isExpandAnimationRunning()>
<com.android.systemui.recents.views.SystemBarScrimViews: void onBusEvent(com.android.systemui.recents.events.activity.EnterRecentsWindowAnimationCompletedEvent)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean isDimmable()>
<com.android.systemui.qs.tileimpl.QSTileImpl: void setListening(java.lang.Object,boolean)>
<com.android.printspooler.model.PrintSpoolerProvider: void <init>(android.content.Context,java.lang.Runnable)>
<com.android.settingslib.development.AbstractLogpersistPreferenceController: void onCreate(android.os.Bundle)>
<com.android.server.accessibility.AccessibilityManagerService.SecurityPolicy: boolean canCaptureFingerprintGestures(com.android.server.accessibility.AccessibilityServiceConnection)>
<com.android.preload.ui.SwingUI: java.io.File showSaveDialog()>
<com.android.server.LocationManagerService: boolean isProviderEnabledForUser(java.lang.String,int)>
<com.android.server.notification.ValidateNotificationPeople: com.android.server.notification.RankingReconsideration process(com.android.server.notification.NotificationRecord)>
<com.android.localtransport.LocalTransport: int performBackup(android.content.pm.PackageInfo,android.os.ParcelFileDescriptor,int)>
<com.android.statementservice.retriever.AbstractAsset: java.lang.String toJson()>
<com.android.preload.classdataretrieval.jdwp.PreloadDebugeeWrapper: java.lang.Process launchProcess(java.lang.String)>
<com.android.server.location.LocationBasedCountryDetector: void unregisterListener(android.location.LocationListener)>
<com.android.keyguard.KeyguardSimPinView: void <init>(android.content.Context)>
<com.android.systemui.recents.utilities.AnimationProps: android.animation.Animator.AnimatorListener getListener()>
<com.android.server.pm.PackageManagerService: void setLastChosenActivity(android.content.Intent,java.lang.String,int,android.content.IntentFilter,int,android.content.ComponentName)>
<com.android.systemui.qs.tiles.FlashlightTile: void handleUpdateState(com.android.systemui.plugins.qs.QSTile.BooleanState,java.lang.Object)>
<com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.audio.FocusRequester: void finalize()>
<com.android.keyguard.clock.ImageClock: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.gallery3d.glrenderer.UploadedTexture: boolean isOpaque()>
<com.android.systemui.classifier.SpeedRatioEvaluator: float evaluate(float)>
<com.android.systemui.statusbar.phone.PanelView: void startExpandLatencyTracking()>
<com.android.settingslib.media.BluetoothMediaManager: void onActiveDeviceChanged(com.android.settingslib.bluetooth.CachedBluetoothDevice,int)>
<com.android.server.accounts.AccountManagerService: int getAccountVisibility(android.accounts.Account,java.lang.String)>
<com.android.server.pm.CrossProfileAppsServiceImpl.Injector: long clearCallingIdentity()>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.systemui.volume.ZenModePanel: void onVisibilityAggregated(boolean)>
<com.android.commands.uiautomator.RunTestCommand: java.lang.String shortHelp()>
<com.android.server.content.SyncStorageEngine: void removeStaleAccounts(android.accounts.Account[],int)>
<com.android.server.infra.AbstractMasterSystemService: boolean setDefaultServiceEnabled(int,boolean)>
<com.android.systemui.statusbar.phone.ScrimController: void <init>(com.android.systemui.statusbar.ScrimView,com.android.systemui.statusbar.ScrimView,com.android.internal.util.function.TriConsumer,java.util.function.Consumer,com.android.systemui.statusbar.phone.DozeParameters,android.app.AlarmManager)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.CharSequence getDeviceOwnerOrganizationName()>
<com.android.systemui.statusbar.policy.UserSwitcherController.BaseUserAdapter: int getUserCount()>
<com.android.server.notification.ScheduleConditionProvider: void onDestroy()>
<com.android.server.biometrics.BiometricServiceBase.AuthenticationClientImpl: void notifyUserActivity()>
<com.android.server.LocationManagerService: void removeGnssBatchingCallback()>
<com.android.server.pm.PackageManagerService: void revokeDefaultPermissionsFromDisabledTelephonyDataServices(java.lang.String[],int)>
<com.android.systemui.volume.VolumeDialogImpl: void <init>(android.content.Context)>
<com.android.systemui.recents.views.TaskStackAnimationHelper.Callbacks: void onStartLaunchTargetEnterAnimation(com.android.systemui.recents.views.TaskViewTransform,int,boolean,com.android.systemui.recents.misc.ReferenceCountedTrigger)>
<com.android.systemui.statusbar.KeyguardIndicationController.BaseKeyguardCallback: void onKeyguardVisibilityChanged(boolean)>
<com.android.systemui.usb.UsbDebuggingActivity: void onCreate(android.os.Bundle)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void removeAllChildren()>
<android.media.MediaController2: android.media.Session2Token getConnectedToken()>
<com.android.printspooler.widget.PreviewPageFrame: void <init>(android.content.Context,android.util.AttributeSet)>
<android.graphics.perftests.PaintHasGlyphPerfTest: java.util.Collection glyphStrings()>
<com.android.systemui.recents.Recents: void appTransitionFinished(int)>
<com.android.systemui.stackdivider.DividerView: com.android.internal.policy.DividerSnapAlgorithm getSnapAlgorithm()>
<com.android.server.NewNetworkTimeUpdateService: void systemRunning()>
<android.net.ip.IpServer.Callback: void updateInterfaceState(android.net.ip.IpServer,int,int)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: com.android.systemui.statusbar.DragDownHelper.DragDownCallback getDragDownCallback()>
<com.android.server.LocationManagerService: void injectGnssMeasurementCorrections(android.location.GnssMeasurementCorrections,java.lang.String)>
<com.android.systemui.tuner.StatusBarSwitch: void onTuningChanged(java.lang.String,java.lang.String)>
<com.android.settingslib.TwoTargetPreference: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setEmptyDragAmount(float)>
<com.android.systemui.doze.DozeMachine.Service: void setDozeScreenBrightness(int)>
<com.android.settingslib.wifi.TestAccessPointBuilder: com.android.settingslib.wifi.TestAccessPointBuilder setWifiInfo(android.net.wifi.WifiInfo)>
<com.android.server.biometrics.ClientMonitor: java.lang.String getLogTag()>
<com.android.settingslib.widget.BarChartPreference: void setBarViewInfos(com.android.settingslib.widget.BarViewInfo[])>
<com.android.server.notification.NotificationManagerService.NotificationAssistants: java.util.List getAllowedAssistantAdjustments()>
<com.android.systemui.assist.AssistManager: android.content.ComponentName getAssistInfoForUser(int)>
<com.android.systemui.statusbar.notification.stack.AmbientState: void setDimmed(boolean)>
<com.android.server.appop.AppOpsService: void startWatchingActive(int[],com.android.internal.app.IAppOpsActiveCallback)>
<com.android.settingslib.accessibility.AccessibilityButtonHelper: boolean isRequested(android.content.Context)>
<com.android.server.usb.UsbPortManager: void enableContaminantDetection(java.lang.String,boolean,com.android.internal.util.IndentingPrintWriter)>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean isTrackingBlocked()>
<com.android.server.accessibility.GlobalActionPerformer: boolean performGlobalAction(int)>
<com.android.systemui.qs.external.TileLifecycleManager: void binderDied()>
<com.android.settingslib.wifi.AccessPoint: java.lang.Object getTag()>
<com.android.settingslib.drawer.DashboardCategory: int getTilesCount()>
<com.android.server.devicepolicy.DevicePolicyManagerService.Lifecycle: void onStartUser(int)>
<com.android.systemui.statusbar.policy.SignalController: void dump(java.io.PrintWriter)>
<com.android.systemui.statusbar.phone.StatusBarWindowView: void setService(com.android.systemui.statusbar.phone.StatusBar)>
<com.android.systemui.statusbar.AlertingNotificationManager: void releaseAllImmediately()>
<com.android.systemui.statusbar.StatusBarWifiView: void applyWifiState(com.android.systemui.statusbar.phone.StatusBarSignalPolicy.WifiIconState)>
<com.android.server.location.GnssPositionMode: boolean equals(java.lang.Object)>
<com.android.powermodel.AttributionKey: boolean hasPackage(java.lang.String)>
<android.text.TextPerfUtils: java.lang.CharSequence nextRandomParagraph(int,int,boolean,java.lang.String[])>
<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexsOES(short,short,short,short,short)>
<com.android.server.twilight.TwilightService: void onAlarm()>
<com.android.settingslib.media.MediaManager.MediaDeviceCallback: void onConnectedDeviceChanged(java.lang.String)>
<com.android.systemui.plugins.qs.QSTileView: com.android.systemui.plugins.qs.QSIconView getIcon()>
<com.android.server.vr.EnabledComponentsObserver: void onSettingRestored(java.lang.String,java.lang.String,int)>
<com.android.systemui.recents.views.RecentsViewTouchHandler: void onBusEvent(com.android.systemui.recents.events.ui.dragndrop.DragEndEvent)>
<com.android.systemui.statusbar.notification.row.StackScrollerDecorView: void setVisible(boolean,boolean)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void setOccluded(boolean,boolean)>
<com.android.server.IpSecService: void <init>(android.content.Context,com.android.server.IpSecService.IpSecServiceConfiguration,com.android.server.IpSecService.UidFdTagger)>
<android.media.MediaPlayer2.TrackInfo: java.lang.String toString()>
<com.android.server.uri.UriGrantsManagerInternal: void dump(java.io.PrintWriter,boolean,java.lang.String)>
<com.android.systemui.recents.RecentsActivity: void onEnterAnimationComplete()>
<com.google.android.startop.iorap.SystemServiceUserEvent: java.lang.String toString()>
<com.android.settingslib.volume.MediaSessions: void onActiveSessionsUpdatedH(java.util.List)>
<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantDefaultPermissionsToEnabledImsServices(java.lang.String[],int)>
<com.android.systemui.statusbar.notification.row.ExpandableOutlineView: void setOutlineRect(float,float,float,float)>
<android.database.SQLiteDatabasePerfTest: void testUpdate()>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: void setMenuClickListener(com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin.OnMenuEventListener)>
<com.android.systemui.shared.recents.view.AppTransitionAnimationSpecCompat: void <init>(int,android.graphics.Bitmap,android.graphics.Rect)>
<com.android.settingslib.utils.PowerUtil: long convertUsToMs(long)>
<com.android.systemui.settings.CurrentUserTracker: void onUserSwitched(int)>
<com.android.systemui.egg.MLand: float getGameTime()>
<com.android.server.notification.RankingReconsideration: boolean isCancelled()>
<com.android.systemui.statusbar.phone.NotificationGroupAlertTransferHelper: void onAmbientStateChanged(com.android.systemui.statusbar.notification.collection.NotificationEntry,boolean)>
<com.android.systemui.MultiListLayout: void setSeparatedViewVisibility(boolean)>
<android.perftests.utils.SettingsHelper: void delete(java.lang.String,java.lang.String)>
<com.android.server.locksettings.LockSettingsService: java.lang.String getString(java.lang.String,java.lang.String,int)>
<com.android.server.pm.Installer.InstallerException: void <init>(java.lang.String)>
<com.android.server.notification.PreferencesHelper: int getDeletedChannelCount(java.lang.String,int)>
<com.android.server.pm.ShortcutNonPersistentUser: void dump(java.io.PrintWriter,java.lang.String,com.android.server.pm.ShortcutService.DumpFilter)>
<com.android.systemui.keyguard.KeyguardViewMediator: void onSystemReady()>
<com.android.systemui.statusbar.phone.SystemUIDialog: void registerDismissListener(android.app.Dialog)>
<com.android.server.uri.UriGrantsManagerService: void releasePersistableUriPermission(android.net.Uri,int,java.lang.String,int)>
<com.android.settingslib.suggestions.SuggestionControllerMixinCompat.SuggestionControllerHost: void onSuggestionReady(java.util.List)>
<com.android.systemui.statusbar.notification.collection.NotificationData: android.app.NotificationChannel getChannel(java.lang.String)>
<com.android.systemui.statusbar.AlertingNotificationManager: void onAlertEntryAdded(com.android.systemui.statusbar.AlertingNotificationManager.AlertEntry)>
<com.android.server.biometrics.face.FaceService: void notifyClientActiveCallbacks(boolean)>
<com.android.systemui.statusbar.phone.StatusBar: void dispatchDemoCommand(java.lang.String,android.os.Bundle)>
<com.android.systemui.tuner.LockscreenFragment.Adapter: void <init>(android.content.Context,java.util.function.Consumer)>
<com.android.systemui.recents.views.AnimateableViewBounds: void <init>(android.view.View,int)>
<com.android.server.usb.UsbPortManager: void <init>(android.content.Context)>
<com.android.systemui.plugins.qs.QSIconView: void setIcon(com.android.systemui.plugins.qs.QSTile.State,boolean)>
<com.android.server.display.AmbientBrightnessStatsTracker.Clock: long elapsedTimeMillis()>
<com.android.systemui.statusbar.notification.row.ExpandableOutlineView: void getRoundedRectPath(int,int,int,int,float,float,android.graphics.Path)>
<com.android.server.usb.descriptors.UsbDeviceDescriptor: byte getSerialIndex()>
<android.text.BoringLayoutIsBoringPerfTest: java.util.Collection cases()>
<com.android.systemui.keyguard.KeyguardSliceProvider: void addNextAlarmLocked(androidx.slice.builders.ListBuilder)>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: boolean isBelowSpeedBump()>
<com.android.settingslib.TetherUtil: boolean isProvisioningNeeded(android.content.Context)>
<com.android.systemui.qs.QSTileHost: void onTuningChanged(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.phone.PanelView: float getOverExpansionAmount()>
<com.android.server.policy.WindowManagerPolicy.WindowManagerFuncs: void onPowerKeyDown(boolean)>
<com.android.settingslib.core.instrumentation.EventLogWriter: void action(android.content.Context,int,int)>
<com.android.systemui.doze.DozeBrightnessHostForwarder: void setDozeScreenBrightness(int)>
<com.android.uiautomator.core.UiDevice: java.lang.String getCurrentActivityName()>
<com.android.systemui.statusbar.phone.NotificationGroupManager: void setHeadsUpManager(com.android.systemui.statusbar.policy.HeadsUpManager)>
<javax.microedition.khronos.opengles.GL10: void glLoadIdentity()>
<com.android.systemui.statusbar.phone.LockIcon: void onDozeAmountChanged(float,float)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: boolean shouldSuppressStatusBar()>
<com.android.systemui.statusbar.notification.row.HybridNotificationView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.notification.NotificationRecord: void setHidden(boolean)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onHeadsUpPinned(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.systemui.shared.recents.model.Task: void notifyTaskDataLoaded(com.android.systemui.shared.recents.model.ThumbnailData,android.graphics.drawable.Drawable)>
<android.media.Media2HTTPConnection: java.lang.String getUri()>
<com.android.localtransport.LocalTransport: android.content.Intent dataManagementIntent()>
<com.android.settingslib.wifi.AccessPoint: boolean equals(java.lang.Object)>
<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice queryIntentActivityOptions(android.content.ComponentName,android.content.Intent[],java.lang.String[],android.content.Intent,java.lang.String,int,int)>
<com.android.server.pm.PackageManagerServiceUtils: java.util.List getPackagesForDexopt(java.util.Collection,com.android.server.pm.PackageManagerService)>
<com.android.systemui.plugins.VolumeDialog.Callback: void onZenSettingsClicked()>
<com.android.settingslib.widget.ActionBarShadowController: com.android.settingslib.widget.ActionBarShadowController attachToView(android.app.Activity,androidx.lifecycle.Lifecycle,android.view.View)>
<com.android.settingslib.wifi.AccessPoint: int getCarrierApEapType()>
<com.android.systemui.recents.OverviewProxyService.OverviewProxyListener: void onSystemUiStateChanged(int)>
<com.android.systemui.shared.plugins.PluginEnabler: void setDisabled(android.content.ComponentName,int)>
<android.media.DataSourceDesc.Builder: android.media.DataSourceDesc build()>
<com.android.server.pm.PackageManagerService: void grantDefaultPermissionsToEnabledCarrierApps(java.lang.String[],int)>
<javax.obex.ObexHelper: int getMaxTxPacketSize(javax.obex.ObexTransport)>
<android.net.shared.ProvisioningConfiguration: void <init>(android.net.shared.ProvisioningConfiguration)>
<android.net.ip.IpClientUtil.WaitForProvisioningCallbacks: void onProvisioningSuccess(android.net.LinkProperties)>
<com.android.systemui.qs.PseudoGridView.ViewGroupAdapterBridge: void onInvalidated()>
<com.android.server.inputmethod.InputMethodManagerService.ImeDisplayValidator: boolean displayCanShowIme(int)>
<com.android.settingslib.dream.DreamBackend: void <init>(android.content.Context)>
<com.android.systemui.doze.DozeLog: void traceWakeDisplay(boolean)>
<com.android.systemui.egg.MLand: void stop()>
<com.android.server.DynamicSystemService: boolean abort()>
<com.android.server.NativeDaemonEvent: boolean isClassOk()>
<com.android.systemui.statusbar.NotificationPresenter: void onUserSwitched(int)>
<com.android.systemui.shared.system.ActivityCompat: boolean encodeViewHierarchy(java.io.ByteArrayOutputStream)>
<com.android.server.usb.descriptors.UsbDescriptorParser: byte[] getRawDescriptors()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setInHeadsUpPinnedMode(boolean)>
<com.android.systemui.qs.tileimpl.QSTileImpl: boolean shouldAnnouncementBeDelayed()>
<com.android.systemui.statusbar.policy.RemoteInputView: void onTextChanged(java.lang.CharSequence,int,int,int)>
<com.android.server.notification.EventConditionProvider: boolean isValidConditionId(android.net.Uri)>
<com.android.systemui.statusbar.notification.row.NotificationContentInflater: void setIsChildInGroup(boolean)>
<com.android.systemui.bubbles.BubbleView: void update(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.server.usb.UsbDeviceManager: long getCurrentFunctions()>
<com.android.systemui.statusbar.notification.stack.AmbientState: void onDragFinished(android.view.View)>
<com.android.settingslib.media.MediaManager: void dispatchConnectedDeviceChanged(java.lang.String)>
<android.os.LooperStatsPerfTest: void tearDown()>
<com.android.keyguard.KeyguardSecurityView: void reset()>
<com.android.systemui.statusbar.NotificationShelf: boolean shouldHideBackground()>
<com.android.gallery3d.exif.ExifInterface: java.lang.Object getTagValue(int,int)>
<com.android.systemui.statusbar.NotificationRemoteInputManager.Callback: void onLockedRemoteInput(com.android.systemui.statusbar.notification.row.ExpandableNotificationRow,android.view.View)>
<com.android.systemui.statusbar.phone.BiometricUnlockController: void setStatusBarKeyguardViewManager(com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager)>
<com.android.server.media.MediaSessionRecord: android.media.session.PlaybackState getPlaybackState()>
<com.android.keyguard.KeyguardPinBasedInputView: boolean onKey(android.view.View,int,android.view.KeyEvent)>
<com.android.systemui.statusbar.phone.NearestTouchFrame: void onMeasure(int,int)>
<com.android.settingslib.TwoTargetPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.keyguard.KeyguardPINView: void <init>(android.content.Context)>
<com.android.powermodel.RawBatteryStats: java.util.List getMultiple(java.lang.Class)>
<com.android.server.biometrics.BiometricServiceBase.EnrollClientImpl: void notifyUserActivity()>
<com.android.server.location.ComprehensiveCountryDetector: java.lang.String toString()>
<com.android.printspooler.ui.SelectPrinterActivity: void onActivityResult(int,int,android.content.Intent)>
<com.android.server.NsdService.NsdSettings: void putEnabledStatus(boolean)>
<com.android.systemui.settings.ToggleSlider: void setChecked(boolean)>
<com.android.server.accessibility.MagnificationController.ControllerContext: android.os.Handler getHandler()>
<com.android.settingslib.deviceinfo.StorageVolumeProvider: long getTotalBytes(android.app.usage.StorageStatsManager,android.os.storage.VolumeInfo)>
<com.android.systemui.shared.system.ActivityManagerWrapper: com.android.systemui.shared.system.ActivityManagerWrapper getInstance()>
<android.util.ArraySetPerfTest: void testRemoveIf_Large_RemoveAll()>
<com.android.systemui.shared.system.SyncRtSurfaceTransactionApplierCompat: void addAfterApplyCallback(java.lang.Runnable)>
<com.android.server.NetworkManagementService: void removeInterfaceFromLocalNetwork(java.lang.String)>
<com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.AccessibilityManagerService.RemoteAccessibilityConnection getConnectionLocked(int)>
<com.android.server.testharness.TestHarnessModeService: void <init>(android.content.Context)>
<com.android.server.usb.descriptors.UsbACInterface: int getSubclass()>
<com.android.systemui.statusbar.NotificationRemoteInputManager: void checkRemoteInputOutside(android.view.MotionEvent)>
<com.android.settingslib.TronUtils: void logWifiSettingsSpeed(android.content.Context,int)>
<com.android.server.audio.AudioService: void onSystemReady()>
<com.android.systemui.classifier.brightline.TimeLimitedMotionEventBuffer: java.util.ListIterator listIterator()>
<com.android.uiautomator.core.UiObject: boolean isFocusable()>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void setSystemUiVisibility(int,int,int,int,int,android.graphics.Rect,android.graphics.Rect,boolean)>
<com.android.server.notification.NotificationUsageStats: void registerPostedByApp(com.android.server.notification.NotificationRecord)>
<com.android.settingslib.fuelgauge.PowerWhitelistBackend: void removeApp(java.lang.String)>
<com.android.systemui.classifier.PointerCountEvaluator: float evaluate(int)>
<com.android.systemui.statusbar.phone.StatusBarIconControllerImpl: void setExternalIcon(java.lang.String)>
<com.android.systemui.statusbar.phone.StatusBarWindowView: void cancelExpandHelper()>
<com.android.server.uri.UriPermissionOwner: void addReadPermission(com.android.server.uri.UriPermission)>
<com.android.systemui.statusbar.phone.LockIcon: void onThemeChanged()>
<com.android.server.content.SyncManager: void dumpSyncState(java.io.PrintWriter,com.android.server.content.SyncAdapterStateFetcher)>
<com.android.systemui.statusbar.phone.StatusIconContainer: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.printservice.recommendation.util.MDNSFilteredDiscovery: void stop()>
<com.android.systemui.HardwareUiLayout: float getAnimationOffsetX()>
<com.android.server.emergency.EmergencyAffordanceService: void onBootPhase(int)>
<com.android.systemui.qs.QuickStatusBarHeader: void setCallback(com.android.systemui.qs.QSDetail.Callback)>
<com.android.server.notification.BubbleExtractor: void setConfig(com.android.server.notification.RankingConfig)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.notification.row.AppOpsInfo: boolean shouldBeSaved()>
<com.android.photos.views.BlockingGLTextureView: void <init>(android.content.Context)>
<com.android.systemui.statusbar.policy.SecurityController: boolean isVpnBranded()>
<com.android.systemui.screenshot.ScreenshotSelectorView: android.graphics.Rect getSelectionRect()>
<com.android.systemui.statusbar.phone.LockIcon: void update(boolean)>
<com.android.server.location.LocationBasedCountryDetector: android.location.Location getLastKnownLocation()>
<com.android.wallpapercropper.WallpaperCropActivity.BitmapCropTask: java.lang.Boolean doInBackground(java.lang.Void[])>
<com.android.systemui.statusbar.notification.stack.AmbientState: void setStatusBarState(int)>
<com.android.wallpapercropper.WallpaperCropActivity: void cropImageAndSetWallpaper(android.net.Uri,com.android.wallpapercropper.WallpaperCropActivity.OnBitmapCroppedHandler,boolean)>
<com.android.server.usb.descriptors.report.ReportCanvas: void openParagraph(boolean)>
<com.android.server.testing.shadows.ShadowBackupDataInput: void throwInNextHeaderRead()>
<com.android.settingslib.core.lifecycle.ObservableFragment: void onAttach(android.content.Context)>
<com.android.server.notification.BadgeExtractor: void setZenHelper(com.android.server.notification.ZenModeHelper)>
<com.android.server.accessibility.MagnificationController: void offsetMagnifiedRegion(int,float,float,int)>
<com.android.systemui.fragments.FragmentService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.keyguard.KeyguardSecurityContainer: void startAppearAnimation()>
<com.android.keyguard.ViewMediatorCallback: void playTrustedSound()>
<javax.obex.BaseStream: void streamClosed(boolean)>
<com.android.systemui.statusbar.StatusBarStateControllerImpl: void addCallback(com.android.systemui.plugins.statusbar.StatusBarStateController.StateListener,int)>
<com.android.keyguard.KeyguardClockSwitch: void setStyle(android.graphics.Paint.Style)>
<com.android.systemui.globalactions.ListGridLayout: android.view.ViewGroup getSublist(int)>
<com.android.systemui.statusbar.notification.VisualStabilityManager: void setVisibilityLocationProvider(com.android.systemui.statusbar.notification.VisibilityLocationProvider)>
<com.android.server.LocationManagerService: java.lang.String[] getBackgroundThrottlingWhitelist()>
<com.android.server.AnyMotionDetector.Vector3: com.android.server.AnyMotionDetector.Vector3 plus(com.android.server.AnyMotionDetector.Vector3)>
<com.android.systemui.statusbar.phone.StatusBarIconControllerImpl: void setSignalIcon(java.lang.String,com.android.systemui.statusbar.phone.StatusBarSignalPolicy.WifiIconState)>
<com.android.server.biometrics.LoggableMonitor: int statsAction()>
<com.android.settingslib.deviceinfo.AbstractConnectivityPreferenceController: void onStart()>
<com.android.systemui.recents.OverviewProxyService.OverviewProxyListener: void onAssistantGestureCompletion(float)>
<android.net.shared.InitialConfiguration: boolean equals(java.lang.Object)>
<android.os.ParcelArrayPerfTest: java.util.Collection data()>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: java.lang.Throwable getDebugThrowable()>
<android.app.backup.ForwardingBackupAgent: void onFullBackup(android.app.backup.FullBackupDataOutput)>
<com.android.settingslib.widget.LayoutPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.printspooler.util.PageRangeUtils: android.print.PageRange asAbsoluteRange(android.print.PageRange,int)>
<com.android.settingslib.location.SettingsInjector: java.util.List getSettings(android.os.UserHandle)>
<com.android.server.role.RoleUserState: void setPackagesHash(java.lang.String)>
<com.android.server.usb.UsbDeviceManager: android.os.ParcelFileDescriptor getControlFd(long)>
<com.android.systemui.statusbar.phone.FloatingRotationButton: void setDarkIntensity(float)>
<com.android.systemui.statusbar.phone.ObservableScrollView: boolean dispatchTouchEvent(android.view.MotionEvent)>
<com.android.settingslib.bluetooth.PbapClientProfile: int getOrdinal()>
<com.android.systemui.analytics.DataCollector: void onAccuracyChanged(android.hardware.Sensor,int)>
<com.android.systemui.statusbar.policy.BluetoothController: int getBondState(com.android.settingslib.bluetooth.CachedBluetoothDevice)>
<com.android.sharedstoragebackup.SharedStorageAgent: void onFullBackup(android.app.backup.FullBackupDataOutput)>
<com.android.systemui.statusbar.phone.NavigationBarInflaterView: void inflateLayout(java.lang.String)>
<com.android.systemui.keyguard.KeyguardViewMediator: void onStartedWakingUp()>
<com.android.systemui.qs.QSFooter: int getHeight()>
<com.android.systemui.statusbar.phone.NavigationBarView: android.view.View getCurrentView()>
<com.android.systemui.power.PowerUI: void maybeShowBatteryWarning(com.android.systemui.powe.BatteryStateSnapshot,com.android.systemui.powe.BatteryStateSnapshot)>
<lockedregioncodeinjection.LockTarget: java.lang.String getPost()>
<com.android.keyguard.KeyguardPinBasedInputView: void setPasswordEntryEnabled(boolean)>
<android.view.ViewShowHidePerfTest: java.lang.Iterable params()>
<com.android.systemui.statusbar.phone.UserAvatarView: void setDrawable(android.graphics.drawable.Drawable)>
<com.android.systemui.recents.views.RecentsView: boolean onTouchEvent(android.view.MotionEvent)>
<android.view.autofill.MyAutofillCallback: void onAutofillEvent(android.view.View,int)>
<com.android.systemui.statusbar.phone.MultiUserSwitch: com.android.systemui.plugins.qs.DetailAdapter getUserDetailAdapter()>
<com.android.systemui.recents.utilities.Utilities: android.content.res.Configuration getAppConfiguration(android.content.Context)>
<com.android.systemui.statusbar.NotificationRemoteInputManager: boolean activateRemoteInput(android.view.View,android.app.RemoteInput[],android.app.RemoteInput,android.app.PendingIntent,com.android.systemui.statusbar.notification.collection.NotificationEntry.EditedSuggestionInfo)>
<com.android.systemui.shared.recents.model.TaskKeyLruCache: java.lang.Object getCacheEntry(int)>
<com.android.server.statusbar.StatusBarManagerInternal: void showScreenPinningRequest(int)>
<com.android.systemui.statusbar.phone.CollapsedStatusBarFragment: void hideSystemIconArea(boolean)>
<com.android.server.adb.AdbService: void systemReady()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.testing.shadows.ShadowRecoveryController: int getRecoveryStatus(java.lang.String)>
<com.android.inputdevices.InputDeviceReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.android.server.location.LocationProviderProxy: int getStatus(android.os.Bundle)>
<com.android.systemui.statusbar.policy.BrightnessMirrorController: void <init>(com.android.systemui.statusbar.phone.StatusBarWindowView,java.util.function.Consumer)>
<com.android.printspooler.model.PrintSpoolerService: void clearCustomPrinterIconCache()>
<com.android.systemui.volume.VolumeDialogControllerImpl: void getState()>
<com.android.systemui.shared.system.TaskStackChangeListener: void onTaskRemoved(int)>
<com.android.systemui.statusbar.phone.DozeScrimController: void extendPulse()>
<com.android.printspooler.ui.FusedPrintersProvider: void onProviderDisabled(java.lang.String)>
<com.android.systemui.bubbles.BadgedImageView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.qs.tiles.FlashlightTile: java.lang.CharSequence getTileLabel()>
<com.android.server.ConnectivityService: boolean setAlwaysOnVpnPackage(int,java.lang.String,boolean,java.util.List)>
<com.android.server.SystemUpdateManagerService: void updateSystemUpdateInfo(android.os.PersistableBundle)>
<com.android.systemui.MultiListLayout: void onUpdateList()>
<com.android.server.DisplayThread: com.android.server.DisplayThread get()>
<com.android.systemui.statusbar.notification.row.NotificationInlineImageResolver.ImageCache: void preload(android.net.Uri)>
<com.android.statsd.loadtest.PerfDataRecorder: void runDumpsysStats(android.content.Context,java.lang.String,java.lang.String,java.lang.String[])>
<com.android.gallery3d.glrenderer.GLCanvas: void clearBuffer()>
<com.android.server.pm.PackageManagerService: void updatePermissionFlags(java.lang.String,java.lang.String,int,int,boolean,int)>
<com.android.systemui.BatteryMeterView: void onTuningChanged(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setUserExpanded(boolean)>
<com.android.systemui.statusbar.phone.ManagedProfileController.Callback: void onManagedProfileRemoved()>
<com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem: boolean handleGiveSystemAudioModeStatus(com.android.server.hdmi.HdmiCecMessage)>
<com.android.keyguard.KeyguardUpdateMonitor: boolean getUserTrustIsManaged(int)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void getBounds(android.graphics.Rect,int,int,int,int)>
<com.android.server.AttributeCache: void <init>(android.content.Context)>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb: long setCounterId(int,int,long)>
<com.android.systemui.statusbar.phone.StatusBarSignalPolicy.WifiIconState: boolean equals(java.lang.Object)>
<com.android.server.biometrics.fingerprint.FingerprintUtils: com.android.server.biometrics.fingerprint.FingerprintUtils getInstance()>
<com.android.printspooler.util.MediaSizeUtils.MediaSizeComparator: int compare(android.print.PrintAttributes.MediaSize,android.print.PrintAttributes.MediaSize)>
<com.android.settingslib.widget.AppEntityInfo.Builder: com.android.settingslib.widget.AppEntityInfo.Builder setOnClickListener(android.view.View.OnClickListener)>
<com.android.settingslib.bluetooth.PanProfile: boolean connect(android.bluetooth.BluetoothDevice)>
<com.android.server.ConnectivityService: boolean hasService(java.lang.String)>
<com.android.settingslib.HelpUtils: boolean prepareHelpMenuItem(android.app.Activity,android.view.Menu,java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.policy.NextAlarmControllerImpl: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.statusbar.policy.SignalController: com.android.systemui.statusbar.policy.SignalController.IconGroup getIcons()>
<com.android.server.uri.UriGrantsManagerInternal: void grantUriPermissionFromIntent(int,java.lang.String,android.content.Intent,int)>
<com.android.server.om.DumpState: boolean isVerbose()>
<android.graphics.perftests.TypefaceCreatePerfTest: void testCreate_fromAsset()>
<com.android.systemui.util.Utils.DisableStateTracker: void onViewAttachedToWindow(android.view.View)>
<com.android.server.security.KeyAttestationApplicationIdProviderService: android.security.keymaster.KeyAttestationApplicationId getKeyAttestationApplicationId(int)>
<com.android.systemui.qs.tiles.BluetoothTile: void handleClick()>
<com.android.server.autofill.ui.AutoFillUI.AutoFillUiCallback: void save()>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.String getApplicationRestrictionsManagingPackage(android.content.ComponentName)>
<com.android.server.ConnectivityService: boolean removeVpnAddress(java.lang.String,int)>
<com.android.gallery3d.exif.ExifInterface: double[] getLatLongAsDoubles()>
<com.android.server.content.SyncStorageEngine.DayStats: void <init>(int)>
<com.android.server.usb.descriptors.UsbACFeatureUnit: int getNumChannels()>
<com.android.keyguard.KeyguardUpdateMonitor: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.slice.SliceProviderPermissions.SliceAuthority: void writeTo(org.xmlpull.v1.XmlSerializer)>
<com.android.server.biometrics.LoggableMonitor: int statsClient()>
<com.android.server.webkit.SystemImpl: android.content.pm.PackageInfo getPackageInfoForProvider(android.webkit.WebViewProviderInfo)>
<com.android.server.SystemServiceManager: void startUser(int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setActiveAdmin(android.content.ComponentName,boolean,int)>
<com.android.settingslib.bluetooth.HearingAidProfile: java.util.List getConnectableDevices()>
<com.android.server.infra.AbstractMasterSystemService: com.android.server.infra.AbstractPerUserSystemService getServiceForUserLocked(int)>
<com.android.systemui.statusbar.policy.AccessibilityController: void <init>(android.content.Context)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void endRenderTarget()>
<com.android.server.AppStateTracker: void onSystemServicesReady()>
<com.android.server.notification.ManagedServices: void registerSystemService(android.content.ComponentName,int)>
<com.android.server.notification.ScheduleConditionProvider: void onConnected()>
<com.android.systemui.statusbar.policy.UserSwitcherController.UserRecord: int resolveId()>
<com.android.systemui.tuner.DemoModeFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)>
<com.android.systemui.statusbar.notification.row.NotificationUndoLayout: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.qs.TileLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.bubbles.BubbleFlyoutView: void <init>(android.content.Context)>
<com.android.settingslib.drawer.Tile: boolean hasKey()>
<com.android.systemui.globalactions.GlobalActionsDialog.MyAdapter: int countSeparatedItems()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setOnAmbient(boolean)>
<com.android.keyguard.KeyguardMessageArea: void <init>(android.content.Context,android.util.AttributeSet,com.android.systemui.statusbar.policy.ConfigurationController)>
<com.android.server.slice.SliceManagerService: android.content.Context getContext()>
<com.android.server.usb.UsbDeviceManager: void onKeyguardStateChanged(boolean)>
<com.android.server.accounts.AccountManagerService: void getAccountsByFeatures(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String[],java.lang.String)>
<com.android.settingslib.bluetooth.BluetoothDiscoverableTimeoutReceiver: void setDiscoverableAlarm(android.content.Context,long)>
<com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem: void onAddressAllocated(int,int)>
<com.android.commands.uiautomator.Launcher.Command: void <init>(java.lang.String)>
<com.android.server.usb.descriptors.report.ReportCanvas: void openHeader(int)>
<com.android.server.location.ComprehensiveCountryDetector: void addPhoneStateListener()>
<com.android.server.pm.Installer: boolean prepareAppProfile(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String)>
<com.android.server.biometrics.fingerprint.FingerprintUserState: void addBiometric(android.hardware.biometrics.BiometricAuthenticator.Identifier)>
<com.android.server.locksettings.SyntheticPasswordManager: com.android.internal.widget.VerifyCredentialResponse verifyChallenge(android.service.gatekeeper.IGateKeeperService,com.android.server.locksettings.SyntheticPasswordManager.AuthenticationToken,long,int)>
<android.view.ViewShowHidePerfTest: void testVisibleToGone()>
<com.android.server.notification.NotificationRecord: int getInterruptionMs(long)>
<com.android.systemui.statusbar.policy.KeyButtonView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.media.MediaPlayer2.EventCallback: void onVideoSizeChanged(android.media.MediaPlayer2,android.media.DataSourceDesc,android.util.Size)>
<com.android.systemui.ActivityStarterDelegate: void postStartActivityDismissingKeyguard(android.app.PendingIntent)>
<com.google.android.startop.iorap.AppLaunchEvent: void <init>(long)>
<com.android.systemui.recents.events.ui.dragndrop.DragStartEvent: void <init>(com.android.systemui.shared.recents.model.Task,com.android.systemui.recents.views.TaskView,android.graphics.Point,boolean)>
<javax.obex.HeaderSet: int getResponseCode()>
<com.android.systemui.statusbar.policy.ExtensionController: com.android.systemui.statusbar.policy.ExtensionController.ExtensionBuilder newExtension(java.lang.Class)>
<com.android.server.slice.SliceClientPermissions.SliceAuthority: java.lang.String getFileName()>
<com.android.server.policy.WindowManagerPolicy: void showBootMessage(java.lang.CharSequence,boolean)>
<com.android.systemui.statusbar.notification.row.NotificationContentInflater: boolean isInflationFlagSet(int)>
<com.android.systemui.statusbar.phone.StatusBarIconController.IconManager: void <init>(android.view.ViewGroup)>
<com.android.server.pm.Policy: java.util.Map getInnerPackages()>
<com.android.server.pm.PackageManagerService: int getRuntimePermissionsVersion(int)>
<com.android.systemui.statusbar.policy.SecurityControllerImpl: boolean isVpnRestricted()>
<com.android.systemui.qs.tiles.NfcTile: void handleSetListening(boolean)>
<com.android.systemui.statusbar.notification.TransformState: void transformViewFullyFrom(com.android.systemui.statusbar.notification.TransformState,float)>
<com.android.systemui.statusbar.NavigationBarController: void touchAutoDim(int)>
<com.android.systemui.bubbles.animation.ExpandedAnimationController: void snapBubbleBack(android.view.View,float,float)>
<com.android.server.usb.UsbService: android.hardware.usb.UsbPortStatus getPortStatus(java.lang.String)>
<com.android.systemui.statusbar.phone.BarTransitions: void finishAnimations()>
<com.android.server.usb.descriptors.UsbACInterface: void report(com.android.server.usb.descriptors.report.ReportCanvas)>
<com.android.systemui.statusbar.phone.NotificationGroupManager.OnGroupChangeListener: void onGroupCreated(com.android.systemui.statusbar.phone.NotificationGroupManager.NotificationGroup,java.lang.String)>
<com.android.systemui.statusbar.SysuiStatusBarStateController: boolean goingToFullShade()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void dismissViewAnimated(android.view.View,java.lang.Runnable,int,long)>
<com.android.server.pm.AbstractStatsBase: void read(java.lang.Object)>
<com.android.systemui.statusbar.phone.DemoStatusIcons: void <init>(android.widget.LinearLayout,int)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetFramebufferAttachmentParameterivOES(int,int,int,java.nio.IntBuffer)>
<com.android.server.appop.AppOpsService: void getHistoricalOpsFromDiskRaw(int,java.lang.String,java.util.List,long,long,int,android.os.RemoteCallback)>
<com.android.systemui.classifier.brightline.BrightLineFalsingManager: void onScreenOnFromTouch()>
<com.android.server.storage.DiskStatsLoggingService: boolean onStopJob(android.app.job.JobParameters)>
<com.android.systemui.statusbar.phone.NotificationIconAreaController: boolean shouldShowNotificationIcon(com.android.systemui.statusbar.notification.collection.NotificationEntry,boolean,boolean,boolean,boolean,boolean,boolean)>
<com.android.server.pm.UserManagerService: boolean isUserUnlockingOrUnlocked(int)>
<com.android.server.usb.UsbDeviceManager: void setScreenUnlockedFunctions(long)>
<javax.obex.ClientSession: void <init>(javax.obex.ObexTransport,boolean)>
<com.android.systemui.statusbar.NotificationShelf: void onFinishInflate()>
<com.android.systemui.statusbar.policy.KeyguardMonitor: long calculateGoingToFullShadeDelay()>
<com.android.settingslib.applications.DefaultAppInfo: java.lang.CharSequence loadLabel()>
<com.android.settingslib.wifi.AccessPoint: int getLevel()>
<com.android.server.ExtconUEventObserver.ExtconInfo: void <init>(java.lang.String)>
<com.android.gallery3d.common.BitmapUtils: void recycleSilently(android.graphics.Bitmap)>
<com.android.systemui.statusbar.policy.UserSwitcherController: void logoutCurrentUser()>
<com.android.systemui.qs.tiles.DataSaverTile: void handleSetListening(boolean)>
<com.android.gallery3d.exif.ExifInterface: int getDefinedTagCount(int)>
<com.android.server.DeviceIdleController.LocalService: void unregisterDeviceIdleConstraint(com.android.server.deviceidle.IDeviceIdleConstraint)>
<com.android.systemui.statusbar.notification.stack.AmbientState: void setTopPadding(int)>
<com.android.server.policy.PhoneWindowManager: void applyKeyguardPolicyLw(com.android.server.policy.WindowManagerPolicy.WindowState,com.android.server.policy.WindowManagerPolicy.WindowState)>
<com.android.settingslib.Utils: int getColorErrorDefaultColor(android.content.Context)>
<com.android.systemui.statusbar.notification.row.ExpandableView: void performAddAnimation(long,long,boolean)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isOverrideApnEnabled(android.content.ComponentName)>
<com.android.printspooler.renderer.IPdfRenderer: void renderPage(int,int,int,android.print.PrintAttributes,android.os.ParcelFileDescriptor)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setStatusBarState(int)>
<com.android.server.input.InputManagerService: void updateShowTouchesFromSettings()>
<com.android.settingslib.NetworkPolicyEditor: long getPolicyLimitBytes(android.net.NetworkTemplate)>
<com.android.systemui.recents.RecentsActivity: void onTrimMemory(int)>
<com.android.systemui.qs.QSPanel: void closeDetail()>
<com.android.settingslib.media.MediaDevice: int compareTo(com.android.settingslib.media.MediaDevice)>
<com.android.systemui.volume.MediaRouterWrapper: void unselect(int)>
<com.android.systemui.shared.system.LatencyTrackerCompat: void logToggleRecents(int)>
<com.android.localtransport.LocalTransport: int getRestoreData(android.os.ParcelFileDescriptor)>
<com.android.settingslib.utils.ThreadUtils: void postOnMainThread(java.lang.Runnable)>
<com.android.printspooler.ui.PrintActivity.PrintServiceApprovalDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>
<com.android.systemui.bubbles.animation.StackAnimationController: void moveStackFromTouch(float,float)>
<com.android.server.DeviceIdleController: void onAnyMotionResult(int)>
<com.android.fakeoemfeatures.FakeView: void onAttachedToWindow()>
<com.android.gallery3d.glrenderer.GLCanvas: void multiplyAlpha(float)>
<com.android.systemui.statusbar.policy.UserSwitcherController: boolean useFullscreenUserSwitcher()>
<com.android.aapt.namespace.libtwo.TextView: void <init>(android.content.Context)>
<android.os.BinderCallsStatsPerfTest: void timeCallSession_500_buckets_cpuNotRecorded()>
<com.android.settingslib.bluetooth.HearingAidProfile: int getDrawableResource(android.bluetooth.BluetoothClass)>
<com.android.gallery3d.exif.ExifInterface: int getDefinedTagDefaultIfd(int)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector descriptionMatches(java.lang.String)>
<com.android.systemui.statusbar.NotificationShelf: void updateAppearance()>
<com.android.systemui.egg.MLand: void startPlaying()>
<com.android.systemui.statusbar.policy.ZenModeController: boolean isCountdownConditionSupported()>
<com.android.settingslib.users.AppRestrictionsHelper.SelectableAppInfo: java.lang.String toString()>
<javax.microedition.khronos.opengles.GL11: void glGetClipPlanef(int,java.nio.FloatBuffer)>
<android.app.PendingIntentPerfTest: void createWithUpdateFlag()>
<com.android.systemui.qs.tiles.UserTile: void handleSetListening(boolean)>
<com.android.systemui.statusbar.policy.SecurityController.SecurityControllerCallback: void onStateChanged()>
<com.android.systemui.statusbar.policy.LocationControllerImpl: boolean setLocationEnabled(boolean)>
<com.android.gallery3d.glrenderer.Texture: void draw(com.android.gallery3d.glrenderer.GLCanvas,int,int)>
<com.android.systemui.SwipeHelper: float getTranslation(android.view.View)>
<com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper: void dismiss(android.view.View,float)>
<com.android.keyguard.KeyguardClockSwitch: void setFormat24Hour(java.lang.CharSequence)>
<com.android.systemui.statusbar.NotificationPresenter: boolean isCollapsing()>
<com.android.settingslib.location.SettingsInjector.ServiceSettingClickedListener: void <init>(com.android.settingslib.location.InjectedSetting)>
<android.net.IpMemoryStore: android.net.NetworkStackClient getNetworkStackClient()>
<com.android.systemui.statusbar.NotificationShelf: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.android.systemui.plugin.testoverlayplugin.SampleOverlayPlugin: boolean holdStatusBarOpen()>
<com.android.systemui.doze.AlwaysOnDisplayPolicy: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.NavigationBarTransitions: void destroy()>
<android.app.backup.BackupUtilsTest: void testIsFileSpecifiedInPathList_whenFileAndPathListHasIt()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void getRemoveWarning(android.content.ComponentName,android.os.RemoteCallback,int)>
<com.android.server.print.PrintManagerService: void <init>(android.content.Context)>
<com.android.server.RuntimeService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.statusbar.policy.MobileSignalController: int getCurrentIconId()>
<com.android.server.pm.PackageManagerServiceUtils: java.lang.String deriveAbiOverride(java.lang.String,com.android.server.pm.PackageSetting)>
<com.android.server.vr.VrManagerInternal: void addPersistentVrModeStateListener(android.service.vr.IPersistentVrStateCallbacks)>
<com.android.server.pm.PersistentPreferredIntentResolver: com.android.server.pm.PersistentPreferredActivity[] newArray(int)>
<com.android.systemui.tuner.TunerFragment.TunerWarningFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
<com.android.systemui.recents.RecentsImpl: void showRecents(boolean,boolean,boolean,int)>
<com.android.systemui.assist.AssistManager: int toLoggingSubType(int)>
<com.android.server.notification.SnoozeHelper: void repost(java.lang.String)>
<com.android.server.pm.UserManagerService: int getManagedProfileBadge(int)>
<com.android.systemui.qs.tileimpl.QSTileImpl: void fireToggleStateChanged(boolean)>
<com.android.server.pm.dex.PackageDexUsage.PackageUseInfo: java.util.Map getDexUseInfoMap()>
<com.android.settingslib.bluetooth.PbapClientProfile: boolean isProfileReady()>
<com.android.systemui.recents.model.RecentsTaskLoader: int getIconCacheSize()>
<com.android.systemui.statusbar.StatusBarIconView: void setVisibleState(int,boolean)>
<com.android.server.PackageWatchdog: void onPackagesReady()>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void onBiometricAuthenticated(boolean,java.lang.String)>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper.Callback: boolean needsAntiFalsing()>
<com.android.server.usb.descriptors.Usb20ASFormatII: int getmaxBitRate()>
<com.android.systemui.ExpandHelper: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<android.os.ParcelPerfTest: void timeGetDataPosition()>
<com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.printservice.recommendation.util.Preconditions: int checkFlagsArgument(int,int)>
<com.android.server.pm.Installer: byte[] hashSecondaryDexFile(java.lang.String,java.lang.String,int,java.lang.String,int)>
<com.android.server.pm.PackageKeySetData: void addUpgradeKeySetById(long)>
<com.android.server.usb.descriptors.tree.UsbDescriptorsDeviceNode: void report(com.android.server.usb.descriptors.report.ReportCanvas)>
<com.android.systemui.statusbar.AlphaOptimizedButton: boolean hasOverlappingRendering()>
<com.android.systemui.statusbar.policy.ZenModeControllerImpl: android.app.NotificationManager.Policy getConsolidatedPolicy()>
<com.android.systemui.bubbles.BubbleController.BubbleExpandListener: void onBubbleExpandChanged(boolean,java.lang.String)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void doLongClickCallback(int,int)>
<com.android.server.statusbar.StatusBarManagerService: void togglePanel()>
<com.android.server.soundtrigger.SoundTriggerLogger.Event: java.lang.String toString()>
<com.android.systemui.doze.DozeWallpaperState: void dump(java.io.PrintWriter)>
<com.android.server.accessibility.AccessibilityManagerService.UserState: void <init>(int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: android.os.Bundle getUserRestrictions(android.content.ComponentName)>
<com.android.gallery3d.glrenderer.GLCanvas: void drawMixed(com.android.gallery3d.glrenderer.BasicTexture,int,float,int,int,int,int)>
<android.media.DataSourceDesc: long getEndPosition()>
<com.android.systemui.qs.QSFragment: void setOverscrolling(boolean)>
<com.android.systemui.shared.recents.model.IconLoader: android.graphics.drawable.Drawable getAndInvalidateIfModified(com.android.systemui.shared.recents.model.Task.TaskKey,android.app.ActivityManager.TaskDescription,boolean)>
<com.android.settingslib.core.instrumentation.LogWriter: void action(android.content.Context,int,java.lang.String)>
<com.android.systemui.statusbar.policy.MobileSignalController: void setAirplaneMode(boolean)>
<com.android.systemui.statusbar.AnimatedImageView: void setImageResource(int)>
<com.android.systemui.statusbar.notification.stack.AmbientState: void setAnchorViewIndex(int)>
<com.android.server.usb.descriptors.report.ReportCanvas: void closeHeader(int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean isFullyDark()>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean needsAntiFalsing()>
<com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper: void snapOpen(android.view.View,int,float)>
<com.android.settingslib.RestrictedLockUtils: android.content.Intent getShowAdminSupportDetailsIntent(android.content.Context,com.android.settingslib.RestrictedLockUtils.EnforcedAdmin)>
<com.android.systemui.statusbar.notification.stack.HeadsUpAppearInterpolator: float getFractionUntilOvershoot()>
<com.android.server.testing.shadows.ShadowSlog: int v(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.android.server.lights.Light: void setFlashing(int,int,int,int)>
<com.android.dynsystem.BootCompletedReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.android.server.slice.PinnedSliceState: boolean isListening()>
<com.android.systemui.appops.AppOpsController: java.util.List getActiveAppOpsForUser(int)>
<com.android.server.timezone.PackageTracker: void recordCheckResult(com.android.server.timezone.CheckToken,boolean)>
<com.android.settingslib.widget.LayoutPreference: void setAllowDividerBelow(boolean)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setAboveShelf(boolean)>
<android.media.CloseGuard.Tracker: void close(java.lang.Throwable)>
<com.android.systemui.statusbar.notification.row.NotificationGuts: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.notification.stack.StackStateAnimator: void animateOverScrollToAmount(float,boolean,boolean)>
<com.android.keyguard.KeyguardMessageArea: void onFinishInflate()>
<com.android.systemui.statusbar.policy.KeyguardMonitorImpl: void notifyKeyguardState(boolean,boolean,boolean)>
<com.android.preload.ui.SequenceUI: void hideWaitDialog()>
<com.android.systemui.power.EnhancedEstimates: long getLowWarningThreshold()>
<com.android.systemui.statusbar.policy.RotationLockControllerImpl: void setRotationLockedAtAngle(boolean,int)>
<com.android.systemui.statusbar.notification.DynamicPrivacyController.Listener: void onDynamicPrivacyChanged()>
<com.android.wallpapercropper.WallpaperCropActivity.BitmapCropTask: void setCropBounds(android.graphics.RectF)>
<com.android.settingslib.wifi.TestAccessPointBuilder: com.android.settingslib.wifi.TestAccessPointBuilder setSsid(java.lang.String)>
<com.android.systemui.statusbar.HeadsUpStatusBarView: void <init>(android.content.Context)>
<com.android.systemui.recents.misc.SystemServicesProxy.StartActivityFromRecentsResultListener: void onStartActivityResult(boolean)>
<com.android.systemui.bubbles.animation.PhysicsAnimationLayout.PhysicsPropertyAnimator: com.android.systemui.bubbles.animation.PhysicsAnimationLayout.PhysicsPropertyAnimator translationY(float,java.lang.Runnable[])>
<com.android.systemui.qs.tiles.BluetoothTile: java.lang.String composeChangeAnnouncement()>
<com.android.server.usb.descriptors.report.ReportCanvas: com.android.server.usb.descriptors.UsbDescriptorParser getParser()>
<com.android.systemui.qs.QSDetail: void setExpanded(boolean)>
<android.os.BinderCallsStatsPerfTest: void setUp()>
<com.android.settingslib.bluetooth.CachedBluetoothDeviceManager: void onDeviceNameUpdated(android.bluetooth.BluetoothDevice)>
<com.android.server.notification.NotificationManagerService.NotificationListeners: void notifyPostedLocked(com.android.server.notification.NotificationRecord,com.android.server.notification.NotificationRecord)>
<com.android.systemui.recents.utilities.Utilities: float mapRange(float,float,float)>
<com.android.server.input.InputManagerService: void setSystemUiVisibility(int)>
<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: boolean isSwipedEnoughToShowMenu()>
<com.android.systemui.statusbar.GestureRecorder.Gesture: boolean isComplete()>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationCustomViewWrapper: void onContentUpdated(com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: void setGroupExpansionChanging(boolean)>
<com.android.printservice.recommendation.RecommendationServiceImpl: void onChanged()>
<com.android.systemui.plugins.FalsingManager: void onAffordanceSwipingAborted()>
<com.android.packageinstaller.wear.WearPackageArgs: int getCompanionSdkVersion(android.os.Bundle)>
<com.android.systemui.plugins.qs.QSFactory: com.android.systemui.plugins.qs.QSTile createTile(java.lang.String)>
<com.android.systemui.statusbar.DragDownHelper.DragDownCallback: void onCrossedThreshold(boolean)>
<com.android.systemui.statusbar.policy.SmartReplyView: java.util.List inflateSmartActions(com.android.systemui.statusbar.policy.SmartReplyView.SmartActions,com.android.systemui.statusbar.SmartReplyController,com.android.systemui.statusbar.notification.collection.NotificationEntry,com.android.systemui.statusbar.policy.HeadsUpManager,boolean)>
<com.android.systemui.plugins.ClockPlugin: int getPreferredY(int)>
<com.android.systemui.statusbar.phone.NavigationPrototypeController: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.systemui.volume.VolumeDialogControllerImpl: android.media.AudioManager getAudioManager()>
<com.android.server.IpSecService: void applyTunnelModeTransform(int,int,int,java.lang.String)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void updateLeftAffordance()>
<com.android.settingslib.core.lifecycle.Lifecycle: void onPrepareOptionsMenu(android.view.Menu)>
<com.android.gallery3d.glrenderer.GLCanvas: boolean unloadTexture(com.android.gallery3d.glrenderer.BasicTexture)>
<com.google.android.startop.iorap.IorapForwardingService: void onStart()>
<com.android.systemui.recents.RecentsImpl: void onDraggingInRecentsEnded(float)>
<com.android.settingslib.wifi.AccessPoint: java.lang.String getSettingsSummary()>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: java.util.List getSupportedProfiles()>
<com.android.server.display.color.DisplayTransformManager: boolean needsLinearColorMatrix()>
<com.android.systemui.statusbar.DragDownHelper.DragDownCallback: void setEmptyDragAmount(float)>
<com.android.systemui.shared.plugins.VersionInfo.InvalidVersionException: void <init>(java.lang.Class,boolean,int,int)>
<com.android.server.vr.SettingsObserver: void addListener(com.android.server.vr.SettingsObserver.SettingChangeListener)>
<com.android.server.firewall.IntentFirewall: boolean checkIntent(com.android.server.firewall.IntentFirewall.FirewallIntentResolver,android.content.ComponentName,int,android.content.Intent,int,int,java.lang.String,int)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: com.android.systemui.statusbar.notification.row.ActivatableNotificationView getActivatedChild()>
<com.android.printspooler.model.PrintSpoolerService.PrintSpooler: void createPrintJob(android.print.PrintJobInfo)>
<com.android.printservice.recommendation.util.Preconditions: void checkState(boolean,java.lang.String)>
<com.android.systemui.statusbar.phone.PanelView: void onTrackingStarted()>
<android.media.MediaPlayer2: android.media.AudioDeviceInfo getRoutedDevice()>
<com.android.systemui.recents.RecentsSystemUser: void <init>(android.content.Context,com.android.systemui.recents.RecentsImpl)>
<javax.microedition.khronos.opengles.GL10: void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<com.android.gallery3d.common.Utils: int floorLog2(float)>
<com.android.server.statusbar.StatusBarManagerService: void showPinningEscapeToast()>
<com.android.systemui.Prefs: void remove(android.content.Context,java.lang.String)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setClipToActualHeight(boolean)>
<com.android.systemui.shared.plugins.PluginManagerImpl: void removePluginListener(com.android.systemui.plugins.PluginListener)>
<com.android.systemui.recents.views.grid.TaskGridLayoutAlgorithm: com.android.systemui.recents.views.TaskViewTransform getTransform(int,int,com.android.systemui.recents.views.TaskViewTransform,com.android.systemui.recents.views.TaskStackLayoutAlgorithm)>
<com.android.server.ConnectivityService: void releaseNetworkRequest(android.net.NetworkRequest)>
<com.android.systemui.classifier.HistoryEvaluator: float getEvaluation()>
<com.android.systemui.statusbar.phone.StatusBar: void clickTile(android.content.ComponentName)>
<com.android.powermodel.component.ModemProfile.Builder: void setScanningMa(float)>
<com.android.server.audio.AudioService.VolumeController: void postDisplaySafeVolumeWarning(int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: android.content.ComponentName getRestrictionsProvider(int)>
<com.android.keyguard.KeyguardSecurityContainer.SecurityCallback: void onSecurityModeChanged(com.android.keyguard.KeyguardSecurityModel.SecurityMode,boolean)>
<com.android.settingslib.widget.FooterPreferenceMixin: void <init>(androidx.preference.PreferenceFragment,com.android.settingslib.core.lifecycle.Lifecycle)>
<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice queryIntentReceivers(android.content.Intent,java.lang.String,int,int)>
<com.android.systemui.statusbar.SmartReplyController.Callback: void onSmartReplySent(com.android.systemui.statusbar.notification.collection.NotificationEntry,java.lang.CharSequence)>
<com.android.systemui.doze.DozeLog: void traceSensor(android.content.Context,int)>
<com.android.server.biometrics.fingerprint.FingerprintConstants: java.lang.String tagEnumerateStartError()>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: long getHiSyncId()>
<com.android.systemui.util.AlarmTimeout: boolean isScheduled()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setHeadsUpManager(com.android.systemui.statusbar.policy.HeadsUpManager)>
<com.android.server.hdmi.HdmiCecLocalDevicePlayback: int findAudioReceiverAddress()>
<com.android.server.notification.ZenModeFiltering: boolean matchesCallFilter(android.content.Context,int,android.app.NotificationManager.Policy,android.os.UserHandle,android.os.Bundle,com.android.server.notification.ValidateNotificationPeople,int,float)>
<com.android.server.testing.shadows.ShadowRecoveryController: void removeKey(java.lang.String)>
<com.android.systemui.statusbar.CommandQueue: void appTransitionStarting(int,long,long,boolean)>
<com.android.systemui.statusbar.phone.StatusBar: void onHeadsUpPinned(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.commands.sm.Sm: void runGetFbeMode()>
<com.android.server.content.ContentService: void setIsSyncable(android.accounts.Account,java.lang.String,int)>
<android.net.util.SharedLog: android.net.util.SharedLog forSubComponent(java.lang.String)>
<com.android.gallery3d.exif.ExifTag: java.lang.String forceGetValueAsString()>
<com.android.systemui.tuner.TunerService: void clearAll()>
<com.android.systemui.statusbar.phone.NavigationModeController: int addListener(com.android.systemui.statusbar.phone.NavigationModeController.ModeChangedListener)>
<com.android.gallery3d.glrenderer.GLCanvas: void restore()>
<com.android.gallery3d.glrenderer.GLES20Canvas: void rotate(float,float,float,float)>
<com.android.systemui.statusbar.phone.LockscreenWallpaper.WallpaperDrawable: int getIntrinsicHeight()>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: void removeEmergencyListener(com.android.systemui.statusbar.policy.NetworkController.EmergencyListener)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void closeControlsIfOutsideTouch(android.view.MotionEvent)>
<com.android.server.pm.PackageManagerService: android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String,int)>
<com.android.server.trust.TrustManagerService: void updateTrust(int,int)>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcherScrim: int getAlpha()>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: boolean isTopBucket()>
<com.android.systemui.recents.views.ViewPool.ViewPoolConsumer: boolean hasPreferredData(java.lang.Object,java.lang.Object)>
<com.android.server.BinderCallsStatsService.Internal: void reset()>
<android.processor.view.inspector.InspectableClassModel.Property: void setAttributeIdInferrableFromR(boolean)>
<com.android.powermodel.ActivityReport: com.android.powermodel.AppActivity findApp(com.android.powermodel.SpecialApp)>
<com.android.systemui.statusbar.HeadsUpStatusBarView: void onDarkChanged(android.graphics.Rect,float,int)>
<android.media.MediaSession2: java.lang.Object sendSessionCommand(android.media.MediaSession2.ControllerInfo,android.media.Session2Command,android.os.Bundle)>
<android.media.MediaPlayer2: java.lang.Object setDataSource(android.media.DataSourceDesc)>
<com.android.server.usb.descriptors.UsbDeviceDescriptor: byte getProductIndex()>
<com.android.systemui.globalactions.GlobalActionsColumnLayout: void centerAlongEdge()>
<com.android.server.accounts.AccountManagerService: void confirmCredentialsAsUser(android.accounts.IAccountManagerResponse,android.accounts.Account,android.os.Bundle,boolean,int)>
<com.android.systemui.qs.QSTileHost: void openPanels()>
<javax.microedition.khronos.egl.EGL10: boolean eglQueryContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext,int,int[])>
<com.android.settingslib.deviceinfo.AbstractUptimePreferenceController: void displayPreference(androidx.preference.PreferenceScreen)>
<com.android.systemui.statusbar.KeyguardAffordanceView: boolean performClick()>
<com.android.server.audio.AudioService: java.util.List getActiveRecordingConfigurations()>
<com.android.systemui.statusbar.policy.ZenModeControllerImpl: void addCallback(android.os.Handler.Callback)>
<com.android.systemui.statusbar.phone.RotationButton: void setDarkIntensity(float)>
<com.android.systemui.ScreenDecorations.DisplayCutoutView: void <init>(android.content.Context,boolean,java.lang.Runnable,com.android.systemui.ScreenDecorations)>
<com.android.systemui.statusbar.phone.BiometricUnlockController: boolean unlockedByWakeAndUnlock()>
<com.android.server.twilight.TwilightService: void onStatusChanged(java.lang.String,int,android.os.Bundle)>
<android.net.INetworkStackConnector: void fetchIpMemoryStore(android.net.IIpMemoryStoreCallbacks)>
<com.android.printspooler.widget.PageContentView: com.android.printspooler.model.PageContentRepository.PageContentProvider getPageContentProvider()>
<com.android.server.NetworkManagementService: void registerTetheringStatsProvider(android.net.ITetheringStatsProvider,java.lang.String)>
<com.android.server.TelephonyRegistry: void notifySignalStrengthForPhoneId(int,int,android.telephony.SignalStrength)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onUserSwitchComplete(int)>
<com.android.systemui.statusbar.phone.NavigationBarView: void onAttachedToWindow()>
<com.android.systemui.statusbar.phone.NavigationBarTransitions: void reapplyDarkIntensity()>
<com.android.systemui.recents.views.RecentsViewTouchHandler: void onBusEvent(com.android.systemui.recents.events.ui.dragndrop.DragStartEvent)>
<com.android.systemui.statusbar.phone.ButtonDispatcher: void setAlpha(float,boolean,long)>
<com.android.systemui.qs.tiles.WifiTile: void <init>(com.android.systemui.qs.QSHost,com.android.systemui.statusbar.policy.NetworkController,com.android.systemui.plugins.ActivityStarter)>
<com.android.server.pm.Installer: void onStart()>
<com.android.systemui.DependencyBinder: com.android.systemui.plugins.VolumeDialogController provideVolumeDialogController(com.android.systemui.volume.VolumeDialogControllerImpl)>
<com.android.settingslib.dream.DreamBackend: boolean isActivatedOnSleep()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glBindFramebufferOES(int,int)>
<com.android.settingslib.utils.IconCache: android.graphics.drawable.Drawable getIcon(android.graphics.drawable.Icon)>
<com.android.server.pm.PackageManagerService: java.lang.String getNameForUid(int)>
<com.android.uiautomator.core.UiDevice: boolean openQuickSettings()>
<com.android.systemui.bubbles.BubbleStackView: void updateBubbleOrder(java.util.List)>
<com.android.settingslib.net.NetworkCycleDataLoader: void onReset()>
<com.android.server.pm.PackageManagerService: int getComponentEnabledSetting(android.content.ComponentName,int)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: boolean isConnectedHearingAidDevice()>
<com.android.systemui.statusbar.notification.row.NotificationGuts: void closeControls(int,int,boolean,boolean)>
<com.android.settingslib.widget.ActionButtonsPreference: com.android.settingslib.widget.ActionButtonsPreference setButton1Text(int)>
<com.android.systemui.statusbar.phone.ContextualButtonGroup: boolean isButtonVisibleWithinGroup(int)>
<com.android.systemui.statusbar.NotificationShelf: boolean hasItemsInStableShelf()>
<com.android.systemui.statusbar.phone.KeyguardBouncer: boolean willDismissWithAction()>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean shouldDelayChildPressedState()>
<com.android.server.pm.UserManagerService: boolean isRestricted()>
<com.android.systemui.statusbar.policy.ZenModeControllerImpl: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.qs.QSAnimator: void onAnimationAtStart()>
<com.android.systemui.statusbar.notification.ImageTransformState: void initFrom(android.view.View,com.android.systemui.statusbar.notification.TransformState.TransformInfo)>
<com.android.systemui.pip.phone.PipTouchState: android.graphics.PointF getLastTouchDelta()>
<android.perftests.utils.SettingsStateManager: java.lang.String toString()>
<com.android.server.textservices.TextServicesManagerService: android.view.textservice.SpellCheckerSubtype getCurrentSpellCheckerSubtype(int,boolean)>
<com.android.systemui.statusbar.phone.ScreenPinningNotify: void showEscapeToast(boolean)>
<com.android.server.notification.CountdownConditionProvider: android.content.ComponentName getComponent()>
<com.android.systemui.statusbar.notification.stack.AmbientState: float getTopPadding()>
<com.android.server.slice.SliceManagerService: void unpinSlice(java.lang.String,android.net.Uri,android.os.IBinder)>
<javax.obex.ClientSession: javax.obex.Operation put(javax.obex.HeaderSet)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setScrollingEnabled(boolean)>
<com.android.systemui.pip.phone.PipTouchHandler: void onConfigurationChanged()>
<com.android.systemui.shared.system.WindowCallbacksCompat: void onWindowDragResizeStart(android.graphics.Rect,boolean,android.graphics.Rect,android.graphics.Rect,int)>
<com.android.systemui.qs.tiles.BluetoothTile: void handleSecondaryClick()>
<com.android.settingslib.CustomEditTextPreference.CustomPreferenceDialogFragment: void onBindDialogView(android.view.View)>
<android.multiuser.UserLifecycleTests: void setUp()>
<android.net.netlink.StructNlAttr: java.lang.String toString()>
<com.android.server.attention.AttentionManagerService: com.android.server.attention.AttentionManagerService.UserState getOrCreateCurrentUserStateLocked()>
<com.android.server.TelephonyRegistry: void notifySimActivationStateChangedForPhoneId(int,int,int,int)>
<com.android.printservice.recommendation.plugin.hp.ServiceRecommendationPlugin: void <init>(android.content.Context,int,com.android.printservice.recommendation.plugin.hp.VendorInfo,java.lang.String[])>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isResetPasswordTokenActive(android.content.ComponentName)>
<android.text.StaticLayoutPerfTest: void testCreate_PrecomputedText_Styled_Greedy_NoHyphenation()>
<com.android.server.stats.StatsCompanionService.Lifecycle: void onStart()>
<com.android.systemui.statusbar.phone.NotificationIconContainer: boolean hasOverflow()>
<com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem: boolean isArcEnabled()>
<com.android.systemui.power.PowerNotificationWarnings: void showThermalShutdownWarning()>
<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: void setMenuItems(java.util.ArrayList)>
<com.android.systemui.shared.system.QuickStepContract: java.lang.String getSystemUiStateString(int)>
<com.android.keyguard.clock.AnalogClockController: android.graphics.Bitmap getPreview(int,int)>
<com.android.systemui.statusbar.notification.row.ExpandableView: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.shared.system.RemoteAnimationRunnerCompat: void onAnimationCancelled()>
<com.android.server.accessibility.AccessibilityManagerService.UserState: void removeServiceLocked(com.android.server.accessibility.AccessibilityServiceConnection)>
<com.android.externalstorage.ExternalStorageProvider: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.TelephonyRegistry: void notifyCellLocation(android.os.Bundle)>
<com.android.server.pm.dex.DexoptOptions: java.lang.String getPackageName()>
<com.android.systemui.statusbar.phone.NotificationIconContainer: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.String getDeviceOwnerName()>
<com.android.server.locksettings.LockSettingsService: void onShellCommand(java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ShellCallback,android.os.ResultReceiver)>
<com.android.server.audio.PlaybackActivityMonitor: void mutePlayersForCall(int[])>
<com.android.server.audio.AudioService: void forceVolumeControlStream(int,android.os.IBinder)>
<com.android.systemui.qs.PagedTileLayout: boolean hasOverlappingRendering()>
<com.android.settingslib.bluetooth.LocalBluetoothProfileManager: com.android.settingslib.bluetooth.A2dpSinkProfile getA2dpSinkProfile()>
<com.android.systemui.statusbar.NotificationRemoteInputManager: boolean shouldKeepForRemoteInputHistory(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.systemui.statusbar.phone.KeyguardBouncer: void reset()>
<com.android.systemui.volume.VolumeDialogControllerImpl: void dismiss()>
<com.android.server.usb.descriptors.Usb10ACInputTerminal: byte getTerminal()>
<com.android.systemui.statusbar.policy.LocationController: boolean isLocationActive()>
<com.android.server.locksettings.SyntheticPasswordManager: boolean removePendingToken(long,int)>
<com.android.systemui.statusbar.notification.stack.ViewState: void startAnimator(android.animation.Animator,android.animation.AnimatorListenerAdapter)>
<android.app.ResourcesPerfTest: void getInteger()>
<com.android.server.notification.RankingReconsideration: void run()>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.util.List getPermittedAccessibilityServices(android.content.ComponentName)>
<com.android.systemui.recents.RecentsImpl: void onAnimationFinished()>
<com.android.systemui.statusbar.notification.row.NotificationContentInflater.AsyncInflationTask: void handleInflationException(android.service.notification.StatusBarNotification,java.lang.Exception)>
<com.android.server.inputmethod.InputMethodManagerService.Lifecycle: void onBootPhase(int)>
<com.android.server.display.BrightnessTracker: void onSwitchUser(int)>
<com.android.systemui.statusbar.policy.SecurityController: java.lang.String getWorkProfileVpnName()>
<com.android.systemui.pip.phone.PipMenuActivityController: void setAppActions(android.content.pm.ParceledListSlice)>
<com.android.server.pm.OtaDexoptService: void cleanup()>
<com.android.systemui.qs.QSTileHost: void removeCallback(android.os.Handler.Callback)>
<com.android.systemui.classifier.Stroke: java.util.ArrayList getPoints()>
<com.android.settingslib.graph.SignalDrawable: void setDarkIntensity(float)>
<com.android.server.companion.CompanionDeviceManagerService: void onUnlockUser(int)>
<com.android.server.NetworkManagementService: void setFirewallChainEnabled(int,boolean)>
<com.android.systemui.shared.system.TaskStackChangeListeners: void onActivityLaunchOnSecondaryDisplayFailed(android.app.ActivityManager.RunningTaskInfo,int)>
<com.android.systemui.statusbar.HeadsUpStatusBarView: android.os.Bundle onSaveInstanceState()>
<com.android.server.pm.CrossProfileAppsServiceImpl.Injector: void restoreCallingIdentity(long)>
<com.android.settingslib.widget.FooterPreference: void <init>(android.content.Context)>
<com.android.server.clipboard.ClipboardService: void <init>(android.content.Context)>
<com.android.systemui.util.leak.GarbageMonitor.ProcessMemInfo: long getUptime()>
<com.android.server.notification.RankingHelper: void extractSignals(com.android.server.notification.NotificationRecord)>
<com.android.server.locksettings.recoverablekeystore.WrappedKey: com.android.server.locksettings.recoverablekeystore.WrappedKey fromSecretKey(com.android.server.locksettings.recoverablekeystore.PlatformEncryptionKey,javax.crypto.SecretKey,byte[])>
<com.android.systemui.statusbar.phone.PanelView: void startUnlockHintAnimation()>
<com.android.systemui.classifier.Point: float dotProduct(com.android.systemui.classifier.Point,com.android.systemui.classifier.Point)>
<javax.microedition.khronos.opengles.GL11: void glGetLightxv(int,int,java.nio.IntBuffer)>
<com.android.systemui.statusbar.policy.SecurityController: boolean hasCACertInCurrentUser()>
<android.net.NetworkStackClient: android.net.NetworkStackClient getInstance()>
<com.android.systemui.DessertCaseView: void fillFreeList(int)>
<com.android.server.pm.Installer: boolean dumpProfiles(int,java.lang.String,java.lang.String,java.lang.String)>
<com.android.systemui.ScreenDecorations: void onDarkIntensity(float)>
<com.android.systemui.recents.views.TaskViewThumbnail: android.graphics.Paint getDrawPaint()>
<com.android.systemui.statusbar.notification.stack.NotificationListContainer: void removeContainerView(android.view.View)>
<com.android.server.pm.SELinuxMMAC: boolean readInstallPolicy()>
<com.android.statementservice.DirectStatementService: void onCreate()>
<com.android.systemui.statusbar.phone.KeyguardStatusBarView: void onFinishInflate()>
<com.android.settingslib.NetworkPolicyEditor: long getPolicyWarningBytes(android.net.NetworkTemplate)>
<com.android.systemui.statusbar.phone.NavigationBarView: void showPinningEnterExitToast(boolean)>
<com.android.systemui.statusbar.phone.StatusBar: void onCameraHintStarted()>
<com.android.systemui.stackdivider.DividerHandleView: void onDraw(android.graphics.Canvas)>
<com.android.server.ConnectivityService: android.os.IBinder startOrGetTestNetworkService()>
<android.os.ParcelArrayPerfTest: void timeReadIntArray()>
<com.android.server.location.ContextHubClientBroker.CallbackConsumer: void accept(android.hardware.location.IContextHubClientCallback)>
<com.android.systemui.statusbar.CommandQueue: void showRecentApps(boolean)>
<com.android.systemui.qs.external.TileServices: void onDialogHidden(android.os.IBinder)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void bindCameraPrewarmService()>
<com.android.settingslib.suggestions.SuggestionControllerMixinCompat: androidx.loader.content.Loader onCreateLoader(int,android.os.Bundle)>
<com.android.server.locksettings.SyntheticPasswordManager: java.util.ArrayList toByteArrayList(byte[])>
<com.android.printspooler.ui.SelectPrinterActivity: void onLoadFinished(android.content.Loader,java.util.List)>
<com.android.server.accessibility.AccessibilityManagerService: void unregisterUiTestAutomationService(android.accessibilityservice.IAccessibilityServiceClient)>
<com.android.systemui.statusbar.GestureRecorder.Gesture.Record: java.lang.String toJson()>
<com.android.server.soundtrigger.SoundTriggerHelper: void onSoundModelUpdate(android.hardware.soundtrigger.SoundTrigger.SoundModelEvent)>
<com.android.keyguard.KeyguardUpdateMonitor: void setKeyguardOccluded(boolean)>
<com.android.server.storage.DiskStatsLoggingService: boolean onStartJob(android.app.job.JobParameters)>
<com.android.systemui.statusbar.policy.RemoteInputView.RemoteEditText: boolean onKeyPreIme(int,android.view.KeyEvent)>
<com.android.systemui.power.PowerNotificationWarnings: void showWarningNotification()>
<com.android.photos.BitmapRegionTileSource.UriBitmapSource: android.graphics.Bitmap loadPreviewBitmap(android.graphics.BitmapFactory.Options)>
<com.android.systemui.bubbles.BubbleData: boolean isExpanded()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void cancelExpandHelper()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void changeViewPosition(com.android.systemui.statusbar.notification.row.ExpandableView,int)>
<com.android.systemui.statusbar.OperatorNameView: void <init>(android.content.Context)>
<com.android.systemui.util.leak.WeakIdentityHashMap: java.util.Set entrySet()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setDismissRtl(boolean)>
<com.android.systemui.statusbar.phone.KeyguardIndicationTextView: void switchIndication(int)>
<com.android.systemui.classifier.SpeedClassifier: float getFalseTouchEvaluation(int,com.android.systemui.classifier.Stroke)>
<android.media.DataSourceCallback: int readAt(long,byte[],int,int)>
<com.android.server.pm.permission.PermissionsState: java.util.Set getPermissions(int)>
<com.android.systemui.statusbar.notification.row.RowInflaterTask: void onInflateFinished(android.view.View,int,android.view.ViewGroup)>
<com.android.server.audio.MediaFocusControl: int getCurrentAudioFocus()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean installCaCert(android.content.ComponentName,java.lang.String,byte[])>
<com.android.systemui.statusbar.policy.KeyButtonRipple: int getOpacity()>
<com.android.server.accessibility.FingerprintGestureDispatcher: void <init>(android.hardware.fingerprint.IFingerprintService,android.content.res.Resources,java.lang.Object)>
<com.android.server.contentcapture.ContentCaptureManagerService: void dumpLocked(java.lang.String,java.io.PrintWriter)>
<com.android.systemui.statusbar.notification.row.ExpandableOutlineView: void setClipTopAmount(int)>
<com.android.settingslib.net.NetworkCycleData.Builder: com.android.settingslib.net.NetworkCycleData.Builder setTotalUsage(long)>
<com.android.systemui.statusbar.notification.stack.AmbientState: boolean isDismissAllInProgress()>
<com.android.systemui.statusbar.policy.FlashlightControllerImpl: void addCallback(com.android.systemui.statusbar.policy.FlashlightController.FlashlightListener)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: boolean containsView(android.view.View)>
<com.android.server.contentsuggestions.ContentSuggestionsPerUserService: boolean updateLocked(boolean)>
<com.android.systemui.statusbar.car.hvac.TemperatureTextView: void setDisplayInFahrenheit(boolean)>
<com.android.server.testing.shadows.FrameworkShadowLooper: void setCurrentThread(boolean)>
<com.android.systemui.statusbar.phone.HeadsUpTouchHelper.Callback: com.android.systemui.statusbar.notification.row.ExpandableView getChildAtRawPosition(float,float)>
<com.android.systemui.pip.tv.PipControlButtonView: void onFinishInflate()>
<com.android.server.usb.descriptors.UsbACHeaderInterface: void <init>(int,byte,byte,int,int)>
<com.android.server.restrictions.RestrictionsManagerService: void <init>(android.content.Context)>
<com.android.systemui.qs.SecureSetting: void handleValueChanged(int,boolean)>
<com.android.systemui.statusbar.phone.NavigationBarInflaterView: int extractKeycode(java.lang.String)>
<com.android.server.locksettings.SyntheticPasswordManager: byte[] createSPBlob(java.lang.String,byte[],byte[],long)>
<com.android.systemui.plugins.FragmentBase: android.content.Context getContext()>
<com.android.settingslib.wifi.AccessPointPreference: void updateIcon(int,android.content.Context)>
<com.android.systemui.qs.QuickTileLayout: void <init>(android.content.Context)>
<com.android.systemui.statusbar.notification.stack.AnimationFilter: com.android.systemui.statusbar.notification.stack.AnimationFilter animateAlpha()>
<com.android.server.slice.SliceManagerService.Lifecycle: void onStart()>
<com.android.server.appbinding.finders.AppServiceFinder: java.lang.String getServicePermission()>
<com.android.settingslib.widget.BarChartInfo.Builder: com.android.settingslib.widget.BarChartInfo.Builder setTitle(int)>
<android.widget.TextViewPrecomputedTextPerfTest: void testOnMeasure_PrecomputedText_Selectable()>
<javax.obex.ObexSession: boolean handleAuthResp(byte[])>
<com.android.systemui.bubbles.BubbleExpandedView: int getVirtualDisplayId()>
<com.android.mtp.MtpDocumentsProvider: android.database.Cursor queryDocument(java.lang.String,java.lang.String[])>
<com.android.systemui.tuner.LockscreenFragment.Adapter: void addItem(com.android.systemui.tuner.LockscreenFragment.Item,com.android.systemui.tuner.LockscreenFragment.Item)>
<com.android.shell.BugreportWarningActivity: void onCreate(android.os.Bundle)>
<android.widget.EditTextLongTextPerfTest: void <init>(java.lang.String,int,int)>
<com.android.server.locksettings.LockSettingsService: void registerStrongAuthTracker(android.app.trust.IStrongAuthTracker)>
<com.android.systemui.statusbar.phone.MultiUserSwitch: void setKeyguardUserSwitcher(com.android.systemui.statusbar.policy.KeyguardUserSwitcher)>
<com.android.systemui.qs.tiles.UserDetailItemView: void <init>(android.content.Context)>
<com.android.systemui.statusbar.notification.stack.StackScrollAlgorithm: boolean canChildBeDismissed(android.view.View)>
<com.android.systemui.stackdivider.DividerWindowManager: void add(android.view.View,int,int)>
<com.android.server.media.MediaResourceMonitorService: void <init>(android.content.Context)>
<com.android.systemui.statusbar.notification.row.NotificationGutsManager: void startAppOpsSettingsActivity(java.lang.String,int,android.util.ArraySet,com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<com.android.server.pm.PackageManagerService: void setPermissionEnforced(java.lang.String,boolean)>
<com.android.systemui.classifier.FalsingManagerImpl: void onNotificatonStopDraggingDown()>
<com.android.systemui.statusbar.phone.StatusBar: void requestFaceAuth()>
<com.android.systemui.recents.views.TaskStackView: com.android.systemui.recents.views.TaskStackLayoutAlgorithm.VisibilityReport computeStackVisibilityReport()>
<com.android.gallery3d.common.Utils: int parseIntSafely(java.lang.String,int)>
<com.android.location.provider.ActivityRecognitionProvider: boolean flush()>
<com.android.statementservice.retriever.Utils: boolean hasCommonString(java.util.List,java.util.List)>
<com.android.server.pm.dex.PackageDexUsage.PackageUseInfo: boolean isUsedByOtherApps(java.lang.String)>
<com.android.systemui.shared.system.TransactionCompat: com.android.systemui.shared.system.TransactionCompat setMatrix(com.android.systemui.shared.system.SurfaceControlCompat,android.graphics.Matrix)>
<com.android.server.content.SyncOperation: com.android.server.content.SyncOperation createOneTimeSyncOperation()>
<com.android.systemui.util.leak.DumpTruck: void <init>(android.content.Context)>
<com.android.systemui.statusbar.notification.row.NotificationGuts.GutsContent: void onFinishedClosing()>
<com.android.systemui.statusbar.notification.row.FooterViewButton: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.server.biometrics.fingerprint.FingerprintUserState: java.util.ArrayList getCopy(java.util.ArrayList)>
<com.android.systemui.statusbar.phone.NavigationHandle: void setVertical(boolean)>
<com.android.server.input.InputManagerService: void cancelVibrate(int,android.os.IBinder)>
<com.android.server.pm.Policy.PolicyBuilder: com.android.server.pm.Policy.PolicyBuilder addSignature(java.lang.String)>
<com.android.systemui.statusbar.OperatorNameView: void onAttachedToWindow()>
<com.android.systemui.statusbar.policy.ZenModeController: int getZen()>
<com.android.statsd.loadtest.BatteryDataRecorder: void stopRecording(android.content.Context)>
<com.android.systemui.SwipeHelper.Callback: android.view.View getChildAtPosition(android.view.MotionEvent)>
<com.android.server.pm.permission.BasePermission: boolean isAppPredictor()>
<com.android.wallpaperbackup.WallpaperBackupAgent: void onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>
<com.android.settingslib.bluetooth.BluetoothUtils: android.util.Pair getBtRainbowDrawableWithDescription(android.content.Context,com.android.settingslib.bluetooth.CachedBluetoothDevice)>
<com.android.systemui.qs.tiles.FlashlightTile: void <init>(com.android.systemui.qs.QSHost,com.android.systemui.statusbar.policy.FlashlightController)>
<com.android.systemui.qs.tiles.DataSaverTile: void <init>(com.android.systemui.qs.QSHost,com.android.systemui.statusbar.policy.NetworkController)>
<com.android.server.locksettings.LockSettingsService: void onStartUser(int)>
<com.android.server.pm.PackageSender: void notifyPackageRemoved(java.lang.String,int)>
<com.android.location.provider.ProviderPropertiesUnbundled: com.android.location.provider.ProviderPropertiesUnbundled create(boolean,boolean,boolean,boolean,boolean,boolean,boolean,int,int)>
<com.android.systemui.qs.tileimpl.SlashImageView: boolean getAnimationEnabled()>
<com.android.server.pm.UserRestrictionsUtils: boolean isSettingRestrictedForUser(android.content.Context,java.lang.String,int,java.lang.String,int)>
<com.android.printservice.recommendation.util.Preconditions: long checkArgumentNonnegative(long,java.lang.String)>
<com.android.server.locksettings.recoverablekeystore.KeyStoreProxyImpl: java.security.KeyStore getAndLoadAndroidKeyStore()>
<com.android.server.statusbar.StatusBarManagerService: void onNotificationExpansionChanged(java.lang.String,boolean,boolean,int)>
<com.android.systemui.shared.recents.model.Task.TaskCallbacks: void onTaskDataUnloaded()>
<com.android.systemui.statusbar.phone.StatusBar: void collapseShade()>
<com.android.systemui.doze.DozeMachine.Service: void finish()>
<com.android.systemui.recents.OverviewProxyService.OverviewProxyListener: void onQuickStepStarted()>
<com.android.externalstorage.ExternalStorageProvider: int enforceWritePermissionInner(android.net.Uri,java.lang.String,android.os.IBinder)>
<com.android.server.soundtrigger.SoundTriggerLogger.StringEvent: void <init>(java.lang.String)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void showBiometricDialog(android.os.Bundle,android.hardware.biometrics.IBiometricServiceReceiverInternal,int,boolean,int)>
<com.android.keyguard.KeyguardHostView: void startAppearAnimation()>
<com.android.systemui.qs.tileimpl.QSTileImpl: com.android.systemui.plugins.qs.QSTile.State newTileState()>
<com.android.server.policy.WindowManagerPolicy.WindowManagerFuncs: void reboot(boolean)>
<com.android.systemui.statusbar.phone.PhoneStatusBarTransitions: void onTransition(int,int,boolean)>
<com.android.server.autofill.ui.AutoFillUI: void showError(int,com.android.server.autofill.ui.AutoFillUI.AutoFillUiCallback)>
<com.android.systemui.statusbar.phone.RegionSamplingHelper: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)>
<com.android.systemui.statusbar.phone.CollapsedStatusBarFragment: void showNotificationIconArea(boolean)>
<com.android.settingslib.media.BluetoothMediaDevice: java.lang.String getSummary()>
<com.android.systemui.egg.MLand: boolean isGamePad(android.view.InputDevice)>
<com.android.systemui.statusbar.policy.KeyButtonDrawable: void startAnimation()>
<com.android.systemui.qs.tiles.BatterySaverTile: java.lang.CharSequence getTileLabel()>
<com.android.server.testing.shadows.ShadowEventLog: int writeEvent(int,java.lang.String)>
<com.android.server.usb.descriptors.UsbACAudioControlEndpoint: void <init>(int,byte,int)>
<android.media.Session2Link: void sendSessionCommand(android.media.Controller2Link,int,android.media.Session2Command,android.os.Bundle,android.os.ResultReceiver)>
<com.android.server.signedconfig.SignedConfigService: void registerUpdateReceiver(android.content.Context)>
<com.android.server.TelephonyRegistry: void notifyCallQualityChanged(android.telephony.CallQuality,int,int,int)>
<com.android.systemui.assist.AssistOrbContainer: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setIconAnimationRunning(boolean)>
<com.android.server.RescueParty: boolean isAttemptingFactoryReset()>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.component.ActivityPinnedEvent)>
<com.android.systemui.statusbar.phone.KeyguardEnvironmentImpl: boolean isNotificationForCurrentProfiles(android.service.notification.StatusBarNotification)>
<com.android.systemui.globalactions.GlobalActionsColumnLayout: int getPowerButtonOffsetDistance()>
<com.android.systemui.statusbar.phone.StatusBar: void startActivityDismissingKeyguard(android.content.Intent,boolean,boolean,int)>
<com.android.server.ConnectivityService: void setAcceptPartialConnectivity(android.net.Network,boolean,boolean)>
<com.android.server.biometrics.fingerprint.FingerprintService: void notifyClientActiveCallbacks(boolean)>
<com.android.systemui.shared.system.WindowCallbacksCompat: void onPostDraw(android.graphics.Canvas)>
<com.android.systemui.recents.views.TaskStackViewScroller: float getStackScroll()>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void launchLeftAffordance()>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void startKeyguardExitAnimation(long,long)>
<com.android.keyguard.KeyguardUpdateMonitor: void dispatchScreenTurnedOn()>
<com.android.systemui.qs.tiles.IntentTile: android.content.Intent getLongClickIntent()>
<com.android.server.pm.PreferredComponent.Callbacks: boolean onReadTag(java.lang.String,org.xmlpull.v1.XmlPullParser)>
<android.multiuser.BenchmarkRunner: void resumeTiming()>
<com.android.systemui.statusbar.phone.KeyguardBouncer: void startPreHideAnimation(java.lang.Runnable)>
<com.android.systemui.qs.tiles.UiModeNightTile: com.android.systemui.plugins.qs.QSTile.BooleanState newTileState()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setLongPressListener(com.android.systemui.statusbar.notification.row.ExpandableNotificationRow.LongPressListener)>
<com.android.server.timedetector.TimeDetectorStrategy.Callback: long systemClockMillis()>
<android.net.shared.ProvisioningConfiguration.Builder: android.net.shared.ProvisioningConfiguration.Builder withApfCapabilities(android.net.apf.ApfCapabilities)>
<com.android.systemui.CornerHandleView: void updateDarkness(float)>
<com.android.carrierdefaultapp.ProvisionObserver: boolean isDeferredForProvision(android.content.Context,android.content.Intent)>
<com.android.server.infra.AbstractMasterSystemService: void setAllowInstantService(boolean)>
<com.android.settingslib.volume.MediaSessions.Callbacks: void onRemoteVolumeChanged(android.media.session.MediaSession.Token,int)>
<com.android.server.pm.CrossProfileAppsServiceImpl: void <init>(android.content.Context)>
<android.multiuser.UserLifecycleTests: void stopUser()>
<com.android.systemui.statusbar.notification.row.StackScrollerDecorView: long performRemoveAnimation(long,long,float,boolean,float,java.lang.Runnable,android.animation.AnimatorListenerAdapter)>
<com.android.server.notification.RankingConfig: java.util.Collection getNotificationChannelGroups(java.lang.String,int)>
<com.android.server.usb.UsbPortManager: android.hardware.usb.UsbPort[] getPorts()>
<com.android.systemui.statusbar.notification.ActionListTransformState: void transformViewFullyFrom(com.android.systemui.statusbar.notification.TransformState,float)>
<com.android.settingslib.wifi.AccessPoint: java.lang.String getKey(android.net.wifi.hotspot2.OsuProvider)>
<com.android.systemui.statusbar.notification.NotificationInterruptionStateProvider: void <init>(android.content.Context)>
<com.android.server.pm.PreferredComponent: void <init>(com.android.server.pm.PreferredComponent.Callbacks,int,android.content.ComponentName[],android.content.ComponentName,boolean)>
<com.android.server.pm.PackageManagerService: int getUidForSharedUser(java.lang.String)>
<com.android.systemui.shared.system.InputChannelCompat.InputEventDispatcher: void dispatch(android.view.InputEvent)>
<com.android.systemui.statusbar.NotificationRemoteInputManager: java.util.ArrayList getLifetimeExtenders()>
<com.android.printspooler.ui.FusedPrintersProvider: boolean onCancelLoad()>
<com.android.server.TelephonyRegistry: void notifyPhysicalChannelConfiguration(java.util.List)>
<com.android.server.locksettings.recoverablekeystore.storage.ApplicationKeyStorage: java.lang.String getGrantAlias(int,int,java.lang.String)>
<com.android.systemui.recents.views.TaskStackAnimationHelper: void startExitToHomeAnimation(boolean,com.android.systemui.recents.misc.ReferenceCountedTrigger)>
<com.android.server.pm.PackageManagerService: void registerMoveCallback(android.content.pm.IPackageMoveObserver)>
<com.android.systemui.statusbar.KeyguardAffordanceView: boolean shouldTint()>
<android.net.util.PrefixUtils: java.util.Set localPrefixesFrom(android.net.LinkProperties)>
<com.android.systemui.statusbar.RemoteInputController: void lockScrollTo(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.server.SystemService: void <init>(android.content.Context)>
<com.android.photos.BitmapRegionTileSource.FilePathBitmapSource: void <init>(java.lang.String,int)>
<com.android.systemui.statusbar.NotificationLockscreenUserManager: boolean needsSeparateWorkChallenge(int)>
<com.android.keyguard.KeyguardHostView: void dispatchDraw(android.graphics.Canvas)>
<com.android.server.usb.UsbAlsaDevice: boolean hasOutput()>
<com.android.settingslib.wifi.AccessPointPreference: com.android.settingslib.wifi.AccessPoint getAccessPoint()>
<com.android.statsd.loadtest.MemoryDataRecorder: void stopRecording(android.content.Context)>
<com.android.printservice.recommendation.util.MDNSFilteredDiscovery.PrinterFilter: boolean matchesCriteria(android.net.nsd.NsdServiceInfo)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setAmbientGoingAway(boolean)>
<com.android.server.locksettings.SyntheticPasswordManager: void destroyPasswordBasedSyntheticPassword(long,int)>
<com.android.server.statusbar.StatusBarManagerService: void onDisplayRemoved(int)>
<com.android.systemui.qs.QuickTileLayout: void addView(android.view.View,int,android.view.ViewGroup.LayoutParams)>
<com.android.server.notification.RankingHelper: void <init>(android.content.Context,com.android.server.notification.RankingHandler,com.android.server.notification.RankingConfig,com.android.server.notification.ZenModeHelper,com.android.server.notification.NotificationUsageStats,java.lang.String[])>
<com.android.server.testing.shadows.ShadowBackupDataInput: boolean readNextHeader()>
<com.android.systemui.statusbar.phone.NavigationBarEdgePanel: void adjustRectToBoundingBox(android.graphics.Rect)>
<com.android.keyguard.KeyguardPinBasedInputView: boolean onRequestFocusInDescendants(int,android.graphics.Rect)>
<com.android.systemui.qs.external.CustomTile: com.android.systemui.qs.external.CustomTile create(com.android.systemui.qs.QSTileHost,java.lang.String)>
<com.android.server.accessibility.ActionReplacingCallback: void <init>(android.view.accessibility.IAccessibilityInteractionConnectionCallback,android.view.accessibility.IAccessibilityInteractionConnection,int,int,long)>
<com.android.server.pm.dex.DexManager: com.android.server.pm.dex.DexManager.RegisterDexModuleResult registerDexModule(android.content.pm.ApplicationInfo,java.lang.String,boolean,int)>
<com.android.server.location.GnssNetworkConnectivityHandler.GnssNetworkListener: void onNetworkAvailable()>
<com.android.server.broadcastradio.hal2.BroadcastRadioService: java.util.Collection listModules()>
<com.android.keyguard.NumPadKey: void doHapticKeyClick()>
<com.android.settingslib.drawable.CircleFramedDrawable: float getScale()>
<com.android.systemui.tuner.CustomListPreference: boolean isAutoClosePreference()>
<com.android.systemui.statusbar.ScrimView: void onDraw(android.graphics.Canvas)>
<com.android.server.NativeDaemonEvent: com.android.server.NativeDaemonEvent parseRawEvent(java.lang.String,java.io.FileDescriptor[])>
<com.android.printspooler.ui.PageAdapter: void close(java.lang.Runnable)>
<com.android.mtp.MtpDocumentsProvider: java.lang.String getDeviceDocumentId(int)>
<com.android.systemui.statusbar.policy.BluetoothController: boolean isBluetoothSupported()>
<com.android.server.usb.descriptors.UsbInterfaceDescriptor: byte getAlternateSetting()>
<com.android.systemui.qs.tiles.DndTile: com.android.systemui.plugins.qs.DetailAdapter getDetailAdapter()>
<com.android.systemui.SysUiServiceProvider: java.lang.Object getComponent(android.content.Context,java.lang.Class)>
<com.android.server.biometrics.AuthenticationClient: boolean onAuthenticated(android.hardware.biometrics.BiometricAuthenticator.Identifier,boolean,java.util.ArrayList)>
<com.android.server.slice.SliceManagerService: void removePinnedSlice(android.net.Uri)>
<com.android.gallery3d.exif.ExifTag: com.android.gallery3d.exif.Rational getValueAsRational(long)>
<android.perftests.utils.StateManager: void set(java.lang.Object)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: boolean isChildInGroup()>
<com.android.server.contentsuggestions.ContentSuggestionsManagerService: void <init>(android.content.Context)>
<com.android.printspooler.ui.SelectPrinterActivity: void onDestroy()>
<com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem: void systemAudioControlOnPowerOn(int,boolean)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void drawMixed(com.android.gallery3d.glrenderer.BasicTexture,int,float,int,int,int,int)>
<com.android.server.policy.PhoneWindowManager: boolean okToAnimate()>
<com.android.systemui.SystemUISecondaryUserService: void onCreate()>
<com.android.server.pm.PackageSettingBase: void setVolumeUuid(java.lang.String)>
<com.android.server.policy.WindowManagerPolicy.WindowManagerFuncs: void rebootSafeMode(boolean)>
<javax.microedition.khronos.opengles.GL10: void glPopMatrix()>
<com.android.systemui.shared.plugins.VersionInfo: boolean hasVersionInfo()>
<com.android.server.DeviceIdleController.LocalService: void addPowerSaveTempWhitelistApp(int,java.lang.String,long,int,boolean,java.lang.String)>
<javax.obex.PasswordAuthentication: void <init>(byte[],byte[])>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: float getOpeningHeight()>
<com.android.settingslib.bluetooth.HeadsetProfile: int getSummaryResourceForDevice(android.bluetooth.BluetoothDevice)>
<com.android.server.IpSecService: void <init>(android.content.Context,com.android.server.IpSecService.IpSecServiceConfiguration)>
<com.android.systemui.pip.phone.PipMenuActivity: void onPictureInPictureModeChanged(boolean)>
<com.android.server.notification.ZenLog: void traceEffectsSuppressorChanged(java.util.List,java.util.List,long)>
<com.android.systemui.statusbar.notification.PropertyAnimator: boolean isAnimating(android.view.View,com.android.systemui.statusbar.notification.AnimatableProperty)>
<com.android.settingslib.core.instrumentation.EventLogWriter: void action(android.content.Context,int,android.util.Pair[])>
<com.android.systemui.statusbar.NotificationMediaManager: void onNotificationRemoved(java.lang.String)>
<android.media.BufferingParams.Builder: void <init>(android.media.BufferingParams)>
<com.android.server.notification.ValidateNotificationPeople: void setConfig(com.android.server.notification.RankingConfig)>
<com.android.gallery3d.exif.ExifInterface: com.android.gallery3d.exif.Rational[] getTagRationalValues(int)>
<com.android.server.audio.AudioService.VolumeController: boolean isSameBinder(android.media.IVolumeController)>
<com.android.server.display.BrightnessIdleJob: void scheduleJob(android.content.Context)>
<com.android.server.notification.NotificationRecord: boolean hasBeenVisiblyExpanded()>
<com.android.server.locksettings.recoverablekeystore.KeySyncUtils: byte[] thmEncryptRecoveryKey(java.security.PublicKey,byte[],byte[],javax.crypto.SecretKey)>
<android.net.netlink.StructInetDiagReqV2: java.lang.String toString()>
<com.android.systemui.statusbar.phone.ScrimController: void transitionTo(com.android.systemui.statusbar.phone.ScrimState,com.android.systemui.statusbar.phone.ScrimController.Callback)>
<com.android.systemui.recents.ScreenPinningRequest: void showPrompt(int,boolean)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: int getBondState()>
<javax.microedition.khronos.opengles.GL10: void glMultMatrixx(int[],int)>
<com.android.systemui.statusbar.phone.DozeScrimController: void onStateChanged(int)>
<com.android.server.display.color.ColorDisplayService.DisplayWhiteBalanceListener: void onDisplayWhiteBalanceStatusChanged(boolean)>
<com.android.server.AppStateTracker.Listener: void updateJobsForUid(int,boolean)>
<com.android.settingslib.deviceinfo.AbstractConnectivityPreferenceController: void updateConnectivity()>
<com.android.systemui.statusbar.notification.logging.NotificationLogger.ExpansionStateLogger: void <init>(com.android.systemui.UiOffloadThread)>
<com.android.settingslib.core.lifecycle.ObservableActivity: void onDestroy()>
<com.android.settingslib.media.LocalMediaManager: com.android.settingslib.media.MediaDevice getMediaDeviceById(java.util.List,java.lang.String)>
<com.android.systemui.plugins.NotificationListenerController: boolean onNotificationPosted(android.service.notification.StatusBarNotification,android.service.notification.NotificationListenerService.RankingMap)>
<com.android.systemui.statusbar.policy.ConfigurationController: void notifyThemeChanged()>
<com.android.settingslib.WirelessUtils: boolean isRadioAllowed(android.content.Context,java.lang.String)>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: int getBondState(com.android.settingslib.bluetooth.CachedBluetoothDevice)>
<com.android.keyguard.clock.DefaultClockController: void setColorPalette(boolean,int[])>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.util.List getMeteredDataDisabledPackages(android.content.ComponentName)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void onScreenTurningOn()>
<com.android.systemui.settings.ToggleSeekBar: void <init>(android.content.Context)>
<com.android.server.biometrics.BiometricUserState: java.util.ArrayList getCopy(java.util.ArrayList)>
<com.android.keyguard.KeyguardAbsKeyInputView: void onFinishInflate()>
<com.android.powermodel.RawBatteryStats.Warning: int getLineNumber()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean hasExpandingChild()>
<com.android.systemui.tuner.ClipboardView: void onDetachedFromWindow()>
<com.android.server.UiThread: com.android.server.UiThread get()>
<com.android.systemui.recents.utilities.Utilities: void addTraceEvent(java.lang.String)>
<com.android.systemui.statusbar.notification.ActionListTransformState: void recycle()>
<com.android.systemui.classifier.SpeedAnglesClassifier: void onTouchEvent(android.view.MotionEvent)>
<com.android.server.infra.ServiceNameResolver: boolean isTemporary(int)>
<com.android.systemui.shared.system.TaskStackChangeListener: void onBackPressedOnTaskRoot(android.app.ActivityManager.RunningTaskInfo)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: java.util.List getChildren()>
<com.android.settingslib.net.NetworkStatsSummaryLoader: void onReset()>
<com.android.server.pm.UserManagerService: void onShellCommand(java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ShellCallback,android.os.ResultReceiver)>
<com.android.server.contentcapture.ContentCaptureManagerInternal: void notifyActivityEvent(int,android.content.ComponentName,int)>
<android.media.MediaPlayer2: boolean setPreferredDevice(android.media.AudioDeviceInfo)>
<com.android.server.AnyMotionDetector.Vector3: com.android.server.AnyMotionDetector.Vector3 times(float)>
<com.android.systemui.statusbar.phone.KeyguardBouncer: android.view.ViewGroup getLockIconContainer()>
<com.android.server.notification.PreferencesHelper: void updateBadgingEnabled()>
<com.android.systemui.statusbar.car.UserGridRecyclerView: void onFinishInflate()>
<com.android.systemui.statusbar.phone.NavigationBarView: void setComponents(com.android.systemui.statusbar.phone.NotificationPanelView,com.android.systemui.assist.AssistManager)>
<com.android.photos.views.TiledImageView: void dispatchDraw(android.graphics.Canvas)>
<com.android.systemui.statusbar.phone.DarkIconDispatcherImpl: void applyDark(com.android.systemui.plugins.DarkIconDispatcher.DarkReceiver)>
<com.android.systemui.Prefs: int getInt(android.content.Context,java.lang.String,int)>
<com.android.systemui.statusbar.policy.KeyButtonView: boolean isClickable()>
<com.android.printspooler.renderer.IPdfEditor: void removePages(android.print.PageRange[])>
<com.android.server.audio.AudioService: boolean hasHapticChannels(android.net.Uri)>
<com.android.settingslib.bluetooth.BluetoothCallback: void onBluetoothStateChanged(int)>
<com.android.packageinstaller.television.UninstallAppProgressFragment: void onClick(android.view.View)>
<com.android.systemui.qs.tileimpl.QSTileImpl: void userSwitch(int)>
<com.android.settingslib.accounts.AuthenticatorHelper: void <init>(android.content.Context,android.os.UserHandle,com.android.settingslib.accounts.AuthenticatorHelper.OnAccountsUpdateListener)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void showAppOpsIcons(android.util.ArraySet)>
<com.android.systemui.recents.views.grid.TaskGridLayoutAlgorithm: int navigateFocus(int,int,com.android.systemui.recents.events.ui.focus.NavigateTaskViewEvent.Direction)>
<com.android.systemui.statusbar.NotificationLockscreenUserManager: boolean shouldAllowLockscreenRemoteInput()>
<com.android.keyguard.KeyguardPinBasedInputView: int getPromptReasonStringRes(int)>
<com.android.systemui.assist.ui.InvocationLightsView: com.android.systemui.assist.ui.CornerPathRenderer createCornerPathRenderer(android.content.Context)>
<com.android.server.DeviceIdleController: int[] getAppIdUserWhitelistInternal()>
<com.android.systemui.statusbar.phone.NotificationGroupManager.OnGroupChangeListener: void onGroupSuppressionChanged(com.android.systemui.statusbar.phone.NotificationGroupManager.NotificationGroup,boolean)>
<com.android.server.updates.ConfigUpdateInstallReceiver: void install(byte[],int)>
<com.android.systemui.DessertCaseView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.appops.AppOpsController.Callback: void onActiveStateChanged(int,int,java.lang.String,boolean)>
<com.android.server.content.SyncStorageEngine: com.android.server.content.SyncStorageEngine getSingleton()>
<com.android.settingslib.graph.BatteryMeterDrawableBase: int getIntrinsicWidth()>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void onStateChanged(int)>
<com.android.settingslib.widget.ActionBarShadowController: com.android.settingslib.widget.ActionBarShadowController attachToView(android.view.View,androidx.lifecycle.Lifecycle,android.view.View)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setHorizontalPanelTranslation(float)>
<com.android.server.NetworkManagementService: void setDefaultNetId(int)>
<javax.microedition.khronos.opengles.GL10: void glTexEnvfv(int,int,float[],int)>
<com.android.gallery3d.common.BitmapUtils: int computeSampleSize(int,int,int,int)>
<com.android.systemui.statusbar.phone.ContextualButtonGroup: void dump(java.io.PrintWriter)>
<com.android.gallery3d.glrenderer.GLCanvas: void drawMixed(com.android.gallery3d.glrenderer.BasicTexture,int,float,android.graphics.RectF,android.graphics.RectF)>
<com.android.systemui.statusbar.notification.NotificationDozeHelper: void fadeGrayscale(android.widget.ImageView,boolean,long)>
<com.android.server.pm.Installer: void removeIdmap(java.lang.String)>
<com.android.server.pm.PackageSetting: boolean isPrivileged()>
<com.android.systemui.tuner.CustomListPreference.CustomListPreferenceDialogFragment: void onActivityCreated(android.os.Bundle)>
<com.android.systemui.statusbar.NotificationListener: void <init>(android.content.Context)>
<com.android.systemui.statusbar.AlphaOptimizedTextView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.recents.views.TaskStackView: boolean onGenericMotionEvent(android.view.MotionEvent)>
<com.android.systemui.statusbar.phone.LockscreenWallpaper.WallpaperDrawable: int getIntrinsicWidth()>
<com.android.systemui.tuner.AutoScrollView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.colorextraction.SysuiColorExtractor: void extractWallpaperColors()>
<com.android.systemui.ForegroundServiceLifetimeExtender: boolean shouldExtendLifetimeForPendingNotification(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.server.AnimationThread: android.os.Handler getHandler()>
<com.android.systemui.statusbar.policy.ConfigurationController.ConfigurationListener: void onThemeChanged()>
<com.android.commands.hid.Event: java.lang.String getCommand()>
<com.android.settingslib.volume.Util: boolean isVoiceCapable(android.content.Context)>
<com.android.statsd.loadtest.DisplayProtoUtils: void displayEventMetricData(java.lang.StringBuilder,com.android.os.StatsLog.StatsLogReport)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetTexGenxv(int,int,java.nio.IntBuffer)>
<com.android.server.notification.PreferencesHelper: android.app.NotificationChannelGroup getNotificationChannelGroupWithChannels(java.lang.String,int,java.lang.String,boolean)>
<com.android.systemui.plugins.VolumeDialogController.State: com.android.systemui.plugins.VolumeDialogController.State copy()>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.util.List getDelegatePackages(android.content.ComponentName,java.lang.String)>
<com.android.settingslib.widget.ActionButtonsPreference: com.android.settingslib.widget.ActionButtonsPreference setButton3OnClickListener(android.view.View.OnClickListener)>
<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: boolean shouldSnapBack()>
<com.android.systemui.qs.external.TileLifecycleManager: void setTileAdded(android.content.Context,android.content.ComponentName,boolean)>
<com.android.settingslib.RestrictedLockImageSpan: void draw(android.graphics.Canvas,java.lang.CharSequence,int,int,float,int,int,int,android.graphics.Paint)>
<com.android.server.content.ContentService: java.util.List getCurrentSyncsAsUser(int)>
<android.view.autofill.AbstractAutofillPerfTestCase: void <init>(int)>
<com.android.systemui.statusbar.policy.AccessPointControllerImpl: void onAccessPointsChanged()>
<com.android.server.ConnectivityService: void factoryReset()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean canViewBeDismissed()>
<com.android.server.DropBoxManagerService: void add(android.os.DropBoxManager.Entry)>
<com.android.systemui.qs.PagedTileLayout: void onFinishInflate()>
<com.android.systemui.statusbar.policy.AccessibilityManagerWrapper: boolean isEnabled()>
<com.android.systemui.statusbar.GestureRecorder: void tag(long,java.lang.String,java.lang.String)>
<com.android.systemui.keyguard.KeyguardViewMediator: void setKeyguardEnabled(boolean)>
<com.android.systemui.globalactions.GlobalActionsDialog: void showDialog(boolean,boolean,com.android.systemui.plugins.GlobalActionsPanelPlugin)>
<com.android.systemui.statusbar.policy.SecurityControllerImpl: java.lang.String getDeviceOwnerName()>
<com.android.settingslib.development.AbstractEnableAdbPreferenceController: void resetPreference()>
<android.net.ip.IIpClientCallbacks: void onPreDhcpAction()>
<com.android.settingslib.RestrictedLockUtils.EnforcedAdmin: void <init>(android.content.ComponentName,java.lang.String,android.os.UserHandle)>
<com.android.systemui.SystemUIFactory: com.android.systemui.dock.DockManager provideDockManager(android.content.Context)>
<com.android.server.utils.FlagNamespaceUtils: void addToKnownResetNamespaces(java.util.List)>
<com.android.server.restrictions.RestrictionsManagerService: void onStart()>
<com.android.packageinstaller.wear.WearPackageArgs: boolean checkPerms(android.os.Bundle)>
<com.android.server.LooperStatsService.Lifecycle: void <init>(android.content.Context)>
<com.android.printspooler.util.ApprovedPrintServices: java.util.Set getApprovedServices()>
<com.android.systemui.recents.views.grid.TaskGridLayoutAlgorithm: void setSystemInsets(android.graphics.Rect)>
<com.android.systemui.statusbar.policy.KeyguardMonitor: void notifyKeyguardGoingAway(boolean)>
<com.android.printspooler.widget.PreviewPageFrame: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.android.server.IpSecService: void deleteTunnelInterface(int,java.lang.String)>
<com.android.server.RescueParty: void noteAppCrash(android.content.Context,int)>
<com.android.systemui.assist.AssistManager: void launchVoiceAssistFromKeyguard()>
<com.android.packageinstaller.PackageUtil: android.view.View initSnippetForInstalledApp(android.content.Context,android.content.pm.ApplicationInfo,android.view.View)>
<com.android.systemui.statusbar.policy.KeyButtonDrawable: void setDarkIntensity(float)>
<com.android.systemui.statusbar.StatusBarMobileView: void setVisibleState(int,boolean)>
<android.net.IpMemoryStoreClient: void retrieveNetworkAttributes(java.lang.String,android.net.ipmemorystore.OnNetworkAttributesRetrievedListener)>
<com.android.systemui.MultiListLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.shell.BugreportStorageProvider: android.database.Cursor queryChildDocuments(java.lang.String,java.lang.String[],java.lang.String)>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationHeaderViewWrapper: android.view.NotificationHeaderView getNotificationHeader()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean isBlockingHelperShowing()>
<javax.obex.ServerOperation: long getLength()>
<com.android.systemui.recents.RecentsImpl: void splitPrimaryTask(int,int,android.graphics.Rect)>
<com.android.systemui.statusbar.policy.DeviceProvisionedController.DeviceProvisionedListener: void onUserSetupChanged()>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: boolean setActive()>
<com.android.systemui.BatteryMeterView: void useWallpaperTextColor(boolean)>
<com.android.systemui.globalactions.GlobalActionsComponent: void shutdown()>
<android.media.Media2Utils: void storeCookies(java.util.List)>
<com.android.systemui.keyguard.KeyguardSliceProvider: void registerClockUpdate()>
<com.google.android.startop.iorap.AppLaunchEvent.IntentProtoParcelable: android.content.Intent create(android.os.Parcel)>
<com.android.systemui.SwipeHelper: void invalidateGlobalRegion(android.view.View,android.graphics.RectF)>
<com.android.server.pm.InstantAppResolver: void doInstantAppResolutionPhaseTwo(android.content.Context,com.android.server.pm.InstantAppResolverConnection,android.content.pm.InstantAppRequest,android.content.pm.ActivityInfo,android.os.Handler)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void hide(long,long)>
<com.android.preload.actions.ClearTableAction: void actionPerformed(java.awt.event.ActionEvent)>
<com.android.systemui.statusbar.GestureRecorder.Gesture.TagRecord: void <init>(long,java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setDismissAllInProgress(boolean)>
<com.android.systemui.tuner.TunerService: int getValue(java.lang.String,int)>
<com.android.server.biometrics.fingerprint.FingerprintService: void updateActiveGroup(int,java.lang.String)>
<lockedregioncodeinjection.Utils: java.util.List getTargetsFromLegacyJackConfig(java.lang.String,java.lang.String,java.lang.String)>
<com.android.server.usb.descriptors.report.TextReportCanvas: void closeList()>
<com.android.simappdialog.InstallCarrierAppActivity: void onClick(android.view.View)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void clearApplicationUserData(android.content.ComponentName,java.lang.String,android.content.pm.IPackageDataObserver)>
<com.android.systemui.fragments.FragmentService: void removeAndDestroy(android.view.View)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexEnvfv(int,int,float[],int)>
<com.android.systemui.globalactions.GlobalActionsLayout: void addToSeparatedView(android.view.View,boolean)>
<com.android.settingslib.RestrictedSwitchPreference: void <init>(android.content.Context)>
<com.android.keyguard.KeyguardSecurityCallback: void onCancelClicked()>
<com.android.systemui.plugins.VolumeDialogController.Callbacks: void onShowSafetyWarning(int)>
<com.android.server.audio.AudioService: int getFocusRampTimeMs(int,android.media.AudioAttributes)>
<com.android.systemui.recents.views.grid.GridTaskView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.statusbar.phone.KeyguardBouncer: void showMessage(java.lang.String,android.content.res.ColorStateList)>
<com.android.systemui.statusbar.StatusBarIconView: boolean hasOverlappingRendering()>
<com.android.server.policy.WindowManagerPolicy: void onKeyguardOccludedChangedLw(boolean)>
<com.android.systemui.ScreenDecorations.DisplayCutoutView: void setRotation(int)>
<com.android.systemui.bubbles.BubbleView: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.StatusBarWindowController: void onThemeChanged()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setFinishScrollingCallback(java.lang.Runnable)>
<com.android.systemui.shared.system.ActivityManagerWrapper: void removeAllRecentTasks()>
<android.net.ip.RouterAdvertisementDaemon: boolean start()>
<android.media.MediaSession2Service: java.util.List getSessions()>
<com.android.systemui.classifier.EndPointLengthClassifier: java.lang.String getTag()>
<android.net.INetworkMonitorCallbacks: void showProvisioningNotification(java.lang.String,java.lang.String)>
<com.android.systemui.analytics.SensorLoggerSession: void addPhoneEvent(int,long)>
<com.android.settingslib.bluetooth.CachedBluetoothDeviceManager: void onBluetoothStateChanged(int)>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: void onPanelFullyOpened()>
<com.android.server.accessibility.AbstractAccessibilityServiceConnection.SystemSupport: com.android.server.accessibility.AccessibilityManagerService.RemoteAccessibilityConnection getConnectionLocked(int)>
<com.android.printspooler.model.RemotePrintDocument: void writeContent(android.content.ContentResolver,android.net.Uri)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setScreenCaptureDisabled(android.content.ComponentName,boolean)>
<com.android.localtransport.LocalTransport: int performBackup(android.content.pm.PackageInfo,android.os.ParcelFileDescriptor)>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationHeaderViewWrapper: void updateTransformedTypes()>
<com.android.settingslib.fuelgauge.PowerWhitelistBackend: boolean isSysWhitelistedExceptIdle(java.lang.String[])>
<com.android.systemui.statusbar.policy.BrightnessMirrorController: android.view.View getMirror()>
<com.android.server.locksettings.SyntheticPasswordCrypto: byte[] decrypt(byte[],byte[],byte[])>
<com.android.server.notification.NotificationManagerService.CancelNotificationRunnable: void run()>
<com.android.server.notification.NotificationManagerService.SnoozeNotificationRunnable: void run()>
<com.android.settingslib.bluetooth.LocalBluetoothProfile: int getConnectionStatus(android.bluetooth.BluetoothDevice)>
<com.android.settingslib.accounts.AuthenticatorHelper: android.accounts.AuthenticatorDescription getAccountTypeDescription(java.lang.String)>
<com.android.systemui.statusbar.CommandQueue: void removeCallback(com.android.systemui.statusbar.CommandQueue.Callbacks)>
<com.android.server.policy.PhoneWindowManager: void exitKeyguardSecurely(com.android.server.policy.WindowManagerPolicy.OnKeyguardExitResult)>
<com.android.server.accounts.IAccountAuthenticatorCache: android.content.pm.RegisteredServicesCache.ServiceInfo getServiceInfo(android.accounts.AuthenticatorDescription,int)>
<com.android.systemui.statusbar.AlphaOptimizedTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.hdmi.SelectRequestBuffer.SelectRequest: com.android.server.hdmi.HdmiCecLocalDeviceTv tv()>
<com.android.systemui.ActivityStarterDelegate: void startActivity(android.content.Intent,boolean,boolean,int)>
<com.android.gallery3d.exif.ExifTag: boolean setValue(byte[])>
<android.os.ParcelPerfTest: void timeReadLong()>
<com.android.settingslib.drawable.UserIconDrawable: void <init>(int)>
<javax.obex.HeaderSet: void setHeader(int,java.lang.Object)>
<com.android.server.biometrics.BiometricServiceBase: int getLockoutMode()>
<com.android.photos.views.BlockingGLTextureView: void setRenderer(android.opengl.GLSurfaceView.Renderer)>
<com.android.keyguard.KeyguardSecurityContainer: void dismiss(boolean,int)>
<com.android.server.policy.WindowManagerPolicy.WindowState: android.graphics.Rect getGivenVisibleInsetsLw()>
<com.android.keyguard.clock.DefaultClockController: boolean shouldShowStatusArea()>
<com.android.server.accounts.AccountManagerService: boolean someUserHasAccount(android.accounts.Account)>
<com.android.settingslib.location.SettingsInjector.Setting: void startService()>
<com.android.server.infra.AbstractPerUserSystemService: void removeSelfFromCacheLocked()>
<com.android.systemui.qs.tiles.ColorInversionTile: java.lang.CharSequence getTileLabel()>
<com.android.systemui.statusbar.notification.row.NotificationGuts: void setClipTopAmount(int)>
<com.android.powermodel.ActivityReport: com.google.common.collect.ImmutableList getRegularApps()>
<javax.obex.ServerSession: void sendResponse(int,byte[])>
<com.android.systemui.util.wakelock.WakeLock: com.android.systemui.util.wakelock.WakeLock createPartial(android.content.Context,java.lang.String,long)>
<com.android.systemui.pip.phone.PipTouchHandler: void onActivityPinned()>
<com.android.systemui.statusbar.phone.CollapsedStatusBarFragment: void initNotificationIconArea(com.android.systemui.statusbar.phone.NotificationIconAreaController)>
<com.android.photos.views.TiledImageRenderer.TileSource: int getRotation()>
<com.android.systemui.statusbar.phone.StatusBarIconController.DarkIconManager: void onRemoveIcon(int)>
<com.android.systemui.qs.external.TileLifecycleManager: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>
<com.android.systemui.tuner.ClockPreference: boolean persistString(java.lang.String)>
<com.android.systemui.statusbar.StatusBarIconView: android.graphics.drawable.Drawable getIcon(android.content.Context,com.android.internal.statusbar.StatusBarIcon)>
<com.android.systemui.doze.DozeLog: void traceKeyguardBouncerChanged(boolean)>
<com.android.server.locksettings.LockSettingsStrongAuth: void reportSuccessfulStrongAuthUnlock(int)>
<com.android.uiautomator.core.UiDevice: int getDisplayHeight()>
<com.android.carrierdefaultapp.CarrierActionUtils: void applyCarrierAction(int,android.content.Intent,android.content.Context)>
<com.android.server.policy.PermissionPolicyService: void onStart()>
<com.android.systemui.statusbar.NotificationPresenter: void updateNotificationViews()>
<com.android.server.usb.descriptors.UsbEndpointDescriptor: int getAttributes()>
<com.android.keyguard.KeyguardSecurityViewFlipper.LayoutParams: void <init>(com.android.keyguard.KeyguardSecurityViewFlipper.LayoutParams)>
<com.android.server.pm.Settings: boolean canPropagatePermissionToInstantApp(java.lang.String)>
<com.android.keyguard.PasswordTextView: void onDraw(android.graphics.Canvas)>
<com.android.systemui.statusbar.NotificationShelf: boolean needsOutline()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setLaunchTransitionEndRunnable(java.lang.Runnable)>
<com.android.systemui.statusbar.phone.ButtonInterface: void abortCurrentGesture()>
<com.android.server.audio.AudioService: int setHdmiSystemAudioSupported(boolean)>
<com.android.systemui.statusbar.notification.stack.StackScrollAlgorithm: float updateChild(int,com.android.systemui.statusbar.notification.stack.StackScrollAlgorithm.StackScrollAlgorithmState,com.android.systemui.statusbar.notification.stack.AmbientState,float,boolean)>
<com.android.server.testharness.TestHarnessModeService: void onBootPhase(int)>
<com.android.systemui.statusbar.AlphaOptimizedView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.statusbar.car.UserGridRecyclerView.UserAdapter: void <init>(android.content.Context,java.util.List)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: int getContentHeight()>
<com.android.systemui.statusbar.phone.LockIcon: void onDensityOrFontScaleChanged()>
<com.android.keyguard.clock.ClockLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.car.hvac.TemperatureTextView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.policy.WindowManagerPolicy.WindowState: boolean getGivenInsetsPendingLw()>
<com.android.systemui.shared.system.TransactionCompat: com.android.systemui.shared.system.TransactionCompat deferTransactionUntil(com.android.systemui.shared.system.SurfaceControlCompat,android.view.Surface,long)>
<com.android.systemui.qs.TouchAnimator.Builder: com.android.systemui.qs.TouchAnimator.Builder setInterpolator(android.view.animation.Interpolator)>
<android.text.TextViewSetTextMeasurePerfTest: void <init>(java.lang.String,int,android.text.NonEditableTextGenerator.TextType,boolean)>
<com.android.systemui.bubbles.BubbleData: void notificationEntryUpdated(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onAttachedToWindow()>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb: long setUserSerialNumber(int,long)>
<com.android.systemui.statusbar.phone.FloatingRotationButton: void setOnClickListener(android.view.View.OnClickListener)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setPrivateLayout(com.android.systemui.statusbar.notification.row.NotificationContentView)>
<com.android.systemui.statusbar.phone.KeyguardClockPositionAlgorithm: void run(com.android.systemui.statusbar.phone.KeyguardClockPositionAlgorithm.Result)>
<com.android.server.attention.AttentionManagerService: boolean isServiceConfigured(android.content.Context)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void onScreenTurnedOn()>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: void applyBackgroundRoundness(float,float)>
<com.android.systemui.statusbar.phone.StatusBarNotificationPresenter: void onActivated()>
<com.android.server.usb.UsbPortManager: void disconnectSimulatedPort(java.lang.String,com.android.internal.util.IndentingPrintWriter)>
<com.android.systemui.volume.SystemUIInterpolators.Callback: void onAnimatingChanged(boolean)>
<com.android.printspooler.util.MediaSizeUtils.MediaSizeComparator: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.printspooler.model.PrintSpoolerService: java.util.List getPrintJobInfos(android.content.ComponentName,int,int)>
<com.android.server.SystemService: void onStart()>
<com.android.systemui.statusbar.notification.row.ExpandableView: void setActualHeight(int)>
<com.android.preload.ui.SequenceUI: java.lang.Object showChoiceDialog(java.lang.String,java.lang.String,java.lang.Object[])>
<com.android.server.pm.permission.BasePermission: boolean isPre23()>
<com.android.systemui.statusbar.policy.HeadsUpUtil: void setIsClickedHeadsUpNotification(android.view.View,boolean)>
<com.android.systemui.biometrics.FaceDialogView: int getIconDescriptionResourceId()>
<com.android.systemui.statusbar.phone.StatusBarRemoteInputCallback: void <init>(android.content.Context,com.android.systemui.statusbar.phone.NotificationGroupManager)>
<com.android.server.accessibility.AccessibilityManagerService.SecurityPolicy: boolean computePartialInteractiveRegionForWindowLocked(int,android.graphics.Region)>
<android.os.ParcelArrayPerfTest: void timeCreateByteArray()>
<com.android.systemui.recents.RecentsImpl: android.app.ActivityOptions getHomeTransitionActivityOptions()>
<com.android.settingslib.RestrictedLockUtilsInternal: com.android.settingslib.RestrictedLockUtils.EnforcedAdmin checkIfMaximumTimeToLockIsSet(android.content.Context)>
<com.android.settingslib.widget.AppEntityInfo.Builder: com.android.settingslib.widget.AppEntityInfo.Builder setIcon(android.graphics.drawable.Drawable)>
<com.android.systemui.qs.tiles.UiModeNightTile: void <init>(com.android.systemui.qs.QSHost,com.android.systemui.statusbar.policy.ConfigurationController,com.android.systemui.statusbar.policy.BatteryController)>
<com.android.commands.sm.Sm: void runIsolatedStorage()>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationHeaderViewWrapper: void transformTo(com.android.systemui.statusbar.TransformableView,float)>
<com.android.server.location.GnssMeasurementsProvider: com.android.server.location.RemoteListenerHelper.ListenerOperation getHandlerOperation(int)>
<javax.obex.BaseStream: void ensureOpen()>
<com.android.settingslib.bluetooth.HidDeviceProfile: int getNameResource(android.bluetooth.BluetoothDevice)>
<com.android.systemui.qs.tiles.DndTile: void showDetail(boolean)>
<com.android.server.notification.NotificationManagerService.NotificationListeners: void setOnNotificationPostedTrimLocked(com.android.server.notification.ManagedServices.ManagedServiceInfo,int)>
<com.android.server.NetworkScoreService.ScoringServiceConnection: void bind(android.content.Context)>
<com.android.server.search.Searchables: android.app.SearchableInfo getSearchableInfo(android.content.ComponentName)>
<com.android.server.content.SyncLogger: void log(java.lang.Object[])>
<com.android.systemui.statusbar.phone.NotificationGroupManager: boolean isGroupExpanded(android.service.notification.StatusBarNotification)>
<com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer: int getPositionInLinearLayout(android.view.View)>
<com.android.systemui.qs.QSPanel.QSTileLayout: void removeTile(com.android.systemui.qs.QSPanel.TileRecord)>
<com.android.systemui.statusbar.phone.BarTransitions.BarBackgroundDrawable: int getOpacity()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: android.util.ArraySet getUniqueChannels()>
<com.android.uiautomator.core.UiObject: android.graphics.Rect getVisibleBounds()>
<com.android.settingslib.Utils: boolean isAudioModeOngoingCall(android.content.Context)>
<com.android.systemui.statusbar.car.CarStatusBar: void onDensityOrFontScaleChanged()>
<com.android.server.utils.FlagNamespaceUtils: void addToKnownResetNamespaces(java.lang.String)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void setDozing(boolean,boolean)>
<com.android.systemui.statusbar.KeyboardShortcutKeysLayout.LayoutParams: void <init>(int,int,android.view.ViewGroup.LayoutParams)>
<com.android.settingslib.core.instrumentation.SharedPreferencesLogger.EditorLogger: android.content.SharedPreferences.Editor putLong(java.lang.String,long)>
<com.android.server.pm.Installer: boolean mergeProfiles(int,java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer: void setIsLowPriority(boolean)>
<com.android.server.locksettings.recoverablekeystore.RecoverableKeyGenerator: byte[] generateAndStoreKey(com.android.server.locksettings.recoverablekeystore.PlatformEncryptionKey,int,int,java.lang.String,byte[])>
<com.android.systemui.tuner.CustomListPreference: android.app.Dialog onDialogCreated(android.app.DialogFragment,android.app.Dialog)>
<com.android.systemui.recents.misc.SystemServicesProxy: void requestKeyboardShortcuts(android.content.Context,android.view.WindowManager.KeyboardShortcutsReceiver,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getPasswordMinimumNumeric(android.content.ComponentName,int,boolean)>
<com.android.server.locksettings.recoverablekeystore.PlatformEncryptionKey: int getGenerationId()>
<android.media.MediaPlayer2: boolean isLooping()>
<com.android.systemui.statusbar.phone.ScrimController: void scheduleUpdate()>
<com.android.systemui.statusbar.notification.ActivityLaunchAnimator.Callback: boolean areLaunchAnimationsEnabled()>
<com.android.keyguard.KeyguardHostView: void showErrorMessage(java.lang.CharSequence)>
<com.android.server.audio.AudioService: int getRingerModeInternal()>
<com.android.systemui.globalactions.GlobalActionsDialog.MyAdapter: void onClickItem(int)>
<com.android.systemui.statusbar.notification.row.NotificationGutsManager.OnSettingsClickListener: void onSettingsClick(java.lang.String)>
<com.android.location.provider.ProviderRequestUnbundled: boolean getReportLocation()>
<com.android.systemui.util.Utils: void safeForeach(java.util.List,java.util.function.Consumer)>
<com.android.server.location.RemoteListenerHelper: void unregisterFromService()>
<com.android.server.policy.SoftRestrictedPermissionPolicy: int resolveAppOp()>
<com.android.server.notification.NotificationManagerService: void unhideNotificationsForPackages(java.lang.String[])>
<com.android.systemui.statusbar.policy.BrightnessMirrorController: void removeCallback(com.android.systemui.statusbar.policy.BrightnessMirrorController.BrightnessMirrorListener)>
<com.android.systemui.statusbar.phone.StatusBarIconController.TintedIconManager: void setTint(int)>
<com.android.statementservice.retriever.AbstractStatementRetriever: com.android.statementservice.retriever.AbstractStatementRetriever.Result retrieveStatements(com.android.statementservice.retriever.AbstractAsset)>
<android.net.netlink.RtNetlinkNeighborMessage: int getProbes()>
<android.database.CursorWindowPerfTest: void setup()>
<com.android.systemui.recents.views.TaskView: void showActionButton(boolean,int)>
<com.android.server.accounts.AccountManagerService: void setAuthToken(android.accounts.Account,java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.car.hvac.HvacController: void <init>(android.content.Context)>
<com.android.commands.bmgr.Bmgr: void main(java.lang.String[])>
<com.android.systemui.recents.views.TaskViewThumbnail: void setOverlayHeaderOnThumbnailActionBar(boolean)>
<com.android.settingslib.drawable.UserIconDrawable: com.android.settingslib.drawable.UserIconDrawable bake()>
<android.media.Session2Command: java.lang.String getCustomAction()>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void showPinningEnterExitToast(boolean)>
<android.net.shared.ProvisioningConfiguration: android.net.ProvisioningConfigurationParcelable toStableParcelable()>
<com.android.printspooler.ui.PrinterRegistry: java.util.List getPrinters()>
<com.android.systemui.statusbar.phone.NotificationsQuickSettingsContainer: void setCustomizerAnimating(boolean)>
<com.android.server.autofill.ui.CustomScrollView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.usb.descriptors.UsbACInterfaceUnparsed: void <init>(int,byte,byte,int)>
<com.android.systemui.statusbar.policy.KeyguardMonitorImpl: void removeCallback(com.android.systemui.statusbar.policy.KeyguardMonitor.Callback)>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationMediaTemplateViewWrapper: void <init>(android.content.Context,android.view.View,com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<com.android.settingslib.wifi.AccessPointPreference: void onLevelChanged()>
<com.android.systemui.colorextraction.SysuiColorExtractor: void <init>(android.content.Context,com.android.systemui.statusbar.policy.ConfigurationController)>
<com.android.server.content.SyncManager: boolean readyToSync(int)>
<com.android.settingslib.applications.ServiceListing.Builder: void <init>(android.content.Context)>
<com.android.settingslib.bluetooth.CachedBluetoothDeviceManager: void clearNonBondedDevices()>
<com.android.systemui.volume.VolumeDialogImpl: void show(int)>
<com.android.systemui.qs.SlashDrawable: void draw(android.graphics.Canvas)>
<com.android.systemui.statusbar.phone.StatusBarIconController.IconManager: void onIconAdded(int,java.lang.String,boolean,com.android.systemui.statusbar.phone.StatusBarIconHolder)>
<com.android.systemui.assist.ui.DefaultUiController: void processBundle(android.os.Bundle)>
<com.android.server.pm.dex.DexManager: com.android.server.pm.dex.PackageDexUsage.PackageUseInfo getPackageUseInfoOrDefault(java.lang.String)>
<com.android.server.notification.ZenModeHelper: boolean removeAutomaticZenRule(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.phone.DozeParameters: boolean doubleTapReportsTouchCoordinates()>
<com.android.server.policy.BurnInProtectionHelper: void onDisplayRemoved(int)>
<com.android.server.hdmi.DeviceDiscoveryAction.DeviceDiscoveryCallback: void onDeviceDiscoveryDone(java.util.List)>
<com.android.server.pm.SharedUserSetting: void fixSeInfoLocked()>
<android.net.dhcp.DhcpServingParamsParcelExt: android.net.dhcp.DhcpServingParamsParcelExt setMetered(boolean)>
<com.android.server.notification.ManagedServices: java.lang.String getRequiredPermission()>
<android.net.TcpKeepalivePacketData: boolean equals(java.lang.Object)>
<com.android.systemui.SwipeHelper: void prepareDismissAnimation(android.view.View,android.animation.Animator)>
<com.android.systemui.statusbar.phone.NavBarTintController: void onViewDetachedFromWindow(android.view.View)>
<com.android.server.pm.permission.BasePermission: boolean isIncidentReportApprover()>
<com.android.systemui.qs.tiles.NfcTile: void handleClick()>
<com.android.keyguard.PasswordTextView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.android.systemui.statusbar.policy.ExtensionController.ExtensionBuilder: com.android.systemui.statusbar.policy.ExtensionController.ExtensionBuilder withTunerFactory(com.android.systemui.statusbar.policy.ExtensionController.TunerFactory)>
<com.android.systemui.SwipeHelper: void prepareSnapBackAnimation(android.view.View,android.animation.Animator)>
<com.android.systemui.statusbar.StatusBarIconView: void onDraw(android.graphics.Canvas)>
<com.android.systemui.DessertCaseView: void start()>
<com.android.server.AlarmManagerInternal.InFlightListener: void broadcastAlarmPending(int)>
<com.android.server.notification.NotificationRecord: void setPeopleOverride(java.util.ArrayList)>
<android.app.PendingIntentPerfTest: void createWithCancelFlag()>
<com.android.systemui.statusbar.notification.row.ExpandableView: boolean isChangingPosition()>
<com.android.settingslib.core.lifecycle.ObservablePreferenceFragment: void onCreate(android.os.Bundle)>
<javax.obex.ServerRequestHandler: void onDisconnect(javax.obex.HeaderSet,javax.obex.HeaderSet)>
<com.android.systemui.statusbar.StatusBarIconView: void setDark(boolean,boolean,long)>
<com.android.systemui.statusbar.notification.row.ExpandableOutlineView: void setDistanceToTopRoundness(float)>
<com.android.preload.actions.AbstractThreadedAction: void <init>(java.lang.String)>
<com.android.server.usb.descriptors.Usb20ACHeader: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>
<com.android.systemui.statusbar.notification.row.NotificationContentInflater: void setUsesIncreasedHeight(boolean)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean setPermittedAccessibilityServices(android.content.ComponentName,java.util.List)>
<com.android.server.tv.TvInputHal.Callback: void onDeviceUnavailable(int)>
<android.net.util.PrefixUtils: android.net.IpPrefix asIpPrefix(android.net.LinkAddress)>
<com.android.statsd.loadtest.DisplayProtoUtils: void displayDurationMetricData(java.lang.StringBuilder,com.android.os.StatsLog.StatsLogReport)>
<com.android.packageinstaller.television.ErrorFragment: void onGuidedActionClicked(androidx.leanback.widget.GuidedAction)>
<com.android.server.audio.AudioService: void playerEvent(int,int)>
<com.android.server.accessibility.MagnificationController: void getMagnificationRegion(int,android.graphics.Region)>
<com.android.server.policy.WindowManagerPolicy.WindowManagerFuncs: void shutdown(boolean)>
<com.android.server.accessibility.KeyEventDispatcher.KeyEventFilter: boolean onKeyEvent(android.view.KeyEvent,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setPasswordMinimumLetters(android.content.ComponentName,int,boolean)>
<com.android.gallery3d.common.Utils: java.lang.String ensureNotNull(java.lang.String)>
<com.android.systemui.statusbar.SysuiStatusBarStateController: void setLeaveOpenOnKeyguardHide(boolean)>
<com.android.systemui.statusbar.car.ConnectedDeviceSignalController: void startListening()>
<com.android.systemui.qs.QSDetail: void setupDetailFooter(com.android.systemui.plugins.qs.DetailAdapter)>
<com.android.settingslib.net.DataUsageController: void <init>(android.content.Context)>
<com.android.systemui.plugins.qs.QSTile: void longClick()>
<com.android.systemui.bubbles.animation.ExpandedAnimationController: void prepareForBubbleDrag(android.view.View)>
<com.android.systemui.stackdivider.Divider: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.server.tv.UinputBridge: void sendKeyUp(android.os.IBinder,int)>
<com.android.settingslib.applications.ApplicationsState.Session: void setSessionFlags(int)>
<com.android.settingslib.bluetooth.MapClientProfile: int getNameResource(android.bluetooth.BluetoothDevice)>
<com.android.server.statusbar.StatusBarManagerInternal: void appTransitionStarting(int,long,long)>
<com.android.systemui.classifier.HumanInteractionClassifier: void onSensorChanged(android.hardware.SensorEvent)>
<com.android.systemui.egg.MLand: boolean onGenericMotionEvent(android.view.MotionEvent)>
<com.android.systemui.statusbar.policy.DeadZone: void setFlashOnTouchCapture(boolean)>
<com.android.server.locksettings.LockSettingsService: long getLong(java.lang.String,long,int)>
<com.android.server.pm.PackageManagerException: com.android.server.pm.PackageManagerException from(android.content.pm.PackageParser.PackageParserException)>
<com.android.systemui.statusbar.notification.row.ExpandableView: int getExtraBottomPadding()>
<com.android.server.content.SyncManager: void cancelActiveSync(com.android.server.content.SyncStorageEngine.EndPoint,android.os.Bundle,java.lang.String)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void launchCamera(boolean,int)>
<android.media.MediaSession2.ControllerInfo: boolean equals(java.lang.Object)>
<com.android.systemui.statusbar.policy.ExtensionControllerImpl: com.android.systemui.statusbar.policy.ExtensionControllerImpl.ExtensionBuilder newExtension(java.lang.Class)>
<com.android.server.voiceinteraction.DatabaseHelper: boolean updateKeyphraseSoundModel(android.hardware.soundtrigger.SoundTrigger.KeyphraseSoundModel)>
<com.android.server.pm.Installer: boolean compileLayouts(java.lang.String,java.lang.String,java.lang.String,int)>
<com.android.systemui.statusbar.NotificationShelf: void onDetachedFromWindow()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean shouldRefocusOnDismiss()>
<com.android.systemui.statusbar.phone.ButtonDispatcher: void setAlpha(float,boolean)>
<com.android.systemui.statusbar.notification.row.ExpandableView: boolean shouldClipToActualHeight()>
<com.android.systemui.statusbar.phone.NotificationsQuickSettingsContainer: void onAttachedToWindow()>
<com.android.server.biometrics.face.FaceService: java.util.List getEnrolledTemplates(int)>
<com.android.systemui.statusbar.phone.NotificationGroupManager: void onEntryUpdated(com.android.systemui.statusbar.notification.collection.NotificationEntry,android.service.notification.StatusBarNotification)>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationTemplateViewWrapper: void updateTransformedTypes()>
<com.android.server.clipboard.ClipboardService: void onCleanupUser(int)>
<android.multiuser.BenchmarkRunner: android.os.Bundle getStatsToReport()>
<com.android.systemui.statusbar.phone.NavigationBarInflaterView: void onLikelyDefaultLayoutChange()>
<com.android.systemui.globalactions.GlobalActionsGridLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.phone.ContextualButtonGroup: com.android.systemui.statusbar.phone.ContextualButton getContextButton(int)>
<com.example.android.networkusage.SettingsActivity: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>
<android.view.textclassifier.TextClassificationManagerPerfTest: void testGetTextClassifier_systemTextClassifierEnabled()>
<com.android.server.usb.descriptors.UsbMSMidiInputJack: void report(com.android.server.usb.descriptors.report.ReportCanvas)>
<com.android.systemui.qs.QuickStatusBarHeader: void setExpanded(boolean)>
<com.android.server.notification.ScheduleConditionProvider: void attachBase(android.content.Context)>
<com.android.systemui.qs.tiles.NfcTile: void handleSecondaryClick()>
<com.android.systemui.statusbar.car.CarFacetButtonController: void removeAll()>
<com.android.server.TelephonyRegistry: void listen(java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean)>
<android.net.netlink.ConntrackMessage: void pack(java.nio.ByteBuffer)>
<com.android.systemui.bubbles.animation.PhysicsAnimationLayout: void cancelAnimationsOnView(android.view.View)>
<com.android.systemui.statusbar.car.ConnectedDeviceSignalController: void <init>(android.content.Context,android.view.View)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setTrackingHeadsUp(com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<com.android.server.NetworkManagementService: void removeRoute(int,android.net.RouteInfo)>
<com.android.systemui.recents.model.TaskKeyStrongCache: void removeCacheEntry(int)>
<com.android.systemui.statusbar.phone.StatusBar: android.view.View.OnTouchListener getStatusBarWindowTouchListener()>
<com.android.settingslib.bluetooth.HidProfile: int getHidClassDrawable(android.bluetooth.BluetoothClass)>
<com.android.settingslib.wifi.AccessPoint: boolean isActive()>
<com.android.systemui.ActivityStarterDelegate: void postStartActivityDismissingKeyguard(android.content.Intent,int)>
<com.android.photos.views.TiledImageView: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.qs.QSFooterImpl: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.bubbles.BubbleView: void onFinishInflate()>
<com.android.preload.DeviceUtils: com.android.ddmlib.IDevice[] findDevices(int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onAffordanceLaunchEnded()>
<com.android.server.biometrics.ClientMonitor: void vibrateError()>
<com.android.server.pm.UserManagerService: long getUserUnlockRealtime()>
<com.android.settingslib.deviceinfo.AbstractBluetoothAddressPreferenceController: void <init>(android.content.Context,com.android.settingslib.core.lifecycle.Lifecycle)>
<com.android.systemui.qs.tiles.WorkModeTile: void handleClick()>
<com.android.server.pm.UserManagerService.LifeCycle: void onStartUser(int)>
<com.android.server.pm.permission.PermissionsState.PermissionState: boolean isGranted()>
<com.android.server.pm.permission.PermissionsState: int grantInstallPermission(com.android.server.pm.permission.BasePermission)>
<com.android.server.pm.PackageInstallerService: java.lang.String allocateExternalStageCidLegacy()>
<com.android.systemui.statusbar.notification.row.NotificationBlockingHelperManager: void setNotificationShadeExpanded(float)>
<com.android.systemui.statusbar.policy.SecurityControllerImpl: void onUserSwitched(int)>
<android.media.DataSourceDesc: long getStartPosition()>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: boolean hasKeyguard()>
<com.android.systemui.statusbar.notification.ActivityLaunchAnimator.ExpandAnimationParameters: float getProgress(long,long)>
<com.android.media.remotedisplay.RemoteDisplay: void setName(java.lang.String)>
<android.net.INetworkMonitorCallbacks: void notifyPrivateDnsConfigResolved(android.net.PrivateDnsConfigParcel)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: android.view.View getChildAfterViewWhenDismissed()>
<android.multiuser.BenchmarkResultsReporter: void <init>(android.multiuser.BenchmarkRunner)>
<com.android.gallery3d.glrenderer.UploadedTexture: void setIsUploading(boolean)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: int getMaxHeight()>
<com.android.packageinstaller.InstallInstalling: void onDestroy()>
<com.android.systemui.statusbar.phone.StatusBarWindowView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer: boolean isUserLocked()>
<com.android.settingslib.bluetooth.CachedBluetoothDevice.Callback: void onDeviceAttributesChanged()>
<com.android.server.twilight.TwilightService: void onProviderDisabled(java.lang.String)>
<com.android.settingslib.bluetooth.CachedBluetoothDeviceManager: java.lang.String getName(android.bluetooth.BluetoothDevice)>
<com.android.systemui.qs.car.CarStatusBarHeader: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.location.provider.LocationProviderBase: android.os.IBinder getBinder()>
<com.android.uiautomator.core.UiAutomatorBridge: void waitForIdle(long)>
<com.android.systemui.tuner.ClipboardView: boolean onDragEvent(android.view.DragEvent)>
<com.android.systemui.statusbar.notification.row.FooterViewButton: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.recents.events.ui.StackViewScrolledEvent: void updateY(int)>
<com.android.server.pm.permission.BasePermission: boolean readLPw(java.util.Map,org.xmlpull.v1.XmlPullParser)>
<com.android.systemui.statusbar.phone.StatusBar: boolean isKeyguardShowing()>
<android.os.SharedPreferencesTest: void timeCachedGetSharedPreferences()>
<com.android.settingslib.applications.PermissionsSummaryHelper.PermissionsResultCallback: void onPermissionSummaryResult(int,int,int,java.util.List)>
<com.android.uiautomator.core.UiDevice: boolean pressDPadLeft()>
<com.android.systemui.qs.external.TileServices: void recalculateBindAllowance()>
<com.android.keyguard.KeyguardPatternView: void showUsabilityHint()>
<com.android.server.statusbar.StatusBarManagerService: void <init>(android.content.Context,com.android.server.wm.WindowManagerService)>
<com.android.systemui.recents.RecentsActivity: java.lang.Object onRetainNonConfigurationInstance()>
<com.android.systemui.qs.QuickStatusBarHeader: void setMargins(int)>
<com.android.systemui.recents.RecentsActivity: void onStart()>
<com.android.server.notification.NotificationDelegate: void onNotificationError(int,int,java.lang.String,java.lang.String,int,int,int,java.lang.String,int)>
<com.android.systemui.shared.system.TaskStackChangeListeners: void <init>(android.os.Looper)>
<com.android.systemui.HardwareUiLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.SwipeHelper: void onTranslationUpdate(android.view.View,float,boolean)>
<com.android.systemui.plugins.ClockPlugin: android.view.View getView()>
<com.android.server.policy.WindowManagerPolicy.WindowManagerFuncs: void moveDisplayToTop(int)>
<com.android.server.pm.PackageSetting: void setInstallPermissionsFixed(boolean)>
<com.android.settingslib.net.DataUsageController: void setMobileDataEnabled(boolean)>
<com.android.settingslib.applications.StorageStatsSource.ExternalStorageStats: void <init>(android.app.usage.ExternalStorageStats)>
<com.android.keyguard.KeyguardPinBasedInputView: java.lang.CharSequence getTitle()>
<com.android.server.notification.ZenModeHelper: void onUserSwitched(int)>
<com.android.server.notification.RankingConfig: boolean bubblesEnabled(android.os.UserHandle)>
<com.android.uiautomator.core.UiAutomatorBridge: boolean isScreenOn()>
<com.android.systemui.statusbar.notification.row.NotificationBlockingHelperManager: boolean isNonblockable(java.lang.String,java.lang.String)>
<com.android.server.content.ContentService: int getIsSyncable(android.accounts.Account,java.lang.String)>
<com.android.systemui.recents.views.AnimateableViewBounds: float getAlpha()>
<com.android.systemui.statusbar.notification.row.StackScrollerDecorView: void onFinishInflate()>
<com.android.server.pm.PackageSetting: boolean isOem()>
<com.android.server.gpu.GpuService: void <init>(android.content.Context)>
<com.android.systemui.statusbar.notification.row.NotificationBackgroundView: void setCustomBackground(int)>
<com.android.server.audio.MediaFocusControl: int abandonAudioFocus(android.media.IAudioFocusDispatcher,java.lang.String,android.media.AudioAttributes,java.lang.String)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void setHeadsUpChild(android.view.View)>
<com.android.systemui.qs.TouchAnimator.Builder: com.android.systemui.qs.TouchAnimator.Builder setStartDelay(float)>
<com.android.server.location.GeocoderProxy: com.android.server.location.GeocoderProxy createAndBind(android.content.Context,int,int,int)>
<com.android.server.inputmethod.InputMethodManagerService: boolean handleMessage(android.os.Message)>
<com.android.systemui.statusbar.StatusBarIconView: void <init>(android.content.Context,java.lang.String,android.service.notification.StatusBarNotification)>
<com.android.photos.BitmapRegionTileSource.BitmapSource: boolean readExif(com.android.gallery3d.exif.ExifInterface)>
<com.android.systemui.statusbar.car.CarBatteryController: void addCallback(com.android.systemui.statusbar.policy.BatteryController.BatteryStateChangeCallback)>
<com.android.server.pm.ShortcutBitmapSaver: boolean waitForAllSavesLocked()>
<com.android.systemui.plugins.qs.QSTileView: android.view.View updateAccessibilityOrder(android.view.View)>
<com.android.settingslib.CustomDialogPreference.CustomPreferenceDialogFragment: void onClick(android.content.DialogInterface,int)>
<com.android.server.biometrics.face.FaceUserState: void doWriteState()>
<com.android.systemui.pip.phone.PipTouchState: void scheduleDoubleTapTimeoutCallback()>
<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void setLocationExtraPackagesProvider(android.content.pm.PackageManagerInternal.PackagesProvider)>
<com.android.systemui.statusbar.phone.PanelView: void cancelHeightAnimator()>
<com.android.systemui.recents.events.EventBus: void unregister(java.lang.Object)>
<com.android.settingslib.location.SettingsInjector.Setting: java.lang.String toString()>
<com.android.server.pm.KeySetManagerService: boolean shouldCheckUpgradeKeySetLocked(com.android.server.pm.PackageSettingBase,int)>
<com.android.systemui.BatteryMeterView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void onNotificationUpdated(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: boolean shouldSuppressPeek()>
<com.android.server.usb.descriptors.UsbDeviceDescriptor: byte getPacketSize()>
<com.android.settingslib.graph.BatteryMeterDrawableBase: void setPowerSaveAsColorError(boolean)>
<com.android.server.media.MediaSessionRecord: boolean sendMediaButton(java.lang.String,int,int,boolean,android.view.KeyEvent,int,android.os.ResultReceiver)>
<android.net.ip.IpClientUtil.WaitForProvisioningCallbacks: void onProvisioningFailure(android.net.LinkProperties)>
<com.android.systemui.recents.RecentsSystemUser: void sendDockingTopTaskEvent(android.graphics.Rect)>
<com.android.systemui.statusbar.notification.InflationException: void <init>(java.lang.String)>
<com.android.server.locksettings.recoverablekeystore.certificate.SigXml: void verifyFileSignature(java.security.cert.X509Certificate,byte[])>
<com.android.systemui.SystemUIFactory: com.android.systemui.volume.VolumeDialogComponent createVolumeDialogComponent(com.android.systemui.SystemUI,android.content.Context)>
<com.android.systemui.statusbar.notification.row.ExpandableView: boolean isAboveShelf()>
<com.android.systemui.statusbar.policy.KeyguardMonitorImpl: long getKeyguardFadingAwayDuration()>
<com.android.uiautomator.testrunner.UiAutomatorTestRunner: com.android.uiautomator.testrunner.TestCaseCollector getTestCaseCollector(java.lang.ClassLoader)>
<com.android.server.pm.UserManagerService: boolean isUserUnlocked(int)>
<com.android.systemui.statusbar.policy.SignalController: void notifyListenersIfNecessary()>
<com.android.systemui.statusbar.HeadsUpStatusBarView: void setPanelTranslation(float)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void setRecentlyAudiblyAlerted(boolean)>
<com.android.systemui.recents.views.TaskStackView: void onLayout(boolean,int,int,int,int)>
<com.android.server.biometrics.BiometricServiceBase.DaemonWrapper: int enroll(byte[],int,int,java.util.ArrayList)>
<com.android.systemui.statusbar.phone.StatusBar: void showBouncer(boolean)>
<com.android.systemui.shared.system.TaskStackChangeListener: void onTaskMovedToFront(android.app.ActivityManager.RunningTaskInfo)>
<com.android.server.autofill.AutofillManagerServiceShellCommand: void onHelp()>
<android.net.netlink.StructNlMsgErr: android.net.netlink.StructNlMsgErr parse(java.nio.ByteBuffer)>
<com.android.server.locksettings.recoverablekeystore.certificate.SigXml: com.android.server.locksettings.recoverablekeystore.certificate.SigXml parse(byte[])>
<com.android.settingslib.core.lifecycle.ObservableDialogFragment: void onAttach(android.content.Context)>
<com.android.server.NetworkManagementService: void removeVpnUidRanges(int,android.net.UidRange[])>
<com.android.systemui.statusbar.policy.SignalController: void updateConnectivity(java.util.BitSet,java.util.BitSet)>
<com.android.server.DiskStatsService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.media.remotedisplay.RemoteDisplay: java.lang.String getName()>
<com.android.packageinstaller.InstallStaging: void onResume()>
<com.android.systemui.util.InjectionInflationController.ViewAttributeProvider: android.util.AttributeSet provideAttributeSet()>
<com.android.server.pm.PackageManagerService: java.lang.String getDefaultBrowserPackageName(int)>
<com.android.server.pm.ShortcutService: int getRemainingCallCount(java.lang.String,int)>
<com.android.systemui.qs.QSHost: void removeTile(java.lang.String)>
<com.android.printservice.recommendation.plugin.mdnsFilter.MDNSFilterPlugin: java.lang.CharSequence getPackageName()>
<com.android.systemui.recents.views.RecentsEntrancePathInterpolator: void <init>(float,float,float,float,float)>
<com.android.settingslib.utils.AsyncLoaderCompat: void onStopLoading()>
<com.android.server.location.GnssMeasurementsProvider: boolean isAvailableInPlatform()>
<com.android.systemui.shared.system.QuickStepContract: boolean isSwipeUpMode(int)>
<com.android.server.systemcaptions.SystemCaptionsManagerService: void onServiceRemoved(com.android.server.systemcaptions.SystemCaptionsManagerPerUserService,int)>
<com.android.systemui.doze.DozeScreenBrightness: void <init>(android.content.Context,com.android.systemui.doze.DozeMachine.Service,android.hardware.SensorManager,android.hardware.Sensor,com.android.systemui.doze.DozeHost,android.os.Handler,com.android.systemui.doze.AlwaysOnDisplayPolicy)>
<com.android.systemui.util.wakelock.DelayedWakeLock: void acquire(java.lang.String)>
<com.android.systemui.egg.MLand: int getControllerPlayer(int)>
<com.android.systemui.keyguard.KeyguardViewMediator: void dismiss(com.android.internal.policy.IKeyguardDismissCallback,java.lang.CharSequence)>
<com.android.systemui.bubbles.BubbleExpandedView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem: void updateDevicePowerStatus(int,int)>
<com.android.systemui.statusbar.phone.ButtonDispatcher: void setTranslation(int,int,int)>
<javax.microedition.khronos.opengles.GL10: void glMaterialfv(int,int,java.nio.FloatBuffer)>
<javax.obex.BaseStream: boolean continueOperation(boolean,boolean)>
<com.android.systemui.qs.customize.TileAdapter: void saveSpecs(com.android.systemui.qs.QSTileHost)>
<android.widget.TextViewPrecomputedTextPerfTest: void testNewLayout_RandomText_Selectable()>
<com.android.uiautomator.core.UiDevice: boolean isNaturalOrientation()>
<com.android.systemui.statusbar.SysuiStatusBarStateController: void setKeyguardRequested(boolean)>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcher: boolean hideIfNotSimple(boolean)>
<com.android.systemui.shared.system.ActivityManagerWrapper: boolean setTaskWindowingModeSplitScreenPrimary(int,int,android.graphics.Rect)>
<com.android.systemui.pip.phone.PipMenuActivityController: void setDismissFraction(float)>
<com.android.server.policy.WindowOrientationListener: void enable()>
<com.android.server.devicepolicy.DevicePolicyManagerService: int addOverrideApn(android.content.ComponentName,android.telephony.data.ApnSetting)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean performAccessibilityActionInternal(int,android.os.Bundle)>
<com.android.settingslib.widget.FooterPreferenceMixinCompat: boolean hasFooter()>
<android.text.StaticLayoutPerfTest: void testDraw_RandomText_NoStyled()>
<com.android.server.locksettings.LockSettingsService: com.android.server.locksettings.SyntheticPasswordManager.AuthenticationToken initializeSyntheticPasswordLocked(byte[],byte[],int,int,int)>
<com.android.systemui.pip.phone.PipManager: void hidePipMenu(java.lang.Runnable,java.lang.Runnable)>
<com.android.systemui.util.LifecycleFragment: void onCreate(android.os.Bundle)>
<com.android.server.hdmi.HdmiCecMessage: int getDestination()>
<com.android.systemui.qs.customize.CustomizeTileView: void setShowAppLabel(boolean)>
<com.android.keyguard.CarrierTextController.CarrierTextCallbackInfo: void <init>(java.lang.CharSequence,java.lang.CharSequence[],boolean,int[],boolean)>
<com.android.systemui.statusbar.phone.PanelBar: void go(int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.CharSequence getDeviceOwnerLockScreenInfo()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setPanelScrimMinFraction(float)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void setStatusBar(com.android.systemui.statusbar.phone.StatusBar)>
<com.android.settingslib.CustomEditTextPreference.CustomPreferenceDialogFragment: void onPrepareDialogBuilder(android.app.AlertDialog.Builder)>
<com.android.settingslib.notification.EnableZenModeDialog: boolean isAlarm(android.service.notification.Condition)>
<com.android.settingslib.bluetooth.HidDeviceProfile: boolean disconnect(android.bluetooth.BluetoothDevice)>
<com.android.systemui.shared.system.AssistDataReceiver: void onHandleAssistScreenshot(android.graphics.Bitmap)>
<com.android.server.autofill.ui.FillUi.Callback: void onDatasetPicked(android.service.autofill.Dataset)>
<com.android.server.statusbar.StatusBarManagerInternal: void dismissKeyboardShortcutsMenu()>
<com.android.systemui.statusbar.NotificationHeaderUtil: void updateChildrenHeaderAppearance()>
<com.android.server.biometrics.fingerprint.FingerprintUserState: void <init>(android.content.Context,int)>
<com.android.server.notification.NotificationUsageStats: void registerOverRateQuota(java.lang.String)>
<com.android.keyguard.CarrierTextController: java.util.List getSubscriptionInfo()>
<com.android.systemui.doze.DozeHost: void setAodDimmingScrim(float)>
<com.android.server.uri.UriGrantsManagerInternal: boolean checkAuthorityGrants(int,android.content.pm.ProviderInfo,int,boolean)>
<com.android.systemui.qs.QSPanel: void setListening(boolean,boolean)>
<com.android.systemui.statusbar.phone.StatusBarIconController.IconManager: void setShouldLog(boolean)>
<com.android.server.autofill.AutofillManagerService: com.android.server.autofill.AutofillManagerServiceImpl newServiceLocked(int,boolean)>
<com.android.server.accounts.AccountManagerService: java.lang.String getPreviousName(android.accounts.Account)>
<com.android.systemui.volume.VolumeDialogImpl: void setStreamImportant(int,boolean)>
<com.android.server.utils.ManagedApplicationService: void connect()>
<com.android.uiautomator.core.UiScrollable: com.android.uiautomator.core.UiObject getChildByInstance(com.android.uiautomator.core.UiSelector,int)>
<com.android.systemui.fragments.FragmentHostManager.FragmentListener: void onFragmentViewCreated(java.lang.String,android.app.Fragment)>
<com.android.systemui.statusbar.phone.RegionSamplingHelper.SamplingCallback: android.graphics.Rect getSampledRegion(android.view.View)>
<com.android.systemui.statusbar.phone.NavigationBarInflaterView: java.lang.String getDefaultLayout()>
<com.android.systemui.pip.phone.PipAccessibilityInteractionConnection: void focusSearch(long,int,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)>
<com.android.systemui.qs.PagedTileLayout: void addTile(com.android.systemui.qs.QSPanel.TileRecord)>
<com.android.systemui.recents.utilities.AnimationProps: com.android.systemui.recents.utilities.AnimationProps setDuration(int,int)>
<android.media.MediaPlayer2: java.lang.Object setAudioSessionId(int)>
<com.android.server.policy.WindowManagerPolicy: java.lang.String userRotationModeToString(int)>
<com.android.systemui.statusbar.notification.row.NotificationInlineImageResolver: void preloadImages(android.app.Notification)>
<com.android.systemui.statusbar.policy.NetworkController: void addCallback(com.android.systemui.statusbar.policy.NetworkController.SignalCallback)>
<com.android.server.locksettings.recoverablekeystore.KeyStoreProxy: boolean containsAlias(java.lang.String)>
<com.android.systemui.statusbar.phone.StatusBarIconList: java.util.ArrayList getSlots()>
<com.android.media.tv.remoteprovider.TvRemoteProvider: void closeInputBridge(android.os.IBinder)>
<com.android.server.trust.TrustArchive: void logDevicePolicyChanged()>
<com.android.systemui.qs.car.CarQSFragment: void animateHeaderSlidingIn(long)>
<com.android.systemui.settings.CurrentUserTracker: void startTracking()>
<com.android.systemui.statusbar.phone.StatusBarIconList: int getViewIndex(int,int)>
<com.android.systemui.shared.system.PackageManagerWrapper: android.content.ComponentName getHomeActivities(java.util.List)>
<com.android.settingslib.RestrictedLockImageSpan: android.graphics.drawable.Drawable getDrawable()>
<com.android.server.biometrics.face.FaceUserState: java.lang.String getBiometricFile()>
<com.android.systemui.statusbar.StatusBarIconView: void setDismissed()>
<javax.microedition.khronos.opengles.GL11: void glPointParameterfv(int,float[],int)>
<com.android.server.NetworkManagementService: java.lang.String[] listTetheredInterfaces()>
<com.google.android.startop.iorap.ActivityHintEvent: void writeToParcel(android.os.Parcel,int)>
<com.android.systemui.statusbar.AlphaOptimizedFrameLayout: boolean hasOverlappingRendering()>
<com.android.settingslib.bluetooth.CachedBluetoothDeviceManager: void dispatchAudioModeChanged()>
<com.android.gallery3d.exif.ExifTag: void forceSetComponentCount(int)>
<com.android.systemui.statusbar.phone.StatusBarIconList.Slot: int viewIndexOffsetForTag(int)>
<com.android.systemui.statusbar.phone.PanelBar: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.systemui.statusbar.phone.NotificationIconContainer: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.phone.NavigationBarView: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.server.pm.PackageInstallerService: void <init>(android.content.Context,com.android.server.pm.PackageManagerService,com.android.server.pm.ApexManager)>
<com.android.systemui.statusbar.policy.KeyButtonDrawable: int getOpacity()>
<com.android.server.ConnectivityService: boolean isVpnLockdownEnabled(int)>
<com.android.systemui.doze.DozeMachine.Part: void dump(java.io.PrintWriter)>
<com.android.settingslib.wifi.WifiStatusTracker: void handleBroadcast(android.content.Intent)>
<com.android.systemui.qs.QSHost: int indexOf(java.lang.String)>
<com.android.systemui.qs.tiles.UserTile: void onUserInfoChanged(java.lang.String,android.graphics.drawable.Drawable,java.lang.String)>
<com.android.server.soundtrigger.SoundTriggerHelper: void onRecognition(android.hardware.soundtrigger.SoundTrigger.RecognitionEvent)>
<com.android.systemui.shared.system.RecentTaskInfoCompat: int getUserId()>
<com.android.settingslib.CustomEditTextPreferenceCompat: void onClick(android.content.DialogInterface,int)>
<com.android.server.slice.SliceClientPermissions: void onPersistableDirty(com.android.server.slice.DirtyTracker.Persistable)>
<com.android.keyguard.KeyguardSliceView: void setContentChangeListener(java.lang.Runnable)>
<com.android.server.vr.EnabledComponentsObserver: void onUsersChanged()>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector checkable(boolean)>
<com.android.photos.BitmapRegionTileSource: void <init>(android.content.Context,com.android.photos.BitmapRegionTileSource.BitmapSource)>
<com.android.systemui.qs.QSFooterImpl: void setQSPanel(com.android.systemui.qs.QSPanel)>
<com.android.systemui.statusbar.NotificationUpdateHandler: void addNotification(android.service.notification.StatusBarNotification,android.service.notification.NotificationListenerService.RankingMap)>
<com.android.server.locksettings.recoverablekeystore.KeySyncUtils: byte[] encryptRecoveryClaim(java.security.PublicKey,byte[],byte[],byte[],byte[])>
<com.android.gallery3d.glrenderer.BasicTexture: int getHeight()>
<com.android.server.search.SearchManagerService.Lifecycle: void <init>(android.content.Context)>
<com.android.systemui.qs.PagedTileLayout: void setPageListener(com.android.systemui.qs.PagedTileLayout.PageListener)>
<android.app.backup.ForwardingBackupAgent: void onRestoreFile(android.os.ParcelFileDescriptor,long,int,java.lang.String,java.lang.String,long,long)>
<com.android.server.vr.VrManagerService: void onEnabledComponentChanged()>
<com.android.server.wallpaper.WallpaperManagerService: void clearWallpaper(java.lang.String,int,int)>
<com.android.server.pm.PackageManagerService: void notifyPackageUse(java.lang.String,int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void flingSettings(float,int,java.lang.Runnable,boolean)>
<com.android.systemui.statusbar.policy.AccessibilityController: boolean isAccessibilityEnabled()>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: void onSnapOpen()>
<com.android.server.notification.NotificationRecord: int getUserId()>
<com.android.server.location.NtpTimeHelperTest: void setUp()>
<com.android.systemui.fragments.FragmentService: void <init>(com.android.systemui.SystemUIFactory.SystemUIRootComponent)>
<com.android.settingslib.Utils: android.graphics.drawable.Drawable getUserIcon(android.content.Context,android.os.UserManager,android.content.pm.UserInfo)>
<com.android.systemui.tuner.TunerActivity: boolean onMenuItemSelected(int,android.view.MenuItem)>
<com.android.systemui.qs.tileimpl.QSTileImpl: androidx.lifecycle.Lifecycle getLifecycle()>
<com.android.systemui.plugins.IntentButtonProvider.IntentButton: android.content.Intent getIntent()>
<com.android.commands.sm.Sm: void runPartition()>
<com.android.systemui.volume.CarVolumeDialogComponent: void <init>(com.android.systemui.SystemUI,android.content.Context)>
<com.android.systemui.MultiListLayout: android.view.ViewGroup getListView()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean isExpanded(boolean)>
<android.view.ViewShowHidePerfTest: void testAdd()>
<com.android.systemui.shared.recents.model.ThumbnailData: void <init>(android.app.ActivityManager.TaskSnapshot)>
<com.android.server.pm.permission.PermissionManagerServiceInternal.PermissionCallback: void onInstallPermissionUpdated()>
<com.android.systemui.qs.tiles.BatterySaverTile: int getMetricsCategory()>
<com.android.systemui.statusbar.policy.KeyguardMonitorImpl: void <init>(android.content.Context)>
<com.android.server.timedetector.TimeDetectorStrategy.Callback: void sendStickyBroadcast(android.content.Intent)>
<com.android.server.updates.ApnDbInstallReceiver: void postInstall(android.content.Context,android.content.Intent)>
<com.android.systemui.statusbar.phone.ShadeController: void showBouncer(boolean)>
<com.android.systemui.statusbar.phone.StatusBar: void inflateStatusBarWindow(android.content.Context)>
<com.android.systemui.statusbar.policy.CastControllerImpl: void removeCallback(android.media.MediaRouter.Callback)>
<com.android.systemui.statusbar.policy.FlashlightController: boolean isAvailable()>
<android.media.MediaPlayer2.NoDrmSchemeException: void <init>(java.lang.String)>
<com.android.systemui.statusbar.phone.StatusBarRemoteInputCallback: boolean handleRemoteViewClick(android.view.View,android.app.PendingIntent,com.android.systemui.statusbar.NotificationRemoteInputManager.ClickHandler)>
<com.android.systemui.qs.tiles.HotspotTile: int getMetricsCategory()>
<com.android.localtransport.LocalTransport: long requestBackupTime()>
<com.android.systemui.util.AlarmTimeout: boolean schedule(long,int)>
<com.android.server.notification.EventConditionProvider: android.service.notification.IConditionProvider asInterface()>
<com.android.server.notification.NotificationManagerService.NotificationAssistants: void dump(java.io.PrintWriter,com.android.server.notification.NotificationManagerService.DumpFilter)>
<com.android.systemui.SystemUIFactory: com.android.systemui.statusbar.notification.collection.NotificationData.KeyguardEnvironment provideKeyguardEnvironment(android.content.Context)>
<com.android.bluetoothmidiservice.BluetoothPacketDecoder: void decodePacket(byte[],android.media.midi.MidiReceiver)>
<com.android.systemui.statusbar.notification.row.NotificationSnooze: int getActualHeight()>
<com.android.systemui.globalactions.GlobalActionsImpl: void destroy()>
<com.android.gallery3d.glrenderer.UploadedTexture: void setThrottled(boolean)>
<com.android.systemui.statusbar.policy.HotspotControllerImpl: void <init>(android.content.Context,android.os.Handler)>
<com.android.systemui.power.EnhancedEstimates: boolean getLowWarningEnabled()>
<com.android.systemui.DependencyBinder: com.android.systemui.appops.AppOpsController provideAppOpsController(com.android.systemui.appops.AppOpsControllerImpl)>
<com.android.server.pm.PackageManagerService: java.util.List getWhitelistedRestrictedPermissions(java.lang.String,int,int)>
<com.android.server.policy.PhoneWindowManager: boolean isKeyguardShowingAndNotOccluded()>
<com.android.server.midi.MidiService: void openBluetoothDevice(android.os.IBinder,android.bluetooth.BluetoothDevice,android.media.midi.IMidiDeviceOpenCallback)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getCurrentFailedPasswordAttempts(int,boolean)>
<com.android.systemui.statusbar.phone.DozeParameters: boolean getVibrateOnPickup()>
<com.android.server.usb.descriptors.Usb10ACHeader: byte[] getInterfaceNums()>
<com.android.server.pm.ShortcutService: void reportShortcutUsed(java.lang.String,java.lang.String,int)>
<com.android.settingslib.bluetooth.BluetoothUtils: boolean getBooleanMetaData(android.bluetooth.BluetoothDevice,int)>
<com.android.server.slice.SliceManagerService: byte[] getBackupPayload(int)>
<com.android.settingslib.RestrictedSwitchPreference: void checkRestrictionAndSetDisabled(java.lang.String)>
<com.android.systemui.statusbar.phone.BiometricUnlockController: boolean isWakeAndUnlock()>
<com.android.commands.bu.AdbBackupTest: void setUp()>
<javax.microedition.khronos.opengles.GL11Ext: void glWeightPointerOES(int,int,int,int)>
<com.android.systemui.shared.system.ActivityManagerWrapper: android.app.ActivityManager.RunningTaskInfo getRunningTask(int)>
<com.android.systemui.appops.AppOpItem: java.lang.String getPackageName()>
<com.android.gallery3d.exif.ExifInterface: com.android.gallery3d.exif.ExifTag setTag(com.android.gallery3d.exif.ExifTag)>
<com.android.server.notification.NotificationUsageStats: boolean isAlertRateLimited(java.lang.String)>
<com.android.systemui.keyguard.WorkLockActivity: void onCreate(android.os.Bundle)>
<com.android.server.updates.CarrierIdInstallReceiver: void postInstall(android.content.Context,android.content.Intent)>
<android.text.StaticLayoutCreateDrawPerfTest: void timeCreate()>
<com.android.uiautomator.core.UiDevice: void registerWatcher(java.lang.String,com.android.uiautomator.core.UiWatcher)>
<com.android.systemui.statusbar.notification.collection.NotificationData: boolean getRanking(java.lang.String,android.service.notification.NotificationListenerService.Ranking)>
<com.android.keyguard.KeyguardMessageArea: void onDensityOrFontScaleChanged()>
<com.android.systemui.qs.QSPanel: void setMargins(int)>
<com.android.systemui.statusbar.StatusBarStateControllerImpl: int getState()>
<com.android.systemui.power.EnhancedEstimates: com.android.settingslib.fuelgauge.Estimate getEstimate()>
<com.android.systemui.statusbar.notification.row.ExpandableOutlineView: void setOutlineAlpha(float)>
<com.android.settingslib.users.AppRestrictionsHelper: void applyUserAppState(java.lang.String,boolean,com.android.settingslib.users.AppRestrictionsHelper.OnDisableUiForPackageListener)>
<com.android.server.pm.PackageKeySetData: android.util.ArrayMap getAliases()>
<com.android.systemui.plugins.qs.QS: void setExpanded(boolean)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void onFinishInflate()>
<com.android.settingslib.applications.ApplicationsState: android.os.Looper getBackgroundLooper()>
<com.android.systemui.statusbar.policy.CastControllerImpl: void addCallback(android.media.MediaRouter.Callback)>
<android.view.ViewShowHidePerfTest: void testRecordAfterAdd()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void flingToHeight(float,boolean,float,float,boolean)>
<com.android.systemui.recents.OverviewProxyService: com.android.systemui.shared.recents.IOverviewProxy getProxy()>
<android.os.StrictModeTest: void timeCrossBinderThreadViolation()>
<com.android.systemui.qs.QSSecurityFooter: void refreshState()>
<com.android.systemui.statusbar.phone.PanelView: void requestPanelHeightUpdate()>
<com.android.systemui.statusbar.EmptyShadeView.EmptyShadeViewState: void applyToView(android.view.View)>
<com.android.systemui.qs.tileimpl.QSTileImpl: void handleStale()>
<com.android.server.usb.descriptors.Usb20ACHeader: byte getCategory()>
<com.android.printspooler.ui.PageAdapter: void destroy(java.lang.Runnable)>
<com.android.systemui.statusbar.phone.NotificationGroupManager: boolean isSummaryOfGroup(android.service.notification.StatusBarNotification)>
<com.android.server.LocationManagerService: int getGnssYearOfHardware()>
<com.android.settingslib.RestrictedLockUtils: boolean isCurrentUserOrProfile(android.content.Context,int)>
<com.android.server.infra.AbstractPerUserSystemService: int getTargedSdkLocked()>
<com.android.server.policy.WindowManagerPolicy: void userActivity()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean removeCrossProfileWidgetProvider(android.content.ComponentName,java.lang.String)>
<com.android.proxyhandler.ProxyService: android.os.IBinder onBind(android.content.Intent)>
<com.android.settingslib.core.lifecycle.Lifecycle: void onCreate(android.os.Bundle)>
<com.android.systemui.classifier.brightline.BrightLineFalsingManager: void setNotificationExpanded()>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void onDozingChanged(boolean)>
<com.android.settingslib.suggestions.SuggestionControllerMixin: void onServiceConnected()>
<com.android.settingslib.deviceinfo.AbstractWifiMacAddressPreferenceController: boolean isAvailable()>
<com.android.server.slice.SlicePermissionManager: void onPersistableDirty(com.android.server.slice.DirtyTracker.Persistable)>
<com.android.systemui.statusbar.car.CarStatusBarKeyguardViewManager: void onCancelClicked()>
<com.android.settingslib.net.ChartDataLoader: void onStartLoading()>
<com.android.systemui.statusbar.StatusIconDisplayable: void setDecorColor(int)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: android.view.View getContractedChild()>
<com.android.settingslib.bluetooth.A2dpProfile: void finalize()>
<com.android.systemui.statusbar.policy.SmartReplyConstants: boolean getEffectiveEditChoicesBeforeSending(int)>
<com.android.server.audio.PlaybackActivityMonitor: void unmutePlayersForCall()>
<com.android.server.appop.AppOpsService: void addHistoricalOps(android.app.AppOpsManager.HistoricalOps)>
<com.android.server.biometrics.ClientMonitor: boolean onAuthenticated(android.hardware.biometrics.BiometricAuthenticator.Identifier,boolean,java.util.ArrayList)>
<android.widget.TextViewPrecomputedTextPerfTest: void testOnMeasure_PrecomputedText()>
<com.android.systemui.statusbar.StatusBarIconView: void setIconAppearAmount(float)>
<com.google.android.startop.iorap.AppLaunchEvent.ActivityLaunched: boolean equals(java.lang.Object)>
<com.android.systemui.volume.VolumeDialogControllerImpl: void setExitCondition(android.service.notification.Condition)>
<com.android.server.timedetector.TimeDetectorStrategy: long getTimeAt(android.util.TimestampedValue,long)>
<com.android.systemui.plugins.qs.QSTileView: int getDetailY()>
<com.android.server.pm.UserManagerService: boolean hasBaseUserRestriction(java.lang.String,int)>
<com.android.systemui.qs.tiles.RotationLockTile: void handleClick()>
<com.android.server.notification.ManagedServices: boolean isComponentEnabledForPackage(java.lang.String)>
<com.android.systemui.statusbar.notification.stack.AmbientState: void setLayoutMaxHeight(int)>
<com.android.server.content.ContentShellCommand: void onHelp()>
<com.android.settingslib.wifi.TestAccessPointBuilder: com.android.settingslib.wifi.TestAccessPointBuilder setLevel(int)>
<com.android.server.biometrics.EnrollClient: int start()>
<com.android.server.IpSecService.RefcountedResource: void userRelease()>
<com.android.printspooler.widget.ClickInterceptSpinner: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.qs.tileimpl.QSTileImpl: void handleClick()>
<android.net.netlink.InetDiagMessage: java.lang.String toString()>
<com.android.statsd.loadtest.NumericalWatcher: void onNewValue(int)>
<javax.microedition.khronos.opengles.GL10: void glLightModelfv(int,java.nio.FloatBuffer)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: com.android.systemui.plugins.statusbar.NotificationSwipeActionHelper getSwipeActionHelper()>
<com.android.settingslib.widget.AnimatedImageView: void onVisibilityChanged(android.view.View,int)>
<com.android.systemui.statusbar.CommandQueue: void handleSystemKey(int)>
<com.android.mtp.MtpDocumentsService: void onCreate()>
<com.android.systemui.statusbar.phone.HeadsUpManagerPhone: void snooze()>
<com.android.settingslib.deviceinfo.AbstractUptimePreferenceController: void onStart()>
<com.android.server.timezone.ConfigHelper: java.lang.String getUpdateAppPackageName()>
<com.android.systemui.statusbar.notification.ActivityLaunchAnimator.ExpandAnimationParameters: int getWidth()>
<com.android.systemui.SwipeHelper.Callback: boolean updateSwipeProgress(android.view.View,boolean,float)>
<com.android.systemui.statusbar.notification.NotificationDozeHelper: void updateGrayscaleMatrix(float)>
<com.android.server.contentcapture.ContentCaptureManagerInternal: boolean sendActivityAssistData(int,android.os.IBinder,android.os.Bundle)>
<com.android.printspooler.widget.CustomErrorEditText: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.phone.HeadsUpAppearanceController: void setPublicMode(boolean)>
<android.media.MediaPlayer2: void setDrmEventCallback(java.util.concurrent.Executor,android.media.MediaPlayer2.DrmEventCallback)>
<com.android.vpndialogs.ConfirmDialog: void onClick(android.content.DialogInterface,int)>
<com.android.systemui.statusbar.hvac.AnimatedTemperatureView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.net.ip.IpClientCallbacks: void onProvisioningSuccess(android.net.LinkProperties)>
<com.android.systemui.statusbar.StatusBarMobileView: com.android.systemui.statusbar.phone.StatusBarSignalPolicy.MobileIconState getState()>
<com.android.systemui.qs.QSPanel.QSTileLayout: void saveInstanceState(android.os.Bundle)>
<com.android.systemui.plugins.statusbar.StatusBarStateController.StateListener: void onDozingChanged(boolean)>
<android.media.MediaPlayer2: java.lang.Object selectTrack(android.media.DataSourceDesc,android.media.MediaPlayer2.TrackInfo)>
<com.android.server.policy.PhoneWindowManager: android.view.animation.Animation createHiddenByKeyguardExit(boolean,boolean)>
<com.android.powermodel.component.ModemProfile: float getSleepMa()>
<com.android.systemui.ScreenDecorations.DisplayCutoutView: android.graphics.Region getInterceptRegion()>
<com.android.systemui.statusbar.phone.HeadsUpManagerPhone: boolean shouldSwallowClick(java.lang.String)>
<com.android.systemui.shared.system.TaskStackChangeListeners: void onActivityForcedResizable(java.lang.String,int,int)>
<com.android.server.pm.UserManagerService: com.android.server.pm.UserManagerService getInstance()>
<com.android.server.location.LocationBlacklist: void init()>
<com.android.keyguard.clock.DefaultClockController: void <init>(android.content.res.Resources,android.view.LayoutInflater,com.android.systemui.colorextraction.SysuiColorExtractor)>
<com.android.server.location.LocationRequestStatistics.PackageProviderKey: int hashCode()>
<com.android.server.pm.PackageSetting: com.android.server.pm.permission.PermissionsState getPermissionsState()>
<com.android.photos.SimpleBitmapRegionDecoderWrapper: android.graphics.Bitmap decodeRegion(android.graphics.Rect,android.graphics.BitmapFactory.Options)>
<com.android.settingslib.wifi.TestAccessPointBuilder: com.android.settingslib.wifi.TestAccessPointBuilder setBssid(java.lang.String)>
<com.android.systemui.qs.TouchAnimator.Listener: void onAnimationStarted()>
<com.android.server.trust.TrustManagerService: void onStartUser(int)>
<com.android.systemui.statusbar.BackDropView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.systemui.volume.ZenModePanel: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.systemui.statusbar.notification.MessagingImageTransformState: boolean sameAs(com.android.systemui.statusbar.notification.TransformState)>
<com.android.systemui.recents.misc.FreePathInterpolator: float getInterpolation(float)>
<com.android.powermodel.component.CpuProfile.Builder: void setCoreSpeeds(int,int[])>
<android.net.ipmemorystore.OnL2KeyResponseListener: android.net.ipmemorystore.IOnL2KeyResponseListener toAIDL(android.net.ipmemorystore.OnL2KeyResponseListener)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void recoverFromLightCycle()>
<com.android.server.notification.NotificationUsageStats: void registerOverCountQuota(java.lang.String)>
<android.text.NonEditableTextGenerator: android.text.NonEditableTextGenerator setTextType(android.text.NonEditableTextGenerator.TextType)>
<com.android.keyguard.KeyguardSecurityView: void showUsabilityHint()>
<javax.obex.PrivateInputStream: int available()>
<com.android.server.notification.NotificationRecord: boolean isAudioAttributesUsage(int)>
<com.android.systemui.qs.tileimpl.SlashImageView: void setAnimationEnabled(boolean)>
<com.android.server.vr.SettingsObserver: com.android.server.vr.SettingsObserver build(android.content.Context,android.os.Handler,java.lang.String)>
<com.android.media.remotedisplay.RemoteDisplayProvider: void onConnect(com.android.media.remotedisplay.RemoteDisplay)>
<com.android.server.hdmi.HdmiCecLocalDevicePlayback: void onAddressAllocated(int,int)>
<com.android.server.notification.NotificationDelegate: void onPanelRevealed(boolean,int)>
<com.android.server.notification.NotificationManagerService: void setNotificationAssistantAccessGrantedForUserInternal(android.content.ComponentName,int,boolean)>
<com.android.systemui.statusbar.policy.BatteryControllerImpl: boolean isPowerSave()>
<com.android.server.content.SyncManager: void sendMessage(android.os.Message)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: float getTopPaddingOverflow()>
<com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem: android.hardware.hdmi.HdmiDeviceInfo addDeviceInfo(android.hardware.hdmi.HdmiDeviceInfo)>
<com.android.preload.ui.SequenceUI: com.android.preload.ui.SequenceUI output(java.io.File)>
<com.android.server.stats.StatsCompanionService: void <init>(android.content.Context)>
<com.android.settingslib.wifi.TestAccessPointBuilder: com.android.settingslib.wifi.TestAccessPointBuilder setScanResults(java.util.ArrayList)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void flingTopOverscroll(float,boolean)>
<com.android.server.usb.descriptors.report.ReportCanvas: void openListItem()>
<com.android.keyguard.clock.DefaultClockController: void onTimeZoneChanged(java.util.TimeZone)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean isOnAmbient()>
<com.android.server.notification.NotificationManagerService: void loadPolicyFile()>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: com.android.systemui.statusbar.phone.BarTransitions getBarTransitions()>
<com.android.wallpapercropper.WallpaperCropActivity: void onCreate(android.os.Bundle)>
<com.android.systemui.statusbar.phone.StatusBarWindowView: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.CountryDetectorService: void run()>
<android.graphics.perftests.TypefaceCreatePerfTest: void testCreate_fromFile()>
<com.android.settingslib.core.lifecycle.ObservableDialogFragment: com.android.settingslib.core.lifecycle.Lifecycle getSettingsLifecycle()>
<com.android.systemui.bubbles.BubbleStackView: void getBoundsOnScreen(android.graphics.Rect,boolean)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onKeyguardBouncerChanged(boolean)>
<com.android.server.pm.DumpState: boolean onTitlePrinted()>
<com.android.systemui.statusbar.RemoteInputController.Delegate: void setRemoteInputActive(com.android.systemui.statusbar.notification.collection.NotificationEntry,boolean)>
<com.android.systemui.statusbar.StatusBarStateControllerImpl: java.lang.String describe(int)>
<com.android.systemui.stackdivider.MinimizedDockShadow: boolean hasOverlappingRendering()>
<com.android.settingslib.DeviceInfoUtils: java.lang.String getFormattedPhoneNumbers(android.content.Context,java.util.List)>
<com.android.server.policy.WindowManagerPolicy: boolean setAodShowing(boolean)>
<com.android.wallpapercropper.CropView: void setTouchCallback(com.android.wallpapercropper.CropView.TouchCallback)>
<com.android.systemui.recents.IRecentsSystemUserCallbacks: void sendDockedFirstAnimationFrameEvent()>
<com.android.server.pm.permission.PermissionManagerServiceInternal.PermissionCallback: void onPermissionGranted(int,int)>
<com.android.systemui.statusbar.notification.row.NotificationSnooze.NotificationSnoozeOption: java.lang.CharSequence getConfirmation()>
<com.android.settingslib.graph.SignalDrawable: void setAlpha(int)>
<com.android.systemui.statusbar.policy.UserInfoControllerImpl: void reloadUserInfo()>
<com.android.gallery3d.exif.ExifInterface: short getOrientationValueForRotation(int)>
<android.net.shared.PrivateDnsConfig: void <init>(java.lang.String,java.net.InetAddress[])>
<com.android.keyguard.KeyguardUpdateMonitor: boolean isDeviceProvisioned()>
<com.android.systemui.recents.events.EventBus: void register(java.lang.Object,int)>
<com.android.systemui.statusbar.notification.stack.AnimationFilter: com.android.systemui.statusbar.notification.stack.AnimationFilter animateDimmed()>
<com.android.server.locksettings.recoverablekeystore.SecureBox: java.security.KeyPair genKeyPair()>
<com.android.keyguard.KeyguardUpdateMonitor: void handleFinishedGoingToSleep(int)>
<com.android.systemui.qs.QSFooterImpl: void onClick(android.view.View)>
<com.android.systemui.statusbar.policy.SignalController: void recordLastState()>
<com.android.server.timedetector.TimeDetectorStrategy.Callback: void releaseWakeLock()>
<com.android.systemui.statusbar.notification.TransformState: void reset()>
<com.android.systemui.statusbar.policy.ScrollAdapter: boolean isScrolledToBottom()>
<com.android.server.pm.permission.PermissionManagerServiceInternal: void updatePermissionFlags(java.lang.String,java.lang.String,int,int,int,int,boolean,com.android.server.pm.permission.PermissionManagerServiceInternal.PermissionCallback)>
<com.android.systemui.statusbar.phone.RotationButton: com.android.systemui.statusbar.policy.KeyButtonDrawable getImageDrawable()>
<com.android.server.utils.ManagedApplicationService.EventCallback: void onServiceEvent(com.android.server.utils.ManagedApplicationService.LogEvent)>
<com.android.server.pm.PackageManagerService: void addOnPermissionsChangeListener(android.content.pm.IOnPermissionsChangeListener)>
<android.app.ResourcesPerfTest: void getText()>
<com.android.server.audio.AudioService: void unloadSoundEffects()>
<com.android.systemui.statusbar.phone.PanelView: void cancelPeek()>
<com.android.server.soundtrigger.SoundTriggerInternal: int stopRecognition(int,android.hardware.soundtrigger.IRecognitionStatusCallback)>
<com.android.gallery3d.exif.ExifTag: java.lang.String getString()>
<com.android.server.NetworkScoreService.Lifecycle: void onStart()>
<com.android.server.textclassifier.TextClassificationManagerService.Lifecycle: void <init>(android.content.Context)>
<com.android.server.accounts.AccountManagerService: java.lang.String readAuthTokenInternal(com.android.server.accounts.AccountManagerService.UserAccounts,android.accounts.Account,java.lang.String)>
<com.android.server.media.MediaSessionService: void onSwitchUser(int)>
<com.android.server.usb.UsbPortManager: void setPortRoles(java.lang.String,int,int,com.android.internal.util.IndentingPrintWriter)>
<com.android.systemui.statusbar.CommandQueue: void appTransitionPending(int,boolean)>
<com.android.server.policy.IconUtilities: void <init>(android.content.Context)>
<com.android.server.testing.shadows.ShadowKeyValueBackupJob: int getCallingUid()>
<com.android.systemui.recents.views.TaskView: boolean onLongClick(android.view.View)>
<com.android.photos.views.TiledImageRenderer: void <init>(android.view.View)>
<com.android.server.usb.descriptors.ByteStream: void advance(int)>
<android.net.shared.InitialConfiguration: java.lang.String toString()>
<com.android.settingslib.AppItem: void addUid(int)>
<com.android.server.usb.UsbPortManager: void simulateContaminantStatus(java.lang.String,boolean,com.android.internal.util.IndentingPrintWriter)>
<com.android.commands.svc.WifiCommand: java.lang.String shortHelp()>
<com.android.systemui.statusbar.phone.CollapsedStatusBarFragment: void showOperatorName(boolean)>
<com.android.systemui.statusbar.phone.StatusBarIconController.IconManager: com.android.systemui.statusbar.StatusIconDisplayable addHolder(int,java.lang.String,boolean,com.android.systemui.statusbar.phone.StatusBarIconHolder)>
<com.android.server.firewall.IntentFirewall: boolean checkBroadcast(android.content.Intent,int,int,java.lang.String,int)>
<com.android.systemui.recents.OverviewProxyRecentsImpl: void onStart(android.content.Context,com.android.systemui.SysUiServiceProvider)>
<com.android.systemui.statusbar.notification.stack.AmbientState: boolean isDimmed()>
<com.android.systemui.statusbar.OperatorNameView: void onTuningChanged(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.policy.HeadsUpManager: void removeListener(com.android.systemui.statusbar.policy.OnHeadsUpChangedListener)>
<com.android.server.statusbar.StatusBarManagerInternal: void appTransitionFinished(int)>
<com.android.server.pm.PackageManagerService: void updatePackagesIfNeeded()>
<com.android.systemui.statusbar.policy.SecurityController: boolean isVpnEnabled()>
<com.android.server.IpSecService.RefcountedResource: com.android.server.IpSecService.IResource getResource()>
<android.media.MediaSession2.Builder: android.media.MediaSession2 build()>
<com.android.systemui.statusbar.car.CarStatusBar: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.statusbar.phone.StatusBarIconController.DarkIconManager: void exitDemoMode()>
<com.android.settingslib.core.instrumentation.MetricsFeatureProvider: int getAttribution(android.app.Activity)>
<com.android.server.wallpaper.IWallpaperManagerService: void onBootPhase(int)>
<com.android.server.location.MockProvider: void setRequest(com.android.internal.location.ProviderRequest,android.os.WorkSource)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean isOnlyChildInGroup()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: com.android.systemui.statusbar.notification.row.NotificationContentView getShowingLayout()>
<com.android.server.adb.AdbDebuggingManager: void <init>(android.content.Context)>
<com.android.server.SystemUpdateManagerService: android.os.Bundle retrieveSystemUpdateInfo()>
<com.android.server.notification.NotificationManagerService.NotificationAssistants: void readExtraAttributes(java.lang.String,org.xmlpull.v1.XmlPullParser,int)>
<javax.obex.ServerOperation: void close()>
<android.database.SQLiteDatabasePerfTest: void testCursorIterateBackwards()>
<com.android.settingslib.wifi.AccessPoint: android.net.wifi.WifiInfo getInfo()>
<com.android.server.SystemService: void publishBinderService(java.lang.String,android.os.IBinder)>
<com.android.systemui.statusbar.notification.row.NotificationInlineImageCache: boolean hasEntry(android.net.Uri)>
<com.android.server.biometrics.ClientMonitor: int getGroupId()>
<com.android.systemui.volume.VolumeToolTipView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.recents.views.grid.TaskViewFocusFrame: void layout()>
<com.android.location.provider.LocationProviderBase: void setAdditionalProviderPackages(java.util.List)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void resetUserExpansion()>
<com.android.systemui.recents.utilities.Utilities: float clamp01(float)>
<com.android.keyguard.KeyguardAbsKeyInputView: int getPromptReasonStringRes(int)>
<com.android.server.GestureLauncherService: void onStart()>
<com.android.server.os.SchedulingPolicyService: int requestCpusetBoost(boolean,android.os.IBinder)>
<android.perftests.utils.SettingsStateManager: java.lang.String get()>
<com.android.server.location.GeocoderProxy: java.lang.String getFromLocation(double,double,int,android.location.GeocoderParams,java.util.List)>
<com.android.systemui.statusbar.phone.StatusBarWindowView: boolean dispatchKeyEvent(android.view.KeyEvent)>
<com.android.gallery3d.glrenderer.Texture: void draw(com.android.gallery3d.glrenderer.GLCanvas,int,int,int,int)>
<com.android.systemui.statusbar.policy.KeyButtonDrawable: float getRotation()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setLongSupportMessage(android.content.ComponentName,java.lang.CharSequence)>
<android.text.StaticLayoutGetOffsetForHorizontalPerfTest: void testGetOffsetForHorizontal_BiDi()>
<com.android.server.stats.StatsCompanionService.Lifecycle: void onBootPhase(int)>
<com.android.systemui.statusbar.NotificationShelf: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.policy.PhoneWindowManager: void onKeyguardOccludedChangedLw(boolean)>
<javax.microedition.khronos.opengles.GL11Ext: void glCurrentPaletteMatrixOES(int)>
<com.android.uiautomator.testrunner.TestCaseCollector: java.util.List getTestCases()>
<com.android.server.infra.AbstractMasterSystemService: void onServiceEnabledLocked(com.android.server.infra.AbstractPerUserSystemService,int)>
<com.android.server.location.GnssBatchingProviderTest: void flush_nativeFlushed()>
<com.android.server.audio.AudioService: void systemReady()>
<com.android.systemui.statusbar.phone.PanelBar: void LOG(java.lang.String,java.lang.Object[])>
<com.android.server.policy.keyguard.KeyguardStateMonitor: boolean isInputRestricted()>
<com.android.server.pm.dex.DexoptUtils: java.lang.String[] getClassLoaderContexts(android.content.pm.ApplicationInfo,java.util.List,boolean[])>
<com.android.systemui.tuner.NavBarTuner: void onCreatePreferences(android.os.Bundle,java.lang.String)>
<com.android.server.contentsuggestions.RemoteContentSuggestionsService: long getTimeoutIdleBindMillis()>
<com.android.systemui.recents.RecentsActivity: void onStop()>
<com.android.systemui.statusbar.DragDownHelper.DragDownCallback: void onTouchSlopExceeded()>
<com.android.settingslib.Utils: boolean isStorageManagerEnabled(android.content.Context)>
<com.android.systemui.statusbar.phone.HeadsUpManagerPhone: void onReorderingAllowed()>
<com.android.server.devicepolicy.OverlayPackagesProvider.Injector: java.util.List getInputMethodListAsUser(int)>
<com.android.systemui.classifier.ProximityClassifier: void onTouchEvent(android.view.MotionEvent)>
<com.android.printservice.recommendation.RemotePrintServicePlugin.OnChangedListener: void onChanged()>
<com.android.providers.settings.SettingsProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)>
<com.android.server.deviceidle.DeviceIdleConstraintTracker: void <init>(java.lang.String,int)>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: boolean setSystemInsets(android.graphics.Rect)>
<com.android.systemui.stackdivider.Divider: void onAppTransitionFinished()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setQsExpansionEnabled(boolean)>
<com.android.server.usb.descriptors.Usb10ASGeneral: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>
<com.android.settingslib.Utils: android.content.res.ColorStateList getColorError(android.content.Context)>
<com.android.systemui.statusbar.notification.row.ExpandableView: boolean willBeGone()>
<com.android.server.notification.RankingConfig: void updateNotificationChannel(java.lang.String,int,android.app.NotificationChannel,boolean)>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: void <init>(android.content.Context,com.android.systemui.recents.views.TaskStackLayoutAlgorithm.TaskStackLayoutAlgorithmCallbacks)>
<javax.microedition.khronos.opengles.GL11: void glTexParameterxv(int,int,int[],int)>
<javax.obex.ClientOperation: int getResponseCode()>
<com.android.preload.DumpTableModel: java.util.List getData()>
<com.android.systemui.assist.ui.PerimeterPathGuide: float makeClockwise(float)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: boolean isRowDismissed()>
<com.android.server.accessibility.MotionEventInjector: void <init>(android.os.Looper)>
<lockedregioncodeinjection.LockTarget: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<javax.microedition.khronos.opengles.GL11: void glGetTexEnviv(int,int,java.nio.IntBuffer)>
<com.android.systemui.qs.tiles.UserDetailItemView: void onFinishInflate()>
<com.android.server.media.MediaSessionService: void onStopUser(int)>
<com.android.keyguard.KeyguardSimPinView: void startAppearAnimation()>
<com.android.systemui.recents.misc.ReferenceCountedTrigger: android.animation.Animator.AnimatorListener decrementOnAnimationEnd()>
<com.android.systemui.recents.views.RecentsViewTouchHandler: java.util.ArrayList getVisibleDockStates()>
<com.android.printspooler.util.MediaSizeUtils.MediaSizeComparator: java.lang.String getLabel(android.content.Context,android.print.PrintAttributes.MediaSize)>
<com.android.systemui.statusbar.notification.row.ExpandableView: void setTransientContainer(android.view.ViewGroup)>
<com.android.systemui.statusbar.phone.MultiUserSwitch: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.android.systemui.statusbar.car.CarBatteryController: void startListening()>
<com.android.server.accounts.AccountManagerService: void isCredentialsUpdateSuggested(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String)>
<com.android.systemui.settings.ToggleSliderView: void setChecked(boolean)>
<com.android.systemui.assist.ui.PerimeterPathGuide: float getCoord(com.android.systemui.assist.ui.PerimeterPathGuide.Region,float)>
<com.android.systemui.statusbar.phone.NotificationPanelView: com.android.systemui.statusbar.KeyguardAffordanceView getRightIcon()>
<com.android.settingslib.bluetooth.PbapClientProfile: void setPreferred(android.bluetooth.BluetoothDevice,boolean)>
<com.android.server.usb.descriptors.UsbACAudioStreamEndpoint: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>
<com.android.systemui.assist.AssistManager: com.android.systemui.assist.AssistHandleBehaviorController getHandleBehaviorController()>
<com.android.systemui.statusbar.policy.Clock: void dispatchDemoCommand(java.lang.String,android.os.Bundle)>
<com.android.server.testing.shadows.ShadowBackupDataInput: void __constructor__(java.io.FileDescriptor)>
<android.net.shared.IpConfigurationParcelableUtil: android.net.DhcpResults fromStableParcelable(android.net.DhcpResultsParcelable)>
<com.android.systemui.plugins.FalsingManager: void onNotificationDoubleTap(boolean,float,float)>
<com.android.server.policy.PhoneWindowManager: void init(android.content.Context,android.view.IWindowManager,com.android.server.policy.WindowManagerPolicy.WindowManagerFuncs)>
<com.android.systemui.egg.MLand: void setScoreFieldHolder(android.view.ViewGroup)>
<com.android.systemui.tuner.TunerService: java.lang.String getValue(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.phone.UnlockMethodCache: boolean isTrusted()>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: boolean hasLockscreenWallpaper()>
<com.android.server.location.GnssNavigationMessageProviderTest: void setUp()>
<com.android.server.storage.FileCollector: long getSystemSize(android.content.Context)>
<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: boolean shouldUseDefaultMenuItems()>
<com.android.systemui.statusbar.phone.PanelView: boolean isCollapsing()>
<com.android.gallery3d.glrenderer.GLCanvas: void endRenderTarget()>
<android.os.SomeService: void onCreate()>
<com.android.systemui.statusbar.phone.NearestTouchFrame: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.policy.HeadsUpManager: void snooze()>
<com.android.server.lights.Light: void pulse(int,int)>
<com.android.settingslib.core.AbstractPreferenceController: boolean handlePreferenceTreeClick(androidx.preference.Preference)>
<com.android.settingslib.widget.AppEntitiesHeaderController: com.android.settingslib.widget.AppEntitiesHeaderController removeAppEntity(int)>
<android.os.ParcelPerfTest: void timeReadException()>
<com.android.gallery3d.common.Utils: java.lang.String getUserAgent(android.content.Context)>
<com.android.server.infra.AbstractMasterSystemService: java.lang.String getServiceSettingsProperty()>
<com.android.keyguard.KeyguardClockSwitch: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.settingslib.bluetooth.HeadsetProfile: boolean isAutoConnectable()>
<com.android.server.policy.WindowManagerPolicy: void applyKeyguardPolicyLw(com.android.server.policy.WindowManagerPolicy.WindowState,com.android.server.policy.WindowManagerPolicy.WindowState)>
<com.android.server.pm.PackageManagerService: void freeStorage(java.lang.String,long,int,android.content.IntentSender)>
<com.android.settingslib.widget.ActionButtonsPreference: com.android.settingslib.widget.ActionButtonsPreference setButton1Icon(int)>
<com.android.server.ConnectivityService: android.net.NetworkState[] getAllNetworkState()>
<com.android.keyguard.KeyguardSimPukView: boolean shouldLockout(long)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: com.android.systemui.statusbar.policy.InflatedSmartReplies.SmartRepliesAndActions getExistingSmartRepliesAndActions()>
<com.android.server.notification.NotificationManagerService: boolean isCallingUidSystem()>
<com.android.photos.views.TiledImageRenderer.TileSource: int getImageHeight()>
<com.android.server.tv.TvInputManagerService: void onStart()>
<com.android.server.policy.WindowManagerPolicy: boolean isTopLevelWindow(int)>
<com.android.systemui.recents.views.TaskView: void onClick(android.view.View)>
<com.android.systemui.qs.QSDetail: void updateResources()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onIconClicked(boolean)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: boolean isBouncerPartiallyVisible()>
<com.android.keyguard.KeyguardUpdateMonitor: void awakenFromDream()>
<com.android.server.audio.MediaFocusControl: void unmutePlayersForCall()>
<com.android.settingslib.deviceinfo.StorageVolumeProvider: long getFreeBytes(android.app.usage.StorageStatsManager,android.os.storage.VolumeInfo)>
<com.android.systemui.volume.SegmentedButtons: void setSelectedStyle(android.widget.TextView,boolean)>
<javax.microedition.khronos.opengles.GL10: void glClear(int)>
<com.android.uiautomator.core.UiDevice: void setOrientationRight()>
<com.android.systemui.statusbar.policy.SecurityControllerImpl: boolean hasCACertInWorkProfile()>
<com.android.server.infra.AbstractPerUserSystemService: boolean updateLocked(boolean)>
<com.android.server.accessibility.AbstractAccessibilityServiceConnection.SystemSupport: com.android.server.accessibility.MotionEventInjector getMotionEventInjectorLocked()>
<com.android.server.locksettings.LockSettingsService.Lifecycle: void onUnlockUser(int)>
<com.android.systemui.qs.tiles.WifiTile: void handleSetListening(boolean)>
<com.android.systemui.pip.phone.PipUtils: android.util.Pair getTopPinnedActivity(android.content.Context,android.app.IActivityManager)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: void setJustDiscovered(boolean)>
<com.android.systemui.recents.utilities.AnimationProps: void <init>(int,int,android.view.animation.Interpolator,android.animation.Animator.AnimatorListener)>
<com.android.server.autofill.ui.CustomScrollView: void <init>(android.content.Context)>
<com.android.systemui.keyguard.ScreenLifecycle.Observer: void onScreenTurningOn()>
<com.android.server.role.RoleUserState: boolean addRoleName(java.lang.String)>
<com.android.server.location.RemoteListenerHelper: void tryUpdateRegistrationWithService()>
<com.android.systemui.recents.misc.FreePathInterpolator: float getArcLength()>
<com.android.settingslib.drawable.UserIconDrawable: int getIntrinsicWidth()>
<com.android.packageinstaller.PackageUtil: android.view.View initSnippetForInstalledApp(android.content.Context,android.content.pm.ApplicationInfo,android.view.View,android.os.UserHandle)>
<com.android.mtp.MtpDocumentsProvider: void shutdown()>
<com.android.server.audio.AudioService: boolean isAudioServerRunning()>
<com.android.systemui.doze.DozeMachine: void <init>(com.android.systemui.doze.DozeMachine.Service,android.hardware.display.AmbientDisplayConfiguration,com.android.systemui.util.wakelock.WakeLock)>
<com.android.printspooler.ui.SelectPrinterActivity: void onPause()>
<com.android.server.print.RemotePrintService.PrintServiceCallbacks: void onCustomPrinterIconLoaded(android.print.PrinterId,android.graphics.drawable.Icon)>
<com.android.systemui.SystemUISecondaryUserService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.shared.system.MetricsLoggerCompat: void hidden(int)>
<com.android.systemui.qs.external.TileServiceManager: void clearPendingBind()>
<javax.microedition.khronos.opengles.GL11: void glGetFloatv(int,java.nio.FloatBuffer)>
<com.android.server.notification.ZenModeExtractor: void setConfig(com.android.server.notification.RankingConfig)>
<com.android.systemui.SwipeHelper: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.android.systemui.statusbar.phone.NotificationListenerWithPlugins: android.service.notification.NotificationListenerService.RankingMap getCurrentRanking()>
<com.android.server.vr.VrManagerService: void onStopUser(int)>
<com.android.systemui.statusbar.phone.HeadsUpManagerPhone: void setAnimationStateHandler(com.android.systemui.statusbar.phone.HeadsUpManagerPhone.AnimationStateHandler)>
<com.android.keyguard.AlphaOptimizedLinearLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem: boolean handleReportArcTermination(com.android.server.hdmi.HdmiCecMessage)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: com.android.systemui.statusbar.notification.row.ExpandableNotificationRow getViewAtPosition(float)>
<com.android.systemui.keyguard.ScreenLifecycle: void dispatchScreenTurnedOn()>
<com.android.systemui.recents.events.component.RecentsVisibilityChangedEvent: void <init>(android.content.Context,boolean)>
<com.android.systemui.statusbar.phone.StatusBarIconController.DarkIconManager: void onIconAdded(int,java.lang.String,boolean,com.android.systemui.statusbar.phone.StatusBarIconHolder)>
<com.android.server.notification.NotificationRecord: java.util.ArrayList getSnoozeCriteria()>
<com.android.systemui.tuner.TunerServiceImpl: void addTunable(com.android.systemui.tuner.TunerService.Tunable,java.lang.String[])>
<com.android.server.ThreadPriorityBooster: void reset()>
<com.android.systemui.statusbar.CommandQueue: void appTransitionPending(int)>
<com.android.server.audio.AudioService: void setBluetoothA2dpOn(boolean)>
<com.android.wallpapercropper.CropView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean checkDeviceIdentifierAccess(java.lang.String,int,int)>
<com.android.server.CountryDetectorService: void notifyReceivers(android.location.Country)>
<com.android.systemui.qs.tiles.RotationLockTile: java.lang.String composeChangeAnnouncement()>
<com.android.server.audio.AudioService: int getLastAudibleStreamVolume(int)>
<com.android.keyguard.KeyguardHostView: void setViewMediatorCallback(com.android.keyguard.ViewMediatorCallback)>
<android.media.MediaPlayer2.EventCallback: void onError(android.media.MediaPlayer2,android.media.DataSourceDesc,int,int)>
<com.android.server.audio.AudioService: void avrcpSupportsAbsoluteVolume(java.lang.String,boolean)>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb: long setActiveRootOfTrust(int,int,java.lang.String)>
<com.android.settingslib.development.DeveloperOptionsPreferenceController: void onDeveloperOptionsDisabled()>
<com.android.systemui.shared.system.RecentsAnimationControllerCompat: void hideCurrentInputMethod()>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: void onTrackingStarted()>
<com.android.systemui.shared.system.MetricsLoggerCompat: void action(int)>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcher.Container: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.uri.UriGrantsManagerInternal: void removeUriPermissionsForPackage(java.lang.String,int,boolean,boolean)>
<com.android.systemui.recents.RecentsSystemUser: void registerNonSystemUserCallbacks(android.os.IBinder,int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean isLaunchTransitionFinished()>
<com.android.server.voiceinteraction.VoiceInteractionManagerService: void onStart()>
<com.android.gallery3d.common.Utils: boolean isOpaque(int)>
<com.android.systemui.statusbar.AlertingNotificationManager: void onAlertEntryRemoved(com.android.systemui.statusbar.AlertingNotificationManager.AlertEntry)>
<com.android.systemui.recents.RecentsImplProxy: void <init>(com.android.systemui.recents.RecentsImpl)>
<com.android.systemui.statusbar.phone.NotificationGroupManager: void onStateChanged(int)>
<com.android.systemui.statusbar.notification.stack.AmbientState: int getAnchorViewY()>
<com.android.server.pm.ShortcutService: void applyRestore(byte[],int)>
<com.android.systemui.stackdivider.MinimizedDockShadow: void onLayout(boolean,int,int,int,int)>
<com.android.server.accounts.AccountManagerService: android.accounts.AccountAndUser[] getAllAccounts()>
<android.net.netlink.RtNetlinkNeighborMessage: byte[] getLinkLayerAddress()>
<com.android.systemui.statusbar.phone.ButtonDispatcher: void setClickable(boolean)>
<com.android.server.IpSecService.IpSecServiceConfiguration: android.net.INetd getNetdInstance()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setHeadsUpAppearanceController(com.android.systemui.statusbar.phone.HeadsUpAppearanceController)>
<com.android.settingslib.widget.AppEntityInfo: android.view.View.OnClickListener getClickListener()>
<com.android.server.statusbar.StatusBarManagerService: void onNotificationDirectReplied(java.lang.String)>
<com.android.systemui.statusbar.policy.KeyButtonView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.android.systemui.recents.misc.SystemServicesProxy: boolean hasTransposedNavigationBar()>
<com.android.gallery3d.exif.ExifInterface: java.util.List getTagsForTagId(short)>
<com.android.photos.views.TiledImageView: void <init>(android.content.Context)>
<com.android.settingslib.net.NetworkStatsSummaryLoader: android.app.usage.NetworkStats loadInBackground()>
<com.android.server.policy.WindowManagerPolicy: boolean isKeyguardLocked()>
<com.android.server.testing.shadows.ShadowAppBackupUtils: void setAppRunningAndEligibleForBackupWithTransport(java.lang.String)>
<com.android.systemui.qs.QSContainerImpl: int calculateContainerHeight()>
<com.android.server.inputmethod.InputMethodManagerInternal: void hideCurrentInputMethod()>
<com.android.systemui.qs.tiles.BluetoothTile: com.android.systemui.plugins.qs.QSTile.BooleanState newTileState()>
<com.android.settingslib.inputmethod.InputMethodAndSubtypeUtilCompat: java.lang.String getSubtypeLocaleNameListAsSentence(java.util.List,android.content.Context,android.view.inputmethod.InputMethodInfo)>
<com.android.server.IntentResolver: java.util.List queryIntent(android.content.Intent,java.lang.String,boolean,int)>
<android.net.dhcp.DhcpServingParamsParcelExt: android.net.dhcp.DhcpServingParamsParcelExt setNoDefaultRouter()>
<com.android.systemui.statusbar.policy.KeyButtonRipple: float getGlowAlpha()>
<com.android.server.usb.descriptors.report.TextReportCanvas: void closeParagraph()>
<com.android.server.pm.BackgroundDexOptService: boolean runIdleOptimizationsNow(com.android.server.pm.PackageManagerService,android.content.Context,java.util.List)>
<com.android.systemui.recents.RecentsImpl: void showNextTask()>
<com.android.server.notification.ConditionProviders: void addSystemProvider(com.android.server.notification.SystemConditionProviderService)>
<com.android.server.location.CallerIdentity: void <init>(int,int,java.lang.String)>
<com.android.server.content.ContentService: void onShellCommand(java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ShellCallback,android.os.ResultReceiver)>
<com.android.server.devicepolicy.DevicePolicyCacheImpl: void onUserRemoved(int)>
<com.android.systemui.plugins.NotificationListenerController.NotificationProvider: void addNotification(android.service.notification.StatusBarNotification)>
<com.android.settingslib.TwoTargetPreference: int getSecondTargetResId()>
<com.android.systemui.statusbar.phone.HeadsUpManagerPhone: void setRemoteInputActive(com.android.systemui.statusbar.notification.collection.NotificationEntry,boolean)>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcherScrim: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)>
<com.android.server.locksettings.recoverablekeystore.RecoverableKeyStoreManager: void lockScreenSecretChanged(int,byte[],int)>
<com.android.settingslib.wifi.AccessPoint.AccessPointListener: void onAccessPointChanged(com.android.settingslib.wifi.AccessPoint)>
<com.android.settingslib.suggestions.SuggestionController: void <init>(android.content.Context,android.content.ComponentName,com.android.settingslib.suggestions.SuggestionController.ServiceConnectionListener)>
<com.android.systemui.recents.model.TaskStack: int indexOfTask(com.android.systemui.shared.recents.model.Task)>
<lockedregioncodeinjection.LockTargetStateAnalysis: org.objectweb.asm.tree.analysis.BasicValue naryOperation(org.objectweb.asm.tree.AbstractInsnNode,java.util.List)>
<com.android.systemui.ScreenDecorations.DisplayCutoutView: void setColor(int)>
<com.google.android.startop.iorap.AppLaunchEvent.ActivityLaunchCancelled: void <init>(long,byte[])>
<com.android.systemui.bubbles.animation.PhysicsAnimationLayout.PhysicsAnimationController.MultiAnimationStarter: void startAll(java.lang.Runnable[])>
<com.android.server.textservices.TextServicesManagerService: void <init>(android.content.Context)>
<com.android.systemui.statusbar.EmptyShadeView: void onFinishInflate()>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationViewWrapper: void setRemoteInputVisible(boolean)>
<android.net.ip.IIpClientCallbacks: void setFallbackMulticastFilter(boolean)>
<com.android.systemui.statusbar.policy.RemoteInputView.RemoteEditText: boolean onKeyUp(int,android.view.KeyEvent)>
<com.android.systemui.util.LifecycleFragment: void onStop()>
<android.media.MediaPlayer2: java.lang.Object seekTo(long)>
<com.android.server.attention.AttentionManagerService: com.android.server.attention.AttentionManagerService.UserState getOrCreateUserStateLocked(int)>
<com.android.systemui.qs.external.TileServices: void onShowDialog(android.os.IBinder)>
<javax.microedition.khronos.egl.EGL10: boolean eglWaitNative(int,java.lang.Object)>
<com.android.systemui.recents.views.FixedSizeImageView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.notification.EventConditionProvider: android.content.ComponentName getComponent()>
<com.android.systemui.statusbar.notification.row.NotificationGuts: void drawableHotspotChanged(float,float)>
<com.android.commands.svc.SystemServerCommand: void run(java.lang.String[])>
<com.android.server.usb.descriptors.UsbDescriptor: int getLength()>
<com.android.systemui.bubbles.animation.ExpandedAnimationController: void onGestureFinished()>
<android.media.MediaPlayer2: void reset()>
<com.android.systemui.keyboard.KeyboardUI: void onTabletModeChanged(long,boolean)>
<com.android.server.notification.NotificationRecord: boolean getIsAppImportanceLocked()>
<com.android.server.pm.PackageManagerService: int getPermissionFlags(java.lang.String,java.lang.String,int)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean isUserExpanded()>
<com.android.systemui.statusbar.phone.LightBarTransitionsController: void setIconsDark(boolean,boolean)>
<com.android.settingslib.animation.AppearAnimationUtils: void startAnimation2d(android.view.View[][],java.lang.Runnable)>
<com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer: void setIconsVisible(boolean)>
<com.android.systemui.pip.tv.PipMenuActivity: void onPause()>
<com.android.server.infra.AbstractPerUserSystemService: android.content.ComponentName updateServiceInfoLocked()>
<com.android.settingslib.suggestions.SuggestionControllerMixinCompat: void onServiceDisconnected()>
<com.android.systemui.statusbar.phone.KeyguardDismissUtil: void setDismissHandler(com.android.systemui.statusbar.phone.KeyguardDismissHandler)>
<com.android.settingslib.bluetooth.PbapClientProfile: int getProfileId()>
<com.android.systemui.statusbar.policy.RotationLockController: int getRotationLockOrientation()>
<com.android.systemui.statusbar.NotificationListener.NotificationSettingsListener: void onStatusBarIconsBehaviorChanged(boolean)>
<com.android.server.location.LocationBasedCountryDetector: java.util.List getEnabledProviders()>
<com.android.systemui.classifier.brightline.BrightLineFalsingManager: void onNotificationActive()>
<com.android.systemui.classifier.brightline.FalsingDataProvider: void <init>(android.util.DisplayMetrics)>
<com.android.systemui.statusbar.notification.ActivityLaunchAnimator: void <init>(com.android.systemui.statusbar.phone.StatusBarWindowView,com.android.systemui.statusbar.notification.ActivityLaunchAnimator.Callback,com.android.systemui.statusbar.phone.NotificationPanelView,com.android.systemui.statusbar.notification.stack.NotificationListContainer)>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: void drawableStateChanged()>
<com.android.systemui.bubbles.BubbleExpandedView: void <init>(android.content.Context,android.util.AttributeSet)>
<javax.microedition.khronos.opengles.GL10: void glTexEnvxv(int,int,int[],int)>
<com.android.systemui.doze.DozeFactory: com.android.systemui.doze.DozeHost getHost(com.android.systemui.doze.DozeService)>
<android.media.CloseGuard.Reporter: void report(java.lang.String,java.lang.Throwable)>
<com.android.powermodel.AttributionKey: void <init>(com.android.powermodel.SpecialApp)>
<com.android.systemui.stackdivider.DividerView: void <init>(android.content.Context)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onEmergencyCallAction()>
<com.android.settingslib.bluetooth.PbapServerProfile: java.lang.String toString()>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin.MenuItem getSnoozeMenuItem(android.content.Context)>
<com.android.systemui.statusbar.phone.UserAvatarView: void setFrameColor(android.content.res.ColorStateList)>
<com.android.systemui.qs.QSSecurityFooter.VpnSpan: void onClick(android.view.View)>
<com.android.systemui.statusbar.policy.OnHeadsUpChangedListener: void onHeadsUpPinned(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.systemui.statusbar.phone.HeadsUpAppearanceController: void setTrackingHeadsUp(com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<android.os.BinderCallsStatsPerfTest: void timeCallSession_1000_buckets_cpuNotRecorded()>
<com.android.server.input.InputManagerService: boolean injectInputEvent(android.view.InputEvent,int)>
<com.android.server.accessibility.MagnificationController: int getIdOfLastServiceToMagnify(int)>
<com.android.systemui.statusbar.notification.AnimatableProperty: com.android.systemui.statusbar.notification.AnimatableProperty from(android.util.Property,int,int,int)>
<com.android.systemui.SysuiRestartReceiver: void onReceive(android.content.Context,android.content.Intent)>
<javax.microedition.khronos.opengles.GL10: void glColorMask(boolean,boolean,boolean,boolean)>
<com.android.server.stats.StatsCompanionService: void setAlarmForSubscriberTriggering(long)>
<com.android.systemui.statusbar.phone.StatusBarIconControllerImpl: void setIcon(java.lang.String,com.android.internal.statusbar.StatusBarIcon)>
<android.app.backup.BackupUtilsTest: void testIsFileSpecifiedInPathList_whenDirectoryAndPathListHasParent()>
<com.android.printservice.recommendation.util.PrinterHashMap: java.util.ArrayList getPrinterAddresses()>
<com.android.systemui.statusbar.phone.SystemUIDialog: void setShowForAllUsers(boolean)>
<com.android.server.infra.AbstractPerUserSystemService: java.lang.CharSequence getServiceLabelLocked()>
<com.android.systemui.qs.TouchAnimator.Listener: void onAnimationAtEnd()>
<com.android.server.usb.descriptors.UsbDeviceDescriptor: java.lang.String getMfgString(com.android.server.usb.descriptors.UsbDescriptorParser)>
<com.android.systemui.volume.SafetyWarningDialog: void onStart()>
<com.android.server.NetworkManagementService: void setUidMeteredNetworkWhitelist(int,boolean)>
<com.android.systemui.statusbar.FlingAnimationUtils: void <init>(android.content.Context,float,float,float,float)>
<com.android.photos.views.TiledImageView: void setTileSource(com.android.photos.views.TiledImageRenderer.TileSource,java.lang.Runnable)>
<com.android.systemui.power.EnhancedEstimatesImpl: boolean getLowWarningEnabled()>
<com.android.systemui.recents.LegacyRecentsImpl: void dump(java.io.PrintWriter)>
<com.android.systemui.statusbar.notification.row.ExpandableView: void onHeightReset()>
<android.widget.TextViewOnMeasurePerfTest: void testMeasure_Unspecified()>
<com.android.systemui.statusbar.StatusBarMobileView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.usb.descriptors.UsbASFormat: com.android.server.usb.descriptors.UsbDescriptor allocDescriptor(com.android.server.usb.descriptors.UsbDescriptorParser,com.android.server.usb.descriptors.ByteStream,int,byte,byte,int)>
<com.android.gallery3d.exif.ExifInterface: java.util.List getTagsForIfdId(int)>
<com.android.server.usb.descriptors.tree.UsbDescriptorsTreeNode: void report(com.android.server.usb.descriptors.report.ReportCanvas)>
<com.android.systemui.qs.QSTileHost: void onPluginConnected(com.android.systemui.plugins.qs.QSFactory,android.content.Context)>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: void setFirstInSection(boolean)>
<com.android.systemui.VendorServices: void start()>
<com.android.systemui.recents.views.TaskViewHeader: void onTaskViewSizeChanged(int,int)>
<javax.obex.Operation: java.lang.String getEncoding()>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationCustomViewWrapper: boolean shouldClearBackgroundOnReapply()>
<com.android.server.NsdService: android.os.Messenger getMessenger()>
<com.android.systemui.statusbar.car.hvac.TemperatureView: int getAreaId()>
<com.android.systemui.qs.QSTileRevealController: void setExpansion(float)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void onBootCompleted()>
<com.android.systemui.pip.phone.PipTouchHandler: void onMovementBoundsChanged(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,boolean,boolean,int)>
<com.android.server.PreloadsFileCacheExpirationJobService: boolean onStopJob(android.app.job.JobParameters)>
<com.android.server.usb.descriptors.report.ReportCanvas: void dumpHexArray(byte[],java.lang.StringBuilder)>
<com.android.systemui.recents.RecentsActivity: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.server.notification.NotificationManagerService.NotificationListeners: android.content.pm.ActivityInfo.Config getConfig()>
<android.text.NonEditableTextGenerator.RandomCharSequenceGenerator: java.lang.CharSequence buildLatinWord()>
<com.android.server.location.ContextHubService: android.hardware.location.ContextHubInfo getContextHubInfo(int)>
<com.android.systemui.MultiListLayout: void setOutsideTouchListener(android.view.View.OnClickListener)>
<com.android.systemui.assist.AssistOrbView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.accounts.AccountManagerService: void getAccountByTypeAndFeatures(android.accounts.IAccountManagerResponse,java.lang.String,java.lang.String[],java.lang.String)>
<com.android.server.pm.PackageInstallerService: android.content.pm.IPackageInstallerSession openSession(int)>
<com.android.systemui.statusbar.policy.KeyguardMonitor: long getKeyguardFadingAwayDuration()>
<android.widget.TextViewOnMeasurePerfTest: void testMeasure_AtMost()>
<com.android.externalstorage.ExternalStorageProvider: java.io.File getFileForDocId(java.lang.String,boolean)>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: float getDeltaPForY(int,int)>
<com.android.keyguard.clock.DefaultClockController: void setTextColor(int)>
<com.android.server.input.InputManagerService: android.hardware.input.KeyboardLayout[] getKeyboardLayouts()>
<com.android.settingslib.accessibility.AccessibilityUtils: java.lang.String getShortcutTargetServiceComponentNameString(android.content.Context,int)>
<android.net.ip.InterfaceController: boolean clearIPv4Address()>
<com.android.localtransport.LocalTransport: java.lang.String dataManagementLabel()>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void onCancelClicked()>
<com.android.systemui.pip.phone.PipManager: void showPictureInPictureMenu()>
<com.android.systemui.keyboard.KeyboardUI: void start()>
<com.android.keyguard.KeyguardSimPinView: int getPromptReasonStringRes(int)>
<com.android.server.display.DisplayAdapter.Listener: void onDisplayDeviceEvent(com.android.server.display.DisplayDevice,int)>
<com.android.server.content.SyncManager: java.lang.String[] getSyncAdapterPackagesForAuthorityAsUser(java.lang.String,int)>
<com.android.gallery3d.exif.ExifInterface: boolean addDateTimeStampTag(int,long,java.util.TimeZone)>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationViewWrapper: boolean shouldClipToRounding(boolean,boolean)>
<com.android.server.rollback.AppDataRollbackHelper: void snapshotAppData(int,android.content.rollback.PackageRollbackInfo)>
<android.net.shared.InitialConfiguration: java.util.function.Predicate not(java.util.function.Predicate)>
<com.android.systemui.plugins.qs.QSTileView: void onStateChanged(com.android.systemui.plugins.qs.QSTile.State)>
<com.android.server.biometrics.face.FaceService: java.lang.String getLockoutResetIntent()>
<com.android.systemui.util.NotificationChannels: void start()>
<com.android.systemui.egg.MLand: void <init>(android.content.Context,android.util.AttributeSet,int)>
<javax.microedition.khronos.opengles.GL10: void glTranslatef(float,float,float)>
<com.android.systemui.volume.SafetyWarningDialog: boolean onKeyUp(int,android.view.KeyEvent)>
<com.android.server.notification.SnoozeHelper: void <init>(android.content.Context,com.android.server.notification.SnoozeHelper.Callback,com.android.server.notification.ManagedServices.UserProfiles)>
<com.android.systemui.statusbar.phone.StatusBar: android.view.ViewGroup getBouncerContainer()>
<com.android.systemui.qs.QSScrollLayout: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.systemui.statusbar.car.CarFacetButton: java.lang.String[] getFacetPackages()>
<com.android.server.biometrics.fingerprint.FingerprintConstants: int actionBiometricEnroll()>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: void setBelowSpeedBump(boolean)>
<com.android.systemui.recents.views.FixedSizeImageView: void requestLayout()>
<com.android.server.policy.WindowManagerPolicy.WindowState: boolean isLetterboxedOverlappingWith(android.graphics.Rect)>
<com.android.systemui.statusbar.notification.collection.NotificationRowBinderImpl: void setUpWithPresenter(com.android.systemui.statusbar.NotificationPresenter,com.android.systemui.statusbar.notification.stack.NotificationListContainer,com.android.systemui.statusbar.policy.HeadsUpManager,com.android.systemui.statusbar.notification.row.NotificationContentInflater.InflationCallback,com.android.systemui.statusbar.notification.collection.NotificationRowBinderImpl.BindRowCallback)>
<com.android.settingslib.CustomEditTextPreference: void onBindDialogView(android.view.View)>
<com.android.server.om.DumpState: int getUserId()>
<com.android.server.usb.UsbAlsaDevice: void dump(com.android.internal.util.dump.DualDumpOutputStream,java.lang.String,long)>
<android.media.MediaPlayer2: byte[] provideDrmKeyResponse(android.media.DataSourceDesc,byte[],byte[])>
<com.android.server.display.BrightnessTracker: void dump(java.io.PrintWriter)>
<com.android.server.TelephonyRegistry: void notifyOtaspChanged(int,int)>
<com.android.server.media.MediaSessionRecord: long getFlags()>
<com.android.server.Watchdog: void resumeWatchingCurrentThread(java.lang.String)>
<com.android.systemui.recents.OverviewProxyService: void <init>(android.content.Context,com.android.systemui.statusbar.policy.DeviceProvisionedController,com.android.systemui.statusbar.NavigationBarController,com.android.systemui.statusbar.phone.NavigationModeController,com.android.systemui.statusbar.phone.StatusBarWindowController)>
<com.android.keyguard.KeyguardStatusView: void onFinishInflate()>
<com.android.gallery3d.glrenderer.BasicTexture: int getWidth()>
<com.android.server.notification.ZenModeHelper: void onUserUnlocked(int)>
<com.android.settingslib.media.InfoMediaManager: void startScan()>
<com.android.systemui.statusbar.notification.NotificationDozeHelper: android.graphics.ColorMatrix getGrayscaleColorMatrix()>
<com.android.settingslib.drawer.Tile: java.lang.String getDescription()>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: void createMenu(android.view.ViewGroup,android.service.notification.StatusBarNotification)>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: boolean isInitialized()>
<com.android.systemui.statusbar.phone.NavigationBarView: void onFinishInflate()>
<com.android.server.biometrics.BiometricServiceBase: void cancelAuthenticationInternal(android.os.IBinder,java.lang.String,int,int,int,boolean)>
<com.android.settingslib.CustomDialogPreference.CustomPreferenceDialogFragment: void onBindDialogView(android.view.View)>
<com.android.server.policy.WindowManagerPolicy.WindowManagerFuncs: void lockDeviceNow()>
<com.android.server.locksettings.LockSettingsService: boolean havePattern(int)>
<android.media.MediaPlayer2.DrmInfo: java.util.List getSupportedSchemes()>
<com.android.server.audio.AudioService: void setMasterMute(boolean,int,java.lang.String,int)>
<com.android.uiautomator.core.UiAutomatorBridge: android.view.accessibility.AccessibilityEvent executeCommandAndWaitForAccessibilityEvent(java.lang.Runnable,android.app.UiAutomation.AccessibilityEventFilter,long)>
<com.android.packageinstaller.handheld.ErrorDialogFragment: void onDismiss(android.content.DialogInterface)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setJustClicked(boolean)>
<com.android.systemui.statusbar.phone.NavigationBarFragment: void setAutoHideController(com.android.systemui.statusbar.phone.AutoHideController)>
<com.android.server.policy.PhoneWindowManager: void systemBooted()>
<com.android.systemui.statusbar.phone.RotationButton: boolean isVisible()>
<com.android.server.AnyMotionDetector: void <init>(android.os.PowerManager,android.os.Handler,android.hardware.SensorManager,com.android.server.AnyMotionDetector.DeviceIdleCallback,float)>
<com.android.server.storage.DeviceStorageMonitorInternal: boolean isMemoryLow()>
<com.android.systemui.util.leak.GarbageMonitor.MemoryTile: long getHeapLimit()>
<com.android.systemui.HardwareUiLayout: void onDetachedFromWindow()>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper: boolean isOnAffordanceIcon(float,float)>
<javax.microedition.khronos.opengles.GL10: void glRotatef(float,float,float,float)>
<com.android.systemui.qs.AutoAddTracker: void <init>(android.content.Context)>
<com.android.systemui.util.AsyncSensorManager: void unregisterPluginListener(com.android.systemui.plugins.SensorManagerPlugin.Sensor,com.android.systemui.plugins.SensorManagerPlugin.SensorEventListener)>
<com.android.systemui.statusbar.policy.NetworkController.IconState: void <init>(boolean,int,java.lang.String)>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: void setFocusState(int)>
<com.android.photos.views.TiledImageRenderer.TileSource: int getImageWidth()>
<com.android.server.audio.AudioService: void adjustStreamVolume(int,int,int,java.lang.String)>
<com.android.keyguard.KeyguardAbsKeyInputView: void onPause()>
<com.android.systemui.statusbar.phone.LightBarController: void onSystemUiVisibilityChanged(int,int,int,android.graphics.Rect,android.graphics.Rect,boolean,int,boolean)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean performDismissWithBlockingHelper(boolean)>
<com.android.systemui.qs.tileimpl.QSTileBaseView: void init(com.android.systemui.plugins.qs.QSTile)>
<com.android.systemui.classifier.FalsingManagerImpl: void onBouncerShown()>
<javax.obex.ServerOperation: void abort()>
<com.android.systemui.statusbar.notification.row.NotificationContentView: android.view.NotificationHeaderView getVisibleNotificationHeader()>
<com.android.systemui.statusbar.AlertingNotificationManager.AlertEntry: void updateEntry(boolean)>
<com.android.systemui.statusbar.notification.ActionListTransformState: com.android.systemui.statusbar.notification.ActionListTransformState obtain()>
<com.android.packageinstaller.UninstallerActivity: void onCreate(android.os.Bundle)>
<com.android.media.tv.remoteprovider.TvRemoteProvider: void sendPointerDown(android.os.IBinder,int,int,int)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: com.android.systemui.ExpandHelper.Callback getExpandHelperCallback()>
<com.android.systemui.statusbar.phone.NavigationBarEdgePanel: void <init>(android.content.Context)>
<com.android.settingslib.applications.DefaultAppInfo: void <init>(android.content.Context,android.content.pm.PackageManager,int,android.content.pm.PackageItemInfo,java.lang.String,boolean)>
<com.android.systemui.settings.CurrentUserTracker: void stopTracking()>
<com.android.systemui.statusbar.policy.SmartReplyView: com.android.systemui.statusbar.policy.SmartReplyView.LayoutParams generateDefaultLayoutParams()>
<com.android.server.location.GnssStatusListenerHelper: void unregisterFromService()>
<com.android.systemui.statusbar.notification.stack.AmbientState: void setHideSensitive(boolean)>
<com.android.systemui.statusbar.notification.row.AppOpsInfo.OnSettingsClickListener: void onClick(android.view.View,java.lang.String,int,android.util.ArraySet)>
<android.os.PackageManagerPerfTest: void testCheckPermissionDoesntExist()>
<com.android.systemui.doze.DozeSensors: void setTouchscreenSensorsListening(boolean)>
<com.android.server.accessibility.ActionReplacingCallback: void setFindAccessibilityNodeInfosResult(java.util.List,int)>
<com.android.systemui.shared.system.InputMonitorCompat: com.android.systemui.shared.system.InputMonitorCompat fromBundle(android.os.Bundle,java.lang.String)>
<com.android.server.accounts.AccountManagerService: void removeAccountInternal(android.accounts.Account)>
<com.android.uiautomator.core.UiDevice: boolean pressRecentApps()>
<com.android.preload.ClientUtils: void <init>(int)>
<com.android.settingslib.media.InfoMediaDevice: boolean isConnected()>
<android.media.Session2Command: int getCommandCode()>
<com.android.aapt.namespace.split.SplitActivity: void onCreate(android.os.Bundle)>
<com.android.packageinstaller.wear.WearPackageInstallerService: int onStartCommand(android.content.Intent,int,int)>
<com.android.systemui.qs.external.TileServices: void freeService(com.android.systemui.qs.external.CustomTile,com.android.systemui.qs.external.TileServiceManager)>
<com.android.systemui.qs.SlashDrawable: void setAlpha(int)>
<com.android.systemui.globalactions.GlobalActionsGridLayout: void removeAllListViews()>
<com.android.systemui.qs.tileimpl.QSTileImpl: android.metrics.LogMaker populate(android.metrics.LogMaker)>
<com.android.systemui.pip.phone.PipDismissViewController: void <init>(android.content.Context)>
<com.android.settingslib.deviceinfo.StorageManagerVolumeProvider: android.os.storage.VolumeInfo findEmulatedForPrivate(android.os.storage.VolumeInfo)>
<com.android.systemui.globalactions.GlobalActionsGridLayout: void updateSeparatedItemSize()>
<com.android.systemui.assist.AssistOrbView: void onDraw(android.graphics.Canvas)>
<com.android.systemui.statusbar.phone.MultiUserSwitch: void onClick(android.view.View)>
<javax.obex.Operation: java.lang.String getType()>
<com.android.settingslib.core.ConfirmationDialogController: void showConfirmationDialog(androidx.preference.Preference)>
<com.android.server.pm.PackageManagerServiceUtils: java.util.List getPackagesForDexopt(java.util.Collection,com.android.server.pm.PackageManagerService,boolean)>
<com.android.systemui.statusbar.notification.TransformState: void recycle()>
<com.android.systemui.statusbar.notification.NotificationUtils: int getFontScaledHeight(android.content.Context,int)>
<com.android.keyguard.NumPadKey: void onLayout(boolean,int,int,int,int)>
<com.android.gallery3d.exif.ExifInterface: java.io.OutputStream getExifWriterStream(java.lang.String)>
<com.android.systemui.egg.MLand: void onDraw(android.graphics.Canvas)>
<com.android.systemui.statusbar.policy.ConfigurationController.ConfigurationListener: void onConfigChanged(android.content.res.Configuration)>
<com.android.preload.actions.ShowDataAction: void <init>(com.android.preload.DumpTableModel)>
<com.android.systemui.statusbar.policy.BluetoothController: java.util.List getConnectedDevices()>
<com.android.settingslib.drawer.Tile: java.lang.CharSequence getSummary(android.content.Context)>
<com.android.server.pm.permission.BasePermission: void setSourcePackageSetting(com.android.server.pm.PackageSettingBase)>
<com.android.systemui.bubbles.BubbleStackView: void onBubbleDragged(android.view.View,float,float)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void onDetachedFromWindow()>
<com.android.server.notification.NotificationRecord: void addAdjustment(android.service.notification.Adjustment)>
<android.net.shared.ProvisioningConfiguration.Builder: android.net.shared.ProvisioningConfiguration.Builder withStableMacAddress()>
<com.android.systemui.statusbar.phone.NotificationGroupManager: void onHeadsUpStateChanged(com.android.systemui.statusbar.notification.collection.NotificationEntry,boolean)>
<com.android.server.display.utils.Plog: com.android.server.display.utils.Plog start(java.lang.String)>
<com.android.server.LocationManagerService: java.lang.String getFromLocation(double,double,int,android.location.GeocoderParams,java.util.List)>
<com.android.systemui.ScreenDecorations: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.server.pm.PackageManagerService: int[] getPackageGids(java.lang.String,int,int)>
<com.android.uiautomator.core.UiScrollable: boolean scrollIntoView(com.android.uiautomator.core.UiSelector)>
<com.android.server.pm.PackageManagerServiceUtils: void enforceShellRestriction(java.lang.String,int,int)>
<com.android.systemui.statusbar.policy.CastControllerImpl: void stopCasting(com.android.systemui.statusbar.policy.CastController.CastDevice)>
<com.android.media.remotedisplay.RemoteDisplayProvider: void removeDisplay(com.android.media.remotedisplay.RemoteDisplay)>
<com.android.systemui.classifier.FalsingLog: void i(java.lang.String,java.lang.String)>
<com.android.systemui.volume.VolumeDialogControllerImpl: void setActiveStream(int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void clearProfileOwner(android.content.ComponentName)>
<com.google.android.startop.iorap.PackageEvent: void writeToParcel(android.os.Parcel,int)>
<com.android.server.pm.IntentFilterVerificationState: void setState(int)>
<android.media.DataSourceDesc.Builder: android.media.DataSourceDesc.Builder setMediaId(java.lang.String)>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: void onAppearAnimationFinished(boolean)>
<com.android.server.locksettings.LockSettingsService: byte[] startRecoverySessionWithCertPath(java.lang.String,java.lang.String,android.security.keystore.recovery.RecoveryCertPath,byte[],byte[],java.util.List)>
<com.android.systemui.recents.views.RecentsView: void onBusEvent(com.android.systemui.recents.events.ui.DraggingInRecentsEndedEvent)>
<com.android.systemui.statusbar.policy.KeyButtonDrawable: boolean canAnimate()>
<com.android.systemui.recents.views.TaskStackView: com.android.systemui.recents.views.TaskStackLayoutAlgorithm getStackAlgorithm()>
<com.android.systemui.shared.recents.view.AppTransitionAnimationSpecsFuture: android.view.IAppTransitionAnimationSpecsFuture getFuture()>
<com.android.systemui.recents.RecentsImplementation: void onAppTransitionFinished()>
<com.android.systemui.statusbar.StatusBarIconView: boolean isInShelf()>
<com.android.server.pm.UserRestrictionsUtils: boolean restrictionsChanged(android.os.Bundle,android.os.Bundle,java.lang.String[])>
<com.android.systemui.statusbar.policy.SmartReplyConstants: void <init>(android.os.Handler,android.content.Context)>
<com.android.systemui.SwipeHelper.Callback: int getConstrainSwipeStartPosition()>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: void updateBackground()>
<com.android.systemui.pip.tv.PipManager.Listener: void onPipActivityClosed()>
<com.android.server.pm.PackageManagerService: byte[] getIntentFilterVerificationBackup(int)>
<com.android.systemui.statusbar.phone.NavigationBarFragment: void <init>(com.android.systemui.statusbar.policy.AccessibilityManagerWrapper,com.android.systemui.statusbar.policy.DeviceProvisionedController,com.android.internal.logging.MetricsLogger,com.android.systemui.assist.AssistManager,com.android.systemui.recents.OverviewProxyService,com.android.systemui.statusbar.phone.NavigationModeController,com.android.systemui.plugins.statusbar.StatusBarStateController)>
<com.android.systemui.statusbar.CommandQueue: void onBiometricAuthenticated(boolean,java.lang.String)>
<com.android.server.location.AbstractLocationProvider: void reportLocation(android.location.Location)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.statusbar.policy.SensorPrivacyController: boolean isSensorPrivacyEnabled()>
<com.android.server.pm.dex.DexoptOptions: int getCompilationReason()>
<com.android.dynsystem.InstallationAsyncTask.InstallStatusListener: void onCancelled()>
<com.android.systemui.statusbar.policy.KeyButtonRipple: void setGlowAlpha(float)>
<com.android.powermodel.component.ModemProfile: float[] getTxMa()>
<com.android.systemui.qs.TouchAnimator.Builder: com.android.systemui.qs.TouchAnimator.Builder setListener(com.android.systemui.qs.TouchAnimator.Listener)>
<com.android.server.policy.PhoneWindowManager: void enableKeyguard(boolean)>
<com.android.systemui.statusbar.notification.ProgressTransformState: void recycle()>
<com.android.nfc_extras.EeNfcDisabledException: void <init>(java.lang.String)>
<com.android.server.search.SearchManagerService: android.content.ComponentName getWebSearchActivity()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void lockNow(int,boolean)>
<com.android.settingslib.search.SearchIndexableResources: void addIndex(java.lang.Class)>
<com.android.server.ConnectivityService: android.net.NetworkInfo getActiveNetworkInfo()>
<com.android.systemui.classifier.FalsingLog: void log(java.lang.String,java.lang.String,java.lang.String)>
<android.perftests.utils.PerfStatusReporter: org.junit.runners.model.Statement apply(org.junit.runners.model.Statement,org.junit.runner.Description)>
<com.android.server.notification.NotificationRecord: void setGlobalSortKey(java.lang.String)>
<com.android.server.AttributeCache.Entry: void <init>(android.content.Context,android.content.res.TypedArray)>
<com.android.systemui.statusbar.policy.RemoteInputView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.gallery3d.common.Utils: int ceilLog2(float)>
<com.android.systemui.statusbar.phone.NotificationsQuickSettingsContainer: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.systemui.statusbar.phone.StatusBar: void postAnimateOpenPanels()>
<com.android.settingslib.net.NetworkCycleData.Builder: com.android.settingslib.net.NetworkCycleData build()>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void onStartedWakingUp()>
<com.android.systemui.classifier.ProximityClassifier: void onSensorChanged(android.hardware.SensorEvent)>
<android.processor.view.inspector.InspectableClassModel.IntFlagEntry: void <init>(int,java.lang.String)>
<com.android.server.locksettings.recoverablekeystore.PlatformKeyManager: com.android.server.locksettings.recoverablekeystore.PlatformDecryptionKey getDecryptKey(int)>
<com.android.systemui.charging.WirelessChargingAnimation: void show()>
<com.android.systemui.statusbar.notification.TransformState: void appear(float,com.android.systemui.statusbar.TransformableView)>
<com.android.location.provider.LocationProviderBase: int onGetStatus(android.os.Bundle)>
<com.android.systemui.statusbar.phone.KeyguardStatusBarView: void onDetachedFromWindow()>
<com.android.systemui.qs.external.QSTileServiceWrapper: boolean onTileAdded()>
<com.android.server.soundtrigger.SoundTriggerService.LocalSoundTriggerService: int stopRecognition(int,android.hardware.soundtrigger.IRecognitionStatusCallback)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onReset(com.android.systemui.statusbar.notification.row.ExpandableView)>
<com.android.systemui.stackdivider.WindowManagerProxy: void dismissDockedStack()>
<android.app.backup.BackupUtilsTest: void testIsFileSpecifiedInPathList_whenFileAndPathListHasOtherFile()>
<com.android.server.pm.permission.PermissionManagerServiceInternal: java.lang.String[] getAppOpPermissionPackages(java.lang.String)>
<com.android.gallery3d.exif.ExifInterface: byte[] getThumbnailBytes()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexGenfv(int,int,float[],int)>
<com.android.server.AttributeCache: void removePackage(java.lang.String)>
<com.android.server.pm.permission.BasePermission: boolean isHardOrSoftRestricted()>
<com.android.server.DropBoxManagerService: void <init>(android.content.Context)>
<com.android.systemui.power.PowerNotificationWarnings: void dismissInvalidChargerWarning()>
<com.android.server.pm.PolicyComparator: int compare(com.android.server.pm.Policy,com.android.server.pm.Policy)>
<com.android.systemui.statusbar.notification.stack.AmbientState: void <init>(android.content.Context,com.android.systemui.statusbar.notification.stack.StackScrollAlgorithm.SectionProvider)>
<com.android.systemui.statusbar.notification.row.NotificationSnooze: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.android.systemui.stackdivider.DividerView: boolean onTouch(android.view.View,android.view.MotionEvent)>
<com.android.systemui.statusbar.policy.UserSwitcherController.BaseUserAdapter: void switchTo(com.android.systemui.statusbar.policy.UserSwitcherController.UserRecord)>
<com.android.keyguard.KeyguardAbsKeyInputView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.notification.NotificationManagerService.NotificationListeners: void notifyUnhiddenLocked(java.util.List)>
<com.android.systemui.qs.PagedTileLayout: void onRtlPropertiesChanged(int)>
<com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.settingslib.development.AbstractLogpersistPreferenceController: void setLogpersistOff(boolean)>
<com.android.systemui.statusbar.ViewTransformationHelper: void transformTo(com.android.systemui.statusbar.TransformableView,float)>
<com.android.server.display.WifiDisplayController.Listener: void onDisplayDisconnected()>
<com.android.systemui.statusbar.phone.StatusBar: android.view.View getStatusBarView()>
<com.android.server.usb.descriptors.ByteStream: int unpackUsbInt()>
<com.android.server.NetworkScorerAppManager.SettingsFacade: int getInt(android.content.Context,java.lang.String,int)>
<android.net.netlink.StructInetDiagMsg: android.net.netlink.StructInetDiagMsg parse(java.nio.ByteBuffer)>
<com.android.systemui.pip.phone.PipTouchState: boolean startedDragging()>
<android.processor.view.inspector.InspectableClassModel.Property: void setAttributeId(int)>
<com.android.gallery3d.exif.ExifTag: boolean setValue(com.android.gallery3d.exif.Rational[])>
<com.android.server.pm.PackageInstallerSession: com.android.server.pm.PackageInstallerSession readFromXml(org.xmlpull.v1.XmlPullParser,com.android.server.pm.PackageInstallerService.InternalCallback,android.content.Context,com.android.server.pm.PackageManagerService,android.os.Looper,com.android.server.pm.StagingManager,java.io.File,com.android.server.pm.PackageSessionProvider)>
<com.android.systemui.statusbar.StatusBarIconView: int getVisibleState()>
<com.android.server.pm.Installer: void setWarnIfHeld(java.lang.Object)>
<com.android.keyguard.KeyguardUpdateMonitor: void dispatchStartedWakingUp()>
<com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer: float getIncreasedPaddingAmount()>
<com.android.systemui.statusbar.notification.NotificationUtils: float getRelativeYOffset(android.view.View,android.view.View)>
<com.android.server.notification.NotificationRecord: void updateNotificationChannel(android.app.NotificationChannel)>
<com.android.server.audio.AudioService: int getRingerModeExternal()>
<com.android.uiautomator.core.UiAutomatorBridge: android.view.Display getDefaultDisplay()>
<com.android.systemui.settings.ToggleSeekBar: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.statusbar.phone.StatusBar: boolean onMenuPressed()>
<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice getSystemAvailableFeatures()>
<com.android.server.locksettings.recoverablekeystore.KeySyncUtils: java.util.Map encryptKeysWithRecoveryKey(javax.crypto.SecretKey,java.util.Map)>
<com.android.server.midi.MidiService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.statusbar.DragDownHelper.DragDownCallback: boolean onDraggedDown(android.view.View,int)>
<com.android.keyguard.KeyguardStatusView: void setDarkAmount(float)>
<com.android.systemui.statusbar.phone.StatusBarWindowController: void <init>(android.content.Context,android.view.WindowManager,android.app.IActivityManager,com.android.systemui.statusbar.phone.DozeParameters)>
<com.android.systemui.biometrics.BiometricDialogView: void <init>(android.content.Context,com.android.systemui.biometrics.DialogViewCallback)>
<com.android.systemui.globalactions.GlobalActionsColumnLayout: void snapToPowerButton()>
<com.android.server.ConnectivityService: void startTethering(int,android.os.ResultReceiver,boolean,java.lang.String)>
<com.android.server.notification.NotificationManagerService: void reportSeen(com.android.server.notification.NotificationRecord)>
<com.android.printservice.recommendation.plugin.hp.ServiceRecommendationPlugin: boolean matchesCriteria(java.lang.String,android.net.nsd.NsdServiceInfo)>
<com.android.packageinstaller.wear.WearPackageUtil: java.io.File getIconFile(android.content.Context,java.lang.String)>
<com.android.systemui.qs.tiles.UserDetailItemView: boolean hasOverlappingRendering()>
<com.android.server.biometrics.face.FaceService: int getLockoutMode()>
<com.android.systemui.statusbar.notification.row.ExpandableView: void setHideSensitiveForIntrinsicHeight(boolean)>
<com.android.systemui.classifier.FalsingManagerImpl: void onTrackingStarted(boolean)>
<com.android.systemui.DependencyProvider: com.android.internal.logging.MetricsLogger provideMetricsLogger()>
<com.android.systemui.settings.CurrentUserTracker: void <init>(android.content.Context)>
<com.android.systemui.plugins.GlobalActionsPanelPlugin.PanelViewController: void onDismissed()>
<com.android.server.policy.WindowManagerPolicy.RotationSource: int getProposedRotation()>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: boolean interceptMediaKey(android.view.KeyEvent)>
<com.android.keyguard.KeyguardPINView: void startAppearAnimation()>
<com.android.server.input.InputManagerService: void removeKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,java.lang.String)>
<com.android.systemui.fragments.FragmentHostManager: com.android.systemui.fragments.FragmentHostManager get(android.view.View)>
<com.android.companiondevicemanager.DeviceDiscoveryService: android.os.IBinder onBind(android.content.Intent)>
<com.android.server.usb.UsbHostManager: void <init>(android.content.Context,com.android.server.usb.UsbAlsaManager,com.android.server.usb.UsbSettingsManager)>
<com.android.gallery3d.common.Utils: java.lang.Object checkNotNull(java.lang.Object)>
<com.android.systemui.statusbar.KeyboardShortcutsReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.android.settingslib.CustomDialogPreferenceCompat.CustomPreferenceDialogFragment: void onDialogClosed(boolean)>
<com.android.settingslib.development.AbstractLogdSizePreferenceController: void writeLogdSizeOption(java.lang.Object)>
<com.android.systemui.pip.phone.PipAccessibilityInteractionConnection: void <init>(com.android.systemui.pip.phone.PipMotionHelper,com.android.systemui.pip.phone.PipAccessibilityInteractionConnection.AccessibilityCallbacks,android.os.Handler)>
<javax.microedition.khronos.opengles.GL10: void glTexParameterf(int,int,float)>
<com.android.server.pm.InstantAppResolver: android.content.Intent buildEphemeralInstallerIntent(android.content.Intent,android.content.Intent,android.content.Intent,java.lang.String,android.os.Bundle,java.lang.String,int,android.content.ComponentName,java.lang.String,boolean,java.util.List)>
<com.android.systemui.statusbar.phone.StatusBar: com.android.systemui.statusbar.NotificationPresenter getPresenter()>
<com.android.keyguard.clock.BubbleClockController: java.lang.String getTitle()>
<com.android.server.notification.NotificationRecord: void recordViewedSettings()>
<com.android.server.hdmi.HdmiCecMessage: void <init>(int,int,int,byte[])>
<com.android.server.IntentResolver: void removeFilter(android.content.IntentFilter)>
<com.android.uiautomator.core.UiObject: boolean dragTo(com.android.uiautomator.core.UiObject,int)>
<com.android.printspooler.model.MutexFileProvider: java.io.File acquireFile(com.android.printspooler.model.MutexFileProvider.OnReleaseRequestCallback)>
<com.android.server.LocationManagerService: java.lang.String getBestProvider(android.location.Criteria,boolean)>
<com.android.systemui.recents.model.TaskStack: void removeTask(com.android.systemui.shared.recents.model.Task,com.android.systemui.recents.utilities.AnimationProps,boolean)>
<com.android.systemui.statusbar.phone.StatusBar: void handleSystemKey(int)>
<com.android.systemui.fragments.FragmentHostManager: android.app.FragmentManager getFragmentManager()>
<com.android.systemui.statusbar.phone.PanelView: boolean canPanelBeCollapsed()>
<com.android.server.display.AmbientBrightnessStatsTracker: void add(int,float)>
<com.android.systemui.keyguard.Lifecycle: void dispatch(java.util.function.Consumer)>
<com.android.server.locksettings.recoverablekeystore.certificate.CertParsingException: void <init>(java.lang.String,java.lang.Exception)>
<com.android.systemui.qs.QSDetailItems.Callback: void onDetailItemDisconnect(com.android.systemui.qs.QSDetailItems.Item)>
<com.android.systemui.statusbar.notification.stack.AmbientState: void setShelf(com.android.systemui.statusbar.NotificationShelf)>
<com.android.systemui.Dependency: void clearDependencies()>
<android.widget.EditTextLongTextPerfTest: java.util.Collection cases()>
<com.android.systemui.egg.MLand: float clamp(float)>
<com.android.systemui.plugins.qs.DetailAdapter: int getMetricsCategory()>
<com.android.systemui.recents.views.RecentsEntrancePathInterpolator: float getInterpolation(float)>
<com.android.server.DeviceIdleController: boolean removeSystemPowerWhitelistAppInternal(java.lang.String)>
<com.android.server.statusbar.StatusBarManagerService: void onBiometricError(java.lang.String)>
<android.database.CursorWindowPerfTest: void loadInt_doubleRef()>
<com.android.systemui.statusbar.phone.StatusBar: void goToKeyguard()>
<com.android.settingslib.bluetooth.A2dpProfile: boolean accessProfileEnabled()>
<com.android.systemui.statusbar.policy.WifiSignalController: com.android.systemui.statusbar.policy.WifiSignalController.WifiState cleanState()>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm.VisibilityReport: void <init>(int,int)>
<com.android.server.display.BrightnessMappingStrategy: float convertToNits(int)>
<com.android.systemui.statusbar.phone.ContextualButtonGroup: void updateIcons()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: float getNotificationsTopY()>
<com.android.server.hdmi.HdmiCecLocalDevicePlayback: boolean canGoToStandby()>
<com.android.systemui.statusbar.phone.HeadsUpManagerPhone.AnimationStateHandler: void setHeadsUpGoingAwayAnimationsAllowed(boolean)>
<com.android.settingslib.bluetooth.A2dpProfile: boolean isPreferred(android.bluetooth.BluetoothDevice)>
<com.android.server.pm.IntentFilterVerificationState: boolean setVerifierResponse(int,int)>
<com.android.systemui.statusbar.notification.ActivityLaunchAnimator.ExpandAnimationParameters: int getBottom()>
<com.android.server.testing.shadows.ShadowSlog: int wtf(java.lang.String,java.lang.Throwable)>
<com.android.systemui.statusbar.phone.DozeParameters: boolean getPulseOnSigMotion()>
<com.android.server.usb.descriptors.report.UsbStrings: java.lang.String getAudioFormatName(int)>
<com.android.server.timezone.PackageManagerHelper: boolean receiverRegistered(android.content.Intent,java.lang.String)>
<com.android.server.location.LocationRequestStatistics.PackageStatistics: long getFastestIntervalMs()>
<com.android.settingslib.core.lifecycle.ObservableActivity: void onPause()>
<com.android.server.pm.Settings: com.android.server.pm.PackageSetting getDisabledSystemPkgLPr(java.lang.String)>
<com.android.server.notification.GlobalSortKeyComparator: int compare(com.android.server.notification.NotificationRecord,com.android.server.notification.NotificationRecord)>
<com.android.server.pm.permission.PermissionManagerServiceInternal.PermissionCallback: void onPermissionUpdated(int[],boolean)>
<com.android.server.security.VerityUtils.SetupResult: int getContentSize()>
<com.android.server.biometrics.fingerprint.FingerprintUtils: void renameBiometricForUser(android.content.Context,int,int,java.lang.CharSequence)>
<com.android.systemui.doze.DozeHost: void addCallback(com.android.systemui.doze.DozeHost.Callback)>
<com.android.server.adb.AdbService: void bootCompleted()>
<com.android.systemui.ExpandHelper.Callback: com.android.systemui.statusbar.notification.row.ExpandableView getChildAtPosition(float,float)>
<android.net.netlink.StructNdMsg: java.lang.String stringForNudFlags(byte)>
<javax.microedition.khronos.opengles.GL11: void glTexEnviv(int,int,java.nio.IntBuffer)>
<com.android.keyguard.clock.SettingsWrapper: java.lang.String getDockedClockFace(int)>
<com.android.systemui.volume.CarVolumeDialogImpl: void <init>(android.content.Context)>
<com.android.server.accessibility.AccessibilityManagerService: int addAccessibilityInteractionConnection(android.view.IWindow,android.view.accessibility.IAccessibilityInteractionConnection,java.lang.String,int)>
<com.android.systemui.volume.VolumeDialogControllerImpl: int getAudioManagerStreamMaxVolume(int)>
<com.android.media.remotedisplay.RemoteDisplayProvider: android.app.PendingIntent getSettingsPendingIntent()>
<com.android.keyguard.KeyguardSecurityView: com.android.keyguard.KeyguardSecurityCallback getCallback()>
<com.android.server.uri.UriGrantsManagerInternal: void grantUriPermission(int,java.lang.String,com.android.server.uri.GrantUri,int,com.android.server.uri.UriPermissionOwner,int)>
<com.android.systemui.statusbar.CastDrawable: boolean canApplyTheme()>
<com.android.server.locksettings.LockSettingsStrongAuth: void registerStrongAuthTracker(android.app.trust.IStrongAuthTracker)>
<com.android.server.usb.descriptors.UsbDescriptor: void postParse(com.android.server.usb.descriptors.ByteStream)>
<com.android.systemui.plugins.VolumeDialogController: void setStreamVolume(int,int)>
<android.view.ViewPerfTest: void testTwelveKeyInflate()>
<com.android.printservice.recommendation.plugin.hp.ServiceListener: void <init>(android.content.Context,com.android.printservice.recommendation.plugin.hp.ServiceListener.Observer,java.lang.String[])>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: boolean isFooterViewContentVisible()>
<com.android.settingslib.media.ConnectionRecordManager: void setConnectionRecord(android.content.Context,java.lang.String,int)>
<com.android.server.notification.SnoozeHelper: java.util.List getSnoozed()>
<android.media.MediaSession2.SessionCallback: void onDisconnected(android.media.MediaSession2,android.media.MediaSession2.ControllerInfo)>
<com.android.server.NetworkScorerAppManager.SettingsFacade: int getSecureInt(android.content.Context,java.lang.String,int)>
<com.android.systemui.classifier.Stroke: float getTotalLength()>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: void onInflationTaskFinished()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setHeadsUpIsVisible()>
<com.android.systemui.recents.views.SystemBarScrimViews: void onBusEvent(com.android.systemui.recents.events.activity.ConfigurationChangedEvent)>
<com.android.systemui.statusbar.policy.BluetoothController: void setBluetoothEnabled(boolean)>
<com.android.server.pm.dex.ArtManagerService: void clearAppProfiles(android.content.pm.PackageParser.Package)>
<com.android.systemui.statusbar.notification.row.NotificationUndoLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.testing.shadows.ShadowSlog: void wtfQuiet(java.lang.String,java.lang.String)>
<javax.obex.ServerOperation: int getResponseCode()>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: com.android.systemui.statusbar.policy.NetworkController.AccessPointController getAccessPointController()>
<com.android.packageinstaller.television.ErrorFragment: int onProvideTheme()>
<com.android.server.usb.descriptors.report.ReportCanvas: void closeParagraph()>
<com.android.server.textservices.TextServicesManagerService: android.view.textservice.SpellCheckerInfo[] getEnabledSpellCheckers(int)>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: java.util.Set getBondedDevices()>
<android.media.MediaPlayer2.EventCallback: void onInfo(android.media.MediaPlayer2,android.media.DataSourceDesc,int,int)>
<com.android.settingslib.users.AppRestrictionsHelper.OnDisableUiForPackageListener: void onDisableUiForPackage(java.lang.String)>
<com.android.server.policy.WindowManagerPolicy.WindowState: int getBaseType()>
<com.android.server.biometrics.face.FaceService: boolean checkAppOps(int,java.lang.String)>
<com.android.uiautomator.core.ShellUiAutomatorBridge: int getRotation()>
<com.android.server.statusbar.StatusBarManagerInternal: void setTopAppHidesStatusBar(boolean)>
<com.android.systemui.doze.DozeSensors: void setListening(boolean)>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: void onTouchStart()>
<com.android.systemui.statusbar.StatusBarWifiView: void setVisibleState(int,boolean)>
<com.android.systemui.globalactions.GlobalActionsComponent: void start()>
<com.android.settingslib.drawer.DashboardCategory: int describeContents()>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage: android.security.keystore.recovery.KeyChainSnapshot get(int)>
<com.android.server.appwidget.AppWidgetService: void onStart()>
<com.android.systemui.stackdivider.DividerView: boolean isHorizontalDivision()>
<android.media.MediaPlayer2.EventCallback: void onTimedText(android.media.MediaPlayer2,android.media.DataSourceDesc,android.media.TimedText)>
<com.android.settingslib.drawable.UserIconDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>
<com.android.server.location.LocationBlacklist: boolean isBlacklisted(java.lang.String)>
<com.android.systemui.recents.TriangleShape: void getOutline(android.graphics.Outline)>
<javax.microedition.khronos.opengles.GL10: void glClearDepthf(float)>
<com.android.server.contentcapture.ContentCaptureManagerService: void onSettingsChanged(int,java.lang.String)>
<com.android.server.webkit.WebViewUpdateService: void <init>(android.content.Context)>
<com.android.server.policy.PhoneWindowManager: void dump(java.lang.String,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.DependencyProvider: android.os.Handler provideBgHandler(android.os.Looper)>
<com.android.systemui.recents.RecentsImplProxy: void toggleRecents(int)>
<com.android.server.infra.FrameworkResourcesServiceNameResolver: void setOnTemporaryServiceNameChangedCallback(com.android.server.infra.ServiceNameResolver.NameResolverListener)>
<com.android.systemui.statusbar.phone.ObservableScrollView: void setListener(com.android.systemui.statusbar.phone.ObservableScrollView.Listener)>
<com.android.server.media.MediaSessionRecord: int getPlaybackType()>
<com.android.systemui.usb.UsbContaminantActivity: void onWindowAttributesChanged(android.view.WindowManager.LayoutParams)>
<com.android.systemui.qs.tileimpl.QSTileImpl.AnimationIcon: void <init>(int,int)>
<com.android.keyguard.KeyguardSecurityViewFlipper: void showUsabilityHint()>
<com.android.uiautomator.core.UiDevice: boolean pressDPadUp()>
<com.android.server.NetworkManagementService: android.net.NetworkStats getNetworkStatsSummaryXt()>
<com.android.server.infra.AbstractMasterSystemService: com.android.server.infra.AbstractPerUserSystemService newServiceLocked(int,boolean)>
<com.android.server.accessibility.AccessibilityManagerService: void ensureWindowsAvailableTimed()>
<com.android.photos.views.BlockingGLTextureView: void onSurfaceTextureUpdated(android.graphics.SurfaceTexture)>
<com.android.systemui.util.AutoMarqueeTextView: void onDetachedFromWindow()>
<android.net.ip.IIpClient: void setMulticastFilter(boolean)>
<com.android.systemui.statusbar.phone.StatusBar: void dismissKeyboardShortcutsMenu()>
<com.android.systemui.pip.phone.ForegroundThread: com.android.systemui.pip.phone.ForegroundThread get()>
<com.android.systemui.settings.ToggleSlider: boolean isChecked()>
<com.android.systemui.qs.QSContainerImpl: void disable(int,int,boolean)>
<com.android.server.NsdService.NsdSettings: void registerContentObserver(android.net.Uri,android.database.ContentObserver)>
<com.android.server.pm.BackgroundDexOptService: void schedule(android.content.Context)>
<com.android.systemui.plugins.DozeServicePlugin: void onDreamingStarted()>
<com.android.systemui.util.InjectionInflationController.ViewInstanceCreator: com.android.systemui.qs.QSFooterImpl createQsFooter()>
<com.android.server.appprediction.AppPredictionPerUserService: void onDestroyPredictionSessionLocked(android.app.prediction.AppPredictionSessionId)>
<javax.obex.ApplicationParameter: byte[] getAPPparam()>
<com.android.server.policy.WakeGestureListener: void <init>(android.content.Context,android.os.Handler)>
<com.android.server.pm.PackageManagerService: void clearCrossProfileIntentFilters(int,java.lang.String)>
<com.android.server.pm.PackageManagerService: boolean addWhitelistedRestrictedPermission(java.lang.String,java.lang.String,int,int)>
<com.android.powermodel.util.Conversion: int[] toIntArray(float[])>
<com.android.systemui.power.PowerNotificationWarnings: void dismissHighTemperatureWarning()>
<com.android.systemui.keyguard.WorkLockActivity: void setTaskDescription(android.app.ActivityManager.TaskDescription)>
<android.text.StaticLayoutCreateDrawPerfTest: void timeDraw()>
<com.android.systemui.recents.IRecentsNonSystemUserCallbacks: void showCurrentUserToast(int,int)>
<com.android.server.hdmi.HdmiCecController.NativeWrapper: boolean nativeIsConnected(long,int)>
<com.android.systemui.statusbar.policy.RemoteInputView: boolean isActive()>
<com.android.packageinstaller.InstallFailed: void onCreate(android.os.Bundle)>
<com.android.systemui.recents.model.HighResThumbnailLoader: void setTaskLoadQueueIdle(boolean)>
<com.android.systemui.statusbar.notification.row.NotificationContentInflater: void updateNeedsRedaction(boolean)>
<com.android.systemui.statusbar.FlingAnimationUtils: void apply(android.view.ViewPropertyAnimator,float,float,float,float)>
<com.android.printspooler.model.PageContentRepository: com.android.printspooler.model.PageContentRepository.PageContentProvider acquirePageContentProvider(int,android.view.View)>
<com.android.photos.BitmapRegionTileSource: int getRotation()>
<javax.obex.ObexHelper: int findHeaderEnd(byte[],int,int)>
<com.android.systemui.statusbar.notification.row.NotificationGutsManager: void <init>(android.content.Context,com.android.systemui.statusbar.notification.VisualStabilityManager)>
<com.android.systemui.recents.utilities.AnimationProps: void <init>(int,android.view.animation.Interpolator,android.animation.Animator.AnimatorListener)>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationViewWrapper: void <init>(android.content.Context,android.view.View,com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<com.google.android.startop.iorap.ActivityHintEvent: boolean equals(java.lang.Object)>
<com.android.server.pm.ShortcutService.Lifecycle: void onStart()>
<com.android.server.usb.descriptors.Usb10ACOutputTerminal: void report(com.android.server.usb.descriptors.report.ReportCanvas)>
<com.android.systemui.statusbar.TransformableView: void transformFrom(com.android.systemui.statusbar.TransformableView,float)>
<com.android.settingslib.Utils: int getTetheringLabel(android.net.ConnectivityManager)>
<com.android.server.usb.descriptors.Usb20ACInputTerminal: byte getClkSourceID()>
<com.android.server.notification.NotificationManagerService.NotificationAssistants: void setPackageOrComponentEnabled(java.lang.String,int,boolean,boolean)>
<com.android.systemui.classifier.FalsingManagerProxy: void onQsDown()>
<com.android.systemui.qs.tileimpl.QSIconViewImpl: void setTint(android.widget.ImageView,int)>
<com.android.server.pm.PackageManagerService: void addCrossProfileIntentFilter(android.content.IntentFilter,java.lang.String,int,int,int)>
<com.android.server.lights.LightsService: void onBootPhase(int)>
<com.android.systemui.statusbar.notification.InstantAppNotifier: void preloadRecentApps()>
<com.android.systemui.doze.DozeLog: void tracePulseStart(int)>
<com.android.systemui.glwallpaper.EglHelper: void destroyEglContext()>
<com.android.server.location.RemoteListenerHelper: void <init>(android.content.Context,android.os.Handler,java.lang.String)>
<com.android.systemui.shared.recents.model.TaskKeyCache: void putCacheEntry(int,java.lang.Object)>
<com.android.systemui.recents.events.activity.PackagesChangedEvent: void <init>(java.lang.String,int)>
<com.android.server.infra.ServiceNameResolver: boolean setDefaultServiceEnabled(int,boolean)>
<com.android.systemui.statusbar.policy.AccessPointControllerImpl: int getIcon(com.android.settingslib.wifi.AccessPoint)>
<com.android.server.usb.descriptors.Usb10ASGeneral: byte getTerminalLink()>
<com.android.systemui.volume.ConfigurableTexts: void update()>
<com.android.nfc_extras.NfcAdapterExtras: com.android.nfc_extras.NfcExecutionEnvironment getEmbeddedExecutionEnvironment()>
<com.android.server.accessibility.FingerprintGestureDispatcher: void <init>(android.hardware.fingerprint.IFingerprintService,android.content.res.Resources,java.lang.Object,android.os.Handler)>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: int getYForDeltaP(float,float)>
<com.android.settingslib.core.lifecycle.ObservablePreferenceFragment: void onSaveInstanceState(android.os.Bundle)>
<com.android.systemui.pip.tv.PipControlButtonView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.server.audio.AudioService: void setMicrophoneMute(boolean,java.lang.String,int)>
<com.android.systemui.plugins.SensorManagerPlugin: void unregisterListener(com.android.systemui.plugins.SensorManagerPlugin.Sensor,com.android.systemui.plugins.SensorManagerPlugin.SensorEventListener)>
<com.android.server.OldNetworkTimeUpdateService: void <init>(android.content.Context)>
<com.android.keyguard.KeyguardSecurityViewFlipper: android.view.ViewGroup.LayoutParams generateLayoutParams(android.view.ViewGroup.LayoutParams)>
<javax.microedition.khronos.opengles.GL11: void glGetTexParameteriv(int,int,java.nio.IntBuffer)>
<com.android.server.pm.permission.PermissionSettings: void readPermissionTrees(org.xmlpull.v1.XmlPullParser)>
<com.android.systemui.volume.SegmentedButtons: android.widget.Button inflateButton()>
<com.android.systemui.tuner.NavBarTuner: void onDestroy()>
<android.net.shared.InitialConfiguration: boolean isValid()>
<com.android.media.remotedisplay.RemoteDisplay: void setVolumeMax(int)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void onScreenTurnedOff()>
<com.android.server.SystemServiceManager: boolean isRuntimeRestarted()>
<com.android.server.ConnectivityService: int tether(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.SysuiStatusBarStateController: void addCallback(com.android.systemui.plugins.statusbar.StatusBarStateController.StateListener,int)>
<com.android.server.testing.shadows.ShadowRecoveryController: void reset()>
<com.android.systemui.shared.recents.view.RecentsTransition: android.graphics.Bitmap createHardwareBitmap(int,int,java.util.function.Consumer)>
<com.android.systemui.statusbar.NotificationLockscreenUserManagerImpl: void setLockscreenPublicMode(boolean,int)>
<com.android.systemui.statusbar.AlphaOptimizedButton: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem: boolean handleSetSystemAudioMode(com.android.server.hdmi.HdmiCecMessage)>
<com.android.server.locksettings.LockSettingsService: int getStrongAuthForUser(int)>
<com.android.systemui.BatteryMeterView: void setPercentShowMode(int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean getDoNotAskCredentialsOnBoot()>
<com.google.android.startop.iorap.ActivityHintEvent: int describeContents()>
<com.android.server.pm.PackageManagerService: boolean hasSystemFeature(java.lang.String,int)>
<com.android.systemui.CarSystemUIFactory: com.android.systemui.statusbar.notification.NotificationEntryManager provideNotificationEntryManager(android.content.Context)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onDeviceProvisioned()>
<com.android.systemui.power.EnhancedEstimatesImpl: long getSevereWarningThreshold()>
<com.android.systemui.statusbar.notification.row.NotificationGuts.GutsContent: int getActualHeight()>
<com.android.systemui.qs.tiles.CellularTile: boolean isAvailable()>
<android.net.netlink.StructNlAttr: void <init>(java.nio.ByteOrder)>
<com.android.systemui.statusbar.phone.NotificationGroupManager: void collapseAllGroups()>
<com.android.systemui.biometrics.BiometricDialogView: void setBundle(android.os.Bundle)>
<android.perftests.utils.SettingsHelper: java.lang.String get(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.phone.NotificationIconContainer: void setSpeedBumpIndex(int)>
<com.android.printspooler.util.ApprovedPrintServices: void addApprovedService(android.content.ComponentName)>
<com.android.server.notification.PreferencesHelper: void deleteNotificationChannel(java.lang.String,int,java.lang.String)>
<com.android.systemui.SysUIToast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>
<com.android.systemui.classifier.brightline.TimeLimitedMotionEventBuffer: int hashCode()>
<com.android.uiautomator.core.UiDevice: boolean swipe(android.graphics.Point[],int)>
<com.android.systemui.settings.ToggleSeekBar: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.BatteryMeterView: void onDensityOrFontScaleChanged()>
<android.net.netlink.NetlinkConstants: int alignedLengthOf(int)>
<com.android.server.pm.UserManagerService: boolean isUserRunning(int)>
<com.android.systemui.statusbar.notification.row.ExpandableView.OnHeightChangedListener: void onReset(com.android.systemui.statusbar.notification.row.ExpandableView)>
<android.net.util.SharedLog: void w(java.lang.String)>
<com.android.systemui.plugins.qs.QSTile: void addCallback(com.android.systemui.plugins.qs.QSTile.Callback)>
<com.android.server.GestureLauncherService: boolean interceptPowerKeyDown(android.view.KeyEvent,boolean,android.util.MutableBoolean)>
<com.android.systemui.qs.customize.TileQueryHelper.TileStateListener: void onTilesChanged(java.util.List)>
<javax.obex.ObexTransport: void close()>
<com.android.photos.views.TiledImageRenderer.TileSource: com.android.gallery3d.glrenderer.BasicTexture getPreview()>
<com.android.systemui.recents.LegacyRecentsImpl: void growRecents()>
<com.android.systemui.classifier.FalsingManagerImpl: android.net.Uri reportRejectedTouch()>
<com.android.wallpapercropper.CropView.TouchCallback: void onTouchUp()>
<com.android.server.NetworkScoreService: void <init>(android.content.Context)>
<com.android.systemui.globalactions.GlobalActionsGridLayout: float getAnimationDistance()>
<com.android.gallery3d.glrenderer.GLES20Canvas: int uploadBuffer(java.nio.ByteBuffer)>
<android.text.StaticLayoutPerfTest: void testCreate_RandomText_Styled_Greedy_NoHyphenation()>
<com.android.settingslib.media.MediaDeviceUtils: java.lang.String getId(androidx.mediarouter.media.MediaRouter.RouteInfo)>
<com.android.systemui.qs.tiles.BluetoothTile: com.android.systemui.plugins.qs.DetailAdapter getDetailAdapter()>
<com.android.settingslib.core.instrumentation.SharedPreferencesLogger: float getFloat(java.lang.String,float)>
<com.android.settingslib.graph.BluetoothDeviceLayerDrawable: com.android.settingslib.graph.BluetoothDeviceLayerDrawable createLayerDrawable(android.content.Context,int,int,float)>
<com.android.systemui.statusbar.phone.StatusBarNotificationActivityStarter: void startNotificationGutsIntent(android.content.Intent,int,com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<android.net.ipmemorystore.Status: android.net.ipmemorystore.StatusParcelable toParcelable()>
<com.android.server.usb.descriptors.UsbACFeatureUnit: byte getControlSize()>
<com.android.settingslib.applications.ServiceListing.Builder: com.android.settingslib.applications.ServiceListing.Builder setPermission(java.lang.String)>
<com.android.server.pm.PreferredComponent: boolean sameSet(android.content.ComponentName[])>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean isGroupExpanded()>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverySnapshotStorage: void <init>(java.io.File)>
<com.android.server.webkit.SystemInterface: int onWebViewProviderChanged(android.content.pm.PackageInfo)>
<com.android.server.LockGuard: void guard(int)>
<com.android.server.input.InputManagerService: void enableInputDevice(int)>
<com.android.systemui.plugins.qs.QS: void setPanelView(com.android.systemui.plugins.qs.QS.HeightListener)>
<com.android.server.infra.AbstractPerUserSystemService: android.content.pm.ServiceInfo getServiceInfo()>
<com.android.systemui.statusbar.phone.StatusBar: com.android.systemui.statusbar.phone.KeyguardBottomAreaView getKeyguardBottomAreaView()>
<com.android.server.notification.NotificationRecord: long getRankingTimeMs()>
<com.android.systemui.qs.tiles.BatterySaverTile: android.content.Intent getLongClickIntent()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setPasswordMinimumUpperCase(android.content.ComponentName,int,boolean)>
<com.android.settingslib.suggestions.SuggestionController: java.util.List getSuggestions()>
<com.android.systemui.statusbar.NotificationRemoteInputManager.ClickHandler: boolean handleClick()>
<com.android.systemui.recents.views.TaskStackView: void updateTaskViewToTransform(com.android.systemui.recents.views.TaskView,com.android.systemui.recents.views.TaskViewTransform,com.android.systemui.recents.utilities.AnimationProps)>
<com.android.systemui.recents.views.TaskView: com.android.systemui.recents.views.TaskViewHeader getHeaderView()>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: boolean isRowRemoved()>
<com.android.systemui.statusbar.notification.stack.StackStateAnimator: boolean isRunning()>
<com.android.location.provider.ActivityRecognitionEvent: java.lang.String toString()>
<com.android.systemui.statusbar.NavigationBarController: void onDisplayReady(int)>
<com.android.systemui.qs.tiles.CastTile: void handleUserSwitch(int)>
<com.android.systemui.statusbar.phone.PanelView: boolean isFullyCollapsed()>
<com.android.systemui.statusbar.phone.BarTransitions: void setAlwaysOpaque(boolean)>
<com.android.systemui.shared.system.DockedStackListenerCompat: void onDockedStackMinimizedChanged(boolean,long,boolean)>
<com.android.server.notification.NotificationUsageStats: void registerSuspendedByAdmin(com.android.server.notification.NotificationRecord)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexGeniv(int,int,java.nio.IntBuffer)>
<com.android.printspooler.ui.PrinterRegistry: void setTrackedPrinter(android.print.PrinterId)>
<com.android.systemui.classifier.FalsingManagerProxy: void onNotificatonStopDraggingDown()>
<com.android.settingslib.widget.ActionButtonsPreference: com.android.settingslib.widget.ActionButtonsPreference setButton1OnClickListener(android.view.View.OnClickListener)>
<com.android.server.notification.PriorityExtractor: void initialize(android.content.Context,com.android.server.notification.NotificationUsageStats)>
<com.android.systemui.statusbar.phone.PhoneStatusBarPolicy: void onDataSaverChanged(boolean)>
<com.android.keyguard.AlphaOptimizedLinearLayout: void <init>(android.content.Context)>
<com.android.statementservice.retriever.AbstractAssetMatcher: com.android.statementservice.retriever.AbstractAssetMatcher createMatcher(java.lang.String)>
<com.android.server.policy.WindowManagerPolicy.WindowState: void writeIdentifierToProto(android.util.proto.ProtoOutputStream,long)>
<javax.microedition.khronos.opengles.GL11: void glClipPlanef(int,java.nio.FloatBuffer)>
<com.android.systemui.plugin.testoverlayplugin.SampleOverlayPlugin: void onCreate(android.content.Context,android.content.Context)>
<com.android.systemui.keyguard.KeyguardViewMediator: void doKeyguardTimeout(android.os.Bundle)>
<com.android.server.pm.InstructionSets: java.lang.String getPreferredInstructionSet()>
<com.android.settingslib.applications.ServiceListing: void addCallback(com.android.settingslib.applications.ServiceListing.Callback)>
<com.android.location.fused.FusionEngine: void onStatusChanged(java.lang.String,int,android.os.Bundle)>
<com.android.settingslib.widget.ActionButtonsPreference: com.android.settingslib.widget.ActionButtonsPreference setButton3Text(int)>
<com.android.systemui.qs.QSPanel: void clickTile(android.content.ComponentName)>
<com.android.settingslib.display.DisplayDensityUtils: void <init>(android.content.Context)>
<com.android.systemui.tuner.TunerFragment: boolean onOptionsItemSelected(android.view.MenuItem)>
<com.android.systemui.statusbar.notification.row.ExpandableOutlineView: void setMinimumHeightForClipping(int)>
<com.android.server.accessibility.GlobalActionPerformer: void <init>(android.content.Context,com.android.server.wm.WindowManagerInternal,java.util.function.Supplier)>
<com.android.systemui.statusbar.policy.AccessibilityController: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.shared.plugins.PluginInstanceManager: java.lang.String toString()>
<com.android.server.LocationManagerService: java.util.List getAllProviders()>
<com.android.systemui.statusbar.notification.row.AppOpsInfo: boolean willBeRemoved()>
<com.android.powermodel.RawBatteryStats.Warning: void <init>(int,com.android.powermodel.RawBatteryStats.WarningId,java.util.ArrayList,java.lang.String,java.lang.String[])>
<com.android.backupconfirm.BackupRestoreConfirmation: void onNewIntent(android.content.Intent)>
<android.widget.EditTextCursorMovementPerfTest: java.util.Collection cases()>
<com.android.systemui.statusbar.notification.row.FooterView: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.server.NetworkTimeUpdateService: void systemRunning()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setAnimationRunning(boolean)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void makeActionsVisibile()>
<com.android.commands.svc.NfcCommand: java.lang.String shortHelp()>
<android.os.CpuUsageTrackingPerfTest: void timeReadThreadProcDirectly()>
<com.android.server.content.ContentService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.recents.views.TaskView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.database.CursorWindowPerfTest: void load10Ints()>
<com.android.packageinstaller.UninstallUninstalling: void onDestroy()>
<com.android.keyguard.AlphaOptimizedRelativeLayout: boolean hasOverlappingRendering()>
<com.android.systemui.statusbar.phone.ContextualButtonGroup: int setButtonVisibility(int,boolean)>
<com.android.systemui.statusbar.notification.MediaNotificationProcessor: androidx.palette.graphics.Palette.Swatch findBackgroundSwatch(android.graphics.Bitmap)>
<com.android.server.contentcapture.ContentCaptureMetricsLogger: void writeServiceEvent(int,android.content.ComponentName,android.content.ComponentName)>
<com.android.systemui.statusbar.phone.StatusBarIconController.IconManager: void onSetSignalIcon(int,com.android.systemui.statusbar.phone.StatusBarSignalPolicy.WifiIconState)>
<com.android.systemui.statusbar.notification.row.NotificationBackgroundView: void setExpandAnimationRunning(boolean)>
<com.android.systemui.statusbar.phone.StatusBar: boolean isWakeUpComingFromTouch()>
<com.android.settingslib.wifi.AccessPoint: java.lang.String getSavedNetworkSummary()>
<com.android.server.autofill.Helper: java.lang.String paramsToString(android.view.WindowManager.LayoutParams)>
<com.android.systemui.statusbar.policy.ConfigurationController.ConfigurationListener: void onDensityOrFontScaleChanged()>
<com.android.systemui.classifier.brightline.TimeLimitedMotionEventBuffer: boolean remove(java.lang.Object)>
<com.android.systemui.bubbles.animation.PhysicsAnimationLayout.PhysicsPropertyAnimator: void <init>(android.view.View)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void showBouncer(boolean)>
<com.android.server.audio.MediaFocusControl: void discardAudioFocusOwner()>
<com.android.systemui.statusbar.phone.StatusBarNotificationActivityStarter: void onNotificationClicked(android.service.notification.StatusBarNotification,com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<com.android.systemui.qs.car.CarQSFooter: void setQSPanel(com.android.systemui.qs.QSPanel)>
<com.android.systemui.recents.RecentsActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.recents.views.TaskView: com.android.systemui.shared.recents.model.Task getTask()>
<com.android.server.locksettings.recoverablekeystore.PlatformDecryptionKey: android.security.keystore.AndroidKeyStoreSecretKey getKey()>
<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: void onParentTranslationUpdate(float)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: int getVisibleType()>
<com.android.server.adb.AdbService: void denyDebugging()>
<com.android.systemui.statusbar.phone.StatusBarWindowController: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.StatusBarWindowView: void setTouchActive(boolean)>
<com.android.server.pm.UserManagerService: java.util.List getUserRestrictionSources(java.lang.String,int)>
<com.android.server.location.ContextHubService: int registerCallback(android.hardware.location.IContextHubCallback)>
<com.android.server.pm.dex.ArtManagerService: void snapshotRuntimeProfile(int,java.lang.String,java.lang.String,android.content.pm.dex.ISnapshotRuntimeProfileCallback,java.lang.String)>
<com.android.server.PersistentDataBlockService: void <init>(android.content.Context)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setMaxDisplayedNotifications(int)>
<com.android.server.notification.ManagedServices: void dump(android.util.proto.ProtoOutputStream,com.android.server.notification.NotificationManagerService.DumpFilter)>
<com.android.server.devicepolicy.DevicePolicyManagerService: android.app.admin.SystemUpdatePolicy getSystemUpdatePolicy()>
<com.android.server.usb.descriptors.Usb10ACMixerUnit: void report(com.android.server.usb.descriptors.report.ReportCanvas)>
<com.android.systemui.recents.model.BackgroundTaskLoader.OnIdleChangedListener: void onIdleChanged(boolean)>
<com.android.settingslib.media.BluetoothMediaDevice: com.android.settingslib.bluetooth.CachedBluetoothDevice getCachedDevice()>
<com.android.systemui.qs.SlashDrawable: void setTint(int)>
<com.android.systemui.statusbar.policy.SignalController: int getQsCurrentIconId()>
<com.android.settingslib.drawer.DashboardCategory: void addTile(com.android.settingslib.drawer.Tile)>
<com.android.systemui.stackdivider.Divider: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.glwallpaper.ImageWallpaperRenderer: void onRevealStateChanged()>
<com.android.server.pm.permission.PermissionManagerServiceInternal: void revokeRuntimePermissionsIfPermissionDefinitionChanged(java.util.List,java.util.ArrayList,com.android.server.pm.permission.PermissionManagerServiceInternal.PermissionCallback)>
<com.android.keyguard.KeyguardDisplayManager: void hide()>
<com.android.printspooler.ui.FusedPrintersProvider: void addHistoricalPrinter(android.print.PrinterInfo)>
<com.android.systemui.qs.customize.QSCustomizer: void setEditLocation(int,int)>
<com.android.systemui.statusbar.notification.logging.NotificationLogger: void onStateChanged(int)>
<android.processor.view.inspector.InspectableClassModel: java.util.Optional getProperty(java.lang.String)>
<com.android.systemui.statusbar.phone.KeyguardStatusBarView: boolean hasOverlappingRendering()>
<com.android.server.policy.PhoneWindowManager: void screenTurningOn(com.android.server.policy.WindowManagerPolicy.ScreenOnListener)>
<com.android.server.testing.shadows.ShadowPerformUnifiedRestoreTask: boolean isFullSystemRestore()>
<com.android.systemui.qs.tiles.NfcTile: java.lang.CharSequence getTileLabel()>
<com.android.printspooler.model.MutexFileProvider.OnReleaseRequestCallback: void onReleaseRequested(java.io.File)>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: int calculateBgColor()>
<com.android.server.pm.PackageInstallerService: int createSession(android.content.pm.PackageInstaller.SessionParams,java.lang.String,int)>
<com.android.settingslib.core.instrumentation.SharedPreferencesLogger.EditorLogger: android.content.SharedPreferences.Editor remove(java.lang.String)>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: boolean performClick()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isRemovingAdmin(android.content.ComponentName,int)>
<com.android.systemui.statusbar.notification.row.FooterViewButton: void <init>(android.content.Context)>
<android.net.shared.NetworkMonitorUtils: boolean isPrivateDnsValidationRequired(android.net.NetworkCapabilities)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setPasswordMinimumLowerCase(android.content.ComponentName,int,boolean)>
<com.android.systemui.statusbar.NotificationShelf: void bind(com.android.systemui.statusbar.notification.stack.AmbientState,com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout)>
<com.android.server.audio.MediaFocusControl: void unduckPlayers(com.android.server.audio.FocusRequester)>
<com.android.systemui.pip.BasePipManager: void initialize(android.content.Context)>
<com.android.systemui.shared.system.ActivityManagerWrapper: void unregisterTaskStackListener(com.android.systemui.shared.system.TaskStackChangeListener)>
<com.android.server.accessibility.FingerprintGestureDispatcher: boolean isFingerprintGestureDetectionAvailable()>
<com.android.keyguard.KeyguardPasswordView: int getPasswordTextViewId()>
<com.android.systemui.statusbar.policy.BrightnessMirrorController: void updateResources()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void applyExpandAnimationParams(com.android.systemui.statusbar.notification.ActivityLaunchAnimator.ExpandAnimationParameters)>
<com.android.server.audio.AudioService: boolean isBluetoothA2dpOn()>
<com.android.server.notification.ZenModeHelper: void applyRestrictions(boolean,boolean,int,int)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: com.android.systemui.statusbar.notification.row.HybridNotificationView getSingleLineView()>
<com.android.systemui.pip.phone.PipMenuActivity: void setTaskDescription(android.app.ActivityManager.TaskDescription)>
<android.net.netlink.NetlinkConstants: java.lang.String stringForAddressFamily(int)>
<com.android.server.vr.VrManagerInternal: void onScreenStateChanged(boolean)>
<com.android.server.usb.UsbAlsaManager: void systemReady()>
<com.android.systemui.ExpandHelper: void setScrollAdapter(com.android.systemui.statusbar.policy.ScrollAdapter)>
<com.android.systemui.statusbar.phone.SettingsButton: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.systemui.statusbar.AlertingNotificationManager.AlertEntry: boolean wasShownLongEnough()>
<com.android.systemui.statusbar.phone.ObservableScrollView: boolean overScrollBy(int,int,int,int,int,int,int,int,boolean)>
<com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer: void setUserLocked(boolean)>
<javax.microedition.khronos.opengles.GL10: void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<com.android.systemui.ScreenDecorations.DisplayCutoutView: void onDetachedFromWindow()>
<com.android.settingslib.applications.ApplicationsState.Session: java.util.ArrayList rebuild(com.android.settingslib.applications.ApplicationsState.AppFilter,java.util.Comparator)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: boolean shouldDestroyViewOnReset()>
<com.android.systemui.statusbar.phone.NavigationBarInflaterView: void onFinishInflate()>
<com.android.printspooler.ui.SelectPrinterActivity: void onCreate(android.os.Bundle)>
<com.android.server.PackageWatchdog.PackageHealthObserver: boolean execute(android.content.pm.VersionedPackage)>
<com.android.server.biometrics.AuthenticationClient: boolean onRemoved(android.hardware.biometrics.BiometricAuthenticator.Identifier,int)>
<com.android.printservice.recommendation.plugin.hp.MDnsUtils: java.lang.String getVendor(android.net.nsd.NsdServiceInfo)>
<com.android.server.notification.ConditionProviders: android.service.notification.Condition findCondition(android.content.ComponentName,android.net.Uri)>
<com.android.systemui.statusbar.phone.KeyguardBouncer: void inflateView()>
<com.android.systemui.statusbar.phone.DozeParameters: void setControlScreenOffAnimation(boolean)>
<com.android.settingslib.RestrictedLockUtilsInternal: com.android.settingslib.RestrictedLockUtils.EnforcedAdmin checkIfMeteredDataRestricted(android.content.Context,java.lang.String,int)>
<com.android.uiautomator.testrunner.UiAutomatorTestRunner: com.android.uiautomator.testrunner.UiAutomatorTestCaseFilter getTestCaseFilter()>
<com.android.systemui.statusbar.phone.NotificationsQuickSettingsContainer: void setCustomizerShowing(boolean)>
<com.android.systemui.recents.utilities.Utilities: float clamp(float,float,float)>
<com.android.systemui.statusbar.StatusBarStateControllerImpl: void removeCallback(com.android.systemui.plugins.statusbar.StatusBarStateController.StateListener)>
<com.android.systemui.assist.ui.InvocationLightsView: void hide()>
<javax.microedition.khronos.opengles.GL10: void glClearDepthx(int)>
<com.android.server.accounts.AccountManagerService: void setUserData(android.accounts.Account,java.lang.String,java.lang.String)>
<com.android.server.appop.AppOpsService: void setAppOpsServiceDelegate(android.app.AppOpsManagerInternal.CheckOpsDelegate)>
<android.text.StaticLayoutPerfTest: void testCreate_PrecomputedText_NoStyled_Greedy_Hyphenation()>
<com.android.systemui.classifier.FalsingManagerProxy: boolean isReportingEnabled()>
<android.net.NetworkStackClient: void makeIpClient(java.lang.String,android.net.ip.IIpClientCallbacks)>
<com.android.systemui.statusbar.notification.row.HybridNotificationView: android.widget.TextView getTitleView()>
<com.android.commands.svc.Svc.Command: java.lang.String shortHelp()>
<com.android.systemui.statusbar.notification.TransformState: boolean sameAs(com.android.systemui.statusbar.notification.TransformState)>
<com.android.systemui.statusbar.notification.row.StackScrollerDecorView: boolean isTransparent()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onFinishInflate()>
<com.android.systemui.qs.QSPanel: void <init>(android.content.Context)>
<com.android.server.usb.descriptors.UsbACMixerUnit: byte getNumOutputs()>
<com.android.server.PruneInstantAppsJobService: void schedule(android.content.Context)>
<com.android.systemui.tuner.PowerNotificationControlsFragment: void onViewCreated(android.view.View,android.os.Bundle)>
<com.android.server.policy.RestartAction: boolean onLongPress()>
<com.android.uiautomator.core.UiDevice: int getDisplayWidth()>
<com.android.server.accessibility.AccessibilityManagerService: void onShellCommand(java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ShellCallback,android.os.ResultReceiver)>
<com.android.server.NativeDaemonConnectorException: java.lang.String getCmd()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setAffiliationIds(android.content.ComponentName,java.util.List)>
<com.android.bluetoothmidiservice.BluetoothMidiDevice: android.os.IBinder getBinder()>
<com.android.systemui.glwallpaper.EglHelper: void destroyEglSurface()>
<com.android.systemui.statusbar.phone.StatusBar: void postAnimateCollapsePanels()>
<com.android.systemui.classifier.brightline.TimeLimitedMotionEventBuffer: boolean addAll(int,java.util.Collection)>
<com.android.server.content.SyncManager: void <init>(android.content.Context,boolean)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void clearChildFocus(android.view.View)>
<javax.obex.ClientSession: void setConnectionID(long)>
<com.android.gallery3d.exif.ExifInterface: java.lang.Byte getTagByteValue(int,int)>
<com.android.systemui.statusbar.policy.HeadsUpManager: void onDensityOrFontScaleChanged()>
<com.android.settingslib.development.AbstractEnableAdbPreferenceController: java.lang.String getPreferenceKey()>
<com.android.systemui.qs.tiles.WifiTile.WifiDetailAdapter: void onAccessPointsChanged(java.util.List)>
<android.perftests.utils.SettingsHelper: void set(java.lang.String,java.lang.String,java.lang.String)>
<com.android.gallery3d.exif.ExifTag: java.lang.Object getValue()>
<com.android.server.usb.UsbPortManager: void removeSimulatedPort(java.lang.String,com.android.internal.util.IndentingPrintWriter)>
<com.android.preload.ui.IUI: java.lang.Object showChoiceDialog(java.lang.String,java.lang.String,java.lang.Object[])>
<android.net.dhcp.DhcpServingParamsParcelExt: android.net.dhcp.DhcpServingParamsParcelExt setDnsServers(java.util.Set)>
<com.android.server.appbinding.AppBindingService.Lifecycle: void onStartUser(int)>
<com.android.server.location.GnssBatchingProviderTest: void start_nativeStarted()>
<com.android.server.hdmi.HdmiCecController.NativeWrapper: int nativeSendCecCommand(long,int,int,byte[])>
<com.android.statementservice.retriever.AssociationServiceException: void <init>(java.lang.Exception)>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.activity.LaunchTaskStartedEvent)>
<com.android.systemui.statusbar.notification.ProgressTransformState: boolean sameAs(com.android.systemui.statusbar.notification.TransformState)>
<com.android.settingslib.core.lifecycle.ObservableActivity: void onCreate(android.os.Bundle,android.os.PersistableBundle)>
<com.android.systemui.statusbar.car.DrivingStateHelper: void connectToCarService()>
<com.android.server.notification.ConditionProviders: void onPackagesChanged(boolean,java.lang.String[],int[])>
<com.android.systemui.recents.LegacyRecentsImpl: void hideRecentApps(boolean,boolean)>
<com.android.systemui.statusbar.car.hvac.HvacController: void removeAllComponents()>
<com.android.systemui.statusbar.phone.KeyguardStatusBarView: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)>
<com.android.systemui.DependencyBinder: com.android.systemui.statusbar.policy.NextAlarmController provideNextAlarmController(com.android.systemui.statusbar.policy.NextAlarmControllerImpl)>
<com.android.systemui.tuner.TunerFragment: void onResume()>
<android.widget.TextViewSetTextLocalePerfTest: java.util.Collection locales()>
<com.android.systemui.recents.RecentsActivity: void onBusEvent(com.android.systemui.recents.events.activity.RecentsActivityStartingEvent)>
<com.android.server.emergency.EmergencyAffordanceService: void <init>(android.content.Context)>
<com.android.settingslib.RestrictedLockImageSpan: void <init>(android.content.Context)>
<com.android.systemui.statusbar.AlertingNotificationManager.AlertEntry: void removeAsSoonAsPossible()>
<com.android.systemui.doze.DozeService: void onPluginDisconnected(com.android.systemui.plugins.DozeServicePlugin)>
<com.android.preload.DeviceUtils: boolean hasPrebuiltBootImage(com.android.ddmlib.IDevice)>
<com.android.server.display.DisplayManagerService: void onSwitchUser(int)>
<com.android.packageinstaller.InstallStaging.ErrorDialog: void onAttach(android.content.Context)>
<com.android.server.ConnectivityService: boolean requestBandwidthUpdate(android.net.Network)>
<com.android.server.policy.WindowManagerPolicy.WindowState: void computeFrameLw()>
<com.google.android.startop.iorap.SystemServiceUserEvent: int describeContents()>
<com.android.server.policy.WindowManagerPolicy: boolean isScreenOn()>
<com.android.server.policy.keyguard.KeyguardStateMonitor.StateCallback: void onTrustedChanged()>
<android.media.Session2Token: void writeToParcel(android.os.Parcel,int)>
<android.graphics.perftests.TypefaceCreatePerfTest: void testCreate_fromFamilyName()>
<com.android.server.inputmethod.InputMethodManagerService: void onShellCommand(java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ShellCallback,android.os.ResultReceiver)>
<com.android.systemui.assist.ui.EdgeLight: void setOffset(float)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.util.List getDisallowedSystemApps(android.content.ComponentName,int,java.lang.String)>
<com.android.systemui.BatteryMeterView: void onDetachedFromWindow()>
<com.android.server.pm.UserManagerService: boolean hasRestrictedProfiles()>
<com.android.server.IpSecService: void releaseSecurityParameterIndex(int)>
<com.android.settingslib.deviceinfo.AbstractSerialNumberPreferenceController: java.lang.String getPreferenceKey()>
<com.android.systemui.statusbar.phone.BounceInterpolator: float getInterpolation(float)>
<com.android.server.biometrics.BiometricServiceBase.ServiceListener: void onAuthenticationSucceededInternal(boolean,byte[])>
<com.android.systemui.statusbar.policy.KeyButtonDrawable: android.graphics.drawable.Drawable.ConstantState getConstantState()>
<com.android.systemui.statusbar.notification.ActivityLaunchAnimator: void setLaunchResult(int,boolean)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: int getProfileConnectionState(com.android.settingslib.bluetooth.LocalBluetoothProfile)>
<com.android.systemui.statusbar.phone.NavigationBarView: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.policy.LogDecelerateInterpolator: void <init>(int,int)>
<javax.obex.PrivateOutputStream: void write(int)>
<com.android.server.LocationManagerService: void removeGeofence(android.location.Geofence,android.app.PendingIntent,java.lang.String)>
<com.android.proxyhandler.ProxyServer: void setCallback(com.android.net.IProxyPortListener)>
<com.android.settingslib.net.NetworkStatsSummaryLoader.Builder: com.android.settingslib.net.NetworkStatsSummaryLoader build()>
<com.android.server.devicepolicy.DevicePolicyManagerService: android.os.UserHandle createAndManageUser(android.content.ComponentName,java.lang.String,android.content.ComponentName,android.os.PersistableBundle,int)>
<android.processor.view.inspector.InspectableClassModel.IntEnumEntry: int getValue()>
<android.media.Controller2Link: void onDisconnected(int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setPanelAlphaInternal(float)>
<com.android.uiautomator.core.UiDevice: void setCompressedLayoutHeirarchy(boolean)>
<com.android.settingslib.applications.StorageStatsSource.AppStorageStatsImpl: void <init>(android.app.usage.StorageStats)>
<com.android.server.policy.WindowManagerPolicy: boolean isUserSetupComplete()>
<com.android.settingslib.drawer.Tile: void writeToParcel(android.os.Parcel,int)>
<com.android.keyguard.KeyguardPasswordView: byte[] getPasswordText()>
<com.android.server.notification.ConditionProviders: void unsubscribeIfNecessary(android.content.ComponentName,android.net.Uri)>
<com.android.server.accessibility.AutoclickController: void clearEvents(int)>
<com.android.systemui.statusbar.SysuiStatusBarStateController: boolean leaveOpenOnKeyguardHide()>
<com.android.systemui.qs.tiles.BluetoothTile: com.android.systemui.plugins.qs.DetailAdapter createDetailAdapter()>
<com.android.statementservice.retriever.URLFetcher: com.android.statementservice.retriever.WebContent getWebContentFromUrlWithRetry(java.net.URL,long,int,int,int)>
<com.android.server.policy.PermissionPolicyService: void onStopUser(int)>
<com.android.settingslib.wifi.AccessPoint: java.util.Map getScoredNetworkCache()>
<android.media.MediaSession2: void setPlaybackActive(boolean)>
<com.android.systemui.qs.tiles.WifiTile.WifiDetailAdapter: android.content.Intent getSettingsIntent()>
<com.android.systemui.statusbar.phone.ContextualButton: void updateIcon()>
<android.media.MediaPlayer2: void addOnRoutingChangedListener(android.media.AudioRouting.OnRoutingChangedListener,android.os.Handler)>
<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexsvOES(java.nio.ShortBuffer)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void drawLine(float,float,float,float,com.android.gallery3d.glrenderer.GLPaint)>
<com.android.server.slice.SliceManagerService.Lifecycle: void <init>(android.content.Context)>
<com.android.server.accounts.AccountManagerService: void updateAppPermission(android.accounts.Account,java.lang.String,int,boolean)>
<com.android.commands.uiautomator.Launcher: void main(java.lang.String[])>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void onRotationProposal(int,boolean)>
<com.android.systemui.statusbar.StatusBarIconView: void getDrawingRect(android.graphics.Rect)>
<com.android.systemui.statusbar.notification.row.ExpandableView.OnHeightChangedListener: void onHeightChanged(com.android.systemui.statusbar.notification.row.ExpandableView,boolean)>
<com.android.systemui.statusbar.policy.LocationControllerImpl: void removeCallback(com.android.systemui.statusbar.policy.LocationController.LocationChangeCallback)>
<com.android.server.biometrics.AuthenticationClient: boolean getRequireConfirmation()>
<com.android.server.biometrics.BiometricServiceBase: void handleEnrollResult(android.hardware.biometrics.BiometricAuthenticator.Identifier,int)>
<com.android.systemui.statusbar.phone.NotificationListenerWithPlugins: android.service.notification.StatusBarNotification[] getActiveNotifications()>
<com.android.systemui.statusbar.phone.CollapsedStatusBarFragment: void disable(int,int,int,boolean)>
<com.android.server.policy.WindowManagerPolicy.WindowState: boolean isLetterboxedForDisplayCutoutLw()>
<com.android.systemui.SizeCompatModeActivityController: void setImeWindowStatus(int,android.os.IBinder,int,int,boolean)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector scrollable(boolean)>
<com.android.systemui.shared.plugins.PluginManager: com.android.systemui.plugins.Plugin getOneShotPlugin(java.lang.String,java.lang.Class)>
<com.android.server.pm.PackageInstallerService: java.io.File allocateStageDirLegacy(java.lang.String,boolean)>
<com.android.server.tv.TvRemoteService: void onBootPhase(int)>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb: int setRecoveryStatus(int,java.lang.String,int)>
<com.android.systemui.biometrics.DialogViewCallback: void onNegativePressed()>
<com.android.server.pm.Installer: void destroyAppData(java.lang.String,java.lang.String,int,int,long)>
<com.android.settingslib.bluetooth.HeadsetProfile: void finalize()>
<com.android.systemui.volume.VolumeDialogComponent: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.plugins.NotificationListenerController.NotificationProvider: android.service.notification.NotificationListenerService.RankingMap getRankingMap()>
<com.android.settingslib.Utils: java.lang.String formatPercentage(long,long)>
<com.android.server.pm.ShortcutNonPersistentUser: boolean hasHostPackage(java.lang.String)>
<com.android.wallpapercropper.CropView: boolean onScale(android.view.ScaleGestureDetector)>
<com.android.server.usb.descriptors.Usb10ACInputTerminal: byte getChannelNames()>
<com.android.server.pm.PackageInstallerService: android.content.pm.PackageInstaller.SessionInfo getSessionInfo(int)>
<com.android.systemui.qs.tileimpl.QSTileImpl.DrawableIconWithRes: boolean equals(java.lang.Object)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: boolean isFullscreenBouncer()>
<com.android.systemui.statusbar.EmptyShadeView: android.view.View findContentView()>
<com.android.server.accessibility.MagnificationController: boolean isRegistered(int)>
<com.android.powermodel.AppPower: double getAppPowerMah()>
<com.android.systemui.qs.tiles.DataSaverTile: void onDataSaverChanged(boolean)>
<com.android.systemui.statusbar.notification.TransformState: void ensureVisible()>
<com.android.server.pm.PackageManagerService: void unregisterMoveCallback(android.content.pm.IPackageMoveObserver)>
<com.android.server.policy.PhoneWindowManager: void lockNow(android.os.Bundle)>
<com.android.server.ServiceWatcher: java.lang.Object runOnBinderBlocking(com.android.server.ServiceWatcher.BlockingBinderRunner,java.lang.Object)>
<com.android.systemui.stackdivider.DividerView: int growsRecents()>
<com.android.systemui.statusbar.phone.MultiUserSwitch: boolean hasOverlappingRendering()>
<com.android.server.pm.permission.PermissionsState: boolean isPermissionReviewRequired(int)>
<com.android.server.location.GeofenceState: java.lang.String toString()>
<com.android.systemui.pip.phone.PipMenuActivityController.Listener: void onPipExpand()>
<javax.microedition.khronos.egl.EGL10: boolean eglCopyBuffers(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,java.lang.Object)>
<com.android.settingslib.wifi.AccessPoint: android.net.NetworkInfo getNetworkInfo()>
<com.android.server.notification.NotificationShellCmd: void onHelp()>
<com.android.server.pm.UserManagerService: void setSeedAccountData(int,java.lang.String,java.lang.String,android.os.PersistableBundle,boolean)>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: void onAttachedToWindow()>
<com.android.server.biometrics.EnrollClient: boolean onEnumerationResult(android.hardware.biometrics.BiometricAuthenticator.Identifier,int)>
<com.android.systemui.plugins.NotificationListenerController: android.service.notification.StatusBarNotification[] getActiveNotifications(android.service.notification.StatusBarNotification[])>
<com.android.systemui.shared.system.PinnedStackListenerForwarder: void removeListener(android.view.IPinnedStackListener)>
<com.android.systemui.qs.QSFragment: void onDestroy()>
<com.android.server.accounts.AccountManagerService: void registerAccountListener(java.lang.String[],java.lang.String)>
<com.android.server.updates.CertificateTransparencyLogInstallReceiver: void install(byte[],int)>
<com.android.systemui.statusbar.NotificationLockscreenUserManager: int getCurrentUserId()>
<com.android.gallery3d.exif.Rational: void <init>(com.android.gallery3d.exif.Rational)>
<com.android.dynsystem.DynamicSystemInstallationService: android.os.IBinder onBind(android.content.Intent)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int setGlobalPrivateDns(android.content.ComponentName,int,java.lang.String)>
<com.android.server.NetworkManagementService: void addIdleTimer(java.lang.String,int,int)>
<com.android.server.notification.SystemConditionProviderService: java.lang.String formatDuration(long)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector textStartsWith(java.lang.String)>
<com.android.settingslib.drawable.UserIconDrawable: com.android.settingslib.drawable.UserIconDrawable setBadgeIfManagedUser(android.content.Context,int)>
<com.android.systemui.statusbar.policy.KeyButtonView: void onWindowVisibilityChanged(int)>
<com.android.systemui.qs.QuickQSPanel: void onDetachedFromWindow()>
<com.android.systemui.bubbles.animation.PhysicsAnimationLayout.PhysicsPropertyAnimator: com.android.systemui.bubbles.animation.PhysicsAnimationLayout.PhysicsPropertyAnimator withPositionStartVelocities(float,float)>
<com.android.systemui.shared.plugins.PluginManager: boolean dependsOn(com.android.systemui.plugins.Plugin,java.lang.Class)>
<com.android.server.stats.StatsCompanionService: void triggerUidSnapshot()>
<com.android.settingslib.utils.AsyncLoaderCompat: void onReset()>
<com.android.server.pm.UserManagerService: java.lang.String getUserName()>
<com.android.systemui.qs.tiles.AirplaneModeTile: int getMetricsCategory()>
<com.android.server.display.DisplayManagerService: void <init>(android.content.Context)>
<com.android.systemui.qs.tiles.UserDetailView.Adapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<com.android.systemui.statusbar.policy.SmartReplyView: java.util.List inflateRepliesFromRemoteInput(com.android.systemui.statusbar.policy.SmartReplyView.SmartReplies,com.android.systemui.statusbar.SmartReplyController,com.android.systemui.statusbar.notification.collection.NotificationEntry,boolean)>
<com.android.systemui.assist.AssistOrbView: void startEnterAnimation()>
<com.android.server.LocationManagerService: void setTestProviderEnabled(java.lang.String,boolean,java.lang.String)>
<com.android.systemui.recents.RecentsActivity: void onBusEvent(com.android.systemui.recents.events.activity.LaunchTaskFailedEvent)>
<com.android.server.policy.WindowOrientationListener: void onTouchEnd()>
<com.android.commands.uiautomator.EventsCommand: java.lang.String shortHelp()>
<com.android.server.pm.CrossProfileAppsService: void <init>(android.content.Context)>
<com.android.settingslib.license.LicenseHtmlLoaderCompat: java.io.File loadInBackground()>
<com.android.server.content.SyncManager: void onStartUser(int)>
<com.android.server.locksettings.recoverablekeystore.RecoverableKeyStorageException: void <init>(java.lang.String,java.lang.Throwable)>
<com.android.server.twilight.TwilightState: java.time.LocalDateTime sunset()>
<com.android.server.input.InputManagerService: void systemRunning()>
<com.android.systemui.statusbar.policy.KeyguardMonitorImpl: void notifyKeyguardGoingAway(boolean)>
<com.android.systemui.statusbar.policy.SensorPrivacyControllerImpl: boolean isSensorPrivacyEnabled()>
<com.android.settingslib.bluetooth.PanProfile: int getSummaryResourceForDevice(android.bluetooth.BluetoothDevice)>
<com.android.server.locksettings.recoverablekeystore.WrappedKey: void <init>(byte[],byte[],byte[],int,int)>
<com.android.settingslib.bluetooth.HearingAidProfile: boolean disconnect(android.bluetooth.BluetoothDevice)>
<com.android.systemui.statusbar.phone.StatusBar: void setBouncerShowing(boolean)>
<com.android.commands.hid.Device: void sendReport(byte[])>
<com.android.systemui.plugins.qs.QSIconView: void disableAnimation()>
<com.android.keyguard.PasswordTextView: void reset(boolean,boolean)>
<android.database.TableHelper: java.lang.String readSql()>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void setKeyguardEnabled(boolean)>
<com.android.systemui.qs.tiles.CastTile: void handleUpdateState(com.android.systemui.plugins.qs.QSTile.BooleanState,java.lang.Object)>
<com.android.systemui.volume.VolumeDialogControllerImpl: boolean areCaptionsEnabled()>
<com.android.server.NativeDaemonConnectorException: void <init>(java.lang.String,java.lang.Throwable)>
<com.android.server.notification.RankingReconsideration: void work()>
<com.android.systemui.pip.phone.PipTouchState: android.graphics.PointF getVelocity()>
<com.android.systemui.pip.tv.PipControlsView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.policy.PhoneWindowManager: long interceptKeyBeforeDispatching(com.android.server.policy.WindowManagerPolicy.WindowState,android.view.KeyEvent,int)>
<com.android.systemui.statusbar.phone.PanelView: void onExpandingFinished()>
<com.android.systemui.volume.SegmentedButtons: java.lang.Object getSelectedValue()>
<com.android.server.media.MediaSessionRecord: boolean hasFlag(int)>
<com.android.server.IoThread: android.os.Handler getHandler()>
<com.android.systemui.statusbar.phone.KeyguardStatusBarView: void onConfigurationChanged(android.content.res.Configuration)>
<android.os.SomeService: android.os.IBinder onBind(android.content.Intent)>
<com.android.server.locksettings.SyntheticPasswordManager: byte[] decryptSPBlob(java.lang.String,byte[],byte[])>
<com.android.systemui.qs.tileimpl.QSTileBaseView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.android.systemui.statusbar.KeyguardIndicationController.BaseKeyguardCallback: void onBiometricRunningStateChanged(boolean,android.hardware.biometrics.BiometricSourceType)>
<com.android.systemui.power.PowerUI.WarningsUI: void dismissInvalidChargerWarning()>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationTemplateViewWrapper: void setContentHeight(int,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isPackageSuspended(android.content.ComponentName,java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.phone.NotificationGroupManager: boolean isGroupChild(android.service.notification.StatusBarNotification)>
<com.android.systemui.statusbar.CommandQueue: void setWindowState(int,int,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean generateKeyPair(android.content.ComponentName,java.lang.String,java.lang.String,android.security.keystore.ParcelableKeyGenParameterSpec,int,android.security.keymaster.KeymasterCertificateChain)>
<com.android.systemui.statusbar.TransformableView: void transformTo(com.android.systemui.statusbar.TransformableView,java.lang.Runnable)>
<com.android.server.biometrics.BiometricServiceBase: int statsModality()>
<com.android.systemui.statusbar.AlphaOptimizedImageView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.server.accounts.AccountManagerService: java.lang.String peekAuthToken(android.accounts.Account,java.lang.String)>
<com.android.localtransport.LocalTransport: long getBackupQuota(java.lang.String,boolean)>
<com.android.systemui.qs.QSPanel: int getGridHeight()>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean hasConflictingGestures()>
<com.android.systemui.qs.tiles.FlashlightTile: android.content.Intent getLongClickIntent()>
<com.android.systemui.stackdivider.WindowManagerProxy: void resizeDockedStack(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect)>
<com.android.systemui.statusbar.GestureRecorder: java.lang.String toJsonLocked()>
<com.android.commands.hid.Event.Reader: com.android.commands.hid.Event getNextEvent()>
<com.android.server.pm.PackageManagerService: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String,java.lang.String,int)>
<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexxOES(int,int,int,int,int)>
<com.android.keyguard.KeyguardStatusView: void <init>(android.content.Context)>
<android.net.netlink.NetlinkErrorMessage: java.lang.String toString()>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: boolean getLastNavBarVisible()>
<com.android.systemui.statusbar.ViewTransformationHelper: void addTransformedView(int,android.view.View)>
<android.net.ipmemorystore.NetworkAttributes.Builder: android.net.ipmemorystore.NetworkAttributes.Builder setDnsAddresses(java.util.List)>
<com.android.server.timedetector.SimpleTimeDetectorStrategy: void initialize(com.android.server.timedetector.TimeDetectorStrategy.Callback)>
<com.android.server.notification.NotificationManagerService: boolean isBlocked(com.android.server.notification.NotificationRecord,com.android.server.notification.NotificationUsageStats)>
<com.android.systemui.recents.views.TaskStackView: void relayoutTaskViews(com.android.systemui.recents.utilities.AnimationProps)>
<com.android.server.search.Searchables: void updateSearchableList()>
<com.android.settingslib.widget.CandidateInfo: android.graphics.drawable.Drawable loadIcon()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean bindDeviceAdminServiceAsUser(android.content.ComponentName,android.app.IApplicationThread,android.os.IBinder,android.content.Intent,android.app.IServiceConnection,int,int)>
<com.android.server.location.GnssLocationProvider: void injectTime(long,long,int)>
<com.android.systemui.classifier.EndPointLengthClassifier: void <init>(com.android.systemui.classifier.ClassifierData)>
<com.android.systemui.statusbar.phone.NavigationPrototypeController: void unregister()>
<com.android.systemui.qs.tileimpl.QSTileImpl: void handleDestroy()>
<com.android.server.accessibility.AccessibilityManagerService: boolean isAccessibilityButtonShown()>
<com.android.systemui.recents.views.RecentsView: void onBusEvent(com.android.systemui.recents.events.activity.DismissRecentsToHomeAnimationStarted)>
<com.android.printspooler.model.PrintSpoolerService: boolean setPrintJobState(android.print.PrintJobId,int,java.lang.String)>
<com.android.server.biometrics.BiometricServiceBase: void setActiveUserInternal(int)>
<com.android.gallery3d.glrenderer.BasicTexture: void invalidateAllTextures()>
<com.android.systemui.statusbar.StatusBarIconView: android.service.notification.StatusBarNotification getNotification()>
<com.android.systemui.statusbar.policy.MobileSignalController: int getDataContentDescription()>
<com.android.server.infra.AbstractMasterSystemService: void onServiceNameChanged(int,java.lang.String,boolean)>
<com.android.systemui.statusbar.KeyguardAffordanceView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.printspooler.renderer.IPdfRenderer: void closeDocument()>
<com.android.settingslib.bluetooth.HeadsetProfile: android.bluetooth.BluetoothDevice getActiveDevice()>
<com.android.server.signedconfig.SignedConfig: com.android.server.signedconfig.SignedConfig parse(java.lang.String,java.util.Set,java.util.Map)>
<com.android.server.storage.CacheQuotaStrategy: android.util.Pair readFromXml(java.io.InputStream)>
<com.android.settingslib.widget.BarChartInfo: int getDetails()>
<com.android.systemui.statusbar.policy.BluetoothController: boolean canConfigBluetooth()>
<com.android.systemui.shared.system.ActivityManagerWrapper: void startRecentsActivity(android.content.Intent,com.android.systemui.shared.system.AssistDataReceiver,com.android.systemui.shared.system.RecentsAnimationListener,java.util.function.Consumer,android.os.Handler)>
<com.android.server.display.WifiDisplayController.Listener: void onScanStarted()>
<com.android.systemui.qs.tiles.BluetoothTile: boolean isAvailable()>
<com.android.settingslib.core.instrumentation.EventLogWriter: void action(android.content.Context,int,boolean)>
<com.android.systemui.statusbar.RemoteInputController.Delegate: void requestDisallowLongPressAndDismiss()>
<com.android.systemui.settings.BrightnessController.BrightnessStateChangeCallback: void onBrightnessLevelChanged()>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void dismissWithAction(com.android.systemui.plugins.ActivityStarter.OnDismissAction,java.lang.Runnable,boolean)>
<com.android.systemui.AutoReinflateContainer: void onUiModeChanged()>
<android.database.SQLiteDatabasePerfTest: void tearDown()>
<com.android.server.locksettings.LockSettingsService: void setServerParams(byte[])>
<com.android.systemui.qs.QSSecurityFooter: void onClick(android.view.View)>
<com.android.wallpapercropper.CropView.TouchCallback: void onTouchDown()>
<com.android.settingslib.wifi.TestAccessPointBuilder: com.android.settingslib.wifi.AccessPoint build()>
<com.android.server.NetworkManagementService: boolean getIpForwardingEnabled()>
<com.android.aapt.namespace.libtwo.TextView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.accessibility.AccessibilityGestureDetector.Listener: boolean onGestureCancelled(android.view.MotionEvent,int)>
<com.android.systemui.recents.views.TaskView: void onStartLaunchTargetEnterAnimation(com.android.systemui.recents.views.TaskViewTransform,int,boolean,com.android.systemui.recents.misc.ReferenceCountedTrigger)>
<com.android.keyguard.PasswordTextView.UserActivityListener: void onUserActivity()>
<com.android.server.usb.descriptors.Usb10ASGeneral: byte getDelay()>
<com.android.printservice.recommendation.util.DiscoveryListenerMultiplexer: void addListener(android.net.nsd.NsdManager,java.lang.String,android.net.nsd.NsdManager.DiscoveryListener)>
<com.android.server.locksettings.recoverablekeystore.RecoverableKeyStoreManager: com.android.server.locksettings.recoverablekeystore.RecoverableKeyStoreManager getInstance(android.content.Context,android.security.KeyStore)>
<com.android.settingslib.media.MediaDevice: android.graphics.drawable.Drawable getIcon()>
<com.android.settingslib.location.InjectedSetting: java.lang.String toString()>
<com.android.settingslib.bluetooth.MapProfile: boolean connect(android.bluetooth.BluetoothDevice)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean isInflationFlagSet(int)>
<com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer: void setActualHeight(int)>
<com.android.server.locksettings.recoverablekeystore.KeySyncUtils: byte[] decryptApplicationKey(byte[],byte[],byte[])>
<com.android.systemui.statusbar.phone.StatusBarWindowController: void onRemoteInputActive(boolean)>
<com.android.systemui.fragments.FragmentService: void destroyAll()>
<android.media.MediaPlayer2.DrmPreparationInfo.Builder: android.media.MediaPlayer2.DrmPreparationInfo.Builder setKeySetId(byte[])>
<com.android.systemui.SystemUIApplication: void onCreate()>
<com.android.systemui.plugins.OverlayPlugin: boolean holdStatusBarOpen()>
<com.android.server.timezone.PackageManagerHelper: long getInstalledPackageVersion(java.lang.String)>
<com.android.systemui.qs.QSCarrierGroup: void onFinishInflate()>
<com.android.server.uri.GrantUri: com.android.server.uri.GrantUri resolve(int,android.net.Uri)>
<com.android.settingslib.TwoTargetPreference: void <init>(android.content.Context)>
<com.android.externalstorage.TestDocumentsProvider: android.content.res.AssetFileDescriptor openDocumentThumbnail(java.lang.String,android.graphics.Point,android.os.CancellationSignal)>
<com.android.gallery3d.glrenderer.UploadedTexture: boolean uploadLimitReached()>
<com.android.systemui.DependencyBinder: com.android.systemui.plugins.DarkIconDispatcher provideDarkIconDispatcher(com.android.systemui.statusbar.phone.DarkIconDispatcherImpl)>
<com.android.server.location.AbstractLocationProvider.LocationProviderManager: void onReportLocation(android.location.Location)>
<com.android.powermodel.component.CpuProfile.Builder: void setActiveMa(float)>
<com.android.server.location.ContextHubClientBroker: int sendMessageToNanoApp(android.hardware.location.NanoAppMessage)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: boolean isUnlockWithWallpaper()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: android.graphics.Path getCustomClipPath(android.view.View)>
<com.android.server.accessibility.FingerprintGestureDispatcher: void onClientActiveChanged(boolean)>
<com.android.systemui.recents.model.HighResThumbnailLoader: void setVisible(boolean)>
<com.android.server.locksettings.recoverablekeystore.KeySyncUtils: byte[] calculateThmKfHash(byte[])>
<javax.microedition.khronos.opengles.GL10: void glTexEnvx(int,int,int)>
<com.android.systemui.statusbar.notification.row.ExpandableView: boolean isContentExpandable()>
<com.android.systemui.usb.UsbAccessoryUriActivity: void onCreate(android.os.Bundle)>
<com.android.gallery3d.exif.ExifInterface: java.lang.Object getTagValue(int)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void setBackgroundTintColor(int)>
<android.database.CursorWindowPerfTest: void teardown()>
<com.android.server.AnyMotionDetector: void checkForAnyMotion()>
<com.android.systemui.tuner.PowerNotificationControlsFragment: void onPause()>
<com.android.systemui.plugins.qs.QS: void setListening(boolean)>
<com.android.server.location.GeocoderProxy: java.lang.String getConnectedPackageName()>
<com.android.server.AppStateTracker: void dump(com.android.internal.util.IndentingPrintWriter)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean isExpandAnimationRunning()>
<com.android.server.usb.descriptors.UsbACTerminal: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>
<com.android.server.vr.EnabledComponentsObserver: void onSettingChanged()>
<com.android.server.usb.UsbService.Lifecycle: void <init>(android.content.Context)>
<com.android.server.inputmethod.MultiClientInputMethodManagerService.Lifecycle: void onStartUser(int)>
<com.android.systemui.statusbar.phone.RegionSamplingHelper.SamplingCallback: void onRegionDarknessChanged(boolean)>
<com.android.systemui.bubbles.BubbleStackView: void setSelectedBubble(com.android.systemui.bubbles.Bubble)>
<com.android.server.biometrics.BiometricUtils: void addBiometricForUser(android.content.Context,int,android.hardware.biometrics.BiometricAuthenticator.Identifier)>
<com.android.systemui.statusbar.policy.SmartReplyConstants: long getOnClickInitDelay()>
<com.android.server.notification.ConditionProviders: com.android.server.notification.ManagedServices.ManagedServiceInfo checkServiceToken(android.service.notification.IConditionProvider)>
<com.android.systemui.statusbar.phone.PanelView: void onUnlockHintFinished()>
<com.android.server.locksettings.LockSettingsService: void <init>(com.android.server.locksettings.LockSettingsService.Injector)>
<com.android.preload.ui.SequenceUI: com.android.preload.ui.SequenceUI client(java.lang.String)>
<com.android.systemui.shared.recents.model.TaskKeyCache: java.lang.Object getAndInvalidateIfModified(com.android.systemui.shared.recents.model.Task.TaskKey)>
<com.android.server.notification.NotificationRecord: java.lang.String getGroupKey()>
<com.android.systemui.shared.system.InputMonitorCompat: void pilferPointers()>
<com.android.server.notification.ConditionProviders: void ensureRecordExists(android.content.ComponentName,android.net.Uri,android.service.notification.IConditionProvider)>
<com.android.uiautomator.testrunner.UiAutomatorTestCase: void sleep(long)>
<com.android.systemui.plugins.VolumeDialog.Callback: void onZenPrioritySettingsClicked()>
<com.android.systemui.recents.events.ui.dragndrop.DragEndCancelledEvent: void <init>(com.android.systemui.recents.model.TaskStack,com.android.systemui.shared.recents.model.Task,com.android.systemui.recents.views.TaskView)>
<com.android.server.notification.ManagedServices: boolean isServiceTokenValidLocked(android.os.IInterface)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setSingleLineWidthIndention(int)>
<com.android.server.pm.PackageManagerService: boolean isProtectedBroadcast(java.lang.String)>
<com.android.server.location.GnssLocationProvider.GnssSystemInfoProvider: int getGnssYearOfHardware()>
<com.android.server.biometrics.face.FaceConstants: java.lang.String tagRemoveStartError()>
<com.android.powermodel.ParseException: void <init>(java.lang.String)>
<com.android.server.ServiceWatcher: void onServiceDisconnected(android.content.ComponentName)>
<com.android.systemui.SystemUIFactory: com.android.systemui.power.EnhancedEstimates provideEnhancedEstimates(android.content.Context)>
<com.android.systemui.statusbar.SmartReplyController: void stopSending(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.systemui.statusbar.notification.stack.AnimationFilter: com.android.systemui.statusbar.notification.stack.AnimationFilter animateHeight()>
<com.android.server.pm.PackageManagerService: int installExistingPackageAsUser(java.lang.String,int,int,int,java.util.List)>
<com.android.server.usb.descriptors.Usb20ASFormatIII: void <init>(int,byte,byte,byte,int)>
<com.android.systemui.statusbar.policy.NetworkController.AccessPointController: void removeAccessPointCallback(com.android.systemui.statusbar.policy.NetworkController.AccessPointController.AccessPointCallback)>
<com.android.server.testing.shadows.ShadowRecoveryController: java.util.List getAliases()>
<com.android.uiautomator.core.UiObject: boolean clickBottomRight()>
<com.android.server.policy.WindowManagerPolicy: void unregisterDisplayFoldListener(android.view.IDisplayFoldListener)>
<android.os.ParcelArrayPerfTest: void timeCreateIntArray()>
<com.android.systemui.util.wakelock.SettableWakeLock: void <init>(com.android.systemui.util.wakelock.WakeLock,java.lang.String)>
<javax.microedition.khronos.opengles.GL11: void glGetPointerv(int,java.nio.Buffer[])>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: void applyRoundness()>
<com.android.statementservice.retriever.Utils: java.lang.String computeNormalizedSha256Fingerprint(byte[])>
<com.android.systemui.statusbar.car.UserGridRecyclerView.UserAdapter: int getItemCount()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setAppName(java.lang.String)>
<com.android.server.media.MediaRouterService: boolean isPlaybackActive(android.media.IMediaRouterClient)>
<com.android.settingslib.AppItem: int compareTo(com.android.settingslib.AppItem)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void onOverlayChanged()>
<com.android.systemui.assist.AssistHandleBehaviorController: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.statusbar.notification.logging.NotificationLogger: void startNotificationLogging()>
<com.android.server.pm.PackageManagerServiceUtils: void dumpCriticalInfo(java.io.PrintWriter,java.lang.String)>
<com.android.server.adb.AdbService.Lifecycle: void onStart()>
<com.android.systemui.statusbar.phone.StatusBarSignalPolicy: void setIsAirplaneMode(com.android.systemui.statusbar.policy.NetworkController.IconState)>
<com.android.systemui.qs.QSSecurityFooter: void <init>(com.android.systemui.qs.QSPanel,android.content.Context)>
<com.android.server.content.SyncManagerConstants: void start()>
<com.android.powermodel.component.ModemRemainderActivity: void <init>(com.android.powermodel.AttributionKey)>
<com.android.server.notification.NotificationRecord: void setSeen()>
<com.android.settingslib.core.instrumentation.LogWriter: void action(android.content.Context,int,int)>
<com.android.keyguard.ViewMediatorCallback: void onCancelClicked()>
<com.android.systemui.statusbar.policy.DeviceProvisionedController: int getCurrentUser()>
<com.android.systemui.statusbar.car.UserGridRecyclerView.UserRecord: void <init>(android.content.pm.UserInfo,boolean,boolean,boolean)>
<com.android.systemui.globalactions.GlobalActionsColumnLayout: void onMeasure(int,int)>
<javax.obex.ObexTransport: java.io.InputStream openInputStream()>
<com.android.systemui.statusbar.phone.NavigationBarView: void setWakeAndUnlocking(boolean)>
<com.android.server.slice.SliceShellCommand: int onCommand(java.lang.String)>
<com.android.keyguard.KeyguardHostView: void showMessage(java.lang.CharSequence,android.content.res.ColorStateList)>
<com.android.shell.BugreportStorageProvider: android.database.Cursor queryRoots(java.lang.String[])>
<com.android.systemui.recents.events.activity.ShowStackActionButtonEvent: void <init>(boolean)>
<com.android.systemui.DessertCaseDream: void onDreamingStarted()>
<com.android.systemui.statusbar.phone.KeyguardBouncer: void dump(java.io.PrintWriter)>
<com.android.systemui.statusbar.phone.StatusBar: void onHeadsUpStateChanged(com.android.systemui.statusbar.notification.collection.NotificationEntry,boolean)>
<android.media.Session2Link: void <init>(android.media.MediaSession2)>
<com.android.settingslib.widget.ActionButtonsPreference: com.android.settingslib.widget.ActionButtonsPreference setButton4Icon(int)>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationDecoratedCustomViewWrapper: void <init>(android.content.Context,android.view.View,com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void onVisibilityChanged(android.view.View,int)>
<com.android.systemui.Gefingerpoken: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.server.testing.shadows.ShadowBinder: void restoreCallingIdentity(long)>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: void setOnActivatedListener(com.android.systemui.statusbar.notification.row.ActivatableNotificationView.OnActivatedListener)>
<com.android.systemui.statusbar.StatusBarIconView.OnVisibilityChangedListener: void onVisibilityChanged(int)>
<com.android.shell.BugreportProgressService: void onDestroy()>
<com.android.settingslib.fuelgauge.BatterySaverUtils: void suppressAutoBatterySaver(android.content.Context)>
<com.android.uiautomator.core.UiAutomatorBridge: void waitForIdle()>
<com.android.server.media.MediaSessionService: void monitor()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setAboveShelfChangedListener(com.android.systemui.statusbar.notification.AboveShelfChangedListener)>
<com.android.server.policy.WindowManagerPolicy.WindowState: java.lang.String getOwningPackage()>
<com.android.systemui.recents.misc.DozeTrigger: boolean isDozing()>
<android.net.netlink.StructNlMsgHdr: android.net.netlink.StructNlMsgHdr parse(java.nio.ByteBuffer)>
<com.google.android.startop.iorap.TaskResult: void writeToParcel(android.os.Parcel,int)>
<com.android.keyguard.KeyguardPatternView: void onAttachedToWindow()>
<com.android.server.statusbar.StatusBarManagerService: void remTile(android.content.ComponentName)>
<javax.microedition.khronos.opengles.GL10: void glPolygonOffset(float,float)>
<com.android.systemui.statusbar.notification.ActivityLaunchAnimator: boolean isAnimationPending()>
<com.android.server.incident.IncidentCompanionService: void onStart()>
<com.android.settingslib.wifi.WifiStatusTracker: void refreshLocale()>
<android.processor.view.inspector.InspectableClassModel.Property: void setIntEnumEntries(java.util.List)>
<com.android.server.content.SyncStorageEngine: void addStatusChangeListener(int,int,android.content.ISyncStatusObserver)>
<com.android.settingslib.media.MediaDevice: boolean isCarKitDevice()>
<com.android.systemui.ForegroundServiceController: boolean isDisclosureNeededForUser(int)>
<com.android.keyguard.clock.ImageClock: void onTimeZoneChanged(java.util.TimeZone)>
<com.android.gallery3d.common.BitmapUtils: android.graphics.Bitmap resizeBitmapByScale(android.graphics.Bitmap,float,boolean)>
<com.android.systemui.shared.system.ActivityManagerWrapper: void startActivityFromRecentsAsync(com.android.systemui.shared.recents.model.Task.TaskKey,android.app.ActivityOptions,java.util.function.Consumer,android.os.Handler)>
<com.android.systemui.plugins.SensorManagerPlugin.SensorEventListener: void onSensorChanged(com.android.systemui.plugins.SensorManagerPlugin.SensorEvent)>
<com.android.systemui.SwipeHelper: void onChildSnappedBack(android.view.View,float)>
<com.android.systemui.statusbar.ScrimView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.server.biometrics.BiometricServiceBase: void handleUserSwitching(int)>
<com.android.systemui.volume.ZenModePanel: void setEmptyState(int,int)>
<com.android.server.audio.AudioService: void playerHasOpPlayAudio(int,boolean)>
<com.android.uiautomator.core.UiObjectNotFoundException: void <init>(java.lang.String,java.lang.Throwable)>
<com.android.systemui.qs.car.CarQSFooter: void setExpandClickListener(android.view.View.OnClickListener)>
<com.android.server.devicepolicy.DevicePolicyManagerService: android.content.ComponentName getGlobalProxyAdmin(int)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onBiometricRunningStateChanged(boolean,android.hardware.biometrics.BiometricSourceType)>
<com.android.systemui.statusbar.notification.VisualStabilityManager: void onHeadsUpStateChanged(com.android.systemui.statusbar.notification.collection.NotificationEntry,boolean)>
<com.android.systemui.statusbar.policy.Listenable: void setListening(boolean)>
<com.android.keyguard.PasswordTextView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.android.server.testing.shadows.ShadowKeyValueBackupJob: void schedule(int,android.content.Context,long,com.android.server.backup.BackupManagerConstants)>
<com.android.systemui.statusbar.notification.logging.NotificationLogger: void <init>(com.android.systemui.statusbar.NotificationListener,com.android.systemui.UiOffloadThread,com.android.systemui.statusbar.notification.NotificationEntryManager,com.android.systemui.plugins.statusbar.StatusBarStateController,com.android.systemui.statusbar.notification.logging.NotificationLogger.ExpansionStateLogger)>
<com.android.server.statusbar.StatusBarManagerService: void onBiometricAuthenticated(boolean,java.lang.String)>
<com.android.systemui.analytics.DataCollector: void onUnlockHintStarted()>
<com.android.server.biometrics.fingerprint.FingerprintConstants: java.lang.String tagRemoveStartError()>
<com.android.systemui.plugins.OverlayPlugin: void setup(android.view.View,android.view.View,com.android.systemui.plugins.OverlayPlugin.Callback)>
<com.android.systemui.screenshot.ScreenshotServiceErrorReceiver: void onReceive(android.content.Context,android.content.Intent)>
<javax.obex.SessionNotifier: javax.obex.ObexSession acceptAndOpen(javax.obex.ServerRequestHandler,javax.obex.Authenticator)>
<com.android.server.locksettings.recoverablekeystore.certificate.CertValidationException: void <init>(java.lang.String,java.lang.Exception)>
<com.android.printspooler.util.PageRangeUtils: boolean isAllPages(android.print.PageRange)>
<com.android.keyguard.KeyguardSecurityView: boolean startDisappearAnimation(java.lang.Runnable)>
<com.android.server.content.SyncOperation: java.lang.String toSafeString()>
<com.android.server.policy.IconUtilities: android.graphics.Bitmap createIconBitmap(android.graphics.drawable.Drawable)>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: void reset()>
<com.android.packageinstaller.UninstallUninstalling: void onBackPressed()>
<com.android.systemui.statusbar.policy.UserInfoController: void reloadUserInfo()>
<com.android.systemui.Dependency: java.lang.Object get(com.android.systemui.Dependency.DependencyKey)>
<com.android.server.TelephonyRegistry: void listenForSubscriber(int,java.lang.String,com.android.internal.telephony.IPhoneStateListener,int,boolean)>
<com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer: int getNotificationChildCount()>
<com.android.preload.ClientUtils: com.android.ddmlib.Client findClient(com.android.ddmlib.IDevice,java.lang.String,int)>
<com.android.systemui.pip.tv.PipControlButtonView: void setOnFocusChangeListener(android.view.View.OnFocusChangeListener)>
<com.android.settingslib.Utils: android.content.res.ColorStateList getColorAttr(android.content.Context,int)>
<com.android.systemui.recents.utilities.Utilities: android.util.ArraySet arrayToSet(java.lang.Object[],android.util.ArraySet)>
<com.android.server.ConnectivityService: java.lang.String[] getTetheredDhcpRanges()>
<com.android.systemui.statusbar.notification.row.NotificationGutsManager: void setNotificationActivityStarter(com.android.systemui.statusbar.notification.NotificationActivityStarter)>
<com.android.settingslib.AppItem: int describeContents()>
<com.android.server.usb.descriptors.UsbMSMidiHeader: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>
<com.android.commands.svc.Svc.Command: void run(java.lang.String[])>
<com.android.systemui.statusbar.phone.SettingsButton: void startAccelSpin()>
<com.android.server.accessibility.MagnificationGestureHandler.State: java.lang.String nameOf(com.android.server.accessibility.MagnificationGestureHandler.State)>
<com.android.server.notification.ZenModeHelper: void onSystemReady()>
<com.android.systemui.classifier.FalsingLog: void w(java.lang.String,java.lang.String)>
<com.android.systemui.ActivityStarterDelegate: void startPendingIntentDismissingKeyguard(android.app.PendingIntent,java.lang.Runnable,android.view.View)>
<com.android.settingslib.location.SettingsInjector: java.util.Map getInjectedSettings(android.content.Context,int)>
<com.android.server.biometrics.face.FaceService: java.lang.String getTag()>
<com.android.server.location.PassiveProvider: void setRequest(com.android.internal.location.ProviderRequest,android.os.WorkSource)>
<com.android.systemui.qs.PathInterpolatorBuilder: android.view.animation.Interpolator getXInterpolator()>
<com.android.server.NetworkManagementService: void setInterfaceQuota(java.lang.String,long)>
<com.android.server.policy.WindowManagerPolicy: void notifyCameraLensCoverSwitchChanged(long,boolean)>
<javax.obex.ObexHelper: byte[] getTagValue(byte,byte[])>
<com.android.server.pm.ShortcutBitmapSaver: void <init>(com.android.server.pm.ShortcutService)>
<com.android.printspooler.model.RemotePrintDocument: boolean update(android.print.PrintAttributes,android.print.PageRange[],boolean)>
<com.android.systemui.statusbar.phone.ScrimController: void setHasBackdrop(boolean)>
<com.android.systemui.recents.RecentsActivityLaunchState: void reset()>
<com.android.settingslib.net.NetworkStatsSummaryLoader: void onStopLoading()>
<com.android.server.pm.PackageManagerServiceUtils: android.content.pm.PackageInfoLite getMinimalPackageInfo(android.content.Context,java.lang.String,int,java.lang.String)>
<com.android.systemui.globalactions.ListGridLayout: android.view.ViewGroup getParentView(int,boolean,boolean)>
<android.net.shared.PrivateDnsConfig: android.net.shared.PrivateDnsConfig fromParcel(android.net.PrivateDnsConfigParcel)>
<com.android.systemui.qs.tiles.IntentTile: void handleUpdateState(com.android.systemui.plugins.qs.QSTile.State,java.lang.Object)>
<com.android.systemui.statusbar.phone.StatusBarIconController.IconManager: void onRemoveIcon(int)>
<com.android.systemui.statusbar.phone.ManagedProfileControllerImpl: void <init>(android.content.Context)>
<com.android.server.testing.shadows.ShadowRecoveryController: void setThrowsInternalError(boolean)>
<com.android.systemui.statusbar.policy.ExtensionController.ExtensionBuilder: com.android.systemui.statusbar.policy.ExtensionController.ExtensionBuilder withPlugin(java.lang.Class,java.lang.String)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void setLeftAssistIcon(android.graphics.drawable.Drawable)>
<com.android.server.content.SyncStorageEngine.EndPoint: boolean matchesSpec(com.android.server.content.SyncStorageEngine.EndPoint)>
<com.android.server.pm.UserRestrictionsUtils: android.os.Bundle mergeAll(android.util.SparseArray)>
<com.android.systemui.statusbar.policy.ZenModeControllerImpl: boolean areNotificationsHiddenInShade()>
<com.android.systemui.classifier.brightline.BrightLineFalsingManager: void onScreenTurningOn()>
<com.android.systemui.statusbar.notification.stack.ViewState: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.qs.QSTileHost: void removeTile(java.lang.String)>
<com.android.systemui.SystemUIFactory: com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager createStatusBarKeyguardViewManager(android.content.Context,com.android.keyguard.ViewMediatorCallback,com.android.internal.widget.LockPatternUtils)>
<com.android.statsd.loadtest.LoadtestActivity: com.android.os.StatsLog.StatsdStatsReport getMetadata()>
<com.android.settingslib.graph.SignalDrawable: void draw(android.graphics.Canvas)>
<com.android.systemui.statusbar.NotificationLockscreenUserManager: boolean shouldHideNotifications(int)>
<android.os.ParcelArrayPerfTest: void timeWriteIntArray()>
<com.android.systemui.analytics.SensorLoggerSession: void <init>(long,long)>
<com.android.systemui.statusbar.phone.ScreenPinningNotify: void showPinningExitToast()>
<com.android.powermodel.ActivityReport: java.util.List findApp(java.lang.String)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: boolean isShowing()>
<com.android.systemui.classifier.FalsingManagerImpl: void onStartExpandingFromPulse()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isDeviceProvisioned()>
<com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer: android.view.NotificationHeaderView getLowPriorityHeaderView()>
<com.android.printspooler.model.CustomPrinterIconCache: void onCustomPrinterIconLoaded(android.print.PrinterId,android.graphics.drawable.Icon)>
<com.android.server.DeviceIdleController: java.lang.String[] getSystemPowerWhitelistExceptIdleInternal()>
<com.android.systemui.recents.misc.SystemServicesProxy: android.app.ActivityManager.StackInfo getSplitScreenPrimaryStack()>
<com.android.systemui.statusbar.NotificationRemoteInputManager.RemoteInputHistoryExtender: boolean shouldExtendLifetime(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.keyguard.CarrierTextController: void <init>(android.content.Context,java.lang.CharSequence,boolean,boolean)>
<com.android.systemui.glwallpaper.GLWallpaperRenderer.SurfaceProxy: void postRender()>
<com.android.settingslib.core.instrumentation.SharedPreferencesLogger: android.content.SharedPreferences.Editor edit()>
<com.android.server.location.GnssBatchingProviderTest: void setUp()>
<com.android.server.ConnectivityService: android.net.Network[] getAllNetworks()>
<com.android.systemui.statusbar.phone.DemoStatusIcons: void updateMobileState(com.android.systemui.statusbar.phone.StatusBarSignalPolicy.MobileIconState)>
<com.android.systemui.SystemUIApplication: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.gallery3d.glrenderer.GLId: int generateTexture()>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationHeaderViewWrapper: void transformFrom(com.android.systemui.statusbar.TransformableView,float)>
<com.android.systemui.analytics.DataCollector: void onCameraOn()>
<com.android.server.security.VerityUtils: byte[] generateApkVerityRootHash(java.lang.String)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setHeadsUpManager(com.android.systemui.statusbar.phone.HeadsUpManagerPhone)>
<com.android.server.autofill.ui.AutoFillUI: void hideFillUi(com.android.server.autofill.ui.AutoFillUI.AutoFillUiCallback)>
<com.android.systemui.qs.GlobalSetting: void onChange(boolean)>
<com.android.server.NetworkScoreService: boolean updateScores(android.net.ScoredNetwork[])>
<com.android.systemui.tuner.CustomListPreference.CustomListPreferenceDialogFragment: void onSaveInstanceState(android.os.Bundle)>
<com.android.systemui.assist.AssistManager: android.content.ComponentName getVoiceInteractorComponentName()>
<javax.microedition.khronos.opengles.GL11: void glGetLightfv(int,int,float[],int)>
<com.android.keyguard.KeyguardSimPinView: int getPasswordTextViewId()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void forceNoOverlappingRendering(boolean)>
<com.android.systemui.biometrics.FaceDialogView: void onDialogAnimatedIn()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setActivePasswordState(android.app.admin.PasswordMetrics,int)>
<com.android.server.locksettings.recoverablekeystore.KeySyncUtils: byte[] packVaultParams(java.security.PublicKey,long,int,byte[])>
<com.android.settingslib.media.MediaDeviceUtils: java.lang.String getId(android.bluetooth.BluetoothDevice)>
<com.android.systemui.statusbar.phone.PanelView: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setUseIncreasedCollapsedHeight(boolean)>
<com.android.printspooler.model.PrintSpoolerService.PrintSpooler: void getPrintJobInfos(android.print.IPrintSpoolerCallbacks,android.content.ComponentName,int,int,int)>
<com.android.keyguard.clock.ClockOptionsProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>
<com.android.systemui.statusbar.CommandQueue: void togglePanel()>
<com.android.systemui.recents.views.lowram.TaskStackLowRamLayoutAlgorithm: void reloadOnConfigurationChange(android.content.Context)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isProvisioningAllowed(java.lang.String,java.lang.String)>
<javax.obex.ClientOperation: boolean continueOperation(boolean,boolean)>
<com.android.settingslib.development.DeveloperOptionsPreferenceController: void onDeveloperOptionsSwitchDisabled()>
<com.android.server.notification.SystemConditionProviderService: void dumpUpcomingTime(java.io.PrintWriter,java.lang.String,long,long)>
<com.android.server.AttributeCache: com.android.server.AttributeCache.Entry get(java.lang.String,int,int[],int)>
<com.android.preload.DumpData: java.util.Date getDate()>
<com.android.systemui.qs.SlashDrawable: void setTintMode(android.graphics.PorterDuff.Mode)>
<com.android.server.pm.PackageManagerService: java.lang.String[] setPackagesSuspendedAsUser(java.lang.String[],boolean,android.os.PersistableBundle,android.os.PersistableBundle,android.content.pm.SuspendDialogInfo,java.lang.String,int)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: float getContentTranslation()>
<com.android.systemui.qs.QSScrollLayout: boolean shouldIntercept(android.view.MotionEvent)>
<com.android.systemui.bubbles.BubbleController: boolean isStackExpanded()>
<android.perftests.utils.StateKeeperRule: void <init>(android.perftests.utils.StateManager)>
<com.android.systemui.biometrics.FingerprintDialogView: boolean shouldGrayAreaDismissDialog()>
<com.android.server.notification.ManagedServices: void onServiceAdded(com.android.server.notification.ManagedServices.ManagedServiceInfo)>
<com.android.systemui.recents.RecentsActivity: void onBusEvent(com.android.systemui.recents.events.activity.CancelEnterRecentsWindowAnimationEvent)>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.ui.focus.NavigateTaskViewEvent)>
<com.android.systemui.statusbar.phone.NavigationModeController: void removeListener(com.android.systemui.statusbar.phone.NavigationModeController.ModeChangedListener)>
<com.android.server.accessibility.AccessibilityManagerService.UserState: int getSoftKeyboardShowMode()>
<com.android.keyguard.KeyguardStatusView: void setPulsing(boolean)>
<com.android.server.pm.PackageSettingBase: void setUpdateAvailable(boolean)>
<com.android.systemui.qs.tiles.UserDetailView.Adapter: com.android.systemui.qs.tiles.UserDetailItemView createUserDetailItemView(android.view.View,android.view.ViewGroup,com.android.systemui.statusbar.policy.UserSwitcherController.UserRecord)>
<com.android.server.NetworkScoreService: java.lang.String getActiveScorerPackage()>
<com.android.systemui.statusbar.phone.DozeParameters.IntInOutMatcher: void <init>(java.lang.String)>
<com.android.server.pm.KeySetManagerService: void addScannedPackageLPw(android.content.pm.PackageParser.Package)>
<com.android.systemui.doze.DozeSensors: void <init>(android.content.Context,android.app.AlarmManager,android.hardware.SensorManager,com.android.systemui.statusbar.phone.DozeParameters,android.hardware.display.AmbientDisplayConfiguration,com.android.systemui.util.wakelock.WakeLock,com.android.systemui.doze.DozeSensors.Callback,java.util.function.Consumer,com.android.systemui.doze.AlwaysOnDisplayPolicy)>
<com.android.systemui.statusbar.policy.SplitClockView: void onAttachedToWindow()>
<com.android.printspooler.model.PrintSpoolerService.PrintSpooler: void writePrintJobData(android.os.ParcelFileDescriptor,android.print.PrintJobId)>
<com.android.printspooler.ui.PageAdapter: void onOrientationChanged()>
<com.android.keyguard.KeyguardSliceView: void onDensityOrFontScaleChanged()>
<com.android.systemui.plugins.qs.QS: boolean isShowingDetail()>
<com.android.systemui.pip.PipUI: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.LocationManagerService: int resolutionLevelToOp(int)>
<android.media.MediaPlayer2: java.util.List getTrackInfo(android.media.DataSourceDesc)>
<com.android.systemui.statusbar.notification.stack.AmbientState: void setScrollY(int)>
<com.android.server.pm.PackageManagerService: com.android.server.pm.CompilerStats.PackageStats getOrCreateCompilerPackageStats(android.content.pm.PackageParser.Package)>
<com.android.server.content.ContentService: android.content.SyncStatusInfo getSyncStatusAsUser(android.accounts.Account,java.lang.String,android.content.ComponentName,int)>
<com.android.packageinstaller.wear.WearPackageArgs: java.lang.String getCompressionAlg(android.os.Bundle)>
<com.android.server.devicepolicy.DevicePolicyCacheImpl: boolean getScreenCaptureDisabled(int)>
<com.android.settingslib.dream.DreamBackend: void startDreaming()>
<com.android.server.content.ContentService.Lifecycle: void onBootPhase(int)>
<com.android.settingslib.net.NetworkCycleChartData: java.util.List getUsageBuckets()>
<com.android.gallery3d.exif.ExifInterface: android.util.SparseIntArray getTagInfo()>
<com.android.server.notification.NotificationChannelExtractor: com.android.server.notification.RankingReconsideration process(com.android.server.notification.NotificationRecord)>
<com.android.server.media.MediaSessionRecord: int getCurrentVolume()>
<android.app.backup.BackupUtilsTest: void testIsFileSpecifiedInPathList_whenDirectoryAndPathListContainsFirstNotRelatedAndSecondSameDirectory()>
<com.android.server.firewall.Filter: boolean matches(com.android.server.firewall.IntentFirewall,android.content.ComponentName,android.content.Intent,int,int,java.lang.String,int)>
<com.android.server.pm.PackageManagerService: void systemReady()>
<com.android.server.content.SyncStorageEngine: void removeAuthority(com.android.server.content.SyncStorageEngine.EndPoint)>
<com.android.systemui.statusbar.phone.StatusBar: void fadeKeyguardAfterLaunchTransition(java.lang.Runnable,java.lang.Runnable)>
<com.android.systemui.analytics.DataCollector: void onNotificatonStopDraggingDown()>
<com.android.server.notification.ZenModeConditions: void evaluateConfig(android.service.notification.ZenModeConfig,android.content.ComponentName,boolean)>
<com.android.systemui.recents.views.TaskViewThumbnail: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.server.biometrics.fingerprint.FingerprintService: com.android.server.biometrics.BiometricServiceBase.DaemonWrapper getDaemonWrapper()>
<com.android.systemui.recents.views.TaskViewTransform: boolean hasAlphaChangedFrom(float)>
<com.android.systemui.statusbar.notification.stack.NotificationListContainer: void cleanUpViewStateForEntry(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.systemui.statusbar.policy.HeadsUpManager: boolean shouldHeadsUpBecomePinned(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.settingslib.applications.ApplicationsState.Callbacks: void onLauncherInfoChanged()>
<com.android.server.location.GnssSatelliteBlacklistHelper.GnssSatelliteBlacklistCallback: void onUpdateSatelliteBlacklist(int[],int[])>
<com.android.keyguard.KeyguardAbsKeyInputView: void onEmergencyButtonClickedWhenInCall()>
<com.android.systemui.statusbar.phone.ShadeController: void goToKeyguard()>
<com.android.server.content.SyncStorageEngine.EndPoint: void <init>(android.accounts.Account,java.lang.String,int)>
<com.android.server.pm.PackageSetting: void updateFrom(com.android.server.pm.PackageSetting)>
<com.android.settingslib.deviceinfo.StorageVolumeProvider: long getPrimaryStorageSize()>
<com.android.server.policy.WindowManagerPolicy: void startedGoingToSleep(int)>
<com.android.systemui.qs.external.TileLifecycleManager: void setBindService(boolean)>
<com.android.systemui.statusbar.OperatorNameView: void onDetachedFromWindow()>
<com.android.printspooler.ui.PrinterRegistry: void addHistoricalPrinter(android.print.PrinterInfo)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void onDraw(android.graphics.Canvas)>
<com.android.server.locksettings.recoverablekeystore.TestOnlyInsecureCertificateHelper: boolean doesCredentialSupportInsecureMode(int,byte[])>
<com.android.server.tv.TvRemoteProviderWatcher.ProviderMethods: void addProvider(com.android.server.tv.TvRemoteProviderProxy)>
<com.android.settingslib.drawable.UserIconDrawable: void invalidateSelf()>
<com.android.server.accounts.AccountManagerService: android.accounts.Account[] getAccounts(java.lang.String,java.lang.String)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void notifyLockTaskModeChanged(boolean,java.lang.String,int)>
<com.android.systemui.statusbar.phone.BiometricUnlockController: boolean hasPendingAuthentication()>
<com.android.server.location.ContextHubService: int[] getContextHubHandles()>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: void setAmbientGoingAway(boolean)>
<com.android.server.TelephonyRegistry: void notifyCellLocationForSubscriber(int,android.os.Bundle)>
<javax.microedition.khronos.opengles.GL10: void glVertexPointer(int,int,int,java.nio.Buffer)>
<com.android.server.pm.SharedUserSetting: java.util.List getPackages()>
<com.android.server.testing.shadows.ShadowFullBackup: int backupToTar(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.app.backup.FullBackupDataOutput)>
<com.android.systemui.statusbar.notification.NotificationActivityStarter: boolean isCollapsingToShowActivityOverLockscreen()>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: float getMaximumSwipeDistance()>
<com.android.server.testing.shadows.ShadowPerformUnifiedRestoreTask: java.lang.String[] getFilterSet()>
<com.android.server.utils.UserTokenWatcher.Callback: void released(int)>
<com.android.server.accessibility.AbstractAccessibilityServiceConnection.SystemSupport: com.android.server.accessibility.KeyEventDispatcher getKeyEventDispatcher()>
<com.android.systemui.volume.CarVolumeItem: void setSupplementalIcon(android.graphics.drawable.Drawable,boolean)>
<com.android.preload.ui.IUI: java.io.File[] showOpenDialog(boolean)>
<com.android.server.notification.ZenModeHelper: android.app.NotificationManager.Policy getNotificationPolicy()>
<javax.microedition.khronos.opengles.GL11: void glPointParameterf(int,float)>
<com.android.systemui.qs.tiles.DndTile: void handleSetListening(boolean)>
<com.android.server.accounts.AccountManagerService: android.accounts.Account[] getAccountsFromCache(com.android.server.accounts.AccountManagerService.UserAccounts,java.lang.String,int,java.lang.String,boolean)>
<com.android.systemui.qs.tiles.WifiTile: com.android.systemui.plugins.qs.QSIconView createTileView(android.content.Context)>
<lockedregioncodeinjection.LockTargetStateAnalysis: org.objectweb.asm.tree.analysis.BasicValue merge(org.objectweb.asm.tree.analysis.BasicValue,org.objectweb.asm.tree.analysis.BasicValue)>
<javax.microedition.khronos.opengles.GL11: void glGetTexParameteriv(int,int,int[],int)>
<com.android.systemui.statusbar.phone.StatusBarRemoteInputCallback: void onMakeExpandedVisibleForRemoteInput(com.android.systemui.statusbar.notification.row.ExpandableNotificationRow,android.view.View)>
<com.android.server.hdmi.HdmiCecStandbyModeHandler: void <init>(com.android.server.hdmi.HdmiControlService,com.android.server.hdmi.HdmiCecLocalDeviceTv)>
<com.android.settingslib.deviceinfo.StorageMeasurement.MeasurementDetails: java.lang.String toString()>
<com.android.systemui.tuner.TunerZenModePanel: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.powermodel.AttributionKey: com.android.powermodel.SpecialApp getSpecialApp()>
<com.android.server.pm.Installer: void linkNativeLibraryDirectory(java.lang.String,java.lang.String,java.lang.String,int)>
<com.android.systemui.statusbar.notification.NotificationListController: void bind()>
<com.android.systemui.egg.MLand: void removePlayer()>
<com.android.server.accessibility.FingerprintGestureDispatcher: boolean onFingerprintGesture(int)>
<com.android.systemui.statusbar.phone.HeadsUpTouchHelper: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.gallery3d.exif.ExifInterface: void writeExif(java.io.InputStream,java.lang.String)>
<com.android.server.hdmi.SelectRequestBuffer.SelectRequest: boolean isLocalDeviceReady()>
<com.android.systemui.statusbar.policy.CallbackHandler: void setMobileDataIndicators(com.android.systemui.statusbar.policy.NetworkController.IconState,com.android.systemui.statusbar.policy.NetworkController.IconState,int,int,boolean,boolean,java.lang.String,java.lang.String,boolean,int,boolean)>
<com.android.systemui.statusbar.CommandQueue: void removeIcon(java.lang.String)>
<com.android.systemui.volume.CaptionsToggleImageButton: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.systemui.bubbles.BadgeRenderer: void <init>(android.content.Context)>
<javax.obex.ServerOperation: java.lang.String getEncoding()>
<com.android.systemui.classifier.EndPointRatioClassifier: void <init>(com.android.systemui.classifier.ClassifierData)>
<com.android.systemui.plugins.ActivityStarter: void postStartActivityDismissingKeyguard(android.app.PendingIntent)>
<com.android.systemui.statusbar.policy.BatteryController.EstimateFetchCompletion: void onBatteryRemainingEstimateRetrieved(java.lang.String)>
<com.android.systemui.statusbar.phone.NavigationBarTransitions: void applyDarkIntensity(float)>
<com.android.server.ConnectivityService: android.net.NetworkCapabilities[] getDefaultNetworkCapabilitiesForUser(int)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setShelf(com.android.systemui.statusbar.NotificationShelf)>
<com.android.server.accessibility.AccessibilityManagerService.AccessibilityDisplayListener: void onDisplayRemoved(int)>
<com.android.gallery3d.common.Utils: java.lang.String escapeXml(java.lang.String)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void clickTile(android.content.ComponentName)>
<com.android.uiautomator.core.UiObject: android.view.accessibility.AccessibilityNodeInfo findAccessibilityNodeInfo(long)>
<com.android.systemui.statusbar.phone.NavigationHandle: void <init>(android.content.Context)>
<com.android.systemui.qs.QSFragment: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.android.server.pm.Installer: long snapshotAppData(java.lang.String,int,int,int)>
<com.android.proxyhandler.ProxyService: void onDestroy()>
<com.android.settingslib.license.LicenseHtmlLoader: void onDiscardResult(java.io.File)>
<com.android.keyguard.clock.DefaultClockController: void onTimeTick()>
<com.android.server.trust.TrustArchive: void dump(java.io.PrintWriter,int,int,java.lang.String,boolean)>
<com.android.systemui.shared.system.StatsLogCompat: void write(int,int,int,int,int,int,int,int,int,int)>
<com.android.server.input.InputManagerService: void tryPointerSpeed(int)>
<com.android.photos.views.TiledImageRenderer.TileSource: int getTileSize()>
<android.media.MediaPlayer2: android.media.MediaPlayer2.TrackInfo getSelectedTrack(android.media.DataSourceDesc,int)>
<com.android.systemui.statusbar.phone.NotificationPanelView.PanelExpansionListener: void onQsExpansionChanged(float)>
<javax.microedition.khronos.opengles.GL10: void glColor4x(int,int,int,int)>
<com.android.systemui.statusbar.phone.NavigationBarFragment: void touchAutoDim()>
<android.net.netlink.StructNlAttr: void <init>(short,android.net.netlink.StructNlAttr[])>
<com.android.gallery3d.glrenderer.GLCanvas: void getBounds(android.graphics.Rect,int,int,int,int)>
<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: int getMenuSnapTarget()>
<com.android.statementservice.retriever.Statement: int hashCode()>
<com.android.systemui.DependencyBinder: com.android.systemui.statusbar.NotificationRemoteInputManager.Callback provideNotificationRemoteInputManager(com.android.systemui.statusbar.phone.StatusBarRemoteInputCallback)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void checkError()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean setPermittedCrossProfileNotificationListeners(android.content.ComponentName,java.util.List)>
<com.android.settingslib.deviceinfo.AbstractConnectivityPreferenceController: void <init>(android.content.Context,com.android.settingslib.core.lifecycle.Lifecycle)>
<com.android.server.pm.PackageSetting: int getAppId()>
<com.android.systemui.statusbar.phone.StatusBarIconHolder: com.android.systemui.statusbar.phone.StatusBarSignalPolicy.MobileIconState getMobileState()>
<com.android.packageinstaller.handheld.ErrorDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
<com.android.server.AppStateTracker.Listener: void unblockAlarmsForUid(int)>
<com.android.settingslib.deviceinfo.StorageMeasurement: void <init>(android.content.Context,android.os.storage.VolumeInfo,android.os.storage.VolumeInfo)>
<com.android.settingslib.widget.BarChartInfo.Builder: com.android.settingslib.widget.BarChartInfo.Builder setDetails(int)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: android.view.View getContainerChildAt(int)>
<com.android.printspooler.ui.PrintActivity: void onActivityResult(int,int,android.content.Intent)>
<com.android.systemui.recents.views.DropTarget: boolean acceptsDrop(int,int,int,int,android.graphics.Rect,boolean)>
<com.android.keyguard.KeyguardSecurityContainer: void onPause()>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector enabled(boolean)>
<com.android.systemui.plugins.qs.QSTile: java.lang.String getTileSpec()>
<com.android.settingslib.bluetooth.A2dpProfile: boolean isAutoConnectable()>
<com.android.server.Watchdog.HandlerChecker: void scheduleCheckLocked()>
<com.android.systemui.statusbar.policy.HeadsUpManager: void dumpInternal(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.role.RoleUserState: void setRoleNames(java.util.List)>
<com.android.systemui.statusbar.NotificationRemoteInputManager.SmartReplyHistoryExtender: void setShouldManageLifetime(com.android.systemui.statusbar.notification.collection.NotificationEntry,boolean)>
<com.android.systemui.recents.LegacyRecentsImpl: void onAppTransitionFinished()>
<com.android.server.pm.dex.DexoptOptions: void <init>(java.lang.String,int,java.lang.String,java.lang.String,int)>
<com.android.server.notification.NotificationManagerService.NotificationListeners: void <init>(android.content.pm.IPackageManager)>
<com.android.systemui.qs.tiles.WifiTile: android.content.Intent getLongClickIntent()>
<com.android.systemui.pip.phone.PipMenuActivityController: void <init>(android.content.Context,android.app.IActivityManager,com.android.systemui.pip.phone.PipMediaController,com.android.systemui.shared.system.InputConsumerController)>
<com.android.settingslib.RestrictedPreference: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.qs.touch.SwipeDetector: boolean isSettlingState()>
<com.android.server.media.MediaRouterService: void registerClientAsUser(android.media.IMediaRouterClient,java.lang.String,int)>
<com.android.systemui.statusbar.phone.ShadeController: void setLockscreenUser(int)>
<com.android.server.notification.SnoozeHelper: boolean isSnoozed(int,java.lang.String,java.lang.String)>
<com.android.server.usb.descriptors.Usb20ASFormatIII: byte getSubslotSize()>
<com.android.systemui.recents.model.TaskStack: java.lang.String toString()>
<com.android.systemui.statusbar.phone.StatusBarTouchableRegionManager: void setIsStatusBarExpanded(boolean)>
<com.android.server.locksettings.LockSettingsService: boolean checkVoldPassword(int)>
<com.android.systemui.plugin.testoverlayplugin.SampleOverlayPlugin: void setCollapseDesired(boolean)>
<com.android.systemui.qs.tiles.RotationLockTile: int getMetricsCategory()>
<com.android.systemui.volume.VolumeDialogControllerImpl: void getCaptionsComponentState(boolean)>
<com.android.server.locksettings.PasswordSlotManager: int getGsiImageNumber()>
<javax.microedition.khronos.opengles.GL10: void glDisable(int)>
<com.android.server.infra.SecureSettingsServiceNameResolver: void <init>(android.content.Context,java.lang.String)>
<com.android.systemui.plugins.qs.QS: void setHeightOverride(int)>
<com.android.keyguard.KeyguardUpdateMonitor: void removeCallback(com.android.keyguard.KeyguardUpdateMonitorCallback)>
<com.android.systemui.statusbar.policy.FlashlightControllerImpl: boolean hasFlashlight()>
<javax.microedition.khronos.opengles.GL11Ext: void glMatrixIndexPointerOES(int,int,int,java.nio.Buffer)>
<com.android.gallery3d.glrenderer.GLCanvas: void multiplyMatrix(float[],int)>
<com.android.server.biometrics.Constants: java.lang.String tagAuthToken()>
<com.android.gallery3d.glrenderer.GLCanvas: void beginRenderTarget(com.android.gallery3d.glrenderer.RawTexture)>
<com.android.settingslib.widget.AdaptiveIcon: void setBackgroundColor(android.content.Context,com.android.settingslib.drawer.Tile)>
<com.android.systemui.pip.phone.PipMotionHelper: void <init>(android.content.Context,android.app.IActivityManager,android.app.IActivityTaskManager,com.android.systemui.pip.phone.PipMenuActivityController,com.android.internal.policy.PipSnapAlgorithm,com.android.systemui.statusbar.FlingAnimationUtils)>
<com.android.systemui.statusbar.policy.KeyButtonRipple: boolean isStateful()>
<com.android.systemui.statusbar.notification.AboveShelfChangedListener: void onAboveShelfStateChanged(boolean)>
<com.android.systemui.statusbar.policy.KeyButtonDrawable: void <init>(android.graphics.drawable.Drawable,int,int,boolean,android.graphics.Color)>
<com.android.systemui.statusbar.notification.row.ExpandableView: void setDistanceToTopRoundness(float)>
<com.android.server.locksettings.LockSettingsService.Lifecycle: void onStartUser(int)>
<com.android.settingslib.bluetooth.BluetoothUtils: void setErrorListener(com.android.settingslib.bluetooth.BluetoothUtils.ErrorListener)>
<com.android.server.midi.MidiService: void setDeviceStatus(android.media.midi.IMidiDeviceServer,android.media.midi.MidiDeviceStatus)>
<com.android.keyguard.KeyguardPinBasedInputView: byte[] getPasswordText()>
<com.android.statsd.dogfood.MainActivity: void onNewIntent(android.content.Intent)>
<com.android.systemui.globalactions.ListGridLayout: void setExpectedCount(int)>
<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexfvOES(float[],int)>
<com.android.systemui.statusbar.phone.RegionSamplingHelper: void <init>(android.view.View,com.android.systemui.statusbar.phone.RegionSamplingHelper.SamplingCallback)>
<com.android.egg.paint.PaintActivity: void onConfigurationChanged(android.content.res.Configuration)>
<javax.microedition.khronos.egl.EGL10: boolean eglMakeCurrent(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLContext)>
<com.android.server.accessibility.MagnificationController: void setUserId(int)>
<com.android.systemui.keyguard.KeyguardViewMediator: void onFinishedGoingToSleep(int,boolean)>
<com.android.settingslib.core.instrumentation.SharedPreferencesLogger.EditorLogger: android.content.SharedPreferences.Editor putStringSet(java.lang.String,java.util.Set)>
<com.android.settingslib.drawer.DashboardCategory: com.android.settingslib.drawer.Tile getTile(int)>
<javax.microedition.khronos.opengles.GL11: void glGetFloatv(int,float[],int)>
<com.android.server.pm.KeySetManagerService: void removeAppKeySetDataLPw(java.lang.String)>
<com.android.statementservice.retriever.AbstractAssetMatcher: boolean matches(com.android.statementservice.retriever.AbstractAsset)>
<com.android.server.infra.SecureSettingsServiceNameResolver: java.lang.String getDefaultServiceName(int)>
<com.android.server.accounts.AccountManagerService: android.content.IntentSender createRequestAccountAccessIntentSenderAsUser(android.accounts.Account,java.lang.String,android.os.UserHandle)>
<android.widget.TextViewAutoSizeLayoutPerfTest: java.util.Collection layouts()>
<com.android.server.incident.IncidentCompanionService: void onBootPhase(int)>
<com.android.preload.actions.ComputeThresholdAction: void <init>(java.lang.String,com.android.preload.DumpTableModel,int,java.lang.String)>
<com.android.systemui.MultiListLayout: void updateList()>
<com.android.printspooler.model.PrintSpoolerService: void writePrintJobData(android.os.ParcelFileDescriptor,android.print.PrintJobId)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean isGroupNotFullyVisible()>
<com.android.server.pm.OtaDexoptService: float getProgress()>
<com.android.server.biometrics.fingerprint.FingerprintService: void checkUseBiometricPermission()>
<com.android.printspooler.model.PrintSpoolerService: boolean hasActivePrintJobsLocked()>
<com.android.settingslib.applications.StorageStatsSource: com.android.settingslib.applications.StorageStatsSource.AppStorageStats getStatsForPackage(java.lang.String,java.lang.String,android.os.UserHandle)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void setHeadsUpInflatedSmartReplies(com.android.systemui.statusbar.policy.InflatedSmartReplies)>
<com.android.systemui.qs.TileLayout: int getNumVisibleTiles()>
<com.android.statementservice.DirectStatementService: void onDestroy()>
<com.android.server.NetworkManagementService: void setAllowOnlyVpnForUids(boolean,android.net.UidRange[])>
<com.android.systemui.bubbles.BadgedImageView: float getDotScale()>
<com.android.server.trust.TrustManagerService: void onStopUser(int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void reportKeyguardSecured(int)>
<com.android.settingslib.widget.ActionButtonsPreference: com.android.settingslib.widget.ActionButtonsPreference setButton2Icon(int)>
<com.android.systemui.statusbar.phone.NotificationGroupManager: void setGroupExpanded(android.service.notification.StatusBarNotification,boolean)>
<com.android.systemui.volume.CaptionsToggleImageButton: int[] onCreateDrawableState(int)>
<android.net.util.NetworkConstants: byte asByte(int)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: boolean onGenericMotionEvent(android.view.MotionEvent)>
<com.android.settingslib.drawable.UserIconDrawable: void setFrameColor(android.content.res.ColorStateList)>
<com.android.systemui.statusbar.phone.NotificationGroupManager: boolean toggleGroupExpansion(android.service.notification.StatusBarNotification)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.CharSequence getOrganizationNameForUser(int)>
<com.android.commands.sm.Sm: void runFormat()>
<com.android.systemui.qs.touch.SwipeDetector: boolean isDraggingOrSettling()>
<com.android.server.autofill.ui.CustomScrollView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void onScreenTurnedOff()>
<com.android.keyguard.KeyguardUpdateMonitor.BatteryStatus: boolean isPluggedInWired()>
<com.android.systemui.assist.ui.DefaultUiController: void onGestureCompletion(float)>
<com.android.server.testing.shadows.ShadowRecoveryController: void setRecoveryStatus(java.lang.String,int)>
<com.android.systemui.statusbar.phone.StatusBarNotificationPresenter: void onDensityOrFontScaleChanged()>
<com.android.systemui.statusbar.phone.SystemUIDialog: void setMessage(int)>
<com.android.systemui.shared.system.TransactionCompat: com.android.systemui.shared.system.TransactionCompat setAlpha(com.android.systemui.shared.system.SurfaceControlCompat,float)>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean isClearAllVisible()>
<com.android.server.notification.ZenModeHelper: void onUserRemoved(int)>
<com.android.keyguard.KeyguardSimPinView: void onPause()>
<com.android.systemui.plugins.DarkIconDispatcher: boolean isInArea(android.graphics.Rect,android.view.View)>
<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin.MenuItem: java.lang.String getContentDescription()>
<com.android.systemui.statusbar.SysuiStatusBarStateController: boolean setIsDozing(boolean)>
<com.android.server.notification.ZenModeConditions: void <init>(com.android.server.notification.ZenModeHelper,com.android.server.notification.ConditionProviders)>
<com.android.server.biometrics.fingerprint.FingerprintService: long getHalDeviceId()>
<com.android.systemui.qs.QuickQSPanel: void <init>(android.content.Context,android.util.AttributeSet,com.android.systemui.DumpController)>
<com.android.systemui.statusbar.notification.row.NotificationGutsManager: void setCallback(com.android.systemui.statusbar.NotificationLifetimeExtender.NotificationSafeToRemoveCallback)>
<com.android.settingslib.Utils: boolean isDeviceProvisioningPackage(android.content.res.Resources,java.lang.String)>
<com.android.systemui.recents.OverviewProxyService.OverviewProxyListener: void onConnectionChanged(boolean)>
<android.widget.TextViewPrecomputedTextPerfTest: void testSetText_RandomText_Selectable()>
<com.android.server.devicepolicy.DevicePolicyManagerService: android.os.PersistableBundle getTransferOwnershipBundle()>
<com.android.systemui.statusbar.phone.NotificationPanelView: com.android.systemui.statusbar.KeyguardAffordanceView getLeftIcon()>
<com.android.systemui.qs.tiles.LocationTile: java.lang.String composeChangeAnnouncement()>
<com.android.systemui.BatteryMeterView: boolean hasOverlappingRendering()>
<com.android.systemui.statusbar.CommandQueue: void addCallback(com.android.systemui.statusbar.CommandQueue.Callbacks)>
<com.android.systemui.SystemUIFactory: java.lang.String provideLeakReportEmail()>
<com.android.server.textservices.TextServicesManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.recents.views.lowram.TaskStackLowRamLayoutAlgorithm: android.graphics.Rect getTaskRect()>
<com.android.server.pm.PackageKeySetData: void setProperSigningKeySet(long)>
<com.android.settingslib.core.instrumentation.VisibilityLoggerMixin: void onPause()>
<com.android.settingslib.bluetooth.HeadsetProfile: boolean isAudioOn()>
<com.android.systemui.statusbar.KeyboardShortcutKeysLayout: void onLayout(boolean,int,int,int,int)>
<com.android.server.trust.TrustAgentWrapper: boolean isTrusted()>
<com.android.server.INativeDaemonConnectorCallbacks: void onDaemonConnected()>
<com.android.systemui.statusbar.phone.ScrimController: int getBackgroundColor()>
<com.android.server.OldNetworkTimeUpdateService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.qs.car.CarQSFragment: void setHeaderListening(boolean)>
<com.android.systemui.statusbar.KeyguardIndicationController: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.qs.tiles.WorkModeTile: void onManagedProfileRemoved()>
<com.android.keyguard.KeyguardSecurityViewFlipper: void startAppearAnimation()>
<com.android.preload.ui.IUI: void ready()>
<com.android.gallery3d.glrenderer.GLES20Canvas: void multiplyAlpha(float)>
<com.android.systemui.shared.system.WindowManagerWrapper: void getStableInsets(android.graphics.Rect)>
<com.android.server.biometrics.BiometricServiceBase: void serviceDied(long)>
<com.android.systemui.qs.customize.QSCustomizer: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: void onParentTranslationUpdate(float)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void removeOnExpandedHeightListener(java.util.function.BiConsumer)>
<com.android.server.AppStateTracker: void dumpProto(android.util.proto.ProtoOutputStream,long)>
<com.android.systemui.globalactions.GlobalActionsGridLayout: void onUpdateList()>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: void onTouchEnd()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setIconsVisible(boolean)>
<com.android.server.wallpaper.WallpaperManagerService.Lifecycle: void onUnlockUser(int)>
<com.android.settingslib.wifi.AccessPoint: boolean matches(android.net.wifi.WifiConfiguration)>
<javax.obex.Operation: void noBodyHeader()>
<com.android.systemui.biometrics.BiometricDialogImpl: void showBiometricDialog(android.os.Bundle,android.hardware.biometrics.IBiometricServiceReceiverInternal,int,boolean,int)>
<com.android.server.webkit.SystemInterface: void updateUserSetting(android.content.Context,java.lang.String)>
<com.android.server.ConnectivityService: int setUsbTethering(boolean,java.lang.String)>
<com.android.systemui.qs.QSDetail: boolean isClosingDetail()>
<com.android.systemui.pip.tv.PipControlButtonView: void startFocusLossAnimation()>
<com.android.server.accessibility.AccessibilityManagerService.Lifecycle: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.BiometricUnlockController: void finishKeyguardFadingAway()>
<com.android.server.accounts.AccountManagerService: void <init>(com.android.server.accounts.AccountManagerService.Injector)>
<com.android.server.NetworkManagementService: boolean isFirewallEnabled()>
<com.android.server.storage.AppFuseBridge: android.os.ParcelFileDescriptor openFile(int,int,int)>
<com.android.systemui.biometrics.FaceDialogView: int getHintStringResourceId()>
<com.android.server.hdmi.HdmiCecController.NativeWrapper: int nativeAddLogicalAddress(long,int)>
<com.android.systemui.recents.model.RecentsTaskLoader: int getThumbnailCacheSize()>
<com.android.systemui.bubbles.BubbleExpandedView: void onClick(android.view.View)>
<com.android.future.usb.UsbManager: android.os.ParcelFileDescriptor openAccessory(com.android.future.usb.UsbAccessory)>
<com.android.server.autofill.Helper: android.metrics.LogMaker newLogMaker(int,java.lang.String,java.lang.String,int,boolean)>
<com.android.systemui.statusbar.policy.LocationControllerImpl: void <init>(android.content.Context,android.os.Looper)>
<com.android.systemui.recents.LegacyRecentsImpl: void onBusEvent(com.android.systemui.recents.events.activity.RecentsActivityStartingEvent)>
<com.android.systemui.statusbar.phone.StatusBarIconHolder: int getTag()>
<com.android.server.pm.permission.BasePermission: boolean isDevelopment()>
<com.android.server.pm.Installer: void linkFile(java.lang.String,java.lang.String,java.lang.String)>
<com.android.settingslib.suggestions.SuggestionLoaderCompat: void <init>(android.content.Context,com.android.settingslib.suggestions.SuggestionController)>
<com.android.systemui.statusbar.policy.MobileSignalController: com.android.systemui.statusbar.policy.MobileSignalController.MobileState cleanState()>
<com.android.server.accounts.IAccountAuthenticatorCache: void updateServices(int)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: boolean canViewBeDismissed()>
<com.android.keyguard.KeyguardUpdateMonitor: void handleStartedWakingUp()>
<com.android.systemui.statusbar.phone.DozeParameters: boolean getPickupSubtypePerformsProxCheck(int)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean isUserLocked()>
<com.android.server.notification.NotificationIntrusivenessExtractor: void setConfig(com.android.server.notification.RankingConfig)>
<com.android.server.notification.SystemConditionProviderService: android.service.notification.IConditionProvider asInterface()>
<com.android.systemui.statusbar.CommandQueue: void disable(int,int,int)>
<com.android.systemui.DependencyProvider: android.util.DisplayMetrics provideDisplayMetrics()>
<com.android.settingslib.bluetooth.MapClientProfile: boolean accessProfileEnabled()>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: java.util.List getConnectableProfiles()>
<com.android.systemui.globalactions.GlobalActionsComponent: void onGlobalActionsHidden()>
<com.android.systemui.qs.QSContainerImpl: void setHeightOverride(int)>
<android.net.shared.ProvisioningConfiguration: android.net.shared.ProvisioningConfiguration fromStableParcelable(android.net.ProvisioningConfigurationParcelable)>
<com.android.uiautomator.core.UiDevice: boolean waitForWindowUpdate(java.lang.String,long)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void setTranslationY(float)>
<javax.microedition.khronos.opengles.GL10: void glStencilOp(int,int,int)>
<com.android.settingslib.volume.MediaSessions.Callbacks: void onRemoteUpdate(android.media.session.MediaSession.Token,java.lang.String,android.media.session.MediaController.PlaybackInfo)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean handleSlideBack()>
<com.android.systemui.plugins.FalsingManager: void onUnlockHintStarted()>
<com.android.server.timedetector.TimeDetectorStrategyCallbackImpl: void setSystemClock(long)>
<com.android.systemui.qs.tileimpl.QSTileImpl: void removeCallbacks()>
<com.android.server.IntentResolver: void addFilter(android.content.IntentFilter)>
<com.android.settingslib.drawable.UserIconDrawable: int getOpacity()>
<com.android.systemui.statusbar.phone.NotificationIconAreaController: android.view.View inflateIconArea(android.view.LayoutInflater)>
<com.android.systemui.statusbar.phone.EdgeBackGestureHandler: void onNavigationModeChanged(int,android.content.Context)>
<com.android.server.media.MediaSessionRecord: int getUid()>
<com.android.systemui.statusbar.policy.DeviceProvisionedController.DeviceProvisionedListener: void onDeviceProvisionedChanged()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void <init>(android.content.Context,android.util.AttributeSet,com.android.systemui.util.InjectionInflationController,com.android.systemui.statusbar.notification.NotificationWakeUpCoordinator,com.android.systemui.statusbar.PulseExpansionHandler,com.android.systemui.statusbar.notification.DynamicPrivacyController)>
<com.android.server.soundtrigger.SoundTriggerDbHelper: void <init>(android.content.Context)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setOrganizationName(android.content.ComponentName,java.lang.CharSequence)>
<com.android.server.devicepolicy.DevicePolicyManagerService: android.content.pm.StringParceledListSlice getOwnerInstalledCaCerts(android.os.UserHandle)>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: void setDimmed(boolean,boolean)>
<com.android.server.accessibility.KeyboardInterceptor: boolean handleMessage(android.os.Message)>
<com.android.gallery3d.exif.ExifTag: boolean setValue(long)>
<javax.microedition.khronos.opengles.GL10: void glMaterialxv(int,int,int[],int)>
<com.android.systemui.classifier.brightline.TimeLimitedMotionEventBuffer: boolean contains(java.lang.Object)>
<com.android.settingslib.widget.BarViewInfo: java.lang.CharSequence getContentDescription()>
<com.android.settingslib.HelpUtils: boolean prepareHelpMenuItem(android.app.Activity,android.view.MenuItem,java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.notification.collection.NotificationRowBinder: void inflateViews(com.android.systemui.statusbar.notification.collection.NotificationEntry,java.lang.Runnable)>
<com.android.systemui.statusbar.policy.NextAlarmControllerImpl: void addCallback(com.android.systemui.statusbar.policy.NextAlarmController.NextAlarmChangeCallback)>
<com.android.settingslib.drawable.UserIconDrawable: void invalidateDrawable(android.graphics.drawable.Drawable)>
<com.android.systemui.AutoReinflateContainer: void onDetachedFromWindow()>
<android.multiuser.BenchmarkResults: android.os.Bundle getStatsToReport()>
<com.android.systemui.pip.tv.PipMenuActivity: void onMoveToFullscreen()>
<com.android.systemui.plugins.Plugin: void onDestroy()>
<com.android.systemui.egg.MLand: boolean willNotDraw()>
<com.android.settingslib.utils.AsyncLoader: void onStartLoading()>
<com.android.settingslib.media.MediaManager.MediaDeviceCallback: void onDeviceListRemoved(java.util.List)>
<com.android.systemui.statusbar.phone.CollapsedStatusBarFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.android.systemui.qs.QSHost: void collapsePanels()>
<com.android.systemui.statusbar.AlphaOptimizedFrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.keyguard.clock.DefaultClockController: android.view.View getView()>
<com.android.settingslib.widget.FooterPreferenceMixinCompat: void setPreferenceScreen(androidx.preference.PreferenceScreen)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: boolean isActiveDevice(int)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void setDark(boolean,boolean,long)>
<com.android.systemui.statusbar.phone.ShadeController: void postOnShadeExpanded(java.lang.Runnable)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: android.view.View getRightPreview()>
<android.media.MediaPlayer2.DrmInfo: java.util.Map getPssh()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow.LongPressListener: boolean onLongPress(android.view.View,int,int,com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin.MenuItem)>
<android.net.ip.IpClientManager: boolean completedPreDhcpAction()>
<com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem: boolean handleReportArcInitiate(com.android.server.hdmi.HdmiCecMessage)>
<android.media.MediaPlayer2.DrmEventCallback: void onDrmPrepared(android.media.MediaPlayer2,android.media.DataSourceDesc,int,byte[])>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationViewWrapper: void setHeaderVisibleAmount(float)>
<com.android.server.biometrics.BiometricServiceBase: void notifyClientActiveCallbacks(boolean)>
<com.android.server.location.ContextHubService: android.hardware.location.IContextHubClient createPendingIntentClient(int,android.app.PendingIntent,long)>
<com.android.preload.DumpTableModel: void addData(com.android.preload.DumpData)>
<com.android.server.audio.RecordingActivityMonitor: int trackRecorder(android.os.IBinder)>
<com.android.server.tv.TvRemoteProviderProxy.ProviderMethods: void sendTimeStamp(com.android.server.tv.TvRemoteProviderProxy,android.os.IBinder,long)>
<com.android.settingslib.bluetooth.HearingAidProfile: boolean connect(android.bluetooth.BluetoothDevice)>
<com.android.server.notification.ConditionProviders: void <init>(android.content.Context,com.android.server.notification.ManagedServices.UserProfiles,android.content.pm.IPackageManager)>
<com.android.server.security.KeyChainSystemService: void <init>(android.content.Context)>
<com.android.wallpapercropper.WallpaperCropActivity: void setCropViewTileSource(com.android.photos.BitmapRegionTileSource.BitmapSource,boolean,boolean,java.lang.Runnable)>
<com.android.packageinstaller.PackageInstallerActivity.SimpleErrorDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>
<android.net.netlink.InetDiagMessage: android.net.netlink.InetDiagMessage parse(android.net.netlink.StructNlMsgHdr,java.nio.ByteBuffer)>
<android.text.TextViewSetTextMeasurePerfTest: java.util.Collection cases()>
<com.android.systemui.statusbar.policy.BatteryControllerImpl: void onReceive(android.content.Context,android.content.Intent)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: boolean isLastMessageFromReply()>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: boolean disable()>
<com.android.systemui.tuner.TunerService: void setTunerEnabled(android.content.Context,boolean)>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: void onDetachedFromWindow()>
<com.android.printspooler.widget.PrintContentView: boolean onTouchEvent(android.view.MotionEvent)>
<android.net.netlink.StructInetDiagMsg: java.lang.String toString()>
<com.android.server.policy.WindowManagerPolicy.WindowState: boolean isDisplayedLw()>
<com.android.server.hdmi.HdmiCecController.NativeWrapper: int nativeGetVendorId(long)>
<com.android.server.notification.VisibilityExtractor: void setConfig(com.android.server.notification.RankingConfig)>
<com.android.server.usb.descriptors.UsbInterfaceDescriptor: byte getNumEndpoints()>
<com.android.server.notification.ZenLog: void traceSetZenMode(int,java.lang.String)>
<com.android.server.notification.ZenModeHelper: android.app.NotificationManager.Policy getConsolidatedNotificationPolicy()>
<com.android.server.usb.descriptors.Usb10ACMixerUnit: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>
<com.android.settingslib.media.LocalMediaManager: void unregisterCallback(com.android.settingslib.media.LocalMediaManager.DeviceCallback)>
<com.android.settingslib.development.AbstractLogpersistPreferenceController: void enablePreference(boolean)>
<com.android.systemui.statusbar.phone.StatusBar: void postOnShadeExpanded(java.lang.Runnable)>
<com.android.systemui.statusbar.MediaTransferManager: void <init>(android.content.Context)>
<com.android.server.usb.UsbService: boolean isFunctionEnabled(java.lang.String)>
<com.android.systemui.plugin.testoverlayplugin.SampleOverlayPlugin: void onDestroy()>
<android.media.MediaPlayer2: android.media.MediaDrm.KeyRequest getDrmKeyRequest(android.media.DataSourceDesc,byte[],byte[],java.lang.String,int,java.util.Map)>
<com.android.gallery3d.glrenderer.BasicTexture: void draw(com.android.gallery3d.glrenderer.GLCanvas,int,int,int,int)>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: int getMaxConnectionState(com.android.settingslib.bluetooth.CachedBluetoothDevice)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: android.view.NotificationHeaderView getNotificationHeader()>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: boolean hasVoiceCallingFeature()>
<com.android.systemui.statusbar.car.AssitantButton: void setupIntents(android.content.res.TypedArray)>
<com.android.systemui.statusbar.phone.NavigationBarFragment: void onNavigationModeChanged(int)>
<android.app.backup.ForwardingBackupAgent: android.app.backup.BackupAgent forward(android.app.backup.BackupAgent)>
<com.android.server.slice.SliceManagerService: java.lang.Object getLock()>
<com.android.settingslib.CustomDialogPreferenceCompat: android.app.Dialog getDialog()>
<com.android.server.autofill.ui.AutoFillUI: void showFillUi(android.view.autofill.AutofillId,android.service.autofill.FillResponse,java.lang.String,java.lang.String,android.content.ComponentName,java.lang.CharSequence,android.graphics.drawable.Drawable,com.android.server.autofill.ui.AutoFillUI.AutoFillUiCallback,int,boolean)>
<com.android.systemui.statusbar.notification.row.HybridNotificationView: com.android.systemui.statusbar.notification.TransformState getCurrentState(int)>
<javax.microedition.khronos.opengles.GL11: void glPointSizePointerOES(int,int,java.nio.Buffer)>
<com.android.server.inputmethod.InputMethodManagerService: void showInputMethodAndSubtypeEnablerFromClient(com.android.internal.view.IInputMethodClient,java.lang.String)>
<com.android.systemui.qs.tiles.BluetoothTile: java.lang.CharSequence getTileLabel()>
<com.android.settingslib.net.DataUsageController: android.telephony.TelephonyManager getTelephonyManager()>
<com.android.server.ConnectivityService: android.net.NetworkCapabilities getNetworkCapabilities(android.net.Network)>
<com.android.systemui.statusbar.phone.NotificationGroupManager: boolean isGroupSummary(android.service.notification.StatusBarNotification)>
<com.android.settingslib.widget.AnimatedImageView: void <init>(android.content.Context)>
<com.android.settingslib.widget.BarChartPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: boolean shouldShowMenu()>
<com.android.server.biometrics.ClientMonitor: void binderDied()>
<com.google.android.startop.iorap.AppIntentEvent: com.google.android.startop.iorap.AppIntentEvent createDefaultIntentChanged(com.google.android.startop.iorap.ActivityInfo,com.google.android.startop.iorap.ActivityInfo)>
<com.android.bluetoothmidiservice.PacketEncoder: void writeComplete()>
<android.widget.EditTextLongTextPerfTest: void testEditText()>
<com.android.systemui.statusbar.phone.ScrimController: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.statusbar.notification.row.ExpandableOutlineView: void applyRoundness()>
<com.android.gallery3d.glrenderer.BitmapTexture: void onFreeBitmap(android.graphics.Bitmap)>
<com.android.settingslib.accessibility.AccessibilityUtils: void setAccessibilityServiceState(android.content.Context,android.content.ComponentName,boolean,int)>
<com.android.systemui.biometrics.FingerprintDialogView: void updateIcon(int,int)>
<com.android.systemui.statusbar.notification.NotificationInterruptionStateProvider: boolean shouldHeadsUp(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.packageinstaller.InstallStaging: void onDestroy()>
<com.android.systemui.statusbar.policy.BrightnessMirrorController: void onOverlayChanged()>
<com.android.server.IntentResolver: void sortResults(java.util.List)>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationViewWrapper: com.android.systemui.statusbar.notification.TransformState getCurrentState(int)>
<com.android.printspooler.model.PageContentRepository: void open(android.os.ParcelFileDescriptor,com.android.printspooler.model.OpenDocumentCallback)>
<com.android.printspooler.ui.FusedPrintersProvider: void <init>(android.app.Activity,int)>
<com.android.systemui.statusbar.notification.PropertyAnimator: void setProperty(android.view.View,com.android.systemui.statusbar.notification.AnimatableProperty,float,com.android.systemui.statusbar.notification.stack.AnimationProperties,boolean)>
<com.android.server.testing.shadows.ShadowBackupDataOutput: long getQuota()>
<com.android.server.biometrics.iris.IrisService: com.android.server.biometrics.BiometricServiceBase.DaemonWrapper getDaemonWrapper()>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb: java.util.Map getUserSerialNumbers()>
<com.android.server.vr.SettingsObserver: void removeListener(com.android.server.vr.SettingsObserver.SettingChangeListener)>
<com.android.settingslib.bluetooth.PbapClientProfile: java.lang.String toString()>
<com.android.server.input.InputManagerService: void disableInputDevice(int)>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper: void onConfigurationChanged()>
<com.android.systemui.statusbar.policy.DeadZone: void onDraw(android.graphics.Canvas)>
<com.android.settingslib.datetime.ZoneGetter: java.lang.CharSequence getGmtOffsetText(android.icu.text.TimeZoneFormat,java.util.Locale,java.util.TimeZone,java.util.Date)>
<com.android.systemui.AutoReinflateContainer: void onOverlayChanged()>
<com.android.aapt.namespace.libtwo.TextView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.gallery3d.exif.ExifInterface: void writeExif(android.graphics.Bitmap,java.io.OutputStream)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void multiplyMatrix(float[],int)>
<com.android.systemui.qs.car.CarQSFooter: void onFinishInflate()>
<com.android.systemui.statusbar.notification.row.ExpandableOutlineView: void onDensityOrFontScaleChanged()>
<com.android.server.appprediction.AppPredictionManagerService: com.android.server.appprediction.AppPredictionPerUserService newServiceLocked(int,boolean)>
<com.android.systemui.statusbar.notification.row.NotificationGutsManager: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.accounts.IAccountAuthenticatorCache: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],int)>
<com.android.server.biometrics.BiometricServiceBase.BiometricServiceListener: void onAuthenticationSucceededInternal(boolean,byte[])>
<com.android.systemui.statusbar.notification.row.NotificationContentView: int getExpandHeight()>
<com.android.server.usb.descriptors.UsbConfigDescriptor: int getTotalLength()>
<com.android.server.infra.AbstractPerUserSystemService: boolean isVerbose()>
<com.android.server.pm.permission.PermissionManagerServiceInternal: void revokeStoragePermissionsIfScopeExpanded(android.content.pm.PackageParser.Package,android.content.pm.PackageParser.Package,com.android.server.pm.permission.PermissionManagerServiceInternal.PermissionCallback)>
<com.android.settingslib.applications.ServiceListing: boolean isEnabled(android.content.ComponentName)>
<com.android.systemui.qs.PagedTileLayout: int getOffsetTop(com.android.systemui.qs.QSPanel.TileRecord)>
<com.android.systemui.shared.recents.model.Task: void addCallback(com.android.systemui.shared.recents.model.Task.TaskCallbacks)>
<com.android.server.textclassifier.TextClassificationManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.pm.CrossProfileAppsService: void onStart()>
<com.android.systemui.qs.PseudoGridView.ViewGroupAdapterBridge: void link(android.view.ViewGroup,android.widget.BaseAdapter)>
<com.android.server.media.projection.MediaProjectionManagerService: void <init>(android.content.Context)>
<com.android.systemui.util.leak.GarbageMonitor.MemoryTile: void handleUpdateState(com.android.systemui.plugins.qs.QSTile.State,java.lang.Object)>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: java.util.Collection getDevices()>
<com.android.systemui.util.wakelock.DelayedWakeLock: java.lang.String toString()>
<com.android.server.slice.SliceClientPermissions.SliceAuthority: com.android.server.slice.SlicePermissionManager.PkgUser getPkg()>
<com.android.systemui.statusbar.phone.KeyguardStatusBarView: void onAttachedToWindow()>
<com.android.systemui.statusbar.notification.row.HybridGroupManager: void setOverflowNumberColor(android.widget.TextView,int)>
<lockedregioncodeinjection.Main: void main(java.lang.String[])>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: void setInterruption()>
<com.android.server.accounts.AccountManagerService: android.accounts.Account[] getAccountsByTypeForPackage(java.lang.String,java.lang.String,java.lang.String)>
<com.android.server.biometrics.EnumerateClient: int stop(boolean)>
<com.android.keyguard.KeyguardSliceView: void onVisibilityAggregated(boolean)>
<com.android.server.ConnectivityService: android.net.NetworkInfo getNetworkInfoForUid(android.net.Network,int,boolean)>
<com.android.settingslib.suggestions.SuggestionControllerMixinCompat: void <init>(android.content.Context,com.android.settingslib.suggestions.SuggestionControllerMixinCompat.SuggestionControllerHost,com.android.settingslib.core.lifecycle.Lifecycle,android.content.ComponentName)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void setContentHeight(int)>
<com.android.server.notification.NotificationManagerService.NotificationAssistants: void onServiceRemovedLocked(com.android.server.notification.ManagedServices.ManagedServiceInfo)>
<com.android.server.search.Searchables: java.util.ArrayList getGlobalSearchActivities()>
<com.android.systemui.statusbar.phone.StatusBarIconController.IconManager: android.widget.LinearLayout.LayoutParams onCreateLayoutParams()>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: boolean isConnected()>
<android.media.MediaPlayer2: float getMaxPlayerVolume()>
<com.android.settingslib.media.BluetoothMediaManager: void stopScan()>
<com.android.server.policy.WindowManagerPolicy: void adjustConfigurationLw(android.content.res.Configuration,int,int)>
<com.android.systemui.tuner.RadioListPreference.RadioFragment: void onCreatePreferences(android.os.Bundle,java.lang.String)>
<com.android.server.PersistentDataBlockManagerInternal: void forceOemUnlockEnabled(boolean)>
<com.android.settingslib.deviceinfo.AbstractUptimePreferenceController: boolean isAvailable()>
<com.android.server.trust.TrustAgentWrapper: long getScheduledRestartUptimeMillis()>
<com.android.systemui.statusbar.NotificationLockscreenUserManagerImpl: boolean shouldShowOnKeyguard(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcher.Adapter: void onClick(android.view.View)>
<com.android.server.input.InputManagerService: int getSwitchState(int,int,int)>
<com.android.server.AnyMotionDetector.Vector3: float dotProduct(com.android.server.AnyMotionDetector.Vector3)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexEnvxv(int,int,java.nio.IntBuffer)>
<com.android.server.locksettings.LockSettingsService: byte[] getHashFactor(byte[],int)>
<com.android.systemui.classifier.FalsingManagerProxy: boolean isClassiferEnabled()>
<com.android.systemui.media.NotificationPlayer: void onCompletion(android.media.MediaPlayer)>
<com.android.systemui.statusbar.StatusBarStateControllerImpl: float getInterpolatedDozeAmount()>
<com.android.server.notification.ZenModeHelper: int getZenMode()>
<com.android.packageinstaller.wear.WearPackageUtil: java.io.File getFileFromFd(android.content.Context,android.os.ParcelFileDescriptor,java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: void setNormalBackgroundVisibilityAmount(float)>
<com.android.systemui.statusbar.policy.EthernetSignalController: void updateConnectivity(java.util.BitSet,java.util.BitSet)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void showBouncerMessage(java.lang.String,android.content.res.ColorStateList)>
<android.os.TracePerfTest: void startTracing()>
<com.android.systemui.classifier.ClassifierData: void <init>(float)>
<com.android.server.audio.AudioService: void setMode(int,android.os.IBinder,java.lang.String)>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: void removeCallback(android.os.Handler.Callback)>
<javax.microedition.khronos.opengles.GL10: void glLightModelfv(int,float[],int)>
<com.android.systemui.qs.QSSecurityFooter: java.lang.CharSequence getFooterText(boolean,boolean,boolean,boolean,boolean,java.lang.String,java.lang.String,java.lang.CharSequence,java.lang.CharSequence)>
<com.android.systemui.util.leak.LeakDetector: com.android.systemui.util.leak.LeakDetector create()>
<android.view.ViewPerfTest: void testSimpleViewInflate()>
<com.android.systemui.recents.views.TaskStackView: void getLayoutTaskTransforms(float,int,java.util.ArrayList,boolean,java.util.ArrayList)>
<com.android.systemui.recents.RecentsActivity: void onMultiWindowModeChanged(boolean)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glEnable(int)>
<javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLDisplay eglGetDisplay(java.lang.Object)>
<com.android.server.display.color.ColorDisplayService: void onBootPhase(int)>
<com.android.server.usb.UsbPortManager: void addSimulatedPort(java.lang.String,int,com.android.internal.util.IndentingPrintWriter)>
<com.android.keyguard.KeyguardUpdateMonitor.BatteryStatus: void <init>(int,int,int,int,int)>
<com.android.settingslib.graph.BatteryMeterDrawableBase: float getAspectRatio()>
<com.android.server.location.GeocoderProxy: java.lang.String getFromLocationName(java.lang.String,double,double,double,double,int,android.location.GeocoderParams,java.util.List)>
<com.android.printspooler.model.PrintSpoolerService: boolean hasActivePrintJobsForServiceLocked(android.content.ComponentName)>
<javax.obex.PrivateInputStream: int read(byte[])>
<com.android.server.NetworkManagementService: void setFirewallUidRule(int,int,int)>
<com.android.systemui.util.leak.GarbageMonitor: int[] getTrackedProcesses()>
<com.android.systemui.qs.PagedTileLayout: void setCurrentItem(int,boolean)>
<com.android.server.appprediction.AppPredictionPerUserService: void unregisterPredictionUpdatesLocked(android.app.prediction.AppPredictionSessionId,android.app.prediction.IPredictionCallback)>
<com.android.server.policy.PermissionPolicyInternal.OnInitializedCallback: void onInitialized(int)>
<com.android.systemui.statusbar.phone.StatusBarIconHolder: int getType()>
<com.android.packageinstaller.wear.PackageInstallerImpl: void <init>(android.content.Context)>
<com.android.settingslib.widget.FooterPreferenceMixin: boolean hasFooter()>
<javax.microedition.khronos.opengles.GL11: void glPointParameterfv(int,java.nio.FloatBuffer)>
<com.android.settingslib.media.BluetoothMediaManager: void onAudioModeChanged()>
<android.view.ViewShowHidePerfTest: android.content.Context getContext()>
<com.android.server.AnyMotionDetector.Vector3: com.android.server.AnyMotionDetector.Vector3 cross(com.android.server.AnyMotionDetector.Vector3)>
<com.android.gallery3d.exif.ExifInterface: java.lang.Integer getTagIntValue(int,int)>
<com.android.systemui.qs.customize.TileAdapter: void setTileSpecs(java.util.List)>
<com.android.server.content.ContentService: android.os.Bundle getCache(java.lang.String,android.net.Uri,int)>
<com.android.server.location.GnssBatchingProvider: boolean start(long,boolean)>
<com.android.server.notification.CalendarTracker: void dump(java.lang.String,java.io.PrintWriter)>
<com.android.systemui.recents.views.RecentsView: void hideEmptyView()>
<com.android.server.usb.descriptors.UsbACAudioControlEndpoint: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>
<com.android.mtp.MtpDocumentsProvider: java.lang.String createDocument(java.lang.String,java.lang.String,java.lang.String)>
<android.media.MediaPlayer2: java.lang.Object clearNextDataSources()>
<com.android.server.testing.shadows.ShadowRecoveryController: void setIsSupported(boolean)>
<com.android.settingslib.development.DeveloperOptionsPreferenceController: boolean isAvailable()>
<com.android.systemui.statusbar.TransformableView: com.android.systemui.statusbar.notification.TransformState getCurrentState(int)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void showPinningEscapeToast()>
<com.android.systemui.power.PowerUI.WarningsUI: void showHighTemperatureWarning()>
<com.android.settingslib.SliceBroadcastRelay: void registerReceiver(android.content.Context,android.net.Uri,java.lang.Class,android.content.IntentFilter)>
<com.android.systemui.shortcut.ShortcutKeyDispatcher: void registerShortcutKey(long)>
<com.android.systemui.statusbar.notification.row.NotificationGuts: void openControls(boolean,int,int,boolean,java.lang.Runnable)>
<com.android.server.location.LocationFudger: void <init>(android.content.Context,android.os.Handler)>
<com.android.systemui.statusbar.phone.BiometricUnlockController: void dump(java.io.PrintWriter)>
<com.android.server.hdmi.HdmiCecLocalDevicePlayback.ActiveWakeLock: void release()>
<android.net.ipmemorystore.NetworkAttributes: int hashCode()>
<com.android.systemui.DependencyProvider: com.android.systemui.shared.system.DevicePolicyManagerWrapper provideDevicePolicyManagerWrapper()>
<com.android.systemui.plugins.FalsingManager: android.net.Uri reportRejectedTouch()>
<com.android.systemui.globalactions.GlobalActionsColumnLayout: float getAnimationOffsetX()>
<com.android.systemui.statusbar.phone.NavigationBarView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setQsContainer(android.view.ViewGroup)>
<com.android.systemui.statusbar.notification.collection.NotificationData: void setHeadsUpManager(com.android.systemui.statusbar.policy.HeadsUpManager)>
<com.android.settingslib.applications.ApplicationsState.Callbacks: void onRunningStateChanged(boolean)>
<com.android.systemui.qs.tiles.NfcTile: android.content.Intent getLongClickIntent()>
<com.android.server.accessibility.FingerprintGestureDispatcher.FingerprintGestureClient: void onFingerprintGestureDetectionActiveChanged(boolean)>
<com.android.server.notification.PropConfig: int getInt(android.content.Context,java.lang.String,int)>
<com.android.server.pm.PackageManagerService: void setInstallerPackageName(java.lang.String,java.lang.String)>
<com.android.keyguard.KeyguardClockSwitch: android.graphics.Paint getPaint()>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: void setDistanceToTopRoundness(float)>
<com.android.server.accounts.AccountManagerService: void hasFeatures(android.accounts.IAccountManagerResponse,android.accounts.Account,java.lang.String[],java.lang.String)>
<javax.microedition.khronos.opengles.GL11Ext: void glDrawTexxvOES(int[],int)>
<com.android.uiautomator.core.UiCollection: com.android.uiautomator.core.UiObject getChildByDescription(com.android.uiautomator.core.UiSelector,java.lang.String)>
<com.android.server.pm.permission.PermissionManagerServiceInternal: void grantRuntimePermission(java.lang.String,java.lang.String,boolean,int,int,com.android.server.pm.permission.PermissionManagerServiceInternal.PermissionCallback)>
<com.android.server.role.RoleUserState: java.util.List getHeldRoles(java.lang.String)>
<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: void setAppName(java.lang.String)>
<com.android.gallery3d.common.BitmapUtils: byte[] compressToBytes(android.graphics.Bitmap,int)>
<com.android.printspooler.ui.FusedPrintersProvider: void onForceLoad()>
<com.android.systemui.SystemUIApplication: java.lang.Object getComponent(java.lang.Class)>
<com.android.settingslib.bluetooth.PanProfile: boolean disconnect(android.bluetooth.BluetoothDevice)>
<com.android.systemui.qs.touch.SwipeDetector: boolean isDraggingState()>
<com.android.uiautomator.core.UiDevice: boolean pressEnter()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setHorizontalPanelTranslation(float)>
<com.android.uiautomator.core.UiObject: boolean performTwoPointerGesture(android.graphics.Point,android.graphics.Point,android.graphics.Point,android.graphics.Point,int)>
<com.android.server.NetworkManagementService: void setIpForwardingEnabled(boolean)>
<com.android.systemui.util.leak.TrackedObjects: void track(java.lang.Object)>
<com.android.server.accounts.AccountManagerService: void onShellCommand(java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ShellCallback,android.os.ResultReceiver)>
<com.android.gallery3d.exif.ExifTag: com.android.gallery3d.exif.Rational getRational(int)>
<com.android.server.biometrics.ClientMonitor: void <init>(android.content.Context,com.android.server.biometrics.Constants,com.android.server.biometrics.BiometricServiceBase.DaemonWrapper,long,android.os.IBinder,com.android.server.biometrics.BiometricServiceBase.ServiceListener,int,int,boolean,java.lang.String,int)>
<com.android.systemui.tuner.LockscreenFragment: com.android.systemui.tuner.ShortcutParser.Shortcut getShortcutInfo(android.content.Context,java.lang.String)>
<com.android.settingslib.net.DataUsageController: com.android.settingslib.net.DataUsageController.DataUsageInfo getWifiDataUsageInfo()>
<com.android.systemui.statusbar.phone.StatusBar: void onConfigChanged(android.content.res.Configuration)>
<com.android.systemui.shared.system.PinnedStackListenerForwarder: void addListener(android.view.IPinnedStackListener)>
<com.android.server.lights.Light: void setBrightness(int)>
<com.android.server.policy.WindowManagerPolicy: boolean inKeyguardRestrictedKeyInputMode()>
<com.android.systemui.statusbar.policy.BatteryController: boolean isPowerSave()>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void registerStatusBar(com.android.systemui.statusbar.phone.StatusBar,android.view.ViewGroup,com.android.systemui.statusbar.phone.NotificationPanelView,com.android.systemui.statusbar.phone.BiometricUnlockController,com.android.systemui.keyguard.DismissCallbackRegistry,android.view.ViewGroup)>
<com.android.systemui.util.wakelock.WakeLock: android.os.PowerManager.WakeLock createPartialInner(android.content.Context,java.lang.String)>
<com.android.server.statusbar.StatusBarManagerInternal: void onDisplayReady(int)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void onFinishedWakingUp()>
<com.android.gallery3d.glrenderer.Texture: int getHeight()>
<com.android.settingslib.wifi.WifiTracker: void dump(java.io.PrintWriter)>
<com.android.settingslib.drawer.Tile: android.content.Intent getIntent()>
<com.android.server.display.whitebalance.DisplayWhiteBalanceSettings: boolean isEnabled()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: com.android.systemui.statusbar.notification.row.ExpandableView getFirstChildNotGone()>
<com.android.systemui.statusbar.notification.TransformState: void resetTransformedView()>
<com.android.statsd.loadtest.StatsdStatsRecorder: void onAlarm(android.content.Context)>
<android.media.Media2HTTPConnection: int readAt(long,byte[],int)>
<com.android.systemui.egg.MLand: void setSplash(android.view.View)>
<com.android.server.notification.NotificationManagerService.NotificationListeners: void notifyNotificationChannelChanged(java.lang.String,android.os.UserHandle,android.app.NotificationChannel,int)>
<com.android.settingslib.AppItem: void writeToParcel(android.os.Parcel,int)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void dismiss(com.android.internal.policy.IKeyguardDismissCallback,java.lang.CharSequence)>
<com.android.server.oemlock.OemLockService: void onStart()>
<com.android.server.security.VerityUtils: boolean isFsveritySignatureFile(java.io.File)>
<com.android.server.camera.CameraServiceProxy: void onSwitchUser(int)>
<android.media.MediaPlayer2.DrmPreparationInfo.Builder: void <init>(java.util.UUID)>
<com.android.systemui.recents.views.FixedSizeImageView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.server.biometrics.BiometricServiceBase: void notifyLockoutResetMonitors()>
<com.android.systemui.qs.external.TileLifecycleManager: void setTileChangeListener(com.android.systemui.qs.external.TileLifecycleManager.TileChangeListener)>
<com.android.server.location.GnssConfiguration.SetCarrierProperty: boolean set(int)>
<com.android.settingslib.applications.ServiceListing: void setEnabled(android.content.ComponentName,boolean)>
<com.android.systemui.classifier.FalsingManagerImpl: void setNotificationExpanded()>
<com.android.systemui.shared.recents.view.AppTransitionAnimationSpecsFuture: void <init>(android.os.Handler)>
<com.android.systemui.statusbar.DragDownHelper.DragDownCallback: boolean isFalsingCheckNeeded()>
<com.android.server.pm.dex.DexoptOptions: boolean isForce()>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: boolean isNavBarVisible()>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean fullyExpandedClearAllVisible()>
<com.android.systemui.classifier.brightline.BrightLineFalsingManager: boolean isUnlockingDisabled()>
<com.android.keyguard.KeyguardHostView: void onFinishInflate()>
<com.android.systemui.statusbar.StatusBarMobileView: void setStaticDrawableColor(int)>
<com.android.systemui.DependencyProvider: android.view.IWindowManager provideIWindowManager()>
<com.android.systemui.doze.DozeHost: boolean isPowerSaveActive()>
<com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer: void reInflateViews(android.view.View.OnClickListener,android.service.notification.StatusBarNotification)>
<com.android.systemui.qs.TileLayout: void layoutTileRecords(int)>
<android.net.ip.RouterAdvertisementDaemon: void stop()>
<com.android.settingslib.CustomDialogPreferenceCompat: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: void onNotificationUpdated(android.service.notification.StatusBarNotification)>
<com.android.server.input.InputManagerService: void vibrate(int,long[],int,android.os.IBinder)>
<com.android.settingslib.volume.MediaSessions: void init()>
<com.android.systemui.qs.customize.TileAdapter.Holder: void startDrag()>
<com.android.server.notification.PriorityExtractor: com.android.server.notification.RankingReconsideration process(com.android.server.notification.NotificationRecord)>
<com.android.server.updates.ConversationActionsInstallReceiver: boolean verifyVersion(int,int)>
<com.android.uiautomator.core.UiDevice: void setOrientationLeft()>
<com.android.systemui.volume.VolumeDialogControllerImpl: void setAudioManagerStreamVolume(int,int,int)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setAntiBurnInOffsetX(int)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.keyguard.KeyguardSimPukView: void onAttachedToWindow()>
<com.android.systemui.statusbar.phone.StatusBarIconHolder: com.android.systemui.statusbar.phone.StatusBarIconHolder fromMobileIconState(com.android.systemui.statusbar.phone.StatusBarSignalPolicy.MobileIconState)>
<android.net.NetworkMonitorManager: boolean setAcceptPartialConnectivity()>
<com.android.server.usb.descriptors.UsbACMixerUnit: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>
<com.android.server.slice.SliceFullAccessList: void readXml(org.xmlpull.v1.XmlPullParser)>
<com.android.server.camera.CameraStatsJobService: void schedule(android.content.Context)>
<com.android.systemui.qs.QSDetail: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.usb.descriptors.Usb20ASFormatIII: byte getBitResolution()>
<com.android.server.statusbar.StatusBarManagerInternal: void preloadRecentApps()>
<com.android.server.notification.NotificationManagerService.WorkerHandler: void scheduleSendRankingUpdate()>
<com.android.server.biometrics.ClientMonitor: void destroy()>
<com.android.photos.BitmapRegionTileSource.ResourceBitmapSource: android.graphics.Bitmap loadPreviewBitmap(android.graphics.BitmapFactory.Options)>
<com.android.server.policy.PhoneWindowManager: int interceptMotionBeforeQueueingNonInteractive(int,long,int)>
<com.android.settingslib.bluetooth.LocalBluetoothProfile: boolean connect(android.bluetooth.BluetoothDevice)>
<com.android.server.devicepolicy.DevicePolicyManagerService: long getLastNetworkLogRetrievalTime()>
<com.android.systemui.statusbar.phone.ButtonInterface: void setDelayTouchFeedback(boolean)>
<com.android.server.devicepolicy.DevicePolicyManagerService.Lifecycle: void onBootPhase(int)>
<com.android.server.statusbar.StatusBarManagerService: void hideBiometricDialog()>
<com.android.server.locksettings.recoverablekeystore.WrappedKey: int getRecoveryStatus()>
<com.android.systemui.statusbar.notification.stack.AmbientState: void setPulsing(boolean)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: boolean hasHumanReadableName()>
<com.android.systemui.statusbar.phone.RotationContextButton: com.android.systemui.statusbar.policy.KeyButtonDrawable getNewDrawable()>
<com.android.server.locksettings.recoverablekeystore.RecoverableKeyGenerator: void importKey(com.android.server.locksettings.recoverablekeystore.PlatformEncryptionKey,int,int,java.lang.String,byte[],byte[])>
<com.android.systemui.HardwareUiLayout: void rotate(int,int)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void updateBackgroundTint()>
<com.android.server.autofill.ViewState.Listener: void onFillReady(android.service.autofill.FillResponse,android.view.autofill.AutofillId,android.view.autofill.AutofillValue)>
<com.android.gallery3d.exif.ExifInterface: short getTypeFromInfo(int)>
<com.android.settingslib.graph.BluetoothDeviceLayerDrawable: void setConstantState(android.content.Context,int,int,float)>
<com.android.server.biometrics.ClientMonitor: boolean onError(long,int,int)>
<com.android.systemui.qs.tiles.WorkModeTile: boolean isAvailable()>
<android.media.Session2Link: void cancelSessionCommand(android.media.Controller2Link,int)>
<com.android.powermodel.ComponentActivity: com.android.powermodel.ComponentPower applyProfile(com.android.powermodel.ActivityReport,com.android.powermodel.PowerProfile)>
<com.android.systemui.qs.tiles.IntentTile: com.android.systemui.qs.tiles.IntentTile create(com.android.systemui.qs.QSHost,java.lang.String)>
<com.android.systemui.qs.tileimpl.QSTileImpl: void addCallback(android.graphics.drawable.Drawable.Callback)>
<com.android.settingslib.animation.AppearAnimationCreator: void createAnimation(java.lang.Object,long,long,float,boolean,android.view.animation.Interpolator,java.lang.Runnable)>
<com.android.systemui.volume.ZenModePanel.Callback: void onExpanded(boolean)>
<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice queryInstrumentation(java.lang.String,int)>
<android.os.StrictModeTest: void timeCrossBinderThreadViolationNoStrictMode()>
<com.android.systemui.tuner.TunerService: void addTunable(com.android.systemui.tuner.TunerService.Tunable,java.lang.String[])>
<com.android.server.BatteryService: void onStart()>
<com.android.powermodel.component.ModemProfile: float getRxMa()>
<com.android.systemui.statusbar.phone.NavigationModeController: void setModeOverlay(java.lang.String,int)>
<com.android.systemui.glwallpaper.ImageWallpaperRenderer: void <init>(android.content.Context,com.android.systemui.glwallpaper.GLWallpaperRenderer.SurfaceProxy)>
<com.android.systemui.pip.tv.PipControlButtonView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setRemoteViewClickHandler(android.widget.RemoteViews.OnClickHandler)>
<com.android.server.utils.ManagedApplicationService: android.content.ComponentName getComponent()>
<android.media.MediaPlayer2.EventCallback: void onCallCompleted(android.media.MediaPlayer2,android.media.DataSourceDesc,int,int)>
<com.android.packageinstaller.UninstallerActivity: void startUninstallProgress(boolean)>
<com.android.systemui.recents.RecentsOnboarding: void setNavBarHeight(int)>
<com.android.systemui.statusbar.policy.RemoteInputView.RemoteEditText: void onFocusChanged(boolean,int,android.graphics.Rect)>
<com.android.systemui.statusbar.phone.NavigationBarInflaterView: void setNavigationBarLayout(java.lang.String)>
<com.android.server.policy.WindowOrientationListener: boolean canDetectOrientation()>
<com.android.systemui.plugins.qs.QSFactory: com.android.systemui.plugins.qs.QSTileView createTileView(com.android.systemui.plugins.qs.QSTile,boolean)>
<android.database.SQLiteDatabasePerfTest: void setUp()>
<com.android.server.locksettings.LockSettingsService: java.lang.String generateKeyWithMetadata(java.lang.String,byte[])>
<com.android.printspooler.util.ApprovedPrintServices: void pruneApprovedServices(java.util.List)>
<com.android.systemui.recents.misc.ReferenceCountedTrigger: void flushLastDecrementRunnables()>
<com.android.systemui.plugins.statusbar.StatusBarStateController.StateListener: void onDozeAmountChanged(float,float)>
<com.android.systemui.statusbar.phone.NavigationBarFrame: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.biometrics.iris.IrisService: java.lang.String getManageBiometricPermission()>
<com.android.server.locksettings.PasswordSlotManager: void markSlotInUse(int)>
<com.android.server.pm.PackageKeySetData: long getProperSigningKeySet()>
<com.android.systemui.qs.AutoAddTracker: boolean isAdded(java.lang.String)>
<com.android.systemui.statusbar.notification.row.NotificationContentInflater.AsyncInflationTask: void onAsyncInflationFinished(com.android.systemui.statusbar.notification.collection.NotificationEntry,int)>
<com.android.systemui.statusbar.StatusBarStateControllerImpl: boolean leaveOpenOnKeyguardHide()>
<com.android.server.policy.PhoneWindowManager: void startedWakingUp(int)>
<com.android.systemui.power.PowerNotificationWarnings: void updateSnapshot(com.android.systemui.powe.BatteryStateSnapshot)>
<com.android.settingslib.accessibility.AccessibilityUtils: java.util.Set getEnabledServicesFromSettings(android.content.Context,int)>
<com.android.settingslib.net.ChartDataLoader: void <init>(android.content.Context,android.net.INetworkStatsSession,android.os.Bundle)>
<com.android.server.accounts.AccountManagerService: boolean hasAccountAccess(android.accounts.Account,java.lang.String,android.os.UserHandle)>
<com.android.server.pm.PackageManagerService: android.content.pm.KeySet getKeySetByAlias(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.StatusBarIconView: float getIconAppearAmount()>
<com.android.server.slice.SliceClientPermissions: com.android.server.slice.SliceClientPermissions.SliceAuthority getAuthority(com.android.server.slice.SlicePermissionManager.PkgUser)>
<com.android.systemui.recents.views.FixedSizeFrameLayout: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.statusbar.phone.KeyguardBouncer.BouncerExpansionCallback: void onFullyShown()>
<com.android.powermodel.util.Conversion: double msToHr(double)>
<com.android.systemui.ActivityStarterDelegate: void startPendingIntentDismissingKeyguard(android.app.PendingIntent)>
<com.android.server.trust.TrustManagerService: void onBootPhase(int)>
<com.android.server.utils.AppInstallerUtil: android.content.Intent createIntent(android.content.Context,java.lang.String)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void cancelLongPress()>
<com.android.systemui.statusbar.notification.stack.AnimationFilter: com.android.systemui.statusbar.notification.stack.AnimationFilter animateScale()>
<com.android.server.locksettings.SyntheticPasswordManager: void removeUser(int)>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationViewWrapper: void setLegacy(boolean)>
<com.android.systemui.statusbar.notification.row.NotificationSnooze: boolean shouldBeSaved()>
<com.android.systemui.statusbar.phone.StatusBar: void postAnimateForceCollapsePanels()>
<com.android.systemui.plugins.FalsingManager: void setQsExpanded(boolean)>
<com.android.settingslib.applications.ApplicationsState.CompoundFilter: void init()>
<com.android.server.notification.ZenModeFiltering: boolean isAlarm(com.android.server.notification.NotificationRecord)>
<com.android.systemui.recents.RecentsImpl: void hideRecents(boolean,boolean)>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: com.android.systemui.recents.views.TaskViewTransform getStackTransform(com.android.systemui.shared.recents.model.Task,float,com.android.systemui.recents.views.TaskViewTransform,com.android.systemui.recents.views.TaskViewTransform)>
<com.android.systemui.statusbar.policy.KeyguardMonitorImpl: void notifyKeyguardDoneFading()>
<com.android.systemui.pip.tv.PipMenuActivity: void onPipActivityClosed()>
<com.android.systemui.statusbar.phone.UnlockMethodCache: void removeListener(com.android.systemui.statusbar.phone.UnlockMethodCache.OnUnlockMethodChangedListener)>
<android.net.TcpKeepalivePacketData: android.net.TcpKeepalivePacketData tcpKeepalivePacket(android.net.TcpKeepalivePacketDataParcelable)>
<android.perftests.utils.SettingsStateManager: void <init>(android.content.Context,java.lang.String,java.lang.String)>
<com.android.settingslib.bluetooth.PanProfile: int getOrdinal()>
<com.android.systemui.doze.DozeScreenStatePreventingAdapter: com.android.systemui.doze.DozeMachine.Service wrapIfNeeded(com.android.systemui.doze.DozeMachine.Service,com.android.systemui.statusbar.phone.DozeParameters)>
<com.android.server.locksettings.LockSettingsService: boolean havePassword(int)>
<com.android.systemui.statusbar.notification.stack.AnimationFilter: com.android.systemui.statusbar.notification.stack.AnimationFilter animateTopInset()>
<com.android.server.accessibility.MagnificationController: void <init>(com.android.server.accessibility.MagnificationController.ControllerContext,java.lang.Object)>
<android.net.ip.IpClientManager: boolean setMulticastFilter(boolean)>
<com.android.server.soundtrigger.SoundTriggerInternal: int unloadKeyphraseModel(int)>
<com.android.systemui.statusbar.VibratorHelper: void vibrate(int)>
<com.android.server.pm.permission.BasePermission: boolean isInstaller()>
<com.android.keyguard.KeyguardSecurityViewFlipper: void <init>(android.content.Context)>
<com.android.server.firewall.IntentFirewall: java.io.File getRulesDir()>
<com.android.systemui.statusbar.policy.MobileSignalController: void dump(java.io.PrintWriter)>
<com.android.systemui.statusbar.notification.stack.AmbientState: boolean isFullyDark()>
<com.android.dynsystem.DynamicSystemInstallationService: void onProgressUpdate(long)>
<com.android.systemui.ScreenDecorations.DisplayCutoutView: void onDisplayChanged(int)>
<com.android.statsd.loadtest.SequencePusher: void next()>
<com.android.commands.uiautomator.Launcher.Command: java.lang.String shortHelp()>
<com.android.dynsystem.DynamicSystemInstallationService: void onCreate()>
<com.android.server.slice.SliceClientPermissions: void clear()>
<com.android.systemui.statusbar.phone.StatusBarNotificationPresenter: void updateMediaMetaData(boolean,boolean)>
<com.android.systemui.statusbar.phone.ExpandableIndicator: void setDefaultDirection(boolean)>
<com.android.settingslib.applications.StorageStatsSource.AppStorageStats: long getTotalBytes()>
<com.android.systemui.statusbar.policy.ExtensionController.ExtensionBuilder: com.android.systemui.statusbar.policy.ExtensionController.ExtensionBuilder withFeature(java.lang.String,java.util.function.Supplier)>
<com.android.server.ConnectivityService: android.net.LinkProperties getLinkProperties(android.net.Network)>
<com.android.systemui.statusbar.car.UserGridRecyclerView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.phone.ObservableScrollView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.recents.LegacyRecentsImpl: void cancelPreloadRecentApps()>
<com.android.systemui.Prefs: void putStringSet(android.content.Context,java.lang.String,java.util.Set)>
<com.android.systemui.stackdivider.DividerWindowManager: void remove()>
<com.android.statsd.loadtest.PerfDataRecorder: void stopRecording(android.content.Context)>
<com.android.systemui.classifier.FalsingManagerProxy: void onExpansionFromPulseStopped()>
<com.android.systemui.statusbar.phone.BarTransitions.BarBackgroundDrawable: void finishAnimation()>
<com.android.server.locksettings.recoverablekeystore.KeyStoreProxyImpl: boolean containsAlias(java.lang.String)>
<com.android.systemui.qs.external.TileServices: void updateQsTile(android.service.quicksettings.Tile,android.os.IBinder)>
<com.android.server.role.RoleUserState: boolean removeRoleHolder(java.lang.String,java.lang.String)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glDeleteFramebuffersOES(int,int[],int)>
<com.android.systemui.statusbar.notification.stack.AmbientState: void setDarkAmount(float)>
<com.android.server.uri.UriPermissionOwner: java.lang.String toString()>
<com.android.server.policy.WindowManagerPolicy: void setKeyguardCandidateLw(com.android.server.policy.WindowManagerPolicy.WindowState)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: void sendAccessibilityEvent(int)>
<android.net.ip.InterfaceController: boolean clearAllAddresses()>
<com.android.server.input.InputManagerService: void registerTabletModeChangedListener(android.hardware.input.ITabletModeChangedListener)>
<com.android.server.pm.InstantAppResolver: android.content.pm.AuxiliaryResolveInfo doInstantAppResolutionPhaseOne(com.android.server.pm.InstantAppResolverConnection,android.content.pm.InstantAppRequest)>
<com.android.systemui.plugins.qs.QSTile.SlashState: java.lang.String toString()>
<com.android.systemui.statusbar.phone.StatusBarIconController.IconManager: boolean isDemoable()>
<com.android.settingslib.widget.AdaptiveOutlineDrawable: int getIntrinsicHeight()>
<com.android.server.LockGuard: java.lang.Object installLock(java.lang.Object,int)>
<com.android.fakeoemfeatures.FakeBackgroundService: void onCreate()>
<com.android.systemui.statusbar.phone.LightBarController: void onPowerSaveChanged(boolean)>
<com.android.server.accessibility.MagnificationController: float getCenterX(int)>
<com.android.systemui.statusbar.car.CarStatusBarKeyguardViewManager: void onDensityOrFontScaleChanged()>
<com.android.sharedstoragebackup.ObbBackupService: android.os.IBinder onBind(android.content.Intent)>
<com.android.systemui.qs.AutoAddTracker: void destroy()>
<com.android.systemui.volume.SegmentedButtons.Callback: void onSelected(java.lang.Object,boolean)>
<com.android.systemui.plugins.Plugin: void onCreate(android.content.Context,android.content.Context)>
<com.android.server.display.color.DisplayTransformManager: boolean isDeviceColorManaged()>
<com.android.server.autofill.ui.SaveUi.OnSaveListener: void onDestroy()>
<com.android.server.trust.TrustAgentWrapper: void onUnlockAttempt(boolean)>
<com.android.systemui.statusbar.phone.StatusBarNotificationPresenter: boolean isPresenterFullyCollapsed()>
<com.android.systemui.qs.tiles.LocationTile: void <init>(com.android.systemui.qs.QSHost,com.android.systemui.statusbar.policy.LocationController,com.android.systemui.statusbar.policy.KeyguardMonitor,com.android.systemui.plugins.ActivityStarter)>
<com.android.server.notification.ConditionProviders: boolean checkType(android.os.IInterface)>
<com.android.systemui.statusbar.car.CarFacetButtonController: java.lang.String getPackageCategory(java.lang.String)>
<com.android.settingslib.drawable.UserIconDrawable: void setPadding(float)>
<com.android.server.notification.ManagedServices: void readXml(org.xmlpull.v1.XmlPullParser,com.android.internal.util.function.TriPredicate,boolean,int)>
<com.android.systemui.DejankUtils: void postAfterTraversal(java.lang.Runnable)>
<com.android.settingslib.core.instrumentation.LogWriter: void action(android.content.Context,int,android.util.Pair[])>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setNetworkLoggingEnabled(android.content.ComponentName,java.lang.String,boolean)>
<com.android.keyguard.KeyguardSliceView: void onTuningChanged(java.lang.String,java.lang.String)>
<com.android.server.content.ContentService: void setIsSyncableAsUser(android.accounts.Account,java.lang.String,int,int)>
<com.android.systemui.statusbar.phone.StatusBar: void instantExpandNotificationsPanel()>
<com.android.settingslib.accounts.AuthenticatorHelper.OnAccountsUpdateListener: void onAccountsUpdate(android.os.UserHandle)>
<com.android.systemui.statusbar.NotificationLockscreenUserManager: boolean isCurrentProfile(int)>
<com.android.server.policy.PhoneWindowManager: void setNavBarVirtualKeyHapticFeedbackEnabledLw(boolean)>
<com.android.settingslib.wifi.AccessPoint: void setTag(java.lang.Object)>
<com.android.systemui.statusbar.CommandQueue: void dismissKeyboardShortcutsMenu()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean packageHasActiveAdmins(java.lang.String,int)>
<com.android.systemui.statusbar.policy.KeyButtonRipple: void setDarkIntensity(float)>
<com.android.commands.uiautomator.DumpCommand: void run(java.lang.String[])>
<com.android.systemui.SliceBroadcastRelayHandler: void start()>
<com.android.systemui.statusbar.phone.StatusBar: void onPanelLaidOut()>
<com.android.server.pm.KeySetManagerService: boolean checkUpgradeKeySetLocked(com.android.server.pm.PackageSettingBase,android.content.pm.PackageParser.Package)>
<com.android.systemui.globalactions.GlobalActionsDialog.MyAdapter: boolean onLongClickItem(int)>
<com.android.systemui.colorextraction.SysuiColorExtractor: void onUiModeChanged()>
<com.android.server.stats.StatsCompanionService: void sendActiveConfigsChangedBroadcast(android.os.IBinder,long[])>
<com.android.keyguard.KeyguardSecurityContainer: com.android.keyguard.KeyguardSecurityModel.SecurityMode getCurrentSecuritySelection()>
<com.android.server.biometrics.RemovalClient: void <init>(android.content.Context,com.android.server.biometrics.Constants,com.android.server.biometrics.BiometricServiceBase.DaemonWrapper,long,android.os.IBinder,com.android.server.biometrics.BiometricServiceBase.ServiceListener,int,int,int,boolean,java.lang.String,com.android.server.biometrics.BiometricUtils)>
<com.android.server.notification.BubbleExtractor: com.android.server.notification.RankingReconsideration process(com.android.server.notification.NotificationRecord)>
<com.android.server.biometrics.face.FaceService: long getHalDeviceId()>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: float updateFocusStateOnScroll(float,float,float)>
<com.android.systemui.statusbar.SmartReplyController: boolean isSendingSmartReply(java.lang.String)>
<com.android.systemui.statusbar.phone.KeyguardBouncer: void hide(boolean)>
<com.android.systemui.statusbar.notification.row.ExpandableView: boolean isDark()>
<com.android.server.testing.shadows.ShadowAppBackupUtils: boolean appIsEligibleForBackup(android.content.pm.ApplicationInfo,int)>
<com.android.systemui.recents.views.RecentsView: void updateBackgroundScrim(android.view.Window,boolean)>
<com.android.systemui.statusbar.phone.HeadsUpTouchHelper: void notifyFling(boolean)>
<com.android.systemui.statusbar.phone.ButtonDispatcher: void setOnTouchListener(android.view.View.OnTouchListener)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: boolean isConnectedProfile(com.android.settingslib.bluetooth.LocalBluetoothProfile)>
<com.android.server.usb.descriptors.UsbInterfaceAssoc: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>
<com.android.systemui.statusbar.policy.RemoteInputView: void beforeTextChanged(java.lang.CharSequence,int,int,int)>
<com.android.server.pm.PackageDexOptimizer.ForcedUpdatePackageDexOptimizer: int adjustDexoptFlags(int)>
<com.android.systemui.shared.system.ActivityManagerWrapper: com.android.systemui.shared.recents.model.ThumbnailData getTaskThumbnail(int,boolean)>
<com.android.systemui.statusbar.policy.RemoteInputView: void onNotificationUpdateOrReset()>
<com.android.gallery3d.exif.ExifInterface: com.android.gallery3d.exif.Rational[] getTagRationalValues(int,int)>
<com.android.settingslib.drawable.UserIconDrawable: void setTintMode(android.graphics.PorterDuff.Mode)>
<com.android.systemui.statusbar.policy.HeadsUpManager.HeadsUpEntry: long calculateFinishTime()>
<com.android.systemui.settings.ToggleSliderView: void setValue(int)>
<android.widget.TextViewSetTextLocalePerfTest: void <init>(java.lang.String,java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.KeyguardIndicationController: void setIndicationArea(android.view.ViewGroup)>
<com.android.systemui.statusbar.car.UserGridRecyclerView.UserAdapter: void onClick(android.content.DialogInterface,int)>
<com.android.systemui.pip.phone.PipMenuActivity: void finish()>
<com.android.server.biometrics.BiometricServiceBase.DaemonWrapper: int enumerate()>
<com.android.systemui.pip.phone.PipMenuActivity: void onStop()>
<com.android.systemui.statusbar.policy.KeyguardMonitorImpl: boolean isSecure()>
<com.android.server.notification.NotificationUsageStats: void registerBlocked(com.android.server.notification.NotificationRecord)>
<com.android.systemui.statusbar.notification.NotificationInterruptionStateProvider: boolean shouldPulse(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.server.usb.descriptors.Usb20ACMixerUnit: void <init>(int,byte,byte,int)>
<com.android.server.audio.AudioService.AudioPolicyProxy: void binderDied()>
<com.android.systemui.statusbar.notification.row.NotificationSnooze.NotificationSnoozeOption: java.lang.CharSequence getDescription()>
<com.android.gallery3d.glrenderer.GLCanvas: void texSubImage2D(com.android.gallery3d.glrenderer.BasicTexture,int,int,android.graphics.Bitmap,int,int)>
<com.android.systemui.shared.recents.model.Task.TaskCallbacks: void onTaskDataLoaded(com.android.systemui.shared.recents.model.Task,com.android.systemui.shared.recents.model.ThumbnailData)>
<com.android.server.appbinding.finders.CarrierMessagingClientServiceFinder: int getBindFlags(com.android.server.appbinding.AppBindingConstants)>
<com.android.commands.uiautomator.DumpCommand: java.lang.String detailedOptions()>
<com.android.systemui.statusbar.notification.row.NotificationBackgroundView: void drawableStateChanged()>
<com.android.gallery3d.exif.ExifTag: boolean setValue(byte)>
<com.android.server.SensorNotificationService: void onAccuracyChanged(android.hardware.Sensor,int)>
<com.android.systemui.recents.views.TaskViewHeader: void onFinishInflate()>
<com.android.packageinstaller.television.UninstallAppProgress: android.content.pm.ApplicationInfo getAppInfo()>
<com.android.settingslib.widget.BarViewInfo: void <init>(android.graphics.drawable.Drawable,int,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)>
<com.android.providers.settings.SettingsProvider: boolean onCreate()>
<com.android.systemui.Prefs: void unregisterListener(android.content.Context,android.content.SharedPreferences.OnSharedPreferenceChangeListener)>
<com.android.systemui.qs.PagedTileLayout: void setExpansion(float)>
<com.android.server.contentcapture.ContentCaptureManagerService: void <init>(android.content.Context)>
<javax.microedition.khronos.opengles.GL10: void glDepthMask(boolean)>
<com.android.systemui.analytics.DataCollector: void onCameraHintStarted()>
<com.android.server.pm.IntentFilterVerificationState: int getState()>
<com.android.systemui.statusbar.NotificationViewHierarchyManager: void onDynamicPrivacyChanged()>
<com.android.server.biometrics.EnrollClient: boolean onEnrollResult(android.hardware.biometrics.BiometricAuthenticator.Identifier,int)>
<com.android.server.companion.CompanionDeviceManagerService: void onStart()>
<com.android.server.slice.SlicePermissionManager.PkgUser: boolean equals(java.lang.Object)>
<javax.obex.ObexPacket: javax.obex.ObexPacket read(java.io.InputStream)>
<com.android.server.TelephonyRegistry: void notifyEmergencyNumberList(int,int)>
<com.android.server.hdmi.HdmiCecLocalDevicePlayback: void setPreferredAddress(int)>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationHeaderViewWrapper: void resolveHeaderViews()>
<com.android.systemui.shared.system.ActivityManagerWrapper: void removeTask(int)>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: void setClipBottomAmount(int)>
<com.android.server.trust.TrustAgentWrapper: boolean isManagingTrust()>
<com.android.systemui.recents.RecentsImplementation: void onBootCompleted()>
<com.android.systemui.recents.IRecentsNonSystemUserCallbacks: void hideRecents(boolean,boolean)>
<com.android.server.notification.NotificationUsageStats: void registerUpdatedByApp(com.android.server.notification.NotificationRecord,com.android.server.notification.NotificationRecord)>
<com.android.systemui.statusbar.notification.collection.NotificationData: java.util.ArrayList getNotificationsForCurrentUser()>
<com.android.systemui.statusbar.policy.InflatedSmartReplies.SmartRepliesAndActions: java.util.List getSmartActions()>
<com.android.settingslib.deviceinfo.PrivateStorageInfo: long getTotalSize(android.os.storage.VolumeInfo,long)>
<com.android.systemui.qs.car.CarQSFragment: void setExpanded(boolean)>
<com.android.systemui.qs.tileimpl.QSTileBaseView: boolean performClick()>
<com.android.future.usb.UsbAccessory: boolean equals(java.lang.Object)>
<com.android.systemui.qs.SignalTileView: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.activity.DismissRecentsToHomeAnimationStarted)>
<com.android.statsd.dogfood.MainActivity.ReceiverIntentService: void onHandleIntent(android.content.Intent)>
<com.android.systemui.volume.SafetyWarningDialog: void <init>(android.content.Context,android.media.AudioManager)>
<com.android.server.display.whitebalance.AmbientSensor.AmbientBrightnessSensor.Callbacks: void onAmbientBrightnessChanged(float)>
<com.android.systemui.recents.views.TaskStackView: void onFocusStateChanged(int,int)>
<com.android.systemui.plugins.FalsingManager: void onNotificationActive()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setMaximumTimeToLock(android.content.ComponentName,long,boolean)>
<com.android.systemui.statusbar.policy.SensorPrivacyControllerImpl: void <init>(android.content.Context)>
<com.android.systemui.statusbar.policy.BluetoothController: void disconnect(com.android.settingslib.bluetooth.CachedBluetoothDevice)>
<com.android.settingslib.RestrictedLockUtilsInternal: boolean hasBaseUserRestriction(android.content.Context,java.lang.String,int)>
<com.android.server.textclassifier.TextClassificationManagerService: void onClassifyText(android.view.textclassifier.TextClassificationSessionId,android.view.textclassifier.TextClassification.Request,android.service.textclassifier.ITextClassifierCallback)>
<com.android.systemui.qs.tiles.ColorInversionTile: void handleUpdateState(com.android.systemui.plugins.qs.QSTile.BooleanState,java.lang.Object)>
<com.android.server.TelephonyRegistry: void notifyDataConnection(int,boolean,java.lang.String,java.lang.String,android.net.LinkProperties,android.net.NetworkCapabilities,int,boolean)>
<com.android.systemui.qs.QSFooterImpl: void setExpandClickListener(android.view.View.OnClickListener)>
<com.android.settingslib.RestrictedPreference: boolean shouldHideSecondTarget()>
<javax.microedition.khronos.opengles.GL11: void glDeleteBuffers(int,int[],int)>
<com.android.systemui.biometrics.BiometricDialogView: int getHintStringResourceId()>
<com.android.server.notification.NotificationShellCmd: void <init>(com.android.server.notification.NotificationManagerService)>
<com.android.commands.hid.Hid: void main(java.lang.String[])>
<com.android.server.input.InputManagerService: void addKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,java.lang.String)>
<com.android.settingslib.applications.DefaultAppInfo: void <init>(android.content.Context,android.content.pm.PackageManager,int,android.content.ComponentName)>
<com.android.nfc_extras.EeAlreadyOpenException: void <init>(java.lang.String)>
<com.google.android.startop.iorap.PackageEvent: boolean equals(java.lang.Object)>
<com.android.printspooler.model.RemotePrintDocument: void cancel(boolean)>
<com.android.server.media.MediaRouterService: void registerClientGroupId(android.media.IMediaRouterClient,java.lang.String)>
<com.android.server.usb.descriptors.Usb20ACHeader: void report(com.android.server.usb.descriptors.report.ReportCanvas)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setPanelAlphaEndAction(java.lang.Runnable)>
<com.android.server.policy.PhoneWindowManager: boolean hasNavigationBar()>
<com.android.systemui.statusbar.policy.DataSaverControllerImpl: void <init>(android.content.Context)>
<com.android.providers.settings.SettingsHelper: android.os.LocaleList resolveLocales(android.os.LocaleList,android.os.LocaleList,java.lang.String[])>
<com.android.server.usb.UsbHostManager: void dumpDescriptors(com.android.internal.util.IndentingPrintWriter,java.lang.String[])>
<com.android.systemui.qs.tiles.HotspotTile.CallbackInfo: java.lang.String toString()>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: boolean isFirstInSection()>
<com.android.systemui.shared.recents.model.Task.TaskKey: int hashCode()>
<com.android.settingslib.bluetooth.LocalBluetoothManager: android.content.Context getContext()>
<com.android.systemui.qs.tileimpl.QSTileImpl: com.android.systemui.plugins.qs.DetailAdapter createDetailAdapter()>
<com.android.systemui.recents.OverviewProxyService: float getBackButtonAlpha()>
<com.android.keyguard.clock.DefaultClockController: void setDarkAmount(float)>
<com.android.systemui.statusbar.StatusBarIconView: void setVisibility(int)>
<com.android.server.testing.shadows.ShadowAppBackupUtils: void setAppGetsFullBackup(java.lang.String)>
<android.net.ip.RouterAdvertisementDaemon: void buildNewRa(android.net.ip.RouterAdvertisementDaemon.RaParams,android.net.ip.RouterAdvertisementDaemon.RaParams)>
<com.android.systemui.classifier.FalsingManagerImpl: void onCameraHintStarted()>
<com.android.server.input.InputManagerService.WindowManagerCallbacks: android.view.KeyEvent dispatchUnhandledKey(android.os.IBinder,android.view.KeyEvent,int)>
<com.android.settingslib.bluetooth.MapProfile: java.util.List getConnectedDevices()>
<com.android.server.pm.permission.BasePermission: boolean isPreInstalled()>
<com.android.systemui.qs.QSPanel: void setBrightnessMirror(com.android.systemui.statusbar.policy.BrightnessMirrorController)>
<com.android.systemui.statusbar.phone.ShadeController: void updateAreThereNotifications()>
<com.android.keyguard.CarrierTextController.CarrierTextCallbackInfo: void <init>(java.lang.CharSequence,java.lang.CharSequence[],boolean,int[])>
<com.android.settingslib.applications.ApplicationsState: boolean haveDisabledApps()>
<com.android.systemui.recents.views.TaskView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.IntentResolver: void dumpFilterLabel(java.io.PrintWriter,java.lang.String,java.lang.Object,int)>
<com.android.systemui.biometrics.FingerprintDialogView: int getHintStringResourceId()>
<android.net.netlink.StructNlAttr: android.net.netlink.StructNlAttr peek(java.nio.ByteBuffer)>
<com.android.systemui.statusbar.KeyguardAffordanceView: void onDraw(android.graphics.Canvas)>
<com.android.systemui.DependencyBinder: com.android.systemui.statusbar.policy.NetworkController provideNetworkController(com.android.systemui.statusbar.policy.NetworkControllerImpl)>
<com.android.server.pm.permission.PermissionSettings: void writePermissionTrees(org.xmlpull.v1.XmlSerializer)>
<com.android.systemui.classifier.Point: float getAngle(com.android.systemui.classifier.Point,com.android.systemui.classifier.Point)>
<com.android.systemui.stackdivider.DividerView: com.android.systemui.stackdivider.WindowManagerProxy getWindowManagerProxy()>
<com.android.systemui.qs.QSTileHost: void forceCollapsePanels()>
<com.android.server.notification.NotificationManagerService.NotificationAssistants: void onUserUnlocked(int)>
<com.android.systemui.statusbar.phone.ShadeController: void addAfterKeyguardGoneRunnable(java.lang.Runnable)>
<com.android.server.statusbar.StatusBarManagerService: void clickTile(android.content.ComponentName)>
<com.android.systemui.statusbar.NotificationMediaManager: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.shared.system.InputChannelCompat.InputEventDispatcher: void dispose()>
<com.android.server.locksettings.LockSettingsService: boolean getSeparateProfileChallengeEnabled(int)>
<com.android.settingslib.bluetooth.HearingAidProfile: void finalize()>
<com.android.systemui.qs.QSFragment: int getQsMinExpansionHeight()>
<com.android.uiautomator.core.UiScrollable: boolean flingToEnd(int)>
<com.android.systemui.statusbar.notification.collection.NotificationData: void updateRanking(android.service.notification.NotificationListenerService.RankingMap)>
<com.android.server.accessibility.MagnificationController: boolean setScale(int,float,float,float,boolean,int)>
<com.android.systemui.tuner.TunerZenModePanel: void setDoneListener(android.view.View.OnClickListener)>
<com.android.server.pm.permission.PermissionsState: boolean hasRuntimePermission(java.lang.String,int)>
<com.android.server.display.whitebalance.DisplayWhiteBalanceController.Callbacks: void updateWhiteBalance()>
<com.android.server.role.RoleUserState: void dump(com.android.internal.util.dump.DualDumpOutputStream,java.lang.String,long)>
<com.android.systemui.statusbar.StatusBarIconView: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.systemui.keyguard.DismissCallbackWrapper: void notifyDismissSucceeded()>
<com.android.settingslib.deviceinfo.AbstractImsStatusPreferenceController: void updateConnectivity()>
<com.android.uiautomator.core.Configurator: com.android.uiautomator.core.Configurator setWaitForIdleTimeout(long)>
<com.android.systemui.statusbar.phone.NavigationHandle: void abortCurrentGesture()>
<com.android.settingslib.bluetooth.A2dpProfile: boolean isProfileReady()>
<com.android.server.pm.PackageSetting: boolean isProductServices()>
<com.android.settingslib.media.MediaManager.MediaDeviceCallback: void onDeviceAdded(com.android.settingslib.media.MediaDevice)>
<com.android.systemui.bubbles.animation.PhysicsAnimationLayout: void setEndActionForMultipleProperties(java.lang.Runnable,androidx.dynamicanimation.animation.DynamicAnimation.ViewProperty[])>
<com.android.server.usb.descriptors.report.UsbStrings: java.lang.String getAudioSubclassName(int)>
<com.android.systemui.statusbar.notification.row.NotificationGuts.GutsContent: boolean willBeRemoved()>
<com.android.settingslib.net.NetworkCycleDataLoader: void <init>(com.android.settingslib.net.NetworkCycleDataLoader.Builder)>
<com.android.systemui.recents.utilities.Utilities: float unmapRange(float,float,float)>
<com.android.systemui.statusbar.phone.ObservableScrollView: boolean isHandlingTouchEvent()>
<com.android.server.devicepolicy.OverlayPackagesProvider: void <init>(android.content.Context)>
<com.android.server.search.SearchManagerService.Lifecycle: void onUnlockUser(int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onUnlockHintStarted()>
<com.android.systemui.statusbar.notification.row.ButtonLinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.settingslib.bluetooth.HidProfile: void finalize()>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void readyForKeyguardDone()>
<com.android.systemui.statusbar.phone.HeadsUpManagerPhone: void onStateChanged(int)>
<com.android.systemui.statusbar.NotificationLockscreenUserManager: void addUserChangedListener(com.android.systemui.statusbar.NotificationLockscreenUserManager.UserChangedListener)>
<com.android.systemui.pip.tv.PipManager.MediaListener: void onMediaControllerChanged()>
<com.android.server.stats.StatsCompanionService: void cancelPullingAlarm()>
<com.android.server.LooperStatsService.Lifecycle: void onBootPhase(int)>
<com.android.systemui.usb.UsbConfirmActivity: void onDestroy()>
<com.android.settingslib.development.AbstractLogpersistPreferenceController: void onDestroy()>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: void <init>(android.service.notification.StatusBarNotification,android.service.notification.NotificationListenerService.Ranking)>
<com.android.systemui.statusbar.phone.DozeParameters: void dump(java.io.PrintWriter)>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb: java.util.Map getStatusForAllKeys(int)>
<com.android.systemui.shared.plugins.PluginInitializer: com.android.systemui.shared.plugins.PluginEnabler getPluginEnabler(android.content.Context)>
<com.android.server.soundtrigger.SoundTriggerService: void onBootPhase(int)>
<com.android.server.biometrics.fingerprint.FingerprintService: com.android.server.biometrics.BiometricUtils getBiometricUtils()>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void onRemoteInputActive(boolean)>
<com.android.systemui.classifier.brightline.TimeLimitedMotionEventBuffer: java.util.Iterator iterator()>
<com.android.systemui.statusbar.phone.NotificationsQuickSettingsContainer: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.settingslib.RestrictedSwitchPreference: void setDisabledByAdmin(com.android.settingslib.RestrictedLockUtils.EnforcedAdmin)>
<com.android.systemui.shared.system.TaskStackChangeListener: void onTaskDisplayChanged(int,int)>
<com.android.server.notification.PriorityExtractor: void setConfig(com.android.server.notification.RankingConfig)>
<com.android.keyguard.KeyguardUpdateMonitor: void handleStartedGoingToSleep(int)>
<com.android.server.LocationManagerService: void flushGnssBatch(java.lang.String)>
<com.android.keyguard.KeyguardHostView: void cleanUp()>
<com.android.systemui.tuner.SelectablePreference: void setIcon(android.graphics.drawable.Drawable)>
<com.android.server.SystemServer: void main(java.lang.String[])>
<com.android.server.location.RemoteListenerHelper: void removeListener(android.os.IInterface)>
<com.android.providers.settings.SettingsBackupAgent: void onBackup(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor)>
<com.android.media.remotedisplay.RemoteDisplay: void setStatus(int)>
<com.android.server.inputmethod.InputMethodManagerService: java.util.List getEnabledInputMethodList(int)>
<com.android.systemui.statusbar.CommandQueue: void onCameraLaunchGestureDetected(int)>
<com.android.systemui.CarSystemUIFactory: com.android.systemui.CarSystemUIFactory.CarDependencyComponent getCarDependencyComponent()>
<com.android.systemui.statusbar.phone.DozeParameters: com.android.systemui.statusbar.phone.DozeParameters getInstance(android.content.Context)>
<com.android.server.TelephonyRegistry: void notifyPreciseCallState(int,int,int,int,int)>
<com.android.server.notification.NotificationUsageStats: void registerPeopleAffinity(com.android.server.notification.NotificationRecord,boolean,boolean,boolean)>
<com.android.systemui.plugins.qs.QSTile.Icon: int hashCode()>
<com.android.systemui.statusbar.policy.UserSwitcherController: void showExitGuestDialog(int,int)>
<com.android.systemui.doze.DozeHost: void onIgnoreTouchWhilePulsing(boolean)>
<com.android.systemui.statusbar.ScrimView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.phone.NavigationBarFragment: void onSaveInstanceState(android.os.Bundle)>
<com.android.systemui.statusbar.notification.logging.NotificationLogger: void setHeadsUpManager(com.android.systemui.statusbar.policy.HeadsUpManager)>
<com.android.systemui.statusbar.policy.NetworkController.AccessPointController: boolean canConfigWifi()>
<com.android.systemui.statusbar.NotificationPresenter: int getMaxNotificationsWhileLocked(boolean)>
<com.android.server.locksettings.recoverablekeystore.BadPlatformKeyException: void <init>(java.lang.String)>
<com.android.packageinstaller.UninstallUninstalling: void onSaveInstanceState(android.os.Bundle)>
<android.net.shared.IpConfigurationParcelableUtil: android.net.DhcpResultsParcelable toStableParcelable(android.net.DhcpResults)>
<com.android.server.AlarmManagerInternal: boolean isIdling()>
<com.android.server.pm.AbstractStatsBase: void writeInternal(java.lang.Object)>
<com.android.systemui.egg.MLandActivity: void onResume()>
<com.android.settingslib.drawable.UserIconDrawable: void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable)>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: void initBackground()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void closeRemoteInput()>
<com.android.systemui.recents.views.TaskViewThumbnail: void setDimAlpha(float)>
<com.android.gallery3d.glrenderer.GLCanvas: void deleteBuffer(int)>
<com.android.server.pm.PackageManagerService: com.android.server.pm.PackageManagerService.PackageFreezer freezePackage(java.lang.String,java.lang.String)>
<android.os.PssPerfTest: void testPss()>
<com.android.gallery3d.exif.ExifTag: int getIfd()>
<com.android.preload.ui.IUI: boolean showConfirmDialog(java.lang.String,java.lang.String)>
<com.android.server.webkit.SystemImpl: boolean isMultiProcessDefaultEnabled()>
<com.android.powermodel.RawBatteryStats: java.util.Set getApps()>
<android.net.ip.IpServer.Callback: void updateLinkProperties(android.net.ip.IpServer,android.net.LinkProperties)>
<com.android.server.policy.WindowManagerPolicy: int getSubWindowLayerFromTypeLw(int)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean childNeedsClipping(android.view.View)>
<com.android.systemui.DessertCaseView.RescalingContainer: void <init>(android.content.Context)>
<com.android.systemui.qs.tiles.AirplaneModeTile: void handleSetListening(boolean)>
<com.android.server.input.InputManagerService: void updateAccessibilityLargePointerFromSettings()>
<com.android.systemui.statusbar.phone.LightBarTransitionsController: void appTransitionPending(int,boolean)>
<com.android.systemui.RegionInterceptingFrameLayout: void <init>(android.content.Context)>
<com.android.printspooler.ui.PrintActivity: void onOptionsOpened()>
<com.android.systemui.qs.tiles.CastTile: int getMetricsCategory()>
<com.android.settingslib.bluetooth.HearingAidProfile: int getProfileId()>
<com.android.server.AppStateTracker: void <init>(android.content.Context,android.os.Looper)>
<com.android.server.ConnectivityService: com.android.internal.net.VpnConfig getVpnConfig(int)>
<com.android.systemui.globalactions.ListGridLayout: void setReverseSublists(boolean)>
<com.android.mtp.MtpDocumentsProvider: boolean onCreate()>
<com.android.systemui.qs.external.PackageManagerAdapter: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int)>
<com.android.systemui.tuner.OtherPrefs: void onCreatePreferences(android.os.Bundle,java.lang.String)>
<com.android.server.locksettings.SyntheticPasswordManager: boolean hasSidForUser(int)>
<com.android.server.usb.descriptors.Usb10ACOutputTerminal: byte getTerminal()>
<com.android.powermodel.RawBatteryStats: java.util.List getWarnings()>
<com.android.settingslib.bluetooth.CachedBluetoothDeviceManager: boolean onDeviceDisappeared(com.android.settingslib.bluetooth.CachedBluetoothDevice)>
<android.processor.unsupportedappusage.SignatureBuilder: java.lang.String buildSignature(javax.lang.model.element.Element)>
<com.android.systemui.statusbar.phone.MultiUserSwitch: void setQsPanel(com.android.systemui.qs.QSPanel)>
<com.android.systemui.util.wakelock.KeepAwakeAnimationListener: void onAnimationEnd(android.view.animation.Animation)>
<com.android.systemui.qs.tiles.CellularTile: java.lang.CharSequence getTileLabel()>
<com.android.systemui.qs.tiles.WifiTile.WifiDetailAdapter: void setItemsVisible(boolean)>
<com.android.systemui.globalactions.GlobalActionsImpl: void showShutdownUi(boolean,java.lang.String)>
<com.android.server.display.VirtualDisplayAdapter: void setVirtualDisplaySurfaceLocked(android.os.IBinder,android.view.Surface)>
<com.android.settingslib.bluetooth.HidProfile: int getConnectionStatus(android.bluetooth.BluetoothDevice)>
<com.android.systemui.shared.system.ThreadedRendererCompat: void setContextPriority(int)>
<com.android.systemui.plugins.qs.QSTileView: void <init>(android.content.Context)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setContentTransformationAmount(float,boolean)>
<com.android.wallpapercropper.CropView: void onScaleEnd(android.view.ScaleGestureDetector)>
<com.android.systemui.qs.SignalTileView: void onMeasure(int,int)>
<com.android.settingslib.bluetooth.PbapClientProfile: int getSummaryResourceForDevice(android.bluetooth.BluetoothDevice)>
<com.android.server.policy.PhoneWindowManager: void keepScreenOnStartedLw()>
<android.text.StaticLayoutPerfTest: void setUp()>
<android.database.CursorWindowPerfTest: void loadInt()>
<javax.obex.PrivateInputStream: int read(byte[],int,int)>
<com.android.systemui.classifier.Point: float dist(com.android.systemui.classifier.Point)>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationHeaderViewWrapper: void <init>(android.content.Context,android.view.View,com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<com.android.systemui.statusbar.notification.row.NotificationInfo: int getActualHeight()>
<com.android.systemui.statusbar.StatusBarStateControllerImpl: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.usb.descriptors.UsbDescriptorParser: java.util.ArrayList getInterfaceDescriptorsForClass(int)>
<com.android.systemui.statusbar.phone.StatusBarIconControllerImpl: void removeIcon(int,int)>
<android.media.MediaSession2: java.lang.String getId()>
<com.android.server.signedconfig.SignedConfigEvent: void send()>
<com.android.proxyhandler.SocketConnect: void <init>(java.net.Socket,java.net.Socket)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: void notifyHeightChanged(boolean)>
<com.android.server.notification.NotificationManagerService.NotificationAssistants: void onServiceAdded(com.android.server.notification.ManagedServices.ManagedServiceInfo)>
<com.android.server.biometrics.face.FaceConstants: java.lang.String tagEnrollStartError()>
<com.android.uiautomator.core.UiDevice: boolean swipe(int,int,int,int,int)>
<com.android.systemui.classifier.PointerCountClassifier: java.lang.String getTag()>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: void setKeepInParent(boolean)>
<com.android.settingslib.core.lifecycle.ObservableActivity: void onStart()>
<com.android.preload.ui.NullProgressMonitor: void startSubTask(java.lang.String)>
<com.android.server.policy.PhoneWindowManager: void setTopFocusedDisplay(int)>
<com.android.systemui.bubbles.animation.StackAnimationController: android.graphics.RectF getAllowableStackPositionRegion()>
<com.android.systemui.qs.QSFooterImpl: void setListening(boolean)>
<com.android.systemui.statusbar.phone.KeyguardBouncer: void showWithDismissAction(com.android.systemui.plugins.ActivityStarter.OnDismissAction,java.lang.Runnable)>
<com.android.systemui.statusbar.KeyguardIndicationController.BaseKeyguardCallback: void onTrustAgentErrorMessage(java.lang.CharSequence)>
<com.android.systemui.statusbar.policy.ZenModeControllerImpl: boolean isVolumeRestricted()>
<com.android.settingslib.wifi.AccessPointPreference: void <init>(com.android.settingslib.wifi.AccessPoint,android.content.Context,com.android.settingslib.wifi.AccessPointPreference.UserBadgeCache,int,boolean)>
<com.android.systemui.shared.system.ActivityOptionsCompat: android.app.ActivityOptions makeSplitScreenOptions(boolean,boolean)>
<com.android.settingslib.Utils: java.lang.String formatPercentage(double)>
<com.android.systemui.util.leak.TrackedGarbage: void track(java.lang.Object)>
<com.android.settingslib.net.NetworkCycleDataLoader: java.util.ArrayList getCycles()>
<com.android.server.pm.PackageSettingBase: android.content.pm.PackageUserState readUserState(int)>
<com.android.systemui.statusbar.phone.ShadeController: void addPostCollapseAction(java.lang.Runnable)>
<com.android.systemui.statusbar.policy.SecurityController: boolean hasCACertInWorkProfile()>
<com.android.systemui.recents.RecentsActivity: void onPackageChanged(java.lang.String,int)>
<com.android.server.content.ContentService: java.lang.String[] getSyncAdapterPackagesForAuthorityAsUser(java.lang.String,int)>
<com.android.systemui.statusbar.notification.row.ExpandableView: int getMaxContentHeight()>
<android.text.NonEditableTextGenerator.RandomCharSequenceGenerator: void <init>(java.util.Random)>
<javax.microedition.khronos.opengles.GL11: void glGetLightxv(int,int,int[],int)>
<com.android.systemui.classifier.ClassifierData: com.android.systemui.classifier.Stroke getStroke(int)>
<com.android.systemui.statusbar.phone.ManagedProfileController.Callback: void onManagedProfileChanged()>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void onDensityOrFontScaleChanged()>
<com.android.settingslib.net.NetworkCycleDataForUidLoader.Builder: com.android.settingslib.net.NetworkCycleDataForUidLoader.Builder addUid(int)>
<com.android.systemui.SwipeHelper: void snapChild(android.view.View,float,float)>
<com.android.systemui.statusbar.phone.DoubleTapHelper: boolean isWithinDoubleTapSlop(android.view.MotionEvent)>
<com.android.systemui.util.leak.WeakIdentityHashMap: java.util.Collection values()>
<com.android.systemui.bubbles.BubbleStackView: void setExpanded(boolean)>
<com.android.server.audio.AudioService: void registerPlaybackCallback(android.media.IPlaybackConfigDispatcher)>
<com.android.systemui.statusbar.notification.stack.StackStateAnimator: void cancelOverScrollAnimators(boolean)>
<com.android.server.locksettings.SyntheticPasswordManager: com.android.server.locksettings.SyntheticPasswordManager.AuthenticationResult unwrapTokenBasedSyntheticPassword(android.service.gatekeeper.IGateKeeperService,long,byte[],int)>
<com.android.systemui.statusbar.notification.row.NotificationInfo.OnSettingsClickListener: void onClick(android.view.View,android.app.NotificationChannel,int)>
<com.android.settingslib.deviceinfo.StorageMeasurement: void forceMeasure()>
<com.android.systemui.egg.MLandActivity: void playerPlus(android.view.View)>
<com.android.server.biometrics.fingerprint.FingerprintConstants: int actionBiometricAuth()>
<com.android.settingslib.widget.AppEntitiesHeaderController: com.android.settingslib.widget.AppEntitiesHeaderController setAppEntity(int,com.android.settingslib.widget.AppEntityInfo)>
<com.android.systemui.volume.VolumeDialogImpl: void init(int,com.android.systemui.volume.VolumeDialogImpl.Callback)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void onScreenTurningOn(com.android.internal.policy.IKeyguardDrawnCallback)>
<com.android.systemui.BatteryMeterView: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.content.SyncStorageEngine: void setClockValid()>
<com.android.systemui.bubbles.animation.StackAnimationController: void animateForImeVisibility(boolean)>
<com.android.location.provider.LocationProviderBase: void reportLocation(android.location.Location)>
<com.android.systemui.glwallpaper.EglHelper: boolean createEglSurface(android.view.SurfaceHolder)>
<com.android.systemui.recents.LegacyRecentsImpl: void preloadRecentApps()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onEmptySpaceClicked(float,float)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glStencilOp(int,int,int)>
<com.android.systemui.statusbar.phone.DozeParameters: int getPulseOutDuration()>
<com.android.systemui.statusbar.phone.NavigationPrototypeController: void <init>(android.content.Context)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean getCrossProfileCallerIdDisabledForUser(int)>
<com.android.systemui.util.leak.GarbageMonitor: void startTrackingProcess(long,java.lang.String,long)>
<android.net.IpMemoryStoreClient: void storeBlob(java.lang.String,java.lang.String,java.lang.String,android.net.ipmemorystore.Blob,android.net.ipmemorystore.OnStatusListener)>
<com.android.systemui.statusbar.phone.LightBarController: void onBatteryLevelChanged(int,boolean,boolean)>
<com.android.systemui.shared.plugins.PluginInitializer: void onPluginManagerInit()>
<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: boolean isWithinSnapMenuThreshold()>
<com.android.systemui.statusbar.phone.NavigationBarFragment: void onConfigurationChanged(android.content.res.Configuration)>
<android.os.ParcelArrayPerfTest: void timeWriteByteArray()>
<com.android.server.RecoverySystemService: void <init>(android.content.Context)>
<com.android.server.accounts.AccountManagerService: java.util.Map getAccountsAndVisibilityForPackage(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.phone.PanelBar: android.os.Parcelable onSaveInstanceState()>
<com.android.settingslib.widget.AppEntityInfo: android.graphics.drawable.Drawable getIcon()>
<com.android.printservice.recommendation.util.NsdResolveQueue: void resolve(android.net.nsd.NsdManager,android.net.nsd.NsdServiceInfo,android.net.nsd.NsdManager.ResolveListener)>
<com.android.settingslib.suggestions.SuggestionControllerMixin.SuggestionControllerHost: void onSuggestionReady(java.util.List)>
<com.android.packageinstaller.InstallFailed.OutOfSpaceDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>
<com.android.server.accessibility.MotionEventInjector: void injectEvents(java.util.List,android.accessibilityservice.IAccessibilityServiceClient,int)>
<com.android.uiautomator.core.Tracer: void trace(java.lang.Object[])>
<com.android.server.locksettings.SyntheticPasswordCrypto: byte[] encrypt(byte[],byte[],byte[])>
<com.android.systemui.statusbar.notification.NotificationUtils: float interpolate(float,float,float)>
<com.android.systemui.tuner.TunerActivity: void onBackPressed()>
<com.android.server.soundtrigger.SoundTriggerDbHelper: void onCreate(android.database.sqlite.SQLiteDatabase)>
<com.android.systemui.classifier.brightline.TypeClassifier: boolean isFalseTouch()>
<com.android.uiautomator.core.UiCollection: com.android.uiautomator.core.UiObject getChildByText(com.android.uiautomator.core.UiSelector,java.lang.String)>
<com.android.systemui.classifier.AccelerationClassifier: void onTouchEvent(android.view.MotionEvent)>
<com.android.systemui.classifier.FalsingManagerImpl: void onCameraOn()>
<com.android.server.display.BrightnessMappingStrategy: boolean setBrightnessConfiguration(android.hardware.display.BrightnessConfiguration)>
<com.android.systemui.volume.SafetyWarningDialog: void onDismiss(android.content.DialogInterface)>
<com.android.server.notification.PreferencesHelper: boolean getIsAppImportanceLocked(java.lang.String,int)>
<android.text.PrecomputedTextPerfTest: void testCreate_Styled_NoHyphenation_WidthOnly()>
<com.android.systemui.biometrics.FingerprintDialogView: int getIconDescriptionResourceId()>
<com.android.systemui.DependencyProvider: android.hardware.SensorPrivacyManager provideSensorPrivacyManager(android.content.Context)>
<com.android.systemui.statusbar.phone.StatusBar: void loadDimens()>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.util.List getAlwaysOnVpnLockdownWhitelist(android.content.ComponentName)>
<com.android.systemui.shared.system.RecentsAnimationControllerCompat: void setSplitScreenMinimized(boolean)>
<com.android.settingslib.widget.LayoutPreference: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.recents.views.TaskStackView: void onStackScrollChanged(float,float,com.android.systemui.recents.utilities.AnimationProps)>
<com.android.server.testing.shadows.ShadowKeyValueBackupTask: java.util.List getPendingFullBackups()>
<com.android.packageinstaller.wear.WearPackageArgs: android.os.Bundle setStartId(android.os.Bundle,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean getAutoTimeRequired()>
<com.android.server.pm.permission.BasePermission: boolean isInstant()>
<com.android.server.pm.dex.DexManager: void <init>(android.content.Context,android.content.pm.IPackageManager,com.android.server.pm.PackageDexOptimizer,com.android.server.pm.Installer,java.lang.Object)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setDozing(boolean,boolean,android.graphics.PointF)>
<com.android.systemui.statusbar.policy.RemoteInputQuickSettingsDisabler: int adjustDisableFlags(int)>
<com.android.systemui.qs.QuickStatusBarHeader: void onAttachedToWindow()>
<com.android.systemui.statusbar.notification.NotificationEntryManager: java.lang.Iterable getPendingNotificationsIterator()>
<com.android.systemui.statusbar.policy.BatteryController: boolean isAodPowerSave()>
<com.android.server.pm.dex.PackageDexUsage.DexUseInfo: java.util.Set getLoadingPackages()>
<com.android.server.notification.NotificationComparator: boolean isImportantMessaging(com.android.server.notification.NotificationRecord)>
<com.android.systemui.statusbar.phone.StatusBarIconControllerImpl: void removeIcon(java.lang.String,int)>
<com.android.systemui.biometrics.BiometricDialogView: void onDialogAnimatedIn()>
<com.android.server.accessibility.AccessibilityManagerService: void notifyMagnificationChanged(int,android.graphics.Region,float,float,float)>
<com.android.systemui.statusbar.notification.row.FooterView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.EmptyShadeView: android.view.View findSecondaryView()>
<javax.obex.ClientOperation: void noBodyHeader()>
<com.android.systemui.recents.IRecentsSystemUserCallbacks: void setWaitingForTransitionStartEvent(boolean)>
<com.android.uiautomator.core.UiObject: boolean dragTo(int,int,int)>
<com.android.systemui.recents.views.TaskStackAnimationHelper: boolean startScrollToFocusedTaskAnimation(com.android.systemui.shared.recents.model.Task,boolean)>
<com.android.systemui.qs.QSDetail: void handleShowingDetail(com.android.systemui.plugins.qs.DetailAdapter,int,int,boolean)>
<com.android.server.slice.SliceProviderPermissions.SliceAuthority: void addPkg(com.android.server.slice.SlicePermissionManager.PkgUser)>
<com.android.settingslib.core.lifecycle.ObservableActivity: com.android.settingslib.core.lifecycle.Lifecycle getSettingsLifecycle()>
<com.android.commands.am.Instrument: void <init>(android.app.IActivityManager,android.content.pm.IPackageManager)>
<com.android.server.hdmi.SelectRequestBuffer.DeviceSelectRequest: void process()>
<com.android.preload.classdataretrieval.hprof.Hprof: void <init>(int)>
<com.android.server.notification.ConditionProviders.Callback: void onConditionChanged(android.net.Uri,android.service.notification.Condition)>
<com.android.server.pm.PackageManagerServiceUtils: java.lang.String realpath(java.io.File)>
<com.android.location.provider.LocationRequestUnbundled: boolean isLocationSettingsIgnored()>
<com.android.systemui.pip.phone.PipTouchHandler: void <init>(android.content.Context,android.app.IActivityManager,android.app.IActivityTaskManager,com.android.systemui.pip.phone.PipMenuActivityController,com.android.systemui.shared.system.InputConsumerController)>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb: com.android.server.locksettings.recoverablekeystore.WrappedKey getKey(int,java.lang.String)>
<com.android.server.appprediction.AppPredictionManagerService: void onStart()>
<com.android.keyguard.KeyguardAbsKeyInputView: boolean onKeyDown(int,android.view.KeyEvent)>
<com.android.server.location.RemoteListenerHelper: boolean hasPermission(android.content.Context,com.android.server.location.CallerIdentity)>
<com.android.systemui.tuner.TunerZenModePanel: void onDetachedFromWindow()>
<com.android.server.policy.PhoneWindowManager: boolean isUserSetupComplete()>
<com.android.systemui.recents.views.lowram.TaskStackLowRamLayoutAlgorithm: com.android.systemui.recents.views.TaskStackLayoutAlgorithm.VisibilityReport computeStackVisibilityReport(java.util.ArrayList)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void onViewAdded(android.view.View)>
<com.android.systemui.globalactions.GlobalActionsComponent: void handleShowShutdownUi(boolean,java.lang.String)>
<com.android.server.AppStateTracker.Listener: void onUidForeground(int,boolean)>
<com.android.systemui.qs.QSDetailItems: com.android.systemui.qs.QSDetailItems convertOrInflate(android.content.Context,android.view.View,android.view.ViewGroup)>
<com.android.printspooler.widget.PrintContentView.OptionsStateChangeListener: void onOptionsOpened()>
<com.android.systemui.recents.model.TaskStack: void setTasks(com.android.systemui.recents.model.TaskStack,boolean)>
<com.android.systemui.statusbar.phone.HeadsUpManagerPhone: boolean canRemoveImmediately(java.lang.String)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void preloadRecentApps()>
<com.android.settingslib.applications.ApplicationsState: boolean haveInstantApps()>
<com.android.systemui.stackdivider.Divider: void growRecents()>
<com.android.systemui.keyguard.KeyguardViewMediator: void setPulsing(boolean)>
<com.android.systemui.statusbar.notification.ProgressTransformState: com.android.systemui.statusbar.notification.ProgressTransformState obtain()>
<com.android.server.biometrics.BiometricServiceBase: void checkPermission(java.lang.String)>
<com.android.systemui.shared.system.BackgroundExecutor: java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object)>
<com.android.providers.settings.SettingsProvider: int getUserIdFromKey(int)>
<com.android.server.appop.AppOpsService: void offsetHistory(long)>
<com.android.systemui.shared.system.WindowManagerWrapper: void registerDockedStackListener(com.android.systemui.shared.system.DockedStackListenerCompat)>
<com.android.uiautomator.testrunner.UiAutomatorInstrumentationTestRunner: void onStart()>
<android.widget.LayoutPerfTest: void testLayoutPerf()>
<com.android.systemui.qs.external.TileServiceManager: int getBindPriority()>
<com.android.server.locksettings.LockSettingsService: boolean getBoolean(java.lang.String,boolean,int)>
<com.android.systemui.statusbar.notification.NotificationInterruptionStateProvider: void setUpWithPresenter(com.android.systemui.statusbar.NotificationPresenter,com.android.systemui.statusbar.policy.HeadsUpManager,com.android.systemui.statusbar.notification.NotificationInterruptionStateProvider.HeadsUpSuppressor)>
<com.android.server.devicepolicy.DeviceAdminServiceController: void stopServiceForOwner(int,java.lang.String)>
<com.android.photos.BitmapRegionTileSource.BitmapSource: android.graphics.Bitmap loadPreviewBitmap(android.graphics.BitmapFactory.Options)>
<com.android.systemui.statusbar.phone.DoubleTapHelper.DoubleTapLogListener: void onDoubleTapLog(boolean,float,float)>
<com.android.server.timezone.TimeZoneUpdateIdler: void unschedule(android.content.Context)>
<com.android.keyguard.clock.AnalogClockController: void setTextColor(int)>
<com.android.systemui.statusbar.notification.row.NotificationSnooze.NotificationSnoozeOption: int getMinutesToSnoozeFor()>
<com.android.server.timezone.PermissionHelper: boolean checkDumpPermission(java.lang.String,java.io.PrintWriter)>
<com.android.server.notification.RankingHelper: void sort(java.util.ArrayList)>
<com.android.server.content.SyncManagerConstants: int getMaxRetriesWithAppStandbyExemption()>
<com.android.server.usb.descriptors.UsbDescriptorParser: com.android.server.usb.descriptors.UsbInterfaceDescriptor getCurInterface()>
<javax.obex.ObexTransport: boolean isSrmSupported()>
<com.android.systemui.assist.ui.CircularCornerPathRenderer: android.graphics.Path getCornerPath(com.android.systemui.assist.ui.CircularCornerPathRenderer.Corner)>
<com.android.uiautomator.core.Configurator: long getKeyInjectionDelay()>
<com.android.server.textclassifier.TextClassificationManagerService.Lifecycle: void onUnlockUser(int)>
<com.android.settingslib.users.AppRestrictionsHelper: void setLeanback(boolean)>
<com.android.keyguard.KeyguardHostView: void setOnDismissAction(com.android.systemui.plugins.ActivityStarter.OnDismissAction,java.lang.Runnable)>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: void <init>(android.content.Context)>
<com.android.server.biometrics.fingerprint.FingerprintService: java.util.List getEnrolledTemplates(int)>
<com.android.server.notification.ManagedServices: boolean isPackageAllowed(java.lang.String,int)>
<com.android.systemui.statusbar.notification.stack.AnimationFilter: com.android.systemui.statusbar.notification.stack.AnimationFilter animateX()>
<com.android.systemui.settings.BrightnessController: void onChanged(com.android.systemui.settings.ToggleSlider,boolean,boolean,int,boolean)>
<com.android.statsd.loadtest.LoadtestActivity: void onItemSelected(android.widget.AdapterView,android.view.View,int,long)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetFramebufferAttachmentParameterivOES(int,int,int,int[],int)>
<android.media.MediaSession2: boolean isPlaybackActive()>
<com.android.server.content.SyncManagerConstants: int getKeyExemptionTempWhitelistDurationInSeconds()>
<android.net.netlink.StructNdMsg: boolean isNudStateValid(short)>
<com.android.systemui.statusbar.phone.KeyguardBouncer.BouncerExpansionCallback: void onFullyHidden()>
<com.android.server.usb.descriptors.Usb10ACOutputTerminal: byte getSourceID()>
<com.android.systemui.statusbar.phone.StatusBar: int computeStatusBarMode(int,int)>
<com.android.mtp.AppFusePerfTest: void testReadWriteFile()>
<com.android.systemui.statusbar.StatusBarIconView: boolean equalIcons(android.graphics.drawable.Icon,android.graphics.drawable.Icon)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void showPictureInPictureMenu()>
<com.android.settingslib.widget.CandidateInfo: java.lang.String getKey()>
<com.android.systemui.volume.SystemUIInterpolators.LogDecelerateInterpolator: float getInterpolation(float)>
<com.android.server.RescueParty: void onSettingsProviderPublished(android.content.Context)>
<com.android.server.location.CountryDetectorBase: void notifyListener(android.location.Country)>
<com.android.systemui.statusbar.KeyboardShortcutKeysLayout: void onMeasure(int,int)>
<com.android.systemui.statusbar.KeyguardIndicationController: void onUnlockMethodStateChanged()>
<com.android.server.pm.PackageManagerService: int checkSignatures(java.lang.String,java.lang.String)>
<android.widget.TextViewOnMeasurePerfTest: void testMeasure_Exactly()>
<com.android.server.pm.Installer: void rmPackageDir(java.lang.String)>
<com.android.systemui.statusbar.NotificationViewHierarchyManager: void <init>(android.content.Context,android.os.Handler,com.android.systemui.statusbar.NotificationLockscreenUserManager,com.android.systemui.statusbar.phone.NotificationGroupManager,com.android.systemui.statusbar.notification.VisualStabilityManager,com.android.systemui.plugins.statusbar.StatusBarStateController,com.android.systemui.statusbar.notification.NotificationEntryManager,dagger.Lazy,com.android.systemui.bubbles.BubbleData,com.android.systemui.statusbar.notification.DynamicPrivacyController)>
<com.android.systemui.recents.views.RecentsView: void onBusEvent(com.android.systemui.recents.events.ui.dragndrop.DragDropTargetChangedEvent)>
<com.android.server.notification.ZenModeExtractor: void setZenHelper(com.android.server.notification.ZenModeHelper)>
<com.android.systemui.statusbar.ScrimView: void setTint(int)>
<com.android.systemui.statusbar.phone.FloatingRotationButton: void setRotationButtonController(com.android.systemui.statusbar.phone.RotationButtonController)>
<com.android.server.pm.PackageManagerService: void removeOnPermissionsChangeListener(android.content.pm.IOnPermissionsChangeListener)>
<com.android.server.testing.shadows.ShadowEventLog.Entry: java.lang.String toString()>
<com.android.server.pm.ShortcutService: void <init>(android.content.Context)>
<android.net.ip.InterfaceController: boolean setIPv6AddrGenModeIfSupported(int)>
<com.android.uiautomator.core.UiScrollable: boolean scrollBackward(int)>
<com.android.settingslib.deviceinfo.StorageManagerVolumeProvider: java.util.List getVolumes()>
<com.android.server.autofill.AutofillManagerService: java.lang.String getServiceSettingsProperty()>
<com.android.systemui.qs.tiles.BatterySaverTile: void handleClick()>
<com.android.server.pm.PackageManagerService: boolean setBlockUninstallForUser(java.lang.String,boolean,int)>
<com.android.systemui.recents.views.FixedSizeFrameLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.localtransport.LocalTransport: java.lang.String currentDestinationString()>
<android.media.Session2CommandGroup: java.util.Set getCommands()>
<com.android.systemui.classifier.FalsingManagerImpl: boolean isUnlockingDisabled()>
<com.android.systemui.statusbar.notification.row.ExpandableView: void setTransformingInShelf(boolean)>
<com.android.systemui.plugins.VolumeDialogController.Callbacks: void onShowSilentHint()>
<com.android.systemui.DessertCaseDream: void onAttachedToWindow()>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: com.android.systemui.statusbar.notification.row.NotificationGuts getGuts()>
<com.android.server.usb.descriptors.UsbHIDDescriptor: byte getDescriptorType()>
<com.android.server.pm.PackageSetting: boolean areInstallPermissionsFixed()>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.ui.focus.DismissFocusedTaskViewEvent)>
<com.android.keyguard.KeyguardClockSwitch: void setFormat12Hour(java.lang.CharSequence)>
<com.android.systemui.shared.system.InputConsumerController: void setInputListener(com.android.systemui.shared.system.InputConsumerController.InputListener)>
<com.android.server.pm.dex.PackageDexUsage.PackageUseInfo: boolean isAnyCodePathUsedByOtherApps()>
<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void grantDefaultPermissionsToEnabledCarrierApps(java.lang.String[],int)>
<com.android.server.NativeDaemonEvent: java.io.FileDescriptor[] getFileDescriptors()>
<com.android.server.testing.shadows.FrameworkShadowLooper: void reset()>
<com.android.server.TelephonyRegistry: void notifyActiveDataSubIdChanged(int)>
<com.android.systemui.statusbar.phone.KeyguardBouncer: void onScreenTurnedOff()>
<com.android.server.accounts.AccountManagerService: android.accounts.Account[] getAccounts(int,java.lang.String)>
<com.android.systemui.statusbar.phone.ScrimController.Callback: void onFinished()>
<com.android.keyguard.KeyguardUpdateMonitor: int getNextSubIdForState(com.android.internal.telephony.IccCardConstants.State)>
<com.android.preload.DumpData: java.util.Map invertData()>
<com.android.systemui.statusbar.phone.UserAvatarView: void setAvatar(android.graphics.Bitmap)>
<com.android.systemui.statusbar.notification.row.NotificationBackgroundView: void setExpandAnimationParams(com.android.systemui.statusbar.notification.ActivityLaunchAnimator.ExpandAnimationParameters)>
<com.android.systemui.qs.tileimpl.QSTileImpl.ResourceIcon: java.lang.String toString()>
<com.android.server.hdmi.HdmiCecMessage: int getOpcode()>
<com.android.systemui.qs.tiles.DndTile: void handleUpdateState(com.android.systemui.plugins.qs.QSTile.BooleanState,java.lang.Object)>
<com.android.gallery3d.exif.ExifInterface: void writeExif(java.lang.String,java.lang.String)>
<com.android.server.notification.NotificationRecord: void <init>(android.content.Context,android.service.notification.StatusBarNotification,android.app.NotificationChannel)>
<com.android.systemui.statusbar.phone.RotationButton: void setOnClickListener(android.view.View.OnClickListener)>
<android.media.MediaPlayer2.TrackInfo: java.lang.String getLanguage()>
<com.android.photos.views.BlockingGLTextureView: boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture)>
<com.android.server.usb.descriptors.ByteStream: void resetReadCount()>
<com.android.systemui.volume.SegmentedButtons: void addButton(int,int,java.lang.Object)>
<com.android.systemui.statusbar.notification.row.NotificationGutsManager: void setExposedGuts(com.android.systemui.statusbar.notification.row.NotificationGuts)>
<com.android.systemui.qs.AutoAddTracker: void setTileRemoved(java.lang.String)>
<com.android.packageinstaller.InstallInstalling: void onBackPressed()>
<javax.microedition.khronos.opengles.GL10: void glTexEnvxv(int,int,java.nio.IntBuffer)>
<com.android.server.location.GeofenceManager: void dump(java.io.PrintWriter)>
<com.android.systemui.ImageWallpaper: android.service.wallpaper.WallpaperService.Engine onCreateEngine()>
<com.android.systemui.statusbar.AlphaOptimizedView: void <init>(android.content.Context)>
<com.android.externalstorage.ExternalStorageProvider: android.provider.DocumentsContract.Path findDocumentPath(java.lang.String,java.lang.String)>
<com.android.systemui.qs.touch.SwipeDetector: long calculateDuration(float,float)>
<com.android.keyguard.KeyguardStatusView: void onAttachedToWindow()>
<android.text.BoringLayoutCreateDrawPerfTest: java.util.Collection cases()>
<com.android.systemui.qs.tiles.IntentTile: int getMetricsCategory()>
<com.android.systemui.statusbar.phone.StatusBarWindowController: void setForceStatusBarVisible(boolean)>
<com.android.keyguard.clock.ClockLayout: void onLayout(boolean,int,int,int,int)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetTexGeniv(int,int,java.nio.IntBuffer)>
<com.android.keyguard.KeyguardSliceView.Row: void setDarkAmount(float)>
<com.android.wallpapercropper.WallpaperCropActivity.BitmapCropTask: boolean cropBitmap()>
<lockedregioncodeinjection.LockTargetState: java.util.List getTargets()>
<com.android.systemui.statusbar.policy.ZenModeController.Callback: void onZenChanged(int)>
<com.android.server.pm.PackageManagerService: boolean getApplicationHiddenSettingAsUser(java.lang.String,int)>
<com.android.server.wallpaper.WallpaperManagerService: void setWallpaperComponentChecked(android.content.ComponentName,java.lang.String,int)>
<com.android.keyguard.KeyguardPatternView: void onFinishInflate()>
<com.android.systemui.DependencyProvider: com.android.systemui.statusbar.NavigationBarController provideNavigationBarController(android.content.Context,android.os.Handler)>
<com.android.dynsystem.DynamicSystemInstallationService: int onStartCommand(android.content.Intent,int,int)>
<javax.obex.ClientOperation: void setGetFinalFlag(boolean)>
<com.android.gallery3d.exif.ExifTag: java.lang.String getValueAsString(java.lang.String)>
<com.android.systemui.tuner.ShortcutParser.Shortcut: java.lang.String toString()>
<com.android.settingslib.bluetooth.LocalBluetoothProfileManager: void removeServiceListener(com.android.settingslib.bluetooth.LocalBluetoothProfileManager.ServiceListener)>
<android.net.util.SharedLog: java.lang.String getTag()>
<com.android.server.locksettings.LockSettingsService: void <init>(android.content.Context)>
<com.android.settingslib.wifi.AccessPoint: boolean update(android.net.wifi.WifiConfiguration,android.net.wifi.WifiInfo,android.net.NetworkInfo)>
<com.android.server.usb.descriptors.Usb10ACInputTerminal: byte getNrChannels()>
<com.android.settingslib.wifi.TestAccessPointBuilder: com.android.settingslib.wifi.TestAccessPointBuilder setSecurity(int)>
<com.android.uiautomator.core.UiDevice: java.lang.String getProductName()>
<com.android.server.display.BrightnessMappingStrategy: android.util.Pair getAdjustedCurve(float[],float[],float,float,float,float)>
<com.android.systemui.statusbar.phone.StatusBarNotificationPresenter: void onUiModeChanged()>
<com.android.systemui.statusbar.phone.StatusBar: void onHeadsUpPinnedModeChanged(boolean)>
<com.android.server.pm.PackageManagerService: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<com.android.settingslib.applications.AppUtils: java.lang.CharSequence getLaunchByDefaultSummary(com.android.settingslib.applications.ApplicationsState.AppEntry,android.hardware.usb.IUsbManager,android.content.pm.PackageManager,android.content.Context)>
<com.android.systemui.statusbar.AmbientPulseManager: void addListener(com.android.systemui.statusbar.AmbientPulseManager.OnAmbientChangedListener)>
<com.android.server.uri.UriGrantsManagerInternal: int checkGrantUriPermission(int,java.lang.String,android.net.Uri,int,int)>
<com.android.server.biometrics.BiometricServiceBase.AuthenticationClientImpl: boolean isFingerprint()>
<com.android.server.DeviceIdleController: java.lang.String[] getSystemPowerWhitelistInternal()>
<com.android.systemui.statusbar.notification.row.NotificationContentView: com.android.systemui.statusbar.policy.RemoteInputView getExpandedRemoteInput()>
<com.android.systemui.analytics.SensorLoggerSession: long getStartTimestampMillis()>
<com.android.server.devicepolicy.DevicePolicyManagerService.RestrictionsListener: void onUserRestrictionsChanged(int,android.os.Bundle,android.os.Bundle)>
<com.android.systemui.statusbar.phone.StatusBar: void onColorsChanged(com.android.internal.colorextraction.ColorExtractor,int)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetTexGenfv(int,int,java.nio.FloatBuffer)>
<android.perftests.utils.SettingsStateKeeperRule: void <init>(android.content.Context,java.lang.String)>
<com.android.systemui.statusbar.phone.NotificationIconContainer: com.android.systemui.statusbar.phone.NotificationIconContainer.IconState getIconState(com.android.systemui.statusbar.StatusBarIconView)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean isExpandable()>
<com.android.systemui.pip.tv.PipMenuActivity: void onPipEntered()>
<com.android.systemui.statusbar.notification.row.NotificationSnooze: void setSnoozeOptions(java.util.List)>
<com.android.server.policy.BurnInProtectionHelper: void dump(java.lang.String,java.io.PrintWriter)>
<com.android.systemui.bubbles.BadgedImageView: void setDotColor(int)>
<com.android.systemui.statusbar.phone.PanelView: boolean hasConflictingGestures()>
<com.android.systemui.pip.tv.PipManager: com.android.systemui.pip.tv.PipManager getInstance()>
<com.android.server.tv.TvRemoteProviderProxy.ProviderMethods: void clearInputBridge(com.android.server.tv.TvRemoteProviderProxy,android.os.IBinder)>
<com.android.settingslib.utils.ThreadUtils: java.util.concurrent.Future postOnBackgroundThread(java.lang.Runnable)>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: void getStackTransform(float,float,float,int,com.android.systemui.recents.views.TaskViewTransform,com.android.systemui.recents.views.TaskViewTransform,boolean,boolean)>
<lockedregioncodeinjection.LockTarget: java.lang.String getPre()>
<com.android.settingslib.bluetooth.CachedBluetoothDeviceManager: void updateHearingAidsDevices()>
<com.android.systemui.statusbar.NotificationLockscreenUserManagerImpl: boolean shouldAllowLockscreenRemoteInput()>
<com.android.systemui.biometrics.BiometricDialogView: boolean isAnimatingAway()>
<com.android.printservice.recommendation.util.Preconditions: int[] checkArrayElementsInRange(int[],int,int,java.lang.String)>
<com.android.systemui.statusbar.car.CarStatusBar: void showKeyguard()>
<com.android.settingslib.location.InjectedSetting: boolean equals(java.lang.Object)>
<com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer: float getGroupExpandFraction()>
<com.android.systemui.shared.plugins.PluginInstanceManager: boolean dependsOn(com.android.systemui.plugins.Plugin,java.lang.Class)>
<com.android.media.tv.remoteprovider.TvRemoteProvider: void sendKeyUp(android.os.IBinder,int)>
<com.android.settingslib.core.lifecycle.events.OnCreate: void onCreate(android.os.Bundle)>
<com.android.systemui.statusbar.phone.SystemUIDialog: void setPositiveButton(int,android.content.DialogInterface.OnClickListener)>
<com.android.server.biometrics.BiometricServiceBase: boolean hasReachedEnrollmentLimit(int)>
<com.android.systemui.statusbar.phone.MultiUserSwitch: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void updateFooterView(boolean,boolean)>
<com.android.systemui.DessertCaseView: void stop()>
<com.android.photos.BitmapRegionTileSource.BitmapSource: boolean loadInBackground()>
<com.android.keyguard.KeyguardUpdateMonitor: boolean isUnlockingWithBiometricsPossible(int)>
<com.android.server.accessibility.FingerprintGestureDispatcher.FingerprintGestureClient: boolean isCapturingFingerprintGestures()>
<com.android.server.policy.WindowManagerPolicy: void setNavBarVirtualKeyHapticFeedbackEnabledLw(boolean)>
<com.android.server.notification.ManagedServices.UserProfiles: boolean isCurrentProfile(int)>
<com.android.settingslib.bluetooth.HearingAidProfile: java.util.List getActiveDevices()>
<com.android.systemui.qs.customize.CustomizeTileView: void <init>(android.content.Context,com.android.systemui.plugins.qs.QSIconView)>
<com.android.systemui.classifier.brightline.TimeLimitedMotionEventBuffer: android.view.MotionEvent get(int)>
<com.android.server.notification.ZenLog: void traceUpdateZenMode(int,int)>
<com.android.systemui.Dependency.DependencyKey: void <init>(java.lang.String)>
<com.android.systemui.qs.tileimpl.QSTileImpl: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.settingslib.animation.AppearAnimationUtils: void <init>(android.content.Context,long,float,float,android.view.animation.Interpolator)>
<com.android.systemui.statusbar.NotificationShelf: boolean hasOverlappingRendering()>
<android.media.MediaPlayer2: void releaseDrm(android.media.DataSourceDesc)>
<com.android.server.biometrics.Constants: java.lang.String tagHalDied()>
<com.android.server.pm.permission.BasePermission: boolean isImmutablyRestricted()>
<com.android.server.pm.IntentFilterVerificationState: java.lang.String getPackageName()>
<com.android.server.inputmethod.MultiClientInputMethodManagerService.Lifecycle: void onUnlockUser(int)>
<com.android.systemui.plugins.qs.DetailAdapter: boolean getToggleEnabled()>
<com.android.systemui.stackdivider.DividerView: void setMinimizedDockStack(boolean,long,boolean)>
<com.android.systemui.recents.RecentsOnboarding: void <init>(android.content.Context,com.android.systemui.recents.OverviewProxyService)>
<com.android.server.rollback.RollbackPackageHealthObserver: int onHealthCheckFailed(android.content.pm.VersionedPackage)>
<com.android.server.TelephonyRegistry: void notifyCarrierNetworkChange(boolean)>
<com.android.systemui.classifier.Point: void <init>(float,float)>
<com.android.systemui.bubbles.animation.PhysicsAnimationLayout: java.lang.String getReadablePropertyName(androidx.dynamicanimation.animation.DynamicAnimation.ViewProperty)>
<android.view.autofill.AbstractAutofillPerfTestCase: void enableService()>
<com.android.systemui.assist.AssistManager.UiController: void onInvocationProgress(int,float)>
<android.util.ArraySetPerfTest: void testValueAt_OutOfBounds_Negative()>
<com.android.systemui.settings.ToggleSliderView: void setMax(int)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: boolean isTrusted()>
<com.android.systemui.pip.phone.PipAccessibilityInteractionConnection: void findFocus(long,int,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)>
<com.android.systemui.statusbar.notification.row.NotificationContentInflater: void freeNotificationView(int)>
<com.android.server.statusbar.StatusBarManagerInternal: void toggleKeyboardShortcutsMenu(int)>
<com.android.systemui.statusbar.phone.NavigationBarFragment: void restoreSystemUiVisibilityState()>
<com.android.server.TelephonyRegistry: void notifyPhysicalChannelConfigurationForSubscriber(int,java.util.List)>
<com.android.server.policy.WindowManagerPolicy: int getWindowLayerFromTypeLw(int)>
<com.android.server.DynamicSystemService: boolean startInstallation(long,long)>
<com.android.systemui.statusbar.notification.ActivityLaunchAnimator.Callback: void onExpandAnimationFinished(boolean)>
<com.android.server.slice.SliceClientPermissions.SliceAuthority: java.lang.String getAuthority()>
<com.android.systemui.volume.VolumeDialogImpl: void dump(java.io.PrintWriter)>
<com.google.android.startop.iorap.RequestId: java.lang.String toString()>
<android.net.netlink.StructNdaCacheInfo: java.lang.String toString()>
<android.net.util.InterfaceParams: void <init>(java.lang.String,int,android.net.MacAddress,int)>
<com.android.server.biometrics.BiometricUserState: java.util.List getBiometrics()>
<android.perftests.utils.SettingsHelper: void syncSet(android.content.Context,java.lang.String,java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void closeQsDetail()>
<com.android.systemui.statusbar.notification.TransformState: void setTransformationStartY(float)>
<com.android.server.usb.descriptors.Usb10ASFormatI: void <init>(int,byte,byte,byte,int)>
<com.android.systemui.qs.tiles.DndTile: void setCombinedIcon(android.content.Context,boolean)>
<com.android.server.NativeDaemonEvent: java.lang.String toString()>
<com.android.server.notification.SystemConditionProviderService: android.content.ComponentName getComponent()>
<com.android.server.accessibility.AccessibilityManagerService.SecurityPolicy: android.view.accessibility.AccessibilityWindowInfo findA11yWindowInfoById(int)>
<com.android.systemui.plugins.qs.QS: void notifyCustomizeChanged()>
<javax.microedition.khronos.opengles.GL10: void glClearColor(float,float,float,float)>
<javax.microedition.khronos.opengles.GL10: void glDeleteTextures(int,java.nio.IntBuffer)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector text(java.lang.String)>
<com.android.server.AppStateTracker: boolean isUidInForeground(int)>
<com.android.systemui.statusbar.phone.DozeScrimController: void onDozingChanged(boolean)>
<com.android.server.hdmi.HdmiCecController.NativeWrapper: int nativeGetVersion(long)>
<com.android.systemui.qs.tiles.UiModeNightTile: void handleUpdateState(com.android.systemui.plugins.qs.QSTile.BooleanState,java.lang.Object)>
<com.android.server.pm.permission.PermissionsState: java.util.List getInstallPermissionStates()>
<android.media.Session2Link: boolean equals(java.lang.Object)>
<com.android.server.pm.OtaDexoptService: void prepare()>
<com.android.systemui.assist.ui.InvocationLightsView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.server.content.SyncLogger: boolean enabled()>
<com.android.server.locksettings.recoverablekeystore.KeyStoreProxyImpl: java.security.Key getKey(java.lang.String,char[])>
<com.android.server.notification.ZenModeHelper: void requestFromListener(android.content.ComponentName,int)>
<com.android.server.infra.AbstractPerUserSystemService: boolean isDebug()>
<com.android.location.provider.ActivityRecognitionEvent: java.lang.String getActivity()>
<com.android.settingslib.volume.MediaSessions: void <init>(android.content.Context,android.os.Looper,com.android.settingslib.volume.MediaSessions.Callbacks)>
<com.android.server.locksettings.recoverablekeystore.RecoverableKeyStoreManager: void initRecoveryServiceWithSigFile(java.lang.String,byte[],byte[])>
<com.android.settingslib.widget.LayoutPreference: void onBindViewHolder(androidx.preference.PreferenceViewHolder)>
<com.android.server.display.DisplayModeDirector: void <init>(android.content.Context,android.os.Handler)>
<com.android.systemui.qs.QSTileHost: com.android.systemui.plugins.qs.QSTileView createTileView(com.android.systemui.plugins.qs.QSTile,boolean)>
<com.android.systemui.recents.views.lowram.TaskStackLowRamLayoutAlgorithm: float getClosestTaskP(float,int,int)>
<com.android.server.policy.WindowManagerPolicy.WindowManagerFuncs: void registerPointerEventListener(android.view.WindowManagerPolicyConstants.PointerEventListener,int)>
<android.media.MediaPlayer2: java.lang.Object deselectTrack(android.media.DataSourceDesc,android.media.MediaPlayer2.TrackInfo)>
<com.android.systemui.statusbar.notification.row.NotificationSnooze: boolean performAccessibilityActionInternal(int,android.os.Bundle)>
<com.android.server.NetworkManagementService: void addLegacyRouteForNetId(int,android.net.RouteInfo,int)>
<com.android.photos.views.TiledImageRenderer: void freeTextures()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean setTime(android.content.ComponentName,long)>
<com.android.systemui.shared.system.TaskStackChangeListeners: void onActivityDismissingDockedStack()>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationCustomViewWrapper: boolean shouldClipToRounding(boolean,boolean)>
<com.android.systemui.shared.system.QuickStepContract: int getQuickStepDragSlopPx()>
<com.android.server.pm.PackageManagerService: com.android.server.pm.CompilerStats.PackageStats getOrCreateCompilerPackageStats(java.lang.String)>
<com.android.future.usb.UsbManager: void requestPermission(com.android.future.usb.UsbAccessory,android.app.PendingIntent)>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.android.systemui.statusbar.policy.ExtensionController.Extension: java.lang.Object reload()>
<com.android.server.audio.AudioService: boolean isHdmiSystemAudioSupported()>
<com.android.systemui.statusbar.phone.StatusBarSignalPolicy: void setEthernetIndicators(com.android.systemui.statusbar.policy.NetworkController.IconState)>
<com.android.server.location.ComprehensiveCountryDetector: void <init>(android.content.Context)>
<com.android.server.slice.SliceManagerService: boolean hasSliceAccess(java.lang.String)>
<com.android.systemui.statusbar.phone.PanelBar: boolean isExpanded()>
<com.android.server.display.VirtualDisplayAdapter: void <init>(com.android.server.display.DisplayManagerService.SyncRoot,android.content.Context,android.os.Handler,com.android.server.display.RampAnimator.Listener)>
<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: void onSnapClosed()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean onKeyDown(int,android.view.KeyEvent)>
<com.android.gallery3d.exif.ExifInterface: com.android.gallery3d.exif.ExifTag buildUninitializedTag(int)>
<com.android.systemui.statusbar.phone.NavigationBarEdgePanel: void onConfigurationChanged(android.content.res.Configuration)>
<android.perftests.utils.Stats: long getMax()>
<com.android.location.provider.ProviderRequestUnbundled: void <init>(com.android.internal.location.ProviderRequest)>
<com.android.settingslib.widget.CandidateInfo: java.lang.CharSequence loadLabel()>
<com.android.packageinstaller.PackageInstallerActivity.ExternalSourcesBlockedDialog: android.app.Dialog createDialog(java.lang.CharSequence)>
<com.android.systemui.shared.system.PinnedStackListenerForwarder: void onImeVisibilityChanged(boolean,int)>
<com.android.systemui.plugins.FalsingManager: void onNotificationDismissed()>
<com.android.printspooler.renderer.IPdfEditor: int openDocument(android.os.ParcelFileDescriptor)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void onAttachedToWindow()>
<com.android.packageinstaller.UninstallUninstalling: void onResult(int,int,java.lang.String)>
<com.android.server.usb.UsbService.Lifecycle: void onUnlockUser(int)>
<com.android.server.biometrics.face.FaceUtils: void removeBiometricForUser(android.content.Context,int,int)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: int getIntrinsicHeight()>
<android.os.SomeService: void onDestroy()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void removeChildNotification(com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<com.android.systemui.pip.phone.PipMenuActivityController: void dump(java.io.PrintWriter,java.lang.String)>
<com.android.systemui.statusbar.AlphaOptimizedFrameLayout: void <init>(android.content.Context)>
<com.android.systemui.statusbar.policy.HotspotControllerImpl: boolean isHotspotSupported()>
<com.android.systemui.recents.events.EventBus: java.lang.String dumpInternal(java.lang.String)>
<com.android.server.audio.AudioService: int setFocusPropertiesForPolicy(int,android.media.audiopolicy.IAudioPolicyCallback)>
<com.android.preload.classdataretrieval.jdwp.JDWPClassDataRetriever: void <init>(com.android.ddmlib.Client)>
<android.net.util.VersionedBroadcastListener: void <init>(java.lang.String,android.content.Context,android.os.Handler,android.content.IntentFilter,java.util.function.Consumer)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: int getMinExpansionHeight()>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void setHeaderVisibleAmount(float)>
<com.android.systemui.statusbar.policy.SmartReplyConstants: boolean isEnabled()>
<com.android.systemui.statusbar.policy.OnHeadsUpChangedListener: void onHeadsUpPinnedModeChanged(boolean)>
<com.android.systemui.analytics.DataCollector: void onNotificatonStartDismissing()>
<com.android.wallpapercropper.CropView: void moveToLeft()>
<android.text.PrecomputedTextPerfTest: void testCreate_NoStyled_Hyphenation_WidthOnly()>
<com.android.server.tv.TvInputHardwareManager.Listener: void onHdmiDeviceUpdated(java.lang.String,android.hardware.hdmi.HdmiDeviceInfo)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: boolean shouldSuppressFullScreenIntent()>
<com.android.printspooler.widget.PrintContentView: void requestDisallowInterceptTouchEvent(boolean)>
<com.android.server.input.InputManagerService: void setCurrentKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,java.lang.String)>
<com.android.server.accessibility.KeyboardInterceptor: void <init>(com.android.server.accessibility.AccessibilityManagerService,com.android.server.policy.WindowManagerPolicy)>
<com.android.systemui.qs.QSScrollLayout: void dispatchDraw(android.graphics.Canvas)>
<javax.obex.PrivateInputStream: int read()>
<com.android.settingslib.wifi.AccessPoint: java.lang.String getCarrierName()>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void requestSelectLayout(boolean)>
<com.android.server.webkit.WebViewUpdateServiceImpl: void <init>(android.content.Context,com.android.server.webkit.SystemInterface)>
<com.android.server.VibratorService: void cancelVibrate(android.os.IBinder)>
<com.android.server.notification.ManagedServices: java.util.List getAllowedPackages(int)>
<com.android.systemui.statusbar.StatusBarStateControllerImpl: boolean fromShadeLocked()>
<com.android.server.usb.UsbService: void onUnlockUser(int)>
<com.android.server.BrickReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.android.server.notification.EventConditionProvider: void onSubscribe(android.net.Uri)>
<com.android.systemui.statusbar.notification.AboveShelfObserver: void setListener(com.android.systemui.statusbar.notification.AboveShelfObserver.HasViewAboveShelfChangedListener)>
<com.android.server.utils.ManagedApplicationService.LogFormattable: java.lang.String toLogString(java.text.SimpleDateFormat)>
<com.android.server.pm.PackageManagerService: int movePackage(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onUpdateRowStates()>
<com.android.settingslib.suggestions.SuggestionController: void dismissSuggestions(android.service.settings.suggestions.Suggestion)>
<android.processor.unsupportedappusage.SignatureBuilder: void <init>(javax.annotation.processing.Messager)>
<com.android.settingslib.notification.ZenDurationDialog: android.view.View getContentView()>
<com.android.server.webkit.SystemImpl: com.android.server.webkit.SystemImpl getInstance()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setHeadsUpAnimatingAway(boolean)>
<com.android.systemui.globalactions.ListGridLayout: int getRowCount()>
<com.android.server.notification.ManagedServices: com.android.server.notification.ManagedServices.ManagedServiceInfo checkServiceTokenLocked(android.os.IInterface)>
<com.android.server.hdmi.HdmiCecLocalDevicePlayback: void dump(com.android.internal.util.IndentingPrintWriter)>
<com.android.systemui.qs.tiles.UiModeNightTile: void onPowerSaveChanged(boolean)>
<com.android.packageinstaller.wear.WearPackageArgs: int getStartId(android.os.Bundle)>
<com.android.server.content.ContentService: void setMasterSyncAutomatically(boolean)>
<com.android.systemui.power.PowerUI.WarningsUI: void showInvalidChargerWarning()>
<com.android.keyguard.KeyguardSliceView.Row: void <init>(android.content.Context)>
<com.android.keyguard.clock.ImageClock: void onAttachedToWindow()>
<com.android.systemui.shared.recents.model.Task.TaskKey: java.lang.String toString()>
<com.android.gallery3d.exif.ExifInterface: android.graphics.Bitmap getThumbnailBitmap()>
<com.android.server.ConnectivityService: com.android.server.connectivity.IpConnectivityMetrics.Logger metricsLogger()>
<com.android.server.NetworkScoreService.ScoringServiceConnection: java.lang.String getPackageName()>
<android.app.PendingIntentPerfTest: void setUp()>
<com.android.systemui.analytics.DataCollector: void onSucccessfulUnlock()>
<com.android.systemui.assist.AssistOrbView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void onAttachedToWindow()>
<com.android.server.notification.RankingReconsideration: void <init>(java.lang.String,long)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean hasDeviceOwner()>
<com.android.systemui.statusbar.policy.Clock: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.qs.external.QSTileServiceWrapper: void <init>(android.service.quicksettings.IQSTileService)>
<com.android.settingslib.search.IndexableProcessor: boolean process(java.util.Set,javax.annotation.processing.RoundEnvironment)>
<com.android.systemui.classifier.brightline.BrightLineFalsingManager: void dump(java.io.PrintWriter)>
<com.android.server.content.SyncStorageEngine: void setOnAuthorityRemovedListener(com.android.server.content.SyncStorageEngine.OnAuthorityRemovedListener)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void onSystemReady()>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: boolean shouldHideBackground()>
<com.android.systemui.statusbar.car.CarFacetButton: java.lang.String[] getComponentName()>
<com.android.server.statusbar.StatusBarManagerService: void clearNotificationEffects()>
<com.android.server.usb.descriptors.Usb20ASFormatIIEx: void <init>(int,byte,byte,byte,byte)>
<com.android.server.inputmethod.InputMethodManagerService: void setAdditionalInputMethodSubtypes(java.lang.String,android.view.inputmethod.InputMethodSubtype[])>
<com.android.server.TelephonyRegistry: void notifyDataConnectionFailedForSubscriber(int,int,java.lang.String)>
<com.android.systemui.recents.views.TaskView: void setDimAlphaWithoutHeader(float)>
<android.media.MediaController2.ControllerCallback: void onConnected(android.media.MediaController2,android.media.Session2CommandGroup)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: boolean hasLockscreenWallpaper()>
<com.android.settingslib.wifi.AccessPoint: java.lang.String getConfigName()>
<com.android.systemui.HardwareBgDrawable: void draw(android.graphics.Canvas)>
<com.android.mtp.MtpDocumentsProvider: void deleteDocument(java.lang.String)>
<com.android.printspooler.util.PageRangeUtils: int getNormalizedPageCount(android.print.PageRange[],int)>
<com.android.providers.settings.SettingsProvider: void dumpInternal(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.statusbar.notification.ImageTransformState: boolean sameAs(com.android.systemui.statusbar.notification.TransformState)>
<com.android.server.pm.InstructionSets: java.lang.String[] getAppDexInstructionSets(com.android.server.pm.PackageSetting)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGenRenderbuffersOES(int,java.nio.IntBuffer)>
<com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer: void setCurrentBottomRoundness(float)>
<com.android.systemui.recents.views.grid.GridTaskViewThumbnail: void <init>(android.content.Context)>
<com.android.keyguard.KeyguardPasswordView: boolean needsInput()>
<com.android.systemui.qs.QSFragment: boolean isCustomizing()>
<com.android.systemui.qs.QuickStatusBarHeader: void setListening(boolean)>
<com.android.server.pm.dex.PackageDexUsage.DexUseInfo: java.util.Set getLoaderIsas()>
<com.android.server.uri.NeededUriGrants: void writeToProto(android.util.proto.ProtoOutputStream,long)>
<com.android.systemui.plugins.qs.QSTile: void destroy()>
<com.android.server.accessibility.GlobalActionPerformer: void <init>(android.content.Context,com.android.server.wm.WindowManagerInternal)>
<com.android.server.content.SyncStorageEngine: boolean isClockValid()>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: void onServiceDisconnected()>
<com.android.server.NetworkScoreService: java.util.List getAllValidScorers()>
<javax.microedition.khronos.opengles.GL10: void glCullFace(int)>
<com.android.packageinstaller.InstallInstalling: void onStart()>
<android.media.Controller2Link: void notifyDisconnected(int)>
<com.android.server.soundtrigger.SoundTriggerDbHelper: boolean deleteGenericSoundModel(java.util.UUID)>
<com.android.server.policy.WindowManagerPolicy: com.android.server.policy.WindowManagerPolicy.StartingSurface addSplashScreen(android.os.IBinder,java.lang.String,int,android.content.res.CompatibilityInfo,java.lang.CharSequence,int,int,int,int,android.content.res.Configuration,int)>
<com.android.server.input.InputManagerService.WindowManagerCallbacks: long notifyANR(android.os.IBinder,java.lang.String)>
<com.android.server.role.RoleUserState.Callback: void onRoleHoldersChanged(java.lang.String,int,java.lang.String,java.lang.String)>
<com.android.server.policy.WindowManagerPolicy: void setSwitchingUser(boolean)>
<com.android.server.notification.ZenModeHelper: java.lang.String toString()>
<com.android.systemui.statusbar.NotificationLockscreenUserManager: boolean shouldShowOnKeyguard(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.systemui.qs.PagedTileLayout: boolean updateResources()>
<com.android.server.usb.UsbAlsaDevice: boolean hasInput()>
<com.android.server.accounts.AccountManagerService: void removeAccountAsUser(android.accounts.IAccountManagerResponse,android.accounts.Account,boolean,int)>
<com.android.systemui.ScreenDecorations.DisplayCutoutView: void onDraw(android.graphics.Canvas)>
<com.android.server.NsdService.DaemonConnectionSupplier: com.android.server.NsdService.DaemonConnection get(com.android.server.NsdService.NativeCallbackReceiver)>
<android.media.MediaPlayer2.DrmPreparationInfo: byte[] getKeySetId()>
<com.android.server.location.GnssMeasurementsProviderTest: void register_nativeStarted()>
<com.android.systemui.SystemUI: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.server.policy.WindowManagerPolicy: void exitKeyguardSecurely(com.android.server.policy.WindowManagerPolicy.OnKeyguardExitResult)>
<com.android.server.security.VerityUtils.SetupResult: boolean isFailed()>
<com.android.systemui.statusbar.phone.DozeParameters: void onTuningChanged(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.phone.StatusBar: boolean isOccluded()>
<com.android.systemui.statusbar.notification.ActivityLaunchAnimator.ExpandAnimationParameters: int getTop()>
<com.android.systemui.tuner.SelectablePreference: java.lang.String toString()>
<com.android.server.MmsServiceBroker: void systemRunning()>
<com.android.systemui.statusbar.phone.StatusBar: int getWakefulnessState()>
<com.android.settingslib.bluetooth.A2dpProfile: java.lang.String toString()>
<com.android.systemui.statusbar.notification.stack.StackScrollAlgorithm: void setIsExpanded(boolean)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: int getPositionOfChild(com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<javax.microedition.khronos.opengles.GL11Ext: void glLoadPaletteFromModelViewMatrixOES()>
<com.android.systemui.ForegroundServiceController: android.util.ArraySet getAppOps(int,java.lang.String)>
<com.android.systemui.classifier.FalsingManagerFactory: com.android.systemui.plugins.FalsingManager getInstance(android.content.Context)>
<android.net.ip.IpClientManager: boolean stop()>
<com.android.systemui.qs.SecureSetting: void <init>(android.content.Context,android.os.Handler,java.lang.String)>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverySessionStorage.Entry: void <init>(java.lang.String,byte[],byte[],byte[])>
<com.android.systemui.plugins.VolumeDialogController: void getCaptionsComponentState(boolean)>
<com.android.gallery3d.exif.ExifInterface: com.android.gallery3d.exif.ExifTag getTag(int)>
<com.android.server.media.MediaRouterService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.perftests.utils.StateKeeperRule: org.junit.runners.model.Statement apply(org.junit.runners.model.Statement,org.junit.runner.Description)>
<com.android.systemui.HardwareUiLayout: void onMeasure(int,int)>
<com.android.server.voiceinteraction.VoiceInteractionManagerService: void onStartUser(int)>
<com.android.settingslib.Utils: boolean isInService(android.telephony.ServiceState)>
<com.android.server.display.BrightnessIdleJob: boolean onStopJob(android.app.job.JobParameters)>
<com.android.server.biometrics.face.FaceService: java.lang.String getManageBiometricPermission()>
<com.android.server.wallpaper.WallpaperManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.recents.views.TaskView: void onBusEvent(com.android.systemui.recents.events.ui.dragndrop.DragEndCancelledEvent)>
<com.android.server.devicepolicy.CertificateMonitor: void <init>(com.android.server.devicepolicy.DevicePolicyManagerService,com.android.server.devicepolicy.DevicePolicyManagerService.Injector,android.os.Handler)>
<com.android.systemui.statusbar.policy.BluetoothControllerImpl: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.statusbar.notification.row.NotificationContentView: android.view.View getExpandedChild()>
<android.net.util.NetdService: android.net.INetd get(long)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: android.view.View getHeadsUpChild()>
<com.android.systemui.stackdivider.ForcedResizableInfoActivity: boolean onKeyDown(int,android.view.KeyEvent)>
<com.android.server.biometrics.BiometricServiceBase: void loadAuthenticatorIds()>
<com.android.systemui.statusbar.phone.StatusBar: void addPostCollapseAction(java.lang.Runnable)>
<com.android.server.SystemService: void onUnlockUser(int)>
<com.android.systemui.statusbar.car.hvac.TemperatureTextView: int getPropertyId()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isAdminActive(android.content.ComponentName,int)>
<com.android.systemui.statusbar.phone.PhoneStatusBarPolicy: void onBluetoothDevicesChanged()>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void onDreamingStarted()>
<com.android.server.policy.keyguard.KeyguardStateMonitor: void <init>(android.content.Context,com.android.internal.policy.IKeyguardService,com.android.server.policy.keyguard.KeyguardStateMonitor.StateCallback)>
<com.android.systemui.statusbar.phone.NavigationBarView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.android.gallery3d.common.BitmapUtils: int computeSampleSize(float)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetTexGenxv(int,int,int[],int)>
<com.android.systemui.globalactions.GlobalActionsDialog.Action: boolean showDuringKeyguard()>
<com.android.server.slice.SliceClientPermissions.SliceAuthority: void <init>(java.lang.String,com.android.server.slice.SlicePermissionManager.PkgUser,com.android.server.slice.DirtyTracker)>
<com.android.server.accessibility.MagnificationController: boolean magnificationRegionContains(int,float,float)>
<com.android.systemui.globalactions.GlobalActionsDialog.Action: android.view.View create(android.content.Context,android.view.View,android.view.ViewGroup,android.view.LayoutInflater)>
<com.android.server.usb.descriptors.UsbACSelectorUnit: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>
<com.android.server.pm.dex.DynamicCodeLogger: void recordNative(int,java.lang.String)>
<com.android.settingslib.deviceinfo.StorageManagerVolumeProvider: void <init>(android.os.storage.StorageManager)>
<com.android.server.pm.Installer: boolean destroyAppDataSnapshot(java.lang.String,int,long,int,int)>
<com.android.systemui.recents.RecentsImplProxy: void splitPrimaryTask(int,int,android.graphics.Rect)>
<com.android.systemui.qs.tiles.IntentTile: void handleUserSwitch(int)>
<com.android.server.wallpaper.WallpaperManagerService: void onBootPhase(int)>
<com.android.settingslib.NetworkPolicyEditor: boolean hasLimitedPolicy(android.net.NetworkTemplate)>
<javax.obex.HeaderSet: boolean getEmptyNameHeader()>
<com.android.server.accessibility.MagnificationController: java.lang.String toString()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void onMeasure(int,int)>
<com.android.gallery3d.exif.ExifInterface: int[] getTagIntValues(int)>
<com.android.systemui.qs.QSPanel: void setExpanded(boolean)>
<com.android.server.accessibility.AccessibilityManagerService: void <init>(android.content.Context)>
<com.android.settingslib.development.AbstractLogpersistPreferenceController: void displayPreference(androidx.preference.PreferenceScreen)>
<com.android.server.contentsuggestions.RemoteContentSuggestionsService: long getRemoteRequestMillis()>
<com.android.gallery3d.exif.ExifInvalidFormatException: void <init>(java.lang.String)>
<com.android.server.search.SearchManagerService: android.content.ComponentName getGlobalSearchActivity()>
<com.android.systemui.qs.tiles.LocationTile: void handleClick()>
<com.android.gallery3d.glrenderer.BasicTexture: int getId()>
<com.android.server.locksettings.LockSettingsService.SynchronizedStrongAuthTracker: void <init>(android.content.Context)>
<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: void setDismissRtl(boolean)>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationMediaTemplateViewWrapper: void onContentUpdated(com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<com.android.systemui.shared.system.WindowManagerWrapper: void overridePendingAppTransitionMultiThumbFuture(com.android.systemui.shared.recents.view.AppTransitionAnimationSpecsFuture,java.lang.Runnable,android.os.Handler,boolean,int)>
<com.android.systemui.bubbles.animation.PhysicsAnimationLayout.PhysicsPropertyAnimator: com.android.systemui.bubbles.animation.PhysicsAnimationLayout.PhysicsPropertyAnimator translationY(float,float,java.lang.Runnable[])>
<com.android.systemui.keyguard.KeyguardViewMediator: void start()>
<com.android.settingslib.display.DisplayDensityUtils: int[] getValues()>
<com.android.systemui.statusbar.phone.StatusBar: void postStartActivityDismissingKeyguard(android.content.Intent,int)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void setClipChildren(boolean)>
<com.android.systemui.pip.phone.PipTouchState: void onTouchEvent(android.view.MotionEvent)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: android.view.View getExpandedContentView()>
<android.net.ip.InterfaceController: boolean setIPv4Address(android.net.LinkAddress)>
<com.android.systemui.qs.QSPanel: com.android.systemui.qs.QSTileHost getHost()>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationMessagingTemplateViewWrapper: void onContentUpdated(com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<com.android.systemui.tuner.TunerActivity: boolean onPreferenceStartFragment(androidx.preference.PreferenceFragment,androidx.preference.Preference)>
<com.android.systemui.MultiListLayout.MultiListAdapter: int countSeparatedItems()>
<com.android.systemui.statusbar.phone.StatusBarIconControllerImpl: void addIconGroup(com.android.systemui.statusbar.phone.StatusBarIconController.IconManager)>
<com.android.server.notification.RankingConfig: android.app.NotificationChannel getNotificationChannel(java.lang.String,int,java.lang.String,boolean)>
<com.android.server.accessibility.KeyEventDispatcher: void flush(com.android.server.accessibility.KeyEventDispatcher.KeyEventFilter)>
<com.android.sharedstoragebackup.SharedStorageAgent: void onCreate()>
<com.android.systemui.statusbar.phone.PanelView: void onUnlockHintStarted()>
<android.net.util.PrefixUtils: void addNonForwardablePrefixes(java.util.Set)>
<com.android.systemui.doze.DozeHost: void pulseWhileDozing(com.android.systemui.doze.DozeHost.PulseCallback,int)>
<com.android.settingslib.utils.PowerUtil: java.lang.String getBatteryRemainingShortStringFormatted(android.content.Context,long)>
<android.net.util.InterfaceParams: android.net.util.InterfaceParams getByName(java.lang.String)>
<com.android.systemui.qs.QSDualTileLabel: void <init>(android.content.Context)>
<com.android.providers.settings.SettingsService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.net.util.SharedLog: void e(java.lang.Exception)>
<com.android.server.notification.ZenLog: void traceSetRingerModeExternal(int,int,java.lang.String,int,int)>
<com.android.systemui.statusbar.phone.StatusBar: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.externalstorage.ExternalStorageProvider: android.database.Cursor queryRoots(java.lang.String[])>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setGroupManager(com.android.systemui.statusbar.phone.NotificationGroupManager)>
<com.android.keyguard.KeyguardPatternView: com.android.keyguard.KeyguardSecurityCallback getCallback()>
<com.android.keyguard.clock.AnalogClockController: void onDestroyView()>
<com.android.server.locksettings.LockSettingsService: void setSeparateProfileChallengeEnabled(int,boolean,byte[])>
<com.android.server.pm.ShortcutService: void onApplicationActive(java.lang.String,int)>
<com.android.systemui.recents.events.ui.dragndrop.DragStartEvent: void <init>(com.android.systemui.shared.recents.model.Task,com.android.systemui.recents.views.TaskView,android.graphics.Point)>
<javax.microedition.khronos.opengles.GL11: void glGetMaterialxv(int,int,java.nio.IntBuffer)>
<com.android.server.pm.PackageSettingBase: android.content.pm.PackageParser.SigningDetails getSigningDetails()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void cleanUpViewStateForEntry(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverySessionStorage: int size()>
<com.android.systemui.statusbar.phone.HeadsUpManagerPhone: void updateTouchableRegion(android.view.ViewTreeObserver.InternalInsetsInfo)>
<com.android.systemui.statusbar.phone.RegionSamplingHelper: void onViewAttachedToWindow(android.view.View)>
<com.android.systemui.statusbar.phone.StatusBar: com.android.systemui.statusbar.phone.BarTransitions getStatusBarTransitions()>
<com.android.systemui.statusbar.notification.stack.ViewState: void copyFrom(com.android.systemui.statusbar.notification.stack.ViewState)>
<javax.microedition.khronos.opengles.GL11: void glPointParameterx(int,int)>
<com.android.systemui.statusbar.phone.StatusBarSignalPolicy: void setNoSims(boolean,boolean)>
<com.android.server.infra.FrameworkResourcesServiceNameResolver: boolean isDefaultServiceEnabled(int)>
<com.android.settingslib.bluetooth.PbapClientProfile: boolean accessProfileEnabled()>
<com.android.systemui.statusbar.notification.stack.AmbientState: int getExpandAnimationTopChange()>
<com.android.gallery3d.exif.ExifTag: byte getValueAsByte(byte)>
<com.android.server.biometrics.BiometricUserState: void <init>(android.content.Context,int)>
<com.android.systemui.assist.ui.InvocationLightsView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.recents.RecentsActivity: void onBusEvent(com.android.systemui.recents.events.activity.ToggleRecentsEvent)>
<com.android.systemui.qs.tiles.BluetoothTile: void handleUpdateState(com.android.systemui.plugins.qs.QSTile.BooleanState,java.lang.Object)>
<com.android.gallery3d.exif.ExifTag: boolean setValue(java.lang.Object)>
<com.android.systemui.statusbar.notification.row.NotificationBackgroundView: void setActualHeight(int)>
<com.android.location.fused.FusionEngine: void onLocationChanged(android.location.Location)>
<com.android.server.biometrics.BiometricServiceBase: void removeInternal(com.android.server.biometrics.RemovalClient)>
<com.android.systemui.shared.system.TransactionCompat: com.android.systemui.shared.system.TransactionCompat show(com.android.systemui.shared.system.SurfaceControlCompat)>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper: void startHintAnimation(boolean,java.lang.Runnable)>
<com.android.systemui.SysUIToast: android.widget.Toast makeText(android.content.Context,int,int)>
<com.android.systemui.statusbar.phone.PanelView: boolean isClearAllVisible()>
<com.android.server.audio.PlaybackActivityMonitor: boolean duckPlayers(com.android.server.audio.FocusRequester,com.android.server.audio.FocusRequester,boolean)>
<com.android.systemui.statusbar.policy.CastControllerImpl: void setDiscovering(boolean)>
<com.android.gallery3d.util.IntArray: int size()>
<javax.microedition.khronos.opengles.GL10: void glMultMatrixf(java.nio.FloatBuffer)>
<com.android.systemui.shared.plugins.PluginPrefs: void setHasPlugins(android.content.Context)>
<com.android.systemui.statusbar.policy.SignalController: void saveLastState()>
<javax.microedition.khronos.opengles.GL10: void glHint(int,int)>
<com.android.systemui.statusbar.policy.CastController: void stopCasting(com.android.systemui.statusbar.policy.CastController.CastDevice)>
<com.android.systemui.SwipeHelper: void <init>(int,com.android.systemui.SwipeHelper.Callback,android.content.Context)>
<com.android.photos.BitmapRegionTileSource.BitmapSource: void <init>(int)>
<com.android.server.SystemService: boolean isSafeMode()>
<com.android.server.notification.ZenModeHelper.RingerModeDelegate: boolean canVolumeDownEnterSilent()>
<com.android.preload.ui.SwingUI: void hideWaitDialog()>
<com.android.server.pm.permission.PermissionManagerServiceInternal.PermissionCallback: void onInstallPermissionGranted()>
<com.android.location.provider.ActivityRecognitionProviderClient: void onProviderChanged(boolean,com.android.location.provider.ActivityRecognitionProvider)>
<com.android.media.remotedisplay.RemoteDisplay: void setVolumeHandling(int)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void toggleRecentApps()>
<com.android.systemui.statusbar.notification.NotificationDozeHelper: void setIntensityDark(java.util.function.Consumer,boolean,boolean,long,android.view.View)>
<com.android.keyguard.KeyguardUpdateMonitor: void disableHandlerCheckForTesting(android.app.Instrumentation)>
<com.android.systemui.recents.views.grid.GridTaskView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.systemui.biometrics.BiometricDialogView: void setRequireConfirmation(boolean)>
<com.android.server.content.ContentService: java.util.List getPeriodicSyncs(android.accounts.Account,java.lang.String,android.content.ComponentName)>
<com.android.systemui.CarSystemUIFactory.CarDependencyComponent: com.android.systemui.statusbar.car.CarFacetButtonController getCarFacetButtonController()>
<com.android.server.trust.TrustManagerService: boolean removeEscrowToken(long,int)>
<com.android.systemui.classifier.EndPointRatioClassifier: java.lang.String getTag()>
<com.android.systemui.statusbar.MediaTransferManager: void applyMediaTransferView(android.view.ViewGroup,com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void handleShowGlobalActionsMenu()>
<android.media.Controller2Link: int hashCode()>
<com.android.server.hdmi.HdmiCecLocalDevicePlayback: boolean handleUserControlPressed(com.android.server.hdmi.HdmiCecMessage)>
<com.android.settingslib.widget.ActionButtonsPreference: com.android.settingslib.widget.ActionButtonsPreference setButton2Enabled(boolean)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onFaceUnlockStateChanged(boolean,int)>
<android.net.shared.ProvisioningConfiguration.Builder: android.net.shared.ProvisioningConfiguration.Builder withDisplayName(java.lang.String)>
<com.android.printservice.recommendation.plugin.hp.ServiceListener: java.util.ArrayList getPrinters()>
<android.widget.TextViewPrecomputedTextPerfTest: void testNewLayout_RandomText()>
<com.android.systemui.statusbar.phone.StatusBarSignalPolicy.WifiIconState: java.lang.String toString()>
<com.android.systemui.statusbar.car.hvac.TemperatureView: int getPropertyId()>
<com.android.systemui.shared.system.TaskStackChangeListener: void onPinnedStackAnimationEnded()>
<com.android.systemui.statusbar.phone.StatusBar: void onKeyguardViewManagerStatesUpdated()>
<com.android.statementservice.retriever.Relation: com.android.statementservice.retriever.Relation create(java.lang.String,java.lang.String)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexGenfv(int,int,java.nio.FloatBuffer)>
<com.android.server.slice.SlicePermissionManager: void <init>(android.content.Context,android.os.Looper)>
<com.android.server.usb.descriptors.UsbDescriptor: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>
<com.android.server.pm.PackageInstallerSession: void abandon()>
<com.android.settingslib.widget.BarChartInfo: int getEmptyText()>
<com.android.settingslib.bluetooth.MapClientProfile: boolean isProfileReady()>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcher: void onDensityOrFontScaleChanged()>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void setFocusOnVisibilityChange()>
<com.android.statsd.loadtest.DisplayProtoUtils: void displayCountMetricData(java.lang.StringBuilder,com.android.os.StatsLog.StatsLogReport)>
<com.android.pacprocessor.PacService: void onDestroy()>
<com.android.systemui.qs.tiles.RotationLockTile: void handleSetListening(boolean)>
<com.android.preload.ui.NullProgressMonitor: void advance(int)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: boolean startPairing()>
<com.android.systemui.statusbar.AlertingNotificationManager.AlertEntry: void setEntry(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer: void onMeasure(int,int)>
<com.android.systemui.statusbar.phone.StatusBar: void onUnlockMethodStateChanged()>
<com.android.server.pm.PackageManagerService: void notifyPackageChanged(java.lang.String,int)>
<com.android.systemui.statusbar.ViewTransformationHelper: void addRemainingTransformTypes(android.view.View)>
<com.android.settingslib.bluetooth.BluetoothUtils: android.util.Pair getBtClassDrawableWithDescription(android.content.Context,com.android.settingslib.bluetooth.CachedBluetoothDevice)>
<com.android.preload.ui.SequenceUI: com.android.preload.ui.SequenceUI tableRow(int)>
<com.android.systemui.recents.LegacyRecentsImpl: void onBusEvent(com.android.systemui.recents.events.component.ScreenPinningRequestEvent)>
<com.android.keyguard.KeyguardSimPukView: boolean confirmPin()>
<com.android.server.attention.AttentionManagerService.AttentionHandler: void handleMessage(android.os.Message)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setQsExpansionFraction(float)>
<com.android.uiautomator.core.UiDevice: boolean pressHome()>
<com.android.server.notification.NotificationRecord: void setAllowBubble(boolean)>
<com.android.systemui.plugins.qs.QS: void setHeaderClickable(boolean)>
<com.android.server.notification.ZenModeHelper.RingerModeDelegate: java.lang.String toString()>
<com.android.location.provider.GeocodeProvider: java.lang.String onGetFromLocation(double,double,int,android.location.GeocoderParams,java.util.List)>
<com.android.systemui.statusbar.notification.row.StackScrollerDecorView: boolean isContentVisible()>
<com.android.keyguard.ViewMediatorCallback: boolean isScreenOn()>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onDevicePolicyManagerStateChanged()>
<com.android.systemui.statusbar.policy.HeadsUpManager: com.android.systemui.statusbar.policy.HeadsUpManager.HeadsUpEntry getHeadsUpEntry(java.lang.String)>
<com.android.systemui.statusbar.AnimatedImageView: void onDetachedFromWindow()>
<com.android.server.location.LocationBlacklist: void dump(java.io.PrintWriter)>
<com.android.server.usb.UsbService: void setCurrentFunctions(long)>
<com.android.systemui.statusbar.policy.ZenModeController: boolean areNotificationsHiddenInShade()>
<com.android.server.audio.MediaFocusControl: void <init>(android.content.Context,com.android.server.audio.PlayerFocusEnforcer)>
<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin.MenuItem getAppOpsMenuItem(android.content.Context)>
<com.android.systemui.statusbar.notification.stack.AmbientState: float getOverScrollAmount(boolean)>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: boolean isWithinSnapMenuThreshold()>
<com.android.systemui.stackdivider.ForcedResizableInfoActivity: void finish()>
<com.android.hotspot2.osu.OsuLoginActivity: boolean onKeyDown(int,android.view.KeyEvent)>
<com.android.gallery3d.glrenderer.GLES20Canvas: void deleteBuffer(int)>
<com.android.systemui.qs.tiles.NfcTile: void handleUpdateState(com.android.systemui.plugins.qs.QSTile.BooleanState,java.lang.Object)>
<com.android.gallery3d.common.Utils: float interpolateScale(float,float,float)>
<com.android.server.policy.PhoneWindowManager: void notifyLidSwitchChanged(long,boolean)>
<android.net.IpMemoryStoreClient: void runWhenServiceReady(java.util.function.Consumer)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo)>
<com.android.server.usb.descriptors.Usb10ASFormatII: int getMaxBitRate()>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb: void close()>
<com.android.systemui.recents.views.AnimateableViewBounds: int getClipBottom()>
<com.android.settingslib.widget.BarChartInfo: android.view.View.OnClickListener getDetailsOnClickListener()>
<com.android.printservice.recommendation.plugin.mdnsFilter.MDNSFilterPlugin: void stop()>
<com.android.systemui.statusbar.phone.ContextualButtonGroup: void addButton(com.android.systemui.statusbar.phone.ContextualButton)>
<android.view.autofill.MyAutofillCallback: void assertNoAsyncErrors()>
<com.android.server.utils.FlagNamespaceUtils: void resetKnownResetNamespacesFlagCounterForTest()>
<com.android.keyguard.clock.ClockOptionsProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>
<com.android.settingslib.applications.StorageStatsSource.AppStorageStatsImpl: long getCodeBytes()>
<com.android.server.infra.AbstractMasterSystemService: com.android.server.infra.AbstractPerUserSystemService updateCachedServiceLocked(int,boolean)>
<com.android.server.twilight.TwilightService: void onLocationChanged(android.location.Location)>
<com.android.systemui.statusbar.policy.RotationLockController.RotationLockControllerCallback: void onRotationLockStateChanged(boolean,boolean)>
<com.android.systemui.glwallpaper.ImageWallpaperRenderer: void onRevealEnd()>
<com.android.smspush.WapPushManager: com.android.smspush.WapPushManager.WapPushManDBHelper getDatabase(android.content.Context)>
<com.android.server.usb.descriptors.Usb10ACHeader: byte getNumInterfaces()>
<com.android.systemui.doze.DozeLog: void traceEmergencyCall()>
<com.android.systemui.statusbar.phone.PanelView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.android.settingslib.wifi.AccessPoint: java.lang.String getSecurityString(boolean)>
<com.android.systemui.SystemUI: void overrideNotificationAppName(android.content.Context,android.app.Notification.Builder,boolean)>
<com.android.bluetoothmidiservice.MidiBtleTimeTracker: int getWindowMillis()>
<com.android.settingslib.media.BluetoothMediaManager: void onDeviceDeleted(com.android.settingslib.bluetooth.CachedBluetoothDevice)>
<com.android.wallpapercropper.CropView: void setScale(float)>
<com.android.systemui.recents.views.grid.GridTaskView: void onConfigurationChanged()>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void dump(java.io.PrintWriter)>
<com.android.settingslib.deviceinfo.StorageMeasurement: void onDestroy()>
<com.android.systemui.AutoReinflateContainer: void onDensityOrFontScaleChanged()>
<com.android.server.telecom.TelecomLoaderService: void onStart()>
<com.android.systemui.qs.QSCarrierGroup: void setListening(boolean)>
<com.android.uiautomator.testrunner.UiAutomatorTestRunner: void run(java.util.List,android.os.Bundle,boolean,boolean)>
<com.android.server.slice.SliceManagerService: void applyRestore(byte[],int)>
<com.android.gallery3d.exif.ExifInterface: com.android.gallery3d.exif.ExifTag buildTag(int,int,java.lang.Object)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void setClipToActualHeight(boolean)>
<com.android.systemui.statusbar.KeyboardShortcutAppItemLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.qs.tileimpl.QSTileBaseView: boolean hasOverlappingRendering()>
<com.android.systemui.qs.tileimpl.QSTileImpl: void handleRefreshState(java.lang.Object)>
<com.android.server.inputmethod.InputMethodManagerService: com.android.internal.view.InputBindResult startInputOrWindowGainedFocus(int,com.android.internal.view.IInputMethodClient,android.os.IBinder,int,int,int,android.view.inputmethod.EditorInfo,com.android.internal.view.IInputContext,int,int)>
<com.android.server.updates.ConfigUpdateInstallReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.android.settingslib.media.MediaManager: void dispatchDataChanged()>
<com.android.preload.DumpData: java.util.Map getDumpData()>
<com.android.server.notification.ConditionProviders: void onServiceAdded(com.android.server.notification.ManagedServices.ManagedServiceInfo)>
<com.android.server.timezone.PackageTracker: void dump(java.io.PrintWriter)>
<com.android.settingslib.core.lifecycle.ObservableDialogFragment: void onDestroy()>
<com.android.printservice.recommendation.plugin.hp.MDnsUtils: boolean isVendorPrinter(android.net.nsd.NsdServiceInfo,java.lang.String[])>
<com.android.systemui.shared.system.PinnedStackListenerForwarder: void onActionsChanged(android.content.pm.ParceledListSlice)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setRecommendedGlobalProxy(android.content.ComponentName,android.net.ProxyInfo)>
<com.android.server.BinderCallsStatsService.Internal: java.util.ArrayList getExportedCallStats()>
<com.android.server.media.MediaRouterService: void requestUpdateVolume(android.media.IMediaRouterClient,java.lang.String,int)>
<com.android.server.accessibility.MagnificationController.ControllerContext: android.animation.ValueAnimator newValueAnimator()>
<android.database.SQLiteDatabaseIoPerfTest: void testInsertsWithTransactions()>
<com.android.systemui.statusbar.AlertingNotificationManager: int getContentFlag()>
<com.android.systemui.shared.recents.utilities.AppTrace: void beginSection(java.lang.String)>
<com.android.server.VibratorService: void onShellCommand(java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ShellCallback,android.os.ResultReceiver)>
<com.android.systemui.statusbar.phone.StatusBar: void onStatePreChange(int,int)>
<com.android.settingslib.bluetooth.A2dpProfile: boolean supportsHighQualityAudio(android.bluetooth.BluetoothDevice)>
<com.android.settingslib.accounts.AuthenticatorHelper: void stopListeningToAccountUpdates()>
<com.android.uiautomator.core.UiObject: boolean waitForExists(long)>
<com.android.systemui.statusbar.notification.NotificationListController: void updateNotificationsForAppOp(int,int,java.lang.String,boolean)>
<com.android.server.content.SyncJobService: boolean onStartJob(android.app.job.JobParameters)>
<com.android.systemui.qs.tiles.UserDetailView: void refreshAdapter()>
<com.android.server.policy.WindowManagerPolicy.WindowState: boolean canAffectSystemUiFlags()>
<com.android.systemui.statusbar.policy.WifiSignalController: void <init>(android.content.Context,boolean,com.android.systemui.statusbar.policy.CallbackHandler,com.android.systemui.statusbar.policy.NetworkControllerImpl,android.net.wifi.WifiManager)>
<com.android.systemui.volume.VolumeToolTipView: void <init>(android.content.Context)>
<com.android.server.TelephonyRegistry: void <init>(android.content.Context)>
<com.android.systemui.statusbar.policy.CastControllerImpl: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.qs.tiles.WifiTile: boolean shouldAnnouncementBeDelayed()>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void onStartedGoingToSleep()>
<com.android.systemui.qs.external.TileLifecycleManager: void onServiceDisconnected(android.content.ComponentName)>
<com.android.settingslib.bluetooth.CachedBluetoothDeviceManager: boolean isSubDevice(android.bluetooth.BluetoothDevice)>
<android.text.PrecomputedTextMemoryUsageTest: void testMemoryUsage_Arabic_NoHyphenation()>
<com.android.server.camera.CameraStatsJobService: boolean onStartJob(android.app.job.JobParameters)>
<com.android.systemui.statusbar.phone.NavigationPrototypeController.OnPrototypeChangedListener: void onHomeHandleVisiblilityChanged(boolean)>
<com.android.systemui.shared.recents.model.Task: void <init>(com.android.systemui.shared.recents.model.Task.TaskKey,int,int,boolean,boolean,android.app.ActivityManager.TaskDescription,android.content.ComponentName)>
<com.android.server.testing.shadows.ShadowBackupDataInput: void reset()>
<com.android.keyguard.EmergencyCarrierArea: void onFinishInflate()>
<com.android.systemui.glwallpaper.ImageWallpaperRenderer: void onSurfaceCreated()>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.component.RecentsVisibilityChangedEvent)>
<com.android.systemui.plugins.qs.QSTile.SlashState: com.android.systemui.plugins.qs.QSTile.SlashState copy()>
<javax.microedition.khronos.opengles.GL11: void glDrawElements(int,int,int,int)>
<com.android.systemui.plugins.ClockPlugin: java.lang.String getName()>
<com.android.commands.input.Input: void onShowUsage(java.io.PrintStream)>
<com.android.systemui.util.LifecycleFragment: void onPause()>
<android.media.Media2HTTPService: void <init>(java.util.List)>
<com.android.systemui.assist.ui.PerimeterPathGuide: void strokeSegment(android.graphics.Path,float,float)>
<com.android.packageinstaller.wear.WearPackageArgs: java.lang.String getPackageName(android.os.Bundle)>
<com.android.systemui.statusbar.policy.KeyguardMonitor: boolean isLaunchTransitionFadingAway()>
<com.android.systemui.keyguard.WorkLockActivityController: void <init>(android.content.Context)>
<com.android.settingslib.CustomEditTextPreferenceCompat: void onPrepareDialogBuilder(androidx.appcompat.app.AlertDialog.Builder,android.content.DialogInterface.OnClickListener)>
<com.android.systemui.statusbar.phone.CollapsedStatusBarFragment: void onStateChanged(int)>
<com.android.commands.sm.Sm: void runSetForceAdoptable()>
<com.android.systemui.statusbar.phone.PanelBar: void onTrackingStopped(boolean)>
<com.android.systemui.statusbar.NotificationRemoteInputManager: void addLifetimeExtenders()>
<com.android.server.notification.ManagedServices: java.util.Set queryPackageForServices(java.lang.String,int,int)>
<com.android.systemui.bubbles.animation.PhysicsAnimationLayout.PhysicsPropertyAnimator: com.android.systemui.bubbles.animation.PhysicsAnimationLayout.PhysicsPropertyAnimator withStartVelocity(float)>
<com.android.server.content.SyncStorageEngine: boolean getMasterSyncAutomatically(int)>
<com.android.systemui.screenrecord.RecordingService: int onStartCommand(android.content.Intent,int,int)>
<com.android.systemui.globalactions.ListGridLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.accessibility.AccessibilityManagerService.SecurityPolicy: boolean isCallerInteractingAcrossUsers(int)>
<com.android.systemui.analytics.DataCollector: void onBouncerHidden()>
<com.android.systemui.statusbar.policy.OnHeadsUpChangedListener: void onHeadsUpStateChanged(com.android.systemui.statusbar.notification.collection.NotificationEntry,boolean)>
<com.android.server.statusbar.StatusBarManagerService: void disable2ForUser(int,android.os.IBinder,java.lang.String,int)>
<com.android.settingslib.location.RecentLocationApps: java.util.List getAppListSorted(boolean)>
<com.android.systemui.statusbar.phone.StatusBarIconList.Slot: java.lang.String toString()>
<com.android.server.usb.descriptors.tree.UsbDescriptorsInterfaceNode: void addEndpointNode(com.android.server.usb.descriptors.tree.UsbDescriptorsEndpointNode)>
<com.android.systemui.statusbar.notification.stack.AmbientState: void setDismissAllInProgress(boolean)>
<com.android.systemui.classifier.AnglesClassifier: float getFalseTouchEvaluation(int,com.android.systemui.classifier.Stroke)>
<com.android.server.pm.dex.DexManager: void notifyDexLoad(android.content.pm.ApplicationInfo,java.util.List,java.util.List,java.lang.String,int)>
<com.android.systemui.shared.system.TaskStackChangeListeners: void onActivityPinned(java.lang.String,int,int,int)>
<com.android.systemui.statusbar.policy.InflatedSmartReplies: boolean shouldShowSmartReplyView(com.android.systemui.statusbar.notification.collection.NotificationEntry,com.android.systemui.statusbar.policy.InflatedSmartReplies.SmartRepliesAndActions)>
<com.android.printservice.recommendation.util.Preconditions: void checkArgument(boolean)>
<com.android.server.accessibility.AccessibilityManagerService: int getCurrentUserIdLocked()>
<com.android.systemui.recents.OverviewProxyService.OverviewProxyListener: void startAssistant(android.os.Bundle)>
<android.database.SQLiteDatabasePerfTest: void testDelete()>
<com.android.settingslib.bluetooth.HeadsetProfile: boolean isProfileReady()>
<com.android.systemui.statusbar.notification.row.ExpandableView: float getOutlineAlpha()>
<com.android.server.updates.ConfigUpdateInstallReceiver: void writeUpdate(java.io.File,java.io.File,byte[])>
<com.android.systemui.statusbar.phone.StatusBar: void showKeyguard()>
<com.android.systemui.globalactions.GlobalActionsGridLayout: float getAnimationOffsetY()>
<com.android.photos.BitmapRegionTileSource.FilePathBitmapSource: boolean readExif(com.android.gallery3d.exif.ExifInterface)>
<com.android.settingslib.notification.ZenDurationDialog: void setupDialog(androidx.appcompat.app.AlertDialog.Builder)>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationViewWrapper: int getCustomBackgroundColor()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setCertInstallerPackage(android.content.ComponentName,java.lang.String)>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationCustomViewWrapper: void <init>(android.content.Context,android.view.View,com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<com.android.packageinstaller.wear.WearPackageIconProvider: android.net.Uri getUriForPackage(java.lang.String)>
<com.android.systemui.keyguard.KeyguardViewMediator: void setCurrentUser(int)>
<com.android.server.display.color.ColorDisplayService.ColorDisplayServiceInternal: boolean isDisplayWhiteBalanceEnabled()>
<com.android.systemui.statusbar.KeyguardAffordanceView: boolean isAnimatingAlpha()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setHeadsUpAnimatingAwayListener(java.util.function.Consumer)>
<com.android.printspooler.widget.PrintContentView.OptionsStateController: boolean canOpenOptions()>
<com.android.server.audio.AudioEventLogger: void log(com.android.server.audio.AudioEventLogger.Event)>
<com.android.systemui.glwallpaper.EglHelper: boolean swapBuffer()>
<com.android.server.pm.UserRestrictionsUtils: android.os.Bundle clone(android.os.Bundle)>
<com.android.systemui.statusbar.policy.SecurityController: java.lang.CharSequence getDeviceOwnerOrganizationName()>
<com.android.server.notification.NotificationManagerInternal: void removeForegroundServiceFlagFromNotification(java.lang.String,int,int)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: boolean hasPulsingNotifications()>
<com.android.gallery3d.glrenderer.GLES20Canvas: void initializeTextureSize(com.android.gallery3d.glrenderer.BasicTexture,int,int)>
<android.net.ipmemorystore.NetworkAttributes: boolean isEmpty()>
<com.android.gallery3d.glrenderer.GLCanvas: void setSize(int,int)>
<com.android.printspooler.widget.PrintContentView: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.statusbar.phone.StatusBar: boolean isInLaunchTransition()>
<com.android.keyguard.KeyguardMessageArea: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.PanelView: void onClosingFinished()>
<com.android.systemui.qs.tiles.FlashlightTile: void handleUserSwitch(int)>
<com.android.server.voiceinteraction.VoiceInteractionSessionConnection.Callback: void onSessionHidden(com.android.server.voiceinteraction.VoiceInteractionSessionConnection)>
<com.android.systemui.keyguard.KeyguardViewMediator: com.android.keyguard.ViewMediatorCallback getViewMediatorCallback()>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: void panelExpansionChanged(float,boolean)>
<com.android.server.contentcapture.ContentCaptureManagerService: void onServiceRemoved(com.android.server.contentcapture.ContentCapturePerUserService,int)>
<com.android.systemui.plugins.VolumeDialogController: boolean areCaptionsEnabled()>
<com.android.systemui.analytics.DataCollector: void onNotificationActive()>
<com.android.server.AppStateTracker.Listener: void updateAllJobs()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void applyExpandAnimationParams(com.android.systemui.statusbar.notification.ActivityLaunchAnimator.ExpandAnimationParameters)>
<com.android.server.usb.descriptors.tree.UsbDescriptorsACInterfaceNode: void <init>(com.android.server.usb.descriptors.UsbACInterface)>
<com.android.systemui.statusbar.policy.UserInfoControllerImpl: void addCallback(com.android.systemui.statusbar.policy.UserInfoController.OnUserInfoChangedListener)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glGetRenderbufferParameterivOES(int,int,java.nio.IntBuffer)>
<com.android.systemui.qs.QuickQSPanel: void setMaxTiles(int)>
<com.android.systemui.plugins.ActivityStarter: void startPendingIntentDismissingKeyguard(android.app.PendingIntent)>
<com.android.systemui.qs.tiles.UserDetailItemView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.net.ip.IpServer: java.lang.String getStateString(int)>
<com.android.systemui.plugins.qs.QSTile: void secondaryClick()>
<com.android.systemui.bubbles.BubbleFlyoutView: void onDraw(android.graphics.Canvas)>
<com.android.server.pm.PackageInstallerSession: boolean markAsCommitted(android.content.IntentSender,boolean)>
<android.os.ParcelPerfTest: void timeSetDataCapacity()>
<com.android.settingslib.drawer.Tile: void setMetaData(android.os.Bundle)>
<com.android.systemui.qs.SlashDrawable: void setRotation(float)>
<com.android.systemui.recents.utilities.Utilities: float dpToPx(android.content.res.Resources,float)>
<com.android.systemui.recents.RecentsActivity: void onBusEvent(com.android.systemui.recents.events.ui.AllTaskViewsDismissedEvent)>
<com.android.server.notification.RankingConfig: void permanentlyDeleteNotificationChannel(java.lang.String,int,java.lang.String)>
<com.android.settingslib.bluetooth.HidDeviceProfile: int getDrawableResource(android.bluetooth.BluetoothClass)>
<com.android.systemui.statusbar.phone.StatusBar: void startActivityDismissingKeyguard(android.content.Intent,boolean,boolean)>
<com.android.server.notification.NotificationUsageStats.SingleNotificationStats: void updateFrom(com.android.server.notification.NotificationUsageStats.SingleNotificationStats)>
<com.android.systemui.statusbar.policy.KeyButtonRipple: void setType(com.android.systemui.statusbar.policy.KeyButtonRipple.Type)>
<com.android.systemui.doze.DozeLog: void traceFling(boolean,boolean,boolean,boolean)>
<javax.microedition.khronos.opengles.GL10: void glLightfv(int,int,java.nio.FloatBuffer)>
<com.android.server.testing.shadows.ShadowAppBackupUtils: void setAppEligibleForBackup(java.lang.String)>
<com.android.fakeoemfeatures.FakeBackgroundService: void onDestroy()>
<com.android.systemui.ActivityStarterDelegate: void startActivity(android.content.Intent,boolean)>
<com.android.server.accounts.AccountManagerService: com.android.server.accounts.AccountManagerService getSingleton()>
<com.android.server.pm.ShortcutService.Lifecycle: void <init>(android.content.Context)>
<com.android.systemui.shared.system.DevicePolicyManagerWrapper: boolean isLockTaskPermitted(java.lang.String)>
<com.android.settingslib.bluetooth.BluetoothCallback: void onDeviceDeleted(com.android.settingslib.bluetooth.CachedBluetoothDevice)>
<com.android.server.notification.NotificationRecord: void setIsAppImportanceLocked(boolean)>
<com.android.systemui.DependencyBinder: com.android.systemui.statusbar.policy.ZenModeController provideZenModeController(com.android.systemui.statusbar.policy.ZenModeControllerImpl)>
<com.android.wallpaperbackup.WallpaperBackupAgent: void onQuotaExceeded(long,long)>
<com.android.server.infra.ServiceNameResolver: java.lang.String getServiceName(int)>
<com.android.systemui.qs.QuickStatusBarHeader: void onRtlPropertiesChanged(int)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: android.view.View getLeftPreview()>
<com.android.systemui.statusbar.StatusBarIconView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.settingslib.graph.SignalDrawable: int getCarrierChangeState(int)>
<com.android.preload.actions.DeviceSpecific: void setDevice(com.android.ddmlib.IDevice)>
<com.android.systemui.statusbar.phone.CollapsedStatusBarFragment: void onDozingChanged(boolean)>
<com.android.systemui.statusbar.phone.KeyguardBouncer: void prepare()>
<com.android.systemui.statusbar.GestureRecorder: void saveLater()>
<com.android.server.pm.PackageManagerService: void setUpdateAvailable(java.lang.String,boolean)>
<com.android.systemui.util.leak.GarbageMonitor.ProcessMemInfo: void <init>(long,java.lang.String,long)>
<com.android.settingslib.Utils: java.lang.String getBatteryStatus(android.content.res.Resources,android.content.Intent)>
<com.android.systemui.keyguard.WakefulnessLifecycle: void dispatchFinishedGoingToSleep()>
<com.android.server.SystemServiceManager: boolean isBootCompleted()>
<com.android.systemui.statusbar.notification.NotificationEntryListener: void onEntryReinflated(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.systemui.util.AsyncSensorManager: void <init>(android.content.Context,com.android.systemui.shared.plugins.PluginManager)>
<com.android.systemui.bubbles.BubbleStackView: boolean performAccessibilityActionInternal(int,android.os.Bundle)>
<com.android.settingslib.fuelgauge.PowerWhitelistBackend: boolean isWhitelisted(java.lang.String)>
<com.android.systemui.classifier.FalsingManagerImpl: boolean isFalseTouch()>
<com.android.gallery3d.common.BitmapUtils: android.graphics.Bitmap createVideoThumbnail(java.lang.String)>
<com.android.server.notification.SnoozeHelper: void readXml(org.xmlpull.v1.XmlPullParser,boolean)>
<com.android.keyguard.ViewMediatorCallback: void readyForKeyguardDone()>
<com.android.server.vr.EnabledComponentsObserver: android.util.ArraySet loadComponentNames(android.content.pm.PackageManager,int,java.lang.String,java.lang.String)>
<com.android.packageinstaller.television.UninstallAppProgress.ProgressFragment: void showCompletion(java.lang.CharSequence)>
<com.android.systemui.tuner.DemoModeFragment: void onPause()>
<com.android.systemui.statusbar.policy.HeadsUpManager.HeadsUpEntry: long calculatePostTime()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setChildrenExpanded(boolean,boolean)>
<com.android.systemui.shared.recents.utilities.AppTrace: void endSection()>
<com.android.keyguard.ViewMediatorCallback: int getBouncerPromptReason()>
<com.android.settingslib.widget.BarChartPreference: void updateLoadingState(boolean)>
<com.android.systemui.qs.external.TileLifecycleManager.TileChangeListener: void onTileChanged(android.content.ComponentName)>
<com.android.server.infra.AbstractMasterSystemService: void <init>(android.content.Context,com.android.server.infra.ServiceNameResolver,java.lang.String)>
<com.android.wallpapercropper.WallpaperCropActivity.BitmapCropTask: void setOnEndRunnable(java.lang.Runnable)>
<com.android.preload.ui.SwingUI: boolean showConfirmDialog(java.lang.String,java.lang.String)>
<com.android.systemui.qs.tiles.WifiTile: void handleClick()>
<com.android.uiautomator.core.UiScrollable: boolean ensureFullyVisible(com.android.uiautomator.core.UiObject)>
<com.android.keyguard.KeyguardSimPukView: java.lang.CharSequence getTitle()>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.server.input.InputManagerService: void setTouchCalibrationForInputDevice(java.lang.String,int,android.hardware.input.TouchCalibration)>
<android.net.ipmemorystore.OnSameL3NetworkResponseListener: void onSameL3NetworkResponse(android.net.ipmemorystore.Status,android.net.ipmemorystore.SameL3NetworkResponse)>
<com.android.systemui.statusbar.phone.StatusBarWindowView: void cancelCurrentTouch()>
<com.android.commands.sm.Sm: void runSetSdcardfs()>
<com.android.server.notification.PreferencesHelper: void dump(java.io.PrintWriter,java.lang.String,com.android.server.notification.NotificationManagerService.DumpFilter)>
<com.android.powermodel.AttributionKey: boolean isSpecialApp()>
<com.android.systemui.qs.car.CarQSFragment: void setPanelView(com.android.systemui.plugins.qs.QS.HeightListener)>
<com.android.printservice.recommendation.util.MDNSFilteredDiscovery: void onStopDiscoveryFailed(java.lang.String,int)>
<com.android.server.audio.AudioService: void setRingtonePlayer(android.media.IRingtonePlayer)>
<com.android.systemui.statusbar.phone.LockIcon: void onScrimVisibilityChanged(int)>
<com.android.server.infra.AbstractMasterSystemService: void onCleanupUser(int)>
<com.android.keyguard.EmergencyCarrierArea: void <init>(android.content.Context,android.util.AttributeSet)>
<android.media.MediaPlayer2: void close()>
<com.android.systemui.util.AutoMarqueeTextView: void <init>(android.content.Context)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: boolean isTopLevelChild()>
<com.android.systemui.globalactions.GlobalActionsDialog: void onUiModeChanged()>
<javax.microedition.khronos.opengles.GL11Ext: void glWeightPointerOES(int,int,int,java.nio.Buffer)>
<com.android.settingslib.wifi.AccessPoint: java.lang.String getBssid()>
<com.android.server.audio.PlaybackActivityMonitor: void playerHasOpPlayAudio(int,boolean,int)>
<com.android.settingslib.bluetooth.HidProfile: boolean accessProfileEnabled()>
<com.android.systemui.statusbar.notification.FakeShadowView: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.NavigationHandle: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.notification.CountdownConditionProvider: void attachBase(android.content.Context)>
<com.android.gallery3d.glrenderer.UploadedTexture: void invalidateContent()>
<com.android.systemui.statusbar.notification.row.NotificationContentView: boolean shouldClipToRounding(boolean,boolean)>
<com.android.systemui.tuner.RadioListPreference: android.app.Dialog onDialogCreated(android.app.DialogFragment,android.app.Dialog)>
<com.android.server.display.WifiDisplayController.Listener: void onDisplayConnecting(android.hardware.display.WifiDisplay)>
<com.android.systemui.statusbar.KeyguardIndicationController: void hideTransientIndicationDelayed(long)>
<com.android.settingslib.bluetooth.PbapServerProfile: int getPreferred(android.bluetooth.BluetoothDevice)>
<javax.microedition.khronos.egl.EGLContext: javax.microedition.khronos.egl.EGL getEGL()>
<com.android.settingslib.display.DisplayDensityUtils: void clearForcedDisplayDensity(int)>
<com.android.keyguard.KeyguardSliceView: void onClick(android.view.View)>
<android.net.ip.IIpClientCallbacks: void onIpClientCreated(android.net.ip.IIpClient)>
<com.android.systemui.statusbar.AlphaOptimizedView: boolean hasOverlappingRendering()>
<com.android.server.ConnectivityService: android.net.Network getNetworkForType(int)>
<javax.obex.ObexHelper: int getMaxRxPacketSize(javax.obex.ObexTransport)>
<com.android.systemui.statusbar.phone.DozeScrimController: void pulseOutNow()>
<com.android.systemui.statusbar.phone.StatusBarIconList.Slot: int numberOfIcons()>
<com.android.server.policy.PhoneWindowManager: void setOverrideFoldedArea(android.graphics.Rect)>
<android.os.ParcelPerfTest: void timeWriteLong()>
<com.android.systemui.shared.recents.model.TaskKeyLruCache: void <init>(int)>
<com.android.server.os.BugreportManagerService: void <init>(android.content.Context)>
<com.android.server.notification.RankingReconsideration: long getDelay(java.util.concurrent.TimeUnit)>
<com.android.server.notification.NotificationManagerService: void setDefaultAssistantForUser(int)>
<com.android.server.input.InputManagerService.WindowManagerCallbacks: int interceptKeyBeforeQueueing(android.view.KeyEvent,int)>
<com.android.systemui.statusbar.notification.stack.AmbientState: boolean isHideSensitive()>
<com.android.server.accessibility.AccessibilityManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.os.TracePerfTest: void endTracing()>
<com.android.systemui.statusbar.phone.UserAvatarView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.uiautomator.core.UiObject: boolean exists()>
<com.android.server.NetworkManagementService: void setDnsForwarders(android.net.Network,java.lang.String[])>
<com.android.server.statusbar.StatusBarManagerService: int[] getDisableFlags(android.os.IBinder,int)>
<android.widget.TextViewPrecomputedTextPerfTest: void testOnMeasure_RandomText_Selectable()>
<com.android.commands.bmgr.BmgrTest: void testRun_whenUserSpecified_callsBackupManagerAsSpecifiedUser()>
<com.android.server.AlarmManagerInternal.InFlightListener: void broadcastAlarmComplete(int)>
<com.android.server.DropBoxManagerService: void <init>(android.content.Context,java.io.File,android.os.Looper)>
<javax.microedition.khronos.opengles.GL10: void glFogxv(int,int[],int)>
<com.android.systemui.qs.external.TileLifecycleManager: void setBindRetryDelay(int)>
<android.processor.view.inspector.InspectableClassModel.Accessor: android.processor.view.inspector.InspectableClassModel.Accessor.Type getType()>
<com.example.android.networkusage.NetworkActivity: boolean onOptionsItemSelected(android.view.MenuItem)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: boolean hasOverlappingRendering()>
<com.android.systemui.statusbar.KeyguardIndicationController.BaseKeyguardCallback: void onRefreshBatteryInfo(com.android.keyguard.KeyguardUpdateMonitor.BatteryStatus)>
<com.android.systemui.statusbar.phone.NearestTouchFrame: void onLayout(boolean,int,int,int,int)>
<com.android.settingslib.accounts.AuthenticatorHelper: java.lang.String getPackageForType(java.lang.String)>
<com.android.systemui.statusbar.notification.stack.ViewState: float getFinalTranslationX(android.view.View)>
<com.android.systemui.util.InjectionInflationController.ViewInstanceCreator: com.android.keyguard.KeyguardMessageArea createKeyguardMessageArea()>
<com.android.location.provider.LocationRequestUnbundled: long getInterval()>
<com.android.systemui.statusbar.policy.Clock: android.os.Parcelable onSaveInstanceState()>
<com.android.systemui.keyguard.DismissCallbackRegistry: void notifyDismissCancelled()>
<com.android.systemui.qs.external.PackageManagerAdapter: void <init>(android.content.Context)>
<com.android.server.wallpaper.WallpaperManagerService: android.os.ParcelFileDescriptor setWallpaper(java.lang.String,java.lang.String,android.graphics.Rect,boolean,android.os.Bundle,int,android.app.IWallpaperManagerCallback,int)>
<com.android.systemui.statusbar.policy.RemoteInputView: boolean onRequestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>
<com.android.server.pm.permission.PermissionsState.PermissionState: void <init>(java.lang.String)>
<com.android.server.rollback.RollbackManagerService: void onUnlockUser(int)>
<com.android.settingslib.bluetooth.BluetoothCallback: void onDeviceAdded(com.android.settingslib.bluetooth.CachedBluetoothDevice)>
<com.android.systemui.qs.external.CustomTile: com.android.systemui.plugins.qs.QSTile.State newTileState()>
<com.android.systemui.statusbar.RemoteInputController: void processForRemoteInput(android.app.Notification,android.content.Context)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: android.view.View getGroupParentWhenDismissed()>
<com.android.server.pm.ShortcutService: java.lang.String injectGetLocaleTagsForUser(int)>
<javax.obex.ServerOperation: boolean sendReply(int)>
<javax.microedition.khronos.opengles.GL10: void glFrontFace(int)>
<com.android.gallery3d.common.Utils: java.lang.String maskDebugInfo(java.lang.Object)>
<com.android.server.pm.ShortcutService: android.content.pm.ParceledListSlice getPinnedShortcuts(java.lang.String,int)>
<com.android.systemui.qs.tiles.BluetoothTile.BluetoothDetailAdapter: java.lang.Boolean getToggleState()>
<com.android.server.webkit.SystemInterface: java.util.List getPackageInfoForProviderAllUsers(android.content.Context,android.webkit.WebViewProviderInfo)>
<com.android.systemui.biometrics.BiometricDialogView: int getAuthenticatedAccessibilityResourceId()>
<com.android.server.pm.dex.DexManager: void notifyPackageUpdated(java.lang.String,java.lang.String,java.lang.String[])>
<com.android.printservice.recommendation.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>
<com.android.server.utils.ManagedApplicationService.BinderChecker: android.os.IInterface asInterface(android.os.IBinder)>
<com.android.systemui.statusbar.RemoteInputController: void removeSpinning(java.lang.String,java.lang.Object)>
<com.android.server.testing.shadows.ShadowBackupDataOutput: int writeEntityHeader(java.lang.String,int)>
<com.android.systemui.ExpandHelper.Callback: int getMaxExpandHeight(com.android.systemui.statusbar.notification.row.ExpandableView)>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: void beginDrag()>
<com.android.server.biometrics.iris.IrisService: boolean hasReachedEnrollmentLimit(int)>
<com.android.keyguard.AlphaOptimizedLinearLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.settingslib.core.lifecycle.events.OnPause: void onPause()>
<com.android.systemui.statusbar.notification.NotificationEntryListener: void onPendingEntryAdded(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.systemui.classifier.FalsingManagerProxy: void onNotificationDismissed()>
<com.android.server.NetworkManagementService: com.android.server.NetworkManagementService create(android.content.Context)>
<com.android.server.notification.PreferencesHelper: void setImportance(java.lang.String,int,int)>
<com.android.server.biometrics.fingerprint.FingerprintConstants: int acquireVendorCode()>
<javax.obex.ClientOperation: int getHeaderLength()>
<com.android.systemui.statusbar.phone.PanelBar: boolean panelEnabled()>
<com.android.keyguard.KeyguardHostView: com.android.keyguard.KeyguardSecurityView getCurrentSecurityView()>
<com.android.systemui.qs.QSHost.Callback: void onTilesChanged()>
<com.android.server.pm.UserManagerService: long getUserCreationTime(int)>
<com.android.systemui.plugins.FalsingManager: void onSucccessfulUnlock()>
<com.android.systemui.classifier.FalsingManagerProxy: void onTrackingStarted(boolean)>
<com.android.server.NetworkScoreService.ScoringServiceConnection: void unbind(android.content.Context)>
<com.android.server.content.SyncManager: void removePeriodicSync(com.android.server.content.SyncStorageEngine.EndPoint,android.os.Bundle,java.lang.String)>
<com.android.server.LocationManagerService: java.lang.String getFromLocationName(java.lang.String,double,double,double,double,int,android.location.GeocoderParams,java.util.List)>
<com.android.settingslib.net.UidDetailProvider: int getUserIdForKey(int)>
<com.android.settingslib.deviceinfo.AbstractUptimePreferenceController: void onStop()>
<com.android.systemui.statusbar.phone.DozeParameters: com.android.systemui.doze.AlwaysOnDisplayPolicy getPolicy()>
<com.android.systemui.bubbles.animation.ExpandedAnimationController: void updateYPosition(java.lang.Runnable)>
<com.android.systemui.shared.system.WindowCallbacksCompat: void onRequestDraw(boolean)>
<android.media.Session2Token: java.lang.String getServiceName()>
<com.android.printspooler.ui.PrintActivity: boolean canCloseOptions()>
<com.android.systemui.HardwareUiLayout: void setDivisionView(android.view.View)>
<com.android.server.notification.NotificationRecord: long getLastIntrusive()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setLockTaskPackages(android.content.ComponentName,java.lang.String[])>
<com.android.systemui.qs.SecureSetting: void setUserId(int)>
<com.android.server.usb.descriptors.Usb10ACInputTerminal: void report(com.android.server.usb.descriptors.report.ReportCanvas)>
<com.android.server.LocationManagerService: boolean addGnssBatchingCallback(android.location.IBatchedLocationCallback,java.lang.String)>
<com.android.systemui.doze.DozeHost: boolean isPulsingBlocked()>
<com.android.server.accounts.AccountManagerBackupHelper: byte[] backupAccountAccessPermissions(int)>
<com.android.systemui.globalactions.ListGridLayout: void addItem(android.view.View)>
<com.android.systemui.qs.customize.QSCustomizer: void restoreInstanceState(android.os.Bundle)>
<com.android.server.NetworkManagementService: void addRoute(int,android.net.RouteInfo)>
<com.android.server.Watchdog: void addThread(android.os.Handler)>
<com.android.systemui.statusbar.policy.UserSwitcherController: int getSwitchableUserCount()>
<com.android.systemui.doze.DozeMachine: void dump(java.io.PrintWriter)>
<com.android.server.pm.dex.DexoptOptions: java.lang.String getCompilerFilter()>
<com.android.server.accessibility.EventStreamTransformation: void onDestroy()>
<com.android.server.pm.permission.DefaultPermissionGrantPolicy: void setDialerAppPackagesProvider(android.content.pm.PackageManagerInternal.PackagesProvider)>
<com.android.systemui.statusbar.policy.SignalController: int getCurrentIconId()>
<com.android.server.display.WifiDisplayController.Listener: void onFeatureStateChanged(int)>
<com.android.server.biometrics.face.FaceService: void <init>(android.content.Context)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void prepareExpansionChanged()>
<com.android.systemui.settings.ToggleSliderView: void <init>(android.content.Context)>
<com.android.systemui.qs.tileimpl.QSTileView: void onConfigurationChanged(android.content.res.Configuration)>
<android.media.MediaPlayer2: long getBufferedPosition(android.media.DataSourceDesc)>
<com.android.egg.paint.PaintActivity: void onPostResume()>
<javax.microedition.khronos.opengles.GL10: void glDepthFunc(int)>
<com.android.server.NetworkManagementService: void tetherInterface(java.lang.String)>
<com.android.systemui.statusbar.phone.StatusBar: void executeRunnableDismissingKeyguard(java.lang.Runnable,java.lang.Runnable,boolean,boolean,boolean)>
<com.android.systemui.qs.tiles.UserDetailItemView: void setDisabledByAdmin(boolean)>
<android.net.NetworkStackClient: void registerHealthListener(android.net.NetworkStackClient.NetworkStackHealthListener)>
<com.android.systemui.statusbar.notification.ActionListTransformState: void resetTransformedView()>
<com.android.systemui.keyguard.DismissCallbackRegistry: void notifyDismissSucceeded()>
<com.android.systemui.shared.recents.utilities.AppTrace: void count(java.lang.String,int)>
<com.android.server.policy.WindowManagerPolicy.WindowState: android.graphics.Rect getVisibleFrameLw()>
<javax.obex.ObexHelper: byte[] updateHeaderSet(javax.obex.HeaderSet,byte[])>
<com.android.server.NetworkScoreService: boolean requestScores(android.net.NetworkKey[])>
<com.android.server.policy.WindowManagerPolicy.WindowState: boolean isDrawnLw()>
<android.text.StaticLayoutPerfTest: void testCreate_RandomText_NoStyled_Greedy_Hyphenation()>
<com.android.server.CachedDeviceStateService: void <init>(android.content.Context)>
<com.android.systemui.shared.system.TaskStackChangeListeners: void onTaskRemoved(int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: int checkProvisioningPreCondition(java.lang.String,java.lang.String)>
<com.android.server.wallpaper.WallpaperManagerService: void setWallpaperComponent(android.content.ComponentName)>
<com.android.systemui.statusbar.notification.row.NotificationInlineImageResolver.ImageCache: android.graphics.drawable.Drawable get(android.net.Uri)>
<com.android.server.notification.NotificationRecord: boolean hasRecordedInterruption()>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.phone.StatusBarIconController.DarkIconManager: void onSetIcon(int,com.android.internal.statusbar.StatusBarIcon)>
<com.android.server.location.LocationBlacklist: void switchUser(int)>
<com.android.photos.SimpleBitmapRegionDecoder: int getWidth()>
<com.android.server.pm.Settings: void onVolumeForgotten(java.lang.String)>
<com.android.systemui.plugins.GlobalActionsPanelPlugin.PanelViewController: android.graphics.drawable.Drawable getBackgroundDrawable()>
<com.android.systemui.statusbar.phone.NavigationPrototypeController.OnPrototypeChangedListener: void onHomeButtonVisibilityChanged(boolean)>
<com.android.server.location.LocationProviderProxy: java.util.List getProviderPackages()>
<com.android.server.usb.descriptors.tree.UsbDescriptorsTreeNode: void shortReport(com.android.server.usb.descriptors.report.ReportCanvas)>
<com.android.systemui.statusbar.NotificationRemoteInputManager: boolean isNotificationKeptForRemoteInputHistory(java.lang.String)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: boolean shouldDelayChildPressedState()>
<com.android.systemui.statusbar.policy.SmartReplyView: com.android.systemui.statusbar.policy.SmartReplyView.LayoutParams generateLayoutParams(android.util.AttributeSet)>
<com.android.systemui.power.PowerUI.WarningsUI: void updateLowBatteryWarning()>
<com.android.systemui.statusbar.policy.KeyguardMonitor: void setLaunchTransitionFadingAway(boolean)>
<com.android.server.notification.VisibilityExtractor: void initialize(android.content.Context,com.android.server.notification.NotificationUsageStats)>
<com.android.uiautomator.core.UiDevice: void freezeRotation()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glBlendEquationSeparate(int,int)>
<com.android.keyguard.KeyguardAbsKeyInputView: boolean needsInput()>
<com.android.server.usb.descriptors.Usb10ASFormatI: byte getSubframeSize()>
<com.android.systemui.statusbar.notification.MessagingImageTransformState: void setStartActualWidth(int)>
<com.android.systemui.statusbar.notification.stack.ViewState: boolean isAnimatingY(android.view.View)>
<android.view.textclassifier.TextClassifierPerfTest: void testDetectLanguage()>
<com.android.server.usb.descriptors.UsbDescriptorParser: boolean hasOutput()>
<com.android.systemui.qs.QSFragment: void notifyCustomizeChanged()>
<com.android.server.NativeDaemonEvent: boolean isClassServerError()>
<com.android.server.pm.PackageManagerService: void freeStorageAndNotify(java.lang.String,long,int,android.content.pm.IPackageDataObserver)>
<com.google.android.startop.iorap.AppLaunchEvent.BaseWithActivityRecordData: boolean equals(java.lang.Object)>
<com.android.gallery3d.exif.ExifTag: void setHasDefinedCount(boolean)>
<com.android.systemui.pip.tv.PipMenuActivity: void onShowPipMenu()>
<com.android.keyguard.PasswordTextView: void deleteLastChar()>
<com.android.keyguard.SecurityMessageDisplay: void setMessage(int)>
<com.android.systemui.assist.ui.InvocationLightsView: void onInvocationProgress(float)>
<com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem: void terminateSystemAudioMode()>
<com.android.server.testing.shadows.ShadowInternalRecoveryServiceException: void __constructor__(java.lang.String)>
<com.android.server.pm.PackageInstallerService: com.android.server.pm.PackageInstallerSession getSession(int)>
<com.android.server.pm.PackageManagerService: void removePermission(java.lang.String)>
<com.android.server.LooperStatsService: void onShellCommand(java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ShellCallback,android.os.ResultReceiver)>
<com.android.systemui.recents.views.TaskStackView: void computeScroll()>
<android.media.MediaPlayer2.DrmPreparationInfo: java.util.Map getOptionalParameters()>
<javax.microedition.khronos.opengles.GL10: void glSampleCoveragex(int,boolean)>
<com.android.server.textservices.TextServicesManagerService: boolean isSpellCheckerEnabled(int)>
<com.android.gallery3d.common.Utils: int compare(long,long)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void clearDeviceOwner(java.lang.String)>
<com.android.systemui.statusbar.phone.StatusBar: void onHeadsUpUnPinned(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo resolveService(android.content.Intent,java.lang.String,int,int)>
<com.android.systemui.statusbar.phone.PanelBar: void onClosingFinished()>
<com.google.android.startop.iorap.IorapForwardingService: void <init>(android.content.Context)>
<com.android.systemui.qs.tiles.UserDetailView: com.android.systemui.qs.tiles.UserDetailView inflate(android.content.Context,android.view.ViewGroup,boolean)>
<com.android.systemui.statusbar.CommandQueue: void showWirelessChargingAnimation(int)>
<com.android.server.trust.TrustAgentWrapper: boolean isConnected()>
<com.android.systemui.qs.customize.TileAdapter: androidx.recyclerview.widget.GridLayoutManager.SpanSizeLookup getSizeLookup()>
<com.android.systemui.keyguard.KeyguardSliceProvider: void addPrimaryActionLocked(androidx.slice.builders.ListBuilder)>
<javax.microedition.khronos.egl.EGL10: java.lang.String eglQueryString(javax.microedition.khronos.egl.EGLDisplay,int)>
<com.android.systemui.qs.QSPanel: boolean isShowingCustomize()>
<com.android.systemui.statusbar.policy.KeyButtonDrawable: void setTranslationX(float)>
<com.android.settingslib.core.instrumentation.EventLogWriter: void visible(android.content.Context,int,int)>
<com.android.systemui.DependencyBinder: com.android.systemui.statusbar.policy.SensorPrivacyController provideSensorPrivacyControllerImpl(com.android.systemui.statusbar.policy.SensorPrivacyControllerImpl)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void onDetachedFromWindow()>
<com.android.keyguard.KeyguardSecurityCallback: void dismiss(boolean,int)>
<com.android.server.usb.descriptors.report.UsbStrings: java.lang.String getACInterfaceSubclassName(int)>
<com.android.statementservice.retriever.Relation: java.lang.String getKind()>
<com.android.systemui.statusbar.KeyguardIndicationController: com.android.keyguard.KeyguardUpdateMonitorCallback getKeyguardCallback()>
<com.android.settingslib.widget.AdaptiveIcon: android.graphics.drawable.Drawable.ConstantState getConstantState()>
<com.android.settingslib.volume.Util: java.lang.String playbackStateToString(android.media.session.PlaybackState)>
<com.android.server.pm.permission.PermissionSettings: com.android.server.pm.permission.BasePermission getPermission(java.lang.String)>
<com.android.systemui.recents.utilities.Utilities: java.lang.String dumpRect(android.graphics.Rect)>
<com.android.server.pm.UserManagerService: int getProfileParentId(int)>
<com.android.systemui.statusbar.notification.row.ExpandableView: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.statusbar.phone.NotificationIconAreaController: void <init>(android.content.Context,com.android.systemui.statusbar.phone.StatusBar,com.android.systemui.plugins.statusbar.StatusBarStateController,com.android.systemui.statusbar.NotificationMediaManager)>
<com.android.server.TelephonyRegistry: void notifyDataConnectionFailed(java.lang.String)>
<com.android.systemui.statusbar.policy.HotspotControllerImpl: void addCallback(android.os.Handler.Callback)>
<com.android.systemui.plugins.DarkIconDispatcher: void addDarkReceiver(com.android.systemui.plugins.DarkIconDispatcher.DarkReceiver)>
<com.android.systemui.analytics.DataCollector: void onAffordanceSwipingStarted(boolean)>
<com.android.server.notification.ManagedServices: int getBindFlags()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void generateHeadsUpAnimation(com.android.systemui.statusbar.notification.row.ExpandableNotificationRow,boolean)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setAccountManagementDisabled(android.content.ComponentName,java.lang.String,boolean)>
<com.android.server.biometrics.iris.IrisService: java.util.List getEnrolledTemplates(int)>
<com.android.systemui.statusbar.notification.ActivityLaunchAnimator.Callback: void onExpandAnimationTimedOut()>
<com.android.systemui.statusbar.notification.MediaNotificationProcessor: void <init>(android.content.Context,android.content.Context)>
<com.android.systemui.statusbar.phone.BarTransitions: boolean isLightsOut(int)>
<com.android.server.hdmi.HdmiControlService: void allocateLogicalAddress(java.util.ArrayList,int)>
<com.android.systemui.statusbar.policy.NetworkController.SignalCallback: void setMobileDataIndicators(com.android.systemui.statusbar.policy.NetworkController.IconState,com.android.systemui.statusbar.policy.NetworkController.IconState,int,int,boolean,boolean,java.lang.String,java.lang.String,boolean,int,boolean)>
<com.android.systemui.statusbar.ScalingDrawableWrapper: int getIntrinsicHeight()>
<com.android.systemui.statusbar.phone.NotificationGroupManager.OnGroupChangeListener: void onGroupRemoved(com.android.systemui.statusbar.phone.NotificationGroupManager.NotificationGroup,java.lang.String)>
<com.android.systemui.pip.tv.PipControlButtonView: void setText(java.lang.CharSequence)>
<com.android.systemui.statusbar.policy.SignalController: com.android.systemui.statusbar.policy.SignalController.State cleanState()>
<com.android.server.audio.AudioService: boolean isStreamAffectedByRingerMode(int)>
<com.android.systemui.appops.AppOpsController: java.util.List getActiveAppOps()>
<com.android.systemui.recents.views.AnimateableViewBounds: void setClipBottom(int)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: boolean isRowPinned()>
<com.android.packageinstaller.television.UninstallAppProgress: void onCreate(android.os.Bundle)>
<com.android.systemui.statusbar.phone.StatusBar: void onLaunchAnimationCancelled()>
<com.android.systemui.shared.system.ActivityManagerWrapper: boolean isScreenPinningActive()>
<com.android.systemui.volume.CarVolumeItemAdapter: com.android.systemui.volume.CarVolumeItem.CarVolumeItemViewHolder onCreateViewHolder(android.view.ViewGroup,int)>
<com.android.systemui.tuner.ShortcutParser: void <init>(android.content.Context,java.lang.String,java.lang.String,int)>
<com.android.systemui.recents.views.DockState: android.graphics.Rect getDockedBounds(int,int,int,android.graphics.Rect,android.content.res.Resources)>
<com.android.server.locksettings.LockSettingsService: void setSnapshotCreatedPendingIntent(android.app.PendingIntent)>
<com.android.settingslib.net.NetworkCycleDataLoader.Builder: com.android.settingslib.net.NetworkCycleDataLoader.Builder setCycles(java.util.ArrayList)>
<com.android.systemui.statusbar.notification.row.NotificationSnooze.NotificationSnoozeOption: android.view.accessibility.AccessibilityNodeInfo.AccessibilityAction getAccessibilityAction()>
<com.android.systemui.recents.events.activity.HideStackActionButtonEvent: void <init>(boolean)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setDimmed(boolean,boolean)>
<com.android.systemui.bubbles.BubbleStackView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.android.systemui.statusbar.policy.SensorPrivacyControllerImpl: void removeCallback(android.hardware.SensorPrivacyManager.OnSensorPrivacyChangedListener)>
<com.android.printservice.recommendation.util.PrinterHashMap: void clear()>
<com.android.systemui.statusbar.CrossFadeHelper: void fadeIn(android.view.View,long,int)>
<com.android.systemui.assist.AssistOrbView: void startExitAnimation(long)>
<com.android.server.webkit.SystemInterface: long getFactoryPackageVersion(java.lang.String)>
<com.android.printservice.recommendation.plugin.google.CloudPrintPlugin: void stop()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isMasterVolumeMuted(android.content.ComponentName)>
<com.android.systemui.recents.OverviewProxyService: void addCallback(com.android.systemui.recents.OverviewProxyService.OverviewProxyListener)>
<com.android.server.accounts.AccountManagerService: java.lang.String getPassword(android.accounts.Account)>
<com.android.server.hdmi.HdmiControlService: com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem audioSystem()>
<com.android.systemui.egg.MLand: void setupPlayers(int)>
<com.android.server.pm.PackageManagerService: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int,int)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: com.android.systemui.statusbar.phone.HeadsUpTouchHelper.Callback getHeadsUpCallback()>
<com.android.server.locksettings.LockSettingsService: void setLockCredential(byte[],int,byte[],int,int,boolean)>
<com.android.systemui.statusbar.StatusBarWifiView: java.lang.String toString()>
<com.android.server.pm.CrossProfileAppsServiceImpl.Injector: com.android.server.wm.ActivityTaskManagerInternal getActivityTaskManagerInternal()>
<com.android.preload.ui.IUI: com.android.ddmlib.Client getSelectedClient()>
<com.android.systemui.classifier.FalsingManagerImpl: void updateSessionActive()>
<com.android.systemui.statusbar.notification.row.NotificationContentInflater: void setUsesIncreasedHeadsUpHeight(boolean)>
<com.android.server.pm.UserManagerService: void clearSeedAccountData()>
<com.android.keyguard.PasswordTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.pm.PackageManagerServiceUtils: boolean isDowngradePermitted(int,int)>
<com.android.systemui.globalactions.GlobalActionsGridLayout: boolean shouldReverseListItems()>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void setIcon(java.lang.String,com.android.internal.statusbar.StatusBarIcon)>
<com.android.settingslib.applications.ApplicationsState.Session: void onResume()>
<com.android.settingslib.RestrictedLockUtils: com.android.settingslib.RestrictedLockUtils.EnforcedAdmin getProfileOrDeviceOwner(android.content.Context,android.os.UserHandle)>
<com.android.systemui.keyguard.KeyguardSliceProvider: void onDestroy()>
<com.android.settingslib.bluetooth.MapProfile: int getProfileId()>
<com.android.packageinstaller.wear.WearPackageInstallerService: void onCreate()>
<com.android.systemui.statusbar.phone.DarkIconDispatcherImpl: void setIconsDarkArea(android.graphics.Rect)>
<com.android.server.biometrics.fingerprint.FingerprintService: boolean hasEnrolledBiometrics(int)>
<com.android.server.policy.WindowManagerPolicy: void requestUserActivityNotification()>
<com.android.server.notification.NotificationRecord: int getNumSmartActionsAdded()>
<com.android.server.notification.ZenLog: void traceExitCondition(android.service.notification.Condition,android.content.ComponentName,java.lang.String)>
<com.android.server.statusbar.StatusBarManagerService: void setIcon(java.lang.String,java.lang.String,int,int,java.lang.String)>
<com.android.systemui.statusbar.NotificationListener: void onListenerConnected()>
<com.android.server.audio.AudioService: boolean isSpeakerphoneOn()>
<com.android.systemui.shared.system.InputChannelCompat: boolean mergeMotionEvent(android.view.MotionEvent,android.view.MotionEvent)>
<com.android.systemui.statusbar.phone.EdgeBackGestureHandler: void onNavBarDetached()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: android.view.View getNotificationIcon()>
<com.android.settingslib.bluetooth.PbapClientProfile: int getNameResource(android.bluetooth.BluetoothDevice)>
<com.android.systemui.classifier.FalsingManagerProxy: void onNotificationDoubleTap(boolean,float,float)>
<javax.microedition.khronos.opengles.GL11: void glTexParameterfv(int,int,java.nio.FloatBuffer)>
<com.android.systemui.statusbar.phone.LockIcon: void <init>(android.content.Context,android.util.AttributeSet,com.android.systemui.plugins.statusbar.StatusBarStateController,com.android.systemui.statusbar.policy.ConfigurationController,com.android.systemui.statusbar.policy.AccessibilityController,com.android.systemui.statusbar.policy.KeyguardMonitor,com.android.systemui.dock.DockManager,android.os.Handler)>
<com.android.server.pm.PackageInstallerSession: java.lang.String[] getNames()>
<com.android.server.content.SyncStorageEngine: android.content.SyncInfo addActiveSync(com.android.server.content.SyncManager.ActiveSyncContext)>
<com.android.server.notification.NotificationUsageStats.Aggregate: java.lang.String toString()>
<com.android.systemui.statusbar.phone.ButtonDispatcher: void setImageDrawable(com.android.systemui.statusbar.policy.KeyButtonDrawable)>
<com.android.systemui.statusbar.policy.SecurityControllerImpl: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<javax.microedition.khronos.opengles.GL11: void glBufferData(int,int,java.nio.Buffer,int)>
<com.android.server.pm.dex.ArtManagerService: void dumpProfiles(android.content.pm.PackageParser.Package)>
<android.media.MediaPlayer2: java.lang.Object setDisplay(android.view.SurfaceHolder)>
<com.android.systemui.tuner.BatteryPreference: void onDetached()>
<com.android.server.notification.NotificationRecord: void setSeenSmartReplies(boolean)>
<com.android.systemui.recents.views.DockState: android.graphics.Rect getDockedTaskStackBounds(android.graphics.Rect,int,int,int,android.graphics.Rect,com.android.systemui.recents.views.TaskStackLayoutAlgorithm,android.content.res.Resources,android.graphics.Rect)>
<com.android.systemui.shared.system.SystemGestureExclusionListenerCompat: void unregister()>
<com.android.server.accessibility.AbstractAccessibilityServiceConnection.SystemSupport: android.app.PendingIntent getPendingIntentActivity(android.content.Context,int,android.content.Intent,int)>
<com.android.systemui.recents.views.RecentsView: void reevaluateStyles()>
<com.android.server.locksettings.recoverablekeystore.PlatformKeyManager: int getGenerationId(int)>
<com.android.server.AppStateTracker: boolean areAlarmsRestricted(int,java.lang.String,boolean)>
<com.android.systemui.qs.tiles.NightDisplayTile: void onActivated(boolean)>
<com.android.server.TelephonyRegistry: void notifyCallStateForPhoneId(int,int,int,java.lang.String)>
<com.android.server.slice.SliceClientPermissions: com.android.server.slice.SliceClientPermissions.SliceAuthority getOrCreateAuthority(com.android.server.slice.SlicePermissionManager.PkgUser,com.android.server.slice.SlicePermissionManager.PkgUser)>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationHeaderViewWrapper: void setVisible(boolean)>
<com.android.systemui.statusbar.policy.MobileSignalController: boolean isEmergencyOnly()>
<com.android.systemui.settings.ToggleSliderView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.util.leak.GarbageMonitor.MemoryTile: java.lang.CharSequence getTileLabel()>
<com.android.server.notification.ZenModeExtractor: void initialize(android.content.Context,com.android.server.notification.NotificationUsageStats)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexGeni(int,int,int)>
<com.android.server.biometrics.AuthenticationClient: void onStop()>
<com.android.settingslib.bluetooth.PanProfile: boolean accessProfileEnabled()>
<javax.microedition.khronos.opengles.GL10: void glPointSize(float)>
<com.android.systemui.MultiListLayout.MultiListAdapter: boolean shouldBeSeparated(int)>
<com.android.gallery3d.glrenderer.UploadedTexture: android.graphics.Bitmap onGetBitmap()>
<com.android.systemui.statusbar.RemoteInputController: void addCallback(com.android.systemui.statusbar.RemoteInputController.Callback)>
<com.android.settingslib.wifi.AccessPoint: void saveWifiState(android.os.Bundle)>
<com.android.server.ConnectivityService: android.net.NetworkRequest getDefaultRequest()>
<com.android.server.usb.descriptors.Usb10ASFormatI: byte getSampleFreqType()>
<android.media.MediaPlayer2: java.lang.Object setSurface(android.view.Surface)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: void setAmbientPulsing(boolean)>
<com.android.systemui.statusbar.StatusBarMobileView: com.android.systemui.statusbar.StatusBarMobileView fromContext(android.content.Context,java.lang.String)>
<com.android.systemui.recents.views.DockState: boolean acceptsDrop(int,int,int,int,android.graphics.Rect,boolean)>
<com.android.systemui.statusbar.KeyguardIndicationController.BaseKeyguardCallback: void onUserUnlocked()>
<com.android.gallery3d.glrenderer.GLCanvas: void fillRect(float,float,float,float,int)>
<com.android.server.NetworkManagementService: void setMtu(java.lang.String,int)>
<com.android.keyguard.KeyguardPasswordView: boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent)>
<com.android.systemui.recents.views.TaskStackView: void onMeasure(int,int)>
<com.android.server.hdmi.HdmiCecLocalDevicePlayback: boolean handleSetSystemAudioMode(com.android.server.hdmi.HdmiCecMessage)>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationBigPictureTemplateViewWrapper: void onContentUpdated(com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<com.android.systemui.statusbar.StatusBarStateControllerImpl: boolean setIsDozing(boolean)>
<com.android.systemui.recents.views.TaskViewTransform: void applyToTaskView(com.android.systemui.recents.views.TaskView,java.util.ArrayList,com.android.systemui.recents.utilities.AnimationProps,boolean)>
<com.android.uiautomator.core.Configurator: long getActionAcknowledgmentTimeout()>
<com.android.systemui.plugins.OverlayPlugin.Callback: void onHoldStatusBarOpenChange()>
<com.android.localtransport.LocalTransport: int abortFullRestore()>
<com.android.systemui.statusbar.policy.HotspotController: boolean isHotspotTransient()>
<com.android.server.location.ContextHubService: int sendMessage(int,int,android.hardware.location.ContextHubMessage)>
<javax.microedition.khronos.opengles.GL10: void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)>
<android.media.CloseGuard.Tracker: void open(java.lang.Throwable)>
<com.android.systemui.statusbar.phone.StatusBarSignalPolicy.WifiIconState: com.android.systemui.statusbar.phone.StatusBarSignalPolicy.WifiIconState copy()>
<com.android.server.policy.WindowManagerPolicy: boolean isKeyguardSecure(int)>
<com.android.systemui.plugins.ClockPlugin: void onTimeZoneChanged(java.util.TimeZone)>
<com.android.server.inputmethod.InputMethodManagerService.Lifecycle: void onStart()>
<com.android.server.pm.PackageInstallerSession: boolean isMultiPackage()>
<com.android.server.notification.NotificationUsageStats.SingleNotificationStats: void onClick()>
<android.net.NetworkMonitorManager: boolean notifyPrivateDnsChanged(android.net.PrivateDnsConfigParcel)>
<com.android.systemui.statusbar.KeyguardAffordanceView: void setCircleRadius(float)>
<com.android.server.NetworkManagementService: void tetherLimitReached(android.net.ITetheringStatsProvider)>
<javax.microedition.khronos.opengles.GL11Ext: void glEnableClientState(int)>
<com.android.server.location.GnssNavigationMessageProvider: void <init>(android.content.Context,android.os.Handler)>
<com.android.systemui.statusbar.phone.HeadsUpManagerPhone: boolean isTrackingHeadsUp()>
<com.android.keyguard.NumPadKey: void onMeasure(int,int)>
<com.android.systemui.statusbar.policy.RemoteInputView: void setWrapper(com.android.systemui.statusbar.notification.row.wrapper.NotificationViewWrapper)>
<com.android.server.accessibility.AccessibilityManagerService: void registerUiTestAutomationService(android.os.IBinder,android.accessibilityservice.IAccessibilityServiceClient,android.accessibilityservice.AccessibilityServiceInfo,int)>
<com.android.location.provider.ActivityRecognitionProvider: void <init>(android.hardware.location.IActivityRecognitionHardware)>
<com.android.systemui.statusbar.notification.row.NotificationUndoLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.google.android.startop.iorap.PackageEvent: int describeContents()>
<com.android.server.NetworkScoreService.DispatchingContentObserver: void onChange(boolean)>
<com.android.server.notification.ManagedServices: void registerGuestService(com.android.server.notification.ManagedServices.ManagedServiceInfo)>
<com.android.systemui.ResizingSpace: void onMeasure(int,int)>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: void cancelAppearDrawing()>
<com.android.packageinstaller.television.UninstallAlertFragment: androidx.leanback.widget.GuidanceStylist.Guidance onCreateGuidance(android.os.Bundle)>
<com.android.systemui.statusbar.phone.DarkIconDispatcherImpl: void addDarkReceiver(android.widget.ImageView)>
<android.net.ip.IIpClientCallbacks: void installPacketFilter(byte[])>
<com.android.systemui.statusbar.policy.RemoteInputView: void setPendingIntent(android.app.PendingIntent)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isDeviceOwner(android.content.ComponentName,int)>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: void updateBackgroundClipping()>
<com.android.systemui.HardwareBgDrawable: int getOpacity()>
<com.google.android.startop.iorap.RequestId: int describeContents()>
<com.android.server.hdmi.HdmiCecController.NativeWrapper: void nativeClearLogicalAddress(long)>
<com.android.systemui.statusbar.phone.NotificationPanelView: float getPeekHeight()>
<com.android.statementservice.retriever.AssociationServiceException: void <init>(java.lang.String)>
<com.android.shell.BugreportProgressService: android.os.IBinder onBind(android.content.Intent)>
<com.android.gallery3d.exif.ExifInterface: byte[] getThumbnail()>
<com.android.server.utils.ManagedApplicationService: void disconnect()>
<com.android.systemui.qs.tiles.CastTile: void handleClick()>
<com.android.server.policy.PhoneWindowManager: void showRecentApps()>
<com.android.systemui.classifier.Point: void <init>(float,float,long)>
<com.android.server.inputmethod.InputMethodManagerService.Lifecycle: void onSwitchUser(int)>
<com.android.server.biometrics.BiometricService: void onStart()>
<com.android.systemui.RegionInterceptingFrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.server.pm.Policy: java.util.Set getSignatures()>
<com.android.systemui.qs.tileimpl.QSTileImpl: com.android.systemui.plugins.qs.QSTile.State getState()>
<com.android.server.usb.UsbAlsaDevice: int getCardNum()>
<com.android.keyguard.KeyguardSliceView: void onFinishInflate()>
<com.android.server.biometrics.LoggableMonitor: void logOnAuthenticated(android.content.Context,boolean,boolean,int,boolean)>
<com.android.server.appbinding.finders.CarrierMessagingClientServiceFinder: java.lang.String getAppDescription()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexGenxv(int,int,int[],int)>
<com.android.server.autofill.ui.FillUi.Callback: void requestShowFillUi(int,int,android.view.autofill.IAutofillWindowPresenter)>
<com.android.systemui.recents.views.AnimateableViewBounds: int getClipTop()>
<com.android.systemui.plugins.FalsingManager: void onScreenOnFromTouch()>
<javax.obex.ObexTransport: void listen()>
<com.android.settingslib.media.MediaManager: void dispatchDeviceRemoved(com.android.settingslib.media.MediaDevice)>
<android.net.ip.IpServer: int interfaceType()>
<com.android.systemui.statusbar.phone.PanelView: void notifyBarPanelExpansionChanged()>
<com.android.systemui.assist.ui.InvocationLightsView: void onFinishInflate()>
<com.android.systemui.statusbar.phone.StatusBarWindowView: void onShowingLaunchAffordanceChanged(boolean)>
<com.android.settingslib.RestrictedPreference: int getSecondTargetResId()>
<com.android.systemui.statusbar.policy.KeyButtonView: void sendEvent(int,int)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setOnHeightChangedListener(com.android.systemui.statusbar.notification.row.ExpandableView.OnHeightChangedListener)>
<com.android.systemui.statusbar.notification.row.NotificationBackgroundView: void setFirstInSection(boolean)>
<com.android.systemui.statusbar.phone.StatusBarWindowController: void setBackdropShowing(boolean)>
<com.android.systemui.assist.ui.InvocationLightsView: void updateDarkness(float)>
<com.android.server.audio.AudioEventLogger.StringEvent: void <init>(java.lang.String)>
<com.android.systemui.statusbar.policy.KeyButtonRipple: boolean onStateChange(int[])>
<com.android.settingslib.location.InjectedSetting.Builder: com.android.settingslib.location.InjectedSetting.Builder setIconId(int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean hasOverlappingRendering()>
<com.android.systemui.recents.views.TaskStackViewScroller: void setStackScroll(float)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: boolean disallowSingleClick(float,float)>
<com.android.systemui.qs.QuickStatusBarHeader: void onClick(android.view.View)>
<com.android.systemui.plugins.PluginInitializerImpl: void handleWtfs()>
<com.android.server.appop.AppOpsService: void removeUser(int)>
<com.android.server.broadcastradio.hal2.AnnouncementAggregator: void watchModule(com.android.server.broadcastradio.hal2.RadioModule,int[])>
<com.android.gallery3d.glrenderer.BitmapTexture: void <init>(android.graphics.Bitmap)>
<com.android.server.accessibility.MagnificationController: void persistScale()>
<com.android.systemui.recents.model.RecentsTaskLoadPlan: void preloadPlan(com.android.systemui.recents.model.RecentsTaskLoadPlan.PreloadOptions,com.android.systemui.recents.model.RecentsTaskLoader,int,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean setTimeZone(android.content.ComponentName,java.lang.String)>
<com.android.systemui.recents.views.RecentsView: void onMeasure(int,int)>
<com.android.server.trust.TrustManagerService: void onUnlockUser(int)>
<com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem: boolean isDirectConnectToTv()>
<com.android.systemui.classifier.brightline.BrightLineFalsingManager: void onTouchEvent(android.view.MotionEvent,int,int)>
<com.android.systemui.statusbar.notification.row.NotificationGuts.GutsContent: android.view.View getContentView()>
<com.android.server.usb.descriptors.Usb20ASFormatIIEx: int getSamplesPerFrame()>
<com.android.systemui.statusbar.phone.ContextualButton: boolean show()>
<com.android.server.utils.ManagedApplicationService: com.android.server.utils.ManagedApplicationService build(android.content.Context,android.content.ComponentName,int,int,java.lang.String,com.android.server.utils.ManagedApplicationService.BinderChecker,boolean,int,android.os.Handler,com.android.server.utils.ManagedApplicationService.EventCallback)>
<com.android.server.notification.ZenLog: void traceUnsubscribe(android.net.Uri,android.service.notification.IConditionProvider,android.os.RemoteException)>
<com.android.systemui.statusbar.car.CarFacetButton: int getDisplayId()>
<com.android.systemui.qs.QSPanel: void drawTile(com.android.systemui.qs.QSPanel.TileRecord,com.android.systemui.plugins.qs.QSTile.State)>
<com.android.server.notification.CriticalNotificationExtractor: void setZenHelper(com.android.server.notification.ZenModeHelper)>
<com.android.keyguard.KeyguardUpdateMonitor: void onFaceAuthenticated(int)>
<com.android.server.notification.ManagedServices: java.util.List getServices()>
<com.android.systemui.DessertCase: void onStart()>
<com.android.systemui.recents.misc.DozeTrigger: boolean isAsleep()>
<com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem: boolean handleGiveAudioStatus(com.android.server.hdmi.HdmiCecMessage)>
<com.android.gallery3d.glrenderer.GLCanvas: void drawLine(float,float,float,float,com.android.gallery3d.glrenderer.GLPaint)>
<com.android.systemui.classifier.FalsingManagerProxy: void dump(java.io.PrintWriter)>
<com.android.gallery3d.common.BitmapUtils: android.graphics.Bitmap resizeAndCropCenter(android.graphics.Bitmap,int,boolean)>
<com.android.settingslib.utils.AsyncLoaderCompat: void onCanceled(java.lang.Object)>
<android.net.IpMemoryStoreClient: void factoryReset()>
<com.android.settingslib.CustomEditTextPreference: android.app.Dialog getDialog()>
<com.android.server.notification.EventConditionProvider: void onDestroy()>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void showBouncerOrKeyguard(boolean)>
<com.android.server.display.color.ColorDisplayService.ColorDisplayServiceInternal: boolean setDisplayWhiteBalanceColorTemperature(int)>
<android.net.netlink.StructNdaCacheInfo: long lastUsed()>
<com.android.server.audio.AudioService: void startBluetoothSco(android.os.IBinder,int)>
<com.android.systemui.shared.system.TaskDescriptionCompat: int getBackgroundColor()>
<com.android.settingslib.animation.AppearAnimationUtils: void startAnimation(java.lang.Object[],java.lang.Runnable,com.android.settingslib.animation.AppearAnimationCreator)>
<com.android.settingslib.notification.EnableZenModeDialog: java.lang.String getTime(long,long)>
<com.android.systemui.qs.customize.TileAdapter: androidx.recyclerview.widget.RecyclerView.ItemDecoration getItemDecoration()>
<com.android.settingslib.fuelgauge.BatterySaverUtils: boolean maybeShowBatterySaverConfirmation(android.content.Context,android.os.Bundle)>
<com.android.server.display.BrightnessMappingStrategy: float getBrightness(float,java.lang.String,int)>
<com.android.server.pm.UserManagerService.LifeCycle: void onStart()>
<com.android.preload.ui.SequenceUI: com.android.ddmlib.Client getSelectedClient()>
<com.android.settingslib.wifi.AccessPointPreference: void <init>(com.android.settingslib.wifi.AccessPoint,android.content.Context,com.android.settingslib.wifi.AccessPointPreference.UserBadgeCache,boolean)>
<com.android.systemui.DependencyProvider: com.android.systemui.statusbar.policy.DataSaverController provideDataSaverController(com.android.systemui.statusbar.policy.NetworkController)>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: boolean isRadioOn()>
<com.android.uiautomator.core.UiAutomatorBridge: void setOnAccessibilityEventListener(android.app.UiAutomation.OnAccessibilityEventListener)>
<com.android.server.accessibility.AccessibilityManagerService: android.view.accessibility.IAccessibilityInteractionConnectionCallback replaceCallbackIfNeeded(android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,int,long)>
<com.android.localtransport.LocalTransport: void finishRestore()>
<com.android.commands.media.Media: void onShowUsage(java.io.PrintStream)>
<javax.obex.ClientSession: boolean isSrmSupported()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexGenx(int,int,int)>
<com.android.systemui.statusbar.phone.UserAvatarView: void setBadgeMargin(float)>
<com.android.systemui.tuner.ShortcutPicker: void onTuningChanged(java.lang.String,java.lang.String)>
<com.android.preload.actions.AbstractThreadedDeviceSpecificAction: void setDevice(com.android.ddmlib.IDevice)>
<com.android.server.input.InputManagerService: int getScanCodeState(int,int,int)>
<com.android.server.appop.AppOpsService: java.util.List getPackagesForOps(int[])>
<com.android.systemui.statusbar.NotificationPresenter: void onUpdateRowStates()>
<com.android.server.pm.permission.BasePermission: int[] computeGids(int)>
<com.android.systemui.statusbar.phone.StatusBar: void preloadRecentApps()>
<com.android.systemui.shared.system.TaskStackChangeListeners: void removeListener(com.android.systemui.shared.system.TaskStackChangeListener)>
<com.android.server.usb.descriptors.UsbACTerminal: int getTerminalType()>
<com.android.server.WallpaperUpdateReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.android.systemui.statusbar.phone.NotificationPanelView: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)>
<com.android.settingslib.Utils: int getColorAttrDefaultColor(android.content.Context,int)>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper: void reset(boolean)>
<com.android.server.location.GnssGeofenceProviderTest: void removeGeofence_restart_notAdded()>
<com.android.printspooler.model.RemotePrintDocument: void kill(java.lang.String)>
<com.android.printspooler.ui.PrintErrorFragment.OnActionListener: void onActionPerformed()>
<com.android.powermodel.component.ModemProfile.Builder: void setTxMa(float[])>
<com.android.externalstorage.TestDocumentsProvider: java.lang.String createDocument(java.lang.String,java.lang.String,java.lang.String)>
<com.android.settingslib.media.LocalMediaManager: void stopScan()>
<com.android.systemui.qs.tiles.WifiTile: com.android.systemui.plugins.qs.DetailAdapter createDetailAdapter()>
<com.android.server.uri.UriGrantsManagerInternal: com.android.server.uri.NeededUriGrants checkGrantUriPermissionFromIntent(int,java.lang.String,android.content.Intent,int,com.android.server.uri.NeededUriGrants,int)>
<com.android.systemui.qs.QSFooterImpl: void onDetachedFromWindow()>
<com.android.systemui.statusbar.notification.NotificationIconDozeHelper: void setImageDark(android.widget.ImageView,boolean,boolean,long,boolean)>
<com.android.systemui.tuner.ClipboardView: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.server.audio.AudioService: int getMode()>
<com.google.android.startop.iorap.AppLaunchEvent: void writeToParcelImpl(android.os.Parcel,int)>
<com.android.systemui.analytics.DataCollector: void onExpansionFromPulseStopped()>
<com.android.settingslib.animation.DisappearAnimationUtils: long calculateDelay(int,int)>
<com.android.systemui.shared.system.PackageManagerWrapper: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>
<com.android.server.appop.AppOpsService: int startOperation(android.os.IBinder,int,int,java.lang.String,boolean)>
<android.multiuser.BenchmarkRunner: android.os.Bundle getStatsToLog()>
<com.android.systemui.qs.external.CustomTile: android.content.ComponentName getComponent()>
<com.android.server.pm.PackageManagerService: int getInstallReason(java.lang.String,int)>
<com.android.printservice.recommendation.util.MDNSUtils: boolean isVendorPrinter(android.net.nsd.NsdServiceInfo,java.util.Set)>
<com.android.server.autofill.ui.AutoFillUI: void showSaveUi(java.lang.CharSequence,android.graphics.drawable.Drawable,java.lang.String,android.service.autofill.SaveInfo,android.service.autofill.ValueFinder,android.content.ComponentName,com.android.server.autofill.ui.AutoFillUI.AutoFillUiCallback,com.android.server.autofill.ui.PendingUi,boolean,boolean)>
<com.android.printservice.recommendation.util.Preconditions: int checkArgumentNonnegative(int)>
<com.android.systemui.recents.model.TaskStack: com.android.systemui.shared.recents.model.Task findTaskWithId(int)>
<com.android.systemui.egg.MLand: void L(java.lang.String,java.lang.Object[])>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setStartUserSessionMessage(android.content.ComponentName,java.lang.CharSequence)>
<com.android.systemui.classifier.SpeedAnglesClassifier: float getFalseTouchEvaluation(int,com.android.systemui.classifier.Stroke)>
<com.android.server.policy.WindowManagerPolicy.WindowState: boolean isDefaultDisplay()>
<com.android.server.biometrics.RemovalClient: int statsAction()>
<com.android.systemui.util.Utils.DisableStateTracker: void <init>(int,int)>
<com.android.systemui.statusbar.notification.TransformState: boolean transformScale(com.android.systemui.statusbar.notification.TransformState)>
<com.android.gallery3d.exif.ExifInterface: boolean isIfdAllowed(int,int)>
<com.android.server.pm.UserManagerService.LifeCycle: void onBootPhase(int)>
<com.android.systemui.statusbar.StatusBarWifiView: boolean isIconVisible()>
<com.android.systemui.volume.VolumeDialogComponent: com.android.systemui.plugins.VolumeDialog createDefault()>
<com.android.systemui.SwipeHelper: boolean isDismissGesture(android.view.MotionEvent)>
<com.android.settingslib.suggestions.SuggestionControllerMixinCompat: void onStart()>
<com.android.systemui.classifier.brightline.BrightLineFalsingManager: void setShowingAod(boolean)>
<com.android.printspooler.ui.PrintActivity: void onLoaderReset(android.content.Loader)>
<com.android.systemui.statusbar.phone.PanelView: void onExpandingStarted()>
<com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem: void onStandby(boolean,int)>
<com.android.systemui.statusbar.phone.HeadsUpTouchHelper: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.android.systemui.doze.DozeTriggers: void transitionTo(com.android.systemui.doze.DozeMachine.State,com.android.systemui.doze.DozeMachine.State)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isEphemeralUser(android.content.ComponentName)>
<com.android.systemui.recents.RecentsConfiguration: com.android.systemui.recents.RecentsActivityLaunchState getLaunchState()>
<com.android.systemui.qs.tileimpl.QSFactoryImpl: void setHost(com.android.systemui.qs.QSTileHost)>
<com.android.gallery3d.glrenderer.RawTexture: boolean onBind(com.android.gallery3d.glrenderer.GLCanvas)>
<com.android.systemui.statusbar.StatusBarWifiView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.systemui.statusbar.phone.ShadeController: void collapsePanel(boolean)>
<com.android.settingslib.net.UidDetailProvider: void <init>(android.content.Context)>
<com.android.printservice.recommendation.plugin.hp.HPRecommendationPlugin: boolean matchesCriteria(java.lang.String,android.net.nsd.NsdServiceInfo)>
<com.android.server.pm.PackageManagerService: java.lang.String getIncidentReportApproverPackageName()>
<com.android.server.hdmi.SelectRequestBuffer: void process()>
<com.android.statsd.loadtest.SequencePusher: void finish()>
<com.android.systemui.statusbar.NavigationBarController: void createNavigationBars(boolean,com.android.internal.statusbar.RegisterStatusBarResult)>
<javax.microedition.khronos.opengles.GL10: void glFrustumx(int,int,int,int,int,int)>
<com.android.server.NetworkScorerAppManager.SettingsFacade: java.lang.String getString(android.content.Context,java.lang.String)>
<com.android.server.usb.descriptors.UsbEndpointDescriptor: byte getSyncAddress()>
<com.android.systemui.bubbles.animation.StackAnimationController: void cancelStackPositionAnimations()>
<com.android.systemui.volume.VolumeToolTipView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.locksettings.LockSettingsService: void setRecoverySecretTypes(int[])>
<com.android.server.policy.WindowManagerPolicy.DisplayContentInfo: com.android.server.wm.DisplayRotation getDisplayRotation()>
<com.android.aapt.namespace.libtwo.TextView: java.lang.String getTextViewAttr()>
<com.android.printspooler.model.PrintSpoolerService.PrintSpooler: void setStatus(android.print.PrintJobId,java.lang.CharSequence)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void setContainingNotification(com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<com.android.systemui.statusbar.phone.HeadsUpAppearanceController: void destroy()>
<com.android.server.notification.NotificationShellCmd: int onCommand(java.lang.String)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: java.lang.String getName()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: android.view.NotificationHeaderView getVisibleNotificationHeader()>
<com.android.systemui.qs.tileimpl.QSIconViewImpl: void layout(android.view.View,int,int)>
<com.android.systemui.DependencyBinder: com.android.systemui.statusbar.policy.RotationLockController provideRotationLockController(com.android.systemui.statusbar.policy.RotationLockControllerImpl)>
<com.android.systemui.egg.MLand: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.notification.row.HybridNotificationView: void transformTo(com.android.systemui.statusbar.TransformableView,java.lang.Runnable)>
<com.android.systemui.statusbar.phone.PanelBar: void onPanelCollapsed()>
<com.android.systemui.recents.views.TaskStackView: void onStackTasksRemoved(com.android.systemui.recents.model.TaskStack)>
<com.android.server.ConnectivityService: byte[] getNetworkWatchlistConfigHash()>
<com.android.settingslib.widget.ActionButtonsPreference: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.media.MediaPlayer2.DrmEventCallback: void onDrmConfig(android.media.MediaPlayer2,android.media.DataSourceDesc,android.media.MediaDrm)>
<com.android.systemui.pip.phone.PipMenuActivityController: void showMenu(int,android.graphics.Rect,android.graphics.Rect,boolean,boolean)>
<com.android.uiautomator.core.Tracer: boolean isTracingEnabled()>
<com.android.server.audio.AudioService: void scheduleLoadSoundEffects()>
<com.android.systemui.statusbar.car.CarFacetButtonController: void <init>(android.content.Context)>
<com.android.settingslib.bluetooth.HidDeviceProfile: int getSummaryResourceForDevice(android.bluetooth.BluetoothDevice)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void onStartedWakingUp()>
<com.android.systemui.statusbar.phone.KeyguardStatusBarView: void onBatteryLevelChanged(int,boolean,boolean)>
<com.android.systemui.statusbar.phone.ButtonDispatcher: void setAccessibilityDelegate(android.view.View.AccessibilityDelegate)>
<com.android.server.stats.StatsCompanionService: android.os.StatsLogEventWrapper[] pullData(int)>
<com.android.printspooler.ui.AddPrinterActivity: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void updateClipping()>
<com.android.statsd.loadtest.MemoryDataRecorder: void onAlarm(android.content.Context)>
<com.android.keyguard.KeyguardAbsKeyInputView: int getPasswordTextViewId()>
<com.android.server.content.SyncStorageEngine: android.util.Pair getCopyOfAuthorityWithSyncStatus(com.android.server.content.SyncStorageEngine.EndPoint)>
<com.android.systemui.statusbar.phone.PanelView: float getOverExpansionPixels()>
<com.android.keyguard.clock.ClockOptionsProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<com.android.server.pm.UserManagerService: boolean isSameProfileGroup(int,int)>
<com.android.systemui.recents.misc.SystemServicesProxy: int getDeviceSmallestWidth()>
<com.android.systemui.classifier.brightline.BrightLineFalsingManager: void setQsExpanded(boolean)>
<com.android.systemui.plugins.qs.QSTile.SlashState: boolean equals(java.lang.Object)>
<com.android.server.pm.permission.PermissionManagerServiceInternal: void revokeRuntimePermission(java.lang.String,java.lang.String,boolean,int,com.android.server.pm.permission.PermissionManagerServiceInternal.PermissionCallback)>
<com.android.server.location.CountryDetectorBase: void setCountryListener(android.location.CountryListener)>
<com.android.systemui.SysUiServiceProvider: java.lang.Object getComponent(java.lang.Class)>
<com.android.systemui.statusbar.phone.NavigationBarFragment: int getA11yButtonState(boolean[])>
<com.android.mtp.ReceiverActivity: void onCreate(android.os.Bundle)>
<com.android.systemui.tuner.ClockPreference: void onAttached()>
<com.android.server.inputmethod.MultiClientInputMethodManagerService.Lifecycle: void <init>(android.content.Context)>
<com.android.settingslib.wifi.AccessPoint: java.lang.String getKey(android.net.wifi.WifiConfiguration)>
<com.android.systemui.qs.QSTileHost: void removeTile(android.content.ComponentName)>
<com.android.systemui.classifier.brightline.BrightLineFalsingManager: void onNotificatonStartDismissing()>
<android.media.MediaPlayer2: java.lang.Object pause()>
<com.android.systemui.statusbar.NotificationPresenter: boolean isPresenterLocked()>
<com.android.systemui.statusbar.notification.CustomInterpolatorTransformation: boolean hasCustomTransformation()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void expandWithoutQs()>
<com.android.keyguard.clock.ClockManager: void addOnClockChangedListener(com.android.keyguard.clock.ClockManager.ClockChangedListener)>
<com.android.systemui.statusbar.policy.NetworkController: void removeEmergencyListener(com.android.systemui.statusbar.policy.NetworkController.EmergencyListener)>
<com.android.systemui.statusbar.phone.FloatingRotationButton: void updateIcon()>
<com.android.uiautomator.core.UiCollection: int getChildCount(com.android.uiautomator.core.UiSelector)>
<com.android.settingslib.bluetooth.MapProfile: int getNameResource(android.bluetooth.BluetoothDevice)>
<com.android.systemui.qs.QSFragment: void setHasNotifications(boolean)>
<com.android.server.display.BrightnessMappingStrategy: boolean setLoggingEnabled(boolean)>
<com.android.systemui.biometrics.FaceDialogView: void <init>(android.content.Context,com.android.systemui.biometrics.DialogViewCallback)>
<com.android.systemui.recents.events.activity.LaunchTaskEvent: void <init>(com.android.systemui.recents.views.TaskView,com.android.systemui.shared.recents.model.Task,android.graphics.Rect,boolean,int,int)>
<com.android.server.wallpaper.WallpaperManagerService: void settingsRestored()>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView.OnActivatedListener: void onActivationReset(com.android.systemui.statusbar.notification.row.ActivatableNotificationView)>
<android.net.netlink.StructNlAttr: short makeNestedType(short)>
<com.android.gallery3d.glrenderer.BasicTexture: boolean hasBorder()>
<com.android.settingslib.media.MediaManager: void dispatchDeviceListAdded()>
<com.android.systemui.shared.system.TaskStackChangeListener: void onSizeCompatModeActivityChanged(int,android.os.IBinder)>
<com.android.photos.views.TiledImageRenderer: void setPosition(int,int,float)>
<com.android.server.Watchdog.OpenFdMonitor: com.android.server.Watchdog.OpenFdMonitor create()>
<com.android.server.VibratorService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.Prefs: void registerListener(android.content.Context,android.content.SharedPreferences.OnSharedPreferenceChangeListener)>
<com.android.server.voiceinteraction.VoiceInteractionManagerService: void onSwitchUser(int)>
<com.android.systemui.statusbar.phone.NavigationBarView: com.android.systemui.statusbar.policy.KeyButtonDrawable getHomeDrawable()>
<com.android.systemui.statusbar.notification.row.NotificationInlineImageResolver: void <init>(android.content.Context,com.android.systemui.statusbar.notification.row.NotificationInlineImageResolver.ImageCache)>
<com.android.server.accessibility.AccessibilityManagerService.UserState: void serviceDisconnectedLocked(com.android.server.accessibility.AccessibilityServiceConnection)>
<com.android.settingslib.widget.settingsspinner.SettingsSpinner: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: java.lang.CharSequence getUpdateMessage(android.content.Context)>
<com.android.systemui.classifier.PointerCountClassifier: void <init>(com.android.systemui.classifier.ClassifierData)>
<com.android.server.AppStateTracker: boolean isUidActiveSynced(int)>
<com.android.preload.ClientUtils: com.android.ddmlib.Client findClient(com.android.ddmlib.IDevice,java.lang.String,int,int)>
<com.android.server.policy.WakeGestureListener: void cancelWakeUpTrigger()>
<com.android.settingslib.DeviceInfoUtils: java.lang.String getSecurityPatch()>
<com.android.settingslib.RestrictedPreferenceHelper: void checkRestrictionAndSetDisabled(java.lang.String,int)>
<com.android.systemui.keyguard.ScreenLifecycle.Observer: void onScreenTurningOff()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void addVerticalTranslationListener(java.lang.Runnable)>
<com.android.systemui.charging.WirelessChargingAnimation.Callback: void onAnimationEnded()>
<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: void onParentHeightUpdate()>
<com.android.systemui.statusbar.car.UserGridRecyclerView.UserAdapter: void onBindViewHolder(com.android.systemui.statusbar.car.UserGridRecyclerView.UserAdapter.UserAdapterViewHolder,int)>
<com.android.server.pm.UserManagerService: boolean isManagedProfile(int)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void onDisplayRemoved(int)>
<com.android.systemui.statusbar.phone.StatusBarIconControllerImpl: void setIcon(int,com.android.systemui.statusbar.phone.StatusBarIconHolder)>
<com.android.systemui.statusbar.phone.StatusBarSignalPolicy: void onTuningChanged(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationViewWrapper: void setVisible(boolean)>
<com.android.systemui.stackdivider.ForcedResizableInfoActivityController: void notifyDockedStackExistsChanged(boolean)>
<com.android.systemui.plugins.FalsingManager: void onLeftAffordanceHintStarted()>
<com.android.server.display.color.ColorDisplayService: void onStopUser(int)>
<android.widget.EditTextBackspacePerfTest: java.util.Collection cases()>
<com.android.commands.sm.Sm: void runGetPrimaryStorageUuid()>
<android.graphics.perftests.PathPerfTest: void testIsConvex()>
<com.android.systemui.statusbar.notification.TransformState: void transformViewVerticalFrom(com.android.systemui.statusbar.notification.TransformState,com.android.systemui.statusbar.ViewTransformationHelper.CustomTransformation,float)>
<com.android.printservice.recommendation.plugin.hp.VendorInfo: void <init>(android.content.res.Resources,int)>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverySessionStorage.Entry: byte[] getVaultParams()>
<com.android.systemui.stackdivider.Divider: void onUndockingTask()>
<com.android.systemui.statusbar.notification.stack.AnimationProperties: android.animation.AnimatorListenerAdapter getAnimationFinishListener()>
<com.android.server.pm.ShortcutService: void removeAllDynamicShortcuts(java.lang.String,int)>
<com.android.server.infra.AbstractMasterSystemService: com.android.server.infra.AbstractPerUserSystemService peekServiceForUserLocked(int)>
<com.android.server.accessibility.EventStreamTransformation: void onMotionEvent(android.view.MotionEvent,android.view.MotionEvent,int)>
<javax.microedition.khronos.opengles.GL10: void glMultMatrixx(java.nio.IntBuffer)>
<android.net.ip.InterfaceController: void <init>(java.lang.String,android.net.INetd,android.net.util.SharedLog)>
<com.android.systemui.Dependency: void start()>
<com.android.server.NetworkManagementService: void registerObserver(android.net.INetworkManagementEventObserver)>
<com.android.systemui.tuner.TunerServiceImpl: void reregisterAll()>
<com.android.settingslib.bluetooth.HeadsetProfile: int getDrawableResource(android.bluetooth.BluetoothClass)>
<com.android.systemui.statusbar.NotificationLockscreenUserManager: void setLockscreenPublicMode(boolean,int)>
<com.android.server.accessibility.AccessibilityManagerService.Lifecycle: void onBootPhase(int)>
<com.android.systemui.statusbar.StatusBarIconView: float getIconScale()>
<com.android.server.display.whitebalance.DisplayWhiteBalanceController: void updateAmbientColorTemperature()>
<com.android.settingslib.suggestions.SuggestionLoaderCompat: java.util.List loadInBackground()>
<com.android.systemui.shared.system.ContextCompat: int getUserId()>
<com.android.systemui.media.NotificationPlayer: void setUsesWakeLock(android.content.Context)>
<com.android.commands.hid.Event: byte[] getReport()>
<com.android.server.pm.permission.BasePermission: boolean isPrivileged()>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void launchCamera(java.lang.String)>
<com.android.systemui.biometrics.BiometricDialogView: boolean requiresConfirmation()>
<com.android.server.appprediction.RemoteAppPredictionService.RemoteAppPredictionServiceCallbacks: void onFailureOrTimeout(boolean)>
<android.media.Media2HTTPConnection: boolean connect(java.lang.String,java.lang.String)>
<com.android.server.pm.PackageManagerService: java.lang.String[] getUnsuspendablePackagesForUser(java.lang.String[],int)>
<com.android.server.input.InputManagerService: android.view.InputChannel monitorInput(java.lang.String,int)>
<com.android.systemui.statusbar.policy.KeyButtonDrawable: com.android.systemui.statusbar.policy.KeyButtonDrawable create(android.content.Context,int,boolean,android.graphics.Color)>
<javax.microedition.khronos.egl.EGL10: boolean eglQuerySurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,int,int[])>
<com.android.gallery3d.glrenderer.BasicTexture: void <init>(com.android.gallery3d.glrenderer.GLCanvas,int,int)>
<com.android.server.storage.CacheQuotaStrategy: void <init>(android.content.Context,android.app.usage.UsageStatsManagerInternal,com.android.server.pm.Installer,android.util.ArrayMap)>
<com.android.systemui.tuner.ShortcutParser: void <init>(android.content.Context,android.content.ComponentName)>
<com.android.server.pm.PackageManagerService: android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName,int,int)>
<com.android.settingslib.core.instrumentation.MetricsFeatureProvider: void action(android.content.Context,int,int)>
<com.android.settingslib.media.LocalMediaManager.DeviceCallback: void onDeviceListUpdate(java.util.List)>
<com.android.systemui.statusbar.ScrimView: void setColors(com.android.internal.colorextraction.ColorExtractor.GradientColors,boolean)>
<com.android.systemui.classifier.AccelerationClassifier: java.lang.String getTag()>
<com.android.server.pm.PackageDexOptimizer.ForcedUpdatePackageDexOptimizer: int adjustDexoptNeeded(int)>
<com.android.systemui.statusbar.phone.StatusBarWindowView: void onAttachedToWindow()>
<android.media.Session2CommandGroup.Builder: android.media.Session2CommandGroup.Builder removeCommand(android.media.Session2Command)>
<com.android.server.media.MediaSessionService: void onMediaButtonReceiverChanged(com.android.server.media.MediaSessionRecord)>
<com.android.settingslib.net.NetworkCycleChartData.Builder: com.android.settingslib.net.NetworkCycleChartData getObject()>
<com.android.server.NetworkManagementService: void addVpnUidRanges(int,android.net.UidRange[])>
<com.android.packageinstaller.InstallStart: void onCreate(android.os.Bundle)>
<com.android.settingslib.net.NetworkStatsSummaryLoader.Builder: com.android.settingslib.net.NetworkStatsSummaryLoader.Builder setStartTime(long)>
<com.android.server.audio.MediaFocusControl: int requestAudioFocus(android.media.AudioAttributes,int,android.os.IBinder,android.media.IAudioFocusDispatcher,java.lang.String,java.lang.String,int,int,boolean)>
<com.android.systemui.statusbar.notification.row.HybridNotificationView: void bind(java.lang.CharSequence)>
<com.android.systemui.statusbar.phone.StatusBar: boolean isDozing()>
<com.android.systemui.statusbar.policy.AccessibilityManagerWrapper: void removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager.AccessibilityStateChangeListener)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setIsFullWidth(boolean)>
<com.android.systemui.recents.views.TaskViewHeader: void setNoUserInteractionState()>
<com.android.settingslib.development.AbstractLogpersistPreferenceController: boolean onPreferenceChange(androidx.preference.Preference,java.lang.Object)>
<com.android.server.notification.ZenModeHelper: void applyRestrictions()>
<com.android.printservice.recommendation.util.Preconditions: void checkArgument(boolean,java.lang.Object)>
<com.android.systemui.statusbar.phone.NotificationGroupManager: boolean isSummaryOfSuppressedGroup(android.service.notification.StatusBarNotification)>
<com.android.systemui.doze.DozeLog: void traceDozing(android.content.Context,boolean)>
<javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLSurface eglGetCurrentSurface(int)>
<com.android.server.NativeDaemonConnectorException: void <init>(java.lang.String,com.android.server.NativeDaemonEvent)>
<com.android.systemui.statusbar.NotificationLockscreenUserManagerImpl: boolean isCurrentProfile(int)>
<com.android.systemui.statusbar.notification.stack.AmbientState: boolean isDarkAtAll()>
<com.android.systemui.classifier.FalsingManagerProxy: void onBouncerShown()>
<com.android.server.AppStateTracker: boolean isUidActive(int)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void onExpansionStarted()>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: com.android.systemui.recents.views.TaskViewTransform getStackTransform(com.android.systemui.shared.recents.model.Task,float,int,com.android.systemui.recents.views.TaskViewTransform,com.android.systemui.recents.views.TaskViewTransform,boolean,boolean)>
<com.android.systemui.qs.QSPanel: void onMeasure(int,int)>
<com.android.server.pm.PackageManagerService: void notifyPackageRemoved(java.lang.String,int)>
<com.android.server.policy.BurnInProtectionHelper: void onDisplayAdded(int)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onClockVisibilityChanged()>
<com.android.systemui.BatteryMeterView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.gallery3d.common.Utils: void closeSilently(android.database.Cursor)>
<com.android.server.IpSecService: void removeAddressFromTunnelInterface(int,android.net.LinkAddress,java.lang.String)>
<com.android.uiautomator.core.UiScrollable: boolean scrollToBeginning(int,int)>
<android.perftests.SystemPerfTest: void testJniArrayBasicAccess()>
<com.android.systemui.ActivityIntentHelper: boolean wouldLaunchResolverActivity(android.content.pm.ResolveInfo,java.util.List)>
<com.android.systemui.plugins.qs.QSTile.BooleanState: java.lang.StringBuilder toStringBuilder()>
<javax.obex.HeaderSet: int[] getHeaderList()>
<com.android.server.locksettings.LockSettingsService: com.android.internal.widget.VerifyCredentialResponse checkCredential(byte[],int,int,com.android.internal.widget.ICheckCredentialProgressCallback)>
<com.android.server.pm.Settings: android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentityLPw()>
<com.android.settingslib.wifi.AccessPoint: int hashCode()>
<com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer: boolean pointInView(float,float,float)>
<com.android.localtransport.LocalTransport: void <init>(android.content.Context,com.android.localtransport.LocalTransportParameters)>
<com.android.commands.svc.Svc.Command: void <init>(java.lang.String)>
<com.android.server.media.MediaResourceMonitorService: void onStart()>
<javax.obex.HeaderSet: java.lang.Object getHeader(int)>
<com.android.systemui.analytics.DataCollector: void onBouncerShown()>
<com.android.server.timedetector.TimeDetectorService.Lifecycle: void onStart()>
<com.android.systemui.qs.tileimpl.QSTileImpl.ResourceIcon: boolean equals(java.lang.Object)>
<com.android.systemui.classifier.Classifier: java.lang.String getTag()>
<com.android.preload.Main: com.android.preload.ui.IUI getUI()>
<android.net.ip.IIpClientCallbacks: void onLinkPropertiesChange(android.net.LinkProperties)>
<com.android.server.LocationManagerService: boolean isProviderPackage(java.lang.String)>
<com.android.server.usb.descriptors.Usb20ACInputTerminal: int getControls()>
<com.android.server.input.InputManagerService: void monitor()>
<com.android.systemui.statusbar.phone.PanelView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.SensorPrivacyService: void <init>(android.content.Context)>
<com.android.systemui.tuner.TunerSwitch: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.settings.BrightnessController: void onInit(com.android.systemui.settings.ToggleSlider)>
<com.android.systemui.statusbar.phone.StatusBar: boolean interceptTouchEvent(android.view.MotionEvent)>
<android.widget.EditTextBackspacePerfTest: void <init>(java.lang.String,java.lang.String,int)>
<com.android.systemui.plugins.qs.QSTile: com.android.systemui.plugins.qs.QSTile.State getState()>
<com.android.server.testing.shadows.ShadowSlog: int wtfStack(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void setIconsVisible(boolean)>
<com.android.systemui.recents.RecentsImplementation: void hideRecentApps(boolean,boolean)>
<com.android.server.biometrics.EnrollClient: boolean onError(long,int,int)>
<com.android.uiautomator.core.UiDevice: boolean drag(int,int,int,int,int)>
<com.android.systemui.statusbar.ScrimView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.os.ParcelPerfTest: void timeReadByte()>
<com.android.keyguard.clock.DefaultClockController: java.lang.String getTitle()>
<com.android.systemui.statusbar.phone.PhoneStatusBarView: void updateResources()>
<android.os.BinderCallsStatsPerfTest: void timeCallSession()>
<com.android.server.appprediction.AppPredictionManagerService: void <init>(android.content.Context)>
<com.android.systemui.statusbar.notification.stack.AmbientState: void setExpandingNotification(com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<com.android.server.notification.BadgeExtractor: com.android.server.notification.RankingReconsideration process(com.android.server.notification.NotificationRecord)>
<com.google.android.startop.iorap.SystemServiceEvent: void <init>(int)>
<com.android.systemui.qs.touch.SwipeDetector.Listener: void onDragEnd(float,boolean)>
<com.android.systemui.shared.plugins.PluginInstanceManager.PluginContextWrapper: java.lang.ClassLoader getClassLoader()>
<com.android.server.audio.AudioService: java.util.List getAudioVolumeGroups()>
<com.android.server.biometrics.EnumerateClient: int start()>
<com.android.systemui.stackdivider.DividerView: android.graphics.Rect getNonMinimizedSplitScreenSecondaryBounds()>
<com.android.systemui.recents.RecentsActivity: void onCreate(android.os.Bundle)>
<com.android.keyguard.KeyguardSecurityContainer: void onResume(int)>
<com.android.settingslib.inputmethod.InputMethodSettingValuesWrapper: java.util.List getInputMethodList()>
<com.android.systemui.Dependency: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.statusbar.phone.RotationButton: void setRotationButtonController(com.android.systemui.statusbar.phone.RotationButtonController)>
<com.android.keyguard.KeyguardUpdateMonitor: void setSwitchingUser(boolean)>
<com.android.server.location.LocationPermissionUtil: boolean doesCallerReportToAppOps(android.content.Context,com.android.server.location.CallerIdentity)>
<com.android.systemui.globalactions.GlobalActionsDialog: void onShow(android.content.DialogInterface)>
<com.android.server.content.SyncOperation: void <init>(com.android.server.content.SyncOperation,long,long)>
<com.android.bluetoothmidiservice.BluetoothPacketDecoder: void <init>(int)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: boolean dispatchTouchEvent(android.view.MotionEvent)>
<com.android.server.policy.PhoneWindowManager: boolean canBeHiddenByKeyguardLw(com.android.server.policy.WindowManagerPolicy.WindowState)>
<android.net.ipmemorystore.Status: java.lang.String toString()>
<com.android.settingslib.applications.ApplicationsState: void requestSize(java.lang.String,int)>
<com.android.server.CountryDetectorService: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.ManagedProfileControllerImpl: boolean hasActiveProfile()>
<com.android.server.broadcastradio.hal2.Utils.VoidFuncThrowingRemoteException: void exec()>
<com.android.server.UpdateLockService: void releaseUpdateLock(android.os.IBinder)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setScrimController(com.android.systemui.statusbar.phone.ScrimController)>
<com.android.server.IpSecService: void applyTransportModeTransform(android.os.ParcelFileDescriptor,int,int)>
<com.example.android.networkusage.NetworkActivity.NetworkReceiver: void onReceive(android.content.Context,android.content.Intent)>
<android.widget.TextViewPrecomputedTextPerfTest: void testOnDraw_PrecomputedText_Selectable()>
<com.android.systemui.statusbar.car.CarFacetButtonController: void addFacetButton(com.android.systemui.statusbar.car.CarFacetButton)>
<com.android.systemui.qs.car.CarQSFragment: void animateHeaderSlidingOut()>
<com.android.systemui.classifier.EndPointRatioClassifier: float getFalseTouchEvaluation(int,com.android.systemui.classifier.Stroke)>
<com.android.settingslib.volume.Util: java.lang.String audioManagerFlagsToString(int)>
<com.android.systemui.globalactions.GlobalActionsColumnLayout: float getGridItemSize()>
<com.android.keyguard.KeyguardSecurityViewFlipper: void onPause()>
<com.android.systemui.statusbar.phone.NavigationBarView: com.android.systemui.statusbar.phone.NavigationBarTransitions getBarTransitions()>
<com.android.systemui.statusbar.policy.RotationLockController: void setRotationLocked(boolean)>
<com.android.settingslib.wifi.AccessPoint: java.lang.String getKey(java.lang.String)>
<com.android.systemui.qs.QuickStatusBarHeader: void onZenChanged(int)>
<com.android.statementservice.retriever.WebContent: java.lang.Long getExpireTimeMillis()>
<com.android.systemui.statusbar.phone.HeadsUpAppearanceController: void <init>(com.android.systemui.statusbar.phone.NotificationIconAreaController,com.android.systemui.statusbar.phone.HeadsUpManagerPhone,android.view.View)>
<com.android.systemui.statusbar.phone.StatusBarWindowView.LayoutParams: void <init>(int,int)>
<com.android.keyguard.clock.BubbleClockController: java.lang.String getName()>
<com.android.systemui.classifier.brightline.TimeLimitedMotionEventBuffer: boolean isEmpty()>
<com.android.systemui.statusbar.policy.RemoteInputView: com.android.systemui.statusbar.policy.RemoteInputView inflate(android.content.Context,android.view.ViewGroup,com.android.systemui.statusbar.notification.collection.NotificationEntry,com.android.systemui.statusbar.RemoteInputController)>
<android.media.MediaPlayer2: java.lang.Object setNextDataSource(android.media.DataSourceDesc)>
<com.android.printspooler.util.MediaSizeUtils.MediaSizeComparator: void <init>(android.content.Context)>
<com.android.settingslib.wifi.TestAccessPointBuilder: com.android.settingslib.wifi.TestAccessPointBuilder setRssi(int)>
<com.android.preload.actions.ComputeThresholdAction: void actionPerformed(java.awt.event.ActionEvent)>
<android.net.NetworkStackClient: void init()>
<com.android.server.pm.Installer: void moveAb(java.lang.String,java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.policy.SecurityController: boolean isNetworkLoggingEnabled()>
<com.android.printservice.recommendation.plugin.mopria.MopriaRecommendationPlugin: void <init>(android.content.Context)>
<com.android.server.notification.ScheduleConditionProvider: android.service.notification.IConditionProvider asInterface()>
<com.android.server.textclassifier.TextClassificationManagerService: void onTextClassifierEvent(android.view.textclassifier.TextClassificationSessionId,android.view.textclassifier.TextClassifierEvent)>
<com.android.systemui.statusbar.phone.StatusBarWindowView: void onDraw(android.graphics.Canvas)>
<com.android.systemui.qs.PagedTileLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.policy.AccessibilityManagerWrapper: void addCallback(android.view.accessibility.AccessibilityManager.AccessibilityServicesStateChangeListener)>
<com.android.settingslib.RestrictedLockUtilsInternal: boolean isAdminInCurrentUserOrProfile(android.content.Context,android.content.ComponentName)>
<com.android.server.utils.UserTokenWatcher: void dump(java.io.PrintWriter)>
<com.android.systemui.statusbar.phone.DoubleTapHelper.DoubleTapListener: boolean onDoubleTap()>
<com.android.uiautomator.core.UiScrollable: com.android.uiautomator.core.UiScrollable setSwipeDeadZonePercentage(double)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: boolean isBouncerShowing()>
<com.android.commands.hid.Event: int getId()>
<com.android.systemui.statusbar.phone.StatusIconContainer: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.statusbar.policy.DeviceProvisionedControllerImpl: void addCallback(com.android.systemui.statusbar.policy.DeviceProvisionedController.DeviceProvisionedListener)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void inflateFooterView()>
<com.android.systemui.statusbar.phone.ScrimController.Callback: void onStart()>
<com.android.systemui.keyguard.KeyguardViewMediator: void userActivity()>
<com.android.server.pm.PackageManagerService: boolean isPackageAvailable(java.lang.String,int)>
<com.android.systemui.statusbar.ScalingDrawableWrapper: int getIntrinsicWidth()>
<com.android.packageinstaller.InstallStaging: void onCreate(android.os.Bundle)>
<com.android.systemui.statusbar.policy.UserSwitcherController: void startActivity(android.content.Intent)>
<android.view.autofill.AbstractAutofillPerfTestCase: void setService()>
<com.android.systemui.statusbar.policy.ExtensionControllerImpl.Item: int sortOrder()>
<com.android.systemui.globalactions.GlobalActionsLayout: android.view.View getWrapper()>
<android.media.MediaPlayer2.DrmEventCallback: byte[] onDrmKeyRequest(android.media.MediaPlayer2,android.media.DataSourceDesc,android.media.MediaDrm.KeyRequest)>
<com.android.systemui.recents.views.RecentsView: void onDrawForeground(android.graphics.Canvas)>
<com.android.server.pm.PackageSender: void notifyPackageChanged(java.lang.String,int)>
<com.android.systemui.shared.plugins.PluginManager: com.android.systemui.plugins.Plugin getOneShotPlugin(java.lang.Class)>
<javax.microedition.khronos.opengles.GL10: void glBlendFunc(int,int)>
<com.android.printspooler.ui.AddPrinterActivity: void onCreate(android.os.Bundle)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setShouldShowShelfOnly(boolean)>
<com.android.systemui.keyguard.KeyguardViewMediator: com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager registerStatusBar(com.android.systemui.statusbar.phone.StatusBar,android.view.ViewGroup,com.android.systemui.statusbar.phone.NotificationPanelView,com.android.systemui.statusbar.phone.BiometricUnlockController,android.view.ViewGroup)>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: int getBackgroundColorWithoutTint()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: int getPositionInLinearLayout(android.view.View)>
<com.android.settingslib.CustomDialogPreference.CustomPreferenceDialogFragment: android.app.Dialog onCreateDialog(android.os.Bundle)>
<com.android.uiautomator.core.UiObject: boolean swipeRight(int)>
<com.android.systemui.recents.views.RecentsView: void launchTaskFromRecents(com.android.systemui.recents.model.TaskStack,com.android.systemui.shared.recents.model.Task,com.android.systemui.recents.views.TaskStackView,com.android.systemui.recents.views.TaskView,boolean,int,int)>
<com.android.gallery3d.exif.ExifInterface: int[] getTagDefinitionsForTagId(short)>
<com.android.keyguard.KeyguardSliceView: void refresh()>
<javax.microedition.khronos.egl.EGL10: boolean eglSwapBuffers(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface)>
<com.android.systemui.statusbar.phone.StatusBar: void clearNotificationEffects()>
<com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.MagnificationController getMagnificationController()>
<com.android.server.notification.NotificationRecord: int getAssistantImportance()>
<com.android.systemui.qs.QSFooter: void setExpanded(boolean)>
<com.android.server.biometrics.ClientMonitor: boolean getIsRestricted()>
<com.android.server.ConnectivityService: void unregisterTetheringEventCallback(android.net.ITetheringEventCallback,java.lang.String)>
<com.android.server.display.DisplayModeDirector: void start()>
<com.android.systemui.volume.VolumeDialogControllerImpl: int getAudioManagerStreamVolume(int)>
<com.android.settingslib.widget.BarChartInfo.Builder: com.android.settingslib.widget.BarChartInfo.Builder addBarViewInfo(com.android.settingslib.widget.BarViewInfo)>
<com.android.server.GraphicsStatsService: void <init>(android.content.Context)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: android.view.View getAmbientChild()>
<com.android.server.PackageWatchdog.PackageHealthObserver: java.lang.String getName()>
<com.android.systemui.plugins.qs.QS: void setHasNotifications(boolean)>
<com.android.systemui.statusbar.notification.TransformState: void transformViewFrom(com.android.systemui.statusbar.notification.TransformState,float)>
<com.android.systemui.plugins.qs.QSTile: com.android.systemui.plugins.qs.QSIconView createTileView(android.content.Context)>
<com.android.systemui.qs.car.CarQSFragment: android.view.View getHeader()>
<com.android.systemui.statusbar.StatusBarIconView: boolean isIconBlocked()>
<com.android.server.notification.NotificationRecord: android.metrics.LogMaker getItemLogMaker()>
<com.android.server.pm.DumpState: void setOptionEnabled(int)>
<android.database.SQLiteDatabasePerfTest: void testInnerJoin()>
<android.text.TextViewSetTextMeasurePerfTest: void timeDraw()>
<com.android.server.notification.NotificationManagerService.NotificationListeners: int getOnNotificationPostedTrim(com.android.server.notification.ManagedServices.ManagedServiceInfo)>
<com.android.server.statusbar.StatusBarManagerService: com.android.internal.statusbar.RegisterStatusBarResult registerStatusBar(com.android.internal.statusbar.IStatusBar)>
<com.android.server.slice.SliceFullAccessList: boolean hasFullAccess(java.lang.String,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean approveCaCert(java.lang.String,int,boolean)>
<com.android.systemui.qs.tiles.UserDetailView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.plugins.ActivityStarter: void startActivity(android.content.Intent,boolean,boolean)>
<com.android.server.pm.PackageInstallerService: void installExistingPackage(java.lang.String,int,int,android.content.IntentSender,int,java.util.List)>
<com.android.server.statusbar.StatusBarManagerService: void onNotificationError(java.lang.String,java.lang.String,int,int,int,java.lang.String,int)>
<com.android.systemui.statusbar.phone.PanelView: boolean isTracking()>
<com.android.systemui.statusbar.phone.KeyguardStatusBarView: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.doze.DozeSensors: void requestTemporaryDisable()>
<com.android.systemui.statusbar.CastDrawable: void applyTheme(android.content.res.Resources.Theme)>
<com.android.settingslib.CustomEditTextPreference: void onPrepareDialogBuilder(android.app.AlertDialog.Builder,android.content.DialogInterface.OnClickListener)>
<com.android.server.pm.permission.PermissionsState: int grantRuntimePermission(com.android.server.pm.permission.BasePermission,int)>
<com.android.settingslib.volume.Util: java.lang.String playbackStateStateToString(int)>
<com.android.server.DeviceIdleController.Constants: void onChange(boolean,android.net.Uri)>
<com.android.printservice.recommendation.plugin.hp.ServiceRecommendationPlugin: int getName()>
<com.android.systemui.statusbar.policy.ExtensionController.ExtensionBuilder: com.android.systemui.statusbar.policy.ExtensionController.ExtensionBuilder withCallback(java.util.function.Consumer)>
<com.android.systemui.analytics.SensorLoggerSession: void end(long,int)>
<com.android.server.appop.AppOpsService: java.util.List getOpsForPackage(int,java.lang.String,int[])>
<com.android.systemui.qs.tiles.IntentTile: com.android.systemui.plugins.qs.QSTile.State newTileState()>
<com.android.settingslib.applications.ServiceListing.Builder: com.android.settingslib.applications.ServiceListing build()>
<com.android.printspooler.model.PrintSpoolerService: void createPrintJob(android.print.PrintJobInfo)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: com.android.settingslib.bluetooth.CachedBluetoothDevice getSubDevice()>
<com.android.printspooler.widget.PreviewPageFrame: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<com.android.server.slice.SliceClientPermissions: boolean hasPermission(android.net.Uri,int)>
<javax.obex.Operation: void sendHeaders(javax.obex.HeaderSet)>
<com.android.server.audio.RecordingActivityMonitor: void recorderEvent(int,int)>
<com.android.server.appbinding.finders.AppServiceFinder: void dump(java.lang.String,java.io.PrintWriter)>
<com.android.settingslib.location.SettingsInjector.ServiceSettingClickedListener: boolean onPreferenceClick(androidx.preference.Preference)>
<com.android.systemui.statusbar.phone.SettingsButton: boolean isTunerClick()>
<com.android.companiondevicemanager.DeviceDiscoveryService: boolean onUnbind(android.content.Intent)>
<com.android.systemui.power.PowerUI.WarningsUI: void showThermalShutdownWarning()>
<com.android.systemui.qs.QSDetail: void setQsPanel(com.android.systemui.qs.QSPanel,com.android.systemui.qs.QuickStatusBarHeader,android.view.View)>
<com.android.systemui.shared.system.RemoteAnimationAdapterCompat: void <init>(com.android.systemui.shared.system.RemoteAnimationRunnerCompat,long,long)>
<com.android.server.pm.PackageManagerService: android.content.ComponentName getInstantAppInstallerComponent()>
<com.android.systemui.statusbar.policy.UserSwitcherController: void exitGuest(int,int)>
<android.text.PrecomputedTextPerfTest: void setUp()>
<com.android.server.policy.WindowManagerPolicy.WindowState: com.android.server.wm.WindowFrames getWindowFrames()>
<com.android.server.biometrics.face.FaceService: int statsModality()>
<com.android.server.locksettings.recoverablekeystore.serialization.KeyChainSnapshotParserException: void <init>(java.lang.String,java.lang.Throwable)>
<com.android.systemui.statusbar.notification.row.ExpandableOutlineView: android.graphics.Path getCustomClipPath(android.view.View)>
<com.android.systemui.statusbar.car.CarStatusBar: void createNavigationBar(com.android.internal.statusbar.RegisterStatusBarResult)>
<com.android.systemui.statusbar.HeadsUpStatusBarView: boolean fitSystemWindows(android.graphics.Rect)>
<com.android.server.slice.SliceProviderPermissions: java.lang.String getFileName()>
<com.android.systemui.statusbar.car.SwitchToGuestTimer: void start()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void onExpansionStopped()>
<com.android.server.locksettings.recoverablekeystore.certificate.CertParsingException: void <init>(java.lang.String)>
<com.android.packageinstaller.InstallStaging.ErrorDialog: void onCancel(android.content.DialogInterface)>
<com.android.printspooler.widget.PrintOptionsLayout: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.doze.DozeHost: boolean isBlockingDoze()>
<com.android.gallery3d.exif.ExifInterface: void writeExif(android.graphics.Bitmap,java.lang.String)>
<com.android.server.NativeDaemonEvent: boolean isClassUnsolicited()>
<com.android.systemui.statusbar.EmptyShadeView: int getTextResource()>
<com.android.systemui.qs.QSPanel.QSTileLayout: void addTile(com.android.systemui.qs.QSPanel.TileRecord)>
<com.android.systemui.doze.DozeLog: void traceMissedTick(java.lang.String)>
<com.android.server.usb.descriptors.UsbHIDDescriptor: void <init>(int,byte)>
<com.android.server.trust.TrustManagerService: void onSwitchUser(int)>
<com.android.server.locksettings.PasswordSlotManager: java.util.Set getUsedSlots()>
<com.android.systemui.pip.tv.PipMenuActivity: void onPipResizeAboutToStart()>
<com.android.server.NsdService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.qs.QSCarrier: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.plugins.NotificationListenerController.NotificationProvider: android.service.notification.StatusBarNotification[] getActiveNotifications()>
<com.android.systemui.ImageWallpaper: void onCreate()>
<com.android.server.pm.Installer: void setAppQuota(java.lang.String,int,int,long)>
<com.android.systemui.statusbar.notification.stack.AmbientState: void setQsCustomizerShowing(boolean)>
<com.android.systemui.statusbar.policy.SignalController: void <init>(java.lang.String,android.content.Context,int,com.android.systemui.statusbar.policy.CallbackHandler,com.android.systemui.statusbar.policy.NetworkControllerImpl)>
<com.android.server.locksettings.recoverablekeystore.PlatformDecryptionKey: int getGenerationId()>
<com.android.settingslib.bluetooth.HidProfile: int getSummaryResourceForDevice(android.bluetooth.BluetoothDevice)>
<com.android.systemui.DependencyBinder: com.android.systemui.tuner.TunerService provideTunerService(com.android.systemui.tuner.TunerServiceImpl)>
<com.android.server.content.SyncStorageEngine: void setBackoff(com.android.server.content.SyncStorageEngine.EndPoint,long,long)>
<android.widget.EditTextBackspacePerfTest: void testBackspace()>
<com.android.settingslib.applications.ApplicationsState.VolumeFilter: boolean filterApp(com.android.settingslib.applications.ApplicationsState.AppEntry)>
<com.android.systemui.shared.system.RotationWatcher: void disable()>
<com.android.server.signedconfig.InvalidConfigException: void <init>(java.lang.String)>
<com.android.preload.ClientUtils: com.android.ddmlib.Client[] findAllClients(com.android.ddmlib.IDevice)>
<com.android.settingslib.bluetooth.BluetoothEventManager: void registerCallback(com.android.settingslib.bluetooth.BluetoothCallback)>
<com.android.server.pm.PackageManagerException: void <init>(java.lang.Throwable)>
<com.android.systemui.statusbar.car.FullscreenUserSwitcher: boolean isVisible()>
<com.android.keyguard.KeyguardPatternView: void onResume(int)>
<com.android.settingslib.utils.StringUtil: java.lang.CharSequence formatElapsedTime(android.content.Context,double,boolean)>
<com.android.keyguard.clock.SettingsWrapper: void <init>(android.content.ContentResolver)>
<com.android.server.content.SyncLogger: void dumpAll(java.io.PrintWriter)>
<com.android.server.ConnectivityService: void startCaptivePortalAppInternal(android.net.Network,android.os.Bundle)>
<com.android.gallery3d.exif.ExifTag: boolean hasValue()>
<com.android.systemui.statusbar.policy.HotspotController: void setHotspotEnabled(boolean)>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void onShortPowerPressedGoHome()>
<com.android.systemui.recents.events.ui.AllTaskViewsDismissedEvent: void <init>(int)>
<com.android.systemui.statusbar.phone.StatusBarSignalPolicy: void onStateChanged()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void onDynamicPrivacyChanged()>
<com.android.server.policy.WindowManagerPolicy.WindowState: boolean isDimming()>
<com.android.systemui.ExpandHelper.Callback: com.android.systemui.statusbar.notification.row.ExpandableView getChildAtRawPosition(float,float)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void onCameraLaunchGestureDetected(int)>
<com.google.android.startop.iorap.SystemServiceUserEvent: void <init>(int,int)>
<com.android.systemui.statusbar.notification.row.ExpandableView: void onMeasure(int,int)>
<com.android.server.usb.descriptors.UsbHIDDescriptor: byte getNumDescriptors()>
<com.android.server.statusbar.StatusBarManagerService: void collapsePanels()>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper.Callback: com.android.systemui.statusbar.KeyguardAffordanceView getRightIcon()>
<com.android.server.audio.AudioService: void sendVolumeUpdate(int,int,int,int,int)>
<com.android.systemui.recents.views.RecentsTransitionComposer: java.util.List composeDockAnimationSpec(com.android.systemui.recents.views.TaskView,android.graphics.Rect)>
<com.android.server.pm.PackageManagerService: android.content.pm.PackageManagerInternal.CheckPermissionDelegate getCheckPermissionDelegateLocked()>
<com.android.server.policy.PhoneWindowManager: com.android.server.policy.WindowManagerPolicy.StartingSurface addSplashScreen(android.os.IBinder,java.lang.String,int,android.content.res.CompatibilityInfo,java.lang.CharSequence,int,int,int,int,android.content.res.Configuration,int)>
<com.android.printservice.recommendation.util.Preconditions: int checkArgumentNonnegative(int,java.lang.String)>
<com.android.settingslib.media.BluetoothMediaDevice: android.graphics.drawable.Drawable getIcon()>
<com.android.uiautomator.core.UiDevice: void runWatchers()>
<com.android.systemui.statusbar.policy.HeadsUpManager.HeadsUpEntry: boolean isSticky()>
<com.android.systemui.statusbar.phone.ObservableScrollView: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.util.List getSecondaryUsers(android.content.ComponentName)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void uninstallCaCerts(android.content.ComponentName,java.lang.String,java.lang.String[])>
<com.android.server.om.DumpState: void setPackageName(java.lang.String)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onBiometricHelp(int,java.lang.String,android.hardware.biometrics.BiometricSourceType)>
<android.media.Session2Command.Result: int getResultCode()>
<com.android.server.TelephonyRegistry: void notifyCellInfo(java.util.List)>
<com.android.server.content.ContentService: boolean getMasterSyncAutomaticallyAsUser(int)>
<com.android.systemui.recents.views.TaskStackView: com.android.systemui.recents.views.grid.TaskGridLayoutAlgorithm getGridAlgorithm()>
<com.android.systemui.qs.GlobalSetting: void setListening(boolean)>
<com.android.server.hdmi.HdmiCecMessage: int hashCode()>
<com.android.systemui.recents.utilities.Utilities: void cancelAnimationWithoutCallbacks(android.animation.Animator)>
<com.android.systemui.statusbar.DragDownHelper.DragDownCallback: void onDragDownReset()>
<com.android.systemui.statusbar.AnimatedImageView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.settingslib.wifi.AccessPoint: void <init>(android.content.Context,android.net.wifi.WifiConfiguration)>
<android.view.ViewShowHidePerfTest.TestCallback: void run(android.perftests.utils.BenchmarkState,int,int,android.view.ViewGroup,android.view.View)>
<com.android.server.contentsuggestions.ContentSuggestionsManagerServiceShellCommand: void onHelp()>
<com.android.server.pm.DumpState: void setTitlePrinted(boolean)>
<com.android.settingslib.NetworkPolicyEditor: void writeAsync()>
<com.android.server.biometrics.BiometricServiceBase.ServiceListener: void onError(long,int,int,int)>
<com.android.server.pm.PreferredIntentResolver: boolean isPackageForFilter(java.lang.String,com.android.server.pm.PreferredActivity)>
<com.android.server.accessibility.MagnificationGestureHandler.State: void onMotionEvent(android.view.MotionEvent,android.view.MotionEvent,int)>
<com.android.server.location.GnssStatusListenerHelper: int registerWithService()>
<com.android.server.pm.PackageSettingBase: void setTimeStamp(long)>
<com.android.server.usb.UsbService: void setUsbDeviceConnectionHandler(android.content.ComponentName)>
<com.android.systemui.recents.LegacyRecentsImpl: boolean splitPrimaryTask(int,android.graphics.Rect,int)>
<com.android.systemui.tuner.BetterListPreference: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.String[] getAccountTypesWithManagementDisabledAsUser(int)>
<com.android.settingslib.applications.ApplicationsState.Session: java.util.ArrayList getAllApps()>
<com.android.systemui.statusbar.policy.KeyButtonView: boolean performAccessibilityActionInternal(int,android.os.Bundle)>
<com.android.systemui.statusbar.phone.StatusBarWindowView: boolean fitSystemWindows(android.graphics.Rect)>
<com.android.systemui.statusbar.car.UserGridRecyclerView.UserAdapter: com.android.systemui.statusbar.car.UserGridRecyclerView.UserAdapter.UserAdapterViewHolder onCreateViewHolder(android.view.ViewGroup,int)>
<com.android.systemui.statusbar.policy.HotspotControllerImpl: void onNumClientsChanged(int)>
<com.android.settingslib.core.instrumentation.MetricsFeatureProvider: void action(android.content.Context,int,android.util.Pair[])>
<com.android.systemui.statusbar.notification.MessagingImageTransformState: boolean transformScale(com.android.systemui.statusbar.notification.TransformState)>
<com.android.systemui.pip.phone.PipTouchHandler: void showPictureInPictureMenu()>
<com.android.systemui.statusbar.notification.row.NotificationBackgroundView: void onDraw(android.graphics.Canvas)>
<com.android.systemui.statusbar.notification.AnimatableProperty: android.util.Property getProperty()>
<com.android.server.accessibility.MotionEventInjector: void onDestroy()>
<com.android.systemui.statusbar.phone.NavigationPrototypeController: int getEdgeSensitivityHeight()>
<com.android.systemui.volume.VolumeDialogControllerImpl: void setVolumeController()>
<com.android.gallery3d.exif.ExifInterface: void writeExif(byte[],java.lang.String)>
<com.android.server.infra.AbstractMasterSystemService: void onBootPhase(int)>
<com.android.systemui.volume.VolumeDialogControllerImpl.MediaSessionsCallbacks: void onRemoteRemoved(android.media.session.MediaSession.Token)>
<com.android.systemui.shared.system.TaskStackChangeListener: void onTaskProfileLocked(int,int)>
<com.android.server.pm.PackageManagerService: void shutdown()>
<com.android.systemui.assist.ui.EdgeLight: float getLength()>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: void setRow(com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<com.android.settingslib.bluetooth.PbapClientProfile: boolean connect(android.bluetooth.BluetoothDevice)>
<com.android.keyguard.KeyguardSimPukView: void onFinishInflate()>
<com.android.media.tv.remoteprovider.TvRemoteProvider: void openRemoteInputBridge(android.os.IBinder,java.lang.String,int,int,int)>
<com.android.systemui.statusbar.phone.NavigationBarFragment: void updateSystemUiStateFlags(int)>
<com.android.systemui.statusbar.phone.PanelView: float getExpandedHeight()>
<com.android.systemui.glwallpaper.ImageRevealHelper.RevealStateListener: void onRevealStart(boolean)>
<com.android.systemui.statusbar.policy.DataSaverControllerImpl: boolean isDataSaverEnabled()>
<com.android.settingslib.bluetooth.PbapClientProfile: boolean isPreferred(android.bluetooth.BluetoothDevice)>
<com.android.systemui.shared.system.RecentsAnimationControllerCompat: void finish(boolean,boolean)>
<com.android.photos.DumbBitmapRegionDecoder: com.android.photos.DumbBitmapRegionDecoder newInstance(java.lang.String)>
<com.android.keyguard.KeyguardUpdateMonitor: boolean isScreenOn()>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.util.List getPermittedInputMethodsForCurrentUser()>
<com.android.systemui.qs.tiles.IntentTile: void handleDestroy()>
<com.android.gallery3d.exif.ExifInterface: boolean setTagValue(int,int,java.lang.Object)>
<com.android.server.notification.ZenModeConditions: void onConditionChanged(android.net.Uri,android.service.notification.Condition)>
<com.android.packageinstaller.TemporaryFileManager: java.io.File getUninstallStateFile(android.content.Context)>
<com.android.server.pm.permission.PermissionsState: boolean equals(java.lang.Object)>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb: java.security.cert.CertPath getRecoveryServiceCertPath(int,int,java.lang.String)>
<com.android.server.hdmi.HdmiCecFeatureAction.ActionTimer: void clearTimerMessage()>
<com.android.printspooler.ui.PrintActivity: boolean canOpenOptions()>
<com.android.settingslib.widget.BarChartPreference: void onBindViewHolder(androidx.preference.PreferenceViewHolder)>
<com.android.server.pm.PackageSettingBase: java.lang.String getVolumeUuid()>
<com.android.systemui.recents.model.TaskStack: java.util.ArrayList computeAllTasksList()>
<com.android.systemui.recents.RecentsConfiguration: com.android.systemui.recents.views.DockState[] getDockStatesForCurrentOrientation()>
<com.android.systemui.DependencyBinder: com.android.systemui.statusbar.policy.HotspotController provideHotspotController(com.android.systemui.statusbar.policy.HotspotControllerImpl)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: boolean isBusy()>
<com.android.systemui.recents.RecentsImplementation: void cancelPreloadRecentApps()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void expand(boolean)>
<com.android.systemui.statusbar.StatusIconDisplayable: java.lang.String getSlot()>
<com.android.systemui.assist.ui.InvocationLightsView: void setLight(int,float,float)>
<android.processor.view.inspector.InspectableClassModel.Property: void <init>(java.lang.String,android.processor.view.inspector.InspectableClassModel.Accessor,android.processor.view.inspector.InspectableClassModel.Property.Type)>
<com.android.systemui.statusbar.phone.StatusBarIconController.IconManager: void onSetIcon(int,com.android.internal.statusbar.StatusBarIcon)>
<com.android.settingslib.bluetooth.MapProfile: boolean accessProfileEnabled()>
<com.android.server.inputmethod.InputMethodManagerService: void systemRunning(com.android.server.statusbar.StatusBarManagerService)>
<javax.obex.HeaderSet: void setEmptyNameHeader()>
<com.android.systemui.util.wakelock.KeepAwakeAnimationListener: void onAnimationRepeat(android.view.animation.Animation)>
<android.media.MediaPlayer2.DrmPreparationInfo.Builder: android.media.MediaPlayer2.DrmPreparationInfo.Builder setInitData(byte[])>
<com.android.server.location.GnssMeasurementsProviderTest: void register_resume_started()>
<com.android.systemui.tuner.ClipboardView: void startPocketDrag()>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void startPreHideAnimation(java.lang.Runnable)>
<com.android.server.notification.NotificationRecord: java.lang.String toString()>
<com.android.server.audio.RecordingActivityMonitor: void dump(java.io.PrintWriter)>
<com.android.systemui.statusbar.policy.RotationLockControllerImpl: boolean isRotationLocked()>
<com.android.systemui.statusbar.phone.DozeParameters: boolean getDisplayStateSupported()>
<com.android.systemui.tuner.CustomListPreference: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.usb.descriptors.UsbDescriptorParser: void setACInterfaceSpec(int)>
<com.android.systemui.qs.QSPanel: void setHost(com.android.systemui.qs.QSTileHost,com.android.systemui.qs.customize.QSCustomizer)>
<com.android.settingslib.widget.BarChartInfo.Builder: com.android.settingslib.widget.BarChartInfo.Builder setEmptyText(int)>
<com.android.server.notification.CriticalNotificationExtractor: void setConfig(com.android.server.notification.RankingConfig)>
<com.android.location.fused.FusionEngine.Callback: void reportLocation(android.location.Location)>
<com.android.systemui.classifier.EndPointLengthEvaluator: float evaluate(float)>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean isLaunchTransitionRunning()>
<com.android.location.provider.LocationProviderBase: void setProperties(com.android.location.provider.ProviderPropertiesUnbundled)>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.activity.ShowStackActionButtonEvent)>
<com.android.systemui.statusbar.notification.NotificationIconDozeHelper: void setColor(int)>
<com.android.server.pm.Settings: com.android.server.pm.PackageSetting[] getChildSettingsLPr(com.android.server.pm.PackageSetting)>
<com.android.server.audio.AudioService.VolumeController: void setA11yMode(int)>
<com.android.server.notification.ScheduleConditionProvider: boolean isValidConditionId(android.net.Uri)>
<com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.KeyEventDispatcher getKeyEventDispatcher()>
<com.android.printspooler.ui.PageAdapter: void onViewRecycled(android.support.v7.widget.RecyclerView.ViewHolder)>
<android.net.shared.LinkPropertiesParcelableUtil: android.net.ProxyInfo toStableParcelable(android.net.ProxyInfo)>
<com.android.server.hdmi.HdmiControlService: void setAndBroadcastActiveSourceFromOneDeviceType(int,int)>
<com.android.server.policy.PhoneWindowManager: void adjustConfigurationLw(android.content.res.Configuration,int,int)>
<com.android.server.pm.UserRestrictionsUtils: void dumpRestrictions(java.io.PrintWriter,java.lang.String,android.os.Bundle)>
<com.android.systemui.statusbar.phone.StatusBar: void setTopAppHidesStatusBar(boolean)>
<com.android.systemui.statusbar.phone.LockscreenGestureLogger: void writeAtFractionalPosition(int,int,int,int)>
<com.android.settingslib.volume.MediaSessions: void postUpdateSessions()>
<com.android.systemui.statusbar.policy.KeyguardMonitor: void notifyKeyguardFadingAway(long,long)>
<com.android.systemui.shared.system.TaskStackChangeListeners: void onTaskSnapshotChanged(int,android.app.ActivityManager.TaskSnapshot)>
<com.android.server.search.Searchables: android.content.ComponentName getGlobalSearchActivity()>
<com.android.systemui.SizeCompatModeActivityController: void onDisplayRemoved(int)>
<com.android.server.biometrics.Constants: java.lang.String logTag()>
<com.android.systemui.statusbar.phone.ShadeController: void onActivationReset()>
<com.android.systemui.dock.DockManager: void removeListener(com.android.systemui.dock.DockManager.DockEventListener)>
<com.android.systemui.qs.tiles.HotspotTile: java.lang.String composeChangeAnnouncement()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void reportSuccessfulPasswordAttempt(int)>
<com.android.systemui.qs.tiles.DndTile: void handleSecondaryClick()>
<android.media.MediaPlayer2: android.media.MediaTimestamp getTimestamp()>
<com.android.server.TelephonyRegistry: void notifyPhoneCapabilityChanged(android.telephony.PhoneCapability)>
<com.android.systemui.statusbar.SysuiStatusBarStateController: boolean isKeyguardRequested()>
<com.android.printspooler.model.PrintSpoolerService: void onCreate()>
<com.android.server.midi.MidiService.Lifecycle: void onUnlockUser(int)>
<com.android.statsd.loadtest.NumericalWatcher: void beforeTextChanged(java.lang.CharSequence,int,int,int)>
<com.android.systemui.statusbar.HeadsUpStatusBarView: void onRestoreInstanceState(android.os.Parcelable)>
<com.android.systemui.statusbar.notification.logging.NotificationLogger.OnChildLocationsChangedListener: void onChildLocationsChanged()>
<com.android.systemui.appops.AppOpsControllerImpl: java.util.List getActiveAppOpsForUser(int)>
<com.android.uiautomator.core.UiAutomatorBridge: android.view.accessibility.AccessibilityNodeInfo getRootInActiveWindow()>
<javax.obex.Operation: java.io.InputStream openInputStream()>
<com.android.systemui.shared.system.BackgroundExecutor: java.util.concurrent.Future submit(java.lang.Runnable)>
<com.android.systemui.statusbar.phone.NotificationGroupManager: void onHeadsUpUnPinned(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: boolean isForegroundService()>
<com.android.systemui.statusbar.policy.SecurityController: boolean hasWorkProfile()>
<com.android.systemui.statusbar.phone.ScrimController.Callback: void onCancelled()>
<android.net.ipmemorystore.IOnSameL3NetworkResponseListener: void onSameL3NetworkResponse(android.net.ipmemorystore.StatusParcelable,android.net.ipmemorystore.SameL3NetworkResponseParcelable)>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.android.server.devicepolicy.DevicePolicyManagerService: android.os.Bundle getApplicationRestrictions(android.content.ComponentName,java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.phone.NavigationBarFragment: void checkNavBarModes()>
<com.android.systemui.qs.tileimpl.QSTileImpl.DrawableIconWithRes: void <init>(android.graphics.drawable.Drawable,int)>
<com.android.commands.uiautomator.RunTestCommand: com.android.uiautomator.testrunner.UiAutomatorTestRunner getRunner()>
<com.android.systemui.assist.ui.DisplayUtils: int getHeight(android.content.Context)>
<com.android.server.NetworkManagementService: android.net.NetworkStats getNetworkStatsTethering(int)>
<com.android.server.usb.descriptors.UsbDeviceDescriptor: void report(com.android.server.usb.descriptors.report.ReportCanvas)>
<com.android.systemui.usb.UsbAccessoryUriActivity: void onClick(android.content.DialogInterface,int)>
<com.android.server.accessibility.AccessibilityManagerService: com.android.server.accessibility.MotionEventInjector getMotionEventInjectorLocked()>
<com.android.settingslib.wifi.AccessPoint: android.net.NetworkInfo.DetailedState getDetailedState()>
<com.android.systemui.pip.tv.PipManager: void showPictureInPictureMenu()>
<com.android.systemui.statusbar.car.CarFacetButtonController: void addAllFacetButtons(android.view.View)>
<android.processor.view.inspector.InspectableClassModel.Property: java.lang.String getName()>
<com.android.systemui.statusbar.phone.RotationContextButton: void onNavigationModeChanged(int)>
<com.android.server.biometrics.ClientMonitor: int getTargetUserId()>
<com.android.gallery3d.glrenderer.GLCanvas: void rotate(float,float,float,float)>
<com.android.server.usb.descriptors.Usb20ACOutputTerminal: byte getClkSourceID()>
<com.android.settingslib.graph.BatteryMeterDrawableBase: void setCharging(boolean)>
<com.android.systemui.statusbar.phone.StatusBar: void onUnlockHintStarted()>
<com.android.systemui.statusbar.notification.stack.StackScrollAlgorithm.StackScrollAlgorithmState: int getPaddingAfterChild(com.android.systemui.statusbar.notification.row.ExpandableView)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: com.android.systemui.statusbar.notification.row.NotificationContentView getPrivateLayout()>
<com.android.systemui.pip.phone.PipMenuActivity: boolean dispatchTouchEvent(android.view.MotionEvent)>
<android.app.backup.ForwardingBackupAgent: void onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>
<com.android.gallery3d.glrenderer.Texture: int getWidth()>
<com.android.server.role.RoleManagerService: void onRoleHoldersChanged(java.lang.String,int,java.lang.String,java.lang.String)>
<javax.obex.PrivateOutputStream: byte[] readBytes(int)>
<com.android.systemui.volume.VolumePrefs: void registerCallbacks(android.content.Context,android.content.SharedPreferences.OnSharedPreferenceChangeListener)>
<com.android.server.notification.NotificationDelegate: void onNotificationSettingsViewed(java.lang.String)>
<com.android.server.pm.CrossProfileAppsServiceImpl.Injector: android.os.UserManager getUserManager()>
<com.android.systemui.statusbar.policy.MobileSignalController: int getQsCurrentIconId()>
<com.android.systemui.statusbar.notification.stack.AnimationProperties: com.android.systemui.statusbar.notification.stack.AnimationProperties setDuration(long)>
<com.android.server.infra.FrameworkResourcesServiceNameResolver: java.lang.String getServiceName(int)>
<com.android.server.location.LocationRequestStatistics: void startRequesting(java.lang.String,java.lang.String,long,boolean)>
<com.android.printspooler.widget.EmbeddedContentContainer: void setOnSizeChangeListener(com.android.printspooler.widget.EmbeddedContentContainer.OnSizeChangeListener)>
<com.android.settingslib.accessibility.AccessibilityUtils: void setAccessibilityServiceState(android.content.Context,android.content.ComponentName,boolean)>
<com.android.systemui.statusbar.policy.Clock: void onDetachedFromWindow()>
<com.android.systemui.volume.VolumeToolTipView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.uiautomator.core.UiDevice: void dumpWindowHierarchy(java.lang.String)>
<com.android.systemui.recents.LegacyRecentsImpl: void logDockAttempt(android.content.Context,android.content.ComponentName,int)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: void setBubbleDismissed(boolean)>
<com.android.systemui.statusbar.policy.KeyButtonView: void setVertical(boolean)>
<com.android.systemui.statusbar.phone.PanelView: int getClearAllHeight()>
<com.android.server.accessibility.AccessibilityManagerService.UserState: void reconcileSoftKeyboardModeWithSettingsLocked()>
<com.android.systemui.statusbar.policy.BrightnessMirrorController.BrightnessMirrorListener: void onBrightnessMirrorReinflated(android.view.View)>
<com.android.systemui.shared.plugins.PluginEnabler: int getDisableReason(android.content.ComponentName)>
<com.android.systemui.recents.RecentsImpl: void onStartScreenPinning(android.content.Context,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean getBluetoothContactSharingDisabledForUser(int)>
<com.android.settingslib.net.DataUsageController: boolean isMobileDataEnabled()>
<com.android.printspooler.model.RemotePrintDocument: void <init>(android.content.Context,android.print.IPrintDocumentAdapter,com.android.printspooler.model.MutexFileProvider,com.android.printspooler.model.RemotePrintDocument.RemoteAdapterDeathObserver,com.android.printspooler.model.RemotePrintDocument.UpdateResultCallbacks)>
<com.android.settingslib.bluetooth.MapClientProfile: int getDrawableResource(android.bluetooth.BluetoothClass)>
<javax.microedition.khronos.opengles.GL11: void glTexEnvi(int,int,int)>
<com.android.server.display.DisplayManagerService: void windowManagerAndInputReady()>
<com.android.gallery3d.exif.ExifTag: int getComponentCount()>
<com.android.printspooler.widget.ClickInterceptSpinner: void setPerformClickListener(android.view.View.OnClickListener)>
<com.android.systemui.recents.RecentsImpl: void onShowCurrentUserToast(int,int)>
<com.android.settingslib.applications.ApplicationsState: void invalidatePackage(java.lang.String,int)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isUsingUnifiedPassword(android.content.ComponentName)>
<com.android.systemui.statusbar.notification.NotificationEntryManager: void onReorderingAllowed()>
<com.android.settingslib.bluetooth.LocalBluetoothProfile: int getDrawableResource(android.bluetooth.BluetoothClass)>
<com.android.systemui.statusbar.policy.SignalController: boolean isDirty()>
<com.android.systemui.shared.plugins.PluginManager: void removePluginListener(com.android.systemui.plugins.PluginListener)>
<com.android.systemui.statusbar.notification.stack.AnimationFilter: com.android.systemui.statusbar.notification.stack.AnimationFilter animateZ()>
<com.android.keyguard.KeyguardMessageArea: void <init>(android.content.Context,android.util.AttributeSet,com.android.keyguard.KeyguardUpdateMonitor,com.android.systemui.statusbar.policy.ConfigurationController)>
<com.android.systemui.shared.system.RemoteAnimationRunnerCompat: void onAnimationStart(com.android.systemui.shared.system.RemoteAnimationTargetCompat[],java.lang.Runnable)>
<javax.obex.ServerOperation: void <init>(javax.obex.ServerSession,java.io.InputStream,int,int,javax.obex.ServerRequestHandler)>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationViewWrapper: boolean isDimmable()>
<com.android.server.autofill.ui.CustomScrollView: void onMeasure(int,int)>
<com.android.server.statusbar.StatusBarManagerService: void showPinningEnterExitToast(boolean)>
<com.android.systemui.statusbar.phone.LockscreenWallpaper.WallpaperDrawable: void onBoundsChange(android.graphics.Rect)>
<com.android.statementservice.retriever.JsonParser: java.util.List parseArray(android.util.JsonReader)>
<com.android.server.statusbar.StatusBarShellCommand: void <init>(com.android.server.statusbar.StatusBarManagerService,android.content.Context)>
<com.android.systemui.AutoReinflateContainer: void addInflateListener(com.android.systemui.AutoReinflateContainer.InflateListener)>
<com.android.systemui.statusbar.phone.CollapsedStatusBarFragment: void showSystemIconArea(boolean)>
<javax.obex.ServerOperation: java.io.InputStream openInputStream()>
<com.android.settingslib.applications.ApplicationsState.CompoundFilter: void <init>(com.android.settingslib.applications.ApplicationsState.AppFilter,com.android.settingslib.applications.ApplicationsState.AppFilter)>
<com.android.systemui.statusbar.notification.row.FooterView.FooterViewState: void applyToView(android.view.View)>
<com.android.printspooler.model.PrintSpoolerService: android.print.PrintJobInfo getPrintJobInfo(android.print.PrintJobId,int)>
<com.android.server.policy.PhoneWindowManager: boolean isKeyguardLocked()>
<com.android.server.audio.AudioService: android.media.AudioRoutesInfo startWatchingRoutes(android.media.IAudioRoutesObserver)>
<com.android.settingslib.applications.ServiceListing.Builder: com.android.settingslib.applications.ServiceListing.Builder setSetting(java.lang.String)>
<com.android.settingslib.RestrictedLockUtils.EnforcedAdmin: com.android.settingslib.RestrictedLockUtils.EnforcedAdmin createDefaultEnforcedAdminWithRestriction(java.lang.String)>
<com.android.systemui.statusbar.DragDownHelper: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<com.android.systemui.plugins.DozeServicePlugin.RequestDoze: void onRequestShowDoze()>
<com.android.systemui.statusbar.notification.collection.NotificationRowBinderImpl.BindRowCallback: void onBindRow(com.android.systemui.statusbar.notification.collection.NotificationEntry,android.content.pm.PackageManager,android.service.notification.StatusBarNotification,com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<com.android.server.policy.PermissionPolicyInternal: boolean isInitialized(int)>
<com.google.android.startop.iorap.AppLaunchEvent.IntentStarted: void writeToParcelImpl(android.os.Parcel,int)>
<com.android.server.policy.PhoneWindowManager: void finishedGoingToSleep(int)>
<com.android.powermodel.RawBatteryStats: java.util.List getRecords()>
<com.android.systemui.qs.QSPanel: void setFooterPageIndicator(com.android.systemui.qs.PageIndicator)>
<com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer: boolean applyChildOrder(java.util.List,com.android.systemui.statusbar.notification.VisualStabilityManager,com.android.systemui.statusbar.notification.VisualStabilityManager.Callback)>
<com.android.systemui.statusbar.AlphaOptimizedView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: boolean isContentExpandable()>
<android.app.backup.ForwardingBackupAgent: void onQuotaExceeded(long,long)>
<com.android.keyguard.KeyguardStatusView: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.localtransport.LocalTransport: android.app.backup.RestoreDescription nextRestorePackage()>
<com.android.server.infra.AbstractPerUserSystemService: boolean isDisabledByUserRestrictionsLocked()>
<com.android.server.notification.RankingHelper: void dump(android.util.proto.ProtoOutputStream,com.android.server.notification.NotificationManagerService.DumpFilter)>
<com.android.systemui.globalactions.GlobalActionsGridLayout: boolean shouldSwapRowsAndColumns()>
<com.android.preload.classdataretrieval.hprof.Hprof: java.util.Map getClassData(com.android.ddmlib.Client)>
<com.android.systemui.media.NotificationPlayer: void play(android.content.Context,android.net.Uri,boolean,int)>
<com.android.systemui.statusbar.phone.StatusBarIconController: android.util.ArraySet getIconBlacklist(java.lang.String)>
<com.android.settingslib.widget.AppEntitiesHeaderController: void apply()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: int getExtraBottomPadding()>
<com.android.printspooler.model.PrintSpoolerService.PrintSpooler: void setProgress(android.print.PrintJobId,float)>
<com.android.systemui.recents.RecentsSystemUser: void sendDockedFirstAnimationFrameEvent()>
<android.net.NetworkStackClient: void fetchIpMemoryStore(android.net.IIpMemoryStoreCallbacks)>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb: com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb newInstance(android.content.Context)>
<com.android.settingslib.widget.AppEntitiesHeaderController: com.android.settingslib.widget.AppEntitiesHeaderController setHeaderDetailsRes(int)>
<com.android.server.vr.VrManagerInternal: boolean isCurrentVrListener(java.lang.String,int)>
<com.android.server.midi.MidiService: android.media.midi.MidiDeviceInfo getServiceDeviceInfo(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: android.service.notification.StatusBarNotification getStatusBarNotification()>
<com.android.providers.settings.SettingsBackupAgent: void onRestore(android.app.backup.BackupDataInput,int,android.os.ParcelFileDescriptor)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: void <init>(android.service.notification.StatusBarNotification)>
<com.android.systemui.statusbar.policy.CastControllerImpl: void setCurrentUserId(int)>
<com.android.server.DeviceIdleController: boolean isPowerSaveWhitelistAppInternal(java.lang.String)>
<com.android.providers.settings.SettingsService: void onShellCommand(java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ShellCallback,android.os.ResultReceiver)>
<com.android.settingslib.bluetooth.PbapServerProfile: boolean disconnect(android.bluetooth.BluetoothDevice)>
<com.android.settingslib.widget.AdaptiveIconShapeDrawable: void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources.Theme)>
<com.android.systemui.statusbar.notification.TextViewTransformState: com.android.systemui.statusbar.notification.TextViewTransformState obtain()>
<com.android.settingslib.media.MediaManager.MediaDeviceCallback: void onDeviceAttributesChanged()>
<com.android.systemui.statusbar.NotificationLockscreenUserManager.UserChangedListener: void onUserChanged(int)>
<com.android.server.notification.NotificationManagerService.NotificationAssistants: void writeExtraAttributes(org.xmlpull.v1.XmlSerializer,int)>
<com.android.server.usb.descriptors.Usb20ASFormatI: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>
<com.android.server.usb.descriptors.Usb10ASFormatI: int[] getSampleRates()>
<com.android.powermodel.AppPower.Builder: com.android.powermodel.AppPower build()>
<com.android.systemui.statusbar.notification.row.ExpandableView: void setLayerType(int,android.graphics.Paint)>
<com.android.server.rollback.AppDataRollbackHelper: boolean restoreAppData(int,android.content.rollback.PackageRollbackInfo,int,int,java.lang.String)>
<com.android.systemui.util.leak.WeakIdentityHashMap: boolean isEmpty()>
<com.android.gallery3d.exif.ExifInterface: short getDefinedTagType(int)>
<com.android.systemui.statusbar.StatusBarWifiView: void setSlot(java.lang.String)>
<com.android.packageinstaller.InstallSuccess: void onCreate(android.os.Bundle)>
<com.android.systemui.statusbar.phone.NavigationBarEdgePanel: boolean shouldTriggerBack()>
<com.android.systemui.recents.views.RecentsTransitionComposer: java.util.List composeAnimationSpecs(com.android.systemui.shared.recents.model.Task,com.android.systemui.recents.views.TaskStackView,int,int,android.graphics.Rect)>
<com.android.systemui.statusbar.phone.StatusBar: void onThemeChanged()>
<com.android.server.pm.permission.BasePermission: android.content.pm.PermissionInfo generatePermissionInfo(int,int)>
<com.android.server.SystemServiceManager: void stopUser(int)>
<com.android.server.LocationManagerService: void removeTestProvider(java.lang.String,java.lang.String)>
<com.android.preload.ui.IUI: java.lang.String showInputDialog(java.lang.String)>
<com.android.server.notification.NotificationRecord: android.os.UserHandle getUser()>
<com.android.bluetoothmidiservice.BluetoothMidiService: android.os.IBinder onBind(android.content.Intent)>
<com.android.server.timedetector.TimeDetectorService: void handleAutoTimeDetectionToggle()>
<com.android.systemui.qs.external.TileLifecycleManager: void onStopListening()>
<com.android.server.pm.UserManagerService: boolean requestQuietModeEnabled(java.lang.String,boolean,int,android.content.IntentSender)>
<com.android.systemui.ForegroundServiceController.UserStateUpdateCallback: void userStateNotFound(int)>
<com.android.preload.actions.ScanAllPackagesAction: void <init>(com.android.preload.ClientUtils,com.android.ddmlib.IDevice,com.android.preload.DumpTableModel)>
<com.android.systemui.statusbar.phone.StatusBarWindowController: void setWallpaperSupportsAmbientMode(boolean)>
<com.android.server.pm.PackageManagerService: void logAppProcessStartIfNeeded(java.lang.String,int,java.lang.String,java.lang.String,int)>
<com.android.server.accessibility.MagnificationController: void resetAllIfNeeded(int)>
<com.android.settingslib.drawable.CircleFramedDrawable: void setColorFilter(android.graphics.ColorFilter)>
<com.android.server.pm.OtaDexoptService: boolean isDone()>
<com.android.systemui.settings.BrightnessController: void unregisterCallbacks()>
<com.android.keyguard.KeyguardUpdateMonitor: boolean hasBootCompleted()>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper.Callback: void onAnimationToSideEnded()>
<com.android.systemui.qs.tiles.BluetoothTile.BluetoothDetailAdapter: android.content.Intent getSettingsIntent()>
<com.android.systemui.statusbar.policy.KeyguardUserSwitcherScrim: void setColorFilter(android.graphics.ColorFilter)>
<android.media.MediaSession2.Builder: android.media.MediaSession2.Builder setSessionCallback(java.util.concurrent.Executor,android.media.MediaSession2.SessionCallback)>
<com.android.systemui.volume.CarVolumeItem: int getGroupId()>
<com.android.systemui.statusbar.phone.BarTransitions: void applyModeBackground(int,int,boolean)>
<com.android.systemui.statusbar.phone.PanelView: void expand(boolean)>
<com.android.systemui.doze.DozeLog: java.lang.String reasonToString(int)>
<com.android.systemui.plugins.qs.QSTile: com.android.systemui.plugins.qs.DetailAdapter getDetailAdapter()>
<com.android.server.display.AmbientBrightnessStatsTracker: void start()>
<com.android.systemui.qs.tileimpl.QSTileView: void init(android.view.View.OnClickListener,android.view.View.OnClickListener,android.view.View.OnLongClickListener)>
<android.os.BinderCallsStatsPerfTest: void timeCallSessionOnePercentSampling()>
<com.android.media.remotedisplay.RemoteDisplay: java.lang.String getDescription()>
<com.android.server.vr.VrManagerService: void onStartUser(int)>
<com.android.systemui.recents.RecentsOnboarding: void onConnectedToLauncher()>
<com.android.settingslib.applications.DefaultAppInfo: java.lang.String getKey()>
<com.android.systemui.statusbar.policy.RemoteInputView: void focus()>
<com.android.server.location.LocationRequestStatistics.PackageStatistics: java.lang.String toString()>
<com.android.systemui.statusbar.phone.LockIcon: void onUserInfoChanged(java.lang.String,android.graphics.drawable.Drawable,java.lang.String)>
<com.android.server.biometrics.RemovalClient: boolean onEnrollResult(android.hardware.biometrics.BiometricAuthenticator.Identifier,int)>
<com.android.systemui.classifier.FalsingManagerProxy: void setQsExpanded(boolean)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onStateChanged(int)>
<com.android.systemui.classifier.brightline.TimeLimitedMotionEventBuffer: java.lang.Object[] toArray(java.lang.Object[])>
<com.android.systemui.CornerHandleView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.broadcastradio.hal2.BroadcastRadioService: boolean hasAnyModules()>
<com.android.location.provider.LocationRequestUnbundled: int getQuality()>
<com.android.server.pm.PackageManagerService: void finishPackageInstall(int,boolean)>
<android.net.netlink.StructNdMsg: void pack(java.nio.ByteBuffer)>
<com.android.systemui.tuner.StatusBarSwitch: void onAttached()>
<com.android.systemui.MultiListLayout.MultiListAdapter: int countListItems()>
<com.android.keyguard.NumPadKey: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.systemui.util.wakelock.KeepAwakeAnimationListener: void onAnimationEnd(android.animation.Animator)>
<com.android.systemui.analytics.DataCollector: boolean isEnabled()>
<com.android.systemui.globalactions.GlobalActionsLayout: boolean shouldReverseListItems()>
<com.android.settingslib.dream.DreamBackend: void launchSettings(android.content.Context,com.android.settingslib.dream.DreamBackend.DreamInfo)>
<com.android.systemui.SizeCompatModeActivityController: void start()>
<com.android.systemui.recents.IRecentsSystemUserCallbacks: void registerNonSystemUserCallbacks(android.os.IBinder,int)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean isContentExpandable()>
<com.android.settingslib.net.DataUsageController: long getHistoricalUsageLevel(android.net.NetworkTemplate)>
<com.android.systemui.statusbar.phone.StatusBarIconController.IconManager: com.android.systemui.statusbar.phone.DemoStatusIcons createDemoStatusIcons()>
<com.android.systemui.qs.external.CustomTile: boolean isAvailable()>
<com.android.server.appprediction.RemoteAppPredictionService: void registerPredictionUpdates(android.app.prediction.AppPredictionSessionId,android.app.prediction.IPredictionCallback)>
<android.net.ip.IpClientCallbacks: void onNewDhcpResults(android.net.DhcpResults)>
<com.android.systemui.statusbar.policy.LocationControllerImpl: boolean isLocationEnabled()>
<com.android.photos.SimpleBitmapRegionDecoderWrapper: int getWidth()>
<com.android.statsd.loadtest.SequencePusher: void <init>(int,boolean)>
<com.android.server.notification.ScheduleConditionProvider: android.content.ComponentName getComponent()>
<com.android.server.notification.ManagedServices: void readExtraAttributes(java.lang.String,org.xmlpull.v1.XmlPullParser,int)>
<com.android.systemui.statusbar.notification.TransformState: void setTransformationEndY(float)>
<com.android.settingslib.applications.AppUtils: boolean isInstant(android.content.pm.ApplicationInfo)>
<com.android.systemui.bubbles.animation.PhysicsAnimationLayout.PhysicsPropertyAnimator: com.android.systemui.bubbles.animation.PhysicsAnimationLayout.PhysicsPropertyAnimator withStartDelay(long)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void updateNotificationViews()>
<com.android.server.biometrics.BiometricServiceBase.DaemonWrapper: int cancel()>
<com.android.server.biometrics.fingerprint.FingerprintService: int statsModality()>
<com.android.server.usb.UsbService: android.os.ParcelFileDescriptor openAccessory(android.hardware.usb.UsbAccessory)>
<com.android.server.pm.PackageManagerService: void reconcileSecondaryDexFiles(java.lang.String)>
<com.android.systemui.statusbar.notification.row.ExpandableView: com.android.systemui.statusbar.notification.stack.ExpandableViewState resetViewState()>
<com.android.systemui.screenrecord.RecordingService: void onCreate()>
<com.android.systemui.statusbar.phone.KeyguardStatusBarView: void onDensityOrFontScaleChanged()>
<com.android.server.location.GnssLocationProvider: android.location.IGpsGeofenceHardware getGpsGeofenceProxy()>
<com.android.systemui.MultiListLayout: void setRotationListener(com.android.systemui.MultiListLayout.RotationListener)>
<com.android.server.content.ContentService: void addStatusChangeListener(int,android.content.ISyncStatusObserver)>
<com.android.providers.settings.SettingsProvider: android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle)>
<com.android.keyguard.ViewMediatorCallback: void keyguardDone(boolean,int)>
<com.android.uiautomator.core.UiObject: boolean isSelected()>
<com.android.settingslib.fuelgauge.BatterySaverUtils: void revertScheduleToNoneIfNeeded(android.content.Context)>
<com.android.server.biometrics.BiometricServiceBase.EnrollClientImpl: void <init>(android.content.Context,com.android.server.biometrics.BiometricServiceBase.DaemonWrapper,long,android.os.IBinder,com.android.server.biometrics.BiometricServiceBase.ServiceListener,int,int,byte[],boolean,java.lang.String,int[])>
<com.android.printservice.recommendation.util.MDNSFilteredDiscovery: void onServiceFound(android.net.nsd.NsdServiceInfo)>
<com.android.systemui.statusbar.phone.StatusBarIconList: void removeIcon(int,int)>
<com.android.systemui.statusbar.phone.BiometricUnlockController: boolean isBiometricUnlock()>
<com.android.systemui.classifier.FalsingManagerProxy: void onAffordanceSwipingStarted(boolean)>
<com.android.printservice.recommendation.util.DiscoveryListenerMultiplexer: boolean removeListener(android.net.nsd.NsdManager,android.net.nsd.NsdManager.DiscoveryListener)>
<com.android.server.location.ComprehensiveCountryDetector: android.location.Country getLocaleCountry()>
<com.android.server.pm.UserRestrictionsUtils: android.os.Bundle nonNull(android.os.Bundle)>
<com.android.systemui.statusbar.notification.row.NotificationContentInflater: void setRemoteViewClickHandler(android.widget.RemoteViews.OnClickHandler)>
<com.android.systemui.statusbar.phone.StatusBarIconController.IconManager: com.android.systemui.statusbar.StatusBarWifiView addSignalIcon(int,java.lang.String,com.android.systemui.statusbar.phone.StatusBarSignalPolicy.WifiIconState)>
<com.android.server.notification.NotificationDelegate: void onNotificationClick(int,int,java.lang.String,com.android.internal.statusbar.NotificationVisibility)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexGenf(int,int,float)>
<com.android.uiautomator.core.UiDevice: boolean pressBack()>
<com.android.systemui.statusbar.CommandQueue: void appTransitionFinished(int)>
<android.os.ParcelPerfTest: void timeObtainRecycle()>
<com.android.server.om.OverlayManagerServiceImpl.PackageManagerHelper: java.util.List getOverlayPackages(int)>
<com.android.systemui.statusbar.policy.KeyButtonDrawable: void resetAnimation()>
<com.android.commands.bmgr.Bmgr: void run(java.lang.String[])>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean clearResetPasswordToken(android.content.ComponentName)>
<com.android.server.notification.NotificationRecord: void setSystemImportance(int)>
<com.android.server.stats.StatsCompanionService: void setAnomalyAlarm(long)>
<com.android.systemui.statusbar.policy.DeviceProvisionedControllerImpl: int getCurrentUser()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setSecurityLoggingEnabled(android.content.ComponentName,boolean)>
<javax.microedition.khronos.opengles.GL11: void glBufferSubData(int,int,int,java.nio.Buffer)>
<com.android.systemui.plugins.FalsingManager: void onAffordanceSwipingStarted(boolean)>
<com.android.server.NetworkManagementService: android.net.InterfaceConfiguration fromStableParcel(android.net.InterfaceConfigurationParcel)>
<com.android.server.policy.PhoneWindowManager: boolean isKeyguardDrawnLw()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onQsHeightChanged()>
<com.android.systemui.qs.tiles.WorkModeTile: void handleUpdateState(com.android.systemui.plugins.qs.QSTile.BooleanState,java.lang.Object)>
<com.android.systemui.plugins.qs.QSTile.SignalState: com.android.systemui.plugins.qs.QSTile.State copy()>
<com.android.server.location.GeofenceManager: void removeFence(java.lang.String)>
<com.android.printspooler.util.ApprovedPrintServices: void <init>(android.content.Context)>
<com.android.systemui.screenshot.TakeScreenshotService: boolean onUnbind(android.content.Intent)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.statusbar.policy.KeyButtonDrawable: void setTranslation(float,float)>
<com.android.settingslib.graph.BatteryMeterDrawableBase: int getIntrinsicHeight()>
<com.android.server.usb.descriptors.UsbDescriptorParser: void parseDescriptors(byte[])>
<com.android.uiautomator.core.UiObject: android.graphics.Rect getBounds()>
<com.android.server.notification.PreferencesHelper: boolean createNotificationChannel(java.lang.String,int,android.app.NotificationChannel,boolean,boolean)>
<com.android.server.ConnectivityService: void registerNetdEventCallback()>
<com.android.server.usb.descriptors.UsbInterfaceDescriptor: int getUsbSubclass()>
<com.android.gallery3d.glrenderer.Texture: boolean isOpaque()>
<com.android.wallpapercropper.WallpaperCropActivity.BitmapCropTask: void <init>(byte[],android.graphics.RectF,int,int,int,boolean,boolean,java.lang.Runnable)>
<com.android.systemui.analytics.DataCollector: boolean isReportingEnabled()>
<com.android.systemui.MultiListLayout: com.android.systemui.MultiListLayout get(android.view.View)>
<com.android.server.UiThread: void run()>
<com.android.systemui.screenshot.TakeScreenshotService: android.os.IBinder onBind(android.content.Intent)>
<com.android.systemui.recents.views.TaskStackAnimationHelper: void startLaunchTaskAnimation(com.android.systemui.recents.views.TaskView,boolean,com.android.systemui.recents.misc.ReferenceCountedTrigger)>
<com.android.commands.hid.Event: java.lang.String getName()>
<android.net.IIpMemoryStore: void retrieveBlob(java.lang.String,java.lang.String,java.lang.String,android.net.ipmemorystore.IOnBlobRetrievedListener)>
<com.android.systemui.tuner.BatteryPreference: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.recents.LegacyRecentsImpl: void onBusEvent(com.android.systemui.recents.events.ui.RecentsDrawnEvent)>
<com.android.systemui.bubbles.BubbleController: void performBackPressIfNeeded()>
<android.media.MediaPlayer2: void clearPendingCommands()>
<com.android.keyguard.clock.ClockOptionsProvider: boolean onCreate()>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb: void invalidateKeysForUserIdOnCustomScreenLock(int)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void onAttachedToWindow()>
<com.android.settingslib.volume.Util: java.lang.String playbackInfoTypeToString(int)>
<com.android.server.ConnectivityService: android.net.NetworkInfo[] getAllNetworkInfo()>
<com.android.server.biometrics.fingerprint.FingerprintUserState: int getNameTemplateResource()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void forceUpdateUserSetupComplete()>
<com.android.server.accessibility.AccessibilityManagerService: android.os.IBinder getWindowToken(int,int)>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper.Callback: void onIconClicked(boolean)>
<com.android.systemui.statusbar.car.hvac.TemperatureView: void setDisplayInFahrenheit(boolean)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.String getGlobalPrivateDnsHost(android.content.ComponentName)>
<android.net.shared.ProvisioningConfiguration.Builder: android.net.shared.ProvisioningConfiguration.Builder withStaticConfiguration(android.net.StaticIpConfiguration)>
<com.android.printservice.recommendation.plugin.xerox.XeroxPrintServiceRecommendationPlugin: java.lang.CharSequence getPackageName()>
<com.android.systemui.qs.QSHost: void warn(java.lang.String,java.lang.Throwable)>
<com.android.systemui.statusbar.policy.SmartReplyView: boolean drawChild(android.graphics.Canvas,android.view.View,long)>
<com.android.settingslib.location.SettingsInjector: void reloadStatusMessages()>
<javax.obex.ServerRequestHandler: int onAbort(javax.obex.HeaderSet,javax.obex.HeaderSet)>
<com.android.settingslib.graph.BatteryMeterDrawableBase: void setColors(int,int)>
<com.android.server.statusbar.StatusBarManagerInternal: void toggleSplitScreen()>
<com.android.server.notification.PreferencesHelper: void lockChannelsForOEM(java.lang.String[])>
<com.android.settingslib.applications.ApplicationsState.Session: int getSessionFlags()>
<android.os.TracePerfTest: void testBeginEndSection()>
<com.android.server.display.color.ColorDisplayService.ColorDisplayServiceInternal: boolean resetDisplayWhiteBalanceColorTemperature()>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: android.content.pm.ResolveInfo resolveCameraIntent()>
<com.android.systemui.recents.views.TaskView: com.android.systemui.recents.views.AnimateableViewBounds createOutlineProvider()>
<com.android.server.textclassifier.TextClassificationManagerService: void onCreateTextClassificationSession(android.view.textclassifier.TextClassificationContext,android.view.textclassifier.TextClassificationSessionId)>
<com.android.server.testing.shadows.ShadowSlog: int wtf(java.lang.String,java.lang.String)>
<com.android.server.content.ContentService: void cancelSyncAsUser(android.accounts.Account,java.lang.String,android.content.ComponentName,int)>
<com.android.systemui.statusbar.ViewTransformationHelper: void setVisible(boolean)>
<com.android.server.notification.ManagedServices: void setComponentState(android.content.ComponentName,boolean)>
<com.android.settingslib.widget.CandidateInfo: void <init>(boolean)>
<com.android.server.media.MediaSessionRecord: java.lang.String toString()>
<com.android.systemui.qs.QSFragment: android.view.View getHeader()>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: boolean isShowing()>
<com.android.systemui.classifier.brightline.BrightLineFalsingManager: void onAffordanceSwipingAborted()>
<com.android.server.notification.NotificationComparator: boolean isImportantPeople(com.android.server.notification.NotificationRecord)>
<com.android.systemui.statusbar.phone.LightBarController: void setScrimState(com.android.systemui.statusbar.phone.ScrimState,float,com.android.internal.colorextraction.ColorExtractor.GradientColors)>
<android.os.TracePerfTest: void testEnabled()>
<com.android.packageinstaller.wear.PackageInstallerImpl.InstallListener: void installFailed(int,java.lang.String)>
<com.android.server.notification.PreferencesHelper: void updateBubblesEnabled()>
<com.android.systemui.shared.system.WindowManagerWrapper: void setRecentsVisibility(boolean)>
<com.android.systemui.recents.views.TaskView: void onConfigurationChanged()>
<com.android.preload.ui.SequenceUI: com.android.preload.ui.SequenceUI confirmNo()>
<com.android.systemui.qs.tiles.DataSaverTile: int getMetricsCategory()>
<com.android.systemui.shared.plugins.VersionInfo: com.android.systemui.shared.plugins.VersionInfo addClass(java.lang.Class)>
<android.media.MediaPlayer2: java.lang.Object play()>
<com.android.server.usb.descriptors.UsbDescriptorParser: boolean hasHIDInterface()>
<com.android.systemui.volume.VolumeDialogImpl: void dismissH(int)>
<com.android.server.pm.PackageManagerService: int getInstallLocation()>
<com.android.server.audio.AudioService: void setRingerModeInternal(int,java.lang.String)>
<com.android.systemui.statusbar.phone.StatusBarWindowController: void setHeadsUpShowing(boolean)>
<com.android.systemui.statusbar.notification.row.ExpandableOutlineView: boolean setTopRoundness(float,boolean)>
<android.text.StaticLayoutPerfTest: void testCreate_PrecomputedText_NoStyled_Balanced_Hyphenation()>
<com.android.printspooler.model.RemotePrintDocument: boolean hasLaidOutPages()>
<com.android.systemui.pip.phone.PipAccessibilityInteractionConnection: void findAccessibilityNodeInfosByText(long,java.lang.String,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)>
<com.android.printservice.recommendation.util.Preconditions: void checkState(boolean)>
<com.android.server.hdmi.SelectRequestBuffer.SelectRequest: com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem audioSystem()>
<com.android.systemui.screenshot.ScreenshotSelectorView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.usb.descriptors.ByteStream: byte peekByte()>
<com.android.server.accessibility.MagnificationController: boolean reset(int,boolean)>
<com.android.server.audio.AudioService.VolumeController: void postDismiss()>
<com.android.server.SystemService: void publishBinderService(java.lang.String,android.os.IBinder,boolean,int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean isLaunchingAffordanceWithPreview()>
<com.android.uiautomator.core.UiDevice: boolean pressDPadCenter()>
<com.android.systemui.shared.system.TaskStackChangeListener: void onActivityLaunchOnSecondaryDisplayFailed()>
<com.android.server.biometrics.BiometricServiceBase: com.android.server.biometrics.BiometricServiceBase.DaemonWrapper getDaemonWrapper()>
<com.android.systemui.recents.Recents: void hideRecentApps(boolean,boolean)>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: int getDimensionForDevice(android.content.Context,int,int,int,int)>
<com.android.server.pm.permission.BasePermission: int getProtectionLevel()>
<com.android.systemui.qs.tiles.ColorInversionTile: int getMetricsCategory()>
<com.android.systemui.statusbar.policy.KeyguardMonitorImpl: void onTrustChanged(int)>
<com.android.server.locksettings.recoverablekeystore.storage.ApplicationKeyStorage: void setSymmetricKeyEntry(int,int,java.lang.String,byte[])>
<com.android.printservice.recommendation.util.MDNSFilteredDiscovery: void onDiscoveryStarted(java.lang.String)>
<com.android.systemui.statusbar.car.CarStatusBar: void animateCollapsePanels(int,boolean,boolean,float)>
<android.view.ViewShowHidePerfTest: void testVisibleToInvisible()>
<com.android.server.pm.PackageManagerService: void dumpProfiles(java.lang.String)>
<com.android.systemui.qs.tiles.AirplaneModeTile: void handleUpdateState(com.android.systemui.plugins.qs.QSTile.BooleanState,java.lang.Object)>
<javax.microedition.khronos.opengles.GL10: void glScalef(float,float,float)>
<com.android.systemui.pip.phone.PipMenuActivityController: void onActivityUnpinned()>
<com.android.systemui.statusbar.phone.BarTransitions.BarBackgroundDrawable: void setTint(int)>
<com.android.systemui.statusbar.phone.KeyguardStatusBarView: void onOverlayChanged()>
<com.android.settingslib.core.instrumentation.LogWriter: void hidden(android.content.Context,int)>
<com.android.systemui.statusbar.NotificationMediaManager: void <init>(android.content.Context,dagger.Lazy,dagger.Lazy,com.android.systemui.statusbar.notification.NotificationEntryManager,com.android.systemui.statusba.MediaArtworkProcessor)>
<com.android.systemui.screenshot.ScreenshotSelectorView: void stopSelection()>
<com.android.server.pm.CrossProfileAppsServiceImpl.Injector: android.app.AppOpsManager getAppOpsManager()>
<com.android.settingslib.RestrictedPreference: void setDisabledByAdmin(com.android.settingslib.RestrictedLockUtils.EnforcedAdmin)>
<com.android.systemui.shared.recents.model.Task: boolean equals(java.lang.Object)>
<com.android.settingslib.bluetooth.A2dpProfile: boolean setActiveDevice(android.bluetooth.BluetoothDevice)>
<com.android.systemui.statusbar.notification.row.AppOpsInfo: boolean handleCloseControls(boolean,boolean)>
<com.android.systemui.statusbar.phone.StatusBarWindowView: void setExpandAnimationRunning(boolean)>
<com.android.systemui.statusbar.NotificationRemoteInputManager.Callback: boolean shouldHandleRemoteInput(android.view.View,android.app.PendingIntent)>
<com.android.systemui.biometrics.BiometricDialogView: void onErrorReceived(java.lang.String)>
<com.android.server.notification.RankingReconsideration: boolean cancel(boolean)>
<com.android.packageinstaller.PackageUtil.AppSnippet: void <init>(java.lang.CharSequence,android.graphics.drawable.Drawable)>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: java.lang.String getConnectionSummary()>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: boolean isSnappedAndOnSameSide()>
<com.android.settingslib.bluetooth.LocalBluetoothManager: boolean isForegroundActivity()>
<com.android.server.PinnerService: void onSwitchUser(int)>
<com.android.systemui.plugins.VolumeDialogController.Callbacks: void onStateChanged(com.android.systemui.plugins.VolumeDialogController.State)>
<com.android.server.pm.UserManagerService: boolean removeUserEvenWhenDisallowed(int)>
<javax.obex.Operation: int getResponseCode()>
<com.android.systemui.qs.tiles.UiModeNightTile: void handleSetListening(boolean)>
<com.android.future.usb.UsbManager: com.android.future.usb.UsbAccessory getAccessory(android.content.Intent)>
<com.android.systemui.statusbar.policy.NetworkControllerImpl: void addCallback(com.android.systemui.statusbar.policy.NetworkController.SignalCallback)>
<com.android.systemui.statusbar.phone.NotificationGroupManager.OnGroupChangeListener: void onGroupCreatedFromChildren(com.android.systemui.statusbar.phone.NotificationGroupManager.NotificationGroup)>
<com.android.systemui.statusbar.phone.KeyguardBottomAreaView: void setAntiBurnInOffsetX(int)>
<com.android.server.accessibility.AccessibilityManagerService: int getAccessibilityWindowId(android.os.IBinder)>
<com.android.systemui.recents.views.grid.TaskGridLayoutAlgorithm: void updateTaskGridRect(int)>
<com.google.android.startop.iorap.AppLaunchEvent.IntentStarted: java.lang.String toStringBody()>
<com.android.systemui.shared.system.TonalCompat: void <init>(android.content.Context)>
<com.android.server.content.SyncStorageEngine: int getIsSyncable(android.accounts.Account,int,java.lang.String)>
<com.android.systemui.statusbar.phone.StatusBar: void animateKeyguardUnoccluding()>
<com.android.systemui.qs.QSTileHost: int indexOf(java.lang.String)>
<com.android.server.display.color.ColorDisplayService: void onStartUser(int)>
<com.android.server.infra.SecureSettingsServiceNameResolver: java.lang.String toString()>
<com.android.server.notification.ZenModeHelper: void setZenModeSetting(int)>
<com.android.systemui.doze.DozeLog: void traceScreenOff(int)>
<com.android.systemui.statusbar.policy.RemoteInputView.RemoteEditText: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void setOccluded(boolean,boolean)>
<com.android.server.notification.RankingHandler: void requestSort()>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: boolean disallowSingleClick(android.view.MotionEvent)>
<com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem: void disableDevice(boolean,com.android.server.hdmi.HdmiCecLocalDevice.PendingActionClearedCallback)>
<com.android.printspooler.model.PrintSpoolerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.gallery3d.exif.ExifTag: byte[] getStringByte()>
<com.android.systemui.util.AsyncSensorManager: boolean cancelTriggerSensorImpl(android.hardware.TriggerEventListener,android.hardware.Sensor,boolean)>
<com.android.server.audio.AudioService: void silenceRingerModeInternal(java.lang.String)>
<com.android.server.accessibility.AccessibilityManagerService.SecurityPolicy: void onTouchInteractionEnd()>
<com.android.systemui.recents.views.TaskView: void onPrepareLaunchTargetForEnterAnimation()>
<com.android.systemui.statusbar.KeyguardIndicationController: void setDozing(boolean)>
<com.android.systemui.statusbar.notification.ActivityLaunchAnimator.ExpandAnimationParameters: int getHeight()>
<com.android.server.slice.SliceManagerService: void onShellCommand(java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ShellCallback,android.os.ResultReceiver)>
<com.android.printspooler.widget.PrintContentView: void focusableViewAvailable(android.view.View)>
<javax.obex.Operation: java.io.DataInputStream openDataInputStream()>
<com.android.systemui.statusbar.phone.NotificationGroupManager: void onHeadsUpPinnedModeChanged(boolean)>
<com.android.server.inputmethod.InputMethodManagerService: void showInputMethodPickerFromClient(com.android.internal.view.IInputMethodClient,int)>
<com.android.server.pm.dex.DexoptOptions: boolean isDexoptIdleBackgroundJob()>
<com.android.systemui.InitController: void executePostInitTasks()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: com.android.systemui.statusbar.notification.row.ExpandableView getChildAtRawPosition(float,float)>
<com.android.systemui.assist.AssistHandleCallbacks: void hide()>
<com.android.server.biometrics.AuthenticationClient: void <init>(android.content.Context,com.android.server.biometrics.Constants,com.android.server.biometrics.BiometricServiceBase.DaemonWrapper,long,android.os.IBinder,com.android.server.biometrics.BiometricServiceBase.ServiceListener,int,int,long,boolean,java.lang.String,int,boolean)>
<com.android.systemui.plugins.qs.DetailAdapter: java.lang.CharSequence getTitle()>
<com.android.server.infra.AbstractMasterSystemService: void <init>(android.content.Context,com.android.server.infra.ServiceNameResolver,java.lang.String,int)>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationHeaderViewWrapper: void setIsChildInGroup(boolean)>
<com.android.systemui.recents.views.grid.TaskGridLayoutAlgorithm: com.android.systemui.recents.views.TaskStackLayoutAlgorithm.VisibilityReport computeStackVisibilityReport(java.util.ArrayList)>
<com.android.server.accessibility.AccessibilityManagerService: java.util.ArrayList getValidDisplayList()>
<com.android.server.notification.ZenModeHelper: void setAutomaticZenRuleState(android.net.Uri,android.service.notification.Condition)>
<com.android.server.policy.WindowManagerPolicy: void showGlobalActions()>
<com.android.systemui.globalactions.GlobalActionsGridLayout: void removeAllItems()>
<com.android.systemui.statusbar.CommandQueue: void cancelPreloadRecentApps()>
<com.android.server.pm.dex.DexManager: boolean isPackageSelectedToRunOob(java.util.Collection)>
<com.android.server.wallpaper.WallpaperManagerService: java.lang.String getName()>
<android.media.MediaPlayer2: java.lang.Object selectTrack(android.media.MediaPlayer2.TrackInfo)>
<com.android.systemui.statusbar.StatusBarIconView: void updateDrawable()>
<android.text.BoringLayoutIsBoringPerfTest: void timeIsBoring()>
<com.android.server.notification.ManagedServices.ManagedServiceInfo: boolean isPermittedForProfile(int)>
<com.android.server.om.OverlayManagerService: void onStart()>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isAffiliatedUser()>
<com.android.systemui.statusbar.phone.NotificationIconAreaController: android.view.View getCenteredNotificationAreaView()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void inflateViews()>
<com.android.systemui.bubbles.animation.PhysicsAnimationLayout: void cancelAllAnimations()>
<com.android.server.pm.dex.ArtManagerService: void prepareAppProfiles(android.content.pm.PackageParser.Package,int[],boolean)>
<com.android.server.usb.UsbService: android.hardware.usb.UsbAccessory getCurrentAccessory()>
<com.android.server.AlarmManagerInternal: void removeAlarmsForUid(int)>
<com.android.systemui.statusbar.notification.TransformState: int[] getLocationOnScreen()>
<com.android.server.testing.shadows.ShadowAppBackupUtils: void reset()>
<com.android.server.trust.TrustAgentWrapper: void destroy()>
<com.android.systemui.qs.QSPanel: com.android.systemui.qs.QSPanel.TileRecord addTile(com.android.systemui.plugins.qs.QSTile,boolean)>
<com.android.keyguard.KeyguardUpdateMonitor: boolean isDeviceInteractive()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void updateTopPadding(float,boolean,boolean)>
<com.android.uiautomator.core.UiDevice: boolean takeScreenshot(java.io.File,float,int)>
<com.android.systemui.tuner.PowerNotificationControlsFragment: void onResume()>
<com.android.server.TelephonyRegistry: void notifyMessageWaitingChangedForPhoneId(int,int,boolean)>
<com.android.server.usb.descriptors.UsbMSMidiOutputJack: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>
<com.android.systemui.statusbar.phone.PanelView: float getContentHeight()>
<android.media.FileDataSourceDesc: long getLength()>
<com.android.keyguard.KeyguardAbsKeyInputView: void doHapticKeyClick()>
<com.android.location.provider.ProviderRequestUnbundled: java.lang.String toString()>
<com.android.server.contentsuggestions.RemoteContentSuggestionsService: android.service.contentsuggestions.IContentSuggestionsService getServiceInterface(android.os.IBinder)>
<com.android.systemui.statusbar.CrossFadeHelper: void fadeIn(android.view.View,float)>
<com.android.packageinstaller.InstallStaging: void onSaveInstanceState(android.os.Bundle)>
<com.android.wallpapercropper.CropView: boolean onTouchEvent(android.view.MotionEvent)>
<com.android.systemui.statusbar.phone.StatusIconContainer: void onFinishInflate()>
<com.android.systemui.HardwareUiLayout: void onUpdateList()>
<com.android.systemui.statusbar.phone.StatusBarIconList: void <init>(java.lang.String[])>
<com.android.server.pm.PackageManagerService: void registerDexModule(java.lang.String,java.lang.String,boolean,android.content.pm.IDexModuleRegisterCallback)>
<com.android.systemui.statusbar.phone.UserAvatarView: void setBadgeDiameter(float)>
<com.android.settingslib.graph.SignalDrawable: int getIntrinsicWidth()>
<com.android.systemui.statusbar.notification.VisualStabilityManager: void <init>(com.android.systemui.statusbar.notification.NotificationEntryManager,android.os.Handler)>
<android.media.MediaController2.Builder: android.media.MediaController2.Builder setConnectionHints(android.os.Bundle)>
<com.android.systemui.statusbar.phone.NavigationBarTransitions: void <init>(com.android.systemui.statusbar.phone.NavigationBarView)>
<com.android.systemui.statusbar.phone.DozeScrimController: void setDozing(boolean)>
<com.android.uiautomator.core.UiObject: boolean isScrollable()>
<com.android.systemui.keyguard.WakefulnessLifecycle: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.gallery3d.exif.ExifInterface: void setExif(java.util.Collection)>
<com.android.systemui.statusbar.CastDrawable: void draw(android.graphics.Canvas)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: boolean isBubbleDismissed()>
<com.android.systemui.statusbar.phone.PhoneStatusBarTransitions: void <init>(com.android.systemui.statusbar.phone.PhoneStatusBarView)>
<com.android.server.wallpaper.WallpaperManagerService: void finalize()>
<com.android.settingslib.core.lifecycle.ObservableFragment: void onPrepareOptionsMenu(android.view.Menu)>
<com.android.server.slice.SliceClientPermissions.SliceAuthority: void readFrom(org.xmlpull.v1.XmlPullParser)>
<com.android.location.provider.LocationProviderBase: boolean isEnabled()>
<com.android.server.accessibility.MagnificationController.ControllerContext: void <init>(android.content.Context,com.android.server.accessibility.AccessibilityManagerService,com.android.server.wm.WindowManagerInternal,android.os.Handler,long)>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glTexEnvxv(int,int,int[],int)>
<com.android.server.slice.SliceManagerService: java.lang.String[] getAllPackagesGranted(java.lang.String)>
<com.android.uiautomator.core.UiScrollable: boolean scrollIntoView(com.android.uiautomator.core.UiObject)>
<com.android.server.deviceidle.ConstraintController: void start()>
<com.android.server.notification.RateEstimator: float getRate(long)>
<com.android.systemui.statusbar.phone.NavigationBarFragment: void onRotationProposal(int,boolean)>
<com.android.systemui.statusbar.NotificationRemoveInterceptor: boolean onNotificationRemoveRequested(java.lang.String,int)>
<com.android.settingslib.utils.PowerUtil: java.lang.String getBatteryTipStringFormatted(android.content.Context,long)>
<com.android.systemui.statusbar.policy.HotspotController: boolean isHotspotEnabled()>
<com.android.systemui.volume.VolumeDialogControllerImpl: void destroy()>
<com.android.systemui.shared.plugins.PluginManager: void addPluginListener(java.lang.String,com.android.systemui.plugins.PluginListener,java.lang.Class)>
<com.android.systemui.qs.QSPanel: void onTilesChanged()>
<com.android.server.PinnerService: void onStart()>
<com.android.systemui.statusbar.phone.NavigationBarInflaterView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.media.MediaSessionRecord: android.media.session.ISessionController getControllerBinder()>
<com.android.systemui.usb.UsbPermissionActivity: void onDestroy()>
<com.android.server.biometrics.ClientMonitor: int[] getAcquireIgnorelist()>
<com.android.systemui.recents.RecentsImplProxy: void cancelPreloadingRecents()>
<com.android.systemui.statusbar.StatusBarIconView: void onLayout(boolean,int,int,int,int)>
<com.android.systemui.qs.external.TileServiceManager: boolean isActiveTile()>
<com.android.systemui.statusbar.policy.SmartReplyView.SmartReplies: void <init>(java.lang.CharSequence[],android.app.RemoteInput,android.app.PendingIntent,boolean)>
<com.android.systemui.statusbar.VibratorHelper: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void dozeTimeTick()>
<com.android.settingslib.net.SummaryForAllUidLoader: void onReset()>
<com.android.server.accessibility.AbstractAccessibilityServiceConnection.SystemSupport: com.android.server.accessibility.MagnificationController getMagnificationController()>
<com.android.server.locksettings.recoverablekeystore.RecoverableKeyGenerator: com.android.server.locksettings.recoverablekeystore.RecoverableKeyGenerator newInstance(com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb)>
<com.android.server.pm.Installer: void createOatDir(java.lang.String,java.lang.String)>
<com.android.systemui.statusbar.phone.StatusBar: void onTrackingStarted()>
<com.android.server.usb.UsbHostManager: void setUsbDeviceConnectionHandler(android.content.ComponentName)>
<com.android.systemui.statusbar.notification.stack.AnimationProperties: android.view.animation.Interpolator getCustomInterpolator(android.view.View,android.util.Property)>
<com.android.server.display.WifiDisplayController.Listener: void onDisplaySessionInfo(android.hardware.display.WifiDisplaySessionInfo)>
<com.android.server.tv.TvInputManagerService: void onUnlockUser(int)>
<android.net.netlink.StructInetDiagSockId: void <init>(java.net.InetSocketAddress,java.net.InetSocketAddress)>
<com.android.preload.actions.RunMonkeyAction: void setDevice(com.android.ddmlib.IDevice)>
<com.android.systemui.statusbar.phone.NavigationBarTransitions: int getTintAnimationDuration()>
<com.android.server.input.InputManagerService.WindowManagerCallbacks: int getPointerLayer()>
<com.android.systemui.statusbar.car.CarStatusBar: void makeStatusBarView(com.android.internal.statusbar.RegisterStatusBarResult)>
<com.android.systemui.statusbar.phone.StatusBarWindowController: void setKeyguardFadingAway(boolean)>
<com.android.systemui.qs.tileimpl.QSTileBaseView: android.view.View getBgCircle()>
<com.android.systemui.statusbar.notification.row.ExpandableOutlineView: float getOutlineAlpha()>
<android.net.util.PrefixUtils: android.net.IpPrefix ipAddressAsPrefix(java.net.InetAddress)>
<com.android.server.usb.descriptors.report.ReportCanvas: void writeParagraph(java.lang.String,boolean)>
<com.android.server.location.ComprehensiveCountryDetector: boolean isGeoCoderImplemented()>
<com.android.keyguard.KeyguardSimPinView: void onResume(int)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setDarkAmount(float,float)>
<com.android.settingslib.animation.AppearAnimationUtils: void startTranslationYAnimation(android.view.View,long,long,float,android.view.animation.Interpolator)>
<com.android.systemui.assist.ui.PerimeterPathGuide: void <init>(android.content.Context,com.android.systemui.assist.ui.CornerPathRenderer,int,int,int)>
<com.android.systemui.statusbar.car.CarBatteryController: boolean isPowerSave()>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: void unregisterCallback(com.android.settingslib.bluetooth.CachedBluetoothDevice.Callback)>
<com.android.server.pm.PackageManagerService: void clearPackagePreferredActivities(java.lang.String)>
<com.android.systemui.qs.QuickStatusBarHeader: void setExpansion(boolean,float,float)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void onNotificationUpdated()>
<com.android.systemui.statusbar.phone.NavigationBarView: com.android.systemui.statusbar.phone.FloatingRotationButton getFloatingRotationButton()>
<com.android.systemui.volume.VolumeDialogImpl: void rescheduleTimeoutH()>
<com.android.server.appprediction.AppPredictionPerUserService: void sortAppTargetsLocked(android.app.prediction.AppPredictionSessionId,android.content.pm.ParceledListSlice,android.app.prediction.IPredictionCallback)>
<com.android.server.usb.descriptors.Usb20ASFormatIIEx: byte getSidebandProtocol()>
<com.android.systemui.classifier.AccelerationClassifier: float getFalseTouchEvaluation(int,com.android.systemui.classifier.Stroke)>
<com.android.server.firewall.IntentFirewall.AMSInterface: java.lang.Object getAMSLock()>
<com.android.systemui.statusbar.notification.NotificationDozeHelper: void startIntensityAnimation(android.animation.ValueAnimator.AnimatorUpdateListener,boolean,long,android.animation.Animator.AnimatorListener)>
<com.android.keyguard.KeyguardPasswordView: void startAppearAnimation()>
<com.android.server.statusbar.StatusBarManagerService: void onShellCommand(java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ShellCallback,android.os.ResultReceiver)>
<com.android.server.GestureLauncherService: void <init>(android.content.Context)>
<com.android.systemui.util.AlarmTimeout: void onAlarm()>
<com.android.server.notification.ManagedServices: void onBootPhaseAppsCanStart()>
<com.android.systemui.statusbar.phone.LightBarTransitionsController: void onStateChanged(int)>
<com.android.systemui.SwipeHelper.Callback: boolean canChildBeDismissedInDirection(android.view.View,boolean)>
<com.android.systemui.bubbles.BubbleStackView: void getBoundsOnScreen(android.graphics.Rect)>
<com.android.packageinstaller.wear.WearPackageUtil: java.lang.String getSanitizedPackageName(android.net.Uri)>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector cloneSelector()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: com.android.systemui.statusbar.notification.row.ExpandableView getLastChildNotGone()>
<com.android.systemui.recents.misc.SystemServicesProxy: boolean isSystemUser(int)>
<com.android.systemui.statusbar.policy.AccessibilityManagerWrapper: void <init>(android.content.Context)>
<com.android.systemui.qs.QSTileHost: com.android.systemui.plugins.qs.QSTile createTile(java.lang.String)>
<com.android.systemui.statusbar.phone.KeyguardAffordanceHelper: void launchAffordance(boolean,boolean)>
<com.android.systemui.assist.AssistOrbContainer: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.bubbles.BubbleExpandedView: void populateExpandedView()>
<com.android.server.notification.PreferencesHelper: void revokeNotificationDelegate(java.lang.String,int)>
<com.android.systemui.recents.misc.DozeTrigger: void startDozing()>
<com.android.server.appbinding.finders.CarrierMessagingClientServiceFinder: boolean isEnabled(com.android.server.appbinding.AppBindingConstants)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: boolean isOccluded()>
<com.android.server.usb.descriptors.report.ReportCanvas: java.lang.String getHexString(byte)>
<com.android.server.display.color.DisplayTransformManager: void setColorMatrix(int,float[])>
<android.media.MediaPlayer2: void unregisterEventCallback(android.media.MediaPlayer2.EventCallback)>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean hasActiveClearableNotifications()>
<com.android.systemui.statusbar.phone.NavigationPrototypeController.OnPrototypeChangedListener: void onColorAdaptChanged(boolean)>
<com.android.systemui.recents.views.grid.GridTaskViewThumbnail: void onTaskViewSizeChanged(int,int)>
<com.android.location.fused.FusionEngine: void onProviderDisabled(java.lang.String)>
<com.android.keyguard.KeyguardSimPukView: void showUsabilityHint()>
<com.android.systemui.statusbar.notification.row.ExpandableOutlineView: boolean topAmountNeedsClipping()>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.ui.UserInteractionEvent)>
<com.android.systemui.qs.QSFooterImpl: void onRtlPropertiesChanged(int)>
<com.android.server.role.RoleUserState: java.lang.String getPackagesHash()>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void onFinishedGoingToSleep(int,boolean)>
<com.android.systemui.shared.system.RotationWatcher: void onRotationChanged(int)>
<com.android.systemui.qs.car.CarQSFragment: void setHeaderClickable(boolean)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setOverscrollTopChangedListener(com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout.OnOverscrollTopChangedListener)>
<com.android.systemui.plugins.SensorManagerPlugin: void registerListener(com.android.systemui.plugins.SensorManagerPlugin.Sensor,com.android.systemui.plugins.SensorManagerPlugin.SensorEventListener)>
<com.android.systemui.statusbar.phone.NavigationModeController: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.qs.tiles.BatterySaverTile: void <init>(com.android.systemui.qs.QSHost,com.android.systemui.statusbar.policy.BatteryController)>
<com.android.printspooler.widget.PrintContentView: void onClick(android.view.View)>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationBigTextTemplateViewWrapper: void onContentUpdated(com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<com.android.printspooler.ui.PrinterRegistry: void forgetFavoritePrinter(android.print.PrinterId)>
<com.android.server.pm.PackageManagerService: void grantDefaultPermissionsToEnabledImsServices(java.lang.String[],int)>
<com.android.server.biometrics.face.FaceConstants: java.lang.String tagEnumerateStartError()>
<com.android.printspooler.ui.PrinterRegistry: boolean isFavoritePrinter(android.print.PrinterId)>
<com.android.systemui.statusbar.policy.AccessPointControllerImpl: void scanForAccessPoints()>
<com.android.server.pm.PackageManagerService: void querySyncProviders(java.util.List,java.util.List)>
<com.android.server.utils.ManagedApplicationService.LogEvent: java.lang.String toLogString(java.text.SimpleDateFormat)>
<com.android.server.input.InputManagerService: int getKeyCodeState(int,int,int)>
<com.android.systemui.statusbar.phone.NotificationListenerWithPlugins: void onPluginConnected(com.android.systemui.plugins.NotificationListenerController,android.content.Context)>
<com.android.printspooler.model.PageContentRepository: void <init>(android.content.Context)>
<com.android.server.TelephonyRegistry: void notifyCellInfoForSubscriber(int,java.util.List)>
<com.android.server.usb.descriptors.report.ReportCanvas: java.lang.String getHexString(int)>
<com.android.systemui.usb.UsbDebuggingActivity: void onStart()>
<com.android.server.notification.NotificationRecord: void setTextChanged(boolean)>
<com.android.server.webkit.SystemInterface: boolean isMultiProcessDefaultEnabled()>
<com.android.server.rollback.RollbackPackageHealthObserver: boolean execute(android.content.pm.VersionedPackage)>
<com.android.systemui.statusbar.phone.StatusBarIconControllerImpl: void dispatchDemoCommand(java.lang.String,android.os.Bundle)>
<com.android.systemui.statusbar.OperatorNameView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.dynsystem.DynamicSystemInstallationService: void onCancelled()>
<com.android.systemui.util.AlarmTimeout: void cancel()>
<com.android.packageinstaller.DeviceUtils: boolean isTelevision(android.content.Context)>
<com.android.server.location.GnssPositionMode: void <init>(int,int,int,int,int,boolean)>
<com.android.systemui.recents.views.TaskStackView: void updateLayoutAlgorithm(boolean)>
<com.android.systemui.statusbar.notification.NotificationEntryListener: void onNotificationRankingUpdated(android.service.notification.NotificationListenerService.RankingMap)>
<com.android.server.usb.UsbService: android.os.ParcelFileDescriptor getControlFd(long)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setSensitive(boolean,boolean)>
<com.android.settingslib.notification.ZenRadioLayout: void onMeasure(int,int)>
<com.android.server.pm.PackageSetting: boolean isSystem()>
<com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin: com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin.MenuItem getLongpressMenuItem(android.content.Context)>
<com.android.systemui.recents.model.TaskKeyStrongCache: void putCacheEntry(int,java.lang.Object)>
<com.android.systemui.qs.tiles.LocationTile: com.android.systemui.plugins.qs.QSTile.BooleanState newTileState()>
<com.android.systemui.glwallpaper.ImageWallpaperRenderer: android.util.Size reportSurfaceSize()>
<com.android.server.content.SyncManagerConstants: void dump(java.io.PrintWriter,java.lang.String)>
<com.android.systemui.shared.recents.model.IconLoader: void <init>(android.content.Context,com.android.systemui.shared.recents.model.TaskKeyLruCache,android.util.LruCache)>
<com.android.systemui.biometrics.BiometricDialogView: void startDismiss()>
<com.android.systemui.statusbar.phone.KeyguardBouncer: void show(boolean)>
<com.android.systemui.statusbar.phone.ScrimController: void setLaunchingAffordanceWithPreview(boolean)>
<com.android.settingslib.development.AbstractLogdSizePreferenceController: void updateLogdSizeValues()>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getPasswordMinimumLength(android.content.ComponentName,int,boolean)>
<com.android.systemui.classifier.FalsingManagerImpl: void onNotificatonStopDismissing()>
<android.net.util.NetdService: android.net.INetd get()>
<android.net.netlink.StructNlMsgHdr: java.lang.String toString()>
<com.android.server.NetworkManagementService: void disableNat(java.lang.String,java.lang.String)>
<com.android.systemui.qs.QSFragment: void setKeyguardShowing(boolean)>
<javax.obex.PrivateInputStream: void <init>(javax.obex.BaseStream)>
<com.android.systemui.qs.tileimpl.QSTileImpl: void handleUserSwitch(int)>
<com.android.server.utils.PriorityDump.PriorityDumper: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[],boolean)>
<com.android.systemui.statusbar.phone.StatusBar: boolean hideStatusBarIconsForBouncer()>
<com.android.server.NsdService.NsdSettings: boolean isEnabled()>
<android.perftests.utils.LayoutUtils: void requestLayoutForAllNodes(java.util.List)>
<com.android.server.appop.AppOpsService: void startWatchingNoted(int[],com.android.internal.app.IAppOpsNotedCallback)>
<javax.microedition.khronos.opengles.GL10: void glLineWidthx(int)>
<com.android.systemui.statusbar.phone.UnlockMethodCache: com.android.systemui.statusbar.phone.UnlockMethodCache getInstance(android.content.Context)>
<android.net.ipmemorystore.OnStatusListener: android.net.ipmemorystore.IOnStatusListener toAIDL(android.net.ipmemorystore.OnStatusListener)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void <init>(android.content.Context,com.android.server.policy.keyguard.KeyguardStateMonitor.StateCallback)>
<com.android.server.notification.ZenModeHelper: int getZenModeListenerInterruptionFilter()>
<com.android.systemui.qs.tiles.UserDetailItemView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.os.BinderCallsStatsPerfTest: void timeCallSessionTrackingDisabled()>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow.NotificationMenuItem: android.view.View getGutsView()>
<com.android.systemui.statusbar.phone.StatusBar: void dismissKeyguardThenExecute(com.android.systemui.plugins.ActivityStarter.OnDismissAction,boolean)>
<com.android.systemui.qs.tiles.HotspotTile: void handleClick()>
<com.android.systemui.recents.model.TaskStack: com.android.systemui.shared.recents.model.Task getFrontMostTask()>
<com.android.systemui.settings.ToggleSlider: int getValue()>
<com.android.server.wallpaper.WallpaperManagerService: boolean isSetWallpaperAllowed(java.lang.String)>
<com.android.systemui.statusbar.notification.row.NotificationGutsManager: void onDensityOrFontScaleChanged(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.systemui.statusbar.policy.FlashlightController: boolean hasFlashlight()>
<com.android.server.input.InputManagerService: int[] getInputDeviceIds()>
<com.android.server.policy.keyguard.KeyguardStateMonitor: void dump(java.lang.String,java.io.PrintWriter)>
<com.android.preload.ui.SwingUI: void showWaitDialog()>
<com.android.server.pm.PackageInstallerSession: boolean isStaged()>
<com.android.printspooler.ui.PageAdapter.ContentCallbacks: void onSecurePdfFile()>
<com.android.settingslib.deviceinfo.AbstractWifiMacAddressPreferenceController: void updateConnectivity()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void resetExposedMenuView(boolean,boolean)>
<com.android.server.media.MediaSessionRecord: android.app.PendingIntent getMediaButtonReceiver()>
<com.android.server.ServiceWatcher: void <init>(android.content.Context,java.lang.String,java.lang.String,int,int,int,android.os.Handler)>
<android.os.StrictModeTest: void timeVmViolationNoStrictMode()>
<com.android.systemui.qs.external.QSTileServiceWrapper: boolean onClick(android.os.IBinder)>
<com.android.systemui.qs.tiles.BatterySaverTile: com.android.systemui.plugins.qs.QSTile.BooleanState newTileState()>
<com.android.systemui.plugins.statusbar.StatusBarStateController: float getDozeAmount()>
<com.android.systemui.shared.system.MetricsLoggerCompat: void visible(int)>
<com.android.server.notification.NotificationUsageStats: void registerClickedByUser(com.android.server.notification.NotificationRecord)>
<com.android.settingslib.bluetooth.HeadsetProfile: java.lang.String toString()>
<com.android.systemui.statusbar.policy.UserSwitcherController.BaseUserAdapter: int getCount()>
<com.android.server.location.GeofenceManager: void onStatusChanged(java.lang.String,int,android.os.Bundle)>
<com.android.systemui.statusbar.phone.LightBarController: void setQsCustomizing(boolean)>
<com.android.server.PackageWatchdog: void onPackageFailure(java.util.List)>
<com.android.server.appprediction.RemoteAppPredictionService: long getTimeoutIdleBindMillis()>
<com.android.systemui.statusbar.phone.StatusBarWindowController: boolean getBubblesShowing()>
<com.android.systemui.statusbar.policy.KeyButtonDrawable: float getTranslationX()>
<com.android.settingslib.net.SummaryForAllUidLoader: void <init>(android.content.Context,android.net.INetworkStatsSession,android.os.Bundle)>
<com.android.systemui.statusbar.ScrimView: int getTint()>
<com.android.systemui.qs.car.CarStatusBarHeader: void onFinishInflate()>
<com.android.packageinstaller.DeviceUtils: boolean isWear(android.content.Context)>
<android.net.ip.IpServer: int lastError()>
<com.android.systemui.analytics.DataCollector: void onAffordanceSwipingAborted()>
<com.android.printspooler.ui.PrinterRegistry.OnPrintersChangeListener: void onPrintersInvalid()>
<com.android.settingslib.accounts.AuthenticatorHelper: java.util.ArrayList getAuthoritiesForAccountType(java.lang.String)>
<com.android.server.pm.permission.PermissionsState: int[] computeGids(int[])>
<com.android.systemui.statusbar.RemoteInputController: void requestDisallowLongPressAndDismiss()>
<com.android.settingslib.RestrictedSwitchPreference: void onAttachedToHierarchy(androidx.preference.PreferenceManager)>
<com.android.server.om.OverlayManagerServiceImpl.OverlayChangeListener: void onOverlaysChanged(java.lang.String,int)>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverySessionStorage: void add(int,com.android.server.locksettings.recoverablekeystore.storage.RecoverySessionStorage.Entry)>
<com.android.printservice.recommendation.plugin.xerox.XeroxPrintServiceRecommendationPlugin: void dataSetChanged()>
<com.android.server.oemlock.OemLockService: boolean isHalPresent()>
<com.android.systemui.statusbar.notification.TransformState: void setClippingDeactivated(android.view.View,boolean)>
<com.android.settingslib.bluetooth.LocalBluetoothProfile: boolean isProfileReady()>
<com.android.server.NetworkManagementService: android.net.InterfaceConfiguration getInterfaceConfig(java.lang.String)>
<com.android.server.pm.KeySetManagerService: void dumpLPr(java.io.PrintWriter,java.lang.String,com.android.server.pm.DumpState)>
<com.android.systemui.statusbar.phone.StatusBar: void setKeyguardFadingAway(long,long,long)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean isOnKeyguard()>
<com.android.server.usb.descriptors.UsbDescriptor: int getStatus()>
<com.android.server.LocationManagerService: boolean isLocationEnabledForUser(int)>
<com.android.systemui.statusbar.phone.KeyguardStatusBarView: void onPowerSaveChanged(boolean)>
<com.android.server.PersistentDataBlockService: void onBootPhase(int)>
<com.android.server.appprediction.AppPredictionManagerService: int getMaximumTemporaryServiceDurationMs()>
<com.android.systemui.statusbar.StatusBarIconView: void setVisibleState(int)>
<com.android.fakeoemfeatures.FakeView: void <init>(android.content.Context)>
<com.android.systemui.volume.VolumePrefs: void unregisterCallbacks(android.content.Context,android.content.SharedPreferences.OnSharedPreferenceChangeListener)>
<com.android.settingslib.widget.LinkTextView: void setText(java.lang.CharSequence,android.widget.TextView.BufferType)>
<com.android.systemui.statusbar.phone.ScrimController: void setAodFrontScrimAlpha(float)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onUserSwitching(int)>
<com.android.uiautomator.core.UiAutomatorBridge: void setCompressedLayoutHierarchy(boolean)>
<com.android.server.vr.VrManagerService: void onAwakeStateChanged(boolean)>
<com.android.systemui.plugins.OverlayPlugin: void setup(android.view.View,android.view.View)>
<com.android.server.input.InputManagerService: void setPointerIconType(int)>
<android.widget.EditTextCursorMovementPerfTest: void testCursorMovement()>
<com.android.server.policy.keyguard.KeyguardServiceWrapper: void <init>(android.content.Context,com.android.internal.policy.IKeyguardService,com.android.server.policy.keyguard.KeyguardStateMonitor.StateCallback)>
<com.android.settingslib.bluetooth.LocalBluetoothManager: com.android.settingslib.bluetooth.LocalBluetoothManager create(android.content.Context,android.os.Handler,android.os.UserHandle)>
<com.android.localtransport.LocalTransport: int performFullBackup(android.content.pm.PackageInfo,android.os.ParcelFileDescriptor)>
<com.android.systemui.qs.external.CustomTile: java.lang.CharSequence getTileLabel()>
<com.android.systemui.statusbar.phone.PanelView: void notifyExpandingFinished()>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: boolean isSwipedEnoughToShowMenu()>
<com.android.server.statusbar.StatusBarManagerService: void onBiometricHelp(java.lang.String)>
<com.android.server.pm.permission.PermissionSettings: void writePermissions(org.xmlpull.v1.XmlSerializer)>
<com.android.server.contentsuggestions.ContentSuggestionsManagerService: void enforceCallingPermissionForManagement()>
<com.android.systemui.statusbar.policy.LocationControllerImpl: boolean areActiveHighPowerLocationRequests()>
<com.android.systemui.recents.RecentsImpl: void showRelativeAffiliatedTask(boolean)>
<android.net.ip.IIpClient: void removeKeepalivePacketFilter(int)>
<com.android.server.policy.PhoneWindowManager: void enableScreenAfterBoot()>
<com.android.server.policy.WindowManagerPolicy: void onDefaultDisplayFocusChangedLw(com.android.server.policy.WindowManagerPolicy.WindowState)>
<com.android.systemui.statusbar.phone.HeadsUpManagerPhone: void dumpInternal(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.content.SyncManager: com.android.server.content.SyncStorageEngine getSyncStorageEngine()>
<javax.obex.ServerRequestHandler: long getConnectionId()>
<com.android.server.uri.UriPermissionOwner: void removeReadPermission(com.android.server.uri.UriPermission)>
<com.android.settingslib.animation.AppearAnimationUtils: void startAnimation(android.view.View[],java.lang.Runnable)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: boolean shouldDismissOnMenuPressed()>
<javax.microedition.khronos.opengles.GL10: void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer)>
<javax.microedition.khronos.opengles.GL11: void glTexParameterfv(int,int,float[],int)>
<com.android.systemui.statusbar.notification.row.ExpandableOutlineView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.google.android.startop.iorap.AppLaunchEvent.BaseWithActivityRecordData: java.lang.String toStringBody()>
<android.net.INetworkStackStatusCallback: void onStatusAvailable(int)>
<com.android.systemui.analytics.DataCollector: void onScreenOff()>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void show(android.os.Bundle)>
<com.android.settingslib.media.LocalMediaManager: com.android.settingslib.media.MediaDevice getCurrentConnectedDevice()>
<android.net.ip.IpServer.Dependencies: android.net.INetd getNetdService()>
<com.android.server.notification.NotificationUsageStats.SingleNotificationStats: void onExpansionChanged(boolean,boolean)>
<com.android.settingslib.graph.BatteryMeterDrawableBase: void setAlpha(int)>
<com.android.server.locksettings.LockSettingsService: com.android.internal.widget.VerifyCredentialResponse verifyTiedProfileChallenge(byte[],int,long,int)>
<com.android.systemui.statusbar.phone.StatusBar: void updateTheme()>
<com.android.systemui.media.NotificationPlayer: void play(android.content.Context,android.net.Uri,boolean,android.media.AudioAttributes)>
<com.android.server.pm.UserManagerService: void setUserIcon(int,android.graphics.Bitmap)>
<com.android.server.pm.permission.PermissionManagerServiceInternal: com.android.server.pm.permission.BasePermission getPermissionTEMP(java.lang.String)>
<com.android.settingslib.applications.ApplicationsState.AppFilter: boolean filterApp(com.android.settingslib.applications.ApplicationsState.AppEntry)>
<com.android.server.appbinding.finders.CarrierMessagingClientServiceFinder: void <init>(android.content.Context,java.util.function.BiConsumer,android.os.Handler)>
<com.android.server.pm.PackageInstallerService: void systemReady()>
<com.android.server.TelephonyRegistry: void notifySrvccStateChanged(int,int)>
<com.android.gallery3d.glrenderer.UploadedTexture: void <init>(boolean)>
<com.android.systemui.media.MediaProjectionPermissionActivity: void onCancel(android.content.DialogInterface)>
<com.android.server.webkit.SystemImpl: boolean isFallbackLogicEnabled()>
<com.android.printspooler.ui.PrintActivity: void onRequestContentUpdate()>
<com.android.printservice.recommendation.plugin.mdnsFilter.VendorConfig: com.android.printservice.recommendation.plugin.mdnsFilter.VendorConfig getConfig(android.content.Context,java.lang.String)>
<com.android.systemui.qs.DataUsageGraph: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin.MenuItem getAppOpsMenuItem(android.content.Context)>
<com.android.systemui.statusbar.notification.row.NotificationInfo: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.android.systemui.statusbar.notification.row.NotificationContentInflater.AsyncInflationTask: void onPostExecute(com.android.systemui.statusbar.notification.row.NotificationContentInflater.InflationProgress)>
<com.android.systemui.biometrics.BiometricDialogView: void setUserId(int)>
<com.android.printspooler.ui.SelectPrinterActivity: void onSaveInstanceState(android.os.Bundle)>
<com.android.systemui.qs.QSAnimator: void onViewAttachedToWindow(android.view.View)>
<com.android.gallery3d.glrenderer.BasicTexture: int getTarget()>
<com.android.systemui.qs.tiles.WifiTile.WifiDetailAdapter: java.lang.Boolean getToggleState()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setProfileEnabled(android.content.ComponentName)>
<com.android.systemui.statusbar.policy.DataSaverController: void setDataSaverEnabled(boolean)>
<com.android.server.display.BrightnessIdleJob: void cancelJob(android.content.Context)>
<android.media.Media2HTTPConnection: void disconnect()>
<com.android.systemui.statusbar.phone.StatusBarSignalPolicy: void setMobileDataEnabled(boolean)>
<com.android.server.slice.PinnedSliceState: void <init>(com.android.server.slice.SliceManagerService,android.net.Uri,java.lang.String)>
<com.android.server.display.color.ColorDisplayService: void onSwitchUser(int)>
<com.android.systemui.biometrics.BiometricDialogImpl: void onBiometricAuthenticated(boolean,java.lang.String)>
<com.android.systemui.plugins.VolumeDialogController: void vibrate(android.os.VibrationEffect)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: boolean hasJustSentRemoteInput()>
<com.android.server.pm.PackageInstallerSession: void open()>
<com.android.server.policy.SoftRestrictedPermissionPolicy: boolean canBeGranted()>
<com.android.systemui.recents.RecentsActivity: void onUserInteraction()>
<com.android.server.accessibility.EventStreamTransformation: void setNext(com.android.server.accessibility.EventStreamTransformation)>
<com.android.wallpapercropper.WallpaperCropActivity: void setWallpaper(java.lang.String,boolean)>
<android.media.Session2Link: boolean unlinkToDeath(android.os.IBinder.DeathRecipient,int)>
<com.android.keyguard.ViewMediatorCallback: void keyguardGone()>
<com.android.server.notification.NotificationIntrusivenessExtractor: com.android.server.notification.RankingReconsideration process(com.android.server.notification.NotificationRecord)>
<com.android.systemui.ActivityIntentHelper: void <init>(android.content.Context)>
<com.android.settingslib.core.lifecycle.ObservablePreferenceFragment: void onStop()>
<com.android.pacprocessor.PacService: android.os.IBinder onBind(android.content.Intent)>
<com.android.systemui.volume.VolumeDialogImpl: void dismiss(int)>
<com.android.settingslib.applications.AppUtils: java.lang.CharSequence getApplicationLabel(android.content.pm.PackageManager,java.lang.String)>
<com.android.server.usb.UsbHostManager: void systemReady()>
<com.android.systemui.recents.views.TaskStackView: boolean setFocusedTask(int,boolean,boolean,int)>
<com.android.systemui.egg.MLand: java.util.ArrayList getGameControllers()>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector fromParent(com.android.uiautomator.core.UiSelector)>
<com.android.systemui.plugins.GlobalActions: void showGlobalActions(com.android.systemui.plugins.GlobalActions.GlobalActionsManager)>
<com.android.server.NetworkManagementService: void setFirewallEnabled(boolean)>
<com.android.systemui.qs.tiles.DataUsageDetailView: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.server.PackageWatchdog: java.util.Set getPackages(com.android.server.PackageWatchdog.PackageHealthObserver)>
<com.android.systemui.pip.tv.PipManager: void removeListener(com.android.systemui.pip.tv.PipManager.Listener)>
<com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer: void <init>(android.content.Context)>
<com.android.server.NetworkManagementService: void setFirewallInterfaceRule(java.lang.String,boolean)>
<com.android.settingslib.CustomEditTextPreferenceCompat.CustomPreferenceDialogFragment: void onPrepareDialogBuilder(androidx.appcompat.app.AlertDialog.Builder)>
<com.android.server.notification.GroupHelper: void onNotificationPosted(android.service.notification.StatusBarNotification,boolean)>
<com.android.settingslib.drawable.UserIconDrawable: void setBadgeRadius(float)>
<com.android.settingslib.Utils: int getThemeAttr(android.content.Context,int)>
<com.android.systemui.statusbar.notification.row.RowInflaterTask: void inflate(android.content.Context,android.view.ViewGroup,com.android.systemui.statusbar.notification.collection.NotificationEntry,com.android.systemui.statusbar.notification.row.RowInflaterTask.RowInflationFinishedListener)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setActivatedChild(com.android.systemui.statusbar.notification.row.ActivatableNotificationView)>
<com.android.systemui.DependencyBinder: com.android.systemui.plugins.ActivityStarter provideActivityStarter(com.android.systemui.ActivityStarterDelegate)>
<com.android.systemui.statusbar.CommandQueue: void showScreenPinningRequest(int)>
<com.android.systemui.qs.tiles.DataSaverTile: void handleClick()>
<com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer: android.view.ViewGroup getCurrentHeaderView()>
<com.android.server.policy.PhoneWindowManager: int checkAddPermission(android.view.WindowManager.LayoutParams,int[])>
<com.android.server.pm.UserManagerService: boolean isQuietModeEnabled(int)>
<com.android.keyguard.KeyguardSliceView: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.settingslib.RestrictedLockUtilsInternal.LockSettingCheck: boolean isEnforcing(android.app.admin.DevicePolicyManager,android.content.ComponentName,int)>
<com.android.settingslib.bluetooth.CachedBluetoothDeviceManager: void onDeviceUnpaired(com.android.settingslib.bluetooth.CachedBluetoothDevice)>
<com.android.systemui.qs.external.CustomTile: void onDialogHidden()>
<com.android.server.appop.AppOpsService: void setHistoryParameters(int,long,int)>
<com.android.systemui.screenshot.ScreenshotSelectorView: void startSelection(int,int)>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: void onConfigurationChanged()>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getOrganizationColor(android.content.ComponentName)>
<com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer: void onExpansionChanged()>
<com.android.systemui.statusbar.notification.stack.NotificationListContainer: void changeViewPosition(com.android.systemui.statusbar.notification.row.ExpandableView,int)>
<com.android.systemui.statusbar.BackDropView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.systemui.qs.QSDetailItems: void onFinishInflate()>
<android.app.backup.ForwardingBackupAgent: void attach(android.content.Context)>
<com.android.systemui.recents.RecentsActivity: void onBusEvent(com.android.systemui.recents.events.ui.StackViewScrolledEvent)>
<android.database.SQLiteDatabaseIoPerfTest: void setUp()>
<com.android.systemui.statusbar.GestureRecorder.Gesture.TagRecord: java.lang.String toJson()>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onPhoneStateChanged(int)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean getIsNonblockable()>
<com.android.packageinstaller.InstallEventReceiver: void onReceive(android.content.Context,android.content.Intent)>
<com.android.systemui.assist.ui.DisplayUtils: int convertDpToPx(float,android.content.Context)>
<com.android.systemui.statusbar.policy.ZenModeControllerImpl: void onUserSwitched(int)>
<com.android.preload.ui.SequenceUI: com.android.preload.ui.SequenceUI action(java.lang.Class)>
<com.android.server.location.AbstractLocationProvider: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.statusbar.notification.stack.AmbientState: int getScrollY()>
<com.android.keyguard.KeyguardUpdateMonitor: android.telephony.SubscriptionInfo getSubscriptionInfoForSubId(int)>
<com.android.systemui.recents.model.TaskKeyStrongCache: java.lang.Object getCacheEntry(int)>
<com.android.systemui.globalactions.GlobalActionsComponent: void reboot(boolean)>
<com.android.server.AppStateTracker.Listener: void unblockAlarmsForUidPackage(int,java.lang.String)>
<com.android.printservice.recommendation.plugin.mdnsFilter.VendorConfig: java.lang.String toString()>
<com.android.systemui.statusbar.phone.NotificationsQuickSettingsContainer: android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)>
<com.android.systemui.statusbar.phone.StatusBarWindowController: void setStateListener(com.android.systemui.statusbar.phone.StatusBarWindowController.OtherwisedCollapsedListener)>
<android.net.ip.IIpClientCallbacks: void setNeighborDiscoveryOffload(boolean)>
<com.android.uiautomator.core.UiDevice: boolean hasWatcherTriggered(java.lang.String)>
<com.android.systemui.statusbar.AlertingNotificationManager.AlertEntry: int compareTo(com.android.systemui.statusbar.AlertingNotificationManager.AlertEntry)>
<com.android.server.devicepolicy.DevicePolicyManagerService: android.content.ComponentName setGlobalProxy(android.content.ComponentName,java.lang.String,java.lang.String)>
<com.android.server.audio.AudioService: int getMaxVolumeIndexForAttributes(android.media.AudioAttributes)>
<com.android.systemui.tuner.TunerZenModePanel: boolean isEditing()>
<com.android.server.AppStateTracker: void addListener(com.android.server.AppStateTracker.Listener)>
<com.android.server.pm.permission.PermissionManagerServiceInternal: java.util.List addAllPermissions(android.content.pm.PackageParser.Package,boolean)>
<com.android.server.biometrics.iris.IrisService: long getHalDeviceId()>
<com.android.systemui.statusbar.phone.DemoStatusIcons: void addDemoWifiView(com.android.systemui.statusbar.phone.StatusBarSignalPolicy.WifiIconState)>
<javax.obex.ObexHelper: int findTag(byte,byte[])>
<com.android.systemui.statusbar.phone.UnlockMethodCache: boolean isTrustManaged()>
<com.android.systemui.statusbar.NotificationLockscreenUserManagerImpl: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.IntentResolver: java.lang.Object newResult(android.content.IntentFilter,int,int)>
<com.android.systemui.recents.OverviewProxyService: void notifyAssistantVisibilityChanged(float)>
<com.android.systemui.SwipeHelper.Callback: void onDragCancelled(android.view.View)>
<com.android.systemui.statusbar.phone.ContextualButton: void setListener(com.android.systemui.statusbar.phone.ContextualButton.ContextButtonListener)>
<com.android.systemui.statusbar.notification.row.NotificationContentInflater: android.os.CancellationSignal apply(boolean,com.android.systemui.statusbar.notification.row.NotificationContentInflater.InflationProgress,int,android.util.ArrayMap,com.android.systemui.statusbar.notification.row.ExpandableNotificationRow,boolean,android.widget.RemoteViews.OnClickHandler,com.android.systemui.statusbar.notification.row.NotificationContentInflater.InflationCallback)>
<com.android.systemui.statusbar.notification.TransformState: float getTransformationStartX()>
<com.android.future.usb.UsbManager: com.android.future.usb.UsbAccessory[] getAccessoryList()>
<com.android.preload.DumpData: void countBootClassPath()>
<com.android.server.trust.TrustManagerService: void onCleanupUser(int)>
<com.android.server.pm.PackageManagerService: java.lang.String[] getAppOpPermissionPackages(java.lang.String)>
<com.android.commands.hid.Event: java.lang.String toString()>
<com.android.systemui.statusbar.policy.ExtensionController.Extension: void destroy()>
<com.android.systemui.recents.model.TaskStack: void dump(java.lang.String,java.io.PrintWriter)>
<com.android.settingslib.net.NetworkCycleDataLoader: void onStopLoading()>
<com.android.server.role.RoleManagerService.RoleHoldersResolver: java.util.List getRoleHolders(java.lang.String,int)>
<com.android.systemui.biometrics.BiometricDialogView: void onSaveState(android.os.Bundle)>
<com.android.systemui.util.InjectionInflationController.ViewInstanceCreator: com.android.systemui.statusbar.phone.NotificationPanelView createPanelView()>
<com.android.powermodel.component.ModemProfile.Builder: void setSleepMa(float)>
<com.android.systemui.qs.QSAnimator: void setHost(com.android.systemui.qs.QSTileHost)>
<com.android.server.autofill.ui.AutoFillUI: void filterFillUi(java.lang.String,com.android.server.autofill.ui.AutoFillUI.AutoFillUiCallback)>
<com.android.powermodel.component.CpuProfile.Builder: com.android.powermodel.component.CpuProfile build()>
<com.android.carrierdefaultapp.CaptivePortalLoginActivity: void onBackPressed()>
<com.android.printspooler.widget.PrintContentView.OptionsStateController: boolean canCloseOptions()>
<com.android.server.notification.NotificationRecord: android.app.Notification getNotification()>
<com.android.media.remotedisplay.RemoteDisplayProvider: void onSetVolume(com.android.media.remotedisplay.RemoteDisplay,int)>
<com.android.wallpapercropper.CropView: boolean onScaleBegin(android.view.ScaleGestureDetector)>
<com.android.systemui.statusbar.phone.LockIcon: void setBouncerVisible(boolean)>
<com.android.systemui.recents.RecentsSystemUserService: android.os.IBinder onBind(android.content.Intent)>
<android.media.MediaController2.Builder: void <init>(android.content.Context,android.media.Session2Token)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setOnKeyguard(boolean)>
<com.android.settingslib.core.lifecycle.ObservableFragment: void onCreate(android.os.Bundle)>
<com.android.systemui.util.wakelock.KeepAwakeAnimationListener: void onAnimationStart(android.view.animation.Animation)>
<com.android.systemui.statusbar.policy.ZenModeController: int getCurrentUser()>
<com.android.shell.BugreportProgressService: void onCreate()>
<com.android.keyguard.KeyguardSimPukView: void onDetachedFromWindow()>
<com.android.systemui.statusbar.phone.StatusBar: boolean isScreenFullyOff()>
<com.android.server.locksettings.SyntheticPasswordManager: byte[] secureRandom(int)>
<com.android.systemui.statusbar.notification.ActivityLaunchAnimator.ExpandAnimationParameters: int getStartClipTopAmount()>
<com.android.systemui.shared.system.QuickStepContract: boolean isLegacyMode(int)>
<com.android.systemui.statusbar.EmptyShadeView: com.android.systemui.statusbar.notification.stack.ExpandableViewState createExpandableViewState()>
<com.android.systemui.statusbar.NotificationPresenter: void updateMediaMetaData(boolean,boolean)>
<com.android.printspooler.ui.PrinterRegistry: boolean areHistoricalPrintersLoaded()>
<com.android.systemui.shared.plugins.PluginInstanceManager: void onPackageChange(java.lang.String)>
<com.android.systemui.statusbar.phone.UnlockMethodCache: void addListener(com.android.systemui.statusbar.phone.UnlockMethodCache.OnUnlockMethodChangedListener)>
<com.android.server.content.SyncStorageEngine: void setOnSyncRequestListener(com.android.server.content.SyncStorageEngine.OnSyncRequestListener)>
<com.android.server.pm.PackageManagerService: java.lang.String getPermissionControllerPackageName()>
<com.android.settingslib.suggestions.SuggestionController.ServiceConnectionListener: void onServiceDisconnected()>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb: long setSnapshotVersion(int,int,long)>
<com.android.systemui.statusbar.OperatorNameView: void onDarkChanged(android.graphics.Rect,float,int)>
<com.android.uiautomator.core.UiDevice: void waitForIdle()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setDozeAmount(float)>
<com.android.systemui.statusbar.phone.NotificationIconContainer: void resetViewStates()>
<android.net.netlink.StructNlAttr: int getValueAsInt(int)>
<com.android.systemui.recents.model.HighResThumbnailLoader: void onTaskVisible(com.android.systemui.shared.recents.model.Task)>
<com.android.keyguard.CarrierText: void onFinishInflate()>
<com.android.gallery3d.glrenderer.GLES20Canvas: void fillRect(float,float,float,float,int)>
<com.android.externalstorage.ExternalStorageProvider: void ejectRoot(java.lang.String)>
<com.android.systemui.statusbar.phone.StatusBarWindowView: void onFinishInflate()>
<android.media.DataSourceDesc.Builder: android.media.DataSourceDesc.Builder setDataSource(android.net.Uri)>
<com.android.systemui.recents.views.RecentsView: boolean launchFocusedTask(int)>
<com.android.systemui.statusbar.phone.RotationButton: void updateIcon()>
<com.android.settingslib.NetworkPolicyEditor: void setPolicyWarningBytes(android.net.NetworkTemplate,long)>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationViewWrapper: void invertViewLuminosity(android.view.View)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow.OnAppOpsClickListener: boolean onClick(android.view.View,int,int,com.android.systemui.plugins.statusbar.NotificationMenuRowPlugin.MenuItem)>
<android.media.MediaPlayer2: java.lang.Object setPlaybackParams(android.media.PlaybackParams)>
<com.android.server.media.projection.MediaProjectionManagerService: void onStart()>
<com.android.settingslib.utils.IconCache: void updateIcon(android.graphics.drawable.Icon,android.graphics.drawable.Drawable)>
<com.android.systemui.shared.system.TaskStackChangeListener: void onTaskMovedToFront(int)>
<javax.obex.ObexTransport: java.io.OutputStream openOutputStream()>
<com.android.systemui.statusbar.policy.DeadZone: void onConfigurationChanged(int)>
<com.android.settingslib.bluetooth.LocalBluetoothManager: com.android.settingslib.bluetooth.LocalBluetoothProfileManager getProfileManager()>
<com.android.settingslib.utils.StringUtil: java.lang.CharSequence formatRelativeTime(android.content.Context,double,boolean)>
<com.android.systemui.statusbar.phone.StatusBarWindowController: void setForceDozeBrightness(boolean)>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: void setTaskOverridesForInitialState(com.android.systemui.recents.model.TaskStack,boolean)>
<com.android.systemui.statusbar.phone.BiometricUnlockController: void <init>(android.content.Context,com.android.systemui.statusbar.phone.DozeScrimController,com.android.systemui.keyguard.KeyguardViewMediator,com.android.systemui.statusbar.phone.ScrimController,com.android.systemui.statusbar.phone.StatusBar,com.android.systemui.statusbar.phone.UnlockMethodCache,android.os.Handler,com.android.keyguard.KeyguardUpdateMonitor,com.android.systemui.tuner.TunerService)>
<com.android.systemui.statusbar.StatusBarIconView: void setOnDismissListener(java.lang.Runnable)>
<com.android.systemui.biometrics.BiometricDialogView: void onAuthenticationFailed(java.lang.String)>
<com.android.systemui.statusbar.notification.ImageTransformState: android.graphics.drawable.Icon getIcon()>
<com.android.keyguard.KeyguardUpdateMonitor: void onTrustError(java.lang.CharSequence)>
<com.android.keyguard.PasswordTextView: boolean hasOverlappingRendering()>
<com.android.server.notification.NotificationManagerInternal: void enqueueNotification(java.lang.String,java.lang.String,int,int,java.lang.String,int,android.app.Notification,int)>
<com.android.systemui.statusbar.phone.StatusBarIconHolder: com.android.systemui.statusbar.phone.StatusBarIconHolder fromWifiIconState(com.android.systemui.statusbar.phone.StatusBarSignalPolicy.WifiIconState)>
<com.android.settingslib.media.InfoMediaManager: void stopScan()>
<com.android.systemui.qs.QSFragment: void setContainer(android.view.ViewGroup)>
<com.android.systemui.tuner.TunablePadding: com.android.systemui.tuner.TunablePadding addTunablePadding(android.view.View,java.lang.String,int,int)>
<com.android.systemui.AutoReinflateContainer: void inflateLayout()>
<com.android.gallery3d.glrenderer.GLPaint: void setLineWidth(float)>
<com.android.systemui.statusbar.notification.row.NotificationInfo: void onFinishedClosing()>
<com.android.systemui.statusbar.notification.InstantAppNotifier: void start()>
<com.android.systemui.util.InjectionInflationController.ViewInstanceCreator: com.android.systemui.qs.QSCarrierGroup createQSCarrierGroup()>
<com.android.settingslib.suggestions.SuggestionControllerMixinCompat: void onLoadFinished(androidx.loader.content.Loader,java.util.List)>
<android.processor.view.inspector.InspectionCompanionGenerator: void generate(android.processor.view.inspector.InspectableClassModel)>
<com.android.settingslib.deviceinfo.AbstractImsStatusPreferenceController: java.lang.String getPreferenceKey()>
<com.android.systemui.HardwareUiLayout: float getAnimationOffsetY()>
<com.android.server.uri.GrantUri: void writeToProto(android.util.proto.ProtoOutputStream,long)>
<com.android.systemui.qs.tiles.LocationTile: void handleSetListening(boolean)>
<com.android.keyguard.KeyguardHostView: void startDisappearAnimation(java.lang.Runnable)>
<com.android.server.infra.ServiceNameResolver: void setTemporaryService(int,java.lang.String,int)>
<com.android.keyguard.KeyguardAbsKeyInputView: void resetPasswordText(boolean,boolean)>
<com.android.uiautomator.core.UiDevice: boolean pressDelete()>
<com.android.server.slice.SliceClientPermissions: java.lang.String getFileName(com.android.server.slice.SlicePermissionManager.PkgUser)>
<com.android.printspooler.ui.PageAdapter.PreviewArea: int getWidth()>
<com.android.systemui.statusbar.phone.NotificationPanelView: void animateToFullShade(long)>
<com.android.systemui.bubbles.BubbleDismissView: void <init>(android.content.Context)>
<com.android.systemui.qs.QSHost: java.util.Collection getTiles()>
<com.android.server.appop.AppOpsService: void <init>(java.io.File,android.os.Handler)>
<com.android.server.pm.UserManagerService: void setDefaultGuestRestrictions(android.os.Bundle)>
<com.android.server.SystemServiceManager: long getRuntimeStartElapsedTime()>
<com.android.systemui.statusbar.phone.SettingsButton: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.audio.MediaFocusControl: void unregisterAudioFocusClient(java.lang.String)>
<android.text.PaintMeasureDrawPerfTest: void <init>(int,boolean)>
<com.android.settingslib.core.lifecycle.ObservablePreferenceFragment: com.android.settingslib.core.lifecycle.Lifecycle getSettingsLifecycle()>
<javax.microedition.khronos.opengles.GL11ExtensionPack: void glFramebufferRenderbufferOES(int,int,int,int)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void applyChildrenState()>
<com.android.systemui.statusbar.phone.ButtonDispatcher: int getVisibility()>
<com.android.server.accessibility.AccessibilityManagerService.Lifecycle: void onStart()>
<com.android.systemui.util.leak.LeakDetector: void trackCollection(java.util.Collection,java.lang.String)>
<com.android.keyguard.KeyguardHostView: void dispatchSystemUiVisibilityChanged(int)>
<android.perftests.utils.PerfStatusReporter: android.perftests.utils.BenchmarkState getBenchmarkState()>
<com.android.server.timezone.ConfigHelper: int getFailedCheckRetryCount()>
<com.android.settingslib.bluetooth.LocalBluetoothProfileManager: boolean isManagerReady()>
<com.android.server.pm.PackageManagerService: void deletePackageVersioned(android.content.pm.VersionedPackage,android.content.pm.IPackageDeleteObserver2,int,int)>
<com.android.systemui.shared.recents.model.IconLoader: android.graphics.drawable.Drawable getBadgedActivityIcon(android.content.pm.ActivityInfo,int,android.app.ActivityManager.TaskDescription)>
<com.android.settingslib.wifi.WifiSavedConfigUtils: java.util.List getAllConfigs(android.content.Context,android.net.wifi.WifiManager)>
<com.android.server.content.ContentService: void removeStatusChangeListener(android.content.ISyncStatusObserver)>
<com.android.systemui.statusbar.phone.NavigationBarFragment: void disableAnimationsDuringHide(long)>
<com.android.uiautomator.core.UiObject: boolean longClick()>
<com.android.systemui.statusbar.phone.SystemUIDialog: void setShowForAllUsers(android.app.Dialog,boolean)>
<com.android.systemui.plugins.qs.QS: void animateHeaderSlidingIn(long)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: com.android.systemui.statusbar.notification.row.wrapper.NotificationViewWrapper getVisibleWrapper(int)>
<com.android.uiautomator.core.UiObject: void clearTextField()>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb: long setRecoveryServiceCertSerial(int,int,java.lang.String,long)>
<com.android.server.testing.shadows.ShadowSlog: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>
<com.android.systemui.statusbar.phone.StatusBar: void maybeEscalateHeadsUp()>
<com.android.systemui.recents.RecentsImpl: void startRecentsActivityAndDismissKeyguardIfNeeded(android.app.ActivityManager.RunningTaskInfo,boolean,boolean,int)>
<com.android.systemui.statusbar.phone.StatusBar: void wakeUpIfDozing(long,android.view.View,java.lang.String)>
<com.android.systemui.classifier.HumanInteractionClassifier: void setType(int)>
<com.android.systemui.stackdivider.DividerHandleView: boolean hasOverlappingRendering()>
<com.android.systemui.plugins.ActivityStarter: void dismissKeyguardThenExecute(com.android.systemui.plugins.ActivityStarter.OnDismissAction,java.lang.Runnable,boolean)>
<com.android.server.notification.PreferencesHelper: void setEnabled(java.lang.String,int,boolean)>
<com.android.server.wallpaper.WallpaperManagerService: void setDimensionHints(int,int,java.lang.String,int)>
<com.android.server.media.projection.MediaProjectionManagerService: void onSwitchUser(int)>
<com.android.settingslib.media.MediaDevice: boolean isConnected()>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.activity.MultiWindowStateChangedEvent)>
<com.android.systemui.doze.DozeDockHandler: void <init>(android.content.Context,com.android.systemui.doze.DozeMachine,com.android.systemui.doze.DozeHost,android.hardware.display.AmbientDisplayConfiguration,android.os.Handler,com.android.systemui.dock.DockManager)>
<com.android.server.policy.WindowManagerPolicy.StartingSurface: void remove()>
<com.android.server.print.RemotePrintServiceRecommendationService.RemotePrintServiceRecommendationServiceCallbacks: void onPrintServiceRecommendationsUpdated(java.util.List)>
<com.android.systemui.statusbar.phone.StatusBarIconList: void dump(java.io.PrintWriter)>
<com.android.systemui.statusbar.notification.row.NotificationInfo: boolean shouldBeSaved()>
<com.android.server.usb.descriptors.ByteStream: int getReadCount()>
<com.android.settingslib.widget.AnimatedImageView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.settingslib.accessibility.AccessibilityUtils: java.lang.CharSequence getTextForLocale(android.content.Context,java.util.Locale,int)>
<com.android.server.pm.UserManagerService: void onBeforeUnlockUser(int)>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: void setLastInSection(boolean)>
<android.net.netlink.NetlinkSocket: int sendMessage(java.io.FileDescriptor,byte[],int,int,long)>
<android.text.PrecomputedTextMemoryUsageTest: void testMemoryUsage_Emoji()>
<com.android.server.location.AbstractLocationProvider.LocationProviderManager: void onSetEnabled(boolean)>
<com.android.localtransport.LocalTransport: java.lang.String transportDirName()>
<com.android.server.webkit.SystemInterface: void enablePackageForAllUsers(android.content.Context,java.lang.String,boolean)>
<com.android.systemui.stackdivider.ForcedResizableInfoActivity: void onCreate(android.os.Bundle)>
<lockedregioncodeinjection.LockTarget: java.lang.String getTargetDesc()>
<com.android.systemui.doze.DozeSensors: void setProxListening(boolean)>
<com.android.server.HardwarePropertiesManagerService: void <init>(android.content.Context)>
<com.android.settingslib.graph.SignalDrawable: int getIntrinsicHeight()>
<com.android.server.locksettings.LockSettingsService: com.android.internal.widget.VerifyCredentialResponse verifyCredential(byte[],int,long,int)>
<com.android.printspooler.ui.FusedPrintersProvider: void onStopLoading()>
<com.android.server.location.ComprehensiveCountryDetector: boolean isAirplaneModeOff()>
<com.android.server.notification.NotificationManagerService.DumpFilter: java.lang.String toString()>
<com.android.systemui.statusbar.phone.NavBarTintController: void onNavigationModeChanged(int)>
<com.android.server.timezone.RulesManagerIntentHelper: void sendTimeZoneOperationUnstaged()>
<com.android.systemui.statusbar.KeyboardShortcutAppItemLayout: void <init>(android.content.Context)>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow.NotificationMenuItem: java.lang.String getContentDescription()>
<com.android.server.accessibility.AccessibilityGestureDetector.Listener: boolean onGestureCompleted(int)>
<com.android.server.testing.shadows.ShadowRecoveryController: boolean isRecoverableKeyStoreEnabled(android.content.Context)>
<com.android.systemui.recents.LegacyRecentsImpl: void onBusEvent(com.android.systemui.recents.events.component.ExpandPipEvent)>
<com.android.server.biometrics.Constants: int actionBiometricEnroll()>
<com.android.server.content.ContentService: void putCache(java.lang.String,android.net.Uri,android.os.Bundle,int)>
<com.android.keyguard.KeyguardUpdateMonitor.BatteryStatus: int getChargingSpeed(int,int)>
<android.media.FileDataSourceDesc: android.os.ParcelFileDescriptor getParcelFileDescriptor()>
<com.android.proxyhandler.ProxyServer: void startServer()>
<com.android.settingslib.notification.EnableZenModeDialog: android.service.notification.Condition getTimeUntilNextAlarmCondition()>
<com.android.server.PersistentDataBlockManagerInternal: void setTestHarnessModeData(byte[])>
<com.android.server.devicepolicy.DevicePolicyManagerService: int getPermissionPolicy(android.content.ComponentName)>
<com.android.server.policy.keyguard.KeyguardServiceDelegate: void onShortPowerPressedGoHome()>
<com.android.server.display.BrightnessMappingStrategy: boolean hasUserDataPoints()>
<com.android.systemui.statusbar.notification.NotificationEntryManager: void setNotificationRemoveInterceptor(com.android.systemui.statusbar.NotificationRemoveInterceptor)>
<com.android.systemui.ForegroundServiceController: boolean isDisclosureNotification(android.service.notification.StatusBarNotification)>
<com.android.systemui.statusbar.phone.NotificationIconContainer: void applyIconStates()>
<com.android.systemui.qs.tileimpl.QSTileBaseView: java.lang.String toString()>
<com.android.server.oemlock.OemLockService: void <init>(android.content.Context)>
<com.android.settingslib.net.NetworkCycleDataLoader.Builder: void <init>(android.content.Context)>
<com.android.systemui.DependencyBinder: com.android.systemui.statusbar.policy.KeyguardMonitor provideKeyguardMonitor(com.android.systemui.statusbar.policy.KeyguardMonitorImpl)>
<com.android.systemui.util.leak.GarbageMonitor: void <init>(android.content.Context,android.os.Looper,com.android.systemui.util.leak.LeakDetector,com.android.systemui.util.leak.LeakReporter)>
<javax.microedition.khronos.opengles.GL11: void glGenBuffers(int,java.nio.IntBuffer)>
<com.android.server.location.RemoteListenerHelper.ListenerOperation: void execute(android.os.IInterface,com.android.server.location.CallerIdentity)>
<com.android.server.pm.PackageManagerService: void setRuntimePermissionsVersion(int,int)>
<com.android.systemui.bubbles.BubbleData: boolean hasBubbleWithKey(java.lang.String)>
<com.android.server.biometrics.BiometricServiceBase.BiometricServiceListener: void onAuthenticationFailedInternal(int,boolean)>
<com.android.systemui.statusbar.policy.MobileSignalController: void notifyListeners(com.android.systemui.statusbar.policy.NetworkController.SignalCallback)>
<com.android.server.timezone.PackageTracker: boolean start()>
<com.android.server.locksettings.LockSettingsService: byte[] getDecryptedPasswordForTiedProfile(int)>
<com.android.keyguard.KeyguardPinBasedInputView: void onResume(int)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void setPulsing(boolean)>
<com.android.server.contentsuggestions.ContentSuggestionsPerUserService: android.content.pm.ServiceInfo newServiceInfoLocked(android.content.ComponentName)>
<com.android.systemui.statusbar.phone.NavigationBarEdgePanel: void setIsDark(boolean,boolean)>
<com.android.systemui.statusbar.policy.KeyButtonDrawable: int getIntrinsicWidth()>
<com.android.systemui.statusbar.notification.stack.AmbientState: boolean isDozingAndNotPulsing(com.android.systemui.statusbar.notification.row.ExpandableView)>
<com.android.systemui.CarSystemUIFactory: com.android.systemui.statusbar.notification.NotificationInterruptionStateProvider provideNotificationInterruptionStateProvider(android.content.Context)>
<com.android.server.biometrics.face.FaceUtils: java.util.List getBiometricsForUser(android.content.Context,int)>
<com.android.systemui.statusbar.policy.HeadsUpManager: int compare(com.android.systemui.statusbar.notification.collection.NotificationEntry,com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.settingslib.suggestions.SuggestionControllerMixinCompat: void onServiceConnected()>
<com.android.server.policy.keyguard.KeyguardStateMonitor: void onShowingStateChanged(boolean)>
<com.android.systemui.statusbar.policy.SmartReplyView: void setBackgroundTintColor(int)>
<com.android.systemui.statusbar.notification.ImageTransformState: com.android.systemui.statusbar.notification.ImageTransformState obtain()>
<com.android.systemui.statusbar.notification.stack.ViewState: java.lang.Object getChildTag(android.view.View,int)>
<com.android.settingslib.deviceinfo.AbstractBluetoothAddressPreferenceController: java.lang.String getPreferenceKey()>
<com.android.systemui.doze.DozeService: void onRequestShowDoze()>
<com.android.settingslib.media.MediaManager.MediaDeviceCallback: void onDeviceListAdded(java.util.List)>
<com.android.systemui.qs.tileimpl.QSFactoryImpl: com.android.systemui.plugins.qs.QSTileView createTileView(com.android.systemui.plugins.qs.QSTile,boolean)>
<com.android.carrierdefaultapp.ProvisionObserver: boolean onStopJob(android.app.job.JobParameters)>
<com.android.preload.classdataretrieval.hprof.GeneralHprofDumpHandler: void onEndFailure(com.android.ddmlib.Client,java.lang.String)>
<com.android.server.pm.IntentFilterVerificationState: int getUserId()>
<com.android.gallery3d.exif.ExifTag: long getValueAt(int)>
<com.android.systemui.qs.tileimpl.QSTileImpl: boolean isShowingDetail()>
<com.android.systemui.statusbar.phone.NotificationGroupManager: void onEntryRemoved(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.systemui.statusbar.NotificationRemoteInputManager: void onPanelCollapsed()>
<com.android.server.wallpaper.WallpaperManagerService: boolean setLockWallpaperCallback(android.app.IWallpaperManagerCallback)>
<android.net.NetworkMonitorManager: boolean start()>
<com.android.settingslib.dream.DreamBackend: android.content.ComponentName getDefaultDream()>
<com.android.server.location.GnssSatelliteBlacklistHelperTest: void setUp()>
<com.android.systemui.recents.views.DockState.ViewState: void draw(android.graphics.Canvas)>
<com.android.systemui.qs.PageIndicator: void onLayout(boolean,int,int,int,int)>
<com.android.location.provider.ProviderPropertiesUnbundled: java.lang.String toString()>
<com.android.systemui.qs.QSSecurityFooter: void showDeviceMonitoringDialog()>
<com.android.settingslib.applications.instantapps.InstantAppDataProvider: boolean isInstantApp(android.content.pm.ApplicationInfo)>
<com.android.systemui.qs.tiles.NfcTile: com.android.systemui.plugins.qs.QSTile.BooleanState newTileState()>
<android.os.ParcelArrayPerfTest: void setUp()>
<com.android.server.audio.AudioService: boolean isValidRingerMode(int)>
<com.android.statsd.loadtest.LoadtestActivity: void onNewIntent(android.content.Intent)>
<com.android.server.PackageWatchdog.PackageHealthObserver: int onHealthCheckFailed(android.content.pm.VersionedPackage)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean mustStayOnScreen()>
<com.android.systemui.statusbar.AnimatedImageView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.android.systemui.statusbar.phone.PanelView: void loadDimens()>
<com.android.systemui.recents.model.RecentsTaskLoader: void loadTaskData(com.android.systemui.shared.recents.model.Task)>
<com.android.settingslib.media.PhoneMediaDevice: java.lang.String getId()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: boolean isPinned()>
<com.android.systemui.screenshot.ScreenshotSelectorView: void updateSelection(int,int)>
<com.android.systemui.doze.DozeDockHandler: void transitionTo(com.android.systemui.doze.DozeMachine.State,com.android.systemui.doze.DozeMachine.State)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onBiometricError(int,java.lang.String,android.hardware.biometrics.BiometricSourceType)>
<com.android.server.usb.descriptors.report.ReportCanvas: void writeListItem(java.lang.String)>
<com.android.server.pm.PackageManagerService: android.content.pm.ResolveInfo getLastChosenActivity(android.content.Intent,java.lang.String,int)>
<com.android.server.audio.AudioService.VolumeController: void setVisible(boolean)>
<com.android.systemui.assist.ui.InvocationLightsView: void <init>(android.content.Context)>
<com.android.systemui.shared.system.ActivityCompat: void registerRemoteAnimations(com.android.systemui.shared.system.RemoteAnimationDefinitionCompat)>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb: long setShouldCreateSnapshot(int,int,boolean)>
<com.android.systemui.bubbles.animation.StackAnimationController: android.graphics.PointF getStackPositionAlongNearestHorizontalEdge()>
<com.android.server.biometrics.ClientMonitor: java.lang.String getOwnerString()>
<com.android.settingslib.CustomDialogPreferenceCompat: void onDialogClosed(boolean)>
<com.android.server.policy.PhoneWindowManager: void setRecentsVisibilityLw(boolean)>
<com.android.server.uri.UriGrantsManagerService: void clearGrantedUriPermissions(java.lang.String,int)>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: void setTintColor(int,boolean)>
<com.android.settingslib.applications.ApplicationsState: void ensureIcon(com.android.settingslib.applications.ApplicationsState.AppEntry)>
<com.android.systemui.statusbar.notification.row.NotificationMenuRow: float getSnapBackThreshold()>
<com.android.systemui.keyguard.KeyguardViewMediator: void onDreamingStarted()>
<com.android.uiautomator.core.UiSelector: com.android.uiautomator.core.UiSelector packageNameMatches(java.lang.String)>
<com.android.server.pm.dex.DexManager: void writePackageDexUsageNow()>
<com.android.server.devicepolicy.DevicePolicyManagerService: void setPermissionGrantState(android.content.ComponentName,java.lang.String,java.lang.String,java.lang.String,int,android.os.RemoteCallback)>
<com.android.systemui.qs.tileimpl.QSTileBaseView: void onStateChanged(com.android.systemui.plugins.qs.QSTile.State)>
<com.android.server.ExtconStateObserver: java.lang.Object parseStateFromFile(com.android.server.ExtconUEventObserver.ExtconInfo)>
<com.android.settingslib.bluetooth.HeadsetProfile: boolean isPreferred(android.bluetooth.BluetoothDevice)>
<com.android.server.pm.ShortcutService: void onShellCommand(java.io.FileDescriptor,java.io.FileDescriptor,java.io.FileDescriptor,java.lang.String[],android.os.ShellCallback,android.os.ResultReceiver)>
<com.android.server.inputmethod.InputMethodManagerInternal: void setInteractive(boolean)>
<com.android.packageinstaller.wear.WearPackageArgs: android.net.Uri getPermUri(android.os.Bundle)>
<com.android.systemui.qs.QSFooterImpl: void onConfigurationChanged(android.content.res.Configuration)>
<com.android.systemui.statusbar.OperatorNameView: void setIsAirplaneMode(com.android.systemui.statusbar.policy.NetworkController.IconState)>
<com.android.systemui.statusbar.GestureRecorder.Gesture: void tag(long,java.lang.String,java.lang.String)>
<com.android.server.pm.PackageSetting: com.android.server.pm.SharedUserSetting getSharedUser()>
<com.android.server.usb.descriptors.UsbEndpointDescriptor: int getPacketSize()>
<com.android.systemui.statusbar.notification.VisualStabilityManager: void notifyViewAddition(android.view.View)>
<android.media.Session2Command: void writeToParcel(android.os.Parcel,int)>
<com.android.gallery3d.glrenderer.GLES20IdImpl: void glDeleteBuffers(javax.microedition.khronos.opengles.GL11,int,int[],int)>
<com.android.keyguard.KeyguardSimPukView: int getPasswordTextViewId()>
<com.android.server.locksettings.LockSettingsService: void userPresent(int)>
<com.android.systemui.recents.RecentsImpl: void cancelPreloadingRecents()>
<com.android.server.HardwarePropertiesManagerService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.keyguard.KeyguardUpdateMonitor: boolean isDreaming()>
<com.android.systemui.HardwareBgDrawable: void <init>(boolean,android.graphics.drawable.Drawable[])>
<com.android.systemui.statusbar.policy.KeyButtonDrawable: boolean canApplyTheme()>
<com.android.systemui.statusbar.phone.StatusBarIconList.Slot: java.util.List getHolderListInViewOrder()>
<com.android.server.location.GnssCapabilitiesProvider: long getGnssCapabilities()>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationMediaTemplateViewWrapper: boolean isDimmable()>
<com.android.systemui.statusbar.NavigationBarController: void finishBarAnimations(int)>
<com.android.systemui.qs.external.TileServiceManager: boolean hasPendingBind()>
<com.android.server.pm.PackageDexOptimizer: int dexOptSecondaryDexPath(android.content.pm.ApplicationInfo,java.lang.String,com.android.server.pm.dex.PackageDexUsage.DexUseInfo,com.android.server.pm.dex.DexoptOptions)>
<com.android.systemui.analytics.DataCollector: void onLeftAffordanceOn()>
<com.android.systemui.shared.plugins.PluginManagerImpl.PluginInstanceManagerFactory: com.android.systemui.shared.plugins.PluginInstanceManager createPluginInstanceManager(android.content.Context,java.lang.String,com.android.systemui.plugins.PluginListener,boolean,android.os.Looper,java.lang.Class,com.android.systemui.shared.plugins.PluginManagerImpl)>
<com.android.systemui.assist.ui.InvocationLightsView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.systemui.statusbar.SysuiStatusBarStateController: boolean setState(int)>
<com.android.systemui.stackdivider.DividerWindowManager: void <init>(android.content.Context)>
<com.android.systemui.recents.views.TaskStackView: void onAttachedToWindow()>
<com.android.systemui.statusbar.AlertingNotificationManager: java.util.stream.Stream getAllEntries()>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: int getScanMode()>
<javax.obex.ServerRequestHandler: int onConnect(javax.obex.HeaderSet,javax.obex.HeaderSet)>
<com.android.systemui.plugins.PluginListener: void onPluginConnected(com.android.systemui.plugins.Plugin,android.content.Context)>
<android.text.StaticLayoutPerfTest: void testDraw_PrecomputedText_Styled()>
<com.google.android.startop.iorap.ActivityInfo: int describeContents()>
<com.android.server.DeviceIdleController: boolean removePowerSaveWhitelistAppInternal(java.lang.String)>
<com.android.systemui.recents.events.EventBus: com.android.systemui.recents.events.EventBus getDefault()>
<com.android.systemui.statusbar.notification.MessagingLayoutTransformState: void resetTransformedView()>
<com.android.settingslib.suggestions.SuggestionController: void launchSuggestion(android.service.settings.suggestions.Suggestion)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void updateChildrenStates(com.android.systemui.statusbar.notification.stack.AmbientState)>
<com.android.systemui.statusbar.car.CarNavigationButton: void onFinishInflate()>
<com.android.systemui.statusbar.notification.stack.AmbientState: com.android.systemui.statusbar.NotificationShelf getShelf()>
<com.android.systemui.statusbar.notification.row.NotificationInlineImageResolver: void purgeCache()>
<com.android.systemui.statusbar.phone.ManagedProfileController: boolean isWorkModeEnabled()>
<com.android.server.statusbar.StatusBarManagerService: void onDisplayAdded(int)>
<com.android.systemui.statusbar.phone.HeadsUpManagerPhone: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.statusbar.notification.NotificationInterruptionStateProvider.HeadsUpSuppressor: boolean canHeadsUp(com.android.systemui.statusbar.notification.collection.NotificationEntry,android.service.notification.StatusBarNotification)>
<com.android.server.locksettings.recoverablekeystore.KeyStoreProxy: void deleteEntry(java.lang.String)>
<com.android.systemui.statusbar.NotificationLockscreenUserManager: boolean needsRedaction(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.printservice.recommendation.util.Preconditions: int checkArgumentInRange(int,int,int,java.lang.String)>
<com.android.server.audio.AudioService: java.lang.String makeAlsaAddressString(int,int)>
<com.android.proxyhandler.ProxyServer: void run()>
<com.android.systemui.statusbar.ScrimView: com.android.internal.colorextraction.ColorExtractor.GradientColors getColors()>
<com.android.systemui.qs.TouchAnimator: void setPosition(float)>
<com.android.server.content.SyncManager: void dumpPendingSyncs(java.io.PrintWriter,com.android.server.content.SyncAdapterStateFetcher)>
<com.android.systemui.qs.tiles.UserDetailItemView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.lights.Light: void setBrightness(int,int)>
<com.android.settingslib.graph.BatteryMeterDrawableBase: boolean getPadding(android.graphics.Rect)>
<com.android.server.infra.SecureSettingsServiceNameResolver: void dumpShort(java.io.PrintWriter,int)>
<com.android.server.audio.AudioService: void onAudioServerDied()>
<com.android.gallery3d.util.IntArray: int[] toArray(int[])>
<com.android.server.AnyMotionDetector.Vector3: float angleBetween(com.android.server.AnyMotionDetector.Vector3)>
<com.android.statsd.loadtest.ConfigFactory: com.android.statsd.loadtest.ConfigFactory.ConfigMetadata getConfig(int,com.android.internal.os.StatsdConfigProto.TimeUnit,boolean,boolean,boolean,boolean,boolean,boolean)>
<com.android.systemui.SwipeHelper: void snapChildIfNeeded(android.view.View,boolean,float)>
<com.android.gallery3d.glrenderer.GLCanvas: void setAlpha(float)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void choosePrivateKeyAlias(int,android.net.Uri,java.lang.String,android.os.IBinder)>
<com.android.settingslib.widget.AppEntitiesHeaderController: com.android.settingslib.widget.AppEntitiesHeaderController setHeaderDetailsClickListener(android.view.View.OnClickListener)>
<com.android.server.LocationManagerService: boolean injectLocation(android.location.Location)>
<com.android.systemui.recents.views.TaskStackView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<com.android.server.policy.WindowManagerPolicy: void registerShortcutKey(long,com.android.internal.policy.IShortcutService)>
<com.android.systemui.bubbles.BubbleData: void dismissAll(int)>
<com.android.server.display.utils.Plog: com.android.server.display.utils.Plog logCurve(java.lang.String,float[],float[])>
<com.android.systemui.plugins.VolumeDialogController: void userActivity()>
<com.android.systemui.statusbar.notification.row.NotificationGuts: void resetFalsingCheck()>
<com.android.server.pm.dex.DexManager: boolean dexoptSecondaryDex(com.android.server.pm.dex.DexoptOptions)>
<com.android.server.notification.NotificationDelegate: void onClearAll(int,int,int)>
<com.android.keyguard.KeyguardPINView: void onFinishInflate()>
<com.android.systemui.globalactions.GlobalActionsDialog.Action: boolean showBeforeProvisioning()>
<com.android.systemui.classifier.brightline.TimeLimitedMotionEventBuffer: java.lang.Object[] toArray()>
<com.android.systemui.qs.external.TileServices: void updateStatusIcon(android.os.IBinder,android.graphics.drawable.Icon,java.lang.String)>
<com.android.keyguard.PasswordTextView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.systemui.statusbar.NotificationHeaderUtil.ResultApplicator: void apply(android.view.View,boolean)>
<com.android.systemui.statusbar.car.UserGridRecyclerView.UserAdapter: void clearUsers()>
<com.android.gallery3d.util.IntArray: int removeLast()>
<android.processor.view.inspector.InspectableClassModel.Property: void setIntFlagEntries(java.util.List)>
<com.android.systemui.statusbar.policy.ExtensionControllerImpl.Producer: java.lang.Object get()>
<com.android.photos.BitmapRegionTileSource.FilePathBitmapSource: android.graphics.Bitmap loadPreviewBitmap(android.graphics.BitmapFactory.Options)>
<com.android.settingslib.bluetooth.A2dpProfile: int getOrdinal()>
<com.example.android.networkusage.NetworkActivity: boolean onCreateOptionsMenu(android.view.Menu)>
<android.net.netlink.NetlinkSocket: java.io.FileDescriptor forProto(int)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onTrustGrantedWithFlags(int,int)>
<com.android.systemui.statusbar.phone.NavigationBarView: void dispatchDraw(android.graphics.Canvas)>
<com.android.systemui.recents.views.TaskStackView: void reloadOnConfigurationChange()>
<com.android.server.locksettings.recoverablekeystore.WrappedKey: byte[] getNonce()>
<com.android.systemui.statusbar.notification.stack.AnimationProperties: com.android.systemui.statusbar.notification.stack.AnimationProperties setAnimationFinishListener(android.animation.AnimatorListenerAdapter)>
<com.android.settingslib.display.DisplayDensityUtils: java.lang.String[] getEntries()>
<com.android.systemui.qs.tiles.BatterySaverTile: void handleUpdateState(com.android.systemui.plugins.qs.QSTile.BooleanState,java.lang.Object)>
<com.android.settingslib.media.PhoneMediaDevice: android.graphics.drawable.Drawable getIcon()>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: android.bluetooth.le.BluetoothLeScanner getBluetoothLeScanner()>
<com.android.server.media.MediaSessionService: void onStart()>
<com.android.server.input.InputManagerService.WindowManagerCallbacks: int interceptMotionBeforeQueueingNonInteractive(int,long,int)>
<com.android.settingslib.development.AbstractLogpersistPreferenceController: void <init>(android.content.Context,com.android.settingslib.core.lifecycle.Lifecycle)>
<com.android.server.location.LocationBasedCountryDetector: void stop()>
<com.android.server.audio.AudioService: void disableRingtoneSync(int)>
<android.net.netlink.StructNfGenMsg: void pack(java.nio.ByteBuffer)>
<android.media.MediaPlayer2.EventCallback: void onMediaTimeDiscontinuity(android.media.MediaPlayer2,android.media.DataSourceDesc,android.media.MediaTimestamp)>
<com.android.server.testing.shadows.ShadowKeyValueBackupTask: void reset()>
<com.android.systemui.recents.model.TaskKeyStrongCache: void evictAllCache()>
<com.android.settingslib.CustomEditTextPreferenceCompat: void <init>(android.content.Context)>
<com.android.server.biometrics.EnrollClient: boolean onAuthenticated(android.hardware.biometrics.BiometricAuthenticator.Identifier,boolean,java.util.ArrayList)>
<com.android.systemui.plugins.PluginEnablerImpl: void <init>(android.content.Context,android.content.pm.PackageManager)>
<com.android.systemui.stackdivider.DividerView: void notifyDockSideChanged(int)>
<com.android.systemui.shared.system.PinnedStackListenerForwarder: void onMovementBoundsChanged(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,boolean,boolean,int)>
<com.android.server.pm.PackageVerificationResponse: void <init>(int,int)>
<com.android.server.notification.ZenModeHelper: android.service.notification.ZenModeConfig getConfig()>
<com.android.systemui.statusbar.policy.SecurityController: boolean isVpnRestricted()>
<android.net.ip.IpClientUtil.WaitForProvisioningCallbacks: android.net.LinkProperties waitForProvisioning()>
<com.android.systemui.qs.customize.QSCustomizer: void show(int,int)>
<com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand: void <init>(com.android.server.contentcapture.ContentCaptureManagerService)>
<com.android.nfc_extras.NfcAdapterExtras: java.lang.String getDriverName()>
<com.android.server.usb.descriptors.UsbACHeaderInterface: int getTotalLength()>
<com.android.powermodel.ActivityReport.Builder: void addActivity(com.android.powermodel.Component,java.util.Collection)>
<com.android.systemui.bubbles.BubbleExpandedView.OnBubbleBlockedListener: void onBubbleBlocked(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.systemui.recents.views.lowram.TaskStackLowRamLayoutAlgorithm: void setSystemInsets(android.graphics.Rect)>
<com.android.systemui.qs.customize.QSCustomizer: boolean isCustomizing()>
<javax.microedition.khronos.opengles.GL10: void glGetIntegerv(int,int[],int)>
<com.android.systemui.statusbar.notification.stack.AmbientState: boolean isDozingAndNotPulsing(com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<com.android.wallpapercropper.WallpaperCropActivity.BitmapCropTask: void setOnBitmapCropped(com.android.wallpapercropper.WallpaperCropActivity.OnBitmapCroppedHandler)>
<com.android.systemui.qs.tiles.ColorInversionTile: void handleSetListening(boolean)>
<com.android.systemui.qs.customize.CustomizeTileView: boolean animationsEnabled()>
<android.app.ResourcesPerfTest: void getLayoutAndTravese()>
<com.android.systemui.statusbar.policy.HeadsUpManager: void setExpanded(com.android.systemui.statusbar.notification.collection.NotificationEntry,boolean)>
<com.android.server.soundtrigger.SoundTriggerService: void <init>(android.content.Context)>
<com.android.location.provider.ActivityChangedEvent: java.lang.String toString()>
<com.android.systemui.bubbles.BubbleController: void setExpandListener(com.android.systemui.bubbles.BubbleController.BubbleExpandListener)>
<com.android.systemui.statusbar.CommandQueue: void preloadRecentApps()>
<com.android.systemui.shared.plugins.PluginInstanceManager: boolean checkAndDisable(java.lang.String)>
<com.android.gallery3d.common.BitmapUtils: int computeSampleSizeLarger(int,int,int)>
<com.android.server.usb.descriptors.UsbDescriptorParser: boolean hasMIDIInterface()>
<com.android.systemui.statusbar.phone.KeyguardBouncer: void <init>(android.content.Context,com.android.keyguard.ViewMediatorCallback,com.android.internal.widget.LockPatternUtils,android.view.ViewGroup,com.android.systemui.keyguard.DismissCallbackRegistry,com.android.systemui.plugins.FalsingManager,com.android.systemui.statusbar.phone.KeyguardBouncer.BouncerExpansionCallback,com.android.keyguard.KeyguardUpdateMonitor,android.os.Handler)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onDensityOrFontScaleChanged()>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: long performRemoveAnimation(long,long,float,boolean,float,java.lang.Runnable,android.animation.AnimatorListenerAdapter)>
<com.android.systemui.qs.tiles.NfcTile: boolean isAvailable()>
<com.android.server.IntentResolver: void writeToProto(android.util.proto.ProtoOutputStream,long)>
<javax.obex.ClientOperation: void ensureNotDone()>
<android.database.TableHelper: java.lang.String createSql()>
<com.android.server.pm.PackageManagerService: java.util.List getAllPackages()>
<com.android.systemui.statusbar.phone.BarTransitions: void destroy()>
<com.android.server.appbinding.finders.AppServiceFinder: java.lang.String getServiceAction()>
<com.android.preload.actions.ImportAction: void <init>(com.android.preload.DumpTableModel)>
<com.android.server.usb.descriptors.Usb20ASFormatII: void report(com.android.server.usb.descriptors.report.ReportCanvas)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void updateQsExpansion()>
<com.android.systemui.shared.recents.view.AppTransitionAnimationSpecCompat: android.view.AppTransitionAnimationSpec toAppTransitionAnimationSpec()>
<com.android.settingslib.suggestions.SuggestionLoader: java.util.List loadInBackground()>
<com.android.server.content.SyncManager: void scheduleLocalSync(android.accounts.Account,int,int,java.lang.String,int,int,int,java.lang.String)>
<com.android.statsd.dogfood.DisplayProtoUtils: void displayGaugeMetricData(java.lang.StringBuilder,com.android.os.StatsLog.StatsLogReport)>
<com.android.server.pm.permission.PermissionsState: boolean hasInstallPermission(java.lang.String)>
<com.android.systemui.classifier.StrokeClassifier: float getFalseTouchEvaluation(int,com.android.systemui.classifier.Stroke)>
<com.android.systemui.statusbar.policy.BatteryControllerImpl: void <init>(android.content.Context,com.android.systemui.power.EnhancedEstimates)>
<android.net.NetworkMonitorManager: boolean notifyDnsResponse(int)>
<com.android.systemui.statusbar.NotificationShelf: int getNotGoneIndex()>
<com.android.server.display.utils.RollingBuffer: void add(long,float)>
<com.android.systemui.statusbar.CommandQueue: void appTransitionStarting(int,long,long)>
<com.android.server.input.InputManagerService.WindowManagerCallbacks: long interceptKeyBeforeDispatching(android.os.IBinder,android.view.KeyEvent,int)>
<com.android.printspooler.ui.PrintErrorFragment: com.android.printspooler.ui.PrintErrorFragment newInstance(java.lang.CharSequence,int)>
<com.android.gallery3d.glrenderer.GLCanvas: void save()>
<com.android.systemui.qs.tileimpl.QSFactoryImpl: void <init>(javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider,javax.inject.Provider)>
<com.android.systemui.biometrics.DialogViewCallback: void onErrorShown()>
<com.android.systemui.recents.RecentsImpl: void onConfigurationChanged()>
<com.android.systemui.statusbar.policy.SecurityControllerImpl.CACertLoader: android.util.Pair doInBackground(java.lang.Integer[])>
<com.android.systemui.statusbar.notification.row.NotificationContentView: boolean isContentViewInactive(int)>
<com.android.server.location.ContextHubService: java.util.List getContextHubs()>
<com.android.printspooler.ui.PageAdapter.PreviewArea: int getHeight()>
<javax.microedition.khronos.opengles.GL11: void glGetClipPlanef(int,float[],int)>
<com.android.systemui.volume.MediaRouterWrapper: java.util.List getRoutes()>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverySessionStorage: void remove(int,java.lang.String)>
<com.android.systemui.statusbar.notification.ActivityLaunchAnimator: boolean isLaunchForActivity()>
<com.android.settingslib.Utils: java.lang.String formatPercentage(int)>
<com.android.gallery3d.exif.ExifInterface: boolean rewriteExif(java.nio.ByteBuffer,java.util.Collection)>
<com.android.systemui.statusbar.policy.NetworkController: int getNumberSubscriptions()>
<com.android.systemui.qs.QSFooterImpl: boolean performAccessibilityAction(int,android.os.Bundle)>
<com.android.systemui.qs.tiles.BatterySaverTile: void onPowerSaveChanged(boolean)>
<com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem: boolean handleRequestArcInitiate(com.android.server.hdmi.HdmiCecMessage)>
<com.android.systemui.plugins.GlobalActionsPanelPlugin.Callbacks: void startPendingIntentDismissingKeyguard(android.app.PendingIntent)>
<com.android.server.input.InputManagerService.WindowManagerCallbacks: int getPointerDisplayId()>
<com.android.systemui.bubbles.BadgeRenderer: void draw(android.graphics.Canvas,int,android.graphics.Rect,float,android.graphics.Point,boolean)>
<com.android.server.IntentResolver: java.util.Set filterSet()>
<com.android.server.usb.UsbService: boolean hasAccessoryPermission(android.hardware.usb.UsbAccessory)>
<com.android.powermodel.AppActivity: com.google.common.collect.ImmutableMap getComponentActivities()>
<com.android.settingslib.bluetooth.HidProfile: int getPreferred(android.bluetooth.BluetoothDevice)>
<com.android.server.pm.dex.ArtManagerService: void prepareAppProfiles(android.content.pm.PackageParser.Package,int,boolean)>
<com.android.statsd.loadtest.ValidationRecorder: void onAlarm(android.content.Context)>
<com.android.server.role.RoleUserState: android.util.ArrayMap getRolesAndHolders()>
<com.android.server.biometrics.face.FaceConstants: int acquireVendorCode()>
<com.android.server.notification.RankingConfig: void deleteNotificationChannel(java.lang.String,int,java.lang.String)>
<com.android.systemui.statusbar.NotificationUpdateHandler: void updateNotification(android.service.notification.StatusBarNotification,android.service.notification.NotificationListenerService.RankingMap)>
<com.android.server.LocationManagerService: boolean registerGnssStatusCallback(android.location.IGnssStatusListener,java.lang.String)>
<com.android.systemui.stackdivider.DividerView: void onComputeInternalInsets(android.view.ViewTreeObserver.InternalInsetsInfo)>
<com.android.server.usb.UsbAlsaDevice: boolean isInputHeadset()>
<com.android.server.content.ContentService: void addPeriodicSync(android.accounts.Account,java.lang.String,android.os.Bundle,long)>
<com.android.gallery3d.glrenderer.UploadedTexture: void onFreeBitmap(android.graphics.Bitmap)>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: void resetBackgroundAlpha()>
<com.android.server.deviceidle.ConstraintController: void stop()>
<com.android.server.Watchdog: void addMonitor(com.android.server.Watchdog.Monitor)>
<com.android.preload.DeviceUtils: void doAMStart(com.android.ddmlib.IDevice,java.lang.String,java.lang.String)>
<com.android.systemui.qs.QSAnimator: void onViewDetachedFromWindow(android.view.View)>
<com.android.systemui.statusbar.phone.NotificationsQuickSettingsContainer: void onInflate(android.view.ViewStub,android.view.View)>
<com.android.systemui.statusbar.phone.StatusBarKeyguardViewManager: void launchPendingWakeupAction()>
<com.android.systemui.statusbar.phone.StatusBar: void showScreenPinningRequest(int)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setOnEmptySpaceClickListener(com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout.OnEmptySpaceClickListener)>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationTemplateViewWrapper: int getHeaderTranslation()>
<com.android.systemui.qs.external.TileServiceManager: android.os.IBinder getToken()>
<com.android.systemui.bubbles.BubbleView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.keyguard.KeyguardPasswordView: void onFinishInflate()>
<com.android.systemui.qs.QSDetail: void setupDetailHeader(com.android.systemui.plugins.qs.DetailAdapter)>
<com.android.server.pm.BackgroundDexOptService: boolean onStartJob(android.app.job.JobParameters)>
<com.android.shell.BugreportProgressService: int onStartCommand(android.content.Intent,int,int)>
<com.android.systemui.bubbles.BubbleController: void <init>(android.content.Context,com.android.systemui.statusbar.phone.StatusBarWindowController,com.android.systemui.bubbles.BubbleData,com.android.systemui.statusbar.policy.ConfigurationController,com.android.systemui.statusbar.notification.NotificationInterruptionStateProvider,com.android.systemui.statusbar.policy.ZenModeController)>
<com.android.server.audio.PlaybackActivityMonitor: void playerAttributes(int,android.media.AudioAttributes,int)>
<com.android.systemui.statusbar.phone.KeyguardStatusBarView: void onUserInfoChanged(java.lang.String,android.graphics.drawable.Drawable,java.lang.String)>
<com.android.server.autofill.ui.AutoFillUI: void hideAll(com.android.server.autofill.ui.AutoFillUI.AutoFillUiCallback)>
<com.android.systemui.qs.tiles.UserDetailItemView: void setAvatarEnabled(boolean)>
<com.android.systemui.statusbar.notification.row.NotificationInlineImageCache: void preload(android.net.Uri)>
<android.database.sqlite.SQLiteTokenizer: boolean isKeyword(java.lang.String)>
<com.android.server.policy.WindowManagerPolicy.WindowState: boolean hideLw(boolean)>
<com.android.server.policy.WindowManagerPolicy: int getWindowLayerFromTypeLw(int,boolean)>
<com.android.systemui.globalactions.GlobalActionsLayout: android.view.ViewGroup getSeparatedView()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setRemoteInputController(com.android.systemui.statusbar.RemoteInputController)>
<com.android.systemui.statusbar.phone.StatusBarNotificationPresenter: boolean isPresenterLocked()>
<com.android.systemui.statusbar.policy.ExtensionController.PluginConverter: java.lang.Object getInterfaceFromPlugin(java.lang.Object)>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationMediaTemplateViewWrapper: void updateTransformedTypes()>
<com.android.systemui.statusbar.phone.NotificationIconAreaController: void initializeNotificationAreaViews(android.content.Context)>
<com.android.server.TelephonyRegistry: void addOnSubscriptionsChangedListener(java.lang.String,com.android.internal.telephony.IOnSubscriptionsChangedListener)>
<com.android.preload.DumpData: void <init>(java.lang.String,java.util.Map,java.util.Date)>
<com.android.server.location.GnssLocationProvider: com.android.server.location.GnssLocationProvider.GnssSystemInfoProvider getGnssSystemInfoProvider()>
<com.android.keyguard.KeyguardAbsKeyInputView: void onResume(int)>
<com.android.systemui.qs.car.CarQSFooter: void setKeyguardShowing(boolean)>
<com.android.server.pm.permission.BasePermission: void setGids(int[],boolean)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void setTopAppHidesStatusBar(boolean)>
<com.android.server.biometrics.AuthenticationClient: void binderDied()>
<com.android.keyguard.KeyguardUpdateMonitor: java.util.List getSubscriptionInfo(boolean)>
<com.android.server.biometrics.Utils: boolean isDebugEnabled(android.content.Context,int)>
<com.android.systemui.statusbar.StatusBarMobileView: boolean isIconVisible()>
<com.android.gallery3d.exif.ExifInterface: java.util.List getAllTags()>
<com.android.systemui.recents.events.EventBus: void sendOntoMainThread(com.android.systemui.recents.events.EventBus.Event)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onDraw(android.graphics.Canvas)>
<android.net.util.SharedLog: void logf(java.lang.String,java.lang.Object[])>
<android.media.MediaPlayer2.DrmPreparationInfo: byte[] getInitData()>
<com.android.server.biometrics.BiometricServiceBase.ServiceListener: void onEnrollResult(android.hardware.biometrics.BiometricAuthenticator.Identifier,int)>
<com.android.systemui.statusbar.notification.MessagingImageTransformState: int getStartActualWidth()>
<com.google.android.startop.iorap.AppLaunchEvent.IntentFailed: boolean equals(java.lang.Object)>
<com.android.server.voiceinteraction.DatabaseHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)>
<com.android.server.audio.AudioService: int removeMixForPolicy(android.media.audiopolicy.AudioPolicyConfig,android.media.audiopolicy.IAudioPolicyCallback)>
<com.android.systemui.statusbar.notification.row.NotificationGuts.GutsContent: boolean handleCloseControls(boolean,boolean)>
<com.android.systemui.recents.views.FixedSizeFrameLayout: void <init>(android.content.Context)>
<com.android.server.pm.PackageSettingBase: java.lang.String getInstallerPackageName()>
<com.android.server.autofill.FieldClassificationStrategy.Command: void run(android.service.autofill.IAutofillFieldClassificationService)>
<com.android.systemui.statusbar.notification.row.NotificationContentView: void setUserExpanding(boolean)>
<com.android.server.camera.CameraServiceProxy: void onStart()>
<com.android.systemui.qs.QuickQSPanel: int getNumQuickTiles(android.content.Context)>
<com.android.systemui.recents.misc.SystemServicesProxy: void setTaskWindowingMode(int,int)>
<com.android.carrierdefaultapp.CaptivePortalLoginActivity: java.lang.String getAlias(android.content.Context)>
<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice getPersistentApplications(int)>
<com.android.server.DeviceIdleController: java.lang.String[] getFullPowerWhitelistInternal()>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setGroupExpansionChanging(boolean)>
<com.android.gallery3d.glrenderer.BitmapTexture: android.graphics.Bitmap getBitmap()>
<com.android.server.vr.VrManagerInternal: int hasVrPackage(android.content.ComponentName,int)>
<com.android.systemui.recents.views.TaskStackView: void onBusEvent(com.android.systemui.recents.events.ui.dragndrop.DragStartEvent)>
<com.android.systemui.recents.views.TaskStackLayoutAlgorithm: void dump(java.lang.String,java.io.PrintWriter)>
<com.android.systemui.qs.tiles.DataUsageDetailView: void bind(com.android.settingslib.net.DataUsageController.DataUsageInfo)>
<com.android.systemui.pip.tv.PipControlButtonView: void setImageDrawable(android.graphics.drawable.Drawable)>
<com.android.server.policy.WindowManagerPolicy: boolean checkShowToOwnerOnly(android.view.WindowManager.LayoutParams)>
<com.android.settingslib.widget.AdaptiveIcon: void <init>(android.content.Context,android.graphics.drawable.Drawable)>
<javax.microedition.khronos.opengles.GL10: void glEnable(int)>
<javax.microedition.khronos.opengles.GL11: void glGetTexParameterfv(int,int,float[],int)>
<com.android.settingslib.graph.SignalDrawable: int getState(int,int,boolean)>
<com.android.systemui.egg.MLand: float frand(float,float)>
<com.android.systemui.qs.tileimpl.QSIconViewImpl: void updateIcon(android.widget.ImageView,com.android.systemui.plugins.qs.QSTile.State,boolean)>
<com.android.server.notification.ZenModeHelper: void setSuppressedEffects(long)>
<com.android.location.provider.LocationProviderBase: void onDump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.server.search.SearchManagerService: void launchAssist(android.os.Bundle)>
<com.android.keyguard.KeyguardPinBasedInputView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.audio.PlaybackActivityMonitor: void playerDeath(int)>
<com.android.server.audio.AudioService: void unregisterAudioServerStateDispatcher(android.media.IAudioServerStateDispatcher)>
<com.android.server.AppStateTracker.Listener: void unblockAllUnrestrictedAlarms()>
<com.android.systemui.classifier.brightline.BrightLineFalsingManager: void <init>(com.android.systemui.classifier.brightline.FalsingDataProvider,android.hardware.SensorManager)>
<com.google.android.startop.iorap.IorapForwardingService: boolean isIorapEnabled()>
<javax.obex.ServerOperation: javax.obex.HeaderSet getReceivedHeader()>
<com.android.systemui.volume.VolumeDialogImpl: void initSettingsH()>
<com.android.systemui.statusbar.notification.row.ExpandableView: void setActualHeight(int,boolean)>
<com.android.systemui.statusbar.NotificationLockscreenUserManagerImpl: void setUpWithPresenter(com.android.systemui.statusbar.NotificationPresenter)>
<com.android.server.locksettings.SyntheticPasswordCrypto: byte[] createBlob(java.lang.String,byte[],byte[],long)>
<com.android.server.uri.GrantUri: void <init>(int,android.net.Uri,boolean)>
<com.android.server.LocationManagerService: java.lang.String getGnssHardwareModelName()>
<com.android.server.usb.descriptors.Usb20ACInputTerminal: int getChanConfig()>
<com.android.server.policy.WindowOrientationListener: void setCurrentRotation(int)>
<com.android.systemui.statusbar.phone.ScrimController: void setScrimBehindValues(float)>
<com.android.server.notification.RankingReconsideration: void applyChangesLocked(com.android.server.notification.NotificationRecord)>
<com.android.server.testing.shadows.ShadowSlog: int println(int,java.lang.String,java.lang.String)>
<com.android.server.notification.NotificationRecord: boolean getSuggestionsGeneratedByAssistant()>
<com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer: void setContainingNotification(com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<com.android.printservice.recommendation.util.Preconditions: long checkArgumentNonnegative(long)>
<com.android.server.notification.NotificationManagerService.DumpFilter: boolean matches(android.service.notification.StatusBarNotification)>
<com.android.server.slice.SliceManagerService: android.net.Uri[] getPinnedSlices(java.lang.String)>
<com.android.server.hdmi.HdmiCecStandbyModeHandler.CecMessageHandler: boolean handle(com.android.server.hdmi.HdmiCecMessage)>
<com.android.uiautomator.core.UiCollection: void <init>(com.android.uiautomator.core.UiSelector)>
<com.android.systemui.statusbar.policy.KeyguardMonitorImpl: boolean isDeviceInteractive()>
<com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem.TvSystemAudioModeSupportedCallback: void onResult(boolean)>
<com.android.systemui.statusbar.phone.StatusBarNotificationPresenter: void onOverlayChanged()>
<com.android.uiautomator.core.UiDevice: android.graphics.Point getDisplaySizeDp()>
<com.android.server.locksettings.recoverablekeystore.storage.RecoverableKeyStoreDb: void removeUserFromAllTables(int)>
<android.net.ip.IIpClient: void completedPreDhcpAction()>
<com.android.settingslib.deviceinfo.AbstractSerialNumberPreferenceController: boolean isAvailable()>
<com.android.systemui.statusbar.phone.KeyguardBouncer.BouncerExpansionCallback: void onStartingToShow()>
<com.android.systemui.statusbar.notification.stack.StackStateAnimator: void setShelf(com.android.systemui.statusbar.NotificationShelf)>
<com.android.server.pm.PackageManagerService: java.lang.String[] currentToCanonicalPackageNames(java.lang.String[])>
<com.android.systemui.keyguard.ScreenLifecycle: void dispatchScreenTurningOn()>
<com.android.statementservice.retriever.WebContent: java.lang.String getContent()>
<com.android.server.content.SyncStorageEngine.EndPoint: java.lang.String toSafeString()>
<com.android.systemui.biometrics.FaceDialogView: void showTryAgainButton(boolean)>
<com.android.server.trust.TrustArchive: void logAgentDied(int,android.content.ComponentName)>
<com.android.printspooler.ui.SelectPrinterActivity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu.ContextMenuInfo)>
<com.android.printspooler.ui.PrintActivity: void onLoadFinished(android.content.Loader,java.util.List)>
<com.android.systemui.statusbar.phone.NotificationIconContainer: void setReplacingIcons(androidx.collection.ArrayMap)>
<com.android.systemui.statusbar.car.CarStatusBar: boolean hideKeyguard()>
<com.android.keyguard.KeyguardMessageArea: void setMessage(int)>
<com.android.systemui.statusbar.NavigationBarController: com.android.systemui.statusbar.phone.NavigationBarView getDefaultNavigationBarView()>
<com.android.server.LocationManagerService: void unregisterGnssStatusCallback(android.location.IGnssStatusListener)>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: void onFinishInflate()>
<com.android.keyguard.KeyguardSecurityView: void showPromptReason(int)>
<com.android.server.LocationManagerService: void <init>(android.content.Context)>
<com.android.systemui.plugins.DarkIconDispatcher.DarkReceiver: void onDarkChanged(android.graphics.Rect,float,int)>
<com.android.server.webkit.SystemImpl: java.lang.String getUserChosenWebViewProvider(android.content.Context)>
<com.android.systemui.statusbar.phone.NavigationBarTransitions.DarkIntensityListener: void onDarkIntensity(float)>
<com.android.systemui.statusbar.policy.DateView: void onDetachedFromWindow()>
<com.android.systemui.qs.tiles.DndTile: com.android.systemui.plugins.qs.QSTile.BooleanState newTileState()>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: void setExpandingNotification(com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<com.android.systemui.statusbar.policy.AccessPointControllerImpl: void onWifiStateChanged(int)>
<com.android.systemui.statusbar.policy.KeyButtonView: void <init>(android.content.Context,android.util.AttributeSet,int,android.hardware.input.InputManager)>
<com.android.photos.BitmapRegionTileSource: com.android.gallery3d.glrenderer.BasicTexture getPreview()>
<com.android.server.policy.WindowManagerPolicy.WindowState: android.graphics.Rect getFrameLw()>
<com.android.systemui.SwipeHelper: boolean isFalseGesture(android.view.MotionEvent)>
<com.android.systemui.ResizingSpace: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.settingslib.bluetooth.HidDeviceProfile: int getProfileId()>
<com.android.keyguard.KeyguardUpdateMonitor.StrongAuthTracker: void <init>(android.content.Context,java.util.function.Consumer)>
<com.android.server.usb.descriptors.Usb20ASFormatIIEx: byte getHeaderLength()>
<com.android.location.provider.LocationProviderBase: void <init>(java.lang.String,com.android.location.provider.ProviderPropertiesUnbundled)>
<com.android.systemui.qs.tiles.WifiTile: com.android.systemui.plugins.qs.QSTile.SignalState newTileState()>
<com.android.systemui.statusbar.notification.stack.NotificationChildrenContainer: void applyState()>
<com.android.server.autofill.RemoteFillService.FillServiceCallbacks: void onFillRequestFailure(int,java.lang.CharSequence)>
<com.android.server.content.ContentService: int getIsSyncableAsUser(android.accounts.Account,java.lang.String,int)>
<com.android.systemui.stackdivider.DividerView.DividerCallbacks: void growRecents()>
<com.android.server.location.GeofenceState: int processLocation(android.location.Location)>
<com.android.systemui.statusbar.notification.stack.NotificationListContainer: void setChildLocationsChangedListener(com.android.systemui.statusbar.notification.logging.NotificationLogger.OnChildLocationsChangedListener)>
<com.android.systemui.qs.touch.SwipeDetector: void <init>(android.content.Context,com.android.systemui.qs.touch.SwipeDetector.Listener,com.android.systemui.qs.touch.SwipeDetector.Direction)>
<com.android.systemui.statusbar.policy.SecurityController: void onUserSwitched(int)>
<android.perftests.utils.LayoutUtils: java.util.List gatherViewTree(android.view.ViewGroup)>
<com.android.server.content.SyncJobService: void callJobFinishedInner(int,boolean,java.lang.String)>
<com.android.systemui.recents.misc.SystemServicesProxy: void gc()>
<com.android.photos.SimpleBitmapRegionDecoderWrapper: com.android.photos.SimpleBitmapRegionDecoderWrapper newInstance(java.io.InputStream,boolean)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean isLockTaskPermitted(java.lang.String)>
<com.android.server.locksettings.recoverablekeystore.PlatformEncryptionKey: android.security.keystore.AndroidKeyStoreSecretKey getKey()>
<com.android.server.policy.WindowManagerPolicy: void dismissKeyguardLw(com.android.internal.policy.IKeyguardDismissCallback,java.lang.CharSequence)>
<com.android.server.pm.PackageManagerService: boolean setInstantAppCookie(java.lang.String,byte[],int)>
<android.text.StaticLayoutCreateDrawPerfTest: void <init>(java.lang.String,int,android.text.NonEditableTextGenerator.TextType,boolean)>
<com.android.proxyhandler.ProxyServer: void stopServer()>
<com.android.server.pm.dex.ArtManagerService: boolean compileLayouts(android.content.pm.PackageParser.Package)>
<com.android.systemui.statusbar.phone.NavigationBarView: void reorient()>
<javax.obex.ServerSession: void close()>
<com.android.keyguard.KeyguardUpdateMonitor: com.android.keyguard.KeyguardUpdateMonitor.StrongAuthTracker getStrongAuthTracker()>
<com.android.server.display.utils.History: void <init>(int,java.time.Clock)>
<android.net.ipmemorystore.NetworkAttributes.Builder: android.net.ipmemorystore.NetworkAttributes.Builder setAssignedV4Address(java.net.Inet4Address)>
<com.android.keyguard.KeyguardSimPukView: void resetState()>
<com.android.settingslib.applications.ApplicationsState.VolumeFilter: void <init>(java.lang.String)>
<com.android.systemui.assist.ui.DisplayUtils: int getCornerRadiusBottom(android.content.Context)>
<com.android.server.timedetector.TimeDetectorStrategy.Callback: long elapsedRealtimeMillis()>
<com.android.server.audio.AudioService: boolean shouldVibrate(int)>
<com.android.systemui.volume.VolumeDialogControllerImpl.UserActivityListener: void onUserActivity()>
<com.android.systemui.statusbar.NotificationListener: void onNotificationRemoved(android.service.notification.StatusBarNotification,android.service.notification.NotificationListenerService.RankingMap)>
<com.android.systemui.statusbar.notification.NotificationListController: void <init>(com.android.systemui.statusbar.notification.NotificationEntryManager,com.android.systemui.statusbar.notification.stack.NotificationListContainer,com.android.systemui.ForegroundServiceController,com.android.systemui.statusbar.policy.DeviceProvisionedController)>
<com.android.server.NetworkScoreService: boolean isCallerActiveScorer(int)>
<com.android.systemui.shared.system.TaskStackChangeListeners: void onBackPressedOnTaskRoot(android.app.ActivityManager.RunningTaskInfo)>
<com.android.server.DeviceIdleController: java.lang.String[] getRemovedSystemPowerWhitelistAppsInternal()>
<com.android.server.vr.VrManagerInternal: void setVr2dDisplayProperties(android.app.Vr2dDisplayProperties)>
<com.android.settingslib.RestrictedSwitchPreference: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.systemui.statusbar.phone.StatusBar: boolean inFullscreenMode()>
<com.android.systemui.bubbles.BubbleView: void onAttachedToWindow()>
<com.android.server.storage.AppFuseBridge: void run()>
<com.android.systemui.qs.QuickStatusBarHeader: void onFinishInflate()>
<android.net.util.SharedLog: void i(java.lang.String)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: boolean isScrolledToBottom()>
<com.android.server.content.SyncManager: void updateOrAddPeriodicSync(com.android.server.content.SyncStorageEngine.EndPoint,long,long,android.os.Bundle)>
<com.android.systemui.recents.views.RecentsTransitionComposer: android.graphics.Bitmap composeTaskBitmap(com.android.systemui.recents.views.TaskView,com.android.systemui.recents.views.TaskViewTransform)>
<com.android.systemui.statusbar.phone.ButtonDispatcher: void setOnLongClickListener(android.view.View.OnLongClickListener)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: void freeContentViewWhenSafe(int)>
<com.android.gallery3d.glrenderer.GLId: void glGenBuffers(int,int[],int)>
<com.android.systemui.statusbar.policy.AccessibilityController: void onAccessibilityStateChanged(boolean)>
<com.android.server.display.BrightnessMappingStrategy: android.hardware.display.BrightnessConfiguration getDefaultConfig()>
<com.android.systemui.recents.OverviewProxyService: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<com.android.systemui.SystemUI: void start()>
<com.android.settingslib.deviceinfo.AbstractConnectivityPreferenceController: java.lang.String[] getConnectivityIntents()>
<javax.microedition.khronos.opengles.GL11: void glGetMaterialfv(int,int,java.nio.FloatBuffer)>
<com.android.systemui.statusbar.CommandQueue: void hideRecentApps(boolean,boolean)>
<com.android.server.pm.PackageManagerService: java.lang.String getAttentionServicePackageName()>
<com.android.server.pm.PackageManagerService: boolean hasSigningCertificate(java.lang.String,byte[],int)>
<com.android.systemui.qs.TileLayout: void removeTile(com.android.systemui.qs.QSPanel.TileRecord)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setOnDismissRunnable(java.lang.Runnable)>
<com.android.server.webkit.SystemImpl: java.util.List getPackageInfoForProviderAllUsers(android.content.Context,android.webkit.WebViewProviderInfo)>
<com.android.systemui.statusbar.StatusIconDisplayable: boolean isIconVisible()>
<com.android.server.slice.DirtyTracker: void onPersistableDirty(com.android.server.slice.DirtyTracker.Persistable)>
<com.android.server.ConnectivityService: void setProvisioningNotificationVisible(boolean,int,java.lang.String)>
<com.android.settingslib.graph.SignalDrawable: int getState(int)>
<android.multiuser.BenchmarkRunner: void pauseTiming()>
<com.android.server.pm.DynamicCodeLoggingService: boolean onStartJob(android.app.job.JobParameters)>
<com.android.systemui.statusbar.phone.NavigationBarView: com.android.systemui.statusbar.phone.ButtonDispatcher getRecentsButton()>
<com.android.systemui.bubbles.BubbleView: com.android.systemui.statusbar.notification.row.ExpandableNotificationRow getRowView()>
<com.android.commands.uiautomator.EventsCommand: java.lang.String detailedOptions()>
<com.android.server.location.LocationRequestStatistics.PackageStatistics: boolean isActive()>
<com.android.systemui.statusbar.NotificationListener: void onNotificationPosted(android.service.notification.StatusBarNotification,android.service.notification.NotificationListenerService.RankingMap)>
<com.android.systemui.qs.tileimpl.QSTileImpl: void handleSetListening(boolean)>
<com.android.systemui.SystemUIFactory: com.android.systemui.statusbar.phone.ShadeController provideShadeController(android.content.Context)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo)>
<com.android.systemui.statusbar.ViewTransformationHelper: com.android.systemui.statusbar.notification.TransformState getCurrentState(int)>
<com.android.systemui.power.PowerUI.WarningsUI: void showLowBatteryWarning(boolean)>
<com.android.server.devicepolicy.DevicePolicyManagerService: void startManagedQuickContact(java.lang.String,long,boolean,long,android.content.Intent)>
<com.android.server.policy.PhoneWindowManager: android.view.KeyEvent dispatchUnhandledKey(com.android.server.policy.WindowManagerPolicy.WindowState,android.view.KeyEvent,int)>
<com.android.keyguard.clock.ImageClock: void onTimeChanged()>
<com.android.settingslib.deviceinfo.AbstractUptimePreferenceController: java.lang.String getPreferenceKey()>
<com.android.statsd.shelltools.Utils.LocalToolsFormatter: java.lang.String format(java.util.logging.LogRecord)>
<com.android.packageinstaller.television.UninstallAppProgressFragment: android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)>
<com.android.systemui.qs.QSDetailItems: void onDetachedFromWindow()>
<com.android.server.accounts.AccountManagerService: com.android.server.accounts.AccountManagerService.UserAccounts getUserAccounts(int)>
<com.android.server.search.SearchManagerService: java.util.List getSearchablesInGlobalSearch()>
<com.android.systemui.plugins.FalsingManager: void onTrackingStarted(boolean)>
<com.android.server.pm.PackageManagerService: boolean isPackageSignedByKeySet(java.lang.String,android.content.pm.KeySet)>
<com.android.systemui.statusbar.policy.RotationLockControllerImpl: boolean isRotationLockAffordanceVisible()>
<com.android.systemui.statusbar.notification.ActivityLaunchAnimator: android.view.RemoteAnimationAdapter getLaunchAnimation(android.view.View,boolean)>
<com.android.server.policy.BurnInProtectionHelper: void onAnimationStart(android.animation.Animator)>
<com.android.settingslib.drawer.Tile: void <init>(android.content.pm.ActivityInfo,java.lang.String)>
<com.android.systemui.statusbar.phone.NotificationIconContainer.IconState: void applyToView(android.view.View)>
<com.android.systemui.shared.plugins.PluginPrefs: boolean hasPlugins(android.content.Context)>
<com.android.systemui.doze.DozeService: void onPluginConnected(com.android.systemui.plugins.DozeServicePlugin,android.content.Context)>
<com.android.systemui.statusbar.OperatorNameView: void dispatchDemoCommand(java.lang.String,android.os.Bundle)>
<com.android.systemui.globalactions.GlobalActionsColumnLayout: void updateSnap()>
<javax.microedition.khronos.opengles.GL10: void glBindTexture(int,int)>
<android.graphics.perftests.PathPerfTest: void testGetSetFillType()>
<com.android.systemui.statusbar.policy.BluetoothController: int getBluetoothState()>
<com.android.systemui.statusbar.KeyguardAffordanceView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.gallery3d.glrenderer.BasicTexture: void finalize()>
<com.android.systemui.recents.utilities.AnimationProps: void <init>(int,android.view.animation.Interpolator)>
<com.android.settingslib.bluetooth.LocalBluetoothAdapter: void stopScanning()>
<com.android.systemui.pip.tv.PipMenuActivity: void onCreate(android.os.Bundle)>
<com.android.server.gpu.GpuService: void onBootPhase(int)>
<com.android.systemui.DependencyBinder: com.android.systemui.statusbar.policy.BatteryController provideBatteryController(com.android.systemui.statusbar.policy.BatteryControllerImpl)>
<com.android.systemui.plugins.qs.QSIconView: void <init>(android.content.Context)>
<com.android.systemui.qs.TileLayout: int exactly(int)>
<com.android.settingslib.wifi.WifiTracker: java.util.List getAccessPoints()>
<com.android.systemui.globalactions.GlobalActionsGridLayout: void setupListView()>
<com.android.gallery3d.util.IntArray: void add(int)>
<javax.microedition.khronos.opengles.GL10: void glFrustumf(float,float,float,float,float,float)>
<com.android.server.audio.RecordingActivityMonitor: void onRecordingConfigurationChanged(int,int,int,int,int,int,boolean,int[],android.media.audiofx.AudioEffect.Descriptor[],android.media.audiofx.AudioEffect.Descriptor[],int,java.lang.String)>
<com.android.systemui.bubbles.animation.PhysicsAnimationLayout: boolean isActiveController(com.android.systemui.bubbles.animation.PhysicsAnimationLayout.PhysicsAnimationController)>
<com.android.server.AppStateTracker: boolean isUidPowerSaveWhitelisted(int)>
<com.android.settingslib.bluetooth.HearingAidProfile: java.util.List getConnectedDevices()>
<com.android.systemui.statusbar.phone.StatusBarTouchableRegionManager: void updateTouchableRegionAfterLayout()>
<com.android.systemui.stackdivider.MinimizedDockShadow: void setDockSide(int)>
<com.android.server.notification.CalendarTracker.Callback: void onChanged()>
<com.android.systemui.statusbar.phone.UserAvatarView: void setBitmap(android.graphics.Bitmap)>
<com.android.systemui.shared.system.TaskStackChangeListeners: void onTaskMovedToFront(android.app.ActivityManager.RunningTaskInfo)>
<com.android.systemui.statusbar.car.CarStatusBar: void createUserSwitcher()>
<com.android.systemui.statusbar.KeyguardAffordanceView: float getCircleRadius()>
<com.android.server.notification.NotificationDelegate: void onPanelHidden()>
<com.android.uiautomator.core.UiObject: boolean isClickable()>
<com.android.systemui.qs.AlphaControlledSignalTileView.AlphaControlledSlashImageView: void setFinalImageTintList(android.content.res.ColorStateList)>
<com.android.systemui.qs.tiles.BatterySaverTile: void handleSetListening(boolean)>
<com.android.server.pm.PackageManagerService: java.lang.String[] canonicalToCurrentPackageNames(java.lang.String[])>
<javax.microedition.khronos.opengles.GL11ExtensionPack: boolean glIsRenderbufferOES(int)>
<com.android.systemui.egg.MLandActivity: void startButtonPressed(android.view.View)>
<com.android.systemui.recents.model.RecentsTaskLoadPlan: com.android.systemui.recents.model.TaskStack getTaskStack()>
<android.os.ParcelArrayPerfTest: void tearDown()>
<com.android.server.notification.ZenModeHelper: android.app.AutomaticZenRule getAutomaticZenRule(java.lang.String)>
<com.android.settingslib.wifi.AccessPoint: boolean isSaved()>
<com.android.printspooler.widget.PageContentView: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.server.vr.EnabledComponentsObserver: android.util.ArraySet getInstalled(int)>
<com.android.systemui.shared.plugins.PluginInstanceManager: boolean disableAll()>
<com.android.systemui.statusbar.phone.NotificationIconContainer: void calculateIconTranslations()>
<com.android.server.testing.shadows.ShadowCloseGuard: void setUp()>
<com.android.systemui.statusbar.GestureRecorder: void <init>(java.lang.String)>
<com.android.systemui.statusbar.phone.StatusBarIconHolder: boolean isVisible()>
<com.android.server.biometrics.face.FaceUserState: int getNameTemplateResource()>
<com.android.settingslib.core.lifecycle.events.OnPrepareOptionsMenu: void onPrepareOptionsMenu(android.view.Menu)>
<javax.obex.PrivateOutputStream: boolean isClosed()>
<android.text.PrecomputedTextPerfTest: void testCreate_NoStyled_NoHyphenation_WidthOnly()>
<com.android.server.IpSecService.UidFdTagger: void tag(java.io.FileDescriptor,int)>
<com.android.server.notification.NotificationDelegate: void onNotificationSmartSuggestionsAdded(java.lang.String,int,int,boolean,boolean)>
<com.android.systemui.assist.AssistManager: void <init>(com.android.systemui.statusbar.policy.DeviceProvisionedController,android.content.Context)>
<com.android.server.input.InputManagerService: void setWiredAccessoryCallbacks(com.android.server.input.InputManagerService.WiredAccessoryCallbacks)>
<com.android.vpndialogs.AlwaysOnDisconnectedDialog: void onCreate(android.os.Bundle)>
<com.android.settingslib.utils.AsyncLoader: void onDiscardResult(java.lang.Object)>
<com.android.server.infra.AbstractMasterSystemService: void onUnlockUser(int)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setKeepInParent(boolean)>
<com.android.server.om.OverlayManagerService: void <init>(android.content.Context,com.android.server.pm.Installer)>
<com.android.server.soundtrigger.SoundTriggerInternal: int startRecognition(int,android.hardware.soundtrigger.SoundTrigger.KeyphraseSoundModel,android.hardware.soundtrigger.IRecognitionStatusCallback,android.hardware.soundtrigger.SoundTrigger.RecognitionConfig)>
<com.android.settingslib.bluetooth.MapClientProfile: int getProfileId()>
<com.android.systemui.plugins.VolumeDialogController.StreamState: com.android.systemui.plugins.VolumeDialogController.StreamState copy()>
<com.android.systemui.recents.utilities.Utilities: android.view.ViewStub findViewStubById(android.view.View,int)>
<com.android.server.content.SyncManager: int computeSyncable(android.accounts.Account,int,java.lang.String,boolean)>
<com.android.systemui.statusbar.phone.StatusBarIconController.IconManager: void setIsDemoable(boolean)>
<com.android.systemui.recents.views.TaskViewThumbnail: void dump(java.lang.String,java.io.PrintWriter)>
<com.android.server.pm.ShortcutDumpFiles: boolean save(java.lang.String,byte[])>
<com.android.systemui.qs.external.TileServiceManager: void setBindAllowed(boolean)>
<com.android.keyguard.KeyguardPatternView: boolean disallowInterceptTouch(android.view.MotionEvent)>
<com.android.systemui.ExpandHelper: void cancel()>
<com.android.systemui.volume.CarVolumeItem: void setProgress(int)>
<com.android.server.notification.NotificationManagerService.WorkerHandler: void <init>(android.os.Looper)>
<com.android.server.notification.ZenModeHelper: void applyRestrictions(boolean,boolean,int)>
<com.android.systemui.recents.model.TaskStack.TaskStackCallbacks: void onStackTaskRemoved(com.android.systemui.recents.model.TaskStack,com.android.systemui.shared.recents.model.Task,com.android.systemui.shared.recents.model.Task,com.android.systemui.recents.utilities.AnimationProps,boolean,boolean)>
<com.android.systemui.statusbar.policy.AccessPointControllerImpl: void dump(java.io.PrintWriter)>
<com.android.systemui.statusbar.AlphaOptimizedButton: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.settingslib.drawer.DashboardCategory: void <init>(java.lang.String)>
<com.android.systemui.qs.QSCarrier: void <init>(android.content.Context,android.util.AttributeSet)>
<android.processor.view.inspector.InspectableClassModel: void <init>(com.squareup.javapoet.ClassName)>
<com.android.server.usb.UsbDeviceManager: void setCurrentUser(int,com.android.server.usb.UsbProfileGroupSettingsManager)>
<com.android.keyguard.CarrierTextController: void setListening(com.android.keyguard.CarrierTextController.CarrierTextCallback)>
<com.android.systemui.statusbar.phone.NotificationPanelView: void onTrackingStarted()>
<com.android.systemui.assist.AssistOrbView: void <init>(android.content.Context)>
<com.android.systemui.statusbar.phone.NotificationIconAreaController: void setIsolatedIconLocation(android.graphics.Rect,boolean)>
<com.android.server.notification.NotificationSignalExtractor: com.android.server.notification.RankingReconsideration process(com.android.server.notification.NotificationRecord)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean setKeyPairCertificate(android.content.ComponentName,java.lang.String,java.lang.String,byte[],byte[],boolean)>
<com.android.systemui.statusbar.phone.NotificationIconAreaController: void updateStatusBarIcons()>
<com.android.systemui.qs.QSDetail: void onFinishInflate()>
<com.android.systemui.statusbar.notification.row.ActivatableNotificationView: void setFakeShadowIntensity(float,float,int,int)>
<com.android.systemui.plugins.qs.QSTile.BooleanState: com.android.systemui.plugins.qs.QSTile.State copy()>
<com.android.systemui.qs.QSPanel: void onBrightnessMirrorReinflated(android.view.View)>
<com.android.server.notification.ManagedServices.ManagedServiceInfo: boolean supportsProfiles()>
<com.android.settingslib.users.AppRestrictionsHelper: void setPackageSelected(java.lang.String,boolean)>
<com.android.systemui.statusbar.phone.StatusBar: void showKeyguardImpl()>
<com.android.systemui.settings.ToggleSliderView: void setEnforcedAdmin(com.android.settingslib.RestrictedLockUtils.EnforcedAdmin)>
<com.android.systemui.statusbar.notification.NotificationEntryManager: void addNotification(android.service.notification.StatusBarNotification,android.service.notification.NotificationListenerService.RankingMap)>
<com.android.systemui.qs.PageIndicator: void <init>(android.content.Context,android.util.AttributeSet)>
<com.android.gallery3d.exif.ExifTag: int[] getValueAsInts()>
<com.android.systemui.doze.DozeWallpaperState: void transitionTo(com.android.systemui.doze.DozeMachine.State,com.android.systemui.doze.DozeMachine.State)>
<com.android.fakeoemfeatures.FakeCoreService: android.os.IBinder onBind(android.content.Intent)>
<com.android.server.SystemService: void onCleanupUser(int)>
<com.android.systemui.statusbar.notification.stack.NotificationStackScrollLayout: float setPulseHeight(float)>
<com.android.server.notification.NotificationUsageStats: void registerRemovedByApp(com.android.server.notification.NotificationRecord)>
<com.android.systemui.statusbar.notification.row.NotificationInlineImageResolver.ImageCache: void setImageResolver(com.android.systemui.statusbar.notification.row.NotificationInlineImageResolver)>
<com.android.server.usb.descriptors.report.ReportCanvas: void <init>(com.android.server.usb.descriptors.UsbDescriptorParser)>
<javax.obex.ServerOperation: boolean isValidBody()>
<com.android.systemui.appops.AppOpsControllerImpl: void addCallback(int[],com.android.systemui.appops.AppOpsController.Callback)>
<com.android.commands.svc.NfcCommand: void run(java.lang.String[])>
<com.android.systemui.plugins.qs.QSTileView: android.view.View getIconWithBackground()>
<com.android.server.media.MediaRouterService: void systemRunning()>
<com.android.systemui.globalactions.GlobalActionsLayout: void setDivisionView(android.view.View)>
<com.android.systemui.recents.utilities.Utilities: android.util.ArraySet objectToSet(java.lang.Object,android.util.ArraySet)>
<com.android.systemui.volume.VolumeDialogControllerImpl: int getAudioManagerStreamMinVolume(int)>
<android.text.NonEditableTextGenerator: android.text.NonEditableTextGenerator setCreateBoring(boolean)>
<com.android.systemui.statusbar.phone.SystemUIDialog: void <init>(android.content.Context,int)>
<com.android.uiautomator.core.UiScrollable: boolean scrollForward(int)>
<com.android.systemui.recents.views.TaskViewThumbnail: void updateThumbnailMatrix()>
<com.android.server.pm.PackageManagerService: void addPreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,int)>
<com.android.server.voiceinteraction.VoiceInteractionSessionConnection.Callback: void sessionConnectionGone(com.android.server.voiceinteraction.VoiceInteractionSessionConnection)>
<com.android.systemui.ExpandHelper.Callback: void setUserExpandedChild(android.view.View,boolean)>
<com.android.server.testing.shadows.ShadowApplicationPackageManager: int getPackageUidAsUser(java.lang.String,int,int)>
<com.android.server.appop.AppOpsService: void setUserRestrictions(android.os.Bundle,android.os.IBinder,int)>
<com.android.server.notification.ConditionProviders: boolean isValidEntry(java.lang.String,int)>
<com.android.server.hdmi.HdmiCecLocalDeviceAudioSystem: boolean handleReportPhysicalAddress(com.android.server.hdmi.HdmiCecMessage)>
<com.android.systemui.recents.views.FixedSizeFrameLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>
<com.android.server.autofill.ui.FillUi.Callback: void startIntentSender(android.content.IntentSender)>
<com.android.statsd.shelltools.Utils: void setUpLogger(java.util.logging.Logger,boolean)>
<com.android.settingslib.widget.BarChartInfo: int getTitle()>
<javax.obex.ObexHelper: java.lang.String convertToUnicode(byte[],boolean)>
<com.android.systemui.biometrics.BiometricDialogView: int getState()>
<com.android.systemui.bubbles.BubbleController: void <init>(android.content.Context,com.android.systemui.statusbar.phone.StatusBarWindowController,com.android.systemui.bubbles.BubbleData,com.android.systemui.bubbles.BubbleStackView.SurfaceSynchronizer,com.android.systemui.statusbar.policy.ConfigurationController,com.android.systemui.statusbar.notification.NotificationInterruptionStateProvider,com.android.systemui.statusbar.policy.ZenModeController)>
<com.android.systemui.statusbar.policy.UserSwitcherController.BaseUserAdapter: android.graphics.drawable.Drawable getDrawable(android.content.Context,com.android.systemui.statusbar.policy.UserSwitcherController.UserRecord)>
<android.media.Controller2Link: void <init>(android.media.MediaController2)>
<com.android.server.policy.WindowManagerPolicy: boolean canDismissBootAnimation()>
<com.android.server.search.SearchManagerService: android.app.SearchableInfo getSearchableInfo(android.content.ComponentName)>
<com.android.systemui.recents.model.TaskKeyStrongCache: void copyEntries(com.android.systemui.recents.model.TaskKeyStrongCache)>
<com.android.server.timezone.PackageTrackerIntentHelper: void scheduleReliabilityTrigger(long)>
<com.android.systemui.recents.RecentsOnboarding: void onDisconnectedFromLauncher()>
<com.android.systemui.ActivityStarterDelegate: void startActivity(android.content.Intent,boolean,boolean)>
<com.android.server.notification.PreferencesHelper: void setHideSilentStatusIcons(boolean)>
<com.android.server.biometrics.RemovalClient: int start()>
<com.android.server.security.VerityUtils: void setUpFsverity(java.lang.String,java.lang.String)>
<com.android.systemui.power.PowerNotificationWarnings: void update(int,int,long)>
<com.android.systemui.shared.system.WindowManagerWrapper: void setShelfHeight(boolean,int)>
<com.android.server.pm.permission.PermissionsState: com.android.server.pm.permission.PermissionsState.PermissionState getRuntimePermissionState(java.lang.String,int)>
<com.android.systemui.statusbar.notification.stack.StackScrollAlgorithm: void initView(android.content.Context)>
<com.android.server.infra.FrameworkResourcesServiceNameResolver: boolean setDefaultServiceEnabled(int,boolean)>
<com.android.server.usb.UsbDeviceManager: void systemReady()>
<com.android.systemui.statusbar.phone.BiometricUnlockController: void <init>(android.content.Context,com.android.systemui.statusbar.phone.DozeScrimController,com.android.systemui.keyguard.KeyguardViewMediator,com.android.systemui.statusbar.phone.ScrimController,com.android.systemui.statusbar.phone.StatusBar,com.android.systemui.statusbar.phone.UnlockMethodCache,android.os.Handler,com.android.keyguard.KeyguardUpdateMonitor,com.android.systemui.tuner.TunerService,int,boolean)>
<com.android.server.ConnectivityService: com.android.internal.net.LegacyVpnInfo getLegacyVpnInfo(int)>
<com.android.systemui.classifier.brightline.TimeLimitedMotionEventBuffer: void clear()>
<com.android.systemui.statusbar.NotificationLockscreenUserManager: boolean isLockscreenPublicMode(int)>
<com.android.server.notification.ValidateNotificationPeople: void initialize(android.content.Context,com.android.server.notification.NotificationUsageStats)>
<com.android.server.notification.NotificationUsageStats: org.json.JSONObject dumpJson(com.android.server.notification.NotificationManagerService.DumpFilter)>
<com.android.systemui.qs.PagedTileLayout.TilePage: boolean updateResources()>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.String getStartUserSessionMessage(android.content.ComponentName)>
<com.android.server.pm.PackageManagerService: android.content.pm.ParceledListSlice getInstalledApplications(int,int)>
<com.android.systemui.qs.tileimpl.QSIconViewImpl: void setIcon(com.android.systemui.plugins.qs.QSTile.State,boolean)>
<com.android.server.usb.UsbAlsaDevice: java.lang.String getDeviceAddress()>
<com.android.server.slice.SlicePermissionManager: boolean hasFullAccess(java.lang.String,int)>
<com.android.server.NativeDaemonEvent: void checkCode(int)>
<com.android.server.audio.AudioService: boolean isMasterMute()>
<com.android.server.accessibility.MagnificationController: void onDisplayRemoved(int)>
<com.android.statsd.loadtest.StatsdStatsRecorder: void <init>(com.android.statsd.loadtest.LoadtestActivity,boolean,int,com.android.internal.os.StatsdConfigProto.TimeUnit,long,int,boolean,boolean,boolean,boolean,boolean)>
<android.net.ipmemorystore.IOnNetworkAttributesRetrievedListener: void onNetworkAttributesRetrieved(android.net.ipmemorystore.StatusParcelable,java.lang.String,android.net.ipmemorystore.NetworkAttributesParcelable)>
<com.android.server.devicepolicy.DevicePolicyManagerService: boolean resetPasswordWithToken(android.content.ComponentName,java.lang.String,byte[],int)>
<com.android.systemui.statusbar.notification.row.ExpandableOutlineView: android.graphics.Path getClipPath(boolean)>
<com.android.systemui.statusbar.notification.row.NotificationContentInflater.InflationCallback: void onAsyncInflationFinished(com.android.systemui.statusbar.notification.collection.NotificationEntry,int)>
<com.android.server.usb.descriptors.Usb20ASFormatI: byte getBitResolution()>
<com.android.server.ConnectivityService: android.os.ParcelFileDescriptor establishVpn(com.android.internal.net.VpnConfig)>
<com.android.systemui.classifier.brightline.BrightLineFalsingManager: void onCameraOn()>
<com.android.server.search.Searchables: java.util.ArrayList getSearchablesList()>
<com.android.server.notification.PreferencesHelper: java.util.Map getPackageBans()>
<com.android.systemui.qs.QSCarrierGroup: void setMobileDataIndicators(com.android.systemui.statusbar.policy.NetworkController.IconState,com.android.systemui.statusbar.policy.NetworkController.IconState,int,int,boolean,boolean,java.lang.String,java.lang.String,boolean,int,boolean)>
<com.android.systemui.doze.DozeUi: void <init>(android.content.Context,android.app.AlarmManager,com.android.systemui.doze.DozeMachine,com.android.systemui.util.wakelock.WakeLock,com.android.systemui.doze.DozeHost,android.os.Handler,com.android.systemui.statusbar.phone.DozeParameters,com.android.keyguard.KeyguardUpdateMonitor)>
<com.android.systemui.qs.tiles.WorkModeTile: void handleSetListening(boolean)>
<com.android.systemui.biometrics.BiometricDialogView: boolean shouldGrayAreaDismissDialog()>
<com.android.systemui.statusbar.phone.StatusBar: void updateAreThereNotifications()>
<com.android.systemui.biometrics.BiometricDialogView: int getIconDescriptionResourceId()>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onScreenTurnedOn()>
<com.android.settingslib.CustomEditTextPreference: android.widget.EditText getEditText()>
<com.android.packageinstaller.InstallStaging.ErrorDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>
<com.android.server.biometrics.RemovalClient: boolean onEnumerationResult(android.hardware.biometrics.BiometricAuthenticator.Identifier,int)>
<com.android.keyguard.KeyguardPasswordView: void onPause()>
<com.android.settingslib.datetime.ZoneGetter.ZoneGetterData: void <init>(android.content.Context)>
<com.android.server.notification.ZenModeExtractor: com.android.server.notification.RankingReconsideration process(com.android.server.notification.NotificationRecord)>
<com.android.systemui.statusbar.RemoteInputController.Delegate: void lockScrollTo(com.android.systemui.statusbar.notification.collection.NotificationEntry)>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean isQsDetailShowing()>
<com.android.systemui.stackdivider.Divider: void onRecentsActivityStarting()>
<com.android.server.locksettings.SyntheticPasswordCrypto: byte[] personalisedHash(byte[],byte[][])>
<com.android.keyguard.KeyguardSliceView.Row: void onFinishInflate()>
<com.android.keyguard.KeyguardUpdateMonitor: void clearBiometricRecognized()>
<com.android.server.audio.AudioService: java.util.List getActivePlaybackConfigurations()>
<com.android.systemui.statusbar.notification.row.wrapper.NotificationMediaTemplateViewWrapper: boolean shouldClipToRounding(boolean,boolean)>
<com.android.server.contentcapture.ContentCaptureManagerServiceShellCommand: void onHelp()>
<com.android.systemui.qs.SlashDrawable: int getIntrinsicWidth()>
<com.android.systemui.statusbar.NotificationHeaderUtil: void restoreNotificationHeader(com.android.systemui.statusbar.notification.row.ExpandableNotificationRow)>
<com.android.systemui.statusbar.NotificationShelf: void setFakeShadowIntensity(float,float,int,int)>
<com.android.systemui.qs.QSFooterImpl: void disable(int,int,boolean)>
<com.android.server.os.DeviceIdentifiersPolicyService: void <init>(android.content.Context)>
<com.android.uiautomator.testrunner.TestCaseCollector: void addTestClasses(java.util.List)>
<com.android.systemui.plugins.ActivityStarter: void startActivity(android.content.Intent,boolean,com.android.systemui.plugins.ActivityStarter.Callback)>
<com.android.server.pm.IntentFilterVerificationState: java.lang.String getHostsString()>
<com.android.systemui.statusbar.phone.NavigationBarInflaterView: java.lang.String extractSize(java.lang.String)>
<com.android.systemui.statusbar.CommandQueue.Callbacks: void toggleKeyboardShortcutsMenu(int)>
<com.android.server.usb.descriptors.UsbMSMidiInputJack: int parseRawDescriptors(com.android.server.usb.descriptors.ByteStream)>
<javax.microedition.khronos.egl.EGL10: javax.microedition.khronos.egl.EGLContext eglCreateContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,javax.microedition.khronos.egl.EGLContext,int[])>
<com.android.systemui.statusbar.StatusBarStateControllerImpl: boolean goingToFullShade()>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.util.List getCrossProfileCalendarPackages(android.content.ComponentName)>
<com.android.systemui.pip.PipUI: void start()>
<android.net.ip.IpClientManager: boolean addKeepalivePacketFilter(int,android.net.TcpKeepalivePacketData)>
<com.android.systemui.statusbar.notification.row.NotificationGuts: boolean willBeRemoved()>
<com.android.gallery3d.glrenderer.BasicTexture: boolean inFinalizer()>
<com.android.systemui.recents.views.TaskViewHeader: void startFocusTimerIndicator(int)>
<com.android.systemui.statusbar.policy.ZenModeControllerImpl: boolean isZenAvailable()>
<com.android.systemui.statusbar.phone.NavigationBarView: void setLayoutDirection(int)>
<com.android.server.TelephonyRegistry: void notifyCallForwardingChanged(boolean)>
<com.android.systemui.qs.SecureSetting: void setValue(int)>
<com.android.systemui.statusbar.notification.collection.NotificationEntry: void setHeadsUpIsVisible()>
<com.android.server.pm.PackageManagerService: boolean addPermissionAsync(android.content.pm.PermissionInfo)>
<com.android.server.pm.PackageManagerService: void verifyPendingInstall(int,int)>
<com.android.systemui.qs.external.TileServiceManager: void setBindRequested(boolean)>
<com.android.systemui.statusbar.phone.StatusBarIconController: void setMobileIcons(java.lang.String,java.util.List)>
<com.android.keyguard.KeyguardSecurityCallback: void reset()>
<com.android.systemui.recents.model.RecentsTaskLoader: com.android.systemui.recents.model.HighResThumbnailLoader getHighResThumbnailLoader()>
<com.android.systemui.statusbar.notification.stack.AmbientState: void setExpandAnimationTopChange(int)>
<com.android.keyguard.CarrierTextController.CarrierTextCallback: void startedGoingToSleep()>
<com.android.server.usb.UsbDeviceManager: void onAwakeStateChanged(boolean)>
<com.android.server.devicepolicy.DevicePolicyConstants: com.android.server.devicepolicy.DevicePolicyConstants loadFromString(java.lang.String)>
<com.android.systemui.statusbar.phone.NotificationPanelView: boolean flingExpands(float,float,float,float)>
<javax.microedition.khronos.opengles.GL10: void glLoadMatrixx(int[],int)>
<com.android.settingslib.bluetooth.MapClientProfile: int getConnectionStatus(android.bluetooth.BluetoothDevice)>
<com.android.settingslib.applications.ApplicationsState: com.android.settingslib.applications.ApplicationsState.Session newSession(com.android.settingslib.applications.ApplicationsState.Callbacks,androidx.lifecycle.Lifecycle)>
<javax.microedition.khronos.opengles.GL10: void glPushMatrix()>
<com.android.systemui.statusbar.notification.TransformState: void setVisible(boolean,boolean)>
<com.android.keyguard.KeyguardUpdateMonitorCallback: void onLogoutEnabledChanged()>
<com.android.systemui.qs.tiles.BluetoothTile.BluetoothDetailAdapter: void setItemsVisible(boolean)>
<com.android.systemui.recents.views.TaskStackView: void updateToInitialState()>
<android.net.util.SharedLog: void <init>(java.lang.String)>
<com.android.server.Watchdog: void pauseWatchingCurrentThread(java.lang.String)>
<com.android.server.ConnectivityService: boolean isActiveNetworkMetered()>
<com.android.server.location.GnssLocationProvider: int getStatus(android.os.Bundle)>
<com.android.systemui.statusbar.notification.row.ExpandableNotificationRow: void setPinned(boolean)>
<com.android.server.firewall.SenderPackageFilter: boolean matches(com.android.server.firewall.IntentFirewall,android.content.ComponentName,android.content.Intent,int,int,java.lang.String,int)>
<com.android.printservice.recommendation.plugin.xerox.ServiceResolver.Observer: void dataSetChanged()>
<com.android.keyguard.KeyguardSimPinView: boolean shouldLockout(long)>
<com.android.settingslib.bluetooth.BluetoothCallback: void onProfileConnectionStateChanged(com.android.settingslib.bluetooth.CachedBluetoothDevice,int,int)>
<com.android.systemui.power.PowerNotificationWarnings: void showHighTemperatureWarning()>
<com.android.systemui.statusbar.HeadsUpStatusBarView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<com.android.systemui.statusbar.phone.NavigationBarView: void setDisabledFlags(int)>
<com.android.server.notification.NotificationManagerService.NotificationListeners: android.os.IInterface asInterface(android.os.IBinder)>
<com.android.systemui.recents.IRecentsSystemUserCallbacks: void sendLaunchRecentsEvent()>
<android.media.Controller2Link: void sendSessionCommand(int,android.media.Session2Command,android.os.Bundle,android.os.ResultReceiver)>
<com.android.systemui.bubbles.animation.PhysicsAnimationLayout: void setActiveController(com.android.systemui.bubbles.animation.PhysicsAnimationLayout.PhysicsAnimationController)>
<com.android.systemui.statusbar.notification.row.HybridGroupManager: com.android.systemui.statusbar.notification.row.HybridNotificationView bindFromNotification(com.android.systemui.statusbar.notification.row.HybridNotificationView,android.app.Notification)>
<com.android.server.devicepolicy.DevicePolicyManagerService: java.lang.String getCertInstallerPackage(android.content.ComponentName)>
<com.android.server.AttributeCache: com.android.server.AttributeCache instance()>
<com.android.systemui.statusbar.NotificationRemoteInputManager.Callback: void onLockedWorkRemoteInput(int,com.android.systemui.statusbar.notification.row.ExpandableNotificationRow,android.view.View)>
<com.android.packageinstaller.wear.WearPackageArgs: android.os.Bundle setPackageName(android.os.Bundle,java.lang.String)>
<com.android.systemui.UiOffloadThread: java.util.concurrent.Future submit(java.lang.Runnable)>
<com.android.systemui.qs.QSDualTileLabel: void setTextColor(int)>
<com.android.systemui.SwipeHelper.Callback: void onChildSnappedBack(android.view.View,float)>
<com.android.server.notification.RankingConfig: boolean isGroupBlocked(java.lang.String,int,java.lang.String)>
<com.android.systemui.statusbar.notification.TransformState: void disappear(float,com.android.systemui.statusbar.TransformableView)>
<com.android.systemui.classifier.FalsingLog: void e(java.lang.String,java.lang.String)>
<com.android.server.locksettings.LockSettingsStrongAuth: void requireStrongAuth(int,int)>
<com.android.mediadrm.signer.MediaDrmSigner: byte[] signRSA(android.media.MediaDrm,byte[],java.lang.String,byte[],byte[])>
<com.android.server.usb.descriptors.UsbACSelectorUnit: byte getNameIndex()>
<com.android.settingslib.bluetooth.CachedBluetoothDevice: int compareTo(com.android.settingslib.bluetooth.CachedBluetoothDevice)>
<com.android.settingslib.development.AbstractLogpersistPreferenceController: void writeLogpersistOption(java.lang.Object,boolean)>
<com.android.server.notification.ManagedServices.UserProfiles: android.util.IntArray getCurrentProfileIds()>
<javax.microedition.khronos.opengles.GL11: void glGetMaterialfv(int,int,float[],int)>
<com.android.settingslib.TwoTargetPreference: boolean shouldHideSecondTarget()>
