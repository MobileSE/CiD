<android.inputmethodservice.IInputMethodSessionWrapper.ImeInputEventReceiver: void <init>(android.inputmethodservice.IInputMethodSessionWrapper,android.view.InputChannel,android.os.Looper)>
<android.app.ActivityThread.ApplicationThread: void setSchedulingGroup(int)>
<android.app.ActivityView.ActivityViewSurfaceTextureListener: void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int)>
<android.app.ApplicationPackageManager: android.content.res.Resources getResourcesForApplicationAsUser(java.lang.String,int)>
<android.view.View.SendViewScrolledAccessibilityEvent: void run()>
<android.media.ClosedCaptionWidget.CCLineBox: void onMeasure(int,int)>
<android.widget.Editor.ErrorPopup: void update(int,int,int,int,boolean)>
<android.widget.Spinner.DropDownAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.animation.FloatKeyframeSet: float getFloatValue(float)>
<android.text.SpannableStringInternal: java.lang.String toString()>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: byte[] engineDoFinal(byte[],int,int)>
<android.media.AudioManager.OnAmPortUpdateListener: void onAudioPatchListUpdate(android.media.AudioPatch[])>
<android.content.pm.IPackageManager: void grantDefaultPermissionsToEnabledCarrierApps(java.lang.String[],int)>
<android.test.RepetitiveTest: int numIterations()>
<android.opengl.GLErrorWrapper: void glGetFixedv(int,int[],int)>
<android.view.IWindowManager: void setNewConfiguration(android.content.res.Configuration)>
<android.opengl.GLErrorWrapper: void glGenBuffers(int,java.nio.IntBuffer)>
<android.security.IKeystoreService: int insert(java.lang.String,byte[],int,int)>
<android.net.Uri.HierarchicalUri: java.lang.String toString()>
<android.opengl.GLLogWrapper: void glPointParameterfv(int,java.nio.FloatBuffer)>
<android.app.ApplicationPackageManager: void setApplicationEnabledSetting(java.lang.String,int,int)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: long getProducedOutputSizeBytes()>
<android.security.keystore.AndroidKeyStoreRSASignatureSpi: void resetWhilePreservingInitState()>
<android.text.Layout.SpannedEllipsizer: java.lang.Object[] getSpans(int,int,java.lang.Class)>
<android.widget.Editor.HandleView: int getCursorOffset()>
<android.widget.YearPickerView: void setRange(java.util.Calendar,java.util.Calendar)>
<android.widget.CalendarViewMaterialDelegate: long getMaxDate()>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: int engineUpdate(java.nio.ByteBuffer,java.nio.ByteBuffer)>
<android.preference.SeekBarPreference.SavedState: void <init>(android.os.Parcelable)>
<android.appwidget.AppWidgetHost.Callbacks: void <init>(android.os.Handler)>
<android.widget.YearPickerView.YearAdapter: boolean areAllItemsEnabled()>
<android.view.Choreographer.CallbackQueue: boolean hasDueCallbacksLocked(long)>
<android.renderscript.Program.ProgramParam: android.renderscript.Program.ProgramParam valueOf(java.lang.String)>
<android.preference.VolumePreference.SavedState: void <init>(android.os.Parcelable)>
<android.widget.GridLayout.Axis: void layout(int)>
<android.filterfw.core.GenerateFieldPort: java.lang.String name()>
<android.content.res.XmlBlock.Parser: java.lang.String getNamespacePrefix(int)>
<android.renderscript.ProgramRaster.CullMode: android.renderscript.ProgramRaster.CullMode[] values()>
<android.accounts.AccountManager.Future2Task: java.lang.Object getResult()>
<android.os.CommonTimeUtils: java.net.InetSocketAddress transactGetSockaddr(int)>
<android.app.BackStackRecord: boolean isEmpty()>
<android.widget.ImageView.ScaleType: android.widget.ImageView.ScaleType valueOf(java.lang.String)>
<android.app.SystemServiceRegistry: java.lang.String getSystemServiceName(java.lang.Class)>
<android.test.PerformanceTestCase.Intermediates: void addIntermediate(java.lang.String)>
<android.view.ViewRootImpl.ConsumeBatchedInputImmediatelyRunnable: void run()>
<android.security.IKeystoreService: int grant(java.lang.String,int)>
<android.media.MediaPlayer.EventHandler: void handleMessage(android.os.Message)>
<android.media.SubtitleTrack.CueList.EntryIterator: java.lang.Object next()>
<android.app.ContextImpl: void sendOrderedBroadcast(android.content.Intent,java.lang.String,int,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<android.app.ContextImpl: void setWallpaper(java.io.InputStream)>
<android.opengl.GLErrorWrapper: void glGenTextures(int,java.nio.IntBuffer)>
<android.app.ContextImpl: void startActivityAsUser(android.content.Intent,android.os.Bundle,android.os.UserHandle)>
<android.animation.PathKeyframes: android.animation.Keyframes.IntKeyframes createXIntKeyframes()>
<android.nfc.NfcActivityManager.NfcApplicationState: void register()>
<android.content.pm.IPackageManager: android.content.pm.KeySet getSigningKeySet(java.lang.String)>
<android.view.OrientationEventListener.SensorEventListenerImpl: void onAccuracyChanged(android.hardware.Sensor,int)>
<android.widget.DatePickerCalendarDelegate.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.opengl.GLErrorWrapper: void glTexParameteriv(int,int,int[],int)>
<android.content.pm.IPackageManager: void updatePermissionFlags(java.lang.String,java.lang.String,int,int,int)>
<android.widget.Spinner.SpinnerPopup: void dismiss()>
<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi.CBC.NoPadding: void finalize()>
<android.renderscript.Program.TextureType: android.renderscript.Program.TextureType valueOf(java.lang.String)>
<android.app.ActivityTransitionCoordinator: void moveSharedElementsToOverlay()>
<android.view.IWindowManager: void setAppWillBeHidden(android.os.IBinder)>
<android.widget.Spinner.DropDownAdapter: boolean isEmpty()>
<android.opengl.GLLogWrapper: void glTexGenfv(int,int,float[],int)>
<android.widget.AppSecurityPermissions.PermissionGroupInfoComparator: int compare(android.widget.AppSecurityPermissions.MyPermissionGroupInfo,android.widget.AppSecurityPermissions.MyPermissionGroupInfo)>
<android.text.Layout.SpannedEllipsizer: int getSpanEnd(java.lang.Object)>
<android.content.pm.IPackageManager: boolean isOnlyCoreApps()>
<android.os.ParcelFileDescriptor.Status: void <init>(int)>
<android.content.pm.IPackageManager: boolean isUidPrivileged(int)>
<android.sax.BadXmlException: java.lang.String getMessage()>
<android.hardware.location.IFusedLocationHardware: boolean supportsDiagnosticDataInjection()>
<android.widget.TimePickerClockDelegate: void setIs24HourView(boolean)>
<android.media.SubtitleTrack.CueList.EntryIterator: boolean hasNext()>
<android.speech.tts.FileSynthesisCallback: int start(int,int,int)>
<android.util.MapCollections.MapIterator: void remove()>
<android.view.ViewRootImpl.ImeInputStage: void <init>(android.view.ViewRootImpl,android.view.ViewRootImpl.InputStage,java.lang.String)>
<android.animation.PathKeyframes: java.lang.Class getType()>
<android.app.ContextImpl: java.io.FileOutputStream openFileOutput(java.lang.String,int)>
<android.widget.DayPickerPagerAdapter: int getFirstDayOfWeek()>
<android.view.ViewOverlay.OverlayViewGroup: void invalidateParentIfNeeded()>
<android.net.Network.NetworkBoundSocketFactory: java.net.Socket createSocket(java.net.InetAddress,int,java.net.InetAddress,int)>
<android.app.BackStackRecord: android.app.FragmentTransaction attach(android.app.Fragment)>
<android.app.ApplicationPackageManager: android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo)>
<android.accounts.AccountManager.AmsTask: void done()>
<android.app.ContextImpl: java.io.File getObbDir()>
<android.widget.Toolbar.ExpandedActionViewMenuPresenter: int getId()>
<android.widget.AbsListView.InputConnectionWrapper: int getCursorCapsMode(int)>
<android.net.Uri.Part: android.net.Uri.Part fromEncoded(java.lang.String)>
<android.text.Layout.Alignment: android.text.Layout.Alignment valueOf(java.lang.String)>
<android.app.MediaRouteActionProvider.MediaRouterCallback: void onRouteChanged(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>
<android.widget.DatePickerCalendarDelegate: android.os.Parcelable onSaveInstanceState(android.os.Parcelable)>
<android.security.keystore.AndroidKeyStoreSignatureSpiBase: boolean engineVerify(byte[])>
<android.app.NativeActivity.NativeContentView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.view.ViewRootImpl.SendWindowContentChangedAccessibilityEvent: void run()>
<android.opengl.GLErrorWrapper: void glGetTexGenfv(int,int,java.nio.FloatBuffer)>
<android.net.Uri.OpaqueUri: int describeContents()>
<android.widget.RemoteViews.TextViewDrawableColorFilterAction: void <init>(android.widget.RemoteViews,int,boolean,int,int,android.graphics.PorterDuff.Mode)>
<android.opengl.GLErrorWrapper: void glLoadIdentity()>
<android.widget.Editor.EasyEditPopupWindow: void setEasyEditSpan(android.text.style.EasyEditSpan)>
<android.app.LauncherActivity.ActivityAdapter.ArrayFilter: void publishResults(java.lang.CharSequence,android.widget.Filter.FilterResults)>
<android.view.ViewRootImpl.SyntheticTrackballHandler: void cancel(android.view.MotionEvent)>
<android.widget.RemoteViews.ReflectionActionWithoutParams: java.lang.String getActionName()>
<android.widget.TextView.ChangeWatcher: void onSpanRemoved(android.text.Spannable,java.lang.Object,int,int)>
<android.media.Utils: android.util.Range parseRationalRange(java.lang.Object,android.util.Range)>
<android.widget.SuggestionsAdapter: void notifyDataSetChanged()>
<android.opengl.GLErrorWrapper: void glSampleCoveragex(int,boolean)>
<android.app.ActivityTransitionState: void startExitOutTransition(android.app.Activity,android.os.Bundle)>
<android.location.ILocationManager: void removeUpdates(android.location.ILocationListener,android.app.PendingIntent,java.lang.String)>
<android.app.ExitTransitionCoordinator: void sharedElementTransitionComplete()>
<android.widget.FastScroller: void onSizeChanged(int,int,int,int)>
<android.webkit.WebSettings.PluginState: android.webkit.WebSettings.PluginState valueOf(java.lang.String)>
<android.opengl.GLLogWrapper: void glDrawTexivOES(java.nio.IntBuffer)>
<android.opengl.GLLogWrapper: void glClipPlanef(int,java.nio.FloatBuffer)>
<android.app.ContextImpl: void sendOrderedBroadcast(android.content.Intent,java.lang.String)>
<android.graphics.drawable.RippleForeground: boolean drawSoftware(android.graphics.Canvas,android.graphics.Paint)>
<android.widget.CalendarViewLegacyDelegate.WeekView: void init(int,int,int)>
<android.transition.ChangeTransform.GhostListener: void onTransitionEnd(android.transition.Transition)>
<android.opengl.GLErrorWrapper: void glGenTextures(int,int[],int)>
<android.app.ActivityThread.ReceiverData: java.lang.String toString()>
<android.widget.DayPickerViewPager: void <init>(android.content.Context)>
<android.accounts.AccountManager.BaseFutureTask: void doWork()>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: void resetAll()>
<android.security.keymaster.KeymasterDateArgument: void writeValue(android.os.Parcel)>
<android.content.pm.IPackageManager: void deletePackage(java.lang.String,android.content.pm.IPackageDeleteObserver2,int,int)>
<android.widget.RemoteViewsAdapter.RemoteViewsMetaData: int getMappedViewType(int)>
<android.opengl.EGLLogWrapper: boolean eglWaitGL()>
<android.net.NetworkInfo.DetailedState: android.net.NetworkInfo.DetailedState[] values()>
<android.hardware.usb.IUsbManager: void grantDevicePermission(android.hardware.usb.UsbDevice,int)>
<android.content.pm.IPackageManager: void setInstallerPackageName(java.lang.String,java.lang.String)>
<android.widget.Editor.SpanController: void onSpanAdded(android.text.Spannable,java.lang.Object,int,int)>
<android.app.EnterTransitionCoordinator: android.transition.Transition getViewsTransition()>
<android.hardware.usb.IUsbManager: void requestAccessoryPermission(android.hardware.usb.UsbAccessory,java.lang.String,android.app.PendingIntent)>
<android.util.XmlPullAttributes: int getAttributeListValue(java.lang.String,java.lang.String,java.lang.String[],int)>
<android.text.PackedIntVector: void <init>(int)>
<android.opengl.GLErrorWrapper: void glFlush()>
<android.widget.RemoteViews.Action: int mergeBehavior()>
<android.net.LocalSocketImpl.SocketOutputStream: void close()>
<android.view.AccessibilityIterators.CharacterTextSegmentIterator: void onLocaleChanged(java.util.Locale)>
<android.widget.GridLayout.Axis: void invalidateStructure()>
<android.media.Utils: android.util.Range factorRange(android.util.Range,long)>
<android.opengl.GLErrorWrapper: void glClientActiveTexture(int)>
<android.opengl.GLLogWrapper: void glGetBufferParameteriv(int,int,int[],int)>
<android.hardware.location.IFusedLocationHardware: int getSupportedBatchSize()>
<android.opengl.GLErrorWrapper: void glTexParameteri(int,int,int)>
<android.widget.FastScroller: boolean onInterceptTouchEvent(android.view.MotionEvent)>
<android.app.Instrumentation.Idler: void <init>(java.lang.Runnable)>
<android.content.res.XmlBlock.Parser: int getAttributeResourceValue(int,int)>
<android.speech.SpeechRecognizer.InternalListener: void onEvent(int,android.os.Bundle)>
<android.app.Activity.HostCallbacks: boolean onHasWindowAnimations()>
<android.app.ContextImpl: int getWallpaperDesiredMinimumWidth()>
<android.app.ExitTransitionCoordinator: void stop()>
<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask: java.lang.Void doInBackground(java.lang.Void[])>
<android.app.ActivityTransitionCoordinator: android.util.ArrayMap mapSharedElements(java.util.ArrayList,java.util.ArrayList)>
<android.view.OrientationEventListener.SensorEventListenerImpl: void onSensorChanged(android.hardware.SensorEvent)>
<android.widget.DatePickerCalendarDelegate: int getFirstDayOfWeek()>
<android.media.Utils: android.util.Range longRangeFor(double)>
<android.view.IWindowSession: void onRectangleOnScreenRequested(android.os.IBinder,android.graphics.Rect)>
<android.util.MapCollections.MapIterator: java.util.Map.Entry next()>
<android.view.ViewRootImpl.ImeInputStage: int onProcess(android.view.ViewRootImpl.QueuedInputEvent)>
<android.net.Network.NetworkBoundSocketFactory: java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int)>
<android.preference.GenericInflater: android.content.Context getContext()>
<android.widget.RemoteViews.BitmapReflectionAction: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>
<android.view.ViewRootImpl.SyntheticInputStage: void <init>(android.view.ViewRootImpl)>
<android.content.ContentProvider.Transport: android.os.Bundle call(java.lang.String,java.lang.String,java.lang.String,android.os.Bundle)>
<android.print.PrintManager.PrintDocumentAdapterDelegate: void start()>
<android.opengl.GLLogWrapper: void glDepthFunc(int)>
<android.app.ActivityTransitionCoordinator: void moveSharedElementsFromOverlay()>
<android.text.AlteredCharSequence.AlteredSpanned: int getSpanFlags(java.lang.Object)>
<android.widget.AutoCompleteTextView.MyWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>
<android.widget.ListView.FixedViewInfo: void <init>(android.widget.ListView)>
<android.opengl.GLErrorWrapper: void glGetRenderbufferParameterivOES(int,int,java.nio.IntBuffer)>
<android.view.ViewRootImpl.SyntheticKeyboardHandler: void process(android.view.KeyEvent)>
<android.widget.StackView.LayoutParams: void setHorizontalOffset(int)>
<android.widget.FastScroller: void <init>(android.widget.AbsListView,int)>
<android.text.TextDirectionHeuristics.TextDirectionHeuristicImpl: boolean defaultIsRtl()>
<android.os.IBatteryPropertiesRegistrar: void registerListener(android.os.IBatteryPropertiesListener)>
<android.renderscript.Element.DataKind: android.renderscript.Element.DataKind valueOf(java.lang.String)>
<android.hardware.ICameraService: int connectDevice(android.hardware.camera2.ICameraDeviceCallbacks,int,java.lang.String,int,android.hardware.camera2.utils.BinderHolder)>
<android.view.MenuInflater.MenuState: void <init>(android.view.MenuInflater,android.view.Menu)>
<android.widget.Editor.TextActionModeCallback: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)>
<android.content.IntentSender.FinishedDispatcher: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int)>
<android.opengl.GLSurfaceView.GLThreadManager: boolean tryAcquireEglContextLocked(android.opengl.GLSurfaceView.GLThread)>
<android.app.ContextImpl: android.content.Context createApplicationContext(android.content.pm.ApplicationInfo,int)>
<android.media.MediaRouter.CallbackInfo: void <init>(android.media.MediaRouter.Callback,int,int,android.media.MediaRouter)>
<android.media.WebVttRenderingWidget.CueLayout: void <init>(android.content.Context,android.media.TextTrackCue,android.view.accessibility.CaptioningManager.CaptionStyle,float)>
<android.renderscript.Type.CubemapFace: android.renderscript.Type.CubemapFace valueOf(java.lang.String)>
<android.opengl.GLErrorWrapper: void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.animation.PropertyValuesHolder.IntPropertyValuesHolder: void <init>(java.lang.String,int[])>
<android.app.ApplicationPackageManager: boolean isSignedBy(java.lang.String,android.content.pm.KeySet)>
<android.util.MapCollections.KeySet: int hashCode()>
<android.widget.TimePickerSpinnerDelegate.SavedState: int getHour()>
<android.view.ViewRootImpl.SendWindowContentChangedAccessibilityEvent: void runOrPost(android.view.View,int)>
<android.location.ILocationManager: java.util.List getProviders(android.location.Criteria,boolean)>
<android.widget.ExpandableListPosition: android.widget.ExpandableListPosition obtain(int,int,int,int)>
<android.opengl.EGLLogWrapper: boolean eglDestroySurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface)>
<android.view.ViewRootImpl.SyntheticInputStage: int onProcess(android.view.ViewRootImpl.QueuedInputEvent)>
<android.widget.TimePicker.AbstractTimePickerDelegate: void setValidationCallback(android.widget.TimePicker.ValidationCallback)>
<android.widget.RemoteViewsAdapter.RemoteViewsMetaData: boolean isViewTypeInRange(int)>
<android.media.WebVttRenderingWidget.RegionLayout: void <init>(android.content.Context,android.media.TextTrackRegion,android.view.accessibility.CaptioningManager.CaptionStyle,float)>
<android.widget.DatePicker.AbstractDatePickerDelegate: void <init>(android.widget.DatePicker,android.content.Context)>
<android.widget.TextView.CharWrapper: void drawTextRun(android.graphics.Canvas,int,int,int,int,float,float,boolean,android.graphics.Paint)>
<android.animation.Animator.AnimatorConstantState: int getChangingConfigurations()>
<android.widget.RemoteViews.BitmapReflectionAction: void writeToParcel(android.os.Parcel,int)>
<android.media.AudioHandle: boolean equals(java.lang.Object)>
<android.opengl.GLErrorWrapper: void glMultiTexCoord4f(int,float,float,float,float)>
<android.security.IKeystoreService: boolean isOperationAuthorized(android.os.IBinder)>
<android.view.ViewDebug.ExportedProperty: boolean deepExport()>
<android.opengl.GLErrorWrapper: void glPointParameterxv(int,int[],int)>
<android.widget.DatePickerCalendarDelegate: boolean getCalendarViewShown()>
<android.widget.ExpandableListConnector: boolean hasStableIds()>
<android.net.DhcpStateMachine.WaitBeforeRenewalState: boolean processMessage(android.os.Message)>
<android.app.ExitTransitionCoordinator: android.transition.Transition getViewsTransition()>
<android.view.IWindowManager: void pauseKeyDispatching(android.os.IBinder)>
<android.app.INotificationManager: android.service.notification.ZenModeConfig getZenModeConfig()>
<android.preference.GenericInflater: java.lang.Object inflate(org.xmlpull.v1.XmlPullParser,android.preference.GenericInflater.Parent)>
<android.widget.Editor.SelectionStartHandleView: int getHotspotX(android.graphics.drawable.Drawable,boolean)>
<android.widget.Editor.PinnedPopupWindow: void updatePosition(int,int,boolean,boolean)>
<android.widget.YearPickerView.YearAdapter: boolean setSelection(int)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: void finalize()>
<android.security.IKeystoreService: java.lang.String[] list(java.lang.String,int)>
<android.preference.PreferenceActivity.HeaderAdapter: void <init>(android.content.Context,java.util.List,int,boolean)>
<android.graphics.Picture.RecordingCanvas: void <init>(android.graphics.Picture,long)>
<android.widget.ImageView.ImageViewBitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>
<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask: void onPostExecute(java.lang.Void)>
<android.widget.TextView.ChangeWatcher: void onSpanAdded(android.text.Spannable,java.lang.Object,int,int)>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi: byte[] getIv()>
<android.location.IGeocodeProvider: java.lang.String getFromLocation(double,double,int,android.location.GeocoderParams,java.util.List)>
<android.hardware.location.IFusedLocationHardwareSink: void onCapabilities(int)>
<android.widget.DayPickerPagerAdapter: void setRange(java.util.Calendar,java.util.Calendar)>
<android.graphics.drawable.RippleForeground: boolean drawHardware(android.view.DisplayListCanvas)>
<android.graphics.Bitmap.BitmapFinalizer: void finalize()>
<android.widget.DatePicker.DatePickerSpinnerDelegate: void setMinDate(long)>
<android.widget.ExpandableListConnector: int getCount()>
<android.view.ViewOverlay.OverlayViewGroup: void add(android.view.View)>
<android.widget.ExpandableListConnector: boolean isEmpty()>
<android.webkit.WebSettings.TextSize: android.webkit.WebSettings.TextSize[] values()>
<android.opengl.GLErrorWrapper: void glAlphaFunc(int,float)>
<android.content.pm.IPackageManager: boolean isSafeMode()>
<android.security.keymaster.KeymasterBlobArgument: void <init>(int,byte[])>
<android.widget.Editor.TextActionModeCallback: void onDestroyActionMode(android.view.ActionMode)>
<android.media.MediaPlayer.TimeProvider: void close()>
<android.widget.RemoteViews.ReflectionAction: int mergeBehavior()>
<android.net.LocalSocketImpl: void shutdownInput()>
<android.appwidget.AppWidgetHost.Callbacks: void providerChanged(int,android.appwidget.AppWidgetProviderInfo)>
<android.webkit.WebSettings.TextSize: android.webkit.WebSettings.TextSize valueOf(java.lang.String)>
<android.hardware.camera2.ICameraDeviceUser: int createDefaultRequest(int,android.hardware.camera2.impl.CameraMetadataNative)>
<android.widget.Editor.SelectionModifierCursorController: void hide()>
<android.widget.DatePicker.DatePickerSpinnerDelegate: void setEnabled(boolean)>
<android.widget.TimePickerSpinnerDelegate: void setCurrentMinute(int)>
<android.media.Tokenizer.DataTokenizer: android.media.Tokenizer.TokenizerPhase start()>
<android.opengl.GLErrorWrapper: void glTexParameterx(int,int,int)>
<android.opengl.GLLogWrapper: void glLightfv(int,int,float[],int)>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getActivityBanner(android.content.Intent)>
<android.view.View.MatchIdPredicate: boolean apply(java.lang.Object)>
<android.app.ActivityTransitionCoordinator: void <init>(android.view.Window,java.util.ArrayList,android.app.SharedElementCallback,boolean)>
<android.media.MediaRouter.WifiDisplayStatusChangedReceiver: void onReceive(android.content.Context,android.content.Intent)>
<android.widget.AbsListView.SavedState: java.lang.String toString()>
<android.widget.ListPopupWindow.PopupTouchInterceptor: boolean onTouch(android.view.View,android.view.MotionEvent)>
<android.animation.AnimatorSet.AnimatorSetListener: void onAnimationRepeat(android.animation.Animator)>
<android.app.ApplicationPackageManager: void setInstallerPackageName(java.lang.String,java.lang.String)>
<android.media.MediaScanner.MyMediaScannerClient: java.lang.String getGenreName(java.lang.String)>
<android.widget.ListPopupWindow.DropDownListView: boolean hasFocus()>
<android.widget.CalendarView.AbstractCalendarViewDelegate: int getShownWeekCount()>
<android.opengl.GLLogWrapper: void glTranslatex(int,int,int)>
<android.app.ApplicationPackageManager: android.os.storage.VolumeInfo getPackageCurrentVolume(android.content.pm.ApplicationInfo)>
<android.widget.TimePickerSpinnerDelegate: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.view.ViewGroup.TouchTarget: android.view.ViewGroup.TouchTarget obtain(android.view.View,int)>
<android.inputmethodservice.IInputMethodSessionWrapper: void updateCursorAnchorInfo(android.view.inputmethod.CursorAnchorInfo)>
<android.widget.AbsListView.PositionScroller: void stop()>
<android.os.IBatteryPropertiesRegistrar: int getProperty(int,android.os.BatteryProperty)>
<android.inputmethodservice.IInputMethodWrapper: void unbindInput()>
<android.opengl.GLLogWrapper: void glTexParameterfv(int,int,float[],int)>
<android.widget.RemoteViewsService.RemoteViewsFactoryAdapter: long getItemId(int)>
<android.app.ApplicationPackageManager: void freeStorage(java.lang.String,long,android.content.IntentSender)>
<android.view.IWindowManager: void showStrictModeViolation(boolean)>
<android.widget.TimePickerSpinnerDelegate: int getBaseline()>
<android.opengl.GLSurfaceView.BaseConfigChooser: void <init>(android.opengl.GLSurfaceView,int[])>
<android.view.ViewRootImpl.AccessibilityInteractionConnection: void findFocus(long,int,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)>
<android.app.ApplicationLoaders: android.app.ApplicationLoaders getDefault()>
<android.security.keystore.AndroidKeyStoreECDSASignatureSpi: void resetAll()>
<android.app.ApplicationPackageManager: boolean isSafeMode()>
<android.printservice.PrintService.ServiceHandler: void <init>(android.printservice.PrintService,android.os.Looper)>
<android.os.TokenWatcher.Death: void finalize()>
<android.media.MediaRouter.Static: void onDisplayChanged(int)>
<android.widget.Editor.HandleView: void showAtLocation(int)>
<android.widget.SimpleMonthView.MonthViewTouchHelper: void <init>(android.widget.SimpleMonthView,android.view.View)>
<android.view.ViewOverlay.OverlayViewGroup: void invalidateParentCaches()>
<android.text.SpannableStringInternal: int getSpanEnd(java.lang.Object)>
<android.net.wifi.SupplicantState: boolean isConnecting(android.net.wifi.SupplicantState)>
<android.widget.RemoteViews.SetEmptyView: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>
<android.hardware.camera2.ICameraDeviceUser: int flush(android.hardware.camera2.utils.LongParcelable)>
<android.os.PersistableBundle.MyReadMapCallback: java.lang.Object readThisUnknownObjectXml(org.xmlpull.v1.XmlPullParser,java.lang.String)>
<android.widget.NumberPicker.AccessibilityNodeProviderImpl: boolean performAction(int,int,android.os.Bundle)>
<android.widget.AdapterView.AdapterDataSetObserver: void onChanged()>
<android.widget.CalendarViewMaterialDelegate: void <init>(android.widget.CalendarView,android.content.Context,android.util.AttributeSet,int,int)>
<android.filterfw.core.StopWatch: void stop()>
<android.app.ContextImpl: void unbindService(android.content.ServiceConnection)>
<android.widget.GridLayout.Axis: int getMeasure(int)>
<android.opengl.GLLogWrapper: void glOrthox(int,int,int,int,int,int)>
<android.animation.PropertyValuesHolder.FloatPropertyValuesHolder: android.animation.PropertyValuesHolder.FloatPropertyValuesHolder clone()>
<android.security.keystore.AndroidKeyStoreSignatureSpiBase: void resetAll()>
<android.opengl.GLSurfaceView.GLThread: void run()>
<android.accounts.AccountManager.AmsTask: android.accounts.AccountManagerFuture start()>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: long getConsumedInputSizeBytes()>
<android.opengl.GLLogWrapper: void glDepthMask(boolean)>
<android.speech.RecognitionService.RecognitionServiceBinder: void cancel(android.speech.IRecognitionListener)>
<android.widget.DatePickerCalendarDelegate.SavedState: long getMinDate()>
<android.app.BackStackRecord.TransitionState: void <init>(android.app.BackStackRecord)>
<android.os.FileObserver.ObserverThread: int startWatching(java.lang.String,int,android.os.FileObserver)>
<android.content.pm.IPackageManager: void setPackageStoppedState(java.lang.String,boolean,int)>
<android.security.keystore.AndroidKeyStoreRSASignatureSpi: void initKey(android.security.keystore.AndroidKeyStoreKey)>
<android.opengl.GLErrorWrapper: void glTexEnviv(int,int,int[],int)>
<android.animation.IntKeyframeSet: android.animation.IntKeyframeSet clone()>
<android.view.HardwareLayer: boolean prepare(int,int,boolean)>
<android.media.RemoteController.EventHandler: void <init>(android.media.RemoteController,android.media.RemoteController,android.os.Looper)>
<android.location.ILocationManager: boolean sendNiResponse(int,int)>
<android.renderscript.Element.DataType: android.renderscript.Element.DataType valueOf(java.lang.String)>
<android.opengl.GLLogWrapper: void glPointParameterxv(int,int[],int)>
<android.app.SharedPreferencesImpl: android.content.SharedPreferences.Editor edit()>
<android.app.ActivityThread.ApplicationThread: void dumpProvider(java.io.FileDescriptor,android.os.IBinder,java.lang.String[])>
<android.os.CommonTimeUtils: int transactGetInt(int,int)>
<android.net.Uri.HierarchicalUri: android.net.Uri.Builder buildUpon()>
<android.hardware.ICameraService: int connect(android.hardware.ICameraClient,int,java.lang.String,int,android.hardware.camera2.utils.BinderHolder)>
<android.view.ViewRootImpl.SyntheticJoystickHandler: void handleMessage(android.os.Message)>
<android.app.ApplicationPackageManager: void removePermission(java.lang.String)>
<android.opengl.GLSurfaceView.GLThread: void onResume()>
<android.telecom.VideoCallImpl.VideoCallListenerBinder: void handleCallSessionEvent(int)>
<android.app.ContextImpl: void scheduleFinalCleanup(java.lang.String,java.lang.String)>
<android.telecom.RemoteConnection.CallbackRecord: void <init>(android.telecom.RemoteConnection.Callback,android.os.Handler)>
<android.widget.AbsListView.InputConnectionWrapper: boolean setComposingText(java.lang.CharSequence,int)>
<android.app.ContextImpl: android.content.Context getApplicationContext()>
<android.inputmethodservice.ExtractButton: void <init>(android.content.Context,android.util.AttributeSet)>
<android.app.ContextImpl: void enforceUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int,java.lang.String)>
<android.app.BackStackRecord: android.app.FragmentTransaction show(android.app.Fragment)>
<android.content.pm.IPackageManager: java.util.List getIntentFilterVerifications(java.lang.String)>
<android.bluetooth.BluetoothInputStream: void close()>
<android.opengl.EGLLogWrapper: java.lang.String eglQueryString(javax.microedition.khronos.egl.EGLDisplay,int)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: int engineDoFinal(byte[],int,int,byte[],int)>
<android.content.pm.IPackageManager: void addPackageToPreferred(java.lang.String)>
<android.opengl.GLLogWrapper: void glMaterialfv(int,int,java.nio.FloatBuffer)>
<android.test.AndroidTestCase: void scrubClass(java.lang.Class)>
<android.widget.TableRow.ChildrenTracker: void onChildViewAdded(android.view.View,android.view.View)>
<android.app.ActivityTransitionCoordinator: long getFadeDuration()>
<android.animation.PathKeyframes: android.animation.Keyframes clone()>
<android.transition.Visibility.DisappearListener: void onAnimationStart(android.animation.Animator)>
<android.location.ILocationManager: void removeGpsStatusListener(android.location.IGpsStatusListener)>
<android.bluetooth.BluetoothSocket.SocketState: android.bluetooth.BluetoothSocket.SocketState valueOf(java.lang.String)>
<android.app.ContextImpl.ApplicationContentResolver: android.content.IContentProvider acquireProvider(android.content.Context,java.lang.String)>
<android.security.keystore.AndroidKeyStoreSignatureSpiBase: int engineSign(byte[],int,int)>
<android.app.SystemServiceRegistry.StaticServiceFetcher: java.lang.Object getService(android.app.ContextImpl)>
<android.widget.RemoteViews.SetRemoteViewsAdapterIntent: void <init>(android.widget.RemoteViews,int,android.content.Intent)>
<android.opengl.GLLogWrapper: void glGetTexParameterxv(int,int,java.nio.IntBuffer)>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationIcon(java.lang.String)>
<android.media.ImageWriter.WriterSurfaceImage: int getHeight()>
<android.widget.NumberPicker.PressedStateHelper: void buttonPressDelayed(int)>
<android.opengl.GLLogWrapper: void glGetLightfv(int,int,float[],int)>
<android.app.ApplicationPackageManager: void registerMoveCallback(android.content.pm.PackageManager.MoveCallback,android.os.Handler)>
<android.opengl.GLLogWrapper: void glPolygonOffsetx(int,int)>
<android.opengl.GLLogWrapper: void glEnableClientState(int)>
<android.view.IWindowSession: void performDeferredDestroy(android.view.IWindow)>
<android.app.ApplicationPackageManager: void installPackageWithVerificationAndEncryption(android.net.Uri,android.content.pm.IPackageInstallObserver,int,java.lang.String,android.content.pm.VerificationParams,android.content.pm.ContainerEncryptionParams)>
<android.net.Uri.OpaqueUri: java.lang.String getFragment()>
<android.hardware.Camera.EventHandler: void handleMessage(android.os.Message)>
<android.app.ExitTransitionCoordinator: void startExit()>
<android.mtp.MtpPropertyGroup: void <init>(android.mtp.MtpDatabase,android.content.IContentProvider,java.lang.String,java.lang.String,int[])>
<android.text.TextDirectionHeuristics.AnyStrong: int checkRtl(java.lang.CharSequence,int,int)>
<android.hardware.LegacySensorManager.LmsFilter: float filter(long,float)>
<android.view.IWindowManager: boolean inputMethodClientHasFocus(com.android.internal.view.IInputMethodClient)>
<android.app.ActivityTransitionCoordinator: void viewsReady(android.util.ArrayMap)>
<android.hardware.GeomagneticField.LegendreTable: void <init>(int,float)>
<android.content.pm.IPackageManager: int getUidForSharedUser(java.lang.String)>
<android.app.ContextImpl: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>
<android.app.ApplicationPackageManager: java.util.List getInstalledPackages(int)>
<android.media.WebVttRenderingWidget.SpanLayout: void <init>(android.content.Context,android.media.TextTrackCueSpan[])>
<android.app.ApplicationPackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>
<android.util.MapCollections.EntrySet: boolean add(java.util.Map.Entry)>
<android.opengl.GLErrorWrapper: void glPointSize(float)>
<android.net.DhcpStateMachine.WaitBeforeRenewalState: void exit()>
<android.opengl.GLLogWrapper: void glPolygonOffset(float,float)>
<android.widget.GridLayout.Bounds: int getOffset(android.widget.GridLayout,android.view.View,android.widget.GridLayout.Alignment,int,boolean)>
<android.media.Utils: android.util.Range parseLongRange(java.lang.Object,android.util.Range)>
<android.print.PrinterDiscoverySession.PrinterDiscoveryObserver: void onPrintersRemoved(android.content.pm.ParceledListSlice)>
<android.widget.AbsListView.InputConnectionWrapper: java.lang.CharSequence getSelectedText(int)>
<android.app.LoadedApk.ServiceDispatcher.RunConnection: void run()>
<android.app.ApplicationPackageManager: void addPreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,int)>
<android.speech.tts.FileSynthesisCallback: int audioAvailable(byte[],int,int)>
<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache: boolean queuePositionsToBePreloadedFromRequestedPosition(int)>
<android.app.BackStackRecord: android.app.FragmentTransaction addSharedElement(android.view.View,java.lang.String)>
<android.app.BackStackRecord: android.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence)>
<android.widget.Editor.SpanController: void onSpanRemoved(android.text.Spannable,java.lang.Object,int,int)>
<android.widget.AbsListView.MultiChoiceModeWrapper: void onDestroyActionMode(android.view.ActionMode)>
<android.content.res.XmlBlock: void close()>
<android.net.Uri.PathPart: android.net.Uri.PathPart appendEncodedSegment(android.net.Uri.PathPart,java.lang.String)>
<android.util.FastImmutableArraySet.FastIterator: void remove()>
<android.renderscript.Allocation.MipmapControl: android.renderscript.Allocation.MipmapControl[] values()>
<android.widget.AbsListView.InputConnectionWrapper: boolean finishComposingText()>
<android.util.Base64.Decoder: boolean process(byte[],int,int,boolean)>
<android.widget.Toolbar.ExpandedActionViewMenuPresenter: boolean flagActionItems()>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getUserBadgeForDensity(android.os.UserHandle,int)>
<android.opengl.GLLogWrapper.PointerInfo: void bindByteBuffer()>
<android.net.LocalSocketImpl: void sendUrgentData(int)>
<android.opengl.GLLogWrapper: void glLightxv(int,int,int[],int)>
<android.app.INotificationManager: void cancelNotificationWithTag(java.lang.String,java.lang.String,int,int)>
<android.widget.RemoteViews.SetOnClickPendingIntent: void writeToParcel(android.os.Parcel,int)>
<android.media.Utils: android.util.Range intRangeFor(double)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: java.security.AlgorithmParameters engineGetParameters()>
<android.widget.ActionMenuView.MenuBuilderCallback: boolean onMenuItemSelected(com.android.internal.view.menu.MenuBuilder,android.view.MenuItem)>
<android.print.PrintManager.PrintDocumentAdapterDelegate.MyLayoutResultCallback: void onLayoutFinished(android.print.PrintDocumentInfo,boolean)>
<android.widget.Editor.PinnedPopupWindow: int getTextOffset()>
<android.util.JsonScope: android.util.JsonScope valueOf(java.lang.String)>
<android.view.ViewRootImpl.TakenSurfaceHolder: void setType(int)>
<android.app.Instrumentation.InstrumentationThread: void <init>(android.app.Instrumentation,java.lang.String)>
<android.widget.ListPopupWindow.DropDownListView: void <init>(android.content.Context,boolean)>
<android.widget.CalendarViewMaterialDelegate: int getFirstDayOfWeek()>
<android.app.ApplicationPackageManager: java.util.List getInstalledApplications(int)>
<android.renderscript.ProgramStore.BlendDstFunc: android.renderscript.ProgramStore.BlendDstFunc[] values()>
<android.app.ActivityThread.ApplicationThread: void updateTimePrefs(boolean)>
<android.graphics.Canvas.CanvasFinalizer: void dispose()>
<android.view.IWindowManager: void closeSystemDialogs(java.lang.String)>
<android.net.DhcpStateMachine.PollingState: void exit()>
<android.widget.RemoteViewsAdapter.RemoteViewsFrameLayoutRefSet: void add(int,android.widget.RemoteViewsAdapter.RemoteViewsFrameLayout)>
<android.hardware.camera2.ICameraDeviceUser: int tearDown(int)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.NoPadding: boolean adjustConfigForEncryptingWithPrivateKey()>
<android.app.IWallpaperManager: void clearWallpaper(java.lang.String)>
<android.view.View.SendViewStateChangedAccessibilityEvent: void runOrPost(int)>
<android.opengl.GLLogWrapper: void glTexGenxv(int,int,int[],int)>
<android.opengl.GLErrorWrapper: void glDeleteBuffers(int,int[],int)>
<android.widget.SuggestionsAdapter: android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup)>
<android.content.res.XmlBlock.Parser: java.lang.Object getProperty(java.lang.String)>
<android.app.ApplicationPackageManager: void removeOnPermissionsChangeListener(android.content.pm.PackageManager.OnPermissionsChangedListener)>
<android.app.IWallpaperManager: void setWallpaperComponentChecked(android.content.ComponentName,java.lang.String)>
<android.view.ViewRootImpl.ConsumeBatchedInputRunnable: void run()>
<android.widget.RemoteViews.ViewPaddingAction: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>
<android.view.ViewRootImpl.InputStage: void finish(android.view.ViewRootImpl.QueuedInputEvent,boolean)>
<android.opengl.GLLogWrapper: void glTexEnvi(int,int,int)>
<android.app.ContextImpl: void setFilePermissionsFromMode(java.lang.String,int,int)>
<android.filterfw.core.GenerateProgramPort: boolean hasDefault()>
<android.widget.PopupWindow.PopupBackgroundView: void <init>(android.widget.PopupWindow,android.content.Context)>
<android.print.PrintManager.PrintDocumentAdapterDelegate: void kill(java.lang.String)>
<android.security.keymaster.KeymasterArgument: void writeValue(android.os.Parcel)>
<android.media.MediaDrm.EventHandler: void handleMessage(android.os.Message)>
<android.net.Network.NetworkBoundSocketFactory: java.net.Socket createSocket(java.lang.String,int)>
<android.widget.RemoteViews.ViewGroupAction: void <init>(android.widget.RemoteViews,android.os.Parcel,android.widget.RemoteViews.BitmapCache)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: byte[] engineUpdate(byte[],int,int)>
<android.content.pm.IPackageManager: void performBootDexOpt()>
<android.app.ActivityThread.CreateServiceData: java.lang.String toString()>
<android.content.res.XmlBlock.Parser: int getColumnNumber()>
<android.app.ApplicationPackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>
<android.app.LoadedApk.ReceiverDispatcher.Args: void <init>(android.app.LoadedApk.ReceiverDispatcher,android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int)>
<android.widget.Editor.EasyEditPopupWindow: void createPopupWindow()>
<android.widget.Spinner.DialogPopup: int getHorizontalOffset()>
<android.media.WebVttRenderingWidget.RegionLayout: void setCaptionStyle(android.view.accessibility.CaptioningManager.CaptionStyle,float)>
<android.opengl.GLLogWrapper: void glColorPointer(int,int,int,java.nio.Buffer)>
<android.widget.CalendarViewLegacyDelegate.ScrollStateRunnable: void run()>
<android.widget.GridLayout.Interval: void <init>(int,int)>
<android.widget.DatePickerCalendarDelegate: void onConfigurationChanged(android.content.res.Configuration)>
<android.media.MediaScanner.MyMediaScannerClient: android.media.MediaScanner.FileEntry beginFile(java.lang.String,java.lang.String,long,long,boolean,boolean)>
<android.hardware.input.IInputManager: void setTouchCalibrationForInputDevice(java.lang.String,int,android.hardware.input.TouchCalibration)>
<android.view.ViewRootImpl.AsyncInputStage: void forward(android.view.ViewRootImpl.QueuedInputEvent)>
<android.net.Uri.OpaqueUri: android.net.Uri.Builder buildUpon()>
<android.opengl.GLLogWrapper: void glMultiTexCoord4x(int,int,int,int,int)>
<android.location.ILocationManager: com.android.internal.location.ProviderProperties getProviderProperties(java.lang.String)>
<android.app.ApplicationPackageManager: android.content.pm.ProviderInfo resolveContentProviderAsUser(java.lang.String,int,int)>
<android.app.UiAutomation.IAccessibilityServiceClientImpl: void <init>(android.app.UiAutomation,android.os.Looper)>
<android.util.MapCollections.KeySet: boolean removeAll(java.util.Collection)>
<android.transition.TranslationAnimationCreator.TransitionPositionListener: void onAnimationEnd(android.animation.Animator)>
<android.view.AccessibilityIterators.CharacterTextSegmentIterator: android.view.AccessibilityIterators.CharacterTextSegmentIterator getInstance(java.util.Locale)>
<android.widget.RadioGroup.CheckedStateTracker: void onCheckedChanged(android.widget.CompoundButton,boolean)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.OAEPWithMGF1Padding: java.security.AlgorithmParameters engineGetParameters()>
<android.app.ContextImpl: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,int,android.os.Bundle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<android.widget.RemoteViews.TextViewDrawableAction: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>
<android.widget.DatePickerCalendarDelegate: void init(int,int,int,android.widget.DatePicker.OnDateChangedListener)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: boolean isEncrypting()>
<android.view.HardwareLayer: void setLayerPaint(android.graphics.Paint)>
<android.media.SubtitleTrack.CueList: java.lang.Iterable entriesBetween(long,long)>
<android.app.SharedPreferencesImpl.EditorImpl: android.content.SharedPreferences.Editor clear()>
<android.media.Tokenizer.TagTokenizer: void tokenize()>
<android.opengl.GLErrorWrapper: void glFramebufferRenderbufferOES(int,int,int,int)>
<android.renderscript.Font.Style: android.renderscript.Font.Style[] values()>
<android.net.wifi.SupplicantState: android.net.wifi.SupplicantState valueOf(java.lang.String)>
<android.nfc.tech.BasicTagTechnology: void close()>
<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask: void onCancelled(java.lang.Object)>
<android.opengl.GLLogWrapper: void glMatrixIndexPointerOES(int,int,int,int)>
<android.widget.CalendarViewLegacyDelegate: int getFirstDayOfWeek()>
<android.accounts.AccountManager.BaseFutureTask: void postRunnableToHandler(java.lang.Runnable)>
<android.security.keystore.AndroidKeyStoreRSASignatureSpi.PKCS1Padding: int getAdditionalEntropyAmountForSign()>
<android.location.LocalListenerHelper: boolean registerWithServer()>
<android.app.ApplicationPackageManager.ResourceName: int hashCode()>
<android.app.ActivityThread.ApplicationThread: void scheduleBackgroundVisibleBehindChanged(android.os.IBinder,boolean)>
<android.view.accessibility.AccessibilityCache: void add(android.view.accessibility.AccessibilityNodeInfo)>
<android.view.IWindowManager: void statusBarVisibilityChanged(int)>
<android.widget.ArrayAdapter.ArrayFilter: void publishResults(java.lang.CharSequence,android.widget.Filter.FilterResults)>
<android.app.ApplicationPackageManager: java.util.List getIntentFilterVerifications(java.lang.String)>
<android.hardware.ICameraService: int connectLegacy(android.hardware.ICameraClient,int,int,java.lang.String,int,android.hardware.camera2.utils.BinderHolder)>
<android.app.ActivityTransitionCoordinator: android.transition.Transition setTargets(android.transition.Transition,boolean)>
<android.media.ImageReader.ListenerHandler: void handleMessage(android.os.Message)>
<android.widget.CalendarViewMaterialDelegate: void setMaxDate(long)>
<android.opengl.GLErrorWrapper: void glGetMaterialfv(int,int,java.nio.FloatBuffer)>
<android.security.IKeystoreService: byte[] sign(java.lang.String,byte[])>
<android.net.LocalSocketImpl.SocketOutputStream: void write(byte[])>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi.GCM: void resetWhilePreservingInitState()>
<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask: void doWork()>
<android.net.Network.NetworkBoundSocketFactory: java.net.Socket createSocket(java.net.InetAddress,int)>
<android.animation.PropertyValuesHolder.IntPropertyValuesHolder: void <init>(android.util.Property,android.animation.Keyframes.IntKeyframes)>
<android.app.EnterTransitionCoordinator: void onTransitionsComplete()>
<android.widget.RemoteViews.SetEmptyView: java.lang.String getActionName()>
<android.security.IKeystoreService: int is_hardware_backed(java.lang.String)>
<android.opengl.GLLogWrapper: void glTexEnvfv(int,int,java.nio.FloatBuffer)>
<android.security.keystore.DelegatingX509Certificate: void verify(java.security.PublicKey,java.lang.String)>
<android.webkit.WebViewFactory.MissingWebViewPackageException: void <init>(java.lang.Exception)>
<android.security.IKeystoreService: int reset()>
<android.preference.ListPreference.SavedState: void <init>(android.os.Parcel)>
<android.widget.SimpleMonthView: int getMonthHeight()>
<android.graphics.Canvas.VertexMode: android.graphics.Canvas.VertexMode valueOf(java.lang.String)>
<android.opengl.GLErrorWrapper: void glDepthRangef(float,float)>
<android.app.ActivityThread.Profiler: void stopProfiling()>
<android.view.HardwareLayer: android.view.HardwareLayer adoptTextureLayer(android.view.HardwareRenderer,long)>
<android.app.ActivityTransitionCoordinator.GhostViewListeners: void <init>(android.view.View,android.view.View,android.view.ViewGroup)>
<android.accounts.AccountManager.AmsTask.Response: void onError(int,java.lang.String)>
<android.opengl.GLSurfaceView.LogWriter: void write(char[],int,int)>
<android.media.DecoderCapabilities.AudioDecoder: android.media.DecoderCapabilities.AudioDecoder valueOf(java.lang.String)>
<android.gesture.GestureOverlayView.FadeOutRunnable: void run()>
<android.media.AudioPortEventHandler: void finalize()>
<android.location.ILocationManager: boolean sendExtraCommand(java.lang.String,java.lang.String,android.os.Bundle)>
<android.os.MemoryFile.MemoryInputStream: int available()>
<android.util.XmlPullAttributes: float getAttributeFloatValue(java.lang.String,java.lang.String,float)>
<android.security.keymaster.KeymasterLongArgument: void writeValue(android.os.Parcel)>
<android.view.Surface.CompatibleCanvas: void setMatrix(android.graphics.Matrix)>
<android.print.PrintManager.PrintDocumentAdapterDelegate.MyWriteResultCallback: void onWriteFinished(android.print.PageRange[])>
<android.net.DhcpStateMachine.StoppedState: void enter()>
<android.widget.Scroller.ViscousFluidInterpolator: float getInterpolation(float)>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi.BufferAllOutputUntilDoFinalStreamer: long getProducedOutputSizeBytes()>
<android.widget.RemoteViews.TextViewDrawableColorFilterAction: void writeToParcel(android.os.Parcel,int)>
<android.database.CursorJoiner.Result: android.database.CursorJoiner.Result[] values()>
<android.widget.Gallery.FlingRunnable: void startUsingDistance(int)>
<android.view.ViewRootImpl.AccessibilityInteractionConnection: void findAccessibilityNodeInfosByViewId(long,java.lang.String,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)>
<android.mtp.MtpPropertyList: void setResult(int)>
<android.view.ViewDebug.ExportedProperty: android.view.ViewDebug.IntToString[] indexMapping()>
<android.media.MediaScanner.MyMediaScannerClient: void scanFile(java.lang.String,long,long,boolean,boolean)>
<android.media.MediaScanner.MyMediaScannerClient: android.net.Uri doScanFile(java.lang.String,java.lang.String,long,long,boolean,boolean,boolean)>
<android.view.ViewOverlay.OverlayViewGroup: void damageChild(android.view.View,android.graphics.Rect)>
<android.os.AsyncTask.AsyncTaskResult: void <init>(android.os.AsyncTask,java.lang.Object[])>
<android.graphics.Path.Direction: android.graphics.Path.Direction[] values()>
<android.widget.Editor.SuggestionsPopupWindow.SuggestionAdapter: long getItemId(int)>
<android.opengl.GLErrorWrapper: void glMaterialf(int,int,float)>
<android.preference.PreferenceScreen.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.util.MapCollections: java.util.Set getKeySet()>
<android.app.LoadedApk.WarningContextClassLoader: java.lang.Class loadClass(java.lang.String)>
<android.widget.Editor.HandleView: int getHorizontalGravity(boolean)>
<android.media.MediaCodec.BufferMap: void put(int,android.media.Image)>
<android.media.RemoteController.RcDisplay: void setAllMetadata(int,android.os.Bundle,android.graphics.Bitmap)>
<android.view.FocusFinder.SequentialFocusComparator: void setRoot(android.view.ViewGroup)>
<android.opengl.GLLogWrapper: void glColorMask(boolean,boolean,boolean,boolean)>
<android.graphics.Atlas.Type: android.graphics.Atlas.Type[] values()>
<android.app.FragmentState: void writeToParcel(android.os.Parcel,int)>
<android.graphics.drawable.RippleBackground.BackgroundProperty: void <init>(java.lang.String)>
<android.telecom.VideoCallImpl.VideoCallListenerBinder: void changeVideoQuality(int)>
<android.util.MapCollections.ValuesCollection: void clear()>
<android.view.ViewDebug.HierarchyTraceType: android.view.ViewDebug.HierarchyTraceType valueOf(java.lang.String)>
<android.widget.PopupWindow.PopupDecorView: boolean dispatchTouchEvent(android.view.MotionEvent)>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationLogo(java.lang.String)>
<android.webkit.WebSyncManager: java.lang.Object clone()>
<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache: void insert(int,android.widget.RemoteViews,long,java.util.ArrayList)>
<android.widget.Toast.TN: void hide()>
<android.opengl.GLErrorWrapper: void glGetBufferParameteriv(int,int,java.nio.IntBuffer)>
<android.content.pm.IPackageManager: void revokeRuntimePermission(java.lang.String,java.lang.String,int)>
<android.media.ClosedCaptionWidget.CCLayout: void onLayout(boolean,int,int,int,int)>
<android.os.StrictMode.AndroidCloseGuardReporter: void report(java.lang.String,java.lang.Throwable)>
<android.location.LocalListenerHelper: android.content.Context getContext()>
<android.widget.RemoteViews.SetDrawableParameters: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>
<android.widget.GridLayout.Alignment: int getGravityOffset(android.view.View,int)>
<android.util.MapCollections.EntrySet: java.lang.Object[] toArray()>
<android.content.EventLogTags: void writeContentQuerySample(java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,int)>
<android.widget.ShareActionProvider.ShareActivityChooserModelPolicy: boolean onChooseActivity(android.widget.ActivityChooserModel,android.content.Intent)>
<android.widget.GridLayout.Axis: void setOrderPreserved(boolean)>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi.GCM: android.security.keystore.KeyStoreCryptoOperationStreamer createMainDataStreamer(android.security.KeyStore,android.os.IBinder)>
<android.opengl.GLErrorWrapper: void glTexCoordPointer(int,int,int,int)>
<android.media.MediaSync.AudioBuffer: void <init>(java.nio.ByteBuffer,int,long)>
<android.hardware.usb.IUsbManager: boolean hasAccessoryPermission(android.hardware.usb.UsbAccessory)>
<android.os.IBatteryPropertiesRegistrar: void unregisterListener(android.os.IBatteryPropertiesListener)>
<android.location.GpsStatus.SatelliteIterator: void remove()>
<android.widget.SpellChecker.SpellParser: void parse(int,int)>
<android.filterfw.core.GLFrameTimer: android.filterfw.core.StopWatchMap get()>
<android.app.FragmentManagerImpl.AnimateOnHWLayerIfNeededListener: void onAnimationRepeat(android.animation.Animator)>
<android.net.LocalSocketImpl: void listen(int)>
<android.speech.SpeechRecognizer.InternalListener: void onResults(android.os.Bundle)>
<android.widget.SimpleMonthView.MonthViewTouchHelper: void onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent)>
<android.app.ActivityThread.ApplicationThread: void updateTimeZone()>
<android.app.SharedPreferencesImpl.EditorImpl: android.content.SharedPreferences.Editor putString(java.lang.String,java.lang.String)>
<android.content.res.XmlBlock.Parser: boolean isEmptyElementTag()>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.OAEPWithMGF1Padding: void initAlgorithmSpecificParameters(java.security.AlgorithmParameters)>
<android.app.ApplicationPackageManager: android.content.pm.KeySet getSigningKeySet(java.lang.String)>
<android.app.ContextImpl: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int,android.os.Bundle)>
<android.renderscript.Element.DataKind: android.renderscript.Element.DataKind[] values()>
<android.security.keystore.AndroidKeyStoreRSACipherSpi: boolean adjustConfigForEncryptingWithPrivateKey()>
<android.animation.PathKeyframes: android.animation.Keyframes.FloatKeyframes createXFloatKeyframes()>
<android.widget.CalendarViewLegacyDelegate.WeeksAdapter: java.lang.Object getItem(int)>
<android.security.keystore.AndroidKeyStoreRSASignatureSpi: void addAlgorithmSpecificParametersToBegin(android.security.keymaster.KeymasterArguments)>
<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGLSurface eglCreatePbufferSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int[])>
<android.hardware.camera2.ICameraDeviceUser: int getCameraInfo(android.hardware.camera2.impl.CameraMetadataNative)>
<android.widget.Editor.EasyEditPopupWindow: int getVerticalLocalPosition(int)>
<android.gesture.GestureLibraries.ResourceGestureLibrary: boolean isReadOnly()>
<android.content.pm.IPackageManager: java.lang.String[] getSystemSharedLibraryNames()>
<android.opengl.GLErrorWrapper: void glDrawTexiOES(int,int,int,int,int)>
<android.media.Tokenizer.TagTokenizer: android.media.Tokenizer.TokenizerPhase start()>
<android.view.ViewRootImpl.W: void windowFocusChanged(boolean,boolean)>
<android.app.ApplicationPackageManager: void deleteApplicationCacheFiles(java.lang.String,android.content.pm.IPackageDataObserver)>
<android.view.ViewRootImpl.TakenSurfaceHolder: void setFixedSize(int,int)>
<android.app.ActivityTransitionCoordinator: java.util.ArrayList getAcceptedNames()>
<android.text.MeasuredText: android.text.MeasuredText obtain()>
<android.widget.DatePicker.AbstractDatePickerDelegate: void setCurrentLocale(java.util.Locale)>
<android.widget.Toolbar.ExpandedActionViewMenuPresenter: void initForMenu(android.content.Context,com.android.internal.view.menu.MenuBuilder)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: void engineInit(int,java.security.Key,java.security.AlgorithmParameters,java.security.SecureRandom)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.PKCS1Padding: void finalize()>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.OAEPWithSHA384AndMGF1Padding: void finalize()>
<android.widget.FastScroller: void onSectionsChanged()>
<android.widget.RemoteViews.MutablePair: boolean equals(java.lang.Object)>
<android.app.ContextImpl: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String)>
<android.opengl.GLLogWrapper: java.lang.String glGetString(int)>
<android.content.res.ThemedResourceCache: java.lang.Object get(long,android.content.res.Resources.Theme)>
<android.view.View.MatchLabelForPredicate: boolean apply(android.view.View)>
<android.webkit.WebViewFactory.RelroFileCreator: void main(java.lang.String[])>
<android.opengl.GLLogWrapper: void glDrawElements(int,int,int,int)>
<android.view.ViewDebug.FlagToString: java.lang.String name()>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.PKCS1Padding: int getAdditionalEntropyAmountForFinish()>
<android.util.MapCollections.ArrayIterator: void remove()>
<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache: android.widget.RemoteViewsAdapter.RemoteViewsMetaData getTemporaryMetaData()>
<android.widget.AbsListView.InputConnectionWrapper: boolean deleteSurroundingText(int,int)>
<android.widget.ActivityChooserModel.PersistHistoryAsyncTask: java.lang.Void doInBackground(java.lang.Object[])>
<android.test.PerformanceTestCase: boolean isPerformanceOnly()>
<android.net.Uri.OpaqueUri: java.lang.String getEncodedAuthority()>
<android.content.pm.IPackageManager: void setApplicationEnabledSetting(java.lang.String,int,int,int,java.lang.String)>
<android.filterfw.core.GenerateFieldPort: boolean hasDefault()>
<android.widget.Editor.CursorAnchorInfoNotifier: void updatePosition(int,int,boolean,boolean)>
<android.hardware.camera2.ICameraDeviceUser: int createStream(android.hardware.camera2.params.OutputConfiguration)>
<android.widget.CalendarViewLegacyDelegate: boolean getShowWeekNumber()>
<android.app.ContextImpl.ApplicationContentResolver: boolean releaseUnstableProvider(android.content.IContentProvider)>
<android.opengl.GLLogWrapper: void glGetLightxv(int,int,java.nio.IntBuffer)>
<android.location.LocationManager.GpsStatusListenerTransport: void onGpsStarted()>
<android.widget.AbsListView.AbsPositionScroller: void start(int,int)>
<android.media.MediaScannerConnection.ClientProxy: void onScanCompleted(java.lang.String,android.net.Uri)>
<android.widget.AccessibilityIterators.LineTextSegmentIterator: int getLineEdgeIndex(int,int)>
<android.gesture.GestureLibraries.ResourceGestureLibrary: boolean load()>
<android.util.MapCollections: java.util.Set getEntrySet()>
<android.net.DhcpStateMachine.RunningState: void enter()>
<android.hardware.input.IInputManager: void cancelVibrate(int,android.os.IBinder)>
<android.test.InstrumentationTestSuite: void runTest(junit.framework.Test,junit.framework.TestResult)>
<android.widget.DayPickerView: int getDayTextAppearance()>
<android.hardware.usb.IUsbManager: android.os.ParcelFileDescriptor openAccessory(android.hardware.usb.UsbAccessory)>
<android.accounts.ChooseAccountActivity.AccountArrayAdapter: void <init>(android.content.Context,int,android.accounts.ChooseAccountActivity.AccountInfo[])>
<android.transition.ChangeTransform.Transforms: void <init>(android.view.View)>
<android.animation.Animator.AnimatorConstantState: android.animation.Animator newInstance()>
<android.widget.Spinner.DropDownAdapter: boolean areAllItemsEnabled()>
<android.widget.Spinner.DialogPopup: android.graphics.drawable.Drawable getBackground()>
<android.hardware.usb.IUsbManager: void setAccessoryPackage(android.hardware.usb.UsbAccessory,java.lang.String,int)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: int getKeymasterPurposeOverride()>
<android.widget.YearPickerView.YearAdapter: long getItemId(int)>
<android.widget.CalendarViewLegacyDelegate: void setDateTextAppearance(int)>
<android.security.IKeystoreService: int onUserAdded(int,int)>
<android.widget.DayPickerView: void onMeasure(int,int)>
<android.media.WebVttRenderingWidget.CueLayout: android.media.TextTrackCue getCue()>
<android.app.ApplicationPackageManager: boolean getApplicationHiddenSettingAsUser(java.lang.String,android.os.UserHandle)>
<android.view.MenuInflater.InflatedOnMenuItemClickListener: void <init>(java.lang.Object,java.lang.String)>
<android.widget.RadialTimePickerView.RadialPickerTouchHelper: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>
<android.view.ViewRootImpl.InvalidateOnAnimationRunnable: void run()>
<android.opengl.GLLogWrapper: void glRotatef(float,float,float,float)>
<android.view.ViewRootImpl.W: void onAnimationStopped()>
<android.app.ActivityThread.ApplicationThread: void notifyCleartextNetwork(byte[])>
<android.filterfw.core.GenerateFinalPort: boolean hasDefault()>
<android.widget.AbsListView.AdapterDataSetObserver: void onInvalidated()>
<android.widget.TextView.Drawables: void setErrorDrawable(android.graphics.drawable.Drawable,android.widget.TextView)>
<android.app.BackStackRecord: int commitAllowingStateLoss()>
<android.opengl.GLErrorWrapper: void glTexEnvxv(int,int,int[],int)>
<android.security.IKeystoreService: int addAuthToken(byte[])>
<android.widget.TextView.CharWrapper: java.lang.String toString()>
<android.util.MapCollections.KeySet: boolean equals(java.lang.Object)>
<android.app.ActivityThread.ApplicationThread: void setCoreSettings(android.os.Bundle)>
<android.view.AccessibilityInteractionController.AccessibilityNodePrefetcher: void prefetchAccessibilityNodeInfos(android.view.View,int,int,java.util.List)>
<android.view.Choreographer.FrameHandler: void <init>(android.view.Choreographer,android.os.Looper)>
<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache: android.widget.RemoteViews getRemoteViewsAt(int)>
<android.security.keystore.DelegatingX509Certificate: byte[] getSigAlgParams()>
<android.widget.ListPopupWindow.PopupDataSetObserver: void onChanged()>
<android.view.IWindowManager: void getInitialDisplaySize(int,android.graphics.Point)>
<android.preference.SeekBarVolumizer.Observer: void onChange(boolean)>
<android.hardware.SystemSensorManager.BaseEventQueue: int flush()>
<android.widget.Spinner.DialogPopup: void setAdapter(android.widget.ListAdapter)>
<android.content.res.XmlBlock.Parser: int getIdAttributeResourceValue(int)>
<android.opengl.GLErrorWrapper: void glNormal3x(int,int,int)>
<android.widget.AdapterView.SelectionNotifier: void run()>
<android.opengl.GLErrorWrapper: void glColor4f(float,float,float,float)>
<android.location.ILocationManager: boolean addGpsMeasurementsListener(android.location.IGpsMeasurementsListener,java.lang.String)>
<android.webkit.WebSyncManager: void syncFromRamToFlash()>
<android.view.ViewRootImpl.AsyncInputStage: void defer(android.view.ViewRootImpl.QueuedInputEvent)>
<android.widget.NumberPicker.PressedStateHelper: void buttonTapped(int)>
<android.opengl.GLSurfaceView.SimpleEGLConfigChooser: void <init>(android.opengl.GLSurfaceView,boolean)>
<android.opengl.GLErrorWrapper: void glClear(int)>
<android.graphics.drawable.RippleComponent: boolean isHardwareAnimating()>
<android.widget.Editor.SuggestionsPopupWindow: int getVerticalLocalPosition(int)>
<android.filterfw.GraphEnvironment.GraphHandle: android.filterfw.core.GraphRunner getSyncRunner(android.filterfw.core.FilterContext)>
<android.print.PrintManager.PrintDocumentAdapterDelegate: void onActivityPaused(android.app.Activity)>
<android.widget.ExpandableListConnector.MyDataSetObserver: void <init>(android.widget.ExpandableListConnector)>
<android.animation.Keyframe.IntKeyframe: android.animation.Keyframe clone()>
<android.widget.RadioGroup.PassThroughHierarchyChangeListener: void onChildViewAdded(android.view.View,android.view.View)>
<android.hardware.usb.IUsbManager: android.hardware.usb.UsbPort[] getPorts()>
<android.speech.tts.BlockingAudioTrack: int getChannelConfig(int)>
<android.media.WebVttRenderingWidget.RegionLayout: void prepForPrune()>
<android.media.ImageReader.SurfaceImage.SurfacePlane: java.nio.ByteBuffer getBuffer()>
<android.view.IWindowManager: void setAppOrientation(android.view.IApplicationToken,int)>
<android.app.Activity.HostCallbacks: void onStartActivityFromFragment(android.app.Fragment,android.content.Intent,int,android.os.Bundle)>
<android.transition.ChangeTransform.PathAnimatorMatrix: void setTranslation(android.graphics.PointF)>
<android.app.INotificationManager: boolean areNotificationsEnabledForPackage(java.lang.String,int)>
<android.location.ILocationManager: void clearTestProviderEnabled(java.lang.String,java.lang.String)>
<android.content.pm.IPackageManager: android.content.pm.ParceledListSlice queryContentProviders(java.lang.String,int,int)>
<android.graphics.drawable.RippleComponent: void exit()>
<android.widget.RemoteViews.TextViewDrawableAction: java.lang.String getActionName()>
<android.util.MapCollections.KeySet: java.util.Iterator iterator()>
<android.speech.tts.FileSynthesisCallback: boolean hasFinished()>
<android.app.ApplicationPackageManager: java.util.List queryContentProviders(java.lang.String,int,int)>
<android.opengl.GLSurfaceView.GLThread: void requestExitAndWait()>
<android.widget.Editor.InsertionHandleView: void onDetached()>
<android.view.ViewRootImpl.TakenSurfaceHolder: void setKeepScreenOn(boolean)>
<android.app.INotificationManager: android.app.NotificationManager.Policy getNotificationPolicy(java.lang.String)>
<android.hardware.SystemSensorManager.InjectEventQueue: void dispatchFlushCompleteEvent(int)>
<android.widget.HorizontalScrollView.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.app.ActivityThread.ApplicationThread: void profilerControl(boolean,android.app.ProfilerInfo,int)>
<android.opengl.GLLogWrapper: void glSampleCoveragex(int,boolean)>
<android.net.LocalSocketImpl.SocketInputStream: int read(byte[])>
<android.net.NetworkFactory.NetworkRequestInfo: java.lang.String toString()>
<android.app.ApplicationPackageManager: java.lang.String getPermissionControllerPackageName()>
<android.app.ContextImpl: android.os.Looper getMainLooper()>
<android.widget.Toolbar.ExpandedActionViewMenuPresenter: com.android.internal.view.menu.MenuView getMenuView(android.view.ViewGroup)>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getUserBadgedDrawableForDensity(android.graphics.drawable.Drawable,android.os.UserHandle,android.graphics.Rect,int)>
<android.app.ApplicationPackageManager.MoveCallbackDelegate: boolean handleMessage(android.os.Message)>
<android.widget.DatePicker.DatePickerSpinnerDelegate: boolean isEnabled()>
<android.content.res.XmlBlock.Parser: java.lang.String getClassAttribute()>
<android.widget.DayPickerPagerAdapter: void <init>(android.content.Context,int,int)>
<android.widget.ActivityChooserView.ActivityChooserViewAdapter: long getItemId(int)>
<android.location.ILocationManager: boolean addGpsNavigationMessageListener(android.location.IGpsNavigationMessageListener,java.lang.String)>
<android.content.pm.IPackageManager: void systemReady()>
<android.app.ContextImpl: void sendBroadcast(android.content.Intent,java.lang.String,android.os.Bundle)>
<android.widget.Filter.ResultsHandler: void handleMessage(android.os.Message)>
<android.security.IKeystoreService: int onUserRemoved(int)>
<android.widget.RadialTimePickerView.RadialPickerTouchHelper: boolean onPerformActionForVirtualView(int,int,android.os.Bundle)>
<android.hardware.location.IFusedLocationHardware: void flushBatchedLocations()>
<android.opengl.GLErrorWrapper: void glMaterialxv(int,int,int[],int)>
<android.app.ActivityTransitionCoordinator: void hideViews(java.util.ArrayList)>
<android.widget.AbsListView.WindowRunnnable: boolean sameWindow()>
<android.widget.StackView.StackSlider: float getYProgress()>
<android.transition.TransitionManager.MultiListener: boolean onPreDraw()>
<android.widget.Editor.SelectionEndHandleView: int getHotspotX(android.graphics.drawable.Drawable,boolean)>
<android.os.MemoryFile.MemoryInputStream: void reset()>
<android.database.ContentObserver.Transport: void onChange(boolean,android.net.Uri,int)>
<android.view.Choreographer.FrameDisplayEventReceiver: void onVsync(long,int,int)>
<android.animation.FloatKeyframeSet: void <init>(android.animation.Keyframe.FloatKeyframe[])>
<android.opengl.GLErrorWrapper: void glClipPlanef(int,java.nio.FloatBuffer)>
<android.widget.RemoteViews.ViewGroupAction: int mergeBehavior()>
<android.view.Choreographer.CallbackQueue: android.view.Choreographer.CallbackRecord extractDueCallbacksLocked(long)>
<android.view.MenuInflater.MenuState: android.view.MenuItem addItem()>
<android.app.ActivityView.ActivityContainerCallback: void onAllActivitiesComplete(android.os.IBinder)>
<android.preference.PreferenceActivity.HeaderAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.content.pm.IPackageManager: java.lang.String getInstallerPackageName(java.lang.String)>
<android.net.IpReachabilityMonitor.NetlinkSocketObserver: void run()>
<android.inputmethodservice.IInputMethodSessionWrapper: void executeMessage(android.os.Message)>
<android.graphics.Matrix.ScaleToFit: android.graphics.Matrix.ScaleToFit[] values()>
<android.os.CommonTimeUtils: java.lang.String transactGetString(int,java.lang.String)>
<android.view.ViewRootImpl.InvalidateOnAnimationRunnable: void addViewRect(android.view.View.AttachInfo.InvalidateInfo)>
<android.widget.YearPickerView.YearAdapter: int getViewTypeCount()>
<android.widget.Editor.SuggestionsPopupWindow.SuggestionSpanComparator: int compare(java.lang.Object,java.lang.Object)>
<android.location.GpsNavigationMessageListenerTransport: void unregisterFromServer()>
<android.media.SubtitleTrack.Run: void storeByEndTimeMs(android.util.LongSparseArray)>
<android.graphics.PorterDuff.Mode: android.graphics.PorterDuff.Mode[] values()>
<android.widget.RemoteViews.SetDrawableParameters: java.lang.String getActionName()>
<android.app.INotificationManager: android.content.pm.ParceledListSlice getAppActiveNotifications(java.lang.String,int)>
<android.security.IKeystoreService: int isEmpty(int)>
<android.security.IKeystoreService: android.security.keymaster.OperationResult begin(android.os.IBinder,java.lang.String,int,boolean,android.security.keymaster.KeymasterArguments,byte[])>
<android.os.CommonClock.TimelineChangedListener: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<android.app.ContextImpl: android.graphics.drawable.Drawable peekWallpaper()>
<android.widget.ActionMenuPresenter.OverflowPopup: void onDismiss()>
<android.widget.Editor.HandleView: int getHotspotX(android.graphics.drawable.Drawable,boolean)>
<android.widget.Editor.SelectionModifierCursorController: boolean isSelectionStartDragged()>
<android.content.pm.IPackageManager: void getPackageSizeInfo(java.lang.String,int,android.content.pm.IPackageStatsObserver)>
<android.net.Uri.PathSegments: java.lang.Object get(int)>
<android.animation.KeyframeSet: android.animation.KeyframeSet clone()>
<android.net.LocalSocketImpl: java.io.InputStream getInputStream()>
<android.widget.CalendarViewLegacyDelegate.WeeksAdapter.CalendarGestureListener: boolean onSingleTapUp(android.view.MotionEvent)>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getActivityLogo(android.content.Intent)>
<android.content.AsyncTaskLoader.LoadTask: void waitForLoader()>
<android.opengl.GLErrorWrapper: void glLogicOp(int)>
<android.speech.tts.PlaybackSynthesisCallback: int start(int,int,int)>
<android.view.IWindowManager: int getRotation()>
<android.security.keymaster.KeymasterLongArgument: void <init>(int,long)>
<android.preference.SeekBarVolumizer.Receiver: void setListening(boolean)>
<android.content.pm.IPackageManager: int getInstallLocation()>
<android.opengl.GLLogWrapper: void glBlendEquationSeparate(int,int)>
<android.security.IKeystoreService: int generate(java.lang.String,int,int,int,int,android.security.KeystoreArguments)>
<android.net.LocalSocketImpl: void accept(android.net.LocalSocketImpl)>
<android.content.pm.IPackageManager: java.util.List queryIntentActivityOptions(android.content.ComponentName,android.content.Intent[],java.lang.String[],android.content.Intent,java.lang.String,int,int)>
<android.widget.TextView.CharWrapper: int length()>
<android.os.MemoryFile.MemoryInputStream: long skip(long)>
<android.app.WallpaperManager.FastBitmapDrawable: int getMinimumWidth()>
<android.view.IWindowSession: void getDisplayFrame(android.view.IWindow,android.graphics.Rect)>
<android.webkit.WebSettings.LayoutAlgorithm: android.webkit.WebSettings.LayoutAlgorithm valueOf(java.lang.String)>
<android.content.ContentProvider.Transport: android.os.ICancellationSignal createCancellationSignal()>
<android.nfc.NfcActivityManager.NfcActivityState: java.lang.String toString()>
<android.os.UEventObserver.UEventThread: void removeObserver(android.os.UEventObserver)>
<android.inputmethodservice.IInputMethodWrapper: void startInput(com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo)>
<android.hardware.usb.IUsbManager: boolean isFunctionEnabled(java.lang.String)>
<android.animation.FloatKeyframeSet: android.animation.KeyframeSet clone()>
<android.graphics.drawable.RippleForeground: void onTargetRadiusChanged(float)>
<android.app.ActivityThread.ActivityClientRecord: java.lang.String toString()>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.OAEPWithSHA224AndMGF1Padding: void finalize()>
<android.media.MediaScanner.MediaBulkDeleter: void delete(long)>
<android.graphics.drawable.RippleForeground: android.graphics.drawable.RippleComponent.RenderNodeAnimatorSet createHardwareExit(android.graphics.Paint)>
<android.net.Uri.StringUri: boolean isRelative()>
<android.os.FileObserver.ObserverThread: void onEvent(int,int,java.lang.String)>
<android.widget.CalendarViewLegacyDelegate.WeekView: void onDraw(android.graphics.Canvas)>
<android.animation.Keyframe.ObjectKeyframe: java.lang.Object getValue()>
<android.speech.tts.AudioPlaybackHandler: void quit()>
<android.transition.TranslationAnimationCreator.TransitionPositionListener: void onTransitionCancel(android.transition.Transition)>
<android.location.ILocationManager: void removeGeofence(android.location.Geofence,android.app.PendingIntent,java.lang.String)>
<android.widget.StackView.StackSlider: void <init>(android.widget.StackView,android.widget.StackView.StackSlider)>
<android.hardware.LegacySensorManager: void unregisterListener(android.hardware.SensorListener,int)>
<android.opengl.GLErrorWrapper: void glDrawTexfvOES(java.nio.FloatBuffer)>
<android.opengl.GLLogWrapper: void glGetFloatv(int,float[],int)>
<android.content.pm.IPackageManager: void clearPackagePersistentPreferredActivities(java.lang.String,int)>
<android.util.Base64.Decoder: int maxOutputSize(int)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: void resetWhilePreservingInitState()>
<android.widget.GridLayout.Bounds: void reset()>
<android.widget.TimePickerClockDelegate: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.content.pm.IPackageManager: android.content.pm.KeySet getKeySetByAlias(java.lang.String,java.lang.String)>
<android.widget.TimePickerClockDelegate.SavedState: int getHour()>
<android.renderscript.RenderScript.MessageThread: void run()>
<android.app.ExitTransitionCoordinator: void startExit(int,android.content.Intent)>
<android.opengl.GLLogWrapper: void glTexParameteriv(int,int,int[],int)>
<android.app.ContextImpl: android.app.ContextImpl createActivityContext(android.app.ActivityThread,android.app.LoadedApk,int,android.content.res.Configuration)>
<android.widget.GridLayout.MutableInt: void reset()>
<android.content.ContentResolver.CursorWrapperInner: void finalize()>
<android.graphics.drawable.RippleComponent: void invalidateSelf()>
<android.app.ActivityThread.BindServiceData: java.lang.String toString()>
<android.app.LoadedApk.WarningContextClassLoader: java.net.URL getResource(java.lang.String)>
<android.opengl.GLErrorWrapper: void glColorPointer(int,int,int,java.nio.Buffer)>
<android.widget.GridLayout.Axis: int[] getTrailingMargins()>
<android.graphics.drawable.RippleBackground: boolean isVisible()>
<android.app.Instrumentation.EmptyRunnable: void run()>
<android.security.IKeystoreService: int abort(android.os.IBinder)>
<android.hardware.ICameraService: int getCameraInfo(int,android.hardware.CameraInfo)>
<android.net.Uri.StringUri: java.lang.String getAuthority()>
<android.opengl.GLLogWrapper: void glGetTexParameterxv(int,int,int[],int)>
<android.app.BackStackRecord: java.lang.String getName()>
<android.view.AccessibilityIterators.CharacterTextSegmentIterator: int[] preceding(int)>
<android.widget.RemoteViews.MemoryUsageCounter: void increment(int)>
<android.widget.RemoteViews.ReflectionAction: java.lang.String getActionName()>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: void addAlgorithmSpecificParametersToBegin(android.security.keymaster.KeymasterArguments)>
<android.app.ContextImpl: java.io.FileInputStream openFileInput(java.lang.String)>
<android.content.pm.IPackageManager: void addPreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,int)>
<android.net.Uri.HierarchicalUri: java.lang.String getEncodedAuthority()>
<android.app.IWallpaperManager: android.os.ParcelFileDescriptor getWallpaper(android.app.IWallpaperManagerCallback,android.os.Bundle)>
<android.view.ViewPropertyAnimator.AnimatorEventListener: void onAnimationStart(android.animation.Animator)>
<android.graphics.Region.Op: android.graphics.Region.Op[] values()>
<android.widget.Editor.SuggestionsPopupWindow: void <init>(android.widget.Editor)>
<android.app.ContextImpl: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle)>
<android.view.OrientationListener.OrientationEventListenerInternal: void onOrientationChanged(int)>
<android.widget.CalendarViewLegacyDelegate: void setShowWeekNumber(boolean)>
<android.animation.AnimatorInflater.PathDataEvaluator: android.util.PathParser.PathDataNode[] evaluate(float,android.util.PathParser.PathDataNode[],android.util.PathParser.PathDataNode[])>
<android.content.AsyncTaskLoader.LoadTask: void run()>
<android.opengl.GLErrorWrapper: void <init>(javax.microedition.khronos.opengles.GL,int)>
<android.app.ApplicationPackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int)>
<android.database.ContentObserver.Transport: void releaseContentObserver()>
<android.opengl.GLErrorWrapper: void glStencilMask(int)>
<android.net.Uri.StringUri: boolean isHierarchical()>
<android.print.PrintManager.PrintDocumentAdapterDelegate: void onActivityStopped(android.app.Activity)>
<android.widget.RemoteViews.SetPendingIntentTemplate: void writeToParcel(android.os.Parcel,int)>
<android.speech.tts.EventLogTags: void writeTtsV2SpeakSuccess(java.lang.String,int,int,int,java.lang.String,long,long,long)>
<android.app.ActivityView.ActivityContainerWrapper: void finalize()>
<android.media.SubtitleTrack.Run: void removeAtEndTimeMs()>
<android.gesture.GestureLibraries.FileGestureLibrary: boolean load()>
<android.view.MenuInflater.InflatedOnMenuItemClickListener: boolean onMenuItemClick(android.view.MenuItem)>
<android.app.Instrumentation.1MenuRunnable: void run()>
<android.hardware.usb.IUsbManager: android.os.ParcelFileDescriptor openDevice(java.lang.String)>
<android.transition.TransitionManager.MultiListener: void onViewDetachedFromWindow(android.view.View)>
<android.graphics.drawable.RippleForeground: void getBounds(android.graphics.Rect)>
<android.app.ApplicationPackageManager: android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int)>
<android.widget.DatePickerCalendarDelegate.SavedState: int getCurrentView()>
<android.app.ApplicationPackageManager: int getUidForSharedUser(java.lang.String)>
<android.media.MediaRecorder.EventHandler: void <init>(android.media.MediaRecorder,android.media.MediaRecorder,android.os.Looper)>
<android.webkit.WebSettings.PluginState: android.webkit.WebSettings.PluginState[] values()>
<android.database.CursorToBulkCursorAdaptor.ContentObserverProxy: boolean deliverSelfNotifications()>
<android.widget.Spinner.DropdownPopup: void show(int,int)>
<android.widget.CalendarView.AbstractCalendarViewDelegate: int getUnfocusedMonthDateColor()>
<android.telecom.InCallService.InCallServiceBinder: void setPostDial(java.lang.String,java.lang.String)>
<android.content.pm.IPackageManager: java.lang.String getNameForUid(int)>
<android.app.ActivityThread.ApplicationThread: void dumpActivity(java.io.FileDescriptor,android.os.IBinder,java.lang.String,java.lang.String[])>
<android.view.HardwareLayer: void updateSurfaceTexture()>
<android.widget.AbsListView.InputConnectionWrapper: boolean sendKeyEvent(android.view.KeyEvent)>
<android.view.HardwareLayer: void destroy()>
<android.content.pm.IPackageManager: int getPackageUid(java.lang.String,int)>
<android.opengl.GLLogWrapper: void glPopMatrix()>
<android.content.pm.IPackageManager: android.content.pm.ResolveInfo resolveIntent(android.content.Intent,java.lang.String,int,int)>
<android.opengl.GLSurfaceView.LogWriter: void flush()>
<android.speech.tts.FileSynthesisCallback: boolean hasStarted()>
<android.view.IWindowManager: void removeAppToken(android.os.IBinder)>
<android.bluetooth.BluetoothInputStream: int read(byte[],int,int)>
<android.app.INotificationManager: void registerListener(android.service.notification.INotificationListener,android.content.ComponentName,int)>
<android.animation.KeyframeSet: void <init>(android.animation.Keyframe[])>
<android.content.pm.IPackageManager: void freeStorageAndNotify(java.lang.String,long,android.content.pm.IPackageDataObserver)>
<android.opengl.GLLogWrapper: void glGenRenderbuffersOES(int,int[],int)>
<android.text.SpannableStringInternal: int getSpanFlags(java.lang.Object)>
<android.widget.ExpandableListConnector: boolean isGroupExpanded(int)>
<android.widget.CalendarViewLegacyDelegate.WeeksAdapter: boolean onTouch(android.view.View,android.view.MotionEvent)>
<android.view.IWindowManager: android.content.res.Configuration updateOrientationFromAppTokens(android.content.res.Configuration,android.os.IBinder)>
<android.animation.PropertyValuesHolder.IntPropertyValuesHolder: void <init>(android.util.Property,int[])>
<android.security.keystore.DelegatingX509Certificate: byte[] getEncoded()>
<android.app.ApplicationPackageManager: java.lang.String[] canonicalToCurrentPackageNames(java.lang.String[])>
<android.view.IWindowSession: android.os.IBinder prepareDrag(android.view.IWindow,int,int,int,android.view.Surface)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi: void setKeymasterPaddingOverride(int)>
<android.graphics.drawable.RippleComponent: void jumpValuesToExit()>
<android.widget.DatePickerCalendarDelegate: void updateDate(int,int,int)>
<android.opengl.GLLogWrapper: void glHint(int,int)>
<android.text.Layout.TabStops: float nextDefaultStop(float,int)>
<android.security.keystore.DelegatingX509Certificate: java.security.PublicKey getPublicKey()>
<android.preference.GenericInflater: android.preference.GenericInflater.Factory getFactory()>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: long getOperationHandle()>
<android.app.INotificationManager: void enqueueToast(java.lang.String,android.app.ITransientNotification,int)>
<android.graphics.drawable.RippleBackground: android.animation.Animator createSoftwareExit()>
<android.opengl.GLErrorWrapper: void glTexGenxv(int,int,java.nio.IntBuffer)>
<android.graphics.drawable.RippleComponent.RenderNodeAnimatorSet: void add(android.view.RenderNodeAnimator)>
<android.animation.AnimatorSet.DependencyListener: void onAnimationRepeat(android.animation.Animator)>
<android.inputmethodservice.IInputMethodWrapper: void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.app.ApplicationPackageManager: int getPermissionFlags(java.lang.String,java.lang.String,android.os.UserHandle)>
<android.view.View.MatchLabelForPredicate: boolean apply(java.lang.Object)>
<android.location.ILocationManager: java.util.List getAllProviders()>
<android.content.res.XmlBlock: int nativeGetName(long)>
<android.webkit.WebSettings.LayoutAlgorithm: android.webkit.WebSettings.LayoutAlgorithm[] values()>
<android.widget.RtlSpacingHelper: int getStart()>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi.BufferAllOutputUntilDoFinalStreamer: byte[] update(byte[],int,int)>
<android.content.res.XmlBlock.Parser: int getAttributeResourceValue(java.lang.String,java.lang.String,int)>
<android.widget.AbsListView.ListItemAccessibilityDelegate: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)>
<android.media.MediaScannerConnection.ClientProxy: void onMediaScannerConnected()>
<android.widget.AbsListView.InputConnectionWrapper: void <init>(android.widget.AbsListView,android.view.inputmethod.EditorInfo)>
<android.app.WallpaperManager.FastBitmapDrawable: int getMinimumHeight()>
<android.security.KeyChain.AliasResponse: void alias(java.lang.String)>
<android.widget.Editor.SuggestionsPopupWindow.SuggestionSpanComparator: int compare(android.text.style.SuggestionSpan,android.text.style.SuggestionSpan)>
<android.content.pm.IPackageManager: java.util.List queryIntentActivities(android.content.Intent,java.lang.String,int,int)>
<android.speech.SpeechRecognizer.InternalListener: void onPartialResults(android.os.Bundle)>
<android.print.PrintManager.PrintDocumentAdapterDelegate.MyLayoutResultCallback: void onLayoutCancelled()>
<android.util.MapCollections.ValuesCollection: boolean isEmpty()>
<android.view.ViewPropertyAnimatorRT: void cancelAll()>
<android.accounts.AbstractAccountAuthenticator.Transport: void addAccountFromCredentials(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,android.os.Bundle)>
<android.hardware.ICameraService: int supportsCameraApi(int,int)>
<android.view.IWindowSession: boolean performDrag(android.view.IWindow,android.os.IBinder,float,float,float,float,android.content.ClipData)>
<android.widget.DayPickerView: int getMostVisiblePosition()>
<android.view.IWindowSession: void setInsets(android.view.IWindow,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Region)>
<android.app.INotificationManager: void setNotificationPolicy(java.lang.String,android.app.NotificationManager.Policy)>
<android.content.pm.IPackageManager: void verifyIntentFilter(int,int,java.util.List)>
<android.media.ImageReader.SurfaceImage.SurfacePlane: int getPixelStride()>
<android.preference.DialogPreference.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.widget.ListPopupWindow.PopupDataSetObserver: void onInvalidated()>
<android.widget.DigitalClock.FormatChangeObserver: void <init>(android.widget.DigitalClock)>
<android.app.ApplicationPackageManager: java.lang.String[] getSystemSharedLibraryNames()>
<android.media.RemoteController.RcDisplay: void setMetadata(int,android.os.Bundle)>
<android.content.pm.IPackageManager: int checkUidSignatures(int,int)>
<android.security.keystore.DelegatingX509Certificate: java.util.Date getNotAfter()>
<android.security.keystore.KeyStoreCryptoOperationUtils: java.security.InvalidKeyException getInvalidKeyExceptionForInit(android.security.KeyStore,android.security.keystore.AndroidKeyStoreKey,int)>
<android.opengl.GLLogWrapper: void glOrthof(float,float,float,float,float,float)>
<android.text.SpannableStringInternal: boolean equals(java.lang.Object)>
<android.app.ApplicationPackageManager: android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName,int)>
<android.graphics.Path.FillType: android.graphics.Path.FillType[] values()>
<android.preference.VolumePreference.SavedState: void <init>(android.os.Parcel)>
<android.preference.PreferenceInflater: boolean onCreateCustomFromTag(org.xmlpull.v1.XmlPullParser,java.lang.Object,android.util.AttributeSet)>
<android.opengl.GLLogWrapper: void glGenRenderbuffersOES(int,java.nio.IntBuffer)>
<android.content.ContentProvider.Transport: android.database.Cursor query(java.lang.String,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,android.os.ICancellationSignal)>
<android.util.MapCollections: boolean removeAllHelper(java.util.Map,java.util.Collection)>
<android.security.keystore.AndroidKeyStoreRSASignatureSpi.PSSPadding: int getAdditionalEntropyAmountForSign()>
<android.location.GpsNavigationMessageListenerTransport.ListenerTransport: void onGpsNavigationMessageReceived(android.location.GpsNavigationMessageEvent)>
<android.opengl.GLLogWrapper: void glMaterialx(int,int,int)>
<android.graphics.Canvas.CanvasFinalizer: void finalize()>
<android.widget.SuggestionsAdapter.ChildViewCache: void <init>(android.view.View)>
<android.app.ContextImpl: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase.CursorFactory,android.database.DatabaseErrorHandler)>
<android.app.BackStackRecord: int getBreadCrumbTitleRes()>
<android.media.MediaRouter.Static: void onDisplayRemoved(int)>
<android.widget.TimePickerClockDelegate.SavedState: java.util.ArrayList getTypesTimes()>
<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGLContext eglGetCurrentContext()>
<android.speech.tts.PlaybackSynthesisCallback: int done()>
<android.view.ViewRootImpl.W: void dispatchDragEvent(android.view.DragEvent)>
<android.net.LocalSocketImpl: int available()>
<android.opengl.GLLogWrapper: void glCullFace(int)>
<android.hardware.LegacySensorManager: int getSensors()>
<android.animation.AnimatorInflater.PathDataEvaluator: void <init>(android.util.PathParser.PathDataNode[])>
<android.graphics.Paint.Cap: android.graphics.Paint.Cap[] values()>
<android.app.DownloadManager.CursorTranslator: void <init>(android.database.Cursor,android.net.Uri)>
<android.app.BackStackRecord: int getTransition()>
<android.opengl.GLLogWrapper: void glDrawArrays(int,int,int)>
<android.widget.ActivityChooserView.ActivityChooserViewAdapter: boolean getShowDefaultActivity()>
<android.hardware.SystemSensorManager.BaseEventQueue: boolean removeAllSensors()>
<android.view.ViewRootImpl.RunQueue.HandlerAction: boolean equals(java.lang.Object)>
<android.inputmethodservice.IInputMethodWrapper.InputMethodSessionCallbackWrapper: void sessionCreated(android.view.inputmethod.InputMethodSession)>
<android.app.IntentService.ServiceHandler: void <init>(android.app.IntentService,android.os.Looper)>
<android.graphics.drawable.RippleComponent: void onHotspotBoundsChanged()>
<android.animation.AnimatorInflater.PathDataEvaluator: java.lang.Object evaluate(float,java.lang.Object,java.lang.Object)>
<android.opengl.GLLogWrapper: void glGetClipPlanex(int,java.nio.IntBuffer)>
<android.opengl.GLLogWrapper: void glDrawTexsvOES(short[],int)>
<android.view.ViewRootImpl.W: void dispatchWindowShown()>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi: void initKey(int,java.security.Key)>
<android.renderscript.ProgramStore.BlendDstFunc: android.renderscript.ProgramStore.BlendDstFunc valueOf(java.lang.String)>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable loadUnbadgedItemIcon(android.content.pm.PackageItemInfo,android.content.pm.ApplicationInfo)>
<android.bluetooth.BluetoothOutputStream: void write(byte[],int,int)>
<android.app.ContextImpl: android.os.IBinder getActivityToken()>
<android.speech.tts.PlaybackQueueItem: void stop(int)>
<android.view.MenuInflater.MenuState: void readGroup(android.util.AttributeSet)>
<android.media.ImageWriter.WriterSurfaceImage.SurfacePlane: int getRowStride()>
<android.view.ViewPropertyAnimator.AnimatorEventListener: void onAnimationCancel(android.animation.Animator)>
<android.view.IWindowSession: void pokeDrawLock(android.os.IBinder)>
<android.accounts.AccountManager.BaseFutureTask.Response: void onResult(android.os.Bundle)>
<android.opengl.GLErrorWrapper: void glGetTexEnvxv(int,int,java.nio.IntBuffer)>
<android.speech.tts.AudioPlaybackHandler.MessageLoop: void run()>
<android.util.MapCollections.ValuesCollection: boolean add(java.lang.Object)>
<android.widget.DatePicker.DatePickerSpinnerDelegate: int getYear()>
<android.animation.StateListAnimator.StateListAnimatorConstantState: int getChangingConfigurations()>
<android.widget.ExpandableListConnector.PositionMetadata: boolean isExpanded()>
<android.widget.CursorAdapter.MyDataSetObserver: void onChanged()>
<android.widget.StackView.StackSlider: void setYProgress(float)>
<android.webkit.WebView.FindListenerDistributor: void onFindResultReceived(int,int,boolean)>
<android.widget.DayPickerPagerAdapter: int getItemPosition(java.lang.Object)>
<android.widget.YearPickerView: void onInitializeAccessibilityEventInternal(android.view.accessibility.AccessibilityEvent)>
<android.security.keymaster.KeymasterArgument: void writeToParcel(android.os.Parcel,int)>
<android.widget.YearPickerView.YearAdapter: int getYearForPosition(int)>
<android.telephony.TelephonyManager.MultiSimVariants: android.telephony.TelephonyManager.MultiSimVariants valueOf(java.lang.String)>
<android.widget.TextView.CharWrapper: int getTextRunCursor(int,int,int,int,int,android.graphics.Paint)>
<android.media.Utils: android.util.Range alignRange(android.util.Range,int)>
<android.opengl.GLLogWrapper: void glLightModelxv(int,java.nio.IntBuffer)>
<android.widget.TimePickerClockDelegate: boolean is24HourView()>
<android.opengl.GLErrorWrapper: void glLoadMatrixx(int[],int)>
<android.opengl.GLErrorWrapper: void glTexEnvfv(int,int,float[],int)>
<android.location.GpsMeasurementListenerTransport.ListenerTransport: void onGpsMeasurementsReceived(android.location.GpsMeasurementsEvent)>
<android.media.midi.MidiPortImpl: int getDataSize(byte[],int)>
<android.net.Uri.PathPart: android.net.Uri.PathPart readFrom(android.os.Parcel)>
<android.security.keystore.DelegatingX509Certificate: java.lang.String getSigAlgOID()>
<android.hardware.usb.IUsbManager: void grantAccessoryPermission(android.hardware.usb.UsbAccessory,int)>
<android.content.pm.IPackageManager: void setPermissionEnforced(java.lang.String,boolean)>
<android.opengl.GLErrorWrapper: void glTexEnvi(int,int,int)>
<android.filterfw.core.GenerateProgramPorts: android.filterfw.core.GenerateProgramPort[] value()>
<android.opengl.GLLogWrapper: void glDeleteTextures(int,int[],int)>
<android.view.IWindowManager: void setScreenCaptureDisabled(int,boolean)>
<android.os.MemoryFile.MemoryInputStream: void mark(int)>
<android.content.res.XmlBlock.Parser: boolean getFeature(java.lang.String)>
<android.widget.ActionMenuPresenter.PopupPresenterCallback: void onCloseMenu(com.android.internal.view.menu.MenuBuilder,boolean)>
<android.nfc.NfcActivityManager.NfcApplicationState: void unregister()>
<android.opengl.GLLogWrapper: void glDisable(int)>
<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGLSurface eglCreatePixmapSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object,int[])>
<android.text.Layout.Ellipsizer: void getChars(int,int,char[],int)>
<android.view.IWindowSession: boolean performHapticFeedback(android.view.IWindow,int,boolean)>
<android.widget.TimePickerClockDelegate.Node: android.widget.TimePickerClockDelegate.Node canReach(int)>
<android.content.pm.IPackageManager: void freeStorage(java.lang.String,long,android.content.IntentSender)>
<android.widget.Editor.SelectionStartHandleView: void updateSelection(int)>
<android.content.ContentProvider.Transport: android.content.res.AssetFileDescriptor openTypedAssetFile(java.lang.String,android.net.Uri,java.lang.String,android.os.Bundle,android.os.ICancellationSignal)>
<android.security.keystore.AndroidKeyStoreECDSASignatureSpi.NONE.TruncateToFieldSizeMessageStreamer: long getProducedOutputSizeBytes()>
<android.widget.GridLayout.Axis: android.widget.GridLayout.PackedMap getGroupBounds()>
<android.widget.RemoteViews.TextViewSizeAction: void writeToParcel(android.os.Parcel,int)>
<android.app.ApplicationPackageManager: boolean hasSystemFeature(java.lang.String)>
<android.widget.RemoteViews.Action: java.lang.String getUniqueKey()>
<android.app.LoaderManagerImpl.LoaderInfo: void <init>(android.app.LoaderManagerImpl,int,android.os.Bundle,android.app.LoaderManager.LoaderCallbacks)>
<android.view.AccessibilityInteractionController: void focusSearchClientThread(long,int,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)>
<android.widget.Editor.InsertionHandleView: int getCurrentCursorOffset()>
<android.opengl.GLSurfaceView.GLThread: void onWindowResize(int,int)>
<android.graphics.Canvas.CanvasFinalizer: void <init>(long)>
<android.view.HardwareLayer: boolean copyInto(android.graphics.Bitmap)>
<android.security.keystore.Utils: java.util.Date cloneIfNotNull(java.util.Date)>
<android.telecom.VideoCallbackServant: void <init>(com.android.internal.telecom.IVideoCallback)>
<android.widget.ActionMenuPresenter.ActionButtonSubmenu: void <init>(android.widget.ActionMenuPresenter,android.content.Context,com.android.internal.view.menu.SubMenuBuilder)>
<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi.ECB.PKCS7Padding: void finalize()>
<android.preference.TwoStatePreference.SavedState: void <init>(android.os.Parcelable)>
<android.view.ViewRootImpl.W: void resized(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,boolean,android.content.res.Configuration)>
<android.security.keystore.AndroidKeyStoreSignatureSpiBase: android.security.keystore.KeyStoreCryptoOperationStreamer createMainDataStreamer(android.security.KeyStore,android.os.IBinder)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: void engineInit(int,java.security.Key,java.security.SecureRandom)>
<android.location.GpsNavigationMessageListenerTransport: boolean registerWithServer()>
<android.graphics.drawable.RippleComponent.RenderNodeAnimatorSet: boolean isRunning()>
<android.content.AsyncTaskLoader.LoadTask: java.lang.Object doInBackground(java.lang.Object[])>
<android.widget.Toast.TN: void show()>
<android.opengl.EGLLogWrapper: boolean eglWaitNative(int,java.lang.Object)>
<android.widget.ProgressBar.AccessibilityEventSender: void run()>
<android.location.GpsMeasurementListenerTransport: void unregisterFromServer()>
<android.content.pm.IPackageManager: int checkUidPermission(java.lang.String,int)>
<android.net.Uri.OpaqueUri: java.lang.String getEncodedQuery()>
<android.content.IntentSender.FinishedDispatcher: void run()>
<android.opengl.GLErrorWrapper: void glPixelStorei(int,int)>
<android.opengl.GLErrorWrapper: void glGetTexEnviv(int,int,int[],int)>
<android.net.Uri.StringUri: java.lang.String getEncodedSchemeSpecificPart()>
<android.widget.FastScroller: void updateLayout()>
<android.accounts.AccountManager.Future2Task: void <init>(android.accounts.AccountManager,android.os.Handler,android.accounts.AccountManagerCallback)>
<android.widget.DatePickerCalendarDelegate: void setMinDate(long)>
<android.app.ExitTransitionCoordinator: android.transition.Transition getSharedElementTransition()>
<android.preference.PreferenceInflater: android.preference.PreferenceGroup onMergeRoots(android.preference.PreferenceGroup,boolean,android.preference.PreferenceGroup)>
<android.app.ContextImpl.ApplicationContentResolver: int resolveUserIdFromAuthority(java.lang.String)>
<android.graphics.Bitmap.CompressFormat: android.graphics.Bitmap.CompressFormat valueOf(java.lang.String)>
<android.opengl.GLLogWrapper: void glFogfv(int,java.nio.FloatBuffer)>
<android.view.IWindowSession: int addWithoutInputChannel(android.view.IWindow,int,android.view.WindowManager.LayoutParams,int,android.graphics.Rect,android.graphics.Rect)>
<android.widget.Editor.PinnedPopupWindow: void initContentView()>
<android.widget.ActivityChooserView.Callbacks: void onDismiss()>
<android.widget.DatePickerCalendarDelegate: boolean getSpinnersShown()>
<android.print.PrintManager.PrintDocumentAdapterDelegate: void setObserver(android.print.IPrintDocumentAdapterObserver)>
<android.widget.SimpleMonthView: void onMeasure(int,int)>
<android.opengl.GLLogWrapper: void glGetPointerv(int,java.nio.Buffer[])>
<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache: android.widget.RemoteViewsAdapter.RemoteViewsMetaData getMetaData()>
<android.database.ContentObserver.NotificationRunnable: void <init>(android.database.ContentObserver,boolean,android.net.Uri,int)>
<android.net.Uri.OpaqueUri: boolean isHierarchical()>
<android.app.SystemServiceRegistry.CachedServiceFetcher: java.lang.Object getService(android.app.ContextImpl)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: void setKeymasterPurposeOverride(int)>
<android.media.MediaPlayer.TimeProvider: long getCurrentTimeUs(boolean,boolean)>
<android.opengl.GLErrorWrapper: void glTexEnvx(int,int,int)>
<com.android.server.ResettableTimeout: void go(long)>
<android.widget.DatePickerCalendarDelegate: void onLocaleChanged(java.util.Locale)>
<android.widget.RemoteViewsService.RemoteViewsFactoryAdapter: int getCount()>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: void engineSetMode(java.lang.String)>
<android.widget.ActionMenuPresenter.OverflowPopup: void <init>(android.widget.ActionMenuPresenter,android.content.Context,com.android.internal.view.menu.MenuBuilder,android.view.View,boolean)>
<android.opengl.GLLogWrapper: void glFogf(int,float)>
<android.opengl.EGLLogWrapper: boolean eglReleaseThread()>
<android.transition.ChangeBounds.ViewBounds: void setTopLeft(android.graphics.PointF)>
<android.app.ApplicationPackageManager: void removePackageFromPreferred(java.lang.String)>
<android.graphics.BlurMaskFilter.Blur: android.graphics.BlurMaskFilter.Blur[] values()>
<android.util.MapCollections.MapIterator: java.lang.Object setValue(java.lang.Object)>
<android.text.HtmlToSpannedConverter.Href: void <init>(java.lang.String)>
<android.app.ApplicationPackageManager.MoveCallbackDelegate: void <init>(android.content.pm.PackageManager.MoveCallback,android.os.Looper)>
<android.hardware.camera2.ICameraDeviceUser: int beginConfigure()>
<android.content.res.XmlBlock.Parser: int getAttributeUnsignedIntValue(int,int)>
<android.widget.Toolbar.SavedState: void <init>(android.os.Parcel)>
<android.app.ActivityThread.ApplicationThread: void scheduleSleeping(android.os.IBinder,boolean)>
<android.app.ContextImpl: int checkPermission(java.lang.String,int,int,android.os.IBinder)>
<android.text.SpannableStringInternal: int getSpanStart(java.lang.Object)>
<android.net.Uri.PathPart: android.net.Uri.PathPart makeAbsolute(android.net.Uri.PathPart)>
<android.opengl.EGLLogWrapper: java.lang.String getErrorString(int)>
<android.app.ApplicationPackageManager: java.util.List getAllPermissionGroups(int)>
<android.view.IWindowManager: void prepareAppTransition(int,boolean)>
<android.opengl.GLErrorWrapper: void glBindBuffer(int,int)>
<android.hardware.usb.IUsbManager: void clearDefaults(java.lang.String,int)>
<android.app.ActivityThread.ApplicationThread: void scheduleUnbindService(android.os.IBinder,android.content.Intent)>
<android.app.WallpaperManager.FastBitmapDrawable: int getIntrinsicWidth()>
<android.preference.GenericInflater.FactoryMerger: java.lang.Object onCreateItem(java.lang.String,android.content.Context,android.util.AttributeSet)>
<android.text.PackedObjectVector: void insertAt(int,java.lang.Object[])>
<android.util.MapCollections.ValuesCollection: boolean removeAll(java.util.Collection)>
<android.widget.TextView.CharWrapper: char charAt(int)>
<android.app.ApplicationPackageManager.OnPermissionsChangeListenerDelegate: boolean handleMessage(android.os.Message)>
<android.view.IWindowManager: boolean isKeyguardLocked()>
<android.print.PrintManager.PrintJobStateChangeListenerWrapper: void destroy()>
<android.opengl.GLLogWrapper: void glLightModelx(int,int)>
<android.app.ContextImpl: void startActivityAsUser(android.content.Intent,android.os.UserHandle)>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi.GCM: int getAdditionalEntropyAmountForFinish()>
<android.content.ContentProvider.Transport: android.os.ParcelFileDescriptor openFile(java.lang.String,android.net.Uri,java.lang.String,android.os.ICancellationSignal,android.os.IBinder)>
<android.text.DynamicLayout.ChangeWatcher: void afterTextChanged(android.text.Editable)>
<android.opengl.GLErrorWrapper: void glTexEnvf(int,int,float)>
<android.location.ILocationManager: void setTestProviderEnabled(java.lang.String,boolean,java.lang.String)>
<android.app.ExitTransitionCoordinator: void resetViews()>
<android.widget.CalendarViewLegacyDelegate.WeeksAdapter: void setFocusMonth(int)>
<android.widget.YearPickerView.YearAdapter: void <init>(android.content.Context)>
<android.app.ActivityThread.ApplicationThread: void schedulePauseActivity(android.os.IBinder,boolean,boolean,int,boolean)>
<android.media.ImageReader.SurfaceImage: java.lang.Object getOwner()>
<android.graphics.drawable.RippleComponent: boolean drawHardware(android.view.DisplayListCanvas)>
<android.widget.DatePickerCalendarDelegate.SavedState: long getMaxDate()>
<android.speech.tts.AbstractEventLogger: void onEngineComplete()>
<android.opengl.GLLogWrapper: void glTexParameteri(int,int,int)>
<android.widget.ActionMenuPresenter.OverflowMenuButton: boolean setFrame(int,int,int,int)>
<android.app.EnterTransitionCoordinator: void onReceiveResult(int,android.os.Bundle)>
<android.renderscript.Font.Style: android.renderscript.Font.Style valueOf(java.lang.String)>
<android.widget.Editor.CursorController: void hide()>
<android.view.ViewRootImpl.WindowInputEventReceiver: void dispose()>
<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache: void <init>(int)>
<android.widget.DayPickerView: void setMinDate(long)>
<android.widget.TimePickerSpinnerDelegate: void setCurrentLocale(java.util.Locale)>
<android.widget.DatePickerCalendarDelegate: void setFirstDayOfWeek(int)>
<android.content.ContentProvider.Transport: android.net.Uri insert(java.lang.String,android.net.Uri,android.content.ContentValues)>
<android.opengl.GLSurfaceView.EglHelper: void start()>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: void initAlgorithmSpecificParameters(java.security.AlgorithmParameters)>
<android.location.ILocationManager: void removeTestProvider(java.lang.String,java.lang.String)>
<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache: void reset()>
<android.animation.FloatKeyframeSet: void invalidateCache()>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationLogo(android.content.pm.ApplicationInfo)>
<android.widget.AutoCompleteTextView.MyWatcher: void afterTextChanged(android.text.Editable)>
<android.widget.DoubleDigitManager: void reportDigit(int)>
<android.animation.PathKeyframes: android.animation.Keyframes.FloatKeyframes createYFloatKeyframes()>
<android.widget.Editor.SelectionModifierCursorController: void resetTouchOffsets()>
<android.widget.RelativeLayout.DependencyGraph: void getSortedViews(android.view.View[],int[])>
<android.app.BackStackRecord: android.app.FragmentTransaction setCustomAnimations(int,int,int,int)>
<android.widget.DatePicker.DatePickerSpinnerDelegate: void onRestoreInstanceState(android.os.Parcelable)>
<android.widget.GridLayout.Bounds: void include(android.widget.GridLayout,android.view.View,android.widget.GridLayout.Spec,android.widget.GridLayout.Axis,int)>
<android.widget.Editor.HandleView: void onDraw(android.graphics.Canvas)>
<android.app.ApplicationPackageManager: java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo)>
<android.renderscript.RenderScript.ContextType: android.renderscript.RenderScript.ContextType[] values()>
<android.view.RenderNodeAnimator.DelayedAnimationHelper: void addDelayedAnimation(android.view.RenderNodeAnimator)>
<android.opengl.GLLogWrapper: int glCheckFramebufferStatusOES(int)>
<android.widget.ExpandableListPosition: android.widget.ExpandableListPosition obtainGroupPosition(int)>
<android.speech.tts.BlockingAudioTrack: int write(byte[])>
<android.util.MapCollections.KeySet: boolean retainAll(java.util.Collection)>
<android.app.ActivityThread.ApplicationThread: void requestAssistContextExtras(android.os.IBinder,android.os.IBinder,int)>
<android.print.PrinterDiscoverySession.SessionHandler: void handleMessage(android.os.Message)>
<com.android.internal.annotations.VisibleForTesting.Visibility: com.android.internal.annotations.VisibleForTesting.Visibility[] values()>
<android.app.BackStackRecord: android.app.FragmentTransaction remove(android.app.Fragment)>
<android.webkit.WebSyncManager: void run()>
<android.view.FrameInfo: void addFlags(long)>
<android.mtp.MtpPropertyList: void append(int,int,int,long)>
<android.opengl.GLLogWrapper: void glDrawTexiOES(int,int,int,int,int)>
<android.view.InputEventConsistencyVerifier.KeyState: android.view.InputEventConsistencyVerifier.KeyState obtain(int,int,int)>
<android.app.ApplicationPackageManager: android.content.res.XmlResourceParser getXml(java.lang.String,int,android.content.pm.ApplicationInfo)>
<android.opengl.GLErrorWrapper: void glDepthRangex(int,int)>
<android.content.res.XmlBlock.Parser: int getDepth()>
<android.widget.CalendarViewMaterialDelegate: int getDateTextAppearance()>
<android.text.TextDirectionHeuristics.TextDirectionHeuristicImpl: boolean isRtl(char[],int,int)>
<android.widget.TimePickerClockDelegate.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.preference.MultiCheckPreference.SavedState: void <init>(android.os.Parcelable)>
<android.util.Base64.Encoder: boolean process(byte[],int,int,boolean)>
<android.opengl.GLLogWrapper: void glScalex(int,int,int)>
<android.database.CursorJoiner.Result: android.database.CursorJoiner.Result valueOf(java.lang.String)>
<android.widget.Toast.TN: void handleHide()>
<android.content.res.XmlBlock: void finalize()>
<android.app.ApplicationPackageManager: void revokeRuntimePermission(java.lang.String,java.lang.String,android.os.UserHandle)>
<android.widget.Editor.SuggestionsPopupWindow: int getTextOffset()>
<android.content.pm.IPackageManager: android.content.pm.ParceledListSlice getInstalledPackages(int,int)>
<android.util.JsonToken: android.util.JsonToken valueOf(java.lang.String)>
<android.hardware.input.IInputManager: void removeKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,java.lang.String)>
<android.text.AlteredCharSequence.AlteredSpanned: int getSpanStart(java.lang.Object)>
<android.app.BackStackRecord: android.app.FragmentTransaction hide(android.app.Fragment)>
<android.speech.tts.FileSynthesisCallback: void error()>
<android.widget.ExpandableListConnector.GroupMetadata: int compareTo(android.widget.ExpandableListConnector.GroupMetadata)>
<android.widget.ExpandableListConnector: long getItemId(int)>
<android.net.Uri.Part: android.net.Uri.Part nonNull(android.net.Uri.Part)>
<android.content.pm.IPackageManager: java.util.List getPreferredPackages(int)>
<android.os.AsyncTask.SerialExecutor: void scheduleNext()>
<android.graphics.drawable.RippleForeground: void jumpValuesToExit()>
<android.provider.Settings.NameValueCache: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,int)>
<android.net.wifi.SupplicantState: boolean isHandshakeState(android.net.wifi.SupplicantState)>
<android.graphics.drawable.RippleForeground: boolean hasFinishedExit()>
<android.widget.CalendarView.AbstractCalendarViewDelegate: void setSelectedDateVerticalBar(android.graphics.drawable.Drawable)>
<android.opengl.GLErrorWrapper: void glPointSizex(int)>
<android.widget.RemoteViewsService.RemoteViewsFactoryAdapter: boolean hasStableIds()>
<android.widget.Editor.TextRenderNode: void <init>(java.lang.String)>
<android.opengl.GLErrorWrapper: void glGetFixedv(int,java.nio.IntBuffer)>
<android.view.ViewRootImpl.ViewPostImeInputStage: void onDeliverToNext(android.view.ViewRootImpl.QueuedInputEvent)>
<android.media.midi.MidiPortImpl: int packFlush(byte[])>
<android.widget.RtlSpacingHelper: void setAbsolute(int,int)>
<android.app.ContextImpl: android.content.Context getOuterContext()>
<android.hardware.location.IFusedLocationHardware: void requestBatchOfLocations(int)>
<android.widget.AbsListView.RecycleBin: boolean shouldRecycleViewType(int)>
<android.view.ViewDebug.RecyclerTraceType: android.view.ViewDebug.RecyclerTraceType[] values()>
<android.animation.KeyframeSet: android.animation.Keyframes clone()>
<android.graphics.Paint.Style: android.graphics.Paint.Style[] values()>
<android.content.pm.IPackageManager: void installPackage(java.lang.String,android.content.pm.IPackageInstallObserver2,int,java.lang.String,android.content.pm.VerificationParams,java.lang.String)>
<android.widget.ActionMenuPresenter.OverflowMenuButton: void onInitializeAccessibilityNodeInfoInternal(android.view.accessibility.AccessibilityNodeInfo)>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi.GCM: int getAdditionalEntropyAmountForBegin()>
<android.opengl.GLErrorWrapper: void glColor4x(int,int,int,int)>
<android.security.keystore.DelegatingX509Certificate: void verify(java.security.PublicKey)>
<android.widget.RemoteViewsAdapter.RemoteViewsMetaData: void setLoadingViewTemplates(android.widget.RemoteViews,android.widget.RemoteViews)>
<android.preference.MultiSelectListPreference.SavedState: void <init>(android.os.Parcel)>
<android.widget.CalendarViewLegacyDelegate: int getUnfocusedMonthDateColor()>
<android.widget.DayPickerView: void setOnDaySelectedListener(android.widget.DayPickerView.OnDaySelectedListener)>
<android.widget.DayPickerView: int getDayOfWeekTextAppearance()>
<android.telecom.ConnectionServiceAdapterServant: com.android.internal.telecom.IConnectionServiceAdapter getStub()>
<android.bluetooth.le.BluetoothLeUtils: java.lang.String toString(java.util.Map)>
<android.net.Uri.OpaqueUri: int getPort()>
<android.opengl.EGLLogWrapper: boolean eglDestroyContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext)>
<android.net.LocalSocketImpl: java.lang.Object getOption(int)>
<android.content.res.StringBlock.Height: void <init>(int)>
<android.widget.RemoteViews.ViewPaddingAction: java.lang.String getActionName()>
<android.app.Activity.HostCallbacks: void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.widget.SuggestionsAdapter: void onClick(android.view.View)>
<android.net.Uri.HierarchicalUri: java.lang.String getEncodedSchemeSpecificPart()>
<android.widget.Editor.SuggestionsPopupWindow.CustomPopupWindow: void <init>(android.widget.Editor.SuggestionsPopupWindow,android.content.Context,int)>
<android.widget.Editor.PinnedPopupWindow: int clipVertically(int)>
<android.util.MapCollections.KeySet: boolean isEmpty()>
<android.net.wifi.SupplicantState: int describeContents()>
<android.preference.VolumePreference.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.content.pm.IPackageManager: void forceDexOpt(java.lang.String)>
<android.app.ContextImpl: int checkUriPermission(android.net.Uri,int,int,int)>
<android.app.backup.FileBackupHelperBase: void finalize()>
<android.widget.AbsListView.InputConnectionWrapper: boolean commitCompletion(android.view.inputmethod.CompletionInfo)>
<android.graphics.Canvas.VertexMode: android.graphics.Canvas.VertexMode[] values()>
<android.hardware.usb.IUsbManager: boolean hasDefaults(java.lang.String,int)>
<android.graphics.drawable.RippleComponent: void onTargetRadiusChanged(float)>
<android.webkit.LegacyErrorStrings: java.lang.String getString(int,android.content.Context)>
<android.util.MapCollections.EntrySet: boolean equals(java.lang.Object)>
<android.speech.tts.AbstractEventLogger: void logFailure(int)>
<android.widget.TextView.CharWrapper: void <init>(char[],int,int)>
<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGLSurface eglCreateWindowSurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object,int[])>
<android.widget.Spinner.DropDownAdapter: java.lang.Object getItem(int)>
<android.app.ActivityTransitionCoordinator: android.view.Window getWindow()>
<android.preference.SeekBarVolumizer.Receiver: void onReceive(android.content.Context,android.content.Intent)>
<android.view.AccessibilityIterators.ParagraphTextSegmentIterator: android.view.AccessibilityIterators.ParagraphTextSegmentIterator getInstance()>
<android.view.ViewOverlay.OverlayViewGroup: void add(android.graphics.drawable.Drawable)>
<android.widget.Editor.InsertionPointCursorController: void show()>
<android.animation.KeyframeSet: android.animation.KeyframeSet ofInt(int[])>
<android.appwidget.AppWidgetHost.Callbacks: void updateAppWidget(int,android.widget.RemoteViews)>
<android.widget.DayPickerView: void setFirstDayOfWeek(int)>
<android.app.ApplicationPackageManager: android.content.ComponentName getHomeActivities(java.util.List)>
<android.widget.CalendarViewLegacyDelegate: void setDate(long,boolean,boolean)>
<android.widget.Editor.EasyEditPopupWindow: int getTextOffset()>
<android.view.MenuInflater.MenuState: android.view.SubMenu addSubMenuItem()>
<android.speech.RecognitionService.StartListeningArgs: void <init>(android.speech.RecognitionService,android.content.Intent,android.speech.IRecognitionListener,int)>
<android.widget.RemoteViews.ViewGroupAction: java.lang.String getActionName()>
<android.animation.PathKeyframes.SimpleKeyframes: java.util.ArrayList getKeyframes()>
<android.gesture.GestureLibraries.ResourceGestureLibrary: boolean save()>
<android.util.FastImmutableArraySet.FastIterator: java.lang.Object next()>
<android.security.keystore.AndroidKeyStoreSignatureSpiBase: boolean engineVerify(byte[],int,int)>
<android.widget.TextView.ChangeWatcher: void beforeTextChanged(java.lang.CharSequence,int,int,int)>
<android.content.pm.IPackageManager: java.lang.String getPermissionControllerPackageName()>
<android.util.Base64.Encoder: int maxOutputSize(int)>
<android.app.LauncherActivity.ActivityAdapter: android.content.Intent intentForPosition(int)>
<android.widget.RemoteViewsAdapter.RemoteViewsFrameLayout: void <init>(android.content.Context)>
<android.content.ContentProvider.Transport: android.content.ContentProviderResult[] applyBatch(java.lang.String,java.util.ArrayList)>
<android.widget.CalendarView.AbstractCalendarViewDelegate: void setSelectedDateVerticalBar(int)>
<android.widget.TimePickerClockDelegate.ClickActionDelegate: void <init>(android.content.Context,int)>
<android.hardware.usb.IUsbManager: void clearUsbDebuggingKeys()>
<android.app.ApplicationPackageManager: void freeStorageAndNotify(java.lang.String,long,android.content.pm.IPackageDataObserver)>
<android.widget.DatePicker.DatePickerSpinnerDelegate: void init(int,int,int,android.widget.DatePicker.OnDateChangedListener)>
<android.inputmethodservice.IInputMethodSessionWrapper: void updateExtractedText(int,android.view.inputmethod.ExtractedText)>
<android.preference.MultiCheckPreference.SavedState: void <init>(android.os.Parcel)>
<android.nfc.tech.BasicTagTechnology: android.nfc.Tag getTag()>
<android.content.EventLogTags: void writeBinderSample(java.lang.String,int,int,java.lang.String,int)>
<android.opengl.GLErrorWrapper: void glMatrixMode(int)>
<android.hardware.ICameraService: int setTorchMode(java.lang.String,boolean,android.os.IBinder)>
<android.widget.AccessibilityIterators.PageTextSegmentIterator: int[] preceding(int)>
<android.app.ApplicationPackageManager: boolean addPermissionAsync(android.content.pm.PermissionInfo)>
<android.app.SharedPreferencesImpl.EditorImpl: android.content.SharedPreferences.Editor putStringSet(java.lang.String,java.util.Set)>
<android.opengl.GLLogWrapper: void glBindTexture(int,int)>
<android.app.ContextImpl.ApplicationContentResolver: android.content.IContentProvider acquireUnstableProvider(android.content.Context,java.lang.String)>
<android.view.ViewGroup.ViewLocationHolder: android.view.ViewGroup.ViewLocationHolder obtain(android.view.ViewGroup,android.view.View)>
<android.widget.DatePickerCalendarDelegate.SavedState: int getSelectedYear()>
<android.widget.SuggestionsAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>
<android.app.ActivityTransitionCoordinator: void scheduleSetSharedElementEnd(java.util.ArrayList)>
<android.widget.RemoteViews.SetDrawableParameters: void writeToParcel(android.os.Parcel,int)>
<android.preference.SeekBarVolumizer.H: void handleMessage(android.os.Message)>
<android.widget.RemoteViews.ViewGroupAction: void updateMemoryUsageEstimate(android.widget.RemoteViews.MemoryUsageCounter)>
<android.app.Instrumentation.SyncRunnable: void run()>
<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi.ECB: void <init>(int)>
<android.nfc.tech.BasicTagTechnology: boolean isConnected()>
<android.telecom.InCallService.InCallServiceBinder: void setPostDialWait(java.lang.String,java.lang.String)>
<android.widget.GridLayout.Assoc: android.widget.GridLayout.PackedMap pack()>
<android.animation.PropertyValuesHolder.MultiFloatValuesHolder: void <init>(java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,java.lang.Object[])>
<android.content.AsyncTaskLoader.LoadTask: void onCancelled(java.lang.Object)>
<android.animation.PropertyValuesHolder.MultiIntValuesHolder: void <init>(java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,android.animation.Keyframes)>
<android.telecom.VideoCallbackServant: com.android.internal.telecom.IVideoCallback getStub()>
<android.test.InstrumentationTestCase: void sendKeys(int[])>
<android.text.TextDirectionHeuristics.TextDirectionHeuristicImpl: boolean isRtl(java.lang.CharSequence,int,int)>
<android.view.ViewRootImpl.ViewPostImeInputStage: void <init>(android.view.ViewRootImpl,android.view.ViewRootImpl.InputStage)>
<android.widget.DayPickerView: int getFirstDayOfWeek()>
<android.widget.NumberPicker.InputTextFilter: java.lang.CharSequence filter(java.lang.CharSequence,int,int,android.text.Spanned,int,int)>
<android.app.ApplicationPackageManager.MoveCallbackDelegate: void onCreated(int,android.os.Bundle)>
<android.widget.SpellChecker.SpellParser: boolean isFinished()>
<android.app.ActivityThread.ApplicationThread: void scheduleRelaunchActivity(android.os.IBinder,java.util.List,java.util.List,int,boolean,android.content.res.Configuration,android.content.res.Configuration)>
<android.os.StrictMode.AndroidBlockGuardPolicy: void onNetwork()>
<android.transition.Visibility.DisappearListener: void onTransitionEnd(android.transition.Transition)>
<android.app.ContextImpl: void setTheme(int)>
<android.app.LoadedApk.ReceiverDispatcher.InnerReceiver: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int)>
<android.opengl.GLErrorWrapper: void glLightModelfv(int,float[],int)>
<android.app.ContextImpl: void startActivity(android.content.Intent)>
<android.opengl.GLLogWrapper: void glTexGenx(int,int,int)>
<android.widget.RemoteViews.TextViewDrawableAction: void <init>(android.widget.RemoteViews,int,boolean,android.graphics.drawable.Icon,android.graphics.drawable.Icon,android.graphics.drawable.Icon,android.graphics.drawable.Icon)>
<android.opengl.GLErrorWrapper: void glOrthox(int,int,int,int,int,int)>
<android.widget.TextView.CharWrapper: float measureText(int,int,android.graphics.Paint)>
<android.opengl.GLLogWrapper: void glRotatex(int,int,int,int)>
<android.app.ApplicationPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>
<android.widget.Spinner.DropdownPopup: void <init>(android.widget.Spinner,android.content.Context,android.util.AttributeSet,int,int)>
<android.opengl.GLSurfaceView.GLThread: void surfaceCreated()>
<android.security.keymaster.KeymasterLongArgument: void <init>(int,android.os.Parcel)>
<android.net.Uri.PathPart: android.net.Uri.PathPart appendDecodedSegment(android.net.Uri.PathPart,java.lang.String)>
<android.graphics.drawable.RippleComponent: android.animation.Animator createSoftwareExit()>
<android.app.ContextImpl: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.os.Bundle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<android.view.InputEventConsistencyVerifier.KeyState: void recycle()>
<android.widget.ExpandableListConnector.GroupMetadata: void writeToParcel(android.os.Parcel,int)>
<android.media.SubtitleTrack.CueList.EntryIterator: void remove()>
<android.opengl.GLSurfaceView.DefaultWindowSurfaceFactory: void destroySurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface)>
<android.widget.Editor.SuggestionsPopupWindow: void show()>
<android.print.PrintManager.PrintDocumentAdapterDelegate: void onActivityResumed(android.app.Activity)>
<android.opengl.GLLogWrapper: void glTranslatef(float,float,float)>
<android.view.ViewOverlay.OverlayViewGroup: void clear()>
<android.opengl.GLLogWrapper: void glGetFixedv(int,java.nio.IntBuffer)>
<android.widget.DayPickerView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.security.IKeystoreService: android.security.keymaster.OperationResult finish(android.os.IBinder,android.security.keymaster.KeymasterArguments,byte[],byte[])>
<android.media.MediaScanner.MediaBulkDeleter: void flush()>
<android.widget.Spinner.DropDownAdapter: int getItemViewType(int)>
<android.content.res.StringBlock: java.lang.CharSequence get(int)>
<android.media.ImageWriter.ListenerHandler: void <init>(android.media.ImageWriter,android.os.Looper)>
<android.preference.EditTextPreference.SavedState: void <init>(android.os.Parcelable)>
<android.content.SyncAdaptersCache.MySerializer: java.lang.Object createFromXml(org.xmlpull.v1.XmlPullParser)>
<android.accounts.AccountManager.BaseFutureTask: java.lang.Object bundleToResult(android.os.Bundle)>
<android.content.res.XmlBlock.Parser: void require(int,java.lang.String,java.lang.String)>
<android.opengl.GLSurfaceView.EglHelper: void logEglErrorAsWarning(java.lang.String,java.lang.String,int)>
<android.content.pm.IPackageManager: java.util.List queryIntentContentProviders(android.content.Intent,java.lang.String,int,int)>
<android.app.ApplicationPackageManager: android.os.storage.VolumeInfo getPrimaryStorageCurrentVolume()>
<android.content.res.XmlBlock: android.content.res.XmlResourceParser newParser()>
<android.test.AndroidTestCase: void assertReadingContentUriRequiresPermission(android.net.Uri,java.lang.String)>
<android.text.TextUtils.Reverser: int length()>
<android.widget.Spinner.SpinnerPopup: void setPromptText(java.lang.CharSequence)>
<android.opengl.GLErrorWrapper: void glDrawTexivOES(int[],int)>
<android.app.ApplicationPackageManager: java.lang.String[] getPackagesForUid(int)>
<android.view.ViewRootImpl.TakenSurfaceHolder: void onRelayoutContainer()>
<android.widget.YearPickerView: void setYear(int)>
<android.opengl.GLErrorWrapper: void glGenRenderbuffersOES(int,int[],int)>
<android.widget.QuickContactBadge.QueryHandler: void onQueryComplete(int,java.lang.Object,android.database.Cursor)>
<android.widget.AdapterViewAnimator.SavedState: java.lang.String toString()>
<android.widget.Editor.PinnedPopupWindow: boolean isShowing()>
<android.widget.RemoteViewsAdapter.RemoteViewsMetaData: void set(android.widget.RemoteViewsAdapter.RemoteViewsMetaData)>
<android.graphics.drawable.RippleComponent.RenderNodeAnimatorSet: void end()>
<android.media.ClosedCaptionWidget.CCLayout: void onMeasure(int,int)>
<android.opengl.GLLogWrapper: void glScissor(int,int,int,int)>
<android.app.ApplicationPackageManager: android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName,int)>
<android.media.ImageWriter.WriterSurfaceImage: void finalize()>
<android.opengl.GLErrorWrapper: void glSampleCoverage(float,boolean)>
<android.opengl.GLLogWrapper: void glGetTexParameteriv(int,int,java.nio.IntBuffer)>
<android.transition.ChangeTransform.Transforms: boolean equals(java.lang.Object)>
<android.widget.Editor.PinnedPopupWindow: void <init>(android.widget.Editor)>
<android.app.ContextImpl.ApplicationContentResolver: void <init>(android.content.Context,android.app.ActivityThread,android.os.UserHandle)>
<android.app.ContextImpl: int checkUriPermission(android.net.Uri,java.lang.String,java.lang.String,int,int,int)>
<android.view.ViewDebug.FlagToString: int mask()>
<android.telecom.VideoCallImpl.MessageHandler: void handleMessage(android.os.Message)>
<android.content.SearchRecentSuggestionsProvider.DatabaseHelper: void onCreate(android.database.sqlite.SQLiteDatabase)>
<android.content.pm.IPackageManager: boolean activitySupportsIntent(android.content.ComponentName,android.content.Intent,java.lang.String)>
<android.app.ApplicationPackageManager: java.util.List getPrimaryStorageCandidateVolumes()>
<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGLContext eglCreateContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,javax.microedition.khronos.egl.EGLContext,int[])>
<android.graphics.Paint.Join: android.graphics.Paint.Join valueOf(java.lang.String)>
<android.widget.Spinner.DialogPopup: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<android.widget.DatePickerCalendarDelegate: void <init>(android.widget.DatePicker,android.content.Context,android.util.AttributeSet,int,int)>
<android.app.ActivityTransitionCoordinator: java.util.ArrayList setSharedElementState(android.os.Bundle,java.util.ArrayList)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.OAEPWithMGF1Padding: int getAdditionalEntropyAmountForBegin()>
<android.widget.RemoteViewsService.RemoteViewsFactoryAdapter: void onDataSetChangedAsync()>
<android.text.PackedObjectVector: int size()>
<android.net.IpConfiguration.IpAssignment: android.net.IpConfiguration.IpAssignment[] values()>
<android.widget.ShareActionProvider.ShareMenuItemOnMenuItemClickListener: boolean onMenuItemClick(android.view.MenuItem)>
<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi.ECB.NoPadding: void finalize()>
<android.hardware.camera2.ICameraDeviceUser: int getInputSurface(android.view.Surface)>
<android.security.keystore.AndroidKeyStoreRSASignatureSpi: void resetAll()>
<android.telecom.VideoCallImpl.VideoCallListenerBinder: void receiveSessionModifyRequest(android.telecom.VideoProfile)>
<android.app.ContextImpl: void performFinalCleanup(java.lang.String,java.lang.String)>
<android.widget.DayPickerViewPager: void onMeasure(int,int)>
<android.gesture.GestureLibraries.FileGestureLibrary: boolean isReadOnly()>
<android.hardware.input.IInputManager: android.hardware.input.KeyboardLayout[] getKeyboardLayouts()>
<android.widget.CursorAdapter.ChangeObserver: boolean deliverSelfNotifications()>
<android.util.JsonScope: android.util.JsonScope[] values()>
<android.app.SystemServiceRegistry: java.lang.Object getSystemService(android.app.ContextImpl,java.lang.String)>
<android.app.ActivityTransitionCoordinator: void viewsTransitionComplete()>
<android.transition.ChangeTransform.GhostListener: void onTransitionResume(android.transition.Transition)>
<android.widget.RemoteViews.BitmapReflectionAction: java.lang.String getActionName()>
<android.widget.RtlSpacingHelper: void setDirection(boolean)>
<android.app.SharedPreferencesImpl: void unregisterOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener)>
<android.widget.SimpleMonthView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.transition.ChangeTransform.GhostListener: void <init>(android.view.View,android.view.View,android.view.GhostView)>
<android.media.ImageReader.SurfaceImage: void close()>
<android.content.pm.IPackageManager: boolean hasSystemUidErrors()>
<android.webkit.EventLogTags: void writeBrowserZoomLevelChange(int,int,long)>
<android.widget.Editor.SelectionEndHandleView: void updatePosition(float,float)>
<android.content.res.XmlBlock.Parser: int getAttributeCount()>
<android.app.INotificationManager: void enqueueNotificationWithTag(java.lang.String,java.lang.String,java.lang.String,int,android.app.Notification,int[],int)>
<android.widget.TimePickerSpinnerDelegate: int getCurrentHour()>
<android.widget.YearPickerView.YearAdapter: void setRange(java.util.Calendar,java.util.Calendar)>
<android.text.PackedIntVector: int size()>
<android.app.WallpaperManager.FastBitmapDrawable: void setDither(boolean)>
<android.widget.PopupWindow.PopupBackgroundView: int[] onCreateDrawableState(int)>
<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: byte[] engineGetIV()>
<android.view.ViewDebug.FlagToString: int equals()>
<android.test.PerformanceTestCase.Intermediates: void addIntermediate(java.lang.String,long)>
<android.widget.FastScroller: boolean isEnabled()>
<android.widget.AccessibilityIterators.LineTextSegmentIterator: int[] preceding(int)>
<android.widget.QuickContactBadge.QueryHandler: void <init>(android.widget.QuickContactBadge,android.content.ContentResolver)>
<android.widget.Spinner.DialogPopup: void setVerticalOffset(int)>
<android.widget.DatePicker.DatePickerSpinnerDelegate: void setFirstDayOfWeek(int)>
<android.opengl.GLErrorWrapper: void glDeleteBuffers(int,java.nio.IntBuffer)>
<android.text.TextUtils.Reverser: void <init>(java.lang.CharSequence,int,int)>
<android.opengl.GLLogWrapper: void glBlendFunc(int,int)>
<android.app.ActivityView.ActivityViewSurfaceTextureListener: void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int)>
<android.media.Utils: int binarySearchDistinctRanges(android.util.Range[],java.lang.Comparable)>
<android.content.ContentProvider.Transport: android.content.res.AssetFileDescriptor openAssetFile(java.lang.String,android.net.Uri,java.lang.String,android.os.ICancellationSignal)>
<android.opengl.GLSurfaceView.DefaultContextFactory: javax.microedition.khronos.egl.EGLContext createContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig)>
<android.os.AsyncTask.Status: android.os.AsyncTask.Status[] values()>
<android.media.ImageUtils: void imageCopy(android.media.Image,android.media.Image)>
<android.net.Network.NetworkBoundSocketFactory: void <init>(android.net.Network,int)>
<android.widget.DateTimeView.ReceiverInfo: void addView(android.widget.DateTimeView)>
<android.inputmethodservice.IInputMethodSessionWrapper: void updateCursor(android.graphics.Rect)>
<android.widget.DatePickerCalendarDelegate.SavedState: int getSelectedDay()>
<android.net.Uri.OpaqueUri: java.lang.String getAuthority()>
<android.widget.Editor.HandleView: boolean onTouchEvent(android.view.MotionEvent)>
<android.opengl.GLErrorWrapper: void glLoadMatrixx(java.nio.IntBuffer)>
<android.util.MapCollections: int colIndexOfValue(java.lang.Object)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: int getAdditionalEntropyAmountForFinish()>
<android.widget.RemoteViews.ViewGroupAction: void <init>(android.widget.RemoteViews,int,android.widget.RemoteViews)>
<android.security.keystore.AndroidKeyStoreSignatureSpiBase: void initKey(android.security.keystore.AndroidKeyStoreKey)>
<android.widget.AbsListView.ListItemAccessibilityDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)>
<android.content.pm.IPackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int,int)>
<android.app.ContextImpl.ApplicationContentResolver: android.content.IContentProvider acquireExistingProvider(android.content.Context,java.lang.String)>
<android.widget.GridLayout.PackedMap: java.lang.Object getValue(int)>
<android.util.MapCollections.KeySet: boolean contains(java.lang.Object)>
<android.app.ActivityTransitionCoordinator: void clearState()>
<android.util.MapCollections.ValuesCollection: java.lang.Object[] toArray()>
<android.graphics.Paint.Align: android.graphics.Paint.Align[] values()>
<android.view.MenuInflater.MenuState: boolean hasAddedItem()>
<android.opengl.GLErrorWrapper: void glRenderbufferStorageOES(int,int,int,int)>
<android.content.AbstractThreadedSyncAdapter.ISyncAdapterImpl: void cancelSync(android.content.ISyncContext)>
<android.hardware.usb.IUsbManager: boolean hasDevicePermission(android.hardware.usb.UsbDevice)>
<android.opengl.GLErrorWrapper: void glMaterialfv(int,int,java.nio.FloatBuffer)>
<android.opengl.GLLogWrapper: void glTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.app.ActivityThread.ApplicationThread: void dumpMemInfo(java.io.FileDescriptor,android.os.Debug.MemoryInfo,boolean,boolean,boolean,boolean,java.lang.String[])>
<android.text.Layout.SpannedEllipsizer: int nextSpanTransition(int,int,java.lang.Class)>
<android.media.ImageReader.SurfaceImage: android.media.Image.Plane[] getPlanes()>
<android.opengl.GLErrorWrapper: void glGetLightfv(int,int,float[],int)>
<android.sax.RootElement.Handler: void characters(char[],int,int)>
<android.bluetooth.BluetoothHealth.BluetoothHealthCallbackWrapper: void <init>(android.bluetooth.BluetoothHealthCallback)>
<android.app.ApplicationPackageManager: java.util.List queryIntentActivityOptions(android.content.ComponentName,android.content.Intent[],android.content.Intent,int)>
<android.widget.CalendarView.AbstractCalendarViewDelegate: void setFocusedMonthDateColor(int)>
<android.transition.ChangeBounds.ViewBounds: void setBottomRight(android.graphics.PointF)>
<android.inputmethodservice.IInputMethodWrapper: void createSession(android.view.InputChannel,com.android.internal.view.IInputSessionCallback)>
<android.widget.AbsListView.PositionScroller: void startWithOffset(int,int,int)>
<android.view.ViewDebug.ExportedProperty: boolean hasAdjacentMapping()>
<android.net.wifi.SupplicantState: void writeToParcel(android.os.Parcel,int)>
<android.opengl.GLLogWrapper: void glLightModelxv(int,int[],int)>
<android.app.ContextImpl: void sendBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,int)>
<android.widget.GridLayout.Bounds: java.lang.String toString()>
<android.security.keystore.AndroidKeyStoreSignatureSpiBase: void engineInitSign(java.security.PrivateKey,java.security.SecureRandom)>
<android.widget.Editor.PinnedPopupWindow: void hide()>
<android.transition.TranslationAnimationCreator.TransitionPositionListener: void onTransitionEnd(android.transition.Transition)>
<android.view.IWindowSession: void remove(android.view.IWindow)>
<android.net.Uri.StringUri: java.lang.String getEncodedAuthority()>
<android.speech.tts.EventLoggerV1: void logFailure(int)>
<android.os.StrictMode.AndroidBlockGuardPolicy: java.lang.String toString()>
<android.widget.SimpleAdapter.SimpleFilter: android.widget.Filter.FilterResults performFiltering(java.lang.CharSequence)>
<android.widget.YearPickerView.YearAdapter: boolean isEnabled(int)>
<android.widget.Editor.InsertionHandleView: boolean onTouchEvent(android.view.MotionEvent)>
<android.media.WebVttRenderingWidget.RegionLayout: void put(android.media.TextTrackCue)>
<android.widget.ActivityChooserView.ActivityChooserViewAdapter: java.lang.Object getItem(int)>
<android.widget.SimpleMonthView: void setMonthTextAppearance(int)>
<android.sax.RootElement.Handler: void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)>
<android.widget.Editor.SuggestionsPopupWindow: boolean isShowingUp()>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getActivityLogo(android.content.ComponentName)>
<android.opengl.GLLogWrapper: void glGetBooleanv(int,boolean[],int)>
<android.transition.Visibility.DisappearListener: void onAnimationEnd(android.animation.Animator)>
<android.widget.DayPickerPagerAdapter: int getCount()>
<android.animation.Keyframe.IntKeyframe: int getIntValue()>
<android.view.IWindowManager: void overridePendingAppTransitionAspectScaledThumb(android.graphics.Bitmap,int,int,int,int,android.os.IRemoteCallback,boolean)>
<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask: void <init>(android.print.PrintFileDocumentAdapter,android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter.WriteResultCallback)>
<android.media.AudioManager.OnAmPortUpdateListener: void onAudioPortListUpdate(android.media.AudioPort[])>
<android.app.IWallpaperManager: java.lang.String getName()>
<android.test.InstrumentationTestCase: android.app.Activity launchActivityWithIntent(java.lang.String,java.lang.Class,android.content.Intent)>
<android.media.ImageReader.ListenerHandler: void <init>(android.media.ImageReader,android.os.Looper)>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getDrawable(java.lang.String,int,android.content.pm.ApplicationInfo)>
<android.util.MapCollections.ValuesCollection: boolean contains(java.lang.Object)>
<android.speech.SpeechRecognizer.Connection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)>
<android.print.PrinterDiscoverySession.PrinterDiscoveryObserver: void onPrintersAdded(android.content.pm.ParceledListSlice)>
<android.opengl.GLErrorWrapper: void glPointParameterfv(int,java.nio.FloatBuffer)>
<android.widget.ProgressBar.RefreshProgressRunnable: void run()>
<android.opengl.GLErrorWrapper: void glGetFramebufferAttachmentParameterivOES(int,int,int,java.nio.IntBuffer)>
<android.appwidget.AppWidgetHost.Callbacks: void providersChanged()>
<android.inputmethodservice.IInputMethodWrapper: void executeMessage(android.os.Message)>
<android.hardware.location.IFusedLocationHardware: int getVersion()>
<android.inputmethodservice.IInputMethodSessionWrapper: void appPrivateCommand(java.lang.String,android.os.Bundle)>
<android.opengl.GLLogWrapper: void glFogfv(int,float[],int)>
<android.widget.CursorTreeAdapter.MyCursorHelper.MyDataSetObserver: void onInvalidated()>
<android.app.ContextImpl: android.content.ComponentName startService(android.content.Intent)>
<android.view.ViewOverlay.OverlayViewGroup: void onLayout(boolean,int,int,int,int)>
<android.widget.DatePickerCalendarDelegate: void setCalendarViewShown(boolean)>
<android.media.CCParser.StyleCode: android.media.CCParser.StyleCode fromByte(byte)>
<android.app.ContextImpl: android.content.res.Resources.Theme getTheme()>
<android.widget.Editor.TextActionModeCallback: void <init>(android.widget.Editor,boolean)>
<android.os.ResultReceiver.MyResultReceiver: void send(int,android.os.Bundle)>
<android.accounts.AbstractAccountAuthenticator.Transport: void getAuthTokenLabel(android.accounts.IAccountAuthenticatorResponse,java.lang.String)>
<android.opengl.GLLogWrapper: void glGetTexEnvxv(int,int,int[],int)>
<android.app.MediaRouteButton.MediaRouterCallback: void onRouteRemoved(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>
<android.view.IWindowManager: int getInitialDisplayDensity(int)>
<android.app.ApplicationPackageManager.OnPermissionsChangeListenerDelegate: void <init>(android.app.ApplicationPackageManager,android.content.pm.PackageManager.OnPermissionsChangedListener,android.os.Looper)>
<android.security.keymaster.KeymasterBlobArgument: void writeValue(android.os.Parcel)>
<android.transition.Visibility.DisappearListener: void onAnimationRepeat(android.animation.Animator)>
<android.animation.Animator.AnimatorConstantState: java.lang.Object newInstance()>
<android.app.ActivityThread.Profiler: void startProfiling()>
<android.net.LocalSocketImpl.SocketOutputStream: void flush()>
<android.widget.ActivityChooserView.ActivityChooserViewAdapter: android.widget.ActivityChooserModel getDataModel()>
<android.graphics.drawable.RippleComponent.RenderNodeAnimatorSet: void start(android.view.DisplayListCanvas)>
<android.app.ActivityThread.ApplicationThread: void scheduleRegisteredReceiver(android.content.IIntentReceiver,android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int,int)>
<android.widget.ProgressBar.RefreshData: android.widget.ProgressBar.RefreshData obtain(int,int,boolean)>
<android.opengl.GLLogWrapper: void glDrawElements(int,int,int,java.nio.Buffer)>
<android.net.Uri.OpaqueUri: java.lang.String toString()>
<android.hardware.input.IInputManager: java.lang.String getCurrentKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier)>
<android.widget.ActivityChooserView.ActivityChooserViewAdapter: void setMaxActivityCount(int)>
<android.widget.CalendarViewLegacyDelegate.WeeksAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.widget.Editor.CursorController: void show()>
<android.preference.DialogPreference.SavedState: void <init>(android.os.Parcel)>
<android.app.ActivityThread.ApplicationThread: void scheduleResumeActivity(android.os.IBinder,int,boolean,android.os.Bundle)>
<android.app.ContextImpl: java.io.File getDir(java.lang.String,int)>
<android.widget.RtlSpacingHelper: int getEnd()>
<android.app.ApplicationPackageManager: void unregisterMoveCallback(android.content.pm.PackageManager.MoveCallback)>
<android.app.ActivityTransitionCoordinator: java.util.ArrayList getAllSharedElementNames()>
<android.content.pm.IPackageManager: void removePackageFromPreferred(java.lang.String)>
<android.widget.Toolbar.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: java.security.Key engineUnwrap(byte[],java.lang.String,int)>
<android.app.ApplicationPackageManager: int getComponentEnabledSetting(android.content.ComponentName)>
<android.view.IWindowSession: void dragRecipientEntered(android.view.IWindow)>
<android.accounts.AccountManager.AmsTask: void set(java.lang.Object)>
<android.widget.Toolbar.ExpandedActionViewMenuPresenter: void updateMenuView(boolean)>
<android.app.ContextImpl: java.io.File getCodeCacheDir()>
<android.widget.GridLayout.Assoc: void put(java.lang.Object,java.lang.Object)>
<android.content.res.XmlBlock.Parser: java.lang.String getAttributePrefix(int)>
<android.view.IWindowManager: void stopFreezingScreen()>
<android.view.ViewRootImpl.EarlyPostImeInputStage: int onProcess(android.view.ViewRootImpl.QueuedInputEvent)>
<android.content.pm.IPackageManager: void restorePreferredActivities(byte[],int)>
<android.view.AccessibilityInteractionController.PrivateHandler: java.lang.String getMessageName(android.os.Message)>
<android.util.MapCollections: void colRemoveAt(int)>
<android.view.SurfaceView.MyWindow: void <init>(android.view.SurfaceView)>
<android.app.INotificationManager: android.service.notification.StatusBarNotification[] getHistoricalNotifications(java.lang.String,int)>
<android.hardware.camera2.ICameraDeviceUser: int createInputStream(int,int,int)>
<android.app.INotificationManager: int getPackageVisibilityOverride(java.lang.String,int)>
<android.webkit.Plugin.DefaultClickHandler: void handleClickEvent(android.content.Context)>
<android.view.FrameInfo: void markAnimationsStart()>
<android.preference.GenericInflater: java.lang.Object createItem(java.lang.String,java.lang.String,android.util.AttributeSet)>
<android.app.ApplicationPackageManager: boolean updateIntentVerificationStatus(java.lang.String,int,int)>
<android.opengl.GLErrorWrapper: void glColorPointer(int,int,int,int)>
<android.app.BackStackRecord: android.app.FragmentTransaction setBreadCrumbTitle(int)>
<android.view.FocusFinder.SequentialFocusComparator: void setIsLayoutRtl(boolean)>
<android.drm.DrmManagerClient.EventHandler: void <init>(android.drm.DrmManagerClient,android.os.Looper)>
<android.net.DhcpStateMachine.PollingState: void enter()>
<android.util.MapCollections.ValuesCollection: boolean containsAll(java.util.Collection)>
<android.security.keystore.AndroidKeyStoreECDSASignatureSpi: void resetWhilePreservingInitState()>
<android.view.ViewRootImpl.AsyncInputStage: void apply(android.view.ViewRootImpl.QueuedInputEvent,int)>
<android.print.PrintManager.PrintDocumentAdapterDelegate.MyWriteResultCallback: void <init>(android.print.PrintManager.PrintDocumentAdapterDelegate,android.print.IWriteResultCallback,android.os.ParcelFileDescriptor,int)>
<android.widget.Editor.HandleView: void onMeasure(int,int)>
<android.app.ActivityThread.ApplicationThread: void updateProcessState(int,boolean)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi: void initKey(int,java.security.Key)>
<android.content.pm.IPackageManager: int getComponentEnabledSetting(android.content.ComponentName,int)>
<android.accounts.AbstractAccountAuthenticator.Transport: void updateCredentials(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)>
<android.widget.YearPickerView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.widget.SimpleMonthView: void setOnDayClickListener(android.widget.SimpleMonthView.OnDayClickListener)>
<android.widget.YearPickerView.YearAdapter: java.lang.Integer getItem(int)>
<android.app.ContextImpl: int checkCallingUriPermission(android.net.Uri,int)>
<android.security.IKeystoreService: int del(java.lang.String,int)>
<android.graphics.Path.FillType: android.graphics.Path.FillType valueOf(java.lang.String)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: void initAlgorithmSpecificParameters(java.security.spec.AlgorithmParameterSpec)>
<android.widget.CursorAdapter.ChangeObserver: void onChange(boolean)>
<android.app.IWallpaperManager: android.app.WallpaperInfo getWallpaperInfo()>
<android.bluetooth.BluetoothInputStream: int read()>
<android.location.ILocationManager: void addTestProvider(java.lang.String,com.android.internal.location.ProviderProperties,java.lang.String)>
<android.view.IWindowSession: int add(android.view.IWindow,int,android.view.WindowManager.LayoutParams,int,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel)>
<android.widget.CalendarViewLegacyDelegate.WeekView: int getMonthOfFirstWeekDay()>
<android.widget.RemoteViews.TextViewSizeAction: java.lang.String getActionName()>
<android.widget.ListPopupWindow.PopupScrollListener: void onScrollStateChanged(android.widget.AbsListView,int)>
<android.view.IWindowManager: void addAppToken(int,android.view.IApplicationToken,int,int,int,boolean,boolean,int,int,boolean,boolean)>
<android.util.FastImmutableArraySet.FastIterator: void <init>(java.lang.Object[])>
<android.widget.CalendarViewMaterialDelegate: long getMinDate()>
<android.location.GpsNavigationMessageListenerTransport: void <init>(android.content.Context,android.location.ILocationManager)>
<android.opengl.GLLogWrapper: void glFogxv(int,java.nio.IntBuffer)>
<android.app.MediaRouteActionProvider.MediaRouterCallback: void onRouteRemoved(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>
<android.opengl.GLLogWrapper: void glWeightPointerOES(int,int,int,int)>
<android.widget.AbsListView.RecycleBin: void setViewTypeCount(int)>
<android.net.DhcpStateMachine.StoppedState: boolean processMessage(android.os.Message)>
<android.app.ContextImpl: android.content.ContentResolver getContentResolver()>
<android.widget.DayPickerView: void setDayTextAppearance(int)>
<android.hardware.SystemSensorManager.BaseEventQueue: int injectSensorDataBase(int,float[],int,long)>
<android.widget.CalendarViewLegacyDelegate.WeekView: boolean getDayFromLocation(float,java.util.Calendar)>
<android.app.ApplicationPackageManager: void updatePermissionFlags(java.lang.String,java.lang.String,int,int,android.os.UserHandle)>
<android.widget.GridLayout.Axis: int getCount()>
<android.security.keymaster.KeymasterBooleanArgument: void <init>(int,android.os.Parcel)>
<android.view.ViewGroup.TouchTarget: void recycle()>
<android.widget.Spinner.DialogPopup: int getVerticalOffset()>
<android.media.ImageReader.SurfaceImage: void setTimestamp(long)>
<android.widget.Editor.SelectionModifierCursorController: void onDetached()>
<android.opengl.GLLogWrapper: void glMaterialf(int,int,float)>
<android.opengl.GLSurfaceView.EglHelper: int swap()>
<android.view.ViewRootImpl.SyntheticTouchNavigationHandler: void process(android.view.MotionEvent)>
<android.widget.SimpleMonthView: void onRtlPropertiesChanged(int)>
<android.widget.AccessibilityIterators.LineTextSegmentIterator: int[] following(int)>
<android.app.ContextImpl: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>
<android.app.WallpaperManager.FastBitmapDrawable: int getIntrinsicHeight()>
<android.util.MapCollections.EntrySet: boolean contains(java.lang.Object)>
<android.view.IWindowManager: void setEventDispatching(boolean)>
<android.app.ActivityThread.ActivityConfigChangeData: void <init>(android.os.IBinder,android.content.res.Configuration)>
<android.app.ActivityThread.ProviderKey: void <init>(java.lang.String,int)>
<android.widget.SimpleMonthView: void setSelectedDay(int)>
<android.net.Uri.HierarchicalUri: java.lang.String getEncodedFragment()>
<android.opengl.GLErrorWrapper: void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)>
<android.gesture.GestureLibraries.ResourceGestureLibrary: void <init>(android.content.Context,int)>
<android.security.keystore.DelegatingX509Certificate: byte[] getExtensionValue(java.lang.String)>
<android.util.MapCollections.EntrySet: boolean containsAll(java.util.Collection)>
<android.widget.CalendarViewLegacyDelegate: int getWeekNumberColor()>
<android.widget.ExpandableListConnector: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.app.ActivityThread.ReceiverData: void <init>(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,android.os.IBinder,int)>
<android.graphics.drawable.RippleComponent: boolean draw(android.graphics.Canvas,android.graphics.Paint)>
<android.app.ContextImpl: java.io.File getCacheDir()>
<android.net.LocalSocketImpl: java.lang.String toString()>
<android.app.ContextImpl: void sendStickyOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<android.widget.SuggestionsAdapter: boolean hasStableIds()>
<android.opengl.GLLogWrapper: void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer)>
<android.view.ViewGroup.ChildListForAccessibility: android.view.View getChildAt(int)>
<android.app.ActivityTransitionState: void postponeEnterTransition()>
<android.content.pm.IPackageManager: byte[] getIntentFilterVerificationBackup(int)>
<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: void initAlgorithmSpecificParameters(java.security.spec.AlgorithmParameterSpec)>
<android.widget.AccessibilityIterators.PageTextSegmentIterator: void initialize(android.widget.TextView)>
<android.net.Uri.HierarchicalUri: java.lang.String getAuthority()>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi.GCM: int getTagLengthBits()>
<android.widget.CalendarView.AbstractCalendarViewDelegate: int getWeekNumberColor()>
<android.renderscript.FileA3D.EntryType: android.renderscript.FileA3D.EntryType toEntryType(int)>
<android.os.UEventObserver.UEventThread: void addObserver(java.lang.String,android.os.UEventObserver)>
<android.util.XmlPullAttributes: boolean getAttributeBooleanValue(java.lang.String,java.lang.String,boolean)>
<android.view.AccessibilityIterators.CharacterTextSegmentIterator: void onConfigurationChanged(android.content.res.Configuration)>
<android.widget.Spinner.DropDownAdapter: void registerDataSetObserver(android.database.DataSetObserver)>
<android.media.ImageReader.SurfaceImage: android.media.ImageReader getReader()>
<android.media.SubtitleTrack.CueList: long nextTimeAfter(long)>
<android.text.Layout.Ellipsizer: java.lang.String toString()>
<android.widget.Editor.ProcessTextIntentActionsHandler: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>
<android.widget.CursorFilter: void publishResults(java.lang.CharSequence,android.widget.Filter.FilterResults)>
<android.widget.DatePickerCalendarDelegate: int getDayOfMonth()>
<android.opengl.GLLogWrapper: void glGenerateMipmapOES(int)>
<android.animation.AnimatorSet.DependencyListener: void <init>(android.animation.AnimatorSet,android.animation.AnimatorSet.Node,int)>
<android.app.ApplicationPackageManager.ResourceName: boolean equals(java.lang.Object)>
<android.widget.CalendarViewMaterialDelegate: long getDate()>
<android.view.ViewRootImpl.ViewPreImeInputStage: void <init>(android.view.ViewRootImpl,android.view.ViewRootImpl.InputStage)>
<android.opengl.GLLogWrapper: void glGetFloatv(int,java.nio.FloatBuffer)>
<android.security.KeyStore.State: android.security.KeyStore.State valueOf(java.lang.String)>
<android.content.pm.IPackageManager: void clearPackagePreferredActivities(java.lang.String)>
<android.widget.RemoteViews.ReflectionAction: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>
<android.webkit.EventLogTags: void writeExpDetAttemptToCallObjectGetclass(java.lang.String)>
<android.app.SharedPreferencesImpl: java.lang.String getString(java.lang.String,java.lang.String)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi: void resetAll()>
<android.media.MediaPlayer.EventHandler: void <init>(android.media.MediaPlayer,android.media.MediaPlayer,android.os.Looper)>
<android.inputmethodservice.IInputMethodSessionWrapper: void viewClicked(boolean)>
<android.app.ActivityTransitionCoordinator: void captureSharedElementState(android.view.View,java.lang.String,android.os.Bundle,android.graphics.Matrix,android.graphics.RectF)>
<android.app.SharedPreferencesImpl: boolean getBoolean(java.lang.String,boolean)>
<android.media.ImageWriter.WriterSurfaceImage: void close()>
<android.drm.DrmManagerClient.InfoHandler: void handleMessage(android.os.Message)>
<android.app.ActivityThread.ApplicationThread: void clearDnsCache()>
<android.opengl.GLLogWrapper.PointerInfo: void unbindByteBuffer()>
<android.widget.AbsListView.MultiChoiceModeWrapper: void setWrapped(android.widget.AbsListView.MultiChoiceModeListener)>
<android.hardware.camera2.ICameraDeviceUser: int submitRequestList(java.util.List,boolean,android.hardware.camera2.utils.LongParcelable)>
<android.location.ILocationManager: void removeGpsNavigationMessageListener(android.location.IGpsNavigationMessageListener)>
<android.opengl.GLLogWrapper: void glTexEnvxv(int,int,java.nio.IntBuffer)>
<android.widget.Editor.SelectionModifierCursorController: void show()>
<android.accounts.AbstractAccountAuthenticator.Transport: void editProperties(android.accounts.IAccountAuthenticatorResponse,java.lang.String)>
<android.content.pm.IPackageManager: int installExistingPackageAsUser(java.lang.String,int)>
<android.widget.AbsListView.MultiChoiceModeWrapper: void onItemCheckedStateChanged(android.view.ActionMode,int,long,boolean)>
<android.app.SharedPreferencesImpl.EditorImpl: android.content.SharedPreferences.Editor putBoolean(java.lang.String,boolean)>
<android.opengl.GLErrorWrapper: void glGenerateMipmapOES(int)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.PKCS1Padding: void initAlgorithmSpecificParameters()>
<android.app.ContextImpl: java.io.File getExternalFilesDir(java.lang.String)>
<android.util.MapCollections.EntrySet: boolean removeAll(java.util.Collection)>
<android.util.ReflectiveProperty: java.lang.Object get(java.lang.Object)>
<android.content.res.StringBlock.Height: void chooseHeight(java.lang.CharSequence,int,int,int,int,android.graphics.Paint.FontMetricsInt)>
<android.os.StrictMode.InstanceTracker: void finalize()>
<android.animation.PathKeyframes: void setEvaluator(android.animation.TypeEvaluator)>
<android.app.ActivityThread.CreateBackupAgentData: java.lang.String toString()>
<android.app.ActivityView.ActivityViewSurfaceTextureListener: void onSurfaceTextureUpdated(android.graphics.SurfaceTexture)>
<android.widget.DayPickerView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.widget.TextView.ChangeWatcher: void onSpanChanged(android.text.Spannable,java.lang.Object,int,int,int,int)>
<android.app.ContextImpl: android.app.ContextImpl getImpl(android.content.Context)>
<android.media.CCParser.PAC: android.media.CCParser.PAC fromBytes(byte,byte)>
<android.app.INotificationManager: boolean isNotificationPolicyAccessGranted(java.lang.String)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: void initKey(int,java.security.Key)>
<android.widget.RemoteViews.SetPendingIntentTemplate: void <init>(android.widget.RemoteViews,int,android.app.PendingIntent)>
<android.widget.TimePickerClockDelegate.Node: void <init>(android.widget.TimePickerClockDelegate,int[])>
<android.app.ActivityThread.ApplicationThread: void dispatchPackageBroadcast(int,java.lang.String[])>
<android.opengl.GLErrorWrapper: void glMaterialxv(int,int,java.nio.IntBuffer)>
<android.app.ApplicationPackageManager: java.lang.String getNameForUid(int)>
<android.widget.Editor.HandleView: void updatePosition(int,int,boolean,boolean)>
<android.opengl.GLLogWrapper: void glDepthRangex(int,int)>
<android.app.BackStackRecord: android.app.FragmentTransaction addToBackStack(java.lang.String)>
<android.opengl.GLErrorWrapper: void glGetMaterialxv(int,int,int[],int)>
<android.preference.GenericInflater: java.lang.Object inflate(int,android.preference.GenericInflater.Parent,boolean)>
<android.inputmethodservice.IInputMethodWrapper: void restartInput(com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo)>
<android.location.ILocationManager: void removeGpsMeasurementsListener(android.location.IGpsMeasurementsListener)>
<android.widget.Editor.SelectionStartHandleView: int getHorizontalGravity(boolean)>
<android.widget.RemoteViewsAdapter.RemoteViewsAdapterServiceConnection: void <init>(android.widget.RemoteViewsAdapter)>
<android.opengl.GLErrorWrapper: void glTexEnvxv(int,int,java.nio.IntBuffer)>
<android.widget.TableLayout.PassThroughHierarchyChangeListener: void onChildViewAdded(android.view.View,android.view.View)>
<android.opengl.GLErrorWrapper: void glClearDepthf(float)>
<android.net.wifi.SupplicantState: android.net.wifi.SupplicantState[] values()>
<android.widget.AbsListView.InputConnectionWrapper: boolean commitCorrection(android.view.inputmethod.CorrectionInfo)>
<android.print.PrintManager.PrintDocumentAdapterDelegate: void <init>(android.app.Activity,android.print.PrintDocumentAdapter)>
<android.security.keystore.DelegatingX509Certificate: java.security.Principal getSubjectDN()>
<android.widget.CalendarView.AbstractCalendarViewDelegate: void setWeekSeparatorLineColor(int)>
<android.net.Uri.StringUri: void writeToParcel(android.os.Parcel,int)>
<android.text.TextDirectionHeuristics.TextDirectionHeuristicImpl: void <init>(android.text.TextDirectionHeuristics.TextDirectionAlgorithm)>
<android.opengl.GLSurfaceView.GLThreadManager: void threadExiting(android.opengl.GLSurfaceView.GLThread)>
<android.os.CommonTimeUtils: long transactGetLong(int,long)>
<android.widget.AccessibilityIterators.PageTextSegmentIterator: android.widget.AccessibilityIterators.PageTextSegmentIterator getInstance()>
<android.widget.AccessibilityIterators.LineTextSegmentIterator: void initialize(android.text.Spannable,android.text.Layout)>
<android.app.ActivityThread.ResultData: java.lang.String toString()>
<android.accounts.AccountManager.Future2Task: android.accounts.AccountManager.Future2Task start()>
<android.content.res.XmlBlock.Parser: java.lang.CharSequence getPooledString(int)>
<android.app.ApplicationPackageManager: android.content.res.Resources getResourcesForActivity(android.content.ComponentName)>
<android.view.accessibility.AccessibilityCache: void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.opengl.GLErrorWrapper: void glDrawElements(int,int,int,int)>
<android.graphics.Rect.UnflattenHelper: java.util.regex.Matcher getMatcher(java.lang.String)>
<android.accounts.AbstractAccountAuthenticator.Transport: void getAccountRemovalAllowed(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account)>
<android.hardware.SystemSensorManager.SensorEventQueue: void removeSensorEvent(android.hardware.Sensor)>
<android.database.CursorToBulkCursorAdaptor.ContentObserverProxy: void <init>(android.database.IContentObserver,android.os.IBinder.DeathRecipient)>
<android.content.pm.IPackageManager: android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentity()>
<android.widget.NumberPicker.SetSelectionCommand: void run()>
<android.renderscript.ProgramFragmentFixedFunction.InternalBuilder: void <init>(android.renderscript.RenderScript)>
<android.os.CommonTimeUtils: int transactSetInt(int,int)>
<android.opengl.GLErrorWrapper: void glClipPlanex(int,java.nio.IntBuffer)>
<android.content.pm.IPackageManager: android.content.pm.FeatureInfo[] getSystemAvailableFeatures()>
<android.opengl.GLLogWrapper: void glPointSizePointerOES(int,int,java.nio.Buffer)>
<android.content.AsyncTaskLoader.LoadTask: java.lang.Object doInBackground(java.lang.Void[])>
<android.view.IWindowManager: void clearForcedDisplayDensity(int)>
<android.view.ViewRootImpl.QueuedInputEvent: java.lang.String toString()>
<android.view.ViewGroup.ViewLocationHolder: int compareTo(android.view.ViewGroup.ViewLocationHolder)>
<android.media.RemoteController.RcDisplay: void setEnabled(boolean)>
<android.util.Base64.Encoder: void <init>(int,byte[])>
<android.content.pm.IPackageManager: void clearCrossProfileIntentFilters(int,java.lang.String)>
<android.opengl.GLErrorWrapper: void glDrawTexsvOES(java.nio.ShortBuffer)>
<android.app.BackStackRecord: android.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence)>
<android.net.Uri.HierarchicalUri: java.util.List getPathSegments()>
<android.util.XmlPullAttributes: int getAttributeNameResource(int)>
<android.content.res.ThemedResourceCache: boolean shouldInvalidateEntry(java.lang.Object,int)>
<android.bluetooth.BluetoothOutputStream: void write(int)>
<android.security.keystore.DelegatingX509Certificate: java.util.Set getNonCriticalExtensionOIDs()>
<android.text.AndroidBidi: android.text.Layout.Directions directions(int,byte[],int,char[],int,int)>
<android.widget.RemoteViews.ReflectionActionWithoutParams: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>
<android.view.IWindowManager: boolean clearWindowContentFrameStats(android.os.IBinder)>
<android.media.RemoteControlClient.EventHandler: void handleMessage(android.os.Message)>
<android.content.pm.IPackageManager: byte[] getPreferredActivityBackup(int)>
<android.app.ReceiverRestrictedContext: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>
<android.util.MapCollections.ArrayIterator: java.lang.Object next()>
<android.os.AsyncTask.InternalHandler: void handleMessage(android.os.Message)>
<android.app.ApplicationPackageManager: void installPackageWithVerificationAndEncryption(android.net.Uri,android.app.PackageInstallObserver,int,java.lang.String,android.content.pm.VerificationParams,android.content.pm.ContainerEncryptionParams)>
<android.graphics.drawable.RippleComponent.RenderNodeAnimatorSet: void cancel()>
<android.app.ApplicationPackageManager: boolean addPermission(android.content.pm.PermissionInfo)>
<android.net.Uri.OpaqueUri: java.lang.String getEncodedFragment()>
<android.widget.CalendarViewLegacyDelegate.WeekView: void onSizeChanged(int,int,int,int)>
<android.inputmethodservice.IInputMethodWrapper: void showSoftInput(int,android.os.ResultReceiver)>
<android.widget.Editor.HandleView: int getCurrentCursorOffset()>
<android.widget.CalendarViewLegacyDelegate.WeeksAdapter: int getCount()>
<android.opengl.GLErrorWrapper: void glRotatef(float,float,float,float)>
<android.app.PendingIntent.FinishedDispatcher: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int)>
<android.widget.CursorTreeAdapter.MyCursorHelper.MyDataSetObserver: void onChanged()>
<android.accounts.AccountManager.AmsTask: android.os.Bundle getResult()>
<android.app.ContextImpl: void enforceCallingPermission(java.lang.String,java.lang.String)>
<android.speech.tts.AudioPlaybackHandler: void stopForApp(java.lang.Object)>
<android.hardware.SystemSensorManager.SensorEventQueue: void <init>(android.hardware.SensorEventListener,android.os.Looper,android.hardware.SystemSensorManager,java.lang.String)>
<android.app.ApplicationPackageManager: void installPackage(android.net.Uri,android.content.pm.IPackageInstallObserver,int,java.lang.String)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: void setKey(android.security.keystore.AndroidKeyStoreKey)>
<android.widget.DatePicker.DatePickerSpinnerDelegate: int getDayOfMonth()>
<android.app.ContextImpl: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<android.app.NativeActivity.NativeContentView: void <init>(android.content.Context)>
<android.widget.RemoteViews.Action: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>
<android.accounts.AccountManager.AmsTask: void doWork()>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.NoPadding: int getAdditionalEntropyAmountForBegin()>
<android.test.InstrumentationTestCase: void runTest()>
<android.test.FlakyTest: int tolerance()>
<android.widget.CalendarViewLegacyDelegate: void setFocusedMonthDateColor(int)>
<android.animation.PathKeyframes.FloatKeyframesBase: java.lang.Object getValue(float)>
<android.media.MediaCodec.BufferMap.CodecBuffer: void setImage(android.media.Image)>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi.GCM.NoPadding: int engineGetOutputSize(int)>
<android.security.keystore.DelegatingX509Certificate: int getVersion()>
<android.animation.PropertyValuesHolder.FloatPropertyValuesHolder: void <init>(android.util.Property,float[])>
<android.app.ActivityThread.ApplicationThread: void scheduleTranslucentConversionComplete(android.os.IBinder,boolean)>
<android.net.Uri.AbstractHierarchicalUri: int getPort()>
<android.opengl.GLLogWrapper: void glGenTextures(int,java.nio.IntBuffer)>
<android.media.MediaRouter.VolumeChangeReceiver: void onReceive(android.content.Context,android.content.Intent)>
<android.view.IWindowManager: void stopAppFreezingScreen(android.os.IBinder,boolean)>
<android.widget.TimePickerClockDelegate: void onRestoreInstanceState(android.os.Parcelable)>
<android.app.ActivityTransitionCoordinator: boolean moveSharedElementWithParent()>
<android.opengl.EGLLogWrapper: boolean eglGetConfigAttrib(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,int,int[])>
<android.app.LauncherActivity.ActivityAdapter.ArrayFilter: android.widget.Filter.FilterResults performFiltering(java.lang.CharSequence)>
<android.speech.tts.PlaybackSynthesisCallback: boolean hasStarted()>
<android.sax.RootElement.Handler: void setDocumentLocator(org.xml.sax.Locator)>
<android.app.INotificationManager: void setPackagePeekable(java.lang.String,int,boolean)>
<android.app.ActivityTransitionState: void onStop()>
<android.app.BackStackRecord: void addTargets(android.transition.Transition,java.util.ArrayList)>
<android.opengl.GLErrorWrapper: void glFogx(int,int)>
<android.widget.ExpandableListConnector: void <init>(android.widget.ExpandableListAdapter)>
<android.opengl.GLLogWrapper: void glDrawTexxvOES(int[],int)>
<android.opengl.GLLogWrapper: void glNormalPointer(int,int,java.nio.Buffer)>
<android.app.Notification.BuilderRemoteViews: android.widget.RemoteViews clone()>
<android.opengl.GLErrorWrapper: void glGetTexGenxv(int,int,int[],int)>
<android.opengl.GLErrorWrapper: void glLightfv(int,int,float[],int)>
<android.opengl.GLErrorWrapper: void glTexGeni(int,int,int)>
<android.widget.Spinner.DropDownAdapter: boolean isEnabled(int)>
<android.widget.TimePickerSpinnerDelegate: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.app.ActivityThread.ApplicationThread: void scheduleSuicide()>
<android.widget.AbsListView.AdapterDataSetObserver: void onChanged()>
<android.hardware.SystemSensorManager.TriggerEventQueue: void dispatchSensorEvent(int,float[],int,long)>
<android.app.Instrumentation.1ContextMenuRunnable: void <init>(android.app.Instrumentation,android.app.Activity,int,int)>
<android.widget.RemoteViews.TextViewDrawableColorFilterAction: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>
<android.emoji.EmojiFactory.CustomLinkedHashMap: boolean removeEldestEntry(java.util.Map.Entry)>
<android.opengl.GLErrorWrapper: void glScalex(int,int,int)>
<android.telephony.JapanesePhoneNumberFormatter: void format(android.text.Editable)>
<android.view.IWindowManager: void clearForcedDisplaySize(int)>
<android.widget.CalendarViewLegacyDelegate.WeekView: void <init>(android.widget.CalendarViewLegacyDelegate,android.content.Context)>
<android.widget.RadialTimePickerView.IntHolder: int getValue()>
<android.text.TextDirectionHeuristics.TextDirectionHeuristicInternal: boolean defaultIsRtl()>
<android.preference.GenericInflater: java.lang.String getDefaultPackage()>
<android.view.ViewOverlay.OverlayViewGroup: void invalidate(int,int,int,int)>
<android.app.EnterTransitionCoordinator: android.transition.Transition getEnterViewsTransition()>
<android.renderscript.Type.CubemapFace: android.renderscript.Type.CubemapFace[] values()>
<android.speech.tts.FileSynthesisCallback: int getMaxBufferSize()>
<android.view.ViewRootImpl.TakenSurfaceHolder: void onUpdateSurface()>
<android.widget.DayPickerView: void <init>(android.content.Context)>
<android.opengl.GLErrorWrapper: void glGetPointerv(int,java.nio.Buffer[])>
<android.test.AndroidTestCase: void setUp()>
<android.app.Activity.HostCallbacks: void <init>(android.app.Activity)>
<android.graphics.drawable.RippleComponent: void <init>(android.graphics.drawable.RippleDrawable,android.graphics.Rect)>
<android.widget.AbsListView.InputConnectionWrapper: boolean commitText(java.lang.CharSequence,int)>
<android.view.IWindowSession: int addToDisplayWithoutInputChannel(android.view.IWindow,int,android.view.WindowManager.LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect)>
<android.widget.ActionMenuPresenter.OverflowMenuButton: boolean needsDividerAfter()>
<android.widget.ActivityChooserView.ActivityChooserViewAdapter: void setShowFooterView(boolean)>
<android.media.RemoteController.RcDisplay: void setCurrentClientId(int,android.app.PendingIntent,boolean)>
<android.app.ActivityThread.ApplicationThread: void setProcessState(int)>
<android.net.LocalSocketAddress.Namespace: android.net.LocalSocketAddress.Namespace valueOf(java.lang.String)>
<android.content.pm.IPackageManager: android.content.ComponentName getHomeActivities(java.util.List)>
<android.opengl.GLErrorWrapper: void glTexParameterf(int,int,float)>
<android.animation.PropertyValuesHolder.MultiIntValuesHolder: void <init>(java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,java.lang.Object[])>
<android.view.IWindowManager: void overridePendingAppTransitionInPlace(java.lang.String,int)>
<android.location.ILocationManager: boolean geocoderIsPresent()>
<android.view.ViewGroup.ChildListForAccessibility: int getChildIndex(android.view.View)>
<android.view.View.DeclaredOnClickListener: void onClick(android.view.View)>
<android.media.MediaRouter.Static: void onDisplayAdded(int)>
<android.security.keymaster.KeymasterIntArgument: void <init>(int,android.os.Parcel)>
<android.accounts.AccountManager.BaseFutureTask: void <init>(android.accounts.AccountManager,android.os.Handler)>
<android.widget.Editor.PositionListener: boolean onPreDraw()>
<android.opengl.GLLogWrapper: void glDeleteBuffers(int,java.nio.IntBuffer)>
<android.content.pm.IPackageManager: android.content.pm.ParceledListSlice getInstalledApplications(int,int)>
<android.location.LocalListenerHelper: void <init>(android.content.Context,java.lang.String)>
<android.media.ImageUtils: int getNumPlanesForFormat(int)>
<android.hardware.input.IInputManager: android.hardware.input.KeyboardLayout getKeyboardLayout(java.lang.String)>
<android.view.View.ScrollabilityCache: void setFadeColor(int)>
<android.media.MediaPlayer.TimeProvider: void onBuffering(boolean)>
<android.view.FrameInfo: void markDrawStart()>
<android.net.LocalSocketImpl: void shutdownOutput()>
<android.view.IWindowManager: void freezeRotation(int)>
<android.widget.Spinner.DialogPopup: void setPromptText(java.lang.CharSequence)>
<android.animation.PropertyValuesHolder.FloatPropertyValuesHolder: void <init>(android.util.Property,android.animation.Keyframes.FloatKeyframes)>
<android.text.DynamicLayout.ChangeWatcher: void onSpanChanged(android.text.Spannable,java.lang.Object,int,int,int,int)>
<android.hardware.location.IFusedLocationHardware: void registerSink(android.hardware.location.IFusedLocationHardwareSink)>
<android.widget.CalendarViewLegacyDelegate.WeeksAdapter: long getItemId(int)>
<android.preference.MultiSelectListPreference.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: int engineGetBlockSize()>
<android.net.Uri.StringUri: java.lang.String getQuery()>
<android.media.Utils: android.util.Range factorRange(android.util.Range,int)>
<android.util.MapCollections.MapIterator: java.lang.Object next()>
<android.security.keystore.AndroidKeyStoreECDSASignatureSpi.NONE.TruncateToFieldSizeMessageStreamer: byte[] doFinal(byte[],int,int,byte[],byte[])>
<android.animation.LayoutTransition.CleanupCallback: void onViewAttachedToWindow(android.view.View)>
<android.graphics.drawable.RippleBackground: void jumpValuesToExit()>
<android.net.Uri.OpaqueUri: java.lang.String getHost()>
<android.widget.FastScroller: int getWidth()>
<android.widget.AdapterView.AdapterDataSetObserver: void clearSavedState()>
<android.inputmethodservice.IInputMethodSessionWrapper: void finishSession()>
<android.app.SystemServiceRegistry.StaticOuterContextServiceFetcher: java.lang.Object createService(android.content.Context)>
<android.net.Uri.HierarchicalUri: java.lang.String getScheme()>
<android.animation.PathKeyframes.IntKeyframesBase: java.lang.Class getType()>
<android.view.IWindowManager: void setAnimationScale(int,float)>
<android.opengl.GLErrorWrapper: void glTexGenx(int,int,int)>
<android.content.pm.IPackageManager: boolean shouldShowRequestPermissionRationale(java.lang.String,java.lang.String,int)>
<android.app.ActivityTransitionCoordinator: boolean isViewsTransitionComplete()>
<android.widget.Editor.InsertionHandleView: void updateSelection(int)>
<android.text.DynamicLayout.ChangeWatcher: void beforeTextChanged(java.lang.CharSequence,int,int,int)>
<android.util.MapCollections: void colClear()>
<android.net.LocalSocketImpl: void finalize()>
<android.util.JsonToken: android.util.JsonToken[] values()>
<android.net.Uri.PathPart: android.net.Uri.PathPart fromDecoded(java.lang.String)>
<android.animation.PathKeyframes.SimpleKeyframes: void invalidateCache()>
<android.widget.SimpleMonthView: void onLayout(boolean,int,int,int,int)>
<android.widget.DatePicker.DatePickerSpinnerDelegate: void updateDate(int,int,int)>
<android.animation.AnimatorSet.Node: void addDependency(android.animation.AnimatorSet.Dependency)>
<android.widget.RemoteViewsService.RemoteViewsFactoryAdapter: android.widget.RemoteViews getViewAt(int)>
<android.net.LocalSocketImpl: java.io.FileDescriptor[] getAncillaryFileDescriptors()>
<android.content.pm.IPackageManager: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int,int)>
<android.graphics.Shader.TileMode: android.graphics.Shader.TileMode[] values()>
<android.widget.Editor.SelectionModifierCursorController: int getMaxTouchOffset()>
<android.graphics.Canvas.EdgeType: android.graphics.Canvas.EdgeType valueOf(java.lang.String)>
<android.opengl.GLErrorWrapper: void glGetFloatv(int,java.nio.FloatBuffer)>
<android.app.ActivityThread.GcIdler: boolean queueIdle()>
<android.app.ContextImpl: android.content.pm.PackageManager getPackageManager()>
<android.filterfw.GraphEnvironment.GraphHandle: android.filterfw.core.AsyncRunner getAsyncRunner(android.filterfw.core.FilterContext)>
<android.opengl.GLLogWrapper: void glClearDepthf(float)>
<android.opengl.GLErrorWrapper: void glLightModelfv(int,java.nio.FloatBuffer)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi: int engineGetBlockSize()>
<android.widget.RemoteViewsAdapter.RemoteViewsAdapterServiceConnection: void onServiceConnected(android.os.IBinder)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: int getAdditionalEntropyAmountForBegin()>
<android.app.ContextImpl: void sendBroadcastMultiplePermissions(android.content.Intent,java.lang.String[])>
<android.os.Handler.BlockingRunnable: void run()>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.PKCS1Padding: void initAlgorithmSpecificParameters(java.security.AlgorithmParameters)>
<android.app.BackStackRecord: android.app.FragmentTransaction add(int,android.app.Fragment,java.lang.String)>
<android.util.XmlPullAttributes: java.lang.String getAttributeValue(int)>
<android.app.MediaRouteButton.MediaRouterCallback: void onRouteUnselected(android.media.MediaRouter,int,android.media.MediaRouter.RouteInfo)>
<android.widget.ActionMenuPresenter.OverflowMenuButton: void <init>(android.widget.ActionMenuPresenter,android.content.Context)>
<android.opengl.GLErrorWrapper: void glTexGeniv(int,int,java.nio.IntBuffer)>
<android.app.SystemServiceRegistry.StaticServiceFetcher: java.lang.Object createService()>
<android.content.pm.IPackageManager: java.lang.String[] canonicalToCurrentPackageNames(java.lang.String[])>
<android.widget.Editor.TextActionModeCallback: boolean onCreateActionMode(android.view.ActionMode,android.view.Menu)>
<android.widget.CalendarViewLegacyDelegate.WeeksAdapter: void setSelectedDay(java.util.Calendar)>
<android.widget.DayPickerView: long getMinDate()>
<android.opengl.GLSurfaceView.BaseConfigChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])>
<android.content.pm.IPackageManager: int[] getPackageGids(java.lang.String,int)>
<android.text.Layout.Ellipsizer: char charAt(int)>
<android.widget.RemoteViews.Action: void updateMemoryUsageEstimate(android.widget.RemoteViews.MemoryUsageCounter)>
<android.provider.MediaStore.InternalThumbnails: android.graphics.Bitmap getThumbnail(android.content.ContentResolver,long,long,int,android.graphics.BitmapFactory.Options,android.net.Uri,boolean)>
<android.opengl.GLErrorWrapper: boolean glIsTexture(int)>
<android.opengl.GLLogWrapper: void glNormal3f(float,float,float)>
<android.view.IWindowManager: boolean isViewServerRunning()>
<android.widget.RtlSpacingHelper: int getRight()>
<android.view.IWindowManager: boolean isKeyguardSecure()>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi.AdditionalAuthenticationDataStream: android.security.keymaster.OperationResult finish(byte[],byte[])>
<android.hardware.SystemSensorManager.BaseEventQueue: void removeSensorEvent(android.hardware.Sensor)>
<android.webkit.WebSettings.ZoomDensity: int getValue()>
<android.opengl.GLErrorWrapper: void glGetFloatv(int,float[],int)>
<android.opengl.GLLogWrapper: boolean glIsTexture(int)>
<android.speech.tts.PlaybackQueueItem: void run()>
<android.inputmethodservice.IInputMethodSessionWrapper: void toggleSoftInput(int,int)>
<android.media.WebVttRenderingWidget.SpanLayout: void update()>
<android.widget.RemoteViewsAdapter.RemoteViewsMetaData: void reset()>
<android.view.AccessibilityIterators.CharacterTextSegmentIterator: void onLowMemory()>
<android.app.ApplicationPackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int,int)>
<android.widget.RemoteViews.Action: java.lang.String getActionName()>
<android.renderscript.Program.ProgramParam: android.renderscript.Program.ProgramParam[] values()>
<android.os.Handler.BlockingRunnable: void <init>(java.lang.Runnable)>
<android.widget.Spinner.DropDownAdapter: void <init>(android.widget.SpinnerAdapter,android.content.res.Resources.Theme)>
<android.widget.NumberPicker.AccessibilityNodeProviderImpl: java.util.List findAccessibilityNodeInfosByText(java.lang.String,int)>
<android.widget.DatePicker.DatePickerSpinnerDelegate: int getMonth()>
<android.media.AudioHandle: java.lang.String toString()>
<android.app.LoadedApk.ServiceDispatcher.DeathMonitor: void binderDied()>
<android.location.GpsMeasurementListenerTransport: void <init>(android.content.Context,android.location.ILocationManager)>
<android.view.InputFilter.H: void handleMessage(android.os.Message)>
<android.media.AsyncPlayer.Command: java.lang.String toString()>
<android.opengl.GLLogWrapper: void glGetLightxv(int,int,int[],int)>
<android.renderscript.ProgramStore.BlendSrcFunc: android.renderscript.ProgramStore.BlendSrcFunc[] values()>
<android.widget.RemoteViews.Action: int describeContents()>
<android.view.ViewRootImpl.W: void onAnimationStarted(int)>
<android.os.StrictMode.StrictModeResourceMismatchViolation: void <init>(int,java.lang.Object)>
<android.widget.RemoteViews.SetDrawableParameters: void <init>(android.widget.RemoteViews,android.os.Parcel)>
<android.view.IWindowManager: int getPreferredOptionsPanelGravity()>
<android.animation.StateListAnimator.StateListAnimatorConstantState: java.lang.Object newInstance()>
<android.gesture.Instance: android.gesture.Instance createInstance(int,int,android.gesture.Gesture,java.lang.String)>
<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask: java.lang.Object doInBackground(java.lang.Object[])>
<android.accounts.AccountManager.AmsTask: android.os.Bundle getResult(long,java.util.concurrent.TimeUnit)>
<android.content.res.XmlBlock.Parser: java.lang.String getAttributeType(int)>
<android.widget.Editor.SuggestionsPopupWindow.SuggestionAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.hardware.location.IFusedLocationHardwareSink: void onLocationAvailable(android.location.Location[])>
<android.content.pm.IPackageManager: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int,int)>
<android.content.res.DrawableCache: void <init>(android.content.res.Resources)>
<android.app.ApplicationPackageManager: java.util.List queryIntentActivitiesAsUser(android.content.Intent,int,int)>
<android.hardware.location.IFusedLocationHardwareSink: void onStatusChanged(int)>
<android.view.ViewRootImpl.InputStage: void apply(android.view.ViewRootImpl.QueuedInputEvent,int)>
<android.view.IWindowManager: void updateRotation(boolean,boolean)>
<android.net.Network.NetworkBoundSocketFactory: java.net.Socket createSocket()>
<android.opengl.GLLogWrapper: void glTexGeniv(int,int,int[],int)>
<android.app.INotificationManager: void setPackagePriority(java.lang.String,int,int)>
<android.inputmethodservice.IInputMethodSessionWrapper: void displayCompletions(android.view.inputmethod.CompletionInfo[])>
<android.widget.Editor.CorrectionHighlighter: void <init>(android.widget.Editor)>
<android.inputmethodservice.KeyboardView.SwipeTracker: void computeCurrentVelocity(int)>
<android.app.ActivityTransitionState: void readState(android.os.Bundle)>
<android.test.AndroidTestCase: android.content.Context getTestContext()>
<android.animation.PathKeyframes.SimpleKeyframes: java.lang.Object clone()>
<android.widget.ActivityChooserView.ActivityChooserViewAdapter: int getCount()>
<android.view.ViewRootImpl.TakenSurfaceHolder: boolean onAllowLockCanvas()>
<android.preference.DialogPreference.SavedState: void <init>(android.os.Parcelable)>
<android.media.RemoteController.TopTransportSessionListener: void onActiveSessionsChanged(java.util.List)>
<android.media.ClosedCaptionWidget.CCLineBox: void onDraw(android.graphics.Canvas)>
<android.widget.DatePicker.DatePickerSpinnerDelegate: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.util.XmlPullAttributes: int getAttributeUnsignedIntValue(int,int)>
<android.os.StrictMode.AndroidBlockGuardPolicy: void onWriteToDisk()>
<android.app.LoaderManagerImpl.LoaderInfo: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.hardware.location.IFusedLocationHardware: void updateBatchingOptions(int,android.location.FusedBatchOptions)>
<android.net.Uri.PathPart: android.net.Uri.PathPart fromEncoded(java.lang.String)>
<android.security.IKeystoreService: int unlock(int,java.lang.String)>
<android.opengl.GLSurfaceView.EglHelper: void throwEglException(java.lang.String,int)>
<android.widget.DatePickerCalendarDelegate.SavedState: int getListPosition()>
<android.os.StrictMode.StrictModeDiskReadViolation: void <init>(int)>
<android.content.res.XmlBlock: void <init>(byte[],int,int)>
<android.preference.PreferenceScreen.SavedState: void <init>(android.os.Parcelable)>
<android.opengl.GLErrorWrapper: void glMatrixIndexPointerOES(int,int,int,int)>
<android.opengl.GLLogWrapper: void glMaterialfv(int,int,float[],int)>
<android.opengl.GLLogWrapper: void glAlphaFunc(int,float)>
<android.widget.SimpleMonthView: void setDayOfWeekTextAppearance(int)>
<android.media.WebVttRenderingWidget.CueLayout: void update()>
<android.opengl.GLErrorWrapper: void glLightxv(int,int,java.nio.IntBuffer)>
<android.opengl.GLSurfaceView.GLThreadManager: void releaseEglContextLocked(android.opengl.GLSurfaceView.GLThread)>
<android.media.MediaCodec.EventHandler: void handleMessage(android.os.Message)>
<android.app.INotificationManager: void requestInterruptionFilterFromListener(android.service.notification.INotificationListener,int)>
<android.opengl.GLLogWrapper: void glLoadPaletteFromModelViewMatrixOES()>
<android.net.Uri.StringUri: android.net.Uri.Builder buildUpon()>
<android.view.FrameInfo: void markPerformTraversalsStart()>
<android.app.ExitTransitionCoordinator: void <init>(android.app.Activity,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,boolean)>
<android.app.ActivityTransitionCoordinator: void setResultReceiver(android.os.ResultReceiver)>
<android.security.IKeystoreService: int addRngEntropy(byte[])>
<android.renderscript.RenderScript.ContextType: android.renderscript.RenderScript.ContextType valueOf(java.lang.String)>
<android.inputmethodservice.IInputMethodSessionWrapper.ImeInputEventReceiver: void onInputEvent(android.view.InputEvent)>
<android.graphics.PathDashPathEffect.Style: android.graphics.PathDashPathEffect.Style valueOf(java.lang.String)>
<android.text.SpannableStringInternal: char charAt(int)>
<android.security.IKeystoreService: int ungrant(java.lang.String,int)>
<android.widget.CalendarViewMaterialDelegate: void setWeekDayTextAppearance(int)>
<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: void loadAlgorithmSpecificParametersFromBeginResult(android.security.keymaster.KeymasterArguments)>
<android.widget.ExpandableListConnector.MyDataSetObserver: void onChanged()>
<android.opengl.GLLogWrapper: void glFlush()>
<android.content.pm.IPackageManager: boolean addPermission(android.content.pm.PermissionInfo)>
<android.widget.RemoteViews.TextViewDrawableColorFilterAction: void <init>(android.widget.RemoteViews,android.os.Parcel)>
<android.content.pm.IPackageManager: void registerMoveCallback(android.content.pm.IPackageMoveObserver)>
<android.widget.SimpleMonthView.MonthViewTouchHelper: int getVirtualViewAt(float,float)>
<android.app.ApplicationPackageManager.MoveCallbackDelegate: void onStatusChanged(int,int,long)>
<android.app.ContextImpl: java.lang.String getPackageCodePath()>
<android.security.keystore.AndroidKeyStoreECDSASignatureSpi: int getGroupSizeBits()>
<android.widget.CalendarViewLegacyDelegate: void setWeekDayTextAppearance(int)>
<android.media.AudioHandle: int hashCode()>
<android.view.IWindowSession: android.view.IWindowId getWindowId(android.os.IBinder)>
<android.opengl.GLLogWrapper: void glBlendEquation(int)>
<android.location.LocalListenerHelper: boolean add(java.lang.Object)>
<android.app.ApplicationPackageManager: android.content.res.Resources getResourcesForApplication(java.lang.String)>
<android.hardware.SystemSensorManager.BaseEventQueue: void dispatchFlushCompleteEvent(int)>
<android.widget.Editor.PositionListener: int getPositionY()>
<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: void initAlgorithmSpecificParameters(java.security.AlgorithmParameters)>
<android.preference.ListPreference.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.test.InstrumentationTestCase: android.app.Activity launchActivity(java.lang.String,java.lang.Class,android.os.Bundle)>
<android.text.DynamicLayout.ChangeWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>
<android.opengl.GLSurfaceView.EglHelper: void <init>(java.lang.ref.WeakReference)>
<android.preference.EditTextPreference.SavedState: void <init>(android.os.Parcel)>
<android.widget.RemoteViews.TextViewSizeAction: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>
<android.widget.TimePickerClockDelegate: void setEnabled(boolean)>
<android.view.AccessibilityInteractionController: void performAccessibilityActionClientThread(long,int,android.os.Bundle,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long)>
<android.preference.ListPreference.SavedState: void <init>(android.os.Parcelable)>
<android.security.keystore.AndroidKeyStoreSignatureSpiBase: void addAlgorithmSpecificParametersToBegin(android.security.keymaster.KeymasterArguments)>
<android.widget.GridLayout.Interval: java.lang.String toString()>
<android.security.KeyStore.State: android.security.KeyStore.State[] values()>
<android.opengl.GLLogWrapper: void glTexEnviv(int,int,int[],int)>
<android.webkit.JsDialogHelper.CancelListener: void onCancel(android.content.DialogInterface)>
<android.opengl.GLErrorWrapper: void glCurrentPaletteMatrixOES(int)>
<android.opengl.GLLogWrapper: boolean glIsEnabled(int)>
<android.widget.AbsListView.PerformClick: void run()>
<android.print.PrintManager.PrintJobStateChangeListenerWrapper: void onPrintJobStateChanged(android.print.PrintJobId)>
<android.os.MemoryFile.MemoryOutputStream: void write(int)>
<android.util.XmlPullAttributes: int getAttributeResourceValue(int,int)>
<android.widget.GridLayout.Axis: void setCount(int)>
<android.security.IKeystoreService: int getKeyCharacteristics(java.lang.String,android.security.keymaster.KeymasterBlob,android.security.keymaster.KeymasterBlob,android.security.keymaster.KeyCharacteristics)>
<android.speech.RecognitionService.RecognitionServiceBinder: void clearReference()>
<android.app.ActivityTransitionCoordinator: android.os.Bundle captureSharedElementState()>
<android.app.IntentService.ServiceHandler: void handleMessage(android.os.Message)>
<android.widget.ActivityChooserView.Callbacks: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<android.opengl.GLLogWrapper: void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.app.ActivityTransitionCoordinator: android.transition.Transition getViewsTransition()>
<android.view.IWindowManager: int watchRotation(android.view.IRotationWatcher)>
<android.opengl.GLLogWrapper: boolean glIsRenderbufferOES(int)>
<android.opengl.GLErrorWrapper: void glTexParameterxv(int,int,java.nio.IntBuffer)>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getActivityIcon(android.content.Intent)>
<android.widget.CompoundButton.SavedState: java.lang.String toString()>
<android.content.SyncAdaptersCache.MySerializer: android.content.SyncAdapterType createFromXml(org.xmlpull.v1.XmlPullParser)>
<android.app.ActivityTransitionCoordinator.FixedEpicenterCallback: void setEpicenter(android.graphics.Rect)>
<android.view.IWindowManager: boolean inKeyguardRestrictedInputMode()>
<android.app.BackStackState: void writeToParcel(android.os.Parcel,int)>
<com.android.internal.annotations.VisibleForTesting.Visibility: com.android.internal.annotations.VisibleForTesting.Visibility valueOf(java.lang.String)>
<android.util.FastImmutableArraySet.FastIterator: boolean hasNext()>
<android.opengl.GLErrorWrapper: void glMultiTexCoord4x(int,int,int,int,int)>
<android.widget.ActivityChooserView.ActivityChooserViewAdapter: int getActivityCount()>
<android.sax.BadXmlException: void <init>(java.lang.String,org.xml.sax.Locator)>
<android.security.IKeystoreService: int importKey(java.lang.String,android.security.keymaster.KeymasterArguments,int,byte[],int,int,android.security.keymaster.KeyCharacteristics)>
<android.net.Uri.HierarchicalUri: void writeToParcel(android.os.Parcel,int)>
<android.widget.SuggestionsAdapter: void bindView(android.view.View,android.content.Context,android.database.Cursor)>
<android.inputmethodservice.IInputMethodSessionWrapper: void <init>(android.content.Context,android.view.inputmethod.InputMethodSession,android.view.InputChannel)>
<android.opengl.GLErrorWrapper: void glBlendFunc(int,int)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: void engineUpdateAAD(byte[],int,int)>
<android.opengl.GLErrorWrapper: void glColorMask(boolean,boolean,boolean,boolean)>
<android.media.AsyncPlayer.Thread: void run()>
<android.animation.KeyframeSet: android.animation.PathKeyframes ofPath(android.graphics.Path,float)>
<android.content.res.XmlBlock.Parser: int getAttributeListValue(java.lang.String,java.lang.String,java.lang.String[],int)>
<android.opengl.GLLogWrapper: void glLogicOp(int)>
<android.widget.TimePickerClockDelegate: void onValueSelected(int,int,boolean)>
<android.opengl.GLErrorWrapper: void glLightModelxv(int,int[],int)>
<android.app.ApplicationPackageManager: void replacePreferredActivityAsUser(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,int)>
<android.app.ActivityTransitionCoordinator.GhostViewListeners: android.view.View getView()>
<android.media.RemoteController.RcDisplay: void setTransportControlInfo(int,int,int)>
<android.opengl.GLLogWrapper: void glGenFramebuffersOES(int,int[],int)>
<android.app.ActivityThread.ApplicationThread: void scheduleNewIntent(java.util.List,android.os.IBinder)>
<android.telephony.PhoneNumberUtils.CountryCallingCodeAndNewIndex: void <init>(int,int)>
<android.content.pm.IPackageManager: int getFlagsForUid(int)>
<android.app.ActivityThread.AppBindData: java.lang.String toString()>
<android.widget.TimePickerClockDelegate.Node: boolean containsKey(int)>
<android.opengl.GLErrorWrapper: void glBlendEquation(int)>
<android.hardware.location.IFusedLocationHardware: void unregisterSink(android.hardware.location.IFusedLocationHardwareSink)>
<android.media.DecoderCapabilities.AudioDecoder: android.media.DecoderCapabilities.AudioDecoder[] values()>
<android.content.ContentProvider.Transport: android.net.Uri canonicalize(java.lang.String,android.net.Uri)>
<android.media.ImageWriter.WriterSurfaceImage.SurfacePlane: java.nio.ByteBuffer getBuffer()>
<android.widget.NumberPicker.InputTextFilter: int getInputType()>
<android.opengl.GLLogWrapper: void glGetLightfv(int,int,java.nio.FloatBuffer)>
<android.opengl.GLLogWrapper: void glGetFramebufferAttachmentParameterivOES(int,int,int,java.nio.IntBuffer)>
<android.media.Utils: android.util.Range parseIntRange(java.lang.Object,android.util.Range)>
<android.app.ApplicationPackageManager: boolean isUpgrade()>
<android.util.MapCollections.MapIterator: boolean equals(java.lang.Object)>
<android.hardware.ICameraService: int getNumberOfCameras(int)>
<android.content.pm.IPackageManager: void restoreIntentFilterVerification(byte[],int)>
<android.net.Uri.PathSegments: java.lang.String get(int)>
<android.widget.CalendarView.AbstractCalendarViewDelegate: int getFocusedMonthDateColor()>
<android.opengl.GLLogWrapper: void glDrawTexxOES(int,int,int,int,int)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: void engineSetPadding(java.lang.String)>
<android.widget.RemoteViews.BitmapCache: int getBitmapId(android.graphics.Bitmap)>
<android.webkit.WebSyncManager: void resetSync()>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: void engineUpdateAAD(java.nio.ByteBuffer)>
<android.content.pm.IPackageManager: void clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver,int)>
<android.drm.DrmManagerClient.EventHandler: void handleMessage(android.os.Message)>
<android.location.LocalListenerHelper: void foreach(android.location.LocalListenerHelper.ListenerOperation)>
<android.accounts.AccountManager.Future2Task: void done()>
<android.widget.AbsSpinner.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.opengl.GLErrorWrapper: void glDrawTexxvOES(int[],int)>
<android.app.ActivityThread.ApplicationThread: void scheduleConfigurationChanged(android.content.res.Configuration)>
<android.widget.GridLayout.Bounds: int size(boolean)>
<android.view.ViewPropertyAnimator.AnimatorEventListener: void onAnimationEnd(android.animation.Animator)>
<android.opengl.GLErrorWrapper: void glClearColor(float,float,float,float)>
<android.os.ParcelFileDescriptor.Status: java.lang.String toString()>
<android.net.LocalSocketImpl: void setOption(int,java.lang.Object)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.OAEPWithMGF1Padding: void initAlgorithmSpecificParameters()>
<android.widget.Editor.SpanController: void hide()>
<android.app.ContextImpl.ApplicationContentResolver: void appNotRespondingViaProvider(android.content.IContentProvider)>
<android.app.ContextImpl: java.io.File getFilesDir()>
<android.view.FocusFinder.SequentialFocusComparator: void recycle()>
<android.content.res.DrawableCache: boolean shouldInvalidateEntry(android.graphics.drawable.Drawable.ConstantState,int)>
<android.opengl.GLErrorWrapper: void glEnable(int)>
<android.app.BackStackRecord: android.app.FragmentTransaction setTransition(int)>
<android.opengl.GLLogWrapper: void glClipPlanex(int,int[],int)>
<android.location.GpsMeasurementListenerTransport.ListenerTransport: void onStatusChanged(int)>
<android.location.ILocationManager: void requestLocationUpdates(android.location.LocationRequest,android.location.ILocationListener,android.app.PendingIntent,java.lang.String)>
<android.widget.RemoteViews.SetOnClickPendingIntent: void <init>(android.widget.RemoteViews,int,android.app.PendingIntent)>
<android.widget.ActionMenuPresenter.ActionButtonSubmenu: void onDismiss()>
<android.app.ContextImpl: int getUserId()>
<android.location.LocationManager.ListenerTransport: void onProviderEnabled(java.lang.String)>
<android.opengl.GLLogWrapper: void glClientActiveTexture(int)>
<android.print.PrintManager.PrintDocumentAdapterDelegate: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)>
<android.app.SharedPreferencesImpl: int getInt(java.lang.String,int)>
<android.widget.Editor.HandleView: boolean offsetHasBeenChanged()>
<android.content.res.XmlBlock.Parser: int getAttributeUnsignedIntValue(java.lang.String,java.lang.String,int)>
<android.app.BackStackRecord: int commit()>
<android.text.Layout.Alignment: android.text.Layout.Alignment[] values()>
<android.animation.PathKeyframes: java.lang.Object clone()>
<android.widget.CalendarViewLegacyDelegate: void setWeekSeparatorLineColor(int)>
<android.widget.AppSecurityPermissions.PermissionInfoComparator: int compare(java.lang.Object,java.lang.Object)>
<android.opengl.GLLogWrapper: boolean glIsBuffer(int)>
<android.opengl.GLSurfaceView.GLThread: int getRenderMode()>
<android.app.SharedPreferencesImpl.EditorImpl: android.content.SharedPreferences.Editor putFloat(java.lang.String,float)>
<android.app.FragmentManagerImpl.AnimateOnHWLayerIfNeededListener: void onAnimationStart(android.animation.Animator)>
<android.widget.RemoteViews.SetRemoteViewsAdapterIntent: void writeToParcel(android.os.Parcel,int)>
<android.widget.Editor.PositionListener: int getPositionX()>
<android.util.MapCollections: java.util.Map colGetMap()>
<android.opengl.GLLogWrapper: void glGetBufferParameteriv(int,int,java.nio.IntBuffer)>
<android.net.Uri.AbstractPart: void writeTo(android.os.Parcel)>
<android.app.ContextImpl: android.view.DisplayAdjustments getDisplayAdjustments(int)>
<android.media.MediaPlayer.TimeProvider.EventHandler: void handleMessage(android.os.Message)>
<android.location.ILocationManager: void requestGeofence(android.location.LocationRequest,android.location.Geofence,android.app.PendingIntent,java.lang.String)>
<android.animation.PathKeyframes: java.util.List getKeyframes()>
<android.widget.Toolbar.ExpandedActionViewMenuPresenter: void setCallback(com.android.internal.view.menu.MenuPresenter.Callback)>
<android.app.LoadedApk.WarningContextClassLoader: void setClassAssertionStatus(java.lang.String,boolean)>
<android.app.INotificationManager: int getInterruptionFilterFromListener(android.service.notification.INotificationListener)>
<android.widget.CursorFilter: java.lang.CharSequence convertResultToString(java.lang.Object)>
<android.widget.TimePickerClockDelegate.SavedState: boolean is24HourMode()>
<android.content.res.XmlBlock.Parser: boolean isWhitespace()>
<android.animation.AnimatorSet.DependencyListener: void onAnimationEnd(android.animation.Animator)>
<android.widget.PopupWindow.PopupDecorView: void cancelTransitions()>
<android.content.SearchRecentSuggestionsProvider.DatabaseHelper: void <init>(android.content.Context,int)>
<android.media.Utils: int parseIntSafely(java.lang.Object,int)>
<android.security.keystore.KeyStoreCryptoOperationUtils: byte[] getRandomBytesToMixIntoKeystoreRng(java.security.SecureRandom,int)>
<android.widget.CalendarViewLegacyDelegate: long getMinDate()>
<android.content.res.XmlBlock.Parser: int nextTag()>
<android.security.keystore.DelegatingX509Certificate: java.security.Principal getIssuerDN()>
<android.widget.GridLayout.Assoc: android.widget.GridLayout.Assoc of(java.lang.Class,java.lang.Class)>
<android.widget.TabHost.IntentContentStrategy: android.view.View getContentView()>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: byte[] engineWrap(java.security.Key)>
<android.util.ReflectiveProperty: void set(java.lang.Object,java.lang.Object)>
<android.speech.tts.AbstractEventLogger: void onRequestProcessingStart()>
<android.widget.YearPickerView.YearAdapter: int getCount()>
<android.app.ContextImpl: android.content.Context getReceiverRestrictedContext()>
<android.opengl.GLLogWrapper: void glDisableClientState(int)>
<android.widget.FastScroller: void stop()>
<android.net.wifi.SupplicantState: boolean isValidState(android.net.wifi.SupplicantState)>
<android.opengl.GLLogWrapper: void glGenTextures(int,int[],int)>
<android.net.Uri.StringUri: java.lang.String getPath()>
<android.media.WebVttRenderingWidget.CueLayout: boolean isActive()>
<android.opengl.GLSurfaceView.GLThread: void surfaceDestroyed()>
<android.opengl.GLLogWrapper: void glDrawTexfvOES(java.nio.FloatBuffer)>
<android.opengl.GLLogWrapper: void glDrawTexivOES(int[],int)>
<android.util.XmlPullAttributes: java.lang.String getPositionDescription()>
<android.widget.ScrollView.SavedState: void <init>(android.os.Parcel)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.NoPadding: void initAlgorithmSpecificParameters()>
<android.telecom.InCallService.InCallServiceBinder: void onCallAudioStateChanged(android.telecom.CallAudioState)>
<android.widget.TimePickerSpinnerDelegate: int getCurrentMinute()>
<android.content.res.DrawableCache: boolean shouldInvalidateEntry(java.lang.Object,int)>
<android.widget.Gallery.FlingRunnable: void <init>(android.widget.Gallery)>
<android.net.LocalSocketImpl: java.io.OutputStream getOutputStream()>
<android.view.AccessibilityIterators.WordTextSegmentIterator: int[] preceding(int)>
<android.graphics.drawable.RippleBackground: boolean drawSoftware(android.graphics.Canvas,android.graphics.Paint)>
<android.view.AccessibilityIterators.WordTextSegmentIterator: int[] following(int)>
<android.media.Tokenizer.DataTokenizer: void tokenize()>
<android.widget.RadialTimePickerView.IntHolder: void setValue(int)>
<android.app.Activity.HostCallbacks: void onAttachFragment(android.app.Fragment)>
<android.app.LoadedApk.WarningContextClassLoader: void setPackageAssertionStatus(java.lang.String,boolean)>
<android.util.MapCollections.MapIterator: java.lang.String toString()>
<android.content.res.XmlBlock.Parser: int getLineNumber()>
<android.media.MediaPlayer.TimeProvider: void notifyAt(long,android.media.MediaTimeProvider.OnMediaTimeListener)>
<android.opengl.GLLogWrapper: void glGenBuffers(int,java.nio.IntBuffer)>
<android.widget.Editor.ProcessTextIntentActionsHandler: void onInitializeMenu(android.view.Menu)>
<android.filterfw.core.GenerateProgramPort: java.lang.Class type()>
<android.widget.Spinner.SpinnerPopup: void show(int,int)>
<android.util.MapCollections.EntrySet: java.lang.Object[] toArray(java.lang.Object[])>
<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache: android.widget.RemoteViewsAdapter.RemoteViewsIndexMetaData getMetaDataAt(int)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.NoPadding: java.security.AlgorithmParameters engineGetParameters()>
<android.app.ActivityTransitionCoordinator.ContinueTransitionListener: void <init>(android.app.ActivityTransitionCoordinator)>
<android.preference.PreferenceScreen.SavedState: void <init>(android.os.Parcel)>
<android.opengl.GLErrorWrapper: void glMultMatrixf(float[],int)>
<android.text.TextLine: android.text.TextLine obtain()>
<android.renderscript.Mesh.Primitive: android.renderscript.Mesh.Primitive[] values()>
<android.transition.TranslationAnimationCreator.TransitionPositionListener: void onTransitionPause(android.transition.Transition)>
<android.opengl.GLLogWrapper: int glQueryMatrixxOES(java.nio.IntBuffer,java.nio.IntBuffer)>
<android.test.AndroidTestCase: void setTestContext(android.content.Context)>
<android.widget.Editor.HandleView: void updatePosition(float,float)>
<android.inputmethodservice.IInputMethodWrapper: void setSessionEnabled(com.android.internal.view.IInputMethodSession,boolean)>
<android.net.VpnService.Callback: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>
<android.widget.Toolbar.SavedState: void <init>(android.os.Parcelable)>
<android.widget.ExpandableListConnector.GroupMetadata: int compareTo(java.lang.Object)>
<android.widget.Editor.SelectionEndHandleView: boolean onTouchEvent(android.view.MotionEvent)>
<android.app.ContextImpl: android.database.sqlite.SQLiteDatabase openOrCreateDatabase(java.lang.String,int,android.database.sqlite.SQLiteDatabase.CursorFactory)>
<android.app.FragmentManagerImpl.AnimateOnHWLayerIfNeededListener: void <init>(android.view.View)>
<android.net.Uri.StringUri: java.lang.String getEncodedPath()>
<android.opengl.GLErrorWrapper: void glTexParameteriv(int,int,java.nio.IntBuffer)>
<android.filterfw.core.StopWatch: void start()>
<android.app.Instrumentation.SyncRunnable: void waitForComplete()>
<android.widget.DatePickerCalendarDelegate: void onRestoreInstanceState(android.os.Parcelable)>
<android.widget.RemoteViews.SetOnClickFillInIntent: void writeToParcel(android.os.Parcel,int)>
<android.opengl.GLErrorWrapper: void glFrontFace(int)>
<android.util.MapCollections.EntrySet: java.util.Iterator iterator()>
<android.app.INotificationManager: android.content.ComponentName getEffectsSuppressor()>
<android.widget.Spinner.SpinnerPopup: android.graphics.drawable.Drawable getBackground()>
<android.view.IWindowSession: void wallpaperOffsetsComplete(android.os.IBinder)>
<android.location.ILocationManager: java.lang.String getFromLocation(double,double,int,android.location.GeocoderParams,java.util.List)>
<android.view.AccessibilityInteractionController.AddNodeInfosForViewId: void reset()>
<android.opengl.GLSurfaceView.GLThread: boolean ableToDraw()>
<android.widget.AccessibilityIterators.LineTextSegmentIterator: android.widget.AccessibilityIterators.LineTextSegmentIterator getInstance()>
<android.widget.RemoteViewsService.RemoteViewsFactoryAdapter: int getViewTypeCount()>
<android.view.IWindowManager: android.graphics.Bitmap screenshotApplications(android.os.IBinder,int,int,int)>
<android.opengl.GLErrorWrapper: void glNormalPointer(int,int,java.nio.Buffer)>
<android.net.LocalSocketImpl: android.net.LocalSocketAddress getSockAddress()>
<android.widget.DayPickerView: void onRangeChanged()>
<android.text.Layout.SpannedEllipsizer: int getSpanStart(java.lang.Object)>
<android.net.Uri.PathSegments: int size()>
<android.renderscript.ProgramVertexFixedFunction.InternalBuilder: void <init>(android.renderscript.RenderScript)>
<android.app.ActivityTransitionCoordinator: void setOriginalSharedElementState(java.util.ArrayList,java.util.ArrayList)>
<android.animation.PropertyValuesHolder.PointFToFloatArray: java.lang.Object convert(java.lang.Object)>
<android.view.FocusFinder.SequentialFocusComparator: int compare(java.lang.Object,java.lang.Object)>
<android.widget.ActionMenuPresenter.OverflowMenuButton: boolean needsDividerBefore()>
<android.hardware.SystemSensorManager.TriggerEventQueue: void removeSensorEvent(android.hardware.Sensor)>
<android.opengl.GLSurfaceView.EglHelper: boolean createSurface()>
<android.hardware.SystemSensorManager.SensorEventQueue: void dispatchFlushCompleteEvent(int)>
<android.view.ViewGroup.ChildListForAccessibility: int getChildCount()>
<android.widget.ListView.ArrowScrollFocusResult: int getSelectedPosition()>
<android.net.LocalSocketImpl: void bind(android.net.LocalSocketAddress)>
<android.widget.ExpandableListView.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.app.ActivityView.ActivityContainerCallback: void setVisible(android.os.IBinder,boolean)>
<android.opengl.GLLogWrapper.PointerInfo: int sizeof(int)>
<android.opengl.GLLogWrapper: void glPointParameterfv(int,float[],int)>
<android.widget.TimePicker.AbstractTimePickerDelegate: void setCurrentLocale(java.util.Locale)>
<android.app.ActivityTransitionCoordinator: void notifySharedElementEnd(java.util.ArrayList)>
<android.content.AsyncTaskLoader.LoadTask: void onPostExecute(java.lang.Object)>
<android.net.Uri.StringUri: java.lang.String parsePath(java.lang.String,int)>
<android.app.ContextImpl: android.content.res.Resources getResources()>
<android.os.CommonTimeUtils: void <init>(android.os.IBinder,java.lang.String)>
<android.app.ApplicationPackageManager: void installPackageWithVerification(android.net.Uri,android.app.PackageInstallObserver,int,java.lang.String,android.net.Uri,android.content.pm.ManifestDigest,android.content.pm.ContainerEncryptionParams)>
<android.app.ApplicationPackageManager: android.content.Intent getLeanbackLaunchIntentForPackage(java.lang.String)>
<android.preference.PreferenceInflater: void <init>(android.content.Context,android.preference.PreferenceManager)>
<android.location.ILocationManager: java.lang.String getNetworkProviderPackage()>
<android.app.ApplicationPackageManager: android.content.pm.ProviderInfo resolveContentProvider(java.lang.String,int)>
<android.os.CancellationSignal.Transport: void cancel()>
<android.app.SharedPreferencesImpl.EditorImpl: void <init>(android.app.SharedPreferencesImpl)>
<android.widget.RemoteViewsService.RemoteViewsFactoryAdapter: void onDestroy(android.content.Intent)>
<android.widget.ScrollView.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.app.BackStackState: android.app.BackStackRecord instantiate(android.app.FragmentManagerImpl)>
<android.bluetooth.le.BluetoothLeUtils: void checkAdapterStateOn(android.bluetooth.BluetoothAdapter)>
<android.app.ContextImpl: void removeStickyBroadcast(android.content.Intent)>
<android.hardware.SystemSensorManager.TriggerEventQueue: void addSensorEvent(android.hardware.Sensor)>
<android.app.LoadedApk.ServiceDispatcher: void doConnected(android.content.ComponentName,android.os.IBinder)>
<android.widget.TimePickerClockDelegate: boolean isEnabled()>
<android.net.LocalSocketAddress.Namespace: android.net.LocalSocketAddress.Namespace[] values()>
<android.renderscript.ProgramFragmentFixedFunction.InternalBuilder: android.renderscript.ProgramFragmentFixedFunction create()>
<android.widget.ActivityChooserModel.PersistHistoryAsyncTask: java.lang.Object doInBackground(java.lang.Object[])>
<android.security.keystore.DelegatingX509Certificate: boolean[] getIssuerUniqueID()>
<android.app.ActivityTransitionState: void saveState(android.os.Bundle)>
<android.app.ContextImpl: void startActivities(android.content.Intent[])>
<android.widget.DatePickerCalendarDelegate: int getMonth()>
<android.widget.TimePickerClockDelegate: void setCurrentHour(int)>
<android.view.SurfaceView.MyWindow: void dispatchAppVisibility(boolean)>
<android.net.Uri.StringUri: java.lang.String parseAuthority(java.lang.String,int)>
<android.util.XmlPullAttributes: int getAttributeUnsignedIntValue(java.lang.String,java.lang.String,int)>
<android.widget.TimePickerSpinnerDelegate: void setEnabled(boolean)>
<android.app.INotificationManager: android.content.pm.ParceledListSlice getActiveNotificationsFromListener(android.service.notification.INotificationListener,java.lang.String[],int)>
<android.opengl.GLErrorWrapper: void glGetBooleanv(int,java.nio.IntBuffer)>
<android.app.SharedPreferencesImpl.EditorImpl: void apply()>
<android.graphics.Paint.Align: android.graphics.Paint.Align valueOf(java.lang.String)>
<android.print.PrintManager.PrintDocumentAdapterDelegate.MyLayoutResultCallback: void onLayoutFailed(java.lang.CharSequence)>
<android.app.ApplicationPackageManager: android.content.pm.PackageInstaller getPackageInstaller()>
<android.media.MediaPlayer.TimeProvider: void <init>(android.media.MediaPlayer)>
<android.net.Uri.StringUri: java.lang.String getFragment()>
<android.app.Activity.HostCallbacks: boolean onShouldSaveFragmentState(android.app.Fragment)>
<android.opengl.GLErrorWrapper: void glTranslatex(int,int,int)>
<android.accounts.AccountManager.AmsTask: void set(android.os.Bundle)>
<android.widget.RemoteViews.TextViewDrawableColorFilterAction: java.lang.String getActionName()>
<android.widget.CalendarView.AbstractCalendarViewDelegate: void setCurrentLocale(java.util.Locale)>
<android.net.Uri.HierarchicalUri: java.lang.String getQuery()>
<android.widget.DatePicker.DatePickerSpinnerDelegate: void onConfigurationChanged(android.content.res.Configuration)>
<android.security.keystore.AndroidKeyStoreECDSASignatureSpi: int getAdditionalEntropyAmountForSign()>
<android.transition.Fade.FadeAnimatorListener: void <init>(android.view.View)>
<android.telecom.RemoteConnection.CallbackRecord: android.telecom.RemoteConnection.Callback getCallback()>
<android.content.res.XmlBlock.Parser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<android.widget.RemoteViews.TextViewDrawableAction: void <init>(android.widget.RemoteViews,android.os.Parcel)>
<android.widget.TextView.Drawables: void <init>(android.content.Context)>
<android.widget.TimePickerSpinnerDelegate: java.lang.String[] getAmPmStrings(android.content.Context)>
<android.app.ContextImpl: void startActivity(android.content.Intent,android.os.Bundle)>
<android.security.IKeystoreService: int onUserPasswordChanged(int,java.lang.String)>
<android.content.pm.IPackageManager: boolean isFirstBoot()>
<android.graphics.Path.Op: android.graphics.Path.Op valueOf(java.lang.String)>
<android.widget.ActivityChooserView.Callbacks: void onClick(android.view.View)>
<android.opengl.GLErrorWrapper: void glGetRenderbufferParameterivOES(int,int,int[],int)>
<android.hardware.LegacySensorManager: int getRotation()>
<android.net.Uri.OpaqueUri: java.lang.String getQuery()>
<android.opengl.GLLogWrapper: void glGetTexGeniv(int,int,java.nio.IntBuffer)>
<android.app.ActivityThread.ApplicationThread: void scheduleStopService(android.os.IBinder)>
<android.view.ViewRootImpl.TakenSurfaceHolder: boolean isCreating()>
<android.opengl.GLErrorWrapper: void glGetTexGenfv(int,int,float[],int)>
<android.widget.FastScroller: void remove()>
<android.widget.SuggestionsAdapter: void changeCursor(android.database.Cursor)>
<android.widget.TextView.BufferType: android.widget.TextView.BufferType valueOf(java.lang.String)>
<android.widget.TimePickerSpinnerDelegate: void setOnTimeChangedListener(android.widget.TimePicker.OnTimeChangedListener)>
<android.opengl.GLLogWrapper: void glGetTexGenfv(int,int,float[],int)>
<android.net.Uri.AbstractPart: java.lang.String getEncoded()>
<android.view.IWindowManager: void removeRotationWatcher(android.view.IRotationWatcher)>
<android.media.MediaCodecInfo.Feature: void <init>(java.lang.String,int,boolean)>
<android.location.ILocationManager: boolean addGpsStatusListener(android.location.IGpsStatusListener,java.lang.String)>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi: byte[] engineGetIV()>
<android.opengl.GLLogWrapper: void glFramebufferRenderbufferOES(int,int,int,int)>
<android.widget.ActivityChooserView.ActivityChooserViewAdapter: android.content.pm.ResolveInfo getDefaultActivity()>
<android.accounts.AccountManager.BaseFutureTask.Response: void onError(int,java.lang.String)>
<android.widget.Filter.RequestHandler: void <init>(android.widget.Filter,android.os.Looper)>
<android.app.FragmentManagerImpl.AnimateOnHWLayerIfNeededListener: void onAnimationCancel(android.animation.Animator)>
<android.graphics.Bitmap.BitmapFinalizer: void setNativeAllocationByteCount(int)>
<android.animation.Keyframe.ObjectKeyframe: android.animation.Keyframe clone()>
<android.net.IpConfiguration.ProxySettings: android.net.IpConfiguration.ProxySettings valueOf(java.lang.String)>
<android.security.keystore.AndroidKeyStoreSignatureSpiBase: boolean isSigning()>
<android.widget.SimpleMonthView: int getCellWidth()>
<android.text.TextLine: void updateMetrics(android.graphics.Paint.FontMetricsInt,int,int,int,int,int)>
<android.widget.YearPickerView.YearAdapter: boolean isEmpty()>
<android.content.pm.IPackageManager: void verifyPendingInstall(int,int)>
<android.opengl.GLSurfaceView.EglHelper: void finish()>
<android.media.Utils: void sortDistinctRanges(android.util.Range[])>
<android.widget.Spinner.DropdownPopup: void setPromptText(java.lang.CharSequence)>
<android.provider.Settings.NameValueCache: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>
<android.content.res.XmlBlock.Parser: int getEventType()>
<android.view.IWindowSession: void finishDrawing(android.view.IWindow)>
<android.app.ApplicationPackageManager: android.content.pm.FeatureInfo[] getSystemAvailableFeatures()>
<android.app.ApplicationPackageManager: android.content.pm.ResolveInfo resolveService(android.content.Intent,int)>
<android.widget.AbsListView.WindowRunnnable: void rememberWindowAttachCount()>
<android.app.ActivityThread.ApplicationThread: void scheduleCrash(java.lang.String)>
<android.text.Layout.Ellipsizer: java.lang.CharSequence subSequence(int,int)>
<android.widget.PopupWindow.PopupDecorView: void startExitTransition(android.transition.Transition,android.transition.Transition.TransitionListener)>
<android.widget.Editor.SuggestionsPopupWindow.SuggestionAdapter: int getCount()>
<android.animation.IntKeyframeSet: int getIntValue(float)>
<android.location.ILocationManager: void setTestProviderLocation(java.lang.String,android.location.Location,java.lang.String)>
<android.opengl.GLLogWrapper: int glQueryMatrixxOES(int[],int,int[],int)>
<android.widget.StackView.LayoutParams: void setOffsets(int,int)>
<android.app.ActivityTransitionCoordinator: void startTransition(java.lang.Runnable)>
<android.opengl.GLLogWrapper: void glLightModelfv(int,float[],int)>
<android.widget.RadialTimePickerView.RadialPickerTouchHelper: void onPopulateNodeForVirtualView(int,android.view.accessibility.AccessibilityNodeInfo)>
<android.app.MediaRouteButton.MediaRouterCallback: void onRouteAdded(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>
<android.widget.SimpleMonthView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.media.MediaPlayer.TimeProvider: void onPaused(boolean)>
<android.app.ContextImpl: boolean startInstrumentation(android.content.ComponentName,java.lang.String,android.os.Bundle)>
<android.widget.AbsListView.MultiChoiceModeWrapper: boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem)>
<android.graphics.drawable.RippleBackground: android.animation.Animator createSoftwareEnter(boolean)>
<android.hardware.input.IInputManager: void registerInputDevicesChangedListener(android.hardware.input.IInputDevicesChangedListener)>
<android.widget.Editor.SuggestionsPopupWindow: void onParentLostFocus()>
<android.opengl.GLLogWrapper: void glStencilOp(int,int,int)>
<android.content.pm.IPackageManager: int getPermissionFlags(java.lang.String,java.lang.String,int)>
<android.view.View.CheckForTap: void run()>
<android.transition.Slide.CalculateSlideHorizontal: float getGoneY(android.view.ViewGroup,android.view.View)>
<android.opengl.GLLogWrapper: void glDeleteBuffers(int,int[],int)>
<android.content.pm.IPackageManager: boolean getBlockUninstallForUser(java.lang.String,int)>
<android.inputmethodservice.IInputMethodWrapper: void revokeSession(com.android.internal.view.IInputMethodSession)>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi.AdditionalAuthenticationDataStream: android.security.keymaster.OperationResult update(byte[])>
<android.widget.SpellChecker.SpellParser: void parse()>
<android.opengl.GLSurfaceView.GLThreadManager: void checkGLDriver(javax.microedition.khronos.opengles.GL10)>
<android.content.pm.IPackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int,int)>
<android.widget.GridLayout.Axis: boolean isOrderPreserved()>
<android.telecom.VideoCallImpl.VideoCallListenerBinder: void changeCallDataUsage(long)>
<android.os.StrictMode.InstanceCountViolation: void <init>(java.lang.Class,long,int)>
<android.opengl.GLLogWrapper: void glLineWidthx(int)>
<android.widget.RemoteViews.MemoryUsageCounter: int getMemoryUsage()>
<android.net.Uri.StringUri: java.lang.String getSchemeSpecificPart()>
<android.app.ActivityThread.EventLoggingReporter: void report(int,java.lang.Object[])>
<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask: void onPostExecute(java.lang.Object)>
<android.view.IWindowManager: void setAppTask(android.os.IBinder,int)>
<android.test.InstrumentationTestCase: void sendRepeatedKeys(int[])>
<android.view.IWindowManager: void setFocusedApp(android.os.IBinder,boolean)>
<android.opengl.GLLogWrapper: void glDeleteRenderbuffersOES(int,int[],int)>
<android.app.ContextImpl: int getWallpaperDesiredMinimumHeight()>
<android.text.PackedObjectVector: int width()>
<android.widget.Editor.HandleView: boolean isShowing()>
<android.widget.Editor.HandleView: boolean isDragging()>
<android.hardware.LegacySensorManager.LegacyListener: void onAccuracyChanged(android.hardware.Sensor,int)>
<android.speech.tts.PlaybackSynthesisCallback: void error()>
<android.transition.Fade.FadeAnimatorListener: void onAnimationPause(android.animation.Animator)>
<android.security.keystore.DelegatingX509Certificate: boolean[] getKeyUsage()>
<android.accounts.AbstractAccountAuthenticator.Transport: void confirmCredentials(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,android.os.Bundle)>
<android.hardware.SystemSensorManager.InjectEventQueue: void addSensorEvent(android.hardware.Sensor)>
<android.media.MediaPlayer.TimeProvider: void finalize()>
<android.renderscript.RenderScript.Priority: android.renderscript.RenderScript.Priority[] values()>
<android.util.MapCollections.KeySet: boolean addAll(java.util.Collection)>
<android.view.ViewRootImpl.HighContrastTextManager: void onHighTextContrastStateChanged(boolean)>
<android.view.FrameInfo: void updateInputEventTime(long,long)>
<android.app.ContextImpl.ApplicationContentResolver: void unstableProviderDied(android.content.IContentProvider)>
<android.view.MenuInflater.MenuState: void readItem(android.util.AttributeSet)>
<android.print.PrintManager.PrintDocumentAdapterDelegate.MyLayoutResultCallback: void <init>(android.print.PrintManager.PrintDocumentAdapterDelegate,android.print.ILayoutResultCallback,int)>
<android.app.ContextImpl: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>
<android.app.LoadedApk.WarningContextClassLoader: java.util.Enumeration getResources(java.lang.String)>
<android.widget.Editor.HandleView: void <init>(android.widget.Editor,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
<android.opengl.GLErrorWrapper: void glLoadPaletteFromModelViewMatrixOES()>
<android.widget.FastScroller: void setScrollBarStyle(int)>
<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: void initKey(int,java.security.Key)>
<android.view.IWindowManager: void thawRotation()>
<android.view.accessibility.AccessibilityCache: void clear()>
<android.speech.tts.BlockingAudioTrack: void waitAndRelease()>
<android.renderscript.Program.TextureType: android.renderscript.Program.TextureType[] values()>
<android.view.AccessibilityInteractionController.PrivateHandler: void handleMessage(android.os.Message)>
<android.app.ActivityThread.ServiceArgsData: java.lang.String toString()>
<android.opengl.GLErrorWrapper: void glDepthMask(boolean)>
<android.app.ActivityThread.ApplicationThread: void scheduleServiceArgs(android.os.IBinder,boolean,int,int,android.content.Intent)>
<android.app.ActivityThread.ApplicationThread: void scheduleActivityConfigurationChanged(android.os.IBinder,android.content.res.Configuration)>
<android.app.ApplicationPackageManager: void installPackageWithVerification(android.net.Uri,android.content.pm.IPackageInstallObserver,int,java.lang.String,android.net.Uri,android.content.pm.ManifestDigest,android.content.pm.ContainerEncryptionParams)>
<android.widget.TextView.CharWrapper: java.lang.CharSequence subSequence(int,int)>
<android.content.res.XmlBlock.Parser: java.lang.String getText()>
<android.opengl.GLLogWrapper: void glShadeModel(int)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>
<android.widget.CalendarView.AbstractCalendarViewDelegate: void setShowWeekNumber(boolean)>
<android.animation.PropertyValuesHolder.FloatPropertyValuesHolder: void setFloatValues(float[])>
<android.inputmethodservice.ExtractButton: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.app.ContextImpl: java.io.File[] getObbDirs()>
<android.print.PrintManager.PrintDocumentAdapterDelegate: void onActivityStarted(android.app.Activity)>
<android.view.IWindowManager: boolean hasNavigationBar()>
<android.telecom.InCallService.InCallServiceBinder: void addCall(android.telecom.ParcelableCall)>
<android.view.IWindowManager: boolean isRotationFrozen()>
<android.opengl.GLErrorWrapper: void glGetFramebufferAttachmentParameterivOES(int,int,int,int[],int)>
<android.app.ContextImpl: void sendBroadcast(android.content.Intent)>
<android.widget.CalendarView.AbstractCalendarViewDelegate: int getWeekSeparatorLineColor()>
<android.widget.Editor.SelectionEndHandleView: void <init>(android.widget.Editor,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: int getAdditionalEntropyAmountForFinish()>
<android.content.res.XmlBlock.Parser: java.lang.String getPrefix()>
<android.graphics.drawable.RippleComponent: android.animation.Animator createSoftwareEnter(boolean)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: android.security.KeyStore getKeyStore()>
<android.media.AudioRecord.NativeEventHandler: void handleMessage(android.os.Message)>
<android.widget.ActionMenuView.ActionMenuPresenterCallback: void onCloseMenu(com.android.internal.view.menu.MenuBuilder,boolean)>
<android.animation.PropertyValuesHolder.PointFToIntArray: java.lang.Object convert(java.lang.Object)>
<android.widget.TimePickerClockDelegate.ClickActionDelegate: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)>
<android.content.pm.IPackageManager: boolean isStorageLow()>
<android.opengl.GLLogWrapper: void glColor4ub(byte,byte,byte,byte)>
<android.widget.YearPickerView: int getFirstPositionOffset()>
<android.widget.FastScroller: void setEnabled(boolean)>
<android.opengl.EGLLogWrapper: boolean eglQuerySurface(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,int,int[])>
<android.widget.CalendarViewLegacyDelegate: int getWeekSeparatorLineColor()>
<android.content.pm.IPackageManager: java.util.List queryIntentServices(android.content.Intent,java.lang.String,int,int)>
<android.app.ContextImpl: void sendBroadcast(android.content.Intent,java.lang.String,int)>
<android.widget.Editor.HandleView: void show()>
<android.view.ViewDebug.HierarchyTraceType: android.view.ViewDebug.HierarchyTraceType[] values()>
<android.security.IKeystoreService: android.security.keymaster.OperationResult update(android.os.IBinder,android.security.keymaster.KeymasterArguments,byte[])>
<android.filterfw.GraphEnvironment.GraphHandle: android.filterfw.core.FilterGraph getGraph()>
<android.util.MapCollections.KeySet: boolean remove(java.lang.Object)>
<android.app.ContextImpl: int checkUriPermission(android.net.Uri,int,int,int,android.os.IBinder)>
<android.animation.FloatKeyframeSet: java.lang.Class getType()>
<android.app.ExitTransitionCoordinator: boolean moveSharedElementWithParent()>
<android.widget.ListPopupWindow.DropDownListView: boolean onForwardedEvent(android.view.MotionEvent,int)>
<android.app.ActivityTransitionState: void clear()>
<android.util.XmlPullAttributes: int getAttributeCount()>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getUserBadgedIcon(android.graphics.drawable.Drawable,android.os.UserHandle)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi: void loadAlgorithmSpecificParametersFromBeginResult(android.security.keymaster.KeymasterArguments)>
<android.content.res.XmlBlock.Parser: java.lang.String getNamespaceUri(int)>
<android.opengl.GLLogWrapper: void glPushMatrix()>
<android.security.keystore.AndroidKeyStoreECDSASignatureSpi.NONE.TruncateToFieldSizeMessageStreamer: long getConsumedInputSizeBytes()>
<android.widget.ExpandableListConnector: boolean areAllItemsEnabled()>
<android.animation.PathKeyframes.SimpleKeyframes: android.animation.Keyframes clone()>
<android.nfc.tech.BasicTagTechnology: void reconnect()>
<android.widget.RemoteViews.SetOnClickPendingIntent: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>
<android.renderscript.ProgramStore.DepthFunc: android.renderscript.ProgramStore.DepthFunc valueOf(java.lang.String)>
<android.animation.PathKeyframes: android.animation.Keyframes.IntKeyframes createYIntKeyframes()>
<android.widget.DatePicker.DatePickerSpinnerDelegate: int getFirstDayOfWeek()>
<android.widget.RemoteViewsAdapter.RemoteViewsCacheKey: boolean equals(java.lang.Object)>
<android.widget.ExpandableListConnector.PositionMetadata: android.widget.ExpandableListConnector.PositionMetadata obtain(int,int,int,int,android.widget.ExpandableListConnector.GroupMetadata,int)>
<android.sax.RootElement.Handler: void endElement(java.lang.String,java.lang.String,java.lang.String)>
<android.net.Uri.OpaqueUri: boolean isRelative()>
<android.text.TextDirectionHeuristics.FirstStrong: int checkRtl(java.lang.CharSequence,int,int)>
<android.opengl.GLLogWrapper: void glGetTexGenfv(int,int,java.nio.FloatBuffer)>
<android.opengl.GLLogWrapper: void glBindBuffer(int,int)>
<android.widget.CalendarViewLegacyDelegate.WeekView: void onMeasure(int,int)>
<android.opengl.GLErrorWrapper: void glVertexPointer(int,int,int,int)>
<android.content.pm.IPackageManager: void extendVerificationTimeout(int,int,long)>
<android.widget.DatePicker.AbstractDatePickerDelegate: void setValidationCallback(android.widget.DatePicker.ValidationCallback)>
<android.speech.tts.PlaybackSynthesisCallback: void error(int)>
<android.bluetooth.le.BluetoothLeUtils: boolean equals(android.util.SparseArray,android.util.SparseArray)>
<android.security.keymaster.KeymasterIntArgument: void <init>(int,int)>
<android.opengl.GLErrorWrapper: void glFramebufferTexture2DOES(int,int,int,int,int)>
<android.widget.ExpandableListConnector.MyDataSetObserver: void onInvalidated()>
<android.opengl.GLLogWrapper: void glDeleteFramebuffersOES(int,java.nio.IntBuffer)>
<android.opengl.GLLogWrapper: void glMultMatrixx(java.nio.IntBuffer)>
<android.content.res.StringBlock.Height: void chooseHeight(java.lang.CharSequence,int,int,int,int,android.graphics.Paint.FontMetricsInt,android.text.TextPaint)>
<android.telecom.Connection.FailureSignalingConnection: void <init>(android.telecom.DisconnectCause)>
<android.opengl.GLLogWrapper: void glPointSize(float)>
<android.test.InstrumentationTestSuite: void <init>(java.lang.String,android.app.Instrumentation)>
<android.text.SpannableStringInternal: int hashCode()>
<android.app.ContextImpl: boolean isRestricted()>
<android.widget.CalendarViewLegacyDelegate: void setMinDate(long)>
<android.widget.CalendarViewLegacyDelegate: void setUnfocusedMonthDateColor(int)>
<android.widget.RemoteViews.SetOnClickPendingIntent: java.lang.String getActionName()>
<android.speech.SpeechRecognizer.InternalListener: void onRmsChanged(float)>
<android.graphics.drawable.RippleForeground: void <init>(android.graphics.drawable.RippleDrawable,android.graphics.Rect,float,float,boolean)>
<android.opengl.GLLogWrapper: void glGetBooleanv(int,java.nio.IntBuffer)>
<android.text.Layout.Ellipsizer: void <init>(java.lang.CharSequence)>
<android.app.BackStackRecord: void <init>(android.app.FragmentManagerImpl)>
<android.preference.GenericInflater: android.preference.GenericInflater cloneInContext(android.content.Context)>
<android.widget.DoubleDigitManager: void <init>(long,android.widget.DoubleDigitManager.CallBack)>
<android.widget.TimePickerSpinnerDelegate.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.content.res.XmlBlock.Parser: int getAttributeIntValue(java.lang.String,java.lang.String,int)>
<android.widget.TabHost.FactoryContentStrategy: void tabClosed()>
<android.widget.DayPickerViewPager: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.graphics.Path.Direction: android.graphics.Path.Direction valueOf(java.lang.String)>
<android.widget.SimpleMonthView: void onDraw(android.graphics.Canvas)>
<android.opengl.GLLogWrapper: boolean glIsFramebufferOES(int)>
<android.security.keystore.DelegatingX509Certificate: java.util.Collection getIssuerAlternativeNames()>
<android.net.Uri.HierarchicalUri: int describeContents()>
<android.text.AlteredCharSequence.AlteredSpanned: java.lang.Object[] getSpans(int,int,java.lang.Class)>
<android.app.BackStackRecord: android.app.FragmentTransaction setBreadCrumbShortTitle(int)>
<android.graphics.Bitmap.Config: android.graphics.Bitmap.Config nativeToConfig(int)>
<android.widget.ZoomButtonsController.Container: void <init>(android.widget.ZoomButtonsController,android.content.Context)>
<android.app.ApplicationPackageManager: android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String,int)>
<android.app.ActivityTransitionCoordinator: void stripOffscreenViews()>
<android.gesture.GestureLibraries.FileGestureLibrary: void <init>(java.io.File)>
<android.graphics.drawable.RippleBackground: boolean drawHardware(android.view.DisplayListCanvas)>
<android.app.ActivityThread.Idler: boolean queueIdle()>
<android.view.ViewGroup.ChildListForAccessibility: void recycle()>
<android.app.WallpaperManager.FastBitmapDrawable: void setFilterBitmap(boolean)>
<android.widget.ActivityChooserModel.DefaultSorter: void sort(android.content.Intent,java.util.List,java.util.List)>
<android.media.Ringtone.MyOnCompletionListener: void onCompletion(android.media.MediaPlayer)>
<android.location.GpsMeasurementListenerTransport: boolean registerWithServer()>
<android.content.pm.IPackageManager: android.content.pm.PermissionGroupInfo getPermissionGroupInfo(java.lang.String,int)>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi: int engineGetBlockSize()>
<android.widget.ActivityChooserView.ActivityChooserViewAdapter: int getViewTypeCount()>
<android.app.ActivityThread.ApplicationThread: void dumpService(java.io.FileDescriptor,android.os.IBinder,java.lang.String[])>
<android.opengl.GLErrorWrapper: void glFogxv(int,int[],int)>
<android.security.keystore.DelegatingX509Certificate: boolean[] getSubjectUniqueID()>
<android.view.ViewOverlay.OverlayViewGroup: void invalidateDrawable(android.graphics.drawable.Drawable)>
<android.security.keystore.AndroidKeyStoreSignatureSpiBase: void resetWhilePreservingInitState()>
<android.app.ApplicationPackageManager: int getPackageUid(java.lang.String,int)>
<android.util.Base64.Decoder: void <init>(int,byte[])>
<android.widget.RemoteViews.SetPendingIntentTemplate: java.lang.String getActionName()>
<android.os.MessageQueue.FileDescriptorRecord: void <init>(java.io.FileDescriptor,int,android.os.MessageQueue.OnFileDescriptorEventListener)>
<android.opengl.GLLogWrapper: void glLightxv(int,int,java.nio.IntBuffer)>
<android.opengl.GLErrorWrapper: void glPushMatrix()>
<android.test.AndroidTestCase: void testAndroidTestCaseSetupProperly()>
<android.view.ViewRootImpl.AccessibilityInteractionConnection: void focusSearch(long,int,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)>
<android.view.AccessibilityInteractionController.AddNodeInfosForViewId: boolean apply(java.lang.Object)>
<android.widget.NumberPicker.TwoDigitFormatter: java.lang.String format(int)>
<android.app.ContextImpl: void enforceUriPermission(android.net.Uri,int,int,int,java.lang.String)>
<android.opengl.GLLogWrapper.PointerInfo: void <init>(android.opengl.GLLogWrapper,int,int,int,java.nio.Buffer)>
<android.net.Uri.StringUri: android.net.Uri readFrom(android.os.Parcel)>
<android.view.LayoutInflater.BlinkLayout: void onDetachedFromWindow()>
<android.widget.FastScroller: void setAlwaysShow(boolean)>
<android.view.Choreographer.FrameDisplayEventReceiver: void <init>(android.view.Choreographer,android.os.Looper)>
<android.accounts.AbstractAccountAuthenticator.Transport: void getAccountCredentialsForCloning(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account)>
<android.net.Uri.StringUri: int describeContents()>
<android.widget.Spinner.DropDownAdapter: android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup)>
<android.app.backup.FileBackupHelperBase: void performBackup_checked(android.os.ParcelFileDescriptor,android.app.backup.BackupDataOutput,android.os.ParcelFileDescriptor,java.lang.String[],java.lang.String[])>
<android.test.AndroidTestCase: android.content.Context getContext()>
<android.opengl.GLErrorWrapper: void glLineWidth(float)>
<android.opengl.GLSurfaceView.GLThread: void setRenderMode(int)>
<android.os.RemoteCallback.LocalCallback: void sendResult(android.os.Bundle)>
<android.app.ActivityThread.ApplicationThread: void scheduleLaunchActivity(android.content.Intent,android.os.IBinder,int,android.content.pm.ActivityInfo,android.content.res.Configuration,android.content.res.Configuration,android.content.res.CompatibilityInfo,java.lang.String,com.android.internal.app.IVoiceInteractor,int,android.os.Bundle,android.os.PersistableBundle,java.util.List,java.util.List,boolean,boolean,android.app.ProfilerInfo)>
<android.security.keystore.DelegatingX509Certificate: int getBasicConstraints()>
<android.view.IWindowManager: int getBaseDisplayDensity(int)>
<android.net.LocalSocketImpl.SocketInputStream: int read(byte[],int,int)>
<android.widget.AbsListView.CheckForKeyLongPress: void run()>
<android.widget.AbsListView.InputConnectionWrapper: boolean reportFullscreenMode(boolean)>
<android.app.LauncherActivity.ActivityAdapter: void <init>(android.app.LauncherActivity,android.app.LauncherActivity.IconResizer)>
<android.view.ViewRootImpl.RunQueue.HandlerAction: int hashCode()>
<android.animation.KeyframeSet: void invalidateCache()>
<android.text.MeasuredText: android.text.MeasuredText recycle(android.text.MeasuredText)>
<android.net.DhcpStateMachine.DefaultState: void exit()>
<android.opengl.GLLogWrapper: void glGetClipPlanef(int,float[],int)>
<android.inputmethodservice.KeyboardView.SwipeTracker: void clear()>
<android.widget.CompoundButton.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.view.HardwareLayer: long getLayerHandle()>
<android.widget.RemoteViews.BitmapReflectionAction: void setBitmapCache(android.widget.RemoteViews.BitmapCache)>
<android.content.pm.IPackageManager: void addOnPermissionsChangeListener(android.content.pm.IOnPermissionsChangeListener)>
<android.webkit.WebSettings.ZoomDensity: android.webkit.WebSettings.ZoomDensity[] values()>
<android.telecom.CallbackRecord: void <init>(java.lang.Object,android.os.Handler)>
<android.widget.DigitalClock.FormatChangeObserver: void onChange(boolean)>
<android.net.Uri.HierarchicalUri: android.net.Uri readFrom(android.os.Parcel)>
<android.widget.GridLayout.MutableInt: java.lang.String toString()>
<android.hardware.camera2.ICameraDeviceUser: int cancelRequest(int,android.hardware.camera2.utils.LongParcelable)>
<android.accounts.AbstractAccountAuthenticator.Transport: void addAccount(android.accounts.IAccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)>
<android.security.keystore.DelegatingX509Certificate: boolean hasUnsupportedCriticalExtension()>
<android.opengl.GLErrorWrapper: void glDisableClientState(int)>
<android.preference.SeekBarVolumizer.H: void postUpdateSlider(int,int,boolean)>
<android.hardware.usb.IUsbManager: void setUsbDataUnlocked(boolean)>
<android.net.LocalSocketImpl.SocketInputStream: void close()>
<android.widget.SimpleMonthView: void <init>(android.content.Context)>
<android.widget.CursorTreeAdapter.MyCursorHelper.MyContentObserver: boolean deliverSelfNotifications()>
<android.app.ApplicationPackageManager: java.util.List queryIntentContentProvidersAsUser(android.content.Intent,int,int)>
<android.animation.LayoutTransition.CleanupCallback: void onViewDetachedFromWindow(android.view.View)>
<android.opengl.GLErrorWrapper: void glWeightPointerOES(int,int,int,int)>
<android.view.ViewRootImpl.InputStage: void deliver(android.view.ViewRootImpl.QueuedInputEvent)>
<android.webkit.ConsoleMessage.MessageLevel: android.webkit.ConsoleMessage.MessageLevel valueOf(java.lang.String)>
<android.view.IWindowManager: void resumeKeyDispatching(android.os.IBinder)>
<android.media.MediaPlayer.TimeProvider: void scheduleUpdate(android.media.MediaTimeProvider.OnMediaTimeListener)>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi.GCM: void resetAll()>
<android.util.MapCollections.ValuesCollection: java.util.Iterator iterator()>
<android.widget.YearPickerView.YearAdapter: int getItemViewType(int)>
<android.widget.Editor.DragLocalState: void <init>(android.widget.TextView,int,int)>
<android.hardware.SystemSensorManager.BaseEventQueue: void dispose()>
<android.media.ImageReader.SurfaceImage: void <init>(android.media.ImageReader,int)>
<android.widget.RadialTimePickerView.RadialPickerTouchHelper: void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo)>
<android.animation.AnimatorSet.DependencyListener: void onAnimationStart(android.animation.Animator)>
<android.app.ApplicationPackageManager: void grantRuntimePermission(java.lang.String,java.lang.String,android.os.UserHandle)>
<android.widget.FastScroller: void setStyle(int)>
<android.media.midi.MidiPortImpl: int packData(byte[],int,int,long,byte[])>
<android.content.ContentResolver.OpenResourceIdResult: void <init>(android.content.ContentResolver)>
<android.app.SharedPreferencesImpl.MemoryCommitResult: void setDiskWriteResult(boolean)>
<android.widget.Editor.SuggestionsPopupWindow.CustomPopupWindow: void dismiss()>
<android.widget.AbsListView.MultiChoiceModeWrapper: boolean hasWrappedCallback()>
<android.app.ContextImpl: void startIntentSender(android.content.IntentSender,android.content.Intent,int,int,int)>
<android.opengl.GLErrorWrapper: void glGetTexGenxv(int,int,java.nio.IntBuffer)>
<android.opengl.GLLogWrapper: void glGetRenderbufferParameterivOES(int,int,java.nio.IntBuffer)>
<android.preference.GenericInflater: void setFactory(android.preference.GenericInflater.Factory)>
<android.net.Uri.OpaqueUri: void writeToParcel(android.os.Parcel,int)>
<android.widget.Spinner.DialogPopup: void dismiss()>
<android.widget.ActivityChooserView.Callbacks: boolean onLongClick(android.view.View)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.OAEPWithSHA256AndMGF1Padding: void finalize()>
<android.app.ContextImpl: void setWallpaper(android.graphics.Bitmap)>
<android.animation.PathKeyframes: java.util.ArrayList getKeyframes()>
<android.app.ContextImpl: void enforcePermission(java.lang.String,int,int,java.lang.String)>
<android.widget.CalendarViewLegacyDelegate: void setMaxDate(long)>
<android.opengl.GLErrorWrapper: void glTexGenfv(int,int,java.nio.FloatBuffer)>
<android.widget.CalendarViewLegacyDelegate: void setOnDateChangeListener(android.widget.CalendarView.OnDateChangeListener)>
<android.text.SpannableStringInternal: void getChars(int,int,char[],int)>
<android.widget.YearPickerView: void <init>(android.content.Context,android.util.AttributeSet,int)>
<android.util.MapCollections.ValuesCollection: boolean remove(java.lang.Object)>
<android.animation.PathKeyframes.FloatKeyframesBase: java.lang.Class getType()>
<android.hardware.camera2.ICameraDeviceUser: int prepare(int)>
<android.widget.SuggestionsAdapter: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)>
<android.text.DynamicLayout.ChangeWatcher: void onSpanAdded(android.text.Spannable,java.lang.Object,int,int)>
<android.view.ViewRootImpl.SyntheticTouchNavigationHandler: void cancel(android.view.MotionEvent)>
<android.content.pm.IPackageManager: android.content.pm.IPackageInstaller getPackageInstaller()>
<android.opengl.GLLogWrapper: void glNormal3x(int,int,int)>
<android.view.View.ScrollabilityCache: void run()>
<android.widget.ActionMenuPresenter.OpenOverflowRunnable: void run()>
<android.animation.PathKeyframes.SimpleKeyframes: java.util.List getKeyframes()>
<android.view.ViewRootImpl.W: void dispatchWallpaperOffsets(float,float,float,float,boolean)>
<android.app.EnterTransitionCoordinator: void <init>(android.app.Activity,android.os.ResultReceiver,java.util.ArrayList,boolean)>
<android.content.res.XmlBlock.Parser: java.lang.String getIdAttribute()>
<android.widget.TabHost.FactoryContentStrategy: void <init>(android.widget.TabHost,java.lang.CharSequence,android.widget.TabHost.TabContentFactory)>
<android.content.pm.IPackageManager: void grantRuntimePermission(java.lang.String,java.lang.String,int)>
<android.content.res.StringBlock: void <init>(byte[],boolean)>
<android.opengl.GLErrorWrapper: void glClearStencil(int)>
<android.animation.KeyframeSet: java.lang.Object getValue(float)>
<android.app.BackStackRecord: android.app.FragmentTransaction replace(int,android.app.Fragment)>
<android.webkit.WebSyncManager: void stopSync()>
<android.location.LocationManager.GpsStatusListenerTransport: void onGpsStopped()>
<android.content.pm.IPackageManager: void querySyncProviders(java.util.List,java.util.List)>
<android.renderscript.RenderScript.Priority: android.renderscript.RenderScript.Priority valueOf(java.lang.String)>
<android.text.AndroidBidi: int bidi(int,char[],byte[],int,boolean)>
<android.net.LocalSocketImpl.SocketInputStream: int read()>
<android.opengl.GLLogWrapper: void glTexEnvx(int,int,int)>
<android.telecom.VideoCallImpl.MessageHandler: void <init>(android.telecom.VideoCallImpl,android.os.Looper)>
<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi.CTR: void <init>(int)>
<android.app.ActivityTransitionCoordinator: void setGhostVisibility(int)>
<android.content.pm.IPackageManager: boolean isPermissionRevokedByPolicy(java.lang.String,java.lang.String,int)>
<android.opengl.GLErrorWrapper: void glPointParameterf(int,float)>
<android.opengl.GLErrorWrapper: void glBindFramebufferOES(int,int)>
<android.test.InstrumentationTestCase: void runTestOnUiThread(java.lang.Runnable)>
<android.security.keystore.DelegatingX509Certificate: void checkValidity()>
<android.app.ApplicationPackageManager: void setComponentEnabledSetting(android.content.ComponentName,int,int)>
<android.view.ViewRootImpl.InputStage: void forward(android.view.ViewRootImpl.QueuedInputEvent)>
<android.widget.ExpandableListPosition: android.widget.ExpandableListPosition obtainPosition(long)>
<android.telecom.CallbackRecord: java.lang.Object getCallback()>
<android.opengl.GLErrorWrapper: void glTexGenfv(int,int,float[],int)>
<android.net.Uri.OpaqueUri: java.lang.String getScheme()>
<android.opengl.GLErrorWrapper: void glGetClipPlanex(int,java.nio.IntBuffer)>
<android.widget.ActionMenuView.ActionMenuPresenterCallback: boolean onOpenSubMenu(com.android.internal.view.menu.MenuBuilder)>
<android.view.View.CheckForLongPress: void run()>
<android.os.SystemService.State: android.os.SystemService.State valueOf(java.lang.String)>
<android.widget.RemoteViews.ViewGroupAction: void writeToParcel(android.os.Parcel,int)>
<android.app.ContextImpl: int checkCallingOrSelfUriPermission(android.net.Uri,int)>
<android.net.Uri.AbstractHierarchicalUri: java.lang.String getEncodedUserInfo()>
<android.content.ContentProvider.Transport: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)>
<android.os.AsyncTask.SerialExecutor: void execute(java.lang.Runnable)>
<android.text.Layout.SpannedEllipsizer: int getSpanFlags(java.lang.Object)>
<android.inputmethodservice.KeyboardView.SwipeTracker: float getYVelocity()>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.PKCS1Padding: java.security.AlgorithmParameters engineGetParameters()>
<android.opengl.GLLogWrapper: void glPointSizex(int)>
<android.app.ApplicationPackageManager: void addCrossProfileIntentFilter(android.content.IntentFilter,int,int,int)>
<android.util.Base64.Coder: int maxOutputSize(int)>
<android.app.ActivityThread.ApplicationThread: void scheduleDestroyBackupAgent(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo)>
<android.app.ApplicationPackageManager: boolean isPermissionRevokedByPolicy(java.lang.String,java.lang.String)>
<android.media.MediaDrm.EventHandler: void <init>(android.media.MediaDrm,android.media.MediaDrm,android.os.Looper)>
<android.widget.NumberPicker.ChangeCurrentByOneFromLongPressCommand: void run()>
<android.view.ViewRootImpl.QueuedInputEvent: boolean shouldSendToSynthesizer()>
<android.opengl.GLErrorWrapper: void glScissor(int,int,int,int)>
<android.renderscript.ProgramStore.DepthFunc: android.renderscript.ProgramStore.DepthFunc[] values()>
<android.hardware.usb.IUsbManager: void setCurrentFunction(java.lang.String)>
<android.view.ViewRootImpl.NativePreImeInputStage: int onProcess(android.view.ViewRootImpl.QueuedInputEvent)>
<android.graphics.drawable.RippleComponent: void setup(float,float)>
<android.accounts.AbstractAccountAuthenticator.Transport: void getAuthToken(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)>
<android.opengl.GLErrorWrapper: void glClearColorx(int,int,int,int)>
<android.preference.TwoStatePreference.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.widget.ActivityChooserView.ActivityChooserViewAdapter: int getHistorySize()>
<android.app.ActivityView.ActivityViewSurfaceTextureListener: boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture)>
<android.widget.RadialTimePickerView.InvalidateUpdateListener: void onAnimationUpdate(android.animation.ValueAnimator)>
<android.preference.GenericInflater: void <init>(android.content.Context)>
<android.opengl.GLErrorWrapper: void glDrawTexsvOES(short[],int)>
<android.renderscript.Element.DataType: android.renderscript.Element.DataType[] values()>
<android.view.View.UnsetPressedState: void run()>
<android.opengl.GLLogWrapper: void glFrustumx(int,int,int,int,int,int)>
<android.hardware.camera2.ICameraDeviceUser: void disconnect()>
<android.opengl.GLErrorWrapper: void glPopMatrix()>
<android.security.keystore.AndroidKeyStoreRSACipherSpi: byte[] engineGetIV()>
<android.net.LocalSocketImpl: void connect(android.net.LocalSocketAddress,int)>
<android.view.IWindowSession: void setWallpaperDisplayOffset(android.os.IBinder,int,int)>
<android.widget.GridLayout.Bounds: void include(int,int)>
<android.text.TextDirectionHeuristics.TextDirectionHeuristicLocale: boolean defaultIsRtl()>
<android.content.pm.IPackageManager: void unregisterMoveCallback(android.content.pm.IPackageMoveObserver)>
<android.app.INotificationManager: void setPackageVisibilityOverride(java.lang.String,int,int)>
<android.content.res.XmlBlock.Parser: void close()>
<android.util.MapCollections.ValuesCollection: boolean retainAll(java.util.Collection)>
<android.opengl.GLLogWrapper: void glGetTexParameterfv(int,int,java.nio.FloatBuffer)>
<android.widget.DayPickerView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.DatePicker.DatePickerSpinnerDelegate: void setCurrentLocale(java.util.Locale)>
<android.graphics.Canvas.EdgeType: android.graphics.Canvas.EdgeType[] values()>
<android.widget.ActivityChooserModel.DataModelPackageMonitor: void onSomePackagesChanged()>
<android.media.MediaRouter.Static.Client: void onStateChanged()>
<android.widget.TimePickerSpinnerDelegate: void setCurrentHour(int)>
<android.opengl.GLErrorWrapper: void glGenBuffers(int,int[],int)>
<android.security.keystore.AndroidKeyStoreBCWorkaroundProvider: java.lang.String[] getSupportedRsaSignatureWithPkcs1PaddingDigests()>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi.GCM: void addAlgorithmSpecificParametersToBegin(android.security.keymaster.KeymasterArguments)>
<android.transition.ChangeTransform.PathAnimatorMatrix: void setValues(float[])>
<android.accounts.ChooseAccountTypeActivity.AccountArrayAdapter: void <init>(android.content.Context,int,java.util.ArrayList)>
<android.opengl.GLLogWrapper: void glVertexPointer(int,int,int,int)>
<android.app.ContextImpl: void startActivitiesAsUser(android.content.Intent[],android.os.Bundle,android.os.UserHandle)>
<android.opengl.GLErrorWrapper: void glVertexPointer(int,int,int,java.nio.Buffer)>
<android.app.ActivityThread.ApplicationThread: void processInBackground()>
<android.content.res.XmlBlock.Parser: float getAttributeFloatValue(java.lang.String,java.lang.String,float)>
<android.opengl.GLLogWrapper: void glClipPlanex(int,java.nio.IntBuffer)>
<android.opengl.GLLogWrapper: void glDrawTexsOES(short,short,short,short,short)>
<android.view.ViewRootImpl.InvalidateOnAnimationRunnable: void addView(android.view.View)>
<android.accounts.AccountManager.GetAuthTokenByTypeAndFeaturesTask: void run(android.accounts.AccountManagerFuture)>
<android.view.LayoutInflater.FactoryMerger: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)>
<android.view.IWindowManager: void setAppStartingWindow(android.os.IBinder,java.lang.String,int,android.content.res.CompatibilityInfo,java.lang.CharSequence,int,int,int,int,android.os.IBinder,boolean)>
<android.media.ImageReader.SurfaceImage: int getHeight()>
<android.opengl.GLErrorWrapper: void glTexImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.content.SyncAdaptersCache.MySerializer: void writeAsXml(android.content.SyncAdapterType,org.xmlpull.v1.XmlSerializer)>
<android.graphics.Shader.TileMode: android.graphics.Shader.TileMode valueOf(java.lang.String)>
<android.opengl.GLLogWrapper: void glMaterialxv(int,int,int[],int)>
<android.widget.DayPickerPagerAdapter.ViewHolder: void <init>(int,android.view.View,android.widget.SimpleMonthView)>
<android.location.ILocationManager: void setTestProviderStatus(java.lang.String,int,android.os.Bundle,long,java.lang.String)>
<android.app.ContextImpl: boolean stopServiceAsUser(android.content.Intent,android.os.UserHandle)>
<android.net.Uri.OpaqueUri: java.util.List getPathSegments()>
<android.text.PackedObjectVector: void deleteAt(int,int)>
<android.view.IWindowManager: void overridePendingAppTransitionThumb(android.graphics.Bitmap,int,int,android.os.IRemoteCallback,boolean)>
<android.view.LayoutInflater.BlinkLayout: void onAttachedToWindow()>
<android.media.WebVttRenderingWidget.CueLayout: void setOrder(int)>
<android.security.keystore.DelegatingX509Certificate: byte[] getSignature()>
<android.widget.DatePicker.DatePickerSpinnerDelegate: void setSpinnersShown(boolean)>
<android.app.ContextImpl: void clearWallpaper()>
<android.app.WallpaperManager.Globals: void onWallpaperChanged()>
<android.widget.Editor.ProcessTextIntentActionsHandler: void initializeAccessibilityActions()>
<android.widget.RemoteViewsAdapter.RemoteViewsFrameLayoutRefSet: void notifyOnRemoteViewsLoaded(int,android.widget.RemoteViews)>
<android.media.WebVttRenderingWidget.CueLayout: void onMeasure(int,int)>
<android.animation.PropertyValuesHolder.IntPropertyValuesHolder: void <init>(java.lang.String,android.animation.Keyframes.IntKeyframes)>
<android.opengl.GLLogWrapper: void glLightf(int,int,float)>
<android.content.ContentProviderClient.NotRespondingRunnable: void run()>
<android.content.pm.IPackageManager: void updateExternalMediaStatus(boolean,boolean)>
<android.widget.TextView.CharWrapper: void drawText(android.graphics.Canvas,int,int,float,float,android.graphics.Paint)>
<android.media.CCParser.PAC: java.lang.String toString()>
<android.opengl.GLLogWrapper: void glLoadMatrixx(java.nio.IntBuffer)>
<android.content.res.XmlBlock: void <init>(byte[])>
<android.app.Activity.HostCallbacks: boolean onUseFragmentManagerInflaterFactory()>
<android.location.LocationManager.ListenerTransport: void onStatusChanged(java.lang.String,int,android.os.Bundle)>
<android.telephony.TelephonyManager.MultiSimVariants: android.telephony.TelephonyManager.MultiSimVariants[] values()>
<android.app.ContextImpl: void sendOrderedBroadcastAsUser(android.content.Intent,android.os.UserHandle,java.lang.String,int,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<android.media.ImageWriter.ListenerHandler: void handleMessage(android.os.Message)>
<android.widget.AbsSpinner.SavedState: java.lang.String toString()>
<android.widget.AbsListView.CheckForTap: void run()>
<android.opengl.GLLogWrapper: void glLightModelf(int,float)>
<android.text.PackedObjectVector: void setValue(int,int,java.lang.Object)>
<android.opengl.GLLogWrapper: void glGetTexGeniv(int,int,int[],int)>
<android.telecom.VideoCallImpl.VideoCallListenerBinder: void receiveSessionModifyResponse(int,android.telecom.VideoProfile,android.telecom.VideoProfile)>
<android.content.pm.IPackageManager: void deleteApplicationCacheFiles(java.lang.String,android.content.pm.IPackageDataObserver)>
<android.content.pm.IPackageManager: void addCrossProfileIntentFilter(android.content.IntentFilter,java.lang.String,int,int,int)>
<android.widget.DayPickerPagerAdapter: void setFirstDayOfWeek(int)>
<android.opengl.GLErrorWrapper: void glMatrixIndexPointerOES(int,int,int,java.nio.Buffer)>
<android.webkit.WebSyncManager: void startSync()>
<android.opengl.GLLogWrapper: void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.opengl.GLLogWrapper: void glGetClipPlanex(int,int[],int)>
<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: void resetWhilePreservingInitState()>
<android.text.HtmlToSpannedConverter.Header: void <init>(int)>
<android.net.Uri.OpaqueUri: java.lang.String getEncodedPath()>
<android.opengl.GLErrorWrapper: void glDeleteTextures(int,int[],int)>
<android.content.pm.IPackageManager: java.util.List getAllPermissionGroups(int)>
<android.security.IKeystoreService: int clear_uid(long)>
<android.security.IKeystoreService: int import_key(java.lang.String,byte[],int,int)>
<android.widget.Spinner.SpinnerPopup: int getHorizontalOffset()>
<android.widget.ListPopupWindow.DropDownListView: boolean isInTouchMode()>
<android.widget.SuggestionsAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.inputmethodservice.IInputMethodWrapper: void bindInput(android.view.inputmethod.InputBinding)>
<android.view.AccessibilityInteractionController.AddNodeInfosForViewId: void init(int,java.util.List)>
<android.media.WebVttRenderingWidget.CueLayout: void setCaptionStyle(android.view.accessibility.CaptioningManager.CaptionStyle,float)>
<android.speech.RecognitionService.RecognitionServiceBinder: void startListening(android.content.Intent,android.speech.IRecognitionListener)>
<android.os.Handler.BlockingRunnable: boolean postAndWait(android.os.Handler,long)>
<android.os.StrictMode.InstanceTracker: int getInstanceCount(java.lang.Class)>
<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache: void queueRequestedPositionToLoad(int)>
<android.app.ActivityThread.ApplicationThread: void updatePackageCompatibilityInfo(java.lang.String,android.content.res.CompatibilityInfo)>
<android.widget.ExpandableListConnector.GroupMetadata: int describeContents()>
<android.content.res.ThemedResourceCache: void put(long,android.content.res.Resources.Theme,java.lang.Object,boolean)>
<android.view.ViewRootImpl.W: void dispatchSystemUiVisibilityChanged(int,int,int,int)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi: void addAlgorithmSpecificParametersToBegin(android.security.keymaster.KeymasterArguments)>
<android.app.ApplicationPackageManager: java.lang.CharSequence getUserBadgedLabel(java.lang.CharSequence,android.os.UserHandle)>
<android.opengl.GLErrorWrapper: void glGetTexParameterxv(int,int,java.nio.IntBuffer)>
<android.view.ViewGroup.HoverTarget: void recycle()>
<android.widget.RemoteViews.TextViewSizeAction: void <init>(android.widget.RemoteViews,int,int,float)>
<android.app.Activity.HostCallbacks: void onInvalidateOptionsMenu()>
<android.opengl.GLErrorWrapper: void glGenFramebuffersOES(int,int[],int)>
<android.util.MapCollections.MapIterator: java.lang.Object getKey()>
<android.opengl.GLLogWrapper: void glLightfv(int,int,java.nio.FloatBuffer)>
<android.app.LauncherActivity.ActivityAdapter: long getItemId(int)>
<android.database.CursorToBulkCursorAdaptor.ContentObserverProxy: boolean unlinkToDeath(android.os.IBinder.DeathRecipient)>
<android.view.accessibility.AccessibilityCache: java.util.List getWindows()>
<android.util.XmlPullAttributes: void <init>(org.xmlpull.v1.XmlPullParser)>
<android.widget.CalendarViewLegacyDelegate: int getFocusedMonthDateColor()>
<android.app.INotificationManager: boolean matchesCallFilter(android.os.Bundle)>
<android.app.ApplicationPackageManager: int checkPermission(java.lang.String,java.lang.String)>
<android.app.IWallpaperManager: boolean hasNamedWallpaper(java.lang.String)>
<android.opengl.GLErrorWrapper: void glNormal3f(float,float,float)>
<android.renderscript.ProgramVertexFixedFunction.InternalBuilder: android.renderscript.ProgramVertexFixedFunction create()>
<android.view.ViewRootImpl.AsyncInputStage: void <init>(android.view.ViewRootImpl,android.view.ViewRootImpl.InputStage,java.lang.String)>
<android.content.pm.IPackageManager: java.util.List queryPermissionsByGroup(java.lang.String,int)>
<android.net.Uri.StringUri: java.lang.String toString()>
<android.app.BackStackRecord: android.app.FragmentTransaction disallowAddToBackStack()>
<android.opengl.GLLogWrapper: void glTexCoordPointer(int,int,int,int)>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi: void setIv(byte[])>
<android.location.LocationManager.ListenerTransport: void onProviderDisabled(java.lang.String)>
<android.content.pm.IPackageManager: android.content.pm.ResolveInfo getLastChosenActivity(android.content.Intent,java.lang.String,int)>
<android.opengl.GLErrorWrapper: void glPointSizePointerOES(int,int,java.nio.Buffer)>
<android.telecom.InCallService.InCallServiceBinder: void onCanAddCallChanged(boolean)>
<android.widget.AdapterViewAnimator.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.app.LoadedApk.ServiceDispatcher.InnerConnection: void connected(android.content.ComponentName,android.os.IBinder)>
<android.opengl.GLLogWrapper: void glGetTexGenxv(int,int,int[],int)>
<android.widget.Editor.HandleView: void onDetached()>
<android.view.View.MatchIdPredicate: boolean apply(android.view.View)>
<android.graphics.Paint.Join: android.graphics.Paint.Join[] values()>
<android.speech.tts.PlaybackSynthesisCallback: boolean hasFinished()>
<android.widget.FastScroller: void onItemCountChanged(int,int)>
<android.widget.TimePickerSpinnerDelegate: void onConfigurationChanged(android.content.res.Configuration)>
<android.app.ActivityTransitionCoordinator: void showViews(java.util.ArrayList,boolean)>
<android.content.res.XmlBlock.Parser: boolean getAttributeBooleanValue(java.lang.String,java.lang.String,boolean)>
<android.widget.FastScroller: boolean onInterceptHoverEvent(android.view.MotionEvent)>
<android.widget.Editor.SelectionEndHandleView: int getCurrentCursorOffset()>
<android.os.MemoryFile.MemoryInputStream: boolean markSupported()>
<android.animation.IntKeyframeSet: java.lang.Class getType()>
<android.media.MediaScanner.MyMediaScannerClient: void setMimeType(java.lang.String)>
<android.app.ActivityTransitionCoordinator: void scheduleGhostVisibilityChange(int)>
<android.widget.Spinner.DropDownAdapter: long getItemId(int)>
<android.widget.ExpandableListConnector: void setExpandableListAdapter(android.widget.ExpandableListAdapter)>
<android.opengl.GLLogWrapper: void glSampleCoverage(float,boolean)>
<android.app.BackStackState: int describeContents()>
<android.util.MapCollections.KeySet: java.lang.Object[] toArray(java.lang.Object[])>
<android.opengl.GLErrorWrapper: void glDrawArrays(int,int,int)>
<android.widget.TabHost.ViewIndicatorStrategy: android.view.View createIndicatorView()>
<android.util.MapCollections.MapIterator: java.lang.Object getValue()>
<android.util.MapCollections.ArrayIterator: boolean hasNext()>
<android.view.ViewPropertyAnimator.AnimatorEventListener: void onAnimationRepeat(android.animation.Animator)>
<android.widget.Editor.SelectionStartHandleView: void updatePosition(float,float)>
<android.content.res.XmlBlock.Parser: int getNamespaceCount(int)>
<android.media.ImageReader.SurfaceImage: long getTimestamp()>
<android.app.ContextImpl: android.app.ContextImpl createAppContext(android.app.ActivityThread,android.app.LoadedApk)>
<android.renderscript.ProgramStore.BlendSrcFunc: android.renderscript.ProgramStore.BlendSrcFunc valueOf(java.lang.String)>
<android.widget.ActionMenuPresenter.PopupPresenterCallback: boolean onOpenSubMenu(com.android.internal.view.menu.MenuBuilder)>
<android.content.res.XmlBlock.Parser: boolean isAttributeDefault(int)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: int engineDoFinal(java.nio.ByteBuffer,java.nio.ByteBuffer)>
<android.inputmethodservice.KeyboardView.SwipeTracker: void addMovement(android.view.MotionEvent)>
<android.appwidget.AppWidgetHostView.ParcelableSparseArray: int describeContents()>
<android.widget.Spinner.DropDownAdapter: int getCount()>
<android.widget.DayPickerPagerAdapter: void setOnDaySelectedListener(android.widget.DayPickerPagerAdapter.OnDaySelectedListener)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: void loadAlgorithmSpecificParametersFromBeginResult(android.security.keymaster.KeymasterArguments)>
<android.app.EnterTransitionCoordinator: void prepareEnter()>
<android.app.ApplicationPackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)>
<android.widget.Toolbar.ExpandedActionViewMenuPresenter: void onRestoreInstanceState(android.os.Parcelable)>
<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache: boolean containsRemoteViewAt(int)>
<android.speech.tts.EventLoggerV1: void logSuccess(long,long,long)>
<android.app.ApplicationPackageManager: void addPackageToPreferred(java.lang.String)>
<android.opengl.GLErrorWrapper: void glGetLightxv(int,int,int[],int)>
<android.widget.DatePicker.DatePickerSpinnerDelegate: android.widget.CalendarView getCalendarView()>
<android.widget.Editor.TextActionModeCallback: boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu)>
<android.os.RemoteCallback.RemoteCallbackProxy: void onResult(android.os.Bundle)>
<android.app.ContextImpl: java.io.File[] getExternalCacheDirs()>
<android.app.ContextImpl: int checkSelfPermission(java.lang.String)>
<android.animation.PathKeyframes: void <init>(android.graphics.Path)>
<android.opengl.GLErrorWrapper: void glGetLightfv(int,int,java.nio.FloatBuffer)>
<android.widget.GridLayout.Axis: int[] getLeadingMargins()>
<android.app.ActivityTransitionCoordinator: void transitionStarted()>
<android.content.pm.IPackageManager: boolean setApplicationHiddenSettingAsUser(java.lang.String,boolean,int)>
<android.widget.DayPickerView: void onLayout(boolean,int,int,int,int)>
<android.view.ViewRootImpl.SyntheticTrackballHandler: void process(android.view.MotionEvent)>
<android.transition.TranslationAnimationCreator.TransitionPositionListener: void onTransitionStart(android.transition.Transition)>
<android.app.ApplicationPackageManager: java.util.List queryPermissionsByGroup(java.lang.String,int)>
<android.app.INotificationManager: void setNotificationsEnabledForPackage(java.lang.String,int,boolean)>
<android.media.AudioManager.OnAmPortUpdateListener: void onServiceDied()>
<android.content.SearchRecentSuggestionsProvider.DatabaseHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)>
<android.app.ApplicationPackageManager: android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName,int)>
<android.net.Uri.HierarchicalUri: boolean isRelative()>
<android.view.IWindowSession: void setWallpaperPosition(android.os.IBinder,float,float,float,float)>
<android.view.IWindowSession: int addToDisplay(android.view.IWindow,int,android.view.WindowManager.LayoutParams,int,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.view.InputChannel)>
<android.app.ContextImpl: void sendStickyOrderedBroadcast(android.content.Intent,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<android.content.res.XmlBlock.Parser: java.lang.String getNamespace(java.lang.String)>
<android.widget.ExpandableListConnector: java.lang.Object getItem(int)>
<android.content.pm.IPackageManager: void setComponentEnabledSetting(android.content.ComponentName,int,int,int)>
<android.app.ActivityThread.StopInfo: void run()>
<android.opengl.GLLogWrapper: java.lang.String getErrorString(int)>
<android.widget.TimePickerSpinnerDelegate: void <init>(android.widget.TimePicker,android.content.Context,android.util.AttributeSet,int,int)>
<android.view.AccessibilityInteractionController: void findAccessibilityNodeInfosByTextClientThread(long,java.lang.String,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)>
<android.os.CommonTimeUtils: int transactSetSockaddr(int,java.net.InetSocketAddress)>
<android.util.XmlPullAttributes: java.lang.String getIdAttribute()>
<android.widget.YearPickerView.YearAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.app.ApplicationPackageManager: void addOnPermissionsChangeListener(android.content.pm.PackageManager.OnPermissionsChangedListener)>
<android.util.XmlPullAttributes: int getAttributeListValue(int,java.lang.String[],int)>
<android.security.keystore.DelegatingX509Certificate: java.math.BigInteger getSerialNumber()>
<android.widget.Editor.PinnedPopupWindow: void show()>
<android.widget.DayPickerView: long getMaxDate()>
<android.opengl.GLErrorWrapper: void glGetIntegerv(int,int[],int)>
<android.preference.SeekBarPreference.SavedState: void <init>(android.os.Parcel)>
<android.opengl.GLLogWrapper: void glFrustumf(float,float,float,float,float,float)>
<android.animation.Keyframe.FloatKeyframe: void setValue(java.lang.Object)>
<android.opengl.GLErrorWrapper: void glBlendEquationSeparate(int,int)>
<android.app.ContextImpl: void revokeUriPermission(android.net.Uri,int)>
<android.filterfw.GraphEnvironment.GraphHandle: void <init>(android.filterfw.GraphEnvironment,android.filterfw.core.FilterGraph)>
<android.widget.AutoCompleteTextView.PassThroughClickListener: void onClick(android.view.View)>
<android.app.ApplicationPackageManager: boolean setDefaultBrowserPackageName(java.lang.String,int)>
<android.app.ApplicationPackageManager: int getMoveStatus(int)>
<android.app.SharedPreferencesImpl: java.util.Set getStringSet(java.lang.String,java.util.Set)>
<android.animation.IntKeyframeSet: void <init>(android.animation.Keyframe.IntKeyframe[])>
<android.graphics.Bitmap.Config: android.graphics.Bitmap.Config valueOf(java.lang.String)>
<android.media.midi.MidiPortImpl: int getDataOffset(byte[],int)>
<android.content.res.XmlBlock.Parser: float getAttributeFloatValue(int,float)>
<android.opengl.GLErrorWrapper: void glGetClipPlanex(int,int[],int)>
<android.app.BackStackRecord: android.app.FragmentTransaction setCustomAnimations(int,int)>
<android.net.LocalSocketImpl: void setFileDescriptorsForSend(java.io.FileDescriptor[])>
<android.widget.RemoteViews.BitmapCache: void <init>(android.os.Parcel)>
<android.graphics.drawable.RippleComponent: void enter(boolean)>
<android.widget.ExpandableListConnector: int getViewTypeCount()>
<android.preference.SeekBarVolumizer.Observer: void <init>(android.preference.SeekBarVolumizer,android.os.Handler)>
<android.app.MediaRouteButton.MediaRouterCallback: void onRouteUngrouped(android.media.MediaRouter,android.media.MediaRouter.RouteInfo,android.media.MediaRouter.RouteGroup)>
<android.opengl.GLErrorWrapper: void glBlendFuncSeparate(int,int,int,int)>
<android.hardware.location.IFusedLocationHardware: boolean supportsDeviceContextInjection()>
<android.widget.Editor.SelectionEndHandleView: void updateSelection(int)>
<android.security.keystore.AndroidKeyStoreECDSASignatureSpi: void addAlgorithmSpecificParametersToBegin(android.security.keymaster.KeymasterArguments)>
<android.opengl.GLLogWrapper: void glGetTexParameterfv(int,int,float[],int)>
<android.widget.ActionMenuPresenter.ActionMenuPopupCallback: android.widget.ListPopupWindow getPopup()>
<android.content.pm.IPackageManager: void resetRuntimePermissions()>
<android.telecom.VideoCallImpl.VideoCallListenerBinder: void changeCameraCapabilities(android.telecom.VideoProfile.CameraCapabilities)>
<android.app.ActivityThread.H: void handleMessage(android.os.Message)>
<android.widget.Toolbar.ExpandedActionViewMenuPresenter: android.os.Parcelable onSaveInstanceState()>
<android.os.FileObserver.ObserverThread: void stopWatching(int)>
<android.widget.AbsListView.InputConnectionWrapper: boolean setComposingRegion(int,int)>
<android.widget.TabHost.LabelIndicatorStrategy: android.view.View createIndicatorView()>
<android.view.SurfaceView.MyWindow: void resized(android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,boolean,android.content.res.Configuration)>
<android.widget.TimePickerClockDelegate.SavedState: boolean inKbMode()>
<android.app.SharedPreferencesImpl: float getFloat(java.lang.String,float)>
<android.app.INotificationManager: java.lang.String[] getPackagesRequestingNotificationPolicyAccess()>
<android.media.SubtitleTrack.CueList.EntryIterator: android.util.Pair next()>
<android.content.pm.IPackageManager: android.content.pm.PackageCleanItem nextPackageToClean(android.content.pm.PackageCleanItem)>
<android.animation.AnimatorSet.Node: android.animation.AnimatorSet.Node clone()>
<android.widget.RemoteViews.ReflectionAction: void writeToParcel(android.os.Parcel,int)>
<android.view.IWindowManager: void enableScreenIfNeeded()>
<android.app.INotificationManager: void notifyConditions(java.lang.String,android.service.notification.IConditionProvider,android.service.notification.Condition[])>
<android.test.InstrumentationTestCase: void injectInsrumentation(android.app.Instrumentation)>
<android.app.ContextImpl: java.io.File getNoBackupFilesDir()>
<android.accounts.AbstractAccountAuthenticator.Transport: void hasFeatures(android.accounts.IAccountAuthenticatorResponse,android.accounts.Account,java.lang.String[])>
<android.widget.DatePickerCalendarDelegate: void setEnabled(boolean)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: void initAlgorithmSpecificParameters()>
<android.widget.Editor.SelectionModifierCursorController: void onTouchEvent(android.view.MotionEvent)>
<android.widget.ActionMenuPresenter.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.location.LocationManager.ListenerTransport: void onLocationChanged(android.location.Location)>
<android.app.EnterTransitionCoordinator: android.transition.Transition getSharedElementTransition()>
<android.widget.ExpandableListConnector: android.widget.Filter getFilter()>
<android.view.ViewOverlay.OverlayViewGroup: android.view.ViewParent damageChildInParent(int,int,android.graphics.Rect)>
<android.app.ActivityTransitionState: void onResume()>
<android.location.ILocationManager: java.lang.String getBestProvider(android.location.Criteria,boolean)>
<android.printservice.PrintService.ServiceHandler: void handleMessage(android.os.Message)>
<android.widget.AbsListView.InputConnectionWrapper: boolean performPrivateCommand(java.lang.String,android.os.Bundle)>
<android.net.DhcpStateMachine.PollingState: boolean processMessage(android.os.Message)>
<android.opengl.EGLLogWrapper: boolean eglInitialize(javax.microedition.khronos.egl.EGLDisplay,int[])>
<android.graphics.drawable.RippleForeground: android.animation.Animator createSoftwareExit()>
<android.opengl.GLSurfaceView.GLThread: void queueEvent(java.lang.Runnable)>
<android.opengl.GLErrorWrapper: void glDeleteRenderbuffersOES(int,java.nio.IntBuffer)>
<android.opengl.GLErrorWrapper: void glGenRenderbuffersOES(int,java.nio.IntBuffer)>
<android.inputmethodservice.KeyboardView.SwipeTracker: float getXVelocity()>
<android.content.pm.IPackageManager: boolean isPackageSignedByKeySetExactly(java.lang.String,android.content.pm.KeySet)>
<android.content.ContentProvider.Transport: int delete(java.lang.String,android.net.Uri,java.lang.String,java.lang.String[])>
<android.opengl.GLLogWrapper: void glFramebufferTexture2DOES(int,int,int,int,int)>
<android.widget.Editor.InsertionHandleView: void show()>
<android.opengl.GLErrorWrapper: boolean glIsFramebufferOES(int)>
<android.net.Uri.StringUri: java.lang.String getScheme()>
<android.speech.RecognitionService.RecognitionServiceBinder: void stopListening(android.speech.IRecognitionListener)>
<android.widget.ListPopupWindow.DropDownListView: boolean isFocused()>
<android.webkit.Plugin.DefaultClickHandler: void onClick(android.content.DialogInterface,int)>
<android.widget.Spinner.DialogPopup: void onClick(android.content.DialogInterface,int)>
<android.opengl.GLLogWrapper: void glDeleteRenderbuffersOES(int,java.nio.IntBuffer)>
<android.net.DhcpStateMachine.WaitBeforeStartState: void enter()>
<android.widget.RemoteViewsService.RemoteViewsFactoryAdapter: android.widget.RemoteViews getLoadingView()>
<android.webkit.WebSyncManager: void sync()>
<android.animation.PropertyValuesHolder.PointFToFloatArray: float[] convert(android.graphics.PointF)>
<android.app.ApplicationPackageManager: int checkSignatures(java.lang.String,java.lang.String)>
<android.widget.AbsListView.AbsPositionScroller: void start(int)>
<android.app.Notification.BuilderRemoteViews: void <init>(android.os.Parcel)>
<android.speech.tts.AbstractEventLogger: void logSuccess(long,long,long)>
<android.text.Layout.SpannedEllipsizer: java.lang.CharSequence subSequence(int,int)>
<android.hardware.input.IInputManager: android.hardware.input.TouchCalibration getTouchCalibrationForInputDevice(java.lang.String,int)>
<android.webkit.JsDialogHelper.PositiveListener: void onClick(android.content.DialogInterface,int)>
<android.opengl.GLErrorWrapper: void glGetTexParameterfv(int,int,java.nio.FloatBuffer)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.PKCS1Padding: void initAlgorithmSpecificParameters(java.security.spec.AlgorithmParameterSpec)>
<android.util.MapCollections.EntrySet: void clear()>
<android.media.CCParser.CCData: android.media.CCParser.CCData[] fromByteArray(byte[])>
<android.content.res.XmlBlock.Parser: java.lang.String getAttributeNamespace(int)>
<android.widget.RemoteViews.SetOnClickFillInIntent: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>
<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi.CTR.NoPadding: void finalize()>
<android.preference.GenericInflater: boolean onCreateCustomFromTag(org.xmlpull.v1.XmlPullParser,java.lang.Object,android.util.AttributeSet)>
<android.view.ViewRootImpl.SyntheticJoystickHandler: void process(android.view.MotionEvent)>
<android.opengl.GLErrorWrapper: void glTranslatef(float,float,float)>
<android.widget.DatePickerCalendarDelegate: void setSpinnersShown(boolean)>
<android.content.pm.IPackageManager: java.util.List getPersistentApplications(int)>
<android.net.IpConfiguration.IpAssignment: android.net.IpConfiguration.IpAssignment valueOf(java.lang.String)>
<android.app.ContextImpl: android.content.pm.ApplicationInfo getApplicationInfo()>
<android.widget.TextView.ChangeWatcher: void onTextChanged(java.lang.CharSequence,int,int,int)>
<android.security.keystore.AndroidKeyStoreSignatureSpiBase: void engineInitVerify(java.security.PublicKey)>
<android.hardware.usb.IUsbManager: void denyUsbDebugging()>
<android.speech.RecognitionService.RecognitionServiceBinder: void <init>(android.speech.RecognitionService)>
<android.net.Uri.OpaqueUri: java.lang.String getUserInfo()>
<android.transition.Fade.FadeAnimatorListener: void onAnimationStart(android.animation.Animator)>
<android.widget.Editor.PinnedPopupWindow: int getVerticalLocalPosition(int)>
<android.app.INotificationManager: int getHintsFromListener(android.service.notification.INotificationListener)>
<android.animation.Keyframe.IntKeyframe: void setValue(java.lang.Object)>
<android.appwidget.AppWidgetHost.UpdateHandler: void handleMessage(android.os.Message)>
<android.widget.Editor.SelectionModifierCursorController: void onTouchModeChanged(boolean)>
<android.widget.RemoteViews.ViewGroupAction: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>
<android.widget.CalendarView.AbstractCalendarViewDelegate: int getSelectedWeekBackgroundColor()>
<android.text.SpannableStringInternal: java.lang.Object[] getSpans(int,int,java.lang.Class)>
<android.widget.AutoCompleteTextView.PopupDataSetObserver: void onChanged()>
<android.view.ViewOverlay.OverlayViewGroup: void invalidate(android.graphics.Rect)>
<android.speech.tts.AudioPlaybackHandler: void stop()>
<android.os.StrictMode.AndroidBlockGuardPolicy: int getPolicyMask()>
<android.view.RenderNodeAnimator.DelayedAnimationHelper: void removeDelayedAnimation(android.view.RenderNodeAnimator)>
<android.graphics.drawable.RippleComponent: void cancel()>
<android.widget.CalendarView.AbstractCalendarViewDelegate: void setUnfocusedMonthDateColor(int)>
<android.widget.TimePickerClockDelegate: int getBaseline()>
<android.opengl.GLLogWrapper: void glGenFramebuffersOES(int,java.nio.IntBuffer)>
<android.hardware.input.IInputManager: boolean injectInputEvent(android.view.InputEvent,int)>
<android.content.pm.IPackageManager: int checkPermission(java.lang.String,java.lang.String,int)>
<android.net.Uri.AbstractPart: java.lang.String getDecoded()>
<android.hardware.ICameraService: int removeListener(android.hardware.ICameraServiceListener)>
<android.content.AbstractThreadedSyncAdapter.SyncThread: void run()>
<android.preference.PreferenceGroupAdapter.PreferenceLayout: int compareTo(java.lang.Object)>
<android.net.wifi.SupplicantState: boolean isDriverActive(android.net.wifi.SupplicantState)>
<android.speech.tts.AbstractEventLogger: void onCompleted(int)>
<android.opengl.GLSurfaceView.EglHelper: void destroySurface()>
<android.widget.RemoteViewsAdapter.RemoteViewsIndexMetaData: void set(android.widget.RemoteViews,long)>
<android.widget.StackView.LayoutParams: void setVerticalOffset(int)>
<android.app.ContextImpl: void enforceCallingOrSelfUriPermission(android.net.Uri,int,java.lang.String)>
<android.app.BackStackRecord: java.lang.CharSequence getBreadCrumbTitle()>
<android.app.ApplicationLoaders: java.lang.ClassLoader getClassLoader(java.lang.String,java.lang.String,java.lang.ClassLoader)>
<android.content.pm.IPackageManager: void enterSafeMode()>
<android.widget.RemoteViews.SetDrawableParameters: void <init>(android.widget.RemoteViews,int,boolean,int,int,android.graphics.PorterDuff.Mode,int)>
<android.graphics.drawable.RippleComponent: void onBoundsChange()>
<android.widget.RemoteViews.TextViewDrawableAction: void <init>(android.widget.RemoteViews,int,boolean,int,int,int,int)>
<android.content.pm.IPackageManager: boolean isPackageSignedByKeySet(java.lang.String,android.content.pm.KeySet)>
<android.view.AccessibilityInteractionController.PrivateHandler: void <init>(android.view.AccessibilityInteractionController,android.os.Looper)>
<android.view.ViewDebug.FlagToString: boolean outputIf()>
<android.widget.RemoteViewsAdapter.RemoteViewsFrameLayout: void onRemoteViewsLoaded(android.widget.RemoteViews,android.widget.RemoteViews.OnClickHandler)>
<android.content.ContentProvider.Transport: android.net.Uri uncanonicalize(java.lang.String,android.net.Uri)>
<android.opengl.GLLogWrapper: void glPointParameterf(int,float)>
<com.android.server.ResettableTimeout.T: void run()>
<android.app.ActivityTransitionCoordinator: void sharedElementTransitionComplete()>
<android.media.ImageWriter.WriterSurfaceImage: int getWidth()>
<android.widget.CursorAdapter.ChangeObserver: void <init>(android.widget.CursorAdapter)>
<android.widget.CalendarView.AbstractCalendarViewDelegate: android.graphics.drawable.Drawable getSelectedDateVerticalBar()>
<android.widget.HorizontalScrollView.SavedState: void <init>(android.os.Parcel)>
<android.app.SharedPreferencesImpl.EditorImpl: android.content.SharedPreferences.Editor putInt(java.lang.String,int)>
<android.widget.AbsListView.InputConnectionWrapper: java.lang.CharSequence getTextBeforeCursor(int,int)>
<android.widget.ListView.FocusSelector: android.widget.ListView.FocusSelector setup(int,int)>
<android.widget.Editor.PositionListener: void addSubscriber(android.widget.Editor.TextViewPositionListener,boolean)>
<android.app.ServiceConnectionLeaked: void <init>(java.lang.String)>
<android.content.pm.IPackageManager: void replacePreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName,int)>
<android.widget.ActionMenuPresenter.SavedState: int describeContents()>
<android.transition.ChangeTransform.PathAnimatorMatrix: void <init>(android.view.View,float[])>
<android.view.IWindowManager: boolean startViewServer(int)>
<android.content.res.XmlBlock.Parser: void setProperty(java.lang.String,java.lang.Object)>
<android.app.ExitTransitionCoordinator: void onTransitionsComplete()>
<android.widget.TableLayout.PassThroughHierarchyChangeListener: void onChildViewRemoved(android.view.View,android.view.View)>
<android.app.Notification.BuilderRemoteViews: android.app.Notification.BuilderRemoteViews clone()>
<android.widget.Spinner.DialogPopup: java.lang.CharSequence getHintText()>
<android.app.ContextImpl: void setOuterContext(android.content.Context)>
<android.widget.Spinner.DropDownAdapter: int getViewTypeCount()>
<android.widget.ImageView.ImageViewBitmapDrawable: void setBitmap(android.graphics.Bitmap)>
<android.app.Instrumentation.1MenuRunnable: void <init>(android.app.Instrumentation,android.app.Activity,int,int)>
<android.util.MapCollections: int colGetSize()>
<android.widget.RadialTimePickerView.RadialPickerTouchHelper: int getVirtualViewAt(float,float)>
<android.security.IKeystoreService: byte[] get(java.lang.String)>
<android.util.ReflectiveProperty: void <init>(java.lang.Class,java.lang.Class,java.lang.String)>
<android.media.midi.MidiPortImpl: int getPacketType(byte[],int)>
<android.hardware.input.IInputManager: void addKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,java.lang.String)>
<android.preference.EditTextPreference.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.test.InstrumentationTestCase: void injectInstrumentation(android.app.Instrumentation)>
<android.transition.Visibility.DisappearListener: void onAnimationCancel(android.animation.Animator)>
<android.media.WebVttRenderingWidget.RegionLayout: boolean prune()>
<android.opengl.GLSurfaceView.GLThread: void requestRender()>
<android.view.InputFilter.H: void <init>(android.view.InputFilter,android.os.Looper)>
<android.net.Uri.Part: android.net.Uri.Part fromDecoded(java.lang.String)>
<android.app.INotificationManager: android.service.notification.StatusBarNotification[] getActiveNotifications(java.lang.String)>
<android.opengl.GLErrorWrapper: void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)>
<android.opengl.GLErrorWrapper: boolean glIsRenderbufferOES(int)>
<android.widget.StackView.StackFrame: void <init>(android.content.Context)>
<android.hardware.location.IFusedLocationHardwareSink: void onDiagnosticDataAvailable(java.lang.String)>
<android.security.keystore.AndroidKeyStoreSignatureSpiBase: void engineUpdate(byte)>
<android.widget.ActionMenuView.MenuBuilderCallback: void onMenuModeChange(com.android.internal.view.menu.MenuBuilder)>
<android.opengl.GLErrorWrapper: void glPolygonOffset(float,float)>
<android.app.FragmentState: void <init>(android.os.Parcel)>
<android.app.Instrumentation.ActivityGoing: boolean queueIdle()>
<android.security.keystore.AndroidKeyStoreSignatureSpiBase: long getOperationHandle()>
<android.app.WallpaperManager.FastBitmapDrawable: void setColorFilter(android.graphics.ColorFilter)>
<android.content.pm.IPackageManager: boolean updateIntentVerificationStatus(java.lang.String,int,int)>
<android.widget.ActionMenuPresenter.OpenOverflowRunnable: void <init>(android.widget.ActionMenuPresenter,android.widget.ActionMenuPresenter.OverflowPopup)>
<android.widget.AbsListView.PositionScroller: void start(int,int)>
<android.graphics.Paint.Style: android.graphics.Paint.Style valueOf(java.lang.String)>
<android.util.ContainerHelpers: int binarySearch(long[],int,long)>
<android.opengl.GLErrorWrapper: int glCheckFramebufferStatusOES(int)>
<android.opengl.GLLogWrapper: void glCurrentPaletteMatrixOES(int)>
<android.hardware.usb.IUsbManager: void setDevicePackage(android.hardware.usb.UsbDevice,java.lang.String,int)>
<android.animation.AnimatorSet.DependencyListener: void onAnimationCancel(android.animation.Animator)>
<android.opengl.GLErrorWrapper: void glDrawTexivOES(java.nio.IntBuffer)>
<android.widget.FastScroller: boolean isAlwaysShowEnabled()>
<android.app.BackStackRecord: android.app.FragmentTransaction setTransitionStyle(int)>
<android.widget.Editor.PinnedPopupWindow: void createPopupWindow()>
<android.view.ViewRootImpl.W: void dispatchGetNewSurface()>
<android.accounts.AccountManager.AmsTask: void <init>(android.accounts.AccountManager,android.app.Activity,android.os.Handler,android.accounts.AccountManagerCallback)>
<android.view.ViewGroup.HoverTarget: android.view.ViewGroup.HoverTarget obtain(android.view.View)>
<android.media.ImageReader.SurfaceImage.SurfacePlane: int getRowStride()>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.OAEPWithMGF1Padding: void loadAlgorithmSpecificParametersFromBeginResult(android.security.keymaster.KeymasterArguments)>
<android.app.SharedPreferencesImpl: long getLong(java.lang.String,long)>
<android.util.XmlPullAttributes: int getStyleAttribute()>
<android.app.RemoteServiceException: void <init>(java.lang.String)>
<android.app.ApplicationPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>
<android.widget.TextView.ChangeWatcher: void afterTextChanged(android.text.Editable)>
<android.widget.NumberPicker.PressedStateHelper: void run()>
<android.widget.DatePickerCalendarDelegate.SavedState: int getListPositionOffset()>
<android.speech.tts.EventLogTags: void writeTtsSpeakSuccess(java.lang.String,int,int,int,java.lang.String,int,int,long,long,long)>
<android.content.res.XmlBlock.Parser: char[] getTextCharacters(int[])>
<android.renderscript.ProgramVertexFixedFunction.InternalBuilder: android.renderscript.ProgramVertexFixedFunction.InternalBuilder addInput(android.renderscript.Element)>
<android.opengl.GLLogWrapper: void glDrawTexsvOES(java.nio.ShortBuffer)>
<android.inputmethodservice.IInputMethodSessionWrapper: void updateSelection(int,int,int,int,int,int)>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi.BufferAllOutputUntilDoFinalStreamer: byte[] doFinal(byte[],int,int,byte[],byte[])>
<android.transition.TranslationAnimationCreator: android.animation.Animator createAnimation(android.view.View,android.transition.TransitionValues,int,int,float,float,float,float,android.animation.TimeInterpolator,android.transition.Transition)>
<android.speech.SpeechRecognizer.Connection: void onServiceDisconnected(android.content.ComponentName)>
<android.widget.DatePicker.DatePickerSpinnerDelegate: void setCalendarViewShown(boolean)>
<android.graphics.Paint.Cap: android.graphics.Paint.Cap valueOf(java.lang.String)>
<android.widget.Editor.InsertionHandleView: int getHotspotX(android.graphics.drawable.Drawable,boolean)>
<com.android.internal.annotations.GuardedBy: java.lang.String value()>
<android.opengl.GLLogWrapper: void glCopyTexImage2D(int,int,int,int,int,int,int,int)>
<android.widget.DateTimeView.ReceiverInfo: void removeView(android.widget.DateTimeView)>
<android.opengl.GLLogWrapper: void glTexEnviv(int,int,java.nio.IntBuffer)>
<android.app.ContextImpl: android.content.Context createConfigurationContext(android.content.res.Configuration)>
<android.opengl.GLLogWrapper: void glTexGenfv(int,int,java.nio.FloatBuffer)>
<android.widget.TimePickerSpinnerDelegate.SavedState: int getMinute()>
<android.util.MapCollections: boolean retainAllHelper(java.util.Map,java.util.Collection)>
<android.hardware.SystemSensorManager.BaseEventQueue: boolean addSensor(android.hardware.Sensor,int,int)>
<android.app.ApplicationPackageManager: void verifyPendingInstall(int,int)>
<android.widget.CalendarViewLegacyDelegate: int getWeekDayTextAppearance()>
<android.widget.AbsListView.RecycleBin: void markChildrenDirty()>
<android.security.keymaster.KeymasterArgument: void <init>(int)>
<android.widget.CalendarView.AbstractCalendarViewDelegate: void setWeekNumberColor(int)>
<android.view.IWindowSession: void wallpaperCommandComplete(android.os.IBinder,android.os.Bundle)>
<android.graphics.Interpolator.Result: android.graphics.Interpolator.Result[] values()>
<android.app.Activity.HostCallbacks: int onGetWindowAnimations()>
<android.app.INotificationManager: void applyRestore(byte[],int)>
<android.widget.StackView.StackSlider: void <init>(android.widget.StackView)>
<android.net.LocalSocketImpl: void create(int)>
<android.media.RemoteController.MediaControllerCallback: void onPlaybackStateChanged(android.media.session.PlaybackState)>
<android.content.res.XmlBlock.Parser: int getAttributeNameResource(int)>
<android.opengl.GLLogWrapper.PointerInfo: int getStride()>
<android.view.ViewRootImpl.NativePostImeInputStage: void <init>(android.view.ViewRootImpl,android.view.ViewRootImpl.InputStage,java.lang.String)>
<android.security.IKeystoreService: int exist(java.lang.String,int)>
<android.media.MediaRouter.CallbackInfo: boolean filterRouteEvent(android.media.MediaRouter.RouteInfo)>
<android.webkit.WebSyncManager: void onSyncInit()>
<android.widget.AbsListView.InputConnectionWrapper: boolean performEditorAction(int)>
<android.app.ActivityThread.DropBoxReporter: void addData(java.lang.String,byte[],int)>
<android.hardware.usb.IUsbManager: android.hardware.usb.UsbAccessory getCurrentAccessory()>
<android.animation.KeyframeSet: java.lang.Class getType()>
<android.hardware.SystemSensorManager.InjectEventQueue: void <init>(android.hardware.SystemSensorManager,android.os.Looper,android.hardware.SystemSensorManager,java.lang.String)>
<android.content.pm.IPackageManager: java.lang.String getDefaultBrowserPackageName(int)>
<android.accounts.AccountManager.Future2Task: java.lang.Object getResult(long,java.util.concurrent.TimeUnit)>
<android.net.Uri.OpaqueUri: java.lang.String getLastPathSegment()>
<android.app.ActivityThread.ApplicationThread: void dumpDbInfo(java.io.FileDescriptor,java.lang.String[])>
<android.widget.CalendarViewLegacyDelegate.WeekView: java.util.Calendar getFirstDay()>
<android.media.MediaPlayer.TimeProvider: void onSeekComplete(android.media.MediaPlayer)>
<android.security.keystore.AndroidKeyStoreSignatureSpiBase: void engineInitSign(java.security.PrivateKey)>
<android.os.StrictMode.AndroidBlockGuardPolicy: void <init>(int)>
<android.app.ContextImpl: boolean deleteDatabase(java.lang.String)>
<android.media.RemoteController.MediaControllerCallback: void onMetadataChanged(android.media.MediaMetadata)>
<android.app.Activity.HostCallbacks: void onRequestPermissionsFromFragment(android.app.Fragment,java.lang.String[],int)>
<android.widget.Editor.SuggestionsPopupWindow: void initContentView()>
<android.security.keystore.AndroidKeyStoreRSACipherSpi: int engineGetOutputSize(int)>
<android.view.ViewRootImpl.AccessibilityInteractionConnectionManager: void ensureConnection()>
<android.print.PrintManager.PrintDocumentAdapterDelegate: void write(android.print.PageRange[],android.os.ParcelFileDescriptor,android.print.IWriteResultCallback,int)>
<android.app.ContextImpl: java.lang.String getPackageResourcePath()>
<android.mtp.MtpPropertyList: void append(int,int,java.lang.String)>
<android.content.pm.IPackageManager: void updatePermissionFlagsForAllApps(int,int,int)>
<android.app.ActivityThread.ApplicationThread: void scheduleEnterAnimationComplete(android.os.IBinder)>
<android.widget.RemoteViews.Action: void setBitmapCache(android.widget.RemoteViews.BitmapCache)>
<android.hardware.SystemSensorManager.InjectEventQueue: void dispatchSensorEvent(int,float[],int,long)>
<android.widget.RemoteViews.TextViewSizeAction: void <init>(android.widget.RemoteViews,android.os.Parcel)>
<android.widget.DayPickerView: void setDayOfWeekTextAppearance(int)>
<android.view.HardwareLayer: void detachSurfaceTexture()>
<android.transition.Fade.FadeAnimatorListener: void onAnimationResume(android.animation.Animator)>
<android.widget.FastScroller: void setScrollbarPosition(int)>
<android.content.pm.IPackageManager: boolean getApplicationHiddenSettingAsUser(java.lang.String,int)>
<android.opengl.GLLogWrapper: void glGenBuffers(int,int[],int)>
<android.widget.DatePickerCalendarDelegate: java.lang.CharSequence getAccessibilityClassName()>
<android.view.View.SendViewStateChangedAccessibilityEvent: void run()>
<android.security.keystore.DelegatingX509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>
<android.emoji.EmojiFactory.CustomLinkedHashMap: void <init>(android.emoji.EmojiFactory)>
<android.media.Utils: int gcd(int,int)>
<android.media.ImageUtils: int getEstimatedNativeAllocBytes(int,int,int,int)>
<android.view.AccessibilityIterators.WordTextSegmentIterator: android.view.AccessibilityIterators.WordTextSegmentIterator getInstance(java.util.Locale)>
<android.util.XmlPullAttributes: int getAttributeIntValue(java.lang.String,java.lang.String,int)>
<android.os.StrictMode.StrictModeDiskWriteViolation: void <init>(int)>
<android.preference.PreferenceInflater: android.preference.GenericInflater.Parent onMergeRoots(android.preference.GenericInflater.Parent,boolean,android.preference.GenericInflater.Parent)>
<android.widget.TimePickerClockDelegate: void setCurrentLocale(java.util.Locale)>
<android.media.MediaRouter.CallbackInfo: boolean filterRouteEvent(int)>
<android.app.ApplicationPackageManager: void installPackage(android.net.Uri,android.app.PackageInstallObserver,int,java.lang.String)>
<android.opengl.GLLogWrapper: void glMultMatrixx(int[],int)>
<android.opengl.GLErrorWrapper: void glGetClipPlanef(int,float[],int)>
<android.widget.GridLayout.Axis: void invalidateValues()>
<android.content.res.ThemedResourceCache: void put(long,android.content.res.Resources.Theme,java.lang.Object)>
<android.app.ContextImpl: android.graphics.drawable.Drawable getWallpaper()>
<android.opengl.GLLogWrapper: void glGetTexEnviv(int,int,int[],int)>
<android.opengl.GLLogWrapper: void glTexGeni(int,int,int)>
<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: void initAlgorithmSpecificParameters()>
<android.widget.AbsListView.InputConnectionWrapper: boolean beginBatchEdit()>
<android.app.BackStackRecord: int getBreadCrumbShortTitleRes()>
<android.transition.Transition.ArrayListManager: java.util.ArrayList add(java.util.ArrayList,java.lang.Object)>
<android.view.ViewRootImpl.AccessibilityInteractionConnectionManager: void onAccessibilityStateChanged(boolean)>
<android.transition.TranslationAnimationCreator.TransitionPositionListener: void onAnimationCancel(android.animation.Animator)>
<android.opengl.GLLogWrapper: void glClipPlanef(int,float[],int)>
<android.app.Instrumentation.SyncRunnable: void <init>(java.lang.Runnable)>
<android.media.Utils: android.util.Range[] intersectSortedDistinctRanges(android.util.Range[],android.util.Range[])>
<android.media.JetPlayer.NativeEventHandler: void handleMessage(android.os.Message)>
<android.opengl.GLErrorWrapper: void glDisable(int)>
<android.app.BackStackRecord: android.app.FragmentTransaction replace(int,android.app.Fragment,java.lang.String)>
<android.app.ContextImpl: boolean stopService(android.content.Intent)>
<android.widget.TabHost.ViewIdContentStrategy: void tabClosed()>
<android.opengl.GLErrorWrapper: void glDeleteTextures(int,java.nio.IntBuffer)>
<android.accounts.AccountManager.BaseFutureTask: void startTask()>
<android.app.FragmentState: void <init>(android.app.Fragment)>
<android.view.ViewRootImpl.ViewRootHandler: java.lang.String getMessageName(android.os.Message)>
<android.content.res.XmlBlock.Parser: java.lang.String getNamespace()>
<android.opengl.EGLLogWrapper: boolean eglQueryContext(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext,int,int[])>
<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi.CBC: void <init>(int)>
<android.app.ContextImpl: android.app.ContextImpl createSystemContext(android.app.ActivityThread)>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationIcon(android.content.pm.ApplicationInfo)>
<android.net.Uri.OpaqueUri: java.lang.String getPath()>
<android.text.SpannableStringInternal: int length()>
<android.content.res.XmlBlock.Parser: int getAttributeListValue(int,java.lang.String[],int)>
<android.app.ActivityTransitionCoordinator.GhostViewListeners: boolean onPreDraw()>
<android.accounts.AccountManager.BaseFutureTask.Response: void <init>(android.accounts.AccountManager.BaseFutureTask)>
<android.util.MapCollections: java.lang.Object colSetValue(int,java.lang.Object)>
<android.widget.ExpandableListConnector.GroupMetadata: android.widget.ExpandableListConnector.GroupMetadata obtain(int,int,int,long)>
<android.widget.CalendarViewMaterialDelegate: void setDate(long,boolean,boolean)>
<android.widget.RemoteViews.ViewPaddingAction: void <init>(android.widget.RemoteViews,int,int,int,int,int)>
<android.webkit.ConsoleMessage.MessageLevel: android.webkit.ConsoleMessage.MessageLevel[] values()>
<android.opengl.GLErrorWrapper: void glColor4ub(byte,byte,byte,byte)>
<android.opengl.GLLogWrapper: void glFogx(int,int)>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationBanner(java.lang.String)>
<android.inputmethodservice.IInputMethodSessionWrapper: android.view.inputmethod.InputMethodSession getInternalInputMethodSession()>
<android.opengl.GLLogWrapper: void glPixelStorei(int,int)>
<android.widget.AbsListView.CheckForLongPress: void run()>
<android.view.AccessibilityIterators.CharacterTextSegmentIterator: int[] following(int)>
<android.widget.AbsListView.AbsPositionScroller: void startWithOffset(int,int)>
<android.view.SurfaceView.MyWindow: void dispatchGetNewSurface()>
<android.os.FileObserver.ObserverThread: void run()>
<android.app.ContextImpl: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>
<android.renderscript.FileA3D.EntryType: android.renderscript.FileA3D.EntryType[] values()>
<android.net.Uri.OpaqueUri: java.lang.String getSchemeSpecificPart()>
<android.content.pm.IPackageManager: void removePermission(java.lang.String)>
<android.app.BackStackRecord: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])>
<android.text.TextUtils.TruncateAt: android.text.TextUtils.TruncateAt valueOf(java.lang.String)>
<android.widget.RemoteViews.ViewPaddingAction: void writeToParcel(android.os.Parcel,int)>
<android.widget.AbsListView.AbsPositionScroller: void startWithOffset(int,int,int)>
<android.util.XmlPullAttributes: java.lang.String getAttributeName(int)>
<android.speech.tts.AudioPlaybackHandler: boolean isSpeaking()>
<android.animation.IntKeyframeSet: void invalidateCache()>
<android.content.pm.IPackageManager: android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName,int,int)>
<android.util.XmlPullAttributes: int getAttributeResourceValue(java.lang.String,java.lang.String,int)>
<android.app.ContextImpl: java.lang.ClassLoader getClassLoader()>
<android.widget.SimpleMonthView.MonthViewTouchHelper: void getVisibleVirtualViews(android.util.IntArray)>
<android.content.ContentResolver.ParcelFileDescriptorInner: void releaseResources()>
<android.view.ViewDebug.RecyclerTraceType: android.view.ViewDebug.RecyclerTraceType valueOf(java.lang.String)>
<android.graphics.drawable.RippleBackground: android.graphics.drawable.RippleComponent.RenderNodeAnimatorSet createHardwareExit(android.graphics.Paint)>
<android.opengl.GLLogWrapper: void glScalef(float,float,float)>
<android.view.IWindowManager: void startFreezingScreen(int,int)>
<android.content.pm.IPackageManager: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String,int)>
<android.view.IWindowManager: boolean requestAssistScreenshot(com.android.internal.app.IAssistScreenshotReceiver)>
<android.speech.tts.AudioPlaybackHandler: void start()>
<android.view.View.PerformClick: void run()>
<android.app.ApplicationPackageManager: void extendVerificationTimeout(int,int,long)>
<android.opengl.GLErrorWrapper: void glPointParameterfv(int,float[],int)>
<android.security.keymaster.KeymasterBooleanArgument: void writeValue(android.os.Parcel)>
<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGLDisplay eglGetDisplay(java.lang.Object)>
<android.widget.Editor.EasyEditPopupWindow: void initContentView()>
<android.opengl.GLLogWrapper: void glCopyTexSubImage2D(int,int,int,int,int,int,int,int)>
<android.view.ViewRootImpl.NativePostImeInputStage: int onProcess(android.view.ViewRootImpl.QueuedInputEvent)>
<android.util.MapCollections.EntrySet: boolean retainAll(java.util.Collection)>
<android.content.pm.IPackageManager: boolean setBlockUninstallForUser(java.lang.String,boolean,int)>
<android.app.ContextImpl: void unregisterReceiver(android.content.BroadcastReceiver)>
<android.view.Choreographer.CallbackQueue: void removeCallbacksLocked(java.lang.Object,java.lang.Object)>
<android.app.ActivityThread.ApplicationThread: void scheduleOnNewActivityOptions(android.os.IBinder,android.app.ActivityOptions)>
<android.transition.ChangeTransform.Transforms: void restore(android.view.View)>
<android.app.ApplicationPackageManager: boolean isPackageAvailable(java.lang.String)>
<android.app.ApplicationPackageManager: java.lang.CharSequence getText(java.lang.String,int,android.content.pm.ApplicationInfo)>
<android.graphics.Picture.RecordingCanvas: void drawPicture(android.graphics.Picture)>
<android.opengl.EGLLogWrapper: boolean eglTerminate(javax.microedition.khronos.egl.EGLDisplay)>
<android.widget.DayPickerPagerAdapter: void setSelectedDay(java.util.Calendar)>
<android.util.MapCollections.EntrySet: int size()>
<android.app.ContextImpl: java.lang.Object getSystemService(java.lang.String)>
<android.app.Activity.HostCallbacks: java.lang.Object onGetHost()>
<android.mtp.MtpPropertyList: void <init>(int,int)>
<android.location.LocationManager.GpsStatusListenerTransport: void onSvStatusChanged(int,int[],float[],float[],float[],int,int,int)>
<android.app.ApplicationPackageManager: android.content.pm.ResolveInfo resolveActivityAsUser(android.content.Intent,int,int)>
<android.net.LocalSocketImpl: boolean supportsUrgentData()>
<android.print.PrintManager.PrintDocumentAdapterDelegate: void finish()>
<android.view.Choreographer.FrameHandler: void handleMessage(android.os.Message)>
<android.opengl.GLLogWrapper: void glClearColorx(int,int,int,int)>
<android.opengl.GLErrorWrapper: void glMultMatrixx(int[],int)>
<android.view.accessibility.AccessibilityCache: void addWindow(android.view.accessibility.AccessibilityWindowInfo)>
<android.text.PackedIntVector: void setValue(int,int,int)>
<android.opengl.GLErrorWrapper: void glLightf(int,int,float)>
<android.widget.SlidingDrawer.DrawerToggler: void onClick(android.view.View)>
<android.app.SharedPreferencesImpl.EditorImpl: android.content.SharedPreferences.Editor remove(java.lang.String)>
<android.widget.RemoteViews.SetEmptyView: void writeToParcel(android.os.Parcel,int)>
<android.security.keymaster.KeymasterDateArgument: void <init>(int,java.util.Date)>
<android.speech.tts.BlockingAudioTrack: void stop()>
<android.content.res.DrawableCache: android.graphics.drawable.Drawable getInstance(long,android.content.res.Resources.Theme)>
<android.app.IWallpaperManager: void settingsRestored()>
<android.opengl.GLErrorWrapper: void glGetBufferParameteriv(int,int,int[],int)>
<android.app.ApplicationPackageManager: java.util.List queryIntentServicesAsUser(android.content.Intent,int,int)>
<android.security.keymaster.KeymasterArgument: int describeContents()>
<android.widget.ScrollView.SavedState: java.lang.String toString()>
<android.widget.TimePickerClockDelegate: void setCurrentMinute(int)>
<android.webkit.WebSyncManager: void <init>(android.content.Context,java.lang.String)>
<android.content.pm.IPackageManager: android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName,int,int)>
<android.security.keystore.AndroidKeyStoreSignatureSpiBase: byte[] engineSign()>
<android.opengl.GLErrorWrapper: void glPointParameterx(int,int)>
<android.net.Uri.HierarchicalUri: java.lang.String getEncodedPath()>
<android.print.PrintManager.PrintJobStateChangeListenerWrapper: void <init>(android.print.PrintManager.PrintJobStateChangeListener,android.os.Handler)>
<android.widget.DatePickerCalendarDelegate: void setMaxDate(long)>
<android.app.IWallpaperManager: void setWallpaperComponent(android.content.ComponentName)>
<android.widget.TextView.BufferType: android.widget.TextView.BufferType[] values()>
<android.media.SoundPool.EventHandler: void <init>(android.media.SoundPool,android.os.Looper)>
<android.widget.NumberPicker.InputTextFilter: char[] getAcceptedChars()>
<android.security.keystore.AndroidKeyStoreSignatureSpiBase: void engineSetParameter(java.lang.String,java.lang.Object)>
<android.renderscript.Sampler.Value: android.renderscript.Sampler.Value[] values()>
<android.content.res.XmlBlock.Parser: void setInput(java.io.InputStream,java.lang.String)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.NoPadding: void finalize()>
<android.content.pm.IPackageManager: void resetApplicationPreferences(int)>
<android.media.RemoteControlClient.EventHandler: void <init>(android.media.RemoteControlClient,android.media.RemoteControlClient,android.os.Looper)>
<android.content.pm.IPackageManager: int getPreferredActivities(java.util.List,java.util.List,java.lang.String)>
<android.widget.AbsListView.InputConnectionWrapper: boolean setSelection(int,int)>
<android.security.keymaster.KeymasterBooleanArgument: void <init>(int)>
<android.widget.AppSecurityPermissions.PermissionInfoComparator: int compare(android.widget.AppSecurityPermissions.MyPermissionInfo,android.widget.AppSecurityPermissions.MyPermissionInfo)>
<android.preference.GenericInflater: java.lang.Object onCreateItem(java.lang.String,android.util.AttributeSet)>
<android.opengl.GLErrorWrapper: void glGetMaterialfv(int,int,float[],int)>
<android.widget.DatePicker.DatePickerSpinnerDelegate: boolean getCalendarViewShown()>
<android.media.WebVttRenderingWidget.RegionLayout: void measureForParent(int,int)>
<android.database.CursorToBulkCursorAdaptor.ContentObserverProxy: void onChange(boolean,android.net.Uri)>
<android.view.IWindowManager: int getAppOrientation(android.view.IApplicationToken)>
<android.widget.Gallery.FlingRunnable: void startUsingVelocity(int)>
<android.net.Uri.AbstractHierarchicalUri: java.lang.String getLastPathSegment()>
<android.opengl.GLLogWrapper: void glGetMaterialfv(int,int,float[],int)>
<android.content.res.XmlBlock.Parser: boolean getAttributeBooleanValue(int,boolean)>
<android.view.HardwareLayer: boolean isValid()>
<android.widget.Editor.HandleView: void hide()>
<android.hardware.SystemSensorManager.BaseEventQueue: boolean hasSensors()>
<android.hardware.input.IInputManager: boolean hasKeys(int,int,int[],boolean[])>
<android.widget.GridLayout.MutableInt: void <init>(int)>
<android.widget.AbsListView.PositionScroller: void startWithOffset(int,int)>
<android.test.AndroidTestCase: void assertActivityRequiresPermission(java.lang.String,java.lang.String,java.lang.String)>
<android.os.RemoteCallbackList.Callback: void binderDied()>
<android.app.Instrumentation.Idler: boolean queueIdle()>
<android.view.ViewRootImpl.AccessibilityInteractionConnection: void performAccessibilityAction(long,int,android.os.Bundle,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long)>
<android.content.res.XmlBlock.Parser: java.lang.String getAttributeValue(int)>
<android.location.ILocationManager: android.location.Location getLastLocation(android.location.LocationRequest,java.lang.String)>
<android.app.ApplicationPackageManager: java.lang.String getDefaultBrowserPackageName(int)>
<android.opengl.GLLogWrapper: void glDeleteFramebuffersOES(int,int[],int)>
<android.preference.SeekBarPreference.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.view.FrameInfo: void setVsync(long,long)>
<android.content.SyncAdaptersCache.MySerializer: void writeAsXml(java.lang.Object,org.xmlpull.v1.XmlSerializer)>
<android.widget.Editor.EasyEditPopupWindow: void onClick(android.view.View)>
<android.location.GpsStatus.SatelliteIterator: java.lang.Object next()>
<android.view.IWindowManager: float getCurrentAnimatorScale()>
<android.security.keystore.AndroidKeyStoreSignatureSpiBase: android.security.KeyStore getKeyStore()>
<android.app.Dialog.ListenersHandler: void handleMessage(android.os.Message)>
<android.test.InstrumentationTestSuite: void <init>(android.app.Instrumentation)>
<android.content.pm.IPackageManager: int movePrimaryStorage(java.lang.String)>
<android.opengl.EGLLogWrapper: boolean eglCopyBuffers(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,java.lang.Object)>
<android.app.ApplicationPackageManager.OnPermissionsChangeListenerDelegate: void onPermissionsChanged(int)>
<android.widget.DatePicker.AbstractDatePickerDelegate: void onValidationChanged(boolean)>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi: void addAlgorithmSpecificParametersToBegin(android.security.keymaster.KeymasterArguments)>
<android.util.MapCollections.EntrySet: boolean addAll(java.util.Collection)>
<android.widget.AbsListView.InputConnectionWrapper: boolean requestCursorUpdates(int)>
<android.media.JetPlayer.NativeEventHandler: void <init>(android.media.JetPlayer,android.media.JetPlayer,android.os.Looper)>
<android.view.ViewRootImpl.ViewRootHandler: void handleMessage(android.os.Message)>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi.GCM: android.security.keystore.KeyStoreCryptoOperationStreamer createAdditionalAuthenticationDataStreamer(android.security.KeyStore,android.os.IBinder)>
<android.view.IWindowManager: void exitKeyguardSecurely(android.view.IOnKeyguardExitResult)>
<android.animation.PathKeyframes.SimpleKeyframes: void setEvaluator(android.animation.TypeEvaluator)>
<android.opengl.GLErrorWrapper: void glFogxv(int,java.nio.IntBuffer)>
<android.app.ContextImpl: boolean bindServiceAsUser(android.content.Intent,android.content.ServiceConnection,int,android.os.UserHandle)>
<android.media.MediaCodec.EventHandler: void <init>(android.media.MediaCodec,android.media.MediaCodec,android.os.Looper)>
<android.content.pm.IPackageManager: int getIntentVerificationStatus(java.lang.String,int)>
<android.app.ContextImpl: void sendOrderedBroadcast(android.content.Intent,java.lang.String,android.content.BroadcastReceiver,android.os.Handler,int,java.lang.String,android.os.Bundle)>
<android.os.MemoryFile.MemoryOutputStream: void write(byte[],int,int)>
<android.media.ImageWriter.WriterSurfaceImage.SurfacePlane: int getPixelStride()>
<android.widget.RemoteViewsAdapter.RemoteViewsFrameLayoutRefSet: void clear()>
<android.app.SharedPreferencesImpl.EditorImpl: android.content.SharedPreferences.Editor putLong(java.lang.String,long)>
<android.widget.Spinner.SpinnerPopup: int getVerticalOffset()>
<android.widget.SimpleMonthView: boolean onTouchEvent(android.view.MotionEvent)>
<android.app.ActivityTransitionCoordinator: java.util.ArrayList createSnapshots(android.os.Bundle,java.util.Collection)>
<android.text.TextUtils.Reverser: java.lang.String toString()>
<android.view.IWindowManager: void setForcedDisplayScalingMode(int,int)>
<android.content.res.XmlBlock.Parser: java.lang.String nextText()>
<android.app.ActivityThread.ApplicationThread: void scheduleDestroyActivity(android.os.IBinder,boolean,int)>
<android.transition.TransitionSet.TransitionSetListener: void onTransitionEnd(android.transition.Transition)>
<android.security.keystore.AndroidKeyStoreECDSASignatureSpi.NONE: android.security.keystore.KeyStoreCryptoOperationStreamer createMainDataStreamer(android.security.KeyStore,android.os.IBinder)>
<android.view.View.DeclaredOnClickListener: void <init>(android.view.View,java.lang.String)>
<android.opengl.GLLogWrapper: void glActiveTexture(int)>
<android.app.BackStackRecord: int getId()>
<android.opengl.GLLogWrapper: void glMultMatrixf(float[],int)>
<android.app.ApplicationPackageManager: boolean shouldShowRequestPermissionRationale(java.lang.String)>
<android.opengl.GLErrorWrapper: void glMultMatrixf(java.nio.FloatBuffer)>
<android.widget.Spinner.DialogPopup: void setHorizontalOffset(int)>
<android.animation.KeyframeSet: android.animation.KeyframeSet ofObject(java.lang.Object[])>
<android.content.res.StringBlock: void finalize()>
<android.hardware.usb.IUsbManager: void allowUsbDebugging(boolean,java.lang.String)>
<android.app.ApplicationPackageManager: void addPreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName)>
<android.widget.AbsListView.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.app.ApplicationPackageManager: java.util.List getInstalledPackages(int,int)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.OAEPWithSHA1AndMGF1Padding: void finalize()>
<android.opengl.GLLogWrapper: void glTexCoordPointer(int,int,int,java.nio.Buffer)>
<android.telecom.InCallService.InCallServiceBinder: void updateCall(android.telecom.ParcelableCall)>
<android.widget.Editor.SelectionStartHandleView: void positionAtCursorOffset(int,boolean)>
<android.content.AbstractThreadedSyncAdapter.ISyncAdapterImpl: void startSync(android.content.ISyncContext,java.lang.String,android.accounts.Account,android.os.Bundle)>
<android.util.MapCollections: java.util.Collection getValues()>
<android.drm.DrmStore.Action: boolean isValid(int)>
<android.opengl.GLLogWrapper: void glGetMaterialxv(int,int,int[],int)>
<android.widget.FastScroller: boolean onTouchEvent(android.view.MotionEvent)>
<android.opengl.GLLogWrapper: void glTexParameterx(int,int,int)>
<android.opengl.GLErrorWrapper: void glGetTexParameterfv(int,int,float[],int)>
<android.opengl.GLErrorWrapper: void glGetTexGeniv(int,int,int[],int)>
<android.app.ActivityTransitionState: int addExitTransitionCoordinator(android.app.ExitTransitionCoordinator)>
<android.util.MapCollections: java.lang.Object[] toArrayHelper(java.lang.Object[],int)>
<android.location.IGeocodeProvider: java.lang.String getFromLocationName(java.lang.String,double,double,double,double,int,android.location.GeocoderParams,java.util.List)>
<android.opengl.GLLogWrapper: void glTexParameterfv(int,int,java.nio.FloatBuffer)>
<android.widget.Editor.InsertionHandleView: int getHorizontalGravity(boolean)>
<android.opengl.GLErrorWrapper: void glTexParameterxv(int,int,int[],int)>
<android.widget.CalendarViewLegacyDelegate: void setFirstDayOfWeek(int)>
<android.widget.ListView.FocusSelector: void run()>
<android.widget.RemoteViews.SetOnClickPendingIntent: void <init>(android.widget.RemoteViews,android.os.Parcel)>
<android.widget.Spinner.SpinnerPopup: java.lang.CharSequence getHintText()>
<android.widget.DayPickerPagerAdapter: java.lang.Object instantiateItem(android.view.ViewGroup,int)>
<android.opengl.GLLogWrapper: void glColor4x(int,int,int,int)>
<android.hardware.SystemSensorManager.TriggerEventQueue: void dispatchFlushCompleteEvent(int)>
<android.util.MapCollections: java.lang.Object colGetEntry(int,int)>
<android.app.IWallpaperManager: void setDimensionHints(int,int,java.lang.String)>
<android.graphics.Bitmap.Config: android.graphics.Bitmap.Config[] values()>
<android.print.PrintManager.PrintDocumentAdapterDelegate: void layout(android.print.PrintAttributes,android.print.PrintAttributes,android.print.ILayoutResultCallback,android.os.Bundle,int)>
<android.net.Uri.HierarchicalUri: boolean isHierarchical()>
<android.hardware.SystemSensorManager.BaseEventQueue: boolean removeSensor(android.hardware.Sensor,boolean)>
<android.app.ActivityThread.Profiler: void setProfiler(android.app.ProfilerInfo)>
<android.animation.PropertyValuesHolder.IntPropertyValuesHolder: android.animation.PropertyValuesHolder.IntPropertyValuesHolder clone()>
<android.content.res.XmlBlock.Parser: java.lang.String getAttributeName(int)>
<android.animation.IntKeyframeSet: android.animation.KeyframeSet clone()>
<android.view.IWindowManager: boolean stopViewServer()>
<android.speech.tts.AudioPlaybackHandler: void enqueue(android.speech.tts.PlaybackQueueItem)>
<android.hardware.ICameraService: void notifySystemEvent(int,int[])>
<android.app.ApplicationPackageManager: int getIntentVerificationStatus(java.lang.String,int)>
<android.widget.ActivityChooserView.ActivityChooserViewAdapter: void setShowDefaultActivity(boolean,boolean)>
<android.widget.AbsListView.FlingRunnable: void run()>
<android.widget.RemoteViews.SetOnClickFillInIntent: java.lang.String getActionName()>
<android.widget.RemoteViewsAdapter.RemoteViewsAdapterServiceConnection: boolean isConnected()>
<android.app.MediaRouteActionProvider.MediaRouterCallback: void onRouteAdded(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>
<android.widget.RemoteViewsService.RemoteViewsFactoryAdapter: boolean isCreated()>
<android.text.TextUtils.Reverser: char charAt(int)>
<android.widget.AbsListView.InputConnectionWrapper: boolean clearMetaKeyStates(int)>
<android.app.ActivityTransitionState: void startPostponedEnterTransition()>
<android.app.ActivityThread.ApplicationThread: void scheduleExit()>
<android.opengl.GLLogWrapper: void glLoadMatrixx(int[],int)>
<android.widget.CalendarView.AbstractCalendarViewDelegate: void onConfigurationChanged(android.content.res.Configuration)>
<android.view.LayoutInflater.BlinkLayout: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.RemoteViews.BitmapCache: void addBitmapMemory(android.widget.RemoteViews.MemoryUsageCounter)>
<android.app.IWallpaperManager: int getHeightHint()>
<android.app.LoadedApk.ServiceDispatcher: void death(android.content.ComponentName,android.os.IBinder)>
<android.app.INotificationManager: void cancelNotificationFromListener(android.service.notification.INotificationListener,java.lang.String,java.lang.String,int)>
<android.net.LocalSocketImpl.SocketInputStream: int available()>
<android.accounts.AccountManager.AmsTask: java.lang.Object getResult()>
<android.content.res.XmlBlock.Parser: int nextToken()>
<android.transition.TransitionSet.TransitionSetListener: void onTransitionStart(android.transition.Transition)>
<android.opengl.GLErrorWrapper: void glDrawTexfOES(float,float,float,float,float)>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi.GCM: java.security.AlgorithmParameters engineGetParameters()>
<android.opengl.GLLogWrapper: void glLightx(int,int,int)>
<android.widget.TimePickerClockDelegate.Node: void addChild(android.widget.TimePickerClockDelegate.Node)>
<android.animation.PropertyValuesHolder.FloatPropertyValuesHolder: void <init>(java.lang.String,android.animation.Keyframes.FloatKeyframes)>
<android.opengl.GLLogWrapper: void glTexGenf(int,int,float)>
<android.util.MapCollections.EntrySet: boolean remove(java.lang.Object)>
<android.widget.TextView.Drawables: void resolveWithLayoutDirection(int)>
<android.security.keystore.AndroidKeyStoreECDSASignatureSpi.NONE.TruncateToFieldSizeMessageStreamer: byte[] update(byte[],int,int)>
<android.app.WallpaperManager.FastBitmapDrawable: int getOpacity()>
<android.media.Utils: android.util.Range scaleRange(android.util.Range,int,int)>
<android.opengl.GLErrorWrapper: void glMaterialx(int,int,int)>
<android.widget.TableRow.ChildrenTracker: void onChildViewRemoved(android.view.View,android.view.View)>
<android.widget.PopupWindow.PopupDecorView: boolean onTouchEvent(android.view.MotionEvent)>
<android.widget.CalendarViewLegacyDelegate.WeekView: int getMonthOfLastWeekDay()>
<android.app.ReceiverRestrictedContext: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)>
<android.app.INotificationManager: void setOnNotificationPostedTrimFromListener(android.service.notification.INotificationListener,int)>
<android.widget.TimePickerClockDelegate: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.content.res.StringBlock: void <init>(byte[],int,int,boolean)>
<android.widget.AbsListView.AbsPositionScroller: void stop()>
<android.app.LauncherActivity.ActivityAdapter: int getCount()>
<android.transition.Visibility.DisappearListener: void onTransitionPause(android.transition.Transition)>
<android.transition.ChangeBounds.ViewBounds: void <init>(android.view.View)>
<android.animation.FloatKeyframeSet: java.lang.Object getValue(float)>
<android.widget.DatePickerCalendarDelegate: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.media.MediaPlayer.TimeProvider: void onStopped()>
<android.view.IWindowManager: int getPendingAppTransition()>
<android.app.ActivityTransitionCoordinator: void onTransitionsComplete()>
<android.opengl.GLLogWrapper: void glGetClipPlanef(int,java.nio.FloatBuffer)>
<android.opengl.GLLogWrapper: void glGetIntegerv(int,int[],int)>
<android.view.SurfaceView.MyWindow: void executeCommand(java.lang.String,java.lang.String,android.os.ParcelFileDescriptor)>
<android.location.GpsStatus.SatelliteIterator: android.location.GpsSatellite next()>
<android.net.NetworkInfo.State: android.net.NetworkInfo.State[] values()>
<android.app.ApplicationPackageManager: int movePrimaryStorage(android.os.storage.VolumeInfo)>
<android.app.LauncherActivity.ActivityAdapter: android.widget.Filter getFilter()>
<android.app.EnterTransitionCoordinator: boolean isReturning()>
<android.text.DynamicLayout.ChangeWatcher: void onSpanRemoved(android.text.Spannable,java.lang.Object,int,int)>
<android.widget.ExpandableListConnector: boolean isEnabled(int)>
<android.speech.tts.PlaybackSynthesisCallback: int getMaxBufferSize()>
<android.app.LauncherActivity.ActivityAdapter: java.lang.Object getItem(int)>
<android.util.MapCollections.EntrySet: boolean isEmpty()>
<android.opengl.GLLogWrapper: void glLoadMatrixf(java.nio.FloatBuffer)>
<android.widget.Editor.PinnedPopupWindow: void measureContent()>
<android.widget.AutoCompleteTextView.DropDownItemClickListener: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<android.hardware.ICameraService: int addListener(android.hardware.ICameraServiceListener)>
<android.view.ViewOverlay.OverlayViewGroup: android.view.ViewParent invalidateChildInParent(int[],android.graphics.Rect)>
<android.renderscript.FileA3D.EntryType: android.renderscript.FileA3D.EntryType valueOf(java.lang.String)>
<android.media.ImageWriter.WriterSurfaceImage: void <init>(android.media.ImageWriter)>
<android.view.ViewRootImpl.W: void closeSystemDialogs(java.lang.String)>
<android.animation.Keyframe.ObjectKeyframe: void setValue(java.lang.Object)>
<android.graphics.drawable.RippleComponent: boolean drawSoftware(android.graphics.Canvas,android.graphics.Paint)>
<android.opengl.GLErrorWrapper: void glShadeModel(int)>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi.GCM.NoPadding: void finalize()>
<android.speech.tts.AbstractEventLogger: void onAudioDataWritten()>
<android.app.ReceiverRestrictedContext: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
<android.opengl.GLLogWrapper: void glMatrixIndexPointerOES(int,int,int,java.nio.Buffer)>
<android.graphics.Atlas.Type: android.graphics.Atlas.Type valueOf(java.lang.String)>
<android.os.UEventObserver.UEventThread: void run()>
<android.nfc.NfcActivityManager.NfcActivityState: void <init>(android.nfc.NfcActivityManager,android.app.Activity)>
<android.opengl.GLErrorWrapper: void glTexEnvfv(int,int,java.nio.FloatBuffer)>
<android.test.AndroidTestCase: void tearDown()>
<android.app.BackStackRecord: void calculateBackFragments(android.util.SparseArray,android.util.SparseArray)>
<android.widget.RadioGroup.PassThroughHierarchyChangeListener: void onChildViewRemoved(android.view.View,android.view.View)>
<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache: boolean containsMetaDataAt(int)>
<android.opengl.GLErrorWrapper: void glCullFace(int)>
<android.preference.GenericInflater: android.preference.GenericInflater.Parent onMergeRoots(android.preference.GenericInflater.Parent,boolean,android.preference.GenericInflater.Parent)>
<android.view.IWindowManager: float[] getAnimationScales()>
<android.app.ApplicationPackageManager: android.content.pm.PermissionInfo getPermissionInfo(java.lang.String,int)>
<android.print.PrintManager.PrintDocumentAdapterDelegate.MyWriteResultCallback: void destroy()>
<android.view.ViewOverlay.OverlayViewGroup: boolean verifyDrawable(android.graphics.drawable.Drawable)>
<android.widget.FastScroller: void onScroll(int,int,int)>
<android.test.InstrumentationTestCase: android.app.Instrumentation getInstrumentation()>
<android.content.pm.IPackageManager: void removeOnPermissionsChangeListener(android.content.pm.IOnPermissionsChangeListener)>
<android.app.EnterTransitionCoordinator: void viewInstancesReady(java.util.ArrayList,java.util.ArrayList,java.util.ArrayList)>
<android.widget.CalendarViewLegacyDelegate: void setSelectedDateVerticalBar(android.graphics.drawable.Drawable)>
<android.graphics.drawable.RippleComponent: void end()>
<android.view.ViewRootImpl.NativePreImeInputStage: void onFinishedInputEvent(java.lang.Object,boolean)>
<android.content.pm.IPackageManager: android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName,int)>
<android.app.ContextImpl: android.content.Context createPackageContextAsUser(java.lang.String,int,android.os.UserHandle)>
<android.opengl.GLErrorWrapper: void glClipPlanef(int,float[],int)>
<android.widget.RemoteViews.MemoryUsageCounter: void addBitmapMemory(android.graphics.Bitmap)>
<android.hardware.camera2.ICameraDeviceUser: int deleteStream(int)>
<android.widget.SpellChecker.SpellParser: void stop()>
<android.filterfw.core.GenerateFinalPort: java.lang.String name()>
<android.media.Utils: android.util.Size parseSize(java.lang.Object,android.util.Size)>
<android.os.MemoryFile.MemoryInputStream: int read(byte[],int,int)>
<android.app.FragmentManagerImpl.AnimateOnHWLayerIfNeededListener: void onAnimationEnd(android.animation.Animator)>
<android.speech.tts.FileSynthesisCallback: int done()>
<android.media.ImageWriter.WriterSurfaceImage: android.media.Image.Plane[] getPlanes()>
<android.view.ViewRootImpl.SyntheticTouchNavigationHandler: void <init>(android.view.ViewRootImpl)>
<android.widget.RemoteViewsAdapter.RemoteViewsAdapterServiceConnection: void unbind(android.content.Context,int,android.content.Intent)>
<android.text.PackedObjectVector: java.lang.Object getValue(int,int)>
<android.widget.DayPickerView: void setMaxDate(long)>
<android.widget.TabHost.FactoryContentStrategy: android.view.View getContentView()>
<android.view.IWindowManager: void executeAppTransition()>
<android.widget.RemoteViewsService.RemoteViewsFactoryAdapter: void <init>(android.widget.RemoteViewsService.RemoteViewsFactory,boolean)>
<android.media.MediaCodec.BufferMap.CodecBuffer: void setByteBuffer(java.nio.ByteBuffer)>
<android.opengl.GLLogWrapper: void glStencilMask(int)>
<android.app.Instrumentation.ActivityGoing: void <init>(android.app.Instrumentation,android.app.Instrumentation.ActivityWaiter)>
<android.content.pm.IPackageManager: java.util.List queryInstrumentation(java.lang.String,int)>
<android.net.LinkProperties.ProvisioningChange: android.net.LinkProperties.ProvisioningChange[] values()>
<android.telecom.VideoCallImpl.VideoCallListenerBinder: void changePeerDimensions(int,int)>
<android.opengl.GLLogWrapper: void glDrawTexfOES(float,float,float,float,float)>
<android.opengl.GLErrorWrapper: void glBufferSubData(int,int,int,java.nio.Buffer)>
<android.text.TextUtils.Reverser: void getChars(int,int,char[],int)>
<android.widget.DayPickerView: void setDate(long,boolean)>
<android.view.ViewDebug.ExportedProperty: android.view.ViewDebug.FlagToString[] flagMapping()>
<android.accounts.AccountManager.AmsTask.Response: void onResult(android.os.Bundle)>
<android.security.keystore.AndroidKeyStoreSignatureSpiBase: java.lang.Object engineGetParameter(java.lang.String)>
<android.widget.RemoteViews.SetRemoteViewsAdapterIntent: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>
<android.preference.GenericInflater: void setDefaultPackage(java.lang.String)>
<android.animation.Keyframe.FloatKeyframe: android.animation.Keyframe.FloatKeyframe clone()>
<android.media.MediaScanner.MediaBulkDeleter: void <init>(android.content.IContentProvider,java.lang.String,android.net.Uri)>
<android.media.MediaScanner.WplHandler: void <init>(android.media.MediaScanner,java.lang.String,android.net.Uri,android.database.Cursor)>
<android.content.pm.IPackageManager: android.content.pm.ParceledListSlice getPackagesHoldingPermissions(java.lang.String[],int,int)>
<com.android.internal.annotations.VisibleForTesting: com.android.internal.annotations.VisibleForTesting.Visibility visibility()>
<android.animation.PathKeyframes: java.lang.Object getValue(float)>
<android.webkit.WebViewFactory.MissingWebViewPackageException: void <init>(java.lang.String)>
<android.view.SurfaceView.MyWindow: void windowFocusChanged(boolean,boolean)>
<android.content.res.XmlBlock.Parser: int getAttributeIntValue(int,int)>
<android.widget.Gallery.FlingRunnable: void stop(boolean)>
<android.hardware.ICameraService: int getCameraVendorTagDescriptor(android.hardware.camera2.utils.BinderHolder)>
<android.opengl.GLLogWrapper: void glTexParameterf(int,int,float)>
<android.nfc.NfcActivityManager.NfcActivityState: void destroy()>
<android.widget.PopupWindow.PopupDecorView: void requestEnterTransition(android.transition.Transition)>
<android.widget.SuggestionsAdapter: void notifyDataSetInvalidated()>
<android.content.res.XmlBlock.Parser: void finalize()>
<android.net.LocalSocketImpl: android.net.Credentials getPeerCredentials()>
<android.security.IKeystoreService: byte[] get_pubkey(java.lang.String)>
<android.animation.IntKeyframeSet: java.lang.Object getValue(float)>
<android.opengl.GLLogWrapper: void glBufferSubData(int,int,int,java.nio.Buffer)>
<android.preference.TwoStatePreference.SavedState: void <init>(android.os.Parcel)>
<android.view.IWindowManager: void startAppFreezingScreen(android.os.IBinder,int)>
<android.widget.DateTimeView.ReceiverInfo: android.content.Context getApplicationContextIfAvailable(android.content.Context)>
<android.widget.Editor.EasyEditPopupWindow: void hide()>
<android.app.ActivityThread.ApplicationThread: void scheduleCreateBackupAgent(android.content.pm.ApplicationInfo,android.content.res.CompatibilityInfo,int)>
<android.app.ActivityTransitionCoordinator: boolean isInTransitionGroup(android.view.ViewParent,android.view.ViewGroup)>
<android.util.ReflectiveProperty: boolean isReadOnly()>
<android.view.ViewRootImpl.AccessibilityInteractionConnectionManager: void ensureNoConnection()>
<android.text.TextUtils.Reverser: java.lang.CharSequence subSequence(int,int)>
<android.animation.PropertyValuesHolder.PointFToIntArray: int[] convert(android.graphics.PointF)>
<android.speech.SpeechRecognizer.InternalListener: void onBufferReceived(byte[])>
<android.app.INotificationManager: void setNotificationPolicyAccessGranted(java.lang.String,boolean)>
<android.test.PerformanceTestCase.Intermediates: void finishTiming(boolean)>
<android.animation.PropertyValuesHolder.IntPropertyValuesHolder: android.animation.PropertyValuesHolder clone()>
<android.app.FragmentState: int describeContents()>
<android.opengl.GLLogWrapper: void glFogxv(int,int[],int)>
<android.view.IWindowManager: void addWindowToken(android.os.IBinder,int)>
<android.security.keystore.DelegatingX509Certificate: java.util.Date getNotBefore()>
<android.view.HardwareLayer: long getDeferredLayerUpdater()>
<android.text.AlteredCharSequence.AlteredSpanned: int getSpanEnd(java.lang.Object)>
<android.opengl.GLErrorWrapper: void glClipPlanex(int,int[],int)>
<android.widget.Spinner.SpinnerPopup: void setVerticalOffset(int)>
<android.app.FragmentState: android.app.Fragment instantiate(android.app.FragmentHostCallback,android.app.Fragment)>
<android.view.ViewRootImpl.QueuedInputEvent: boolean shouldSkipIme()>
<android.content.pm.IPackageManager: void addPersistentPreferredActivity(android.content.IntentFilter,android.content.ComponentName,int)>
<android.opengl.GLLogWrapper: void glTexParameteriv(int,int,java.nio.IntBuffer)>
<android.webkit.WebSettings.RenderPriority: android.webkit.WebSettings.RenderPriority[] values()>
<android.app.BackStackRecord: java.lang.String toString()>
<android.test.PerformanceTestCase.Intermediates: void startTiming(boolean)>
<android.inputmethodservice.IInputMethodSessionWrapper.ImeInputEventReceiver: void finishedEvent(int,boolean)>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi.GCM: void initAlgorithmSpecificParameters(java.security.spec.AlgorithmParameterSpec)>
<android.app.ActivityThread.ApplicationThread: void scheduleInstallProvider(android.content.pm.ProviderInfo)>
<android.widget.TimePickerSpinnerDelegate: boolean isEnabled()>
<android.widget.Editor.Blink: void run()>
<android.app.ActivityTransitionCoordinator.FixedEpicenterCallback: android.graphics.Rect onGetEpicenter(android.transition.Transition)>
<android.app.ContextImpl: android.content.Context createDisplayContext(android.view.Display)>
<android.widget.RemoteViews.SetRemoteViewsAdapterList: void <init>(android.widget.RemoteViews,int,java.util.ArrayList,int)>
<android.animation.LayoutTransition.CleanupCallback: boolean onPreDraw()>
<android.bluetooth.BluetoothInputStream: int available()>
<android.app.ContextImpl: java.io.File[] getExternalMediaDirs()>
<android.app.INotificationManager: boolean isSystemConditionProviderEnabled(java.lang.String)>
<android.widget.Editor.SuggestionsPopupWindow: void createPopupWindow()>
<android.media.ImageWriter.WriterSurfaceImage: java.lang.Object getOwner()>
<android.content.ContentProvider.Transport: java.lang.String getProviderName()>
<android.widget.Spinner.DropdownPopup: void setAdapter(android.widget.ListAdapter)>
<android.opengl.GLLogWrapper: void glMaterialxv(int,int,java.nio.IntBuffer)>
<android.widget.RadialTimePickerView.RadialPickerTouchHelper: void <init>(android.widget.RadialTimePickerView)>
<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGLDisplay eglGetCurrentDisplay()>
<android.app.BackStackRecord: android.app.FragmentTransaction add(android.app.Fragment,java.lang.String)>
<android.opengl.GLErrorWrapper: void glGetClipPlanef(int,java.nio.FloatBuffer)>
<android.opengl.GLErrorWrapper: void glLineWidthx(int)>
<android.media.ImageWriter.WriterSurfaceImage: long getTimestamp()>
<android.security.IKeystoreService: int verify(java.lang.String,byte[],byte[])>
<android.widget.CalendarViewLegacyDelegate: int getDateTextAppearance()>
<android.test.InstrumentationTestSuite: void addTestSuite(java.lang.Class)>
<android.util.MapCollections.EntrySet: boolean add(java.lang.Object)>
<android.widget.NumberPicker.AccessibilityNodeProviderImpl: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)>
<android.content.pm.IPackageManager: boolean isPackageFrozen(java.lang.String)>
<android.hardware.ICameraService: int getCameraCharacteristics(int,android.hardware.camera2.impl.CameraMetadataNative)>
<android.content.pm.IPackageManager: void setLastChosenActivity(android.content.Intent,java.lang.String,int,android.content.IntentFilter,int,android.content.ComponentName)>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getApplicationBanner(android.content.pm.ApplicationInfo)>
<android.util.Base64.Coder: boolean process(byte[],int,int,boolean)>
<android.widget.Editor.SelectionEndHandleView: void positionAtCursorOffset(int,boolean)>
<android.app.ActivityTransitionState: void setEnterActivityOptions(android.app.Activity,android.app.ActivityOptions)>
<android.animation.StateListAnimator.StateListAnimatorConstantState: android.animation.StateListAnimator newInstance()>
<android.opengl.GLWrapperBase: void <init>(javax.microedition.khronos.opengles.GL)>
<android.opengl.GLErrorWrapper: void glGetBooleanv(int,boolean[],int)>
<android.opengl.GLErrorWrapper: void glFogf(int,float)>
<android.app.ActivityThread.ApplicationThread: void bindApplication(java.lang.String,android.content.pm.ApplicationInfo,java.util.List,android.content.ComponentName,android.app.ProfilerInfo,android.os.Bundle,android.app.IInstrumentationWatcher,android.app.IUiAutomationConnection,int,boolean,boolean,boolean,android.content.res.Configuration,android.content.res.CompatibilityInfo,java.util.Map,android.os.Bundle)>
<android.opengl.GLErrorWrapper: void glLightxv(int,int,int[],int)>
<android.opengl.GLLogWrapper: void glTexEnvfv(int,int,float[],int)>
<android.widget.StackView.StackSlider: void setXProgress(float)>
<android.widget.ActivityChooserView.ActivityChooserViewAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.widget.Spinner.SpinnerPopup: void setAdapter(android.widget.ListAdapter)>
<android.widget.SimpleAdapter.SimpleFilter: void publishResults(java.lang.CharSequence,android.widget.Filter.FilterResults)>
<android.opengl.GLLogWrapper: void glTexEnvf(int,int,float)>
<android.content.ContentResolver.CursorWrapperInner: void close()>
<android.opengl.GLErrorWrapper: void glStencilFunc(int,int,int)>
<android.view.IWindowManager: boolean isSafeModeEnabled()>
<android.content.pm.IPackageManager: java.util.List getAllIntentFilters(java.lang.String)>
<android.telecom.InCallService.InCallServiceBinder: void bringToForeground(boolean)>
<android.net.DhcpStateMachine.WaitBeforeStartState: boolean processMessage(android.os.Message)>
<android.nfc.NfcActivityManager.NfcApplicationState: void <init>(android.nfc.NfcActivityManager,android.app.Application)>
<android.app.MediaRouteButton.MediaRouterCallback: void onRouteChanged(android.media.MediaRouter,android.media.MediaRouter.RouteInfo)>
<android.opengl.GLErrorWrapper: void glTexGenf(int,int,float)>
<android.net.Uri.Part: android.net.Uri.Part readFrom(android.os.Parcel)>
<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: void addAlgorithmSpecificParametersToBegin(android.security.keymaster.KeymasterArguments)>
<android.content.res.XmlBlock.Parser: java.lang.String getName()>
<android.opengl.GLLogWrapper: void glBindRenderbufferOES(int,int)>
<android.opengl.GLErrorWrapper: void glBindTexture(int,int)>
<android.app.ContextImpl: java.lang.String getPackageName()>
<android.widget.ListPopupWindow.ListSelectorHider: void run()>
<android.view.AccessibilityInteractionController: void findFocusClientThread(long,int,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)>
<android.location.GpsStatus.SatelliteIterator: boolean hasNext()>
<android.app.SharedPreferencesImpl.EditorImpl: boolean commit()>
<android.view.ViewRootImpl.TraversalRunnable: void run()>
<android.widget.TimePickerClockDelegate: android.os.Parcelable onSaveInstanceState(android.os.Parcelable)>
<android.content.res.XmlBlock.Parser: void setFeature(java.lang.String,boolean)>
<android.content.res.XmlBlock.Parser: java.lang.String getPositionDescription()>
<android.widget.ActivityChooserView.ActivityChooserViewAdapter: int measureContentWidth()>
<android.app.ApplicationPackageManager: int getApplicationEnabledSetting(java.lang.String)>
<android.widget.RemoteViews.SetRemoteViewsAdapterList: void <init>(android.widget.RemoteViews,android.os.Parcel)>
<android.view.GestureDetector.GestureHandler: void handleMessage(android.os.Message)>
<android.widget.DayPickerPagerAdapter: void destroyItem(android.view.ViewGroup,int,java.lang.Object)>
<android.view.ViewRootImpl.NativePreImeInputStage: void <init>(android.view.ViewRootImpl,android.view.ViewRootImpl.InputStage,java.lang.String)>
<android.widget.Editor.InsertionPointCursorController: void onTouchModeChanged(boolean)>
<android.widget.ListPopupWindow.PopupScrollListener: void onScroll(android.widget.AbsListView,int,int,int)>
<android.widget.YearPickerView.YearAdapter: int getPositionForYear(int)>
<android.graphics.Interpolator.Result: android.graphics.Interpolator.Result valueOf(java.lang.String)>
<android.content.AbstractThreadedSyncAdapter.ISyncAdapterImpl: void initialize(android.accounts.Account,java.lang.String)>
<android.renderscript.ProgramRaster.CullMode: android.renderscript.ProgramRaster.CullMode valueOf(java.lang.String)>
<android.location.ILocationManager: void clearTestProviderStatus(java.lang.String,java.lang.String)>
<android.widget.AbsListView.InputConnectionWrapper: boolean performContextMenuAction(int)>
<android.app.ActivityThread.ApplicationThread: void scheduleCreateService(android.os.IBinder,android.content.pm.ServiceInfo,android.content.res.CompatibilityInfo,int)>
<android.widget.ActivityChooserView.ActivityChooserViewAdapter: int getItemViewType(int)>
<android.animation.AnimatorSet.Dependency: void <init>(android.animation.AnimatorSet.Node,int)>
<android.widget.CalendarViewLegacyDelegate.ScrollStateRunnable: void doScrollStateChange(android.widget.AbsListView,int)>
<android.animation.BidirectionalTypeConverter.InvertedConverter: java.lang.Object convertBack(java.lang.Object)>
<android.opengl.GLErrorWrapper: void glDepthFunc(int)>
<android.text.PackedIntVector: void adjustValuesBelow(int,int,int)>
<android.hardware.input.IInputManager: java.lang.String[] getKeyboardLayoutsForInputDevice(android.hardware.input.InputDeviceIdentifier)>
<android.opengl.GLErrorWrapper: void glGetIntegerv(int,java.nio.IntBuffer)>
<android.content.pm.IPackageManager: java.lang.String[] getPackagesForUid(int)>
<android.opengl.GLErrorWrapper: void glDrawTexfvOES(float[],int)>
<android.content.pm.IPackageManager: java.lang.String[] getAppOpPermissionPackages(java.lang.String)>
<android.app.ActivityThread.ApplicationThread: void setHttpProxy(java.lang.String,java.lang.String,java.lang.String,android.net.Uri)>
<android.app.WallpaperManager.FastBitmapDrawable: void setBounds(int,int,int,int)>
<android.opengl.GLErrorWrapper: void glFrustumx(int,int,int,int,int,int)>
<android.view.ViewRootImpl.InvalidateOnAnimationRunnable: void removeView(android.view.View)>
<android.content.pm.IPackageManager: java.lang.String[] currentToCanonicalPackageNames(java.lang.String[])>
<android.app.ActivityThread.ActivityClientRecord: boolean isPersistable()>
<android.security.keystore.AndroidKeyStoreBCWorkaroundProvider: java.lang.String[] getSupportedEcdsaSignatureDigests()>
<android.os.MemoryFile.MemoryInputStream: int read()>
<android.widget.Spinner.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.hardware.SystemSensorManager.BaseEventQueue: void addSensorEvent(android.hardware.Sensor)>
<android.widget.Editor.CursorController: void onDetached()>
<android.app.Instrumentation.1ContextMenuRunnable: void run()>
<android.os.StrictMode.StrictModeCustomViolation: void <init>(int,java.lang.String)>
<android.opengl.GLErrorWrapper: void glDeleteFramebuffersOES(int,java.nio.IntBuffer)>
<android.opengl.EGLLogWrapper: boolean eglSwapBuffers(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface)>
<android.app.DownloadManager.CursorTranslator: java.lang.String getString(int)>
<android.opengl.GLLogWrapper: void glGetTexEnviv(int,int,java.nio.IntBuffer)>
<android.opengl.GLLogWrapper: void glViewport(int,int,int,int)>
<android.opengl.GLErrorWrapper: void glDrawTexxvOES(java.nio.IntBuffer)>
<android.opengl.GLSurfaceView.GLThreadManager: boolean shouldReleaseEGLContextWhenPausing()>
<android.widget.Editor.HandleView: void updateSelection(int)>
<android.app.ApplicationPackageManager: void clearPackagePreferredActivities(java.lang.String)>
<android.media.MediaCodec.BufferMap.CodecBuffer: void free()>
<android.opengl.GLErrorWrapper: void glCompressedTexImage2D(int,int,int,int,int,int,int,java.nio.Buffer)>
<android.animation.AnimatorSet.AnimatorSetListener: void onAnimationEnd(android.animation.Animator)>
<android.app.ApplicationPackageManager: int movePackage(java.lang.String,android.os.storage.VolumeInfo)>
<android.widget.RemoteViews.BitmapCache: void writeBitmapsToParcel(android.os.Parcel,int)>
<android.view.AccessibilityIterators.CharacterTextSegmentIterator: void initialize(java.lang.String)>
<android.widget.ExpandableListConnector: int getItemViewType(int)>
<android.graphics.drawable.RippleForeground.LogDecelerateInterpolator: float getInterpolation(float)>
<android.animation.PropertyValuesHolder.MultiFloatValuesHolder: void <init>(java.lang.String,android.animation.TypeConverter,android.animation.TypeEvaluator,android.animation.Keyframes)>
<android.app.ApplicationPackageManager.ResourceName: java.lang.String toString()>
<android.webkit.JsDialogHelper.PositiveListener: void <init>(android.webkit.JsDialogHelper,android.widget.EditText)>
<android.app.ActivityThread.NewIntentData: java.lang.String toString()>
<android.app.BackStackState: void <init>(android.app.FragmentManagerImpl,android.app.BackStackRecord)>
<android.animation.BidirectionalTypeConverter.InvertedConverter: void <init>(android.animation.BidirectionalTypeConverter)>
<android.opengl.GLErrorWrapper: void glClearDepthx(int)>
<android.location.ILocationManager: void locationCallbackFinished(android.location.ILocationListener)>
<android.speech.tts.FileSynthesisCallback: void error(int)>
<android.app.ApplicationPackageManager: void getPackageSizeInfo(java.lang.String,int,android.content.pm.IPackageStatsObserver)>
<android.graphics.PorterDuff.Mode: android.graphics.PorterDuff.Mode valueOf(java.lang.String)>
<android.inputmethodservice.IInputMethodSessionWrapper: void finishInput()>
<android.app.ApplicationPackageManager: void clearApplicationUserData(java.lang.String,android.content.pm.IPackageDataObserver)>
<android.view.AccessibilityInteractionController.AddNodeInfosForViewId: boolean apply(android.view.View)>
<android.hardware.usb.IUsbManager: void requestDevicePermission(android.hardware.usb.UsbDevice,java.lang.String,android.app.PendingIntent)>
<android.app.ApplicationPackageManager: java.util.List getAllIntentFilters(java.lang.String)>
<android.opengl.GLErrorWrapper: void glRotatex(int,int,int,int)>
<android.util.XmlPullAttributes: boolean getAttributeBooleanValue(int,boolean)>
<android.animation.PropertyValuesHolder.FloatPropertyValuesHolder: android.animation.PropertyValuesHolder clone()>
<android.app.ContextImpl.ApplicationContentResolver: boolean releaseProvider(android.content.IContentProvider)>
<android.app.ContextImpl: java.io.File getSharedPrefsFile(java.lang.String)>
<android.view.Choreographer.CallbackQueue: void addCallbackLocked(long,java.lang.Object,java.lang.Object)>
<android.widget.TabWidget.TabClickListener: void onClick(android.view.View)>
<android.os.TokenWatcher.Death: void binderDied()>
<android.app.INotificationManager: byte[] getBackupPayload(int)>
<android.app.WallpaperManager.FastBitmapDrawable: void draw(android.graphics.Canvas)>
<android.content.pm.IPackageManager: boolean setInstallLocation(int)>
<android.widget.CalendarViewMaterialDelegate: void setMinDate(long)>
<android.app.EnterTransitionCoordinator: boolean cancelEnter()>
<android.security.keystore.DelegatingX509Certificate: java.util.Collection getSubjectAlternativeNames()>
<android.util.MapCollections.KeySet: void clear()>
<android.security.keystore.DelegatingX509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>
<android.print.PrintManager.PrintDocumentAdapterDelegate.DestroyableCallback: void destroy()>
<android.widget.DayPickerView: void onRtlPropertiesChanged(int)>
<android.app.ContextImpl: void grantUriPermission(java.lang.String,android.net.Uri,int)>
<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi.CBC.PKCS7Padding: void finalize()>
<android.widget.SuggestionsAdapter: void setQueryRefinement(int)>
<android.renderscript.Allocation.MipmapControl: android.renderscript.Allocation.MipmapControl valueOf(java.lang.String)>
<android.app.ContextImpl: java.lang.String[] fileList()>
<android.app.ContextImpl: void enforceCallingUriPermission(android.net.Uri,int,java.lang.String)>
<android.app.ActivityTransitionCoordinator.ContinueTransitionListener: void onTransitionStart(android.transition.Transition)>
<android.security.keystore.DelegatingX509Certificate: java.lang.String toString()>
<android.widget.RadialTimePickerView.RadialPickerTouchHelper: void onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent)>
<android.view.HardwareLayer: void setSurfaceTexture(android.graphics.SurfaceTexture)>
<android.hardware.usb.IUsbManager: void getDeviceList(android.os.Bundle)>
<android.util.XmlPullAttributes: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>
<android.widget.CursorTreeAdapter.MyCursorHelper.MyContentObserver: void <init>(android.widget.CursorTreeAdapter.MyCursorHelper)>
<android.content.pm.IPackageManager: boolean isPermissionEnforced(java.lang.String)>
<android.widget.SimpleMonthView: void setFirstDayOfWeek(int)>
<android.widget.Editor.SuggestionsPopupWindow: void measureContent()>
<android.animation.FloatKeyframeSet: android.animation.FloatKeyframeSet clone()>
<android.content.pm.IPackageManager: boolean performDexOptIfNeeded(java.lang.String,java.lang.String)>
<android.app.ApplicationPackageManager: void replacePreferredActivity(android.content.IntentFilter,int,android.content.ComponentName[],android.content.ComponentName)>
<android.view.IWindowManager: void setStrictModeVisualIndicatorPreference(java.lang.String)>
<android.view.Choreographer.FrameDisplayEventReceiver: void run()>
<android.speech.tts.PlaybackSynthesisCallback: int audioAvailable(byte[],int,int)>
<android.security.keystore.AndroidKeyStoreSignatureSpiBase: void engineUpdate(java.nio.ByteBuffer)>
<android.util.MapCollections.KeySet: java.lang.Object[] toArray()>
<android.opengl.EGLLogWrapper: boolean eglChooseConfig(javax.microedition.khronos.egl.EGLDisplay,int[],javax.microedition.khronos.egl.EGLConfig[],int,int[])>
<android.view.IWindowSession: void setInTouchMode(boolean)>
<android.app.Instrumentation.InstrumentationThread: void run()>
<android.opengl.GLErrorWrapper: void glLightModelxv(int,java.nio.IntBuffer)>
<android.widget.SuggestionsAdapter: void <init>(android.content.Context,android.widget.SearchView,android.app.SearchableInfo,java.util.WeakHashMap)>
<android.widget.YearPickerView: void setDate(long)>
<android.view.IWindowSession: void reportDropResult(android.view.IWindow,boolean)>
<android.app.ContextImpl: android.content.res.AssetManager getAssets()>
<android.view.ViewRootImpl.SyntheticInputStage: void onDeliverToNext(android.view.ViewRootImpl.QueuedInputEvent)>
<android.animation.Keyframe.FloatKeyframe: float getFloatValue()>
<android.inputmethodservice.ExtractButton: boolean hasWindowFocus()>
<android.widget.TabHost.IntentContentStrategy: void tabClosed()>
<android.animation.KeyframeSet: java.util.List getKeyframes()>
<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getDefaultActivityIcon()>
<android.app.ContextImpl: java.io.File getFileStreamPath(java.lang.String)>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi: void loadAlgorithmSpecificParametersFromBeginResult(android.security.keymaster.KeymasterArguments)>
<android.widget.ImageView.ScaleType: android.widget.ImageView.ScaleType[] values()>
<android.app.BackStackRecord: android.app.FragmentTransaction detach(android.app.Fragment)>
<android.app.EnterTransitionCoordinator: void viewsReady(android.util.ArrayMap)>
<android.app.ContextImpl: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>
<android.graphics.drawable.RippleComponent: void getBounds(android.graphics.Rect)>
<android.widget.TimePicker.AbstractTimePickerDelegate: void <init>(android.widget.TimePicker,android.content.Context)>
<android.hardware.Camera.EventHandler: void <init>(android.hardware.Camera,android.hardware.Camera,android.os.Looper)>
<android.content.EventLogTags: void writeContentUpdateSample(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,int)>
<android.app.INotificationManager: void cancelNotificationsFromListener(android.service.notification.INotificationListener,java.lang.String[])>
<android.graphics.drawable.RippleForeground.LogDecelerateInterpolator: void <init>(float,float,float)>
<android.widget.Editor.HandleView: float getIdealVerticalOffset()>
<android.app.ActivityTransitionState: void enterReady(android.app.Activity)>
<android.os.AsyncTask.Status: android.os.AsyncTask.Status valueOf(java.lang.String)>
<android.widget.ProgressBar.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.app.backup.FileBackupHelperBase: void writeNewStateDescription(android.os.ParcelFileDescriptor)>
<android.telecom.Connection.FailureSignalingConnection: void checkImmutable()>
<android.opengl.GLLogWrapper: void glEnable(int)>
<android.widget.ExpandableListPosition: android.widget.ExpandableListPosition obtainChildPosition(int,int)>
<android.view.IWindowManager: void setAnimationScales(float[])>
<android.opengl.GLErrorWrapper: void glGetTexParameteriv(int,int,java.nio.IntBuffer)>
<android.widget.TimePickerClockDelegate: void setOnTimeChangedListener(android.widget.TimePicker.OnTimeChangedListener)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi: void resetWhilePreservingInitState()>
<android.widget.RemoteViews.SetRemoteViewsAdapterIntent: void <init>(android.widget.RemoteViews,android.os.Parcel)>
<android.webkit.EventLogTags: void writeBrowserDoubleTapDuration(int,long)>
<android.content.pm.IPackageManager: java.util.List queryIntentReceivers(android.content.Intent,java.lang.String,int,int)>
<android.widget.TimePickerSpinnerDelegate: void onRestoreInstanceState(android.os.Parcelable)>
<android.app.LoadedApk.ServiceDispatcher: void doDeath(android.content.ComponentName,android.os.IBinder)>
<android.widget.AbsListView.InputConnectionWrapper: android.view.inputmethod.ExtractedText getExtractedText(android.view.inputmethod.ExtractedTextRequest,int)>
<android.security.keystore.DelegatingX509Certificate: java.lang.String getSigAlgName()>
<android.view.ViewGroup.ViewLocationHolder: int compareTo(java.lang.Object)>
<android.app.ApplicationPackageManager: java.lang.String[] currentToCanonicalPackageNames(java.lang.String[])>
<android.telecom.RemoteConnectionService: java.lang.String toString()>
<android.app.ApplicationPackageManager: int installExistingPackage(java.lang.String)>
<android.media.ImageWriter.WriterSurfaceImage: int getFormat()>
<android.media.MediaRouter.VolumeCallbackInfo: void <init>(android.media.MediaRouter.VolumeCallback,android.media.MediaRouter.RouteInfo)>
<android.widget.DatePickerCalendarDelegate: int getDaysInMonth(int,int)>
<android.widget.YearPickerView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.widget.Spinner.SpinnerPopup: boolean isShowing()>
<android.widget.Editor.SelectionModifierCursorController: boolean isDragAcceleratorActive()>
<android.app.ActivityThread.ApplicationThread: void scheduleLowMemory()>
<android.app.ContextImpl: java.io.File getExternalCacheDir()>
<android.widget.YearPickerView.YearAdapter: boolean hasStableIds()>
<android.widget.CalendarView.AbstractCalendarViewDelegate: void setShownWeekCount(int)>
<android.widget.Editor.SuggestionsPopupWindow: int clipVertically(int)>
<android.view.ViewRootImpl.W: void executeCommand(java.lang.String,java.lang.String,android.os.ParcelFileDescriptor)>
<android.content.res.XmlBlock: int nativeNext(long)>
<android.app.BackStackRecord: android.app.BackStackRecord.TransitionState popFromBackStack(boolean,android.app.BackStackRecord.TransitionState,android.util.SparseArray,android.util.SparseArray)>
<android.view.ViewDebug.ExportedProperty: java.lang.String prefix()>
<android.opengl.GLErrorWrapper: void glFinish()>
<android.net.NetworkInfo.DetailedState: android.net.NetworkInfo.DetailedState valueOf(java.lang.String)>
<android.net.Uri.HierarchicalUri: java.lang.String getEncodedQuery()>
<android.bluetooth.le.BluetoothLeUtils: boolean equals(java.util.Map,java.util.Map)>
<android.app.ContextImpl: android.content.Intent registerReceiverAsUser(android.content.BroadcastReceiver,android.os.UserHandle,android.content.IntentFilter,java.lang.String,android.os.Handler)>
<android.opengl.GLErrorWrapper: void glGetTexGeniv(int,int,java.nio.IntBuffer)>
<android.widget.RemoteViewsAdapter.RemoteViewsAdapterServiceConnection: void onServiceDisconnected()>
<android.media.Utils: android.util.Pair parseSizeRange(java.lang.Object)>
<android.media.DecoderCapabilities.VideoDecoder: android.media.DecoderCapabilities.VideoDecoder valueOf(java.lang.String)>
<android.app.WallpaperManager.Globals: void forgetLoadedWallpaper()>
<android.security.IKeystoreService: int duplicate(java.lang.String,int,java.lang.String,int)>
<android.app.ContextImpl: java.lang.String getBasePackageName()>
<android.bluetooth.BluetoothHealth.BluetoothHealthCallbackWrapper: void onHealthChannelStateChange(android.bluetooth.BluetoothHealthAppConfiguration,android.bluetooth.BluetoothDevice,int,int,android.os.ParcelFileDescriptor,int)>
<android.opengl.GLLogWrapper: void glLoadIdentity()>
<android.print.PrintManager.PrintDocumentAdapterDelegate: void onActivityDestroyed(android.app.Activity)>
<android.os.StrictMode.InstanceTracker: void <init>(java.lang.Object)>
<android.opengl.GLErrorWrapper: int glQueryMatrixxOES(int[],int,int[],int)>
<android.preference.PreferenceGroupAdapter.PreferenceLayout: int compareTo(android.preference.PreferenceGroupAdapter.PreferenceLayout)>
<android.gesture.Learner: java.util.ArrayList classify(int,int,float[])>
<android.net.Uri.Part.EmptyPart: void <init>(java.lang.String)>
<android.app.INotificationManager: int getPackagePriority(java.lang.String,int)>
<android.app.EnterTransitionCoordinator: void onRemoteExitTransitionComplete()>
<android.print.PrintManager.PrintJobStateChangeListenerWrapper: android.print.PrintManager.PrintJobStateChangeListener getListener()>
<android.widget.DayPickerPagerAdapter: java.lang.CharSequence getPageTitle(int)>
<android.media.MediaScanner.WplHandler: void start(org.xml.sax.Attributes)>
<android.content.res.XmlBlock.Parser: java.lang.String getInputEncoding()>
<android.opengl.GLErrorWrapper: void glViewport(int,int,int,int)>
<android.app.ExitTransitionCoordinator: boolean isReadyToNotify()>
<android.widget.RemoteViews.ReflectionActionWithoutParams: void writeToParcel(android.os.Parcel,int)>
<android.app.ActivityThread.ProviderKey: boolean equals(java.lang.Object)>
<android.widget.CalendarViewLegacyDelegate: int getShownWeekCount()>
<android.transition.TranslationAnimationCreator.TransitionPositionListener: void onAnimationResume(android.animation.Animator)>
<android.widget.DayPickerView: void setPosition(int)>
<android.opengl.GLErrorWrapper: void glHint(int,int)>
<android.transition.ChangeTransform.GhostListener: void onTransitionPause(android.transition.Transition)>
<android.os.ParcelFileDescriptor.Status: java.io.IOException asIOException()>
<android.opengl.GLSurfaceView.BaseConfigChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay)>
<android.filterfw.core.Scheduler: android.filterfw.core.Filter scheduleNextNode()>
<android.opengl.GLLogWrapper: void glPointParameterxv(int,java.nio.IntBuffer)>
<android.security.keystore.DelegatingX509Certificate: java.util.List getExtendedKeyUsage()>
<android.app.BackStackRecord: java.lang.CharSequence getBreadCrumbShortTitle()>
<android.renderscript.Mesh.Primitive: android.renderscript.Mesh.Primitive valueOf(java.lang.String)>
<android.widget.RemoteViews.MemoryUsageCounter: void clear()>
<android.opengl.GLErrorWrapper: void glLoadMatrixf(java.nio.FloatBuffer)>
<android.view.ViewRootImpl.W: void dispatchWallpaperCommand(java.lang.String,int,int,int,android.os.Bundle,boolean)>
<android.media.Utils: int divUp(int,int)>
<android.net.LinkProperties.ProvisioningChange: android.net.LinkProperties.ProvisioningChange valueOf(java.lang.String)>
<android.widget.TabHost.ViewIdContentStrategy: android.view.View getContentView()>
<android.graphics.drawable.RippleForeground: android.animation.Animator createSoftwareEnter(boolean)>
<android.media.ImageReader.SurfaceImage: void finalize()>
<android.renderscript.Sampler.Value: android.renderscript.Sampler.Value valueOf(java.lang.String)>
<android.security.keystore.KeyStoreCryptoOperationUtils: java.security.GeneralSecurityException getExceptionForCipherInit(android.security.KeyStore,android.security.keystore.AndroidKeyStoreKey,int)>
<android.content.pm.IPackageManager: int getMoveStatus(int)>
<android.app.ActivityThread.ApplicationThread: void scheduleTrimMemory(int)>
<android.widget.CalendarViewLegacyDelegate: int getSelectedWeekBackgroundColor()>
<android.widget.ActionMenuPresenter.OverflowMenuButton: boolean performClick()>
<android.app.IWallpaperManager: android.os.ParcelFileDescriptor setWallpaper(java.lang.String,java.lang.String)>
<android.preference.SwitchPreference.Listener: void onCheckedChanged(android.widget.CompoundButton,boolean)>
<android.util.XmlPullAttributes: int getAttributeIntValue(int,int)>
<android.location.CountryDetector.ListenerTransport: void onCountryDetected(android.location.Country)>
<android.app.WallpaperManager.FastBitmapDrawable: void setAlpha(int)>
<android.media.midi.MidiPortImpl: long getPacketTimestamp(byte[],int)>
<android.util.MapCollections: java.lang.Object[] toArrayHelper(int)>
<android.app.ApplicationPackageManager: int[] getPackageGids(java.lang.String)>
<android.text.PackedIntVector: int getValue(int,int)>
<android.opengl.GLErrorWrapper: void glAlphaFuncx(int,int)>
<android.widget.Spinner.DialogPopup: void show(int,int)>
<android.view.ViewRootImpl.EarlyPostImeInputStage: void <init>(android.view.ViewRootImpl,android.view.ViewRootImpl.InputStage)>
<android.app.ApplicationPackageManager: java.util.List queryInstrumentation(java.lang.String,int)>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getActivityBanner(android.content.ComponentName)>
<android.animation.AnimatorSet.AnimatorSetListener: void onAnimationCancel(android.animation.Animator)>
<android.opengl.GLErrorWrapper: void glPointParameterxv(int,java.nio.IntBuffer)>
<android.widget.Editor.TextViewPositionListener: void updatePosition(int,int,boolean,boolean)>
<android.widget.CalendarViewMaterialDelegate: void setFirstDayOfWeek(int)>
<android.net.LocalSocketImpl.SocketOutputStream: void write(byte[],int,int)>
<android.opengl.GLErrorWrapper: void glMultMatrixx(java.nio.IntBuffer)>
<android.os.ResultReceiver.MyRunnable: void run()>
<android.transition.Transition.ArrayListManager: java.util.ArrayList remove(java.util.ArrayList,java.lang.Object)>
<android.content.pm.IPackageManager: int movePackage(java.lang.String,java.lang.String)>
<android.util.MapCollections.ValuesCollection: boolean addAll(java.util.Collection)>
<android.app.ApplicationPackageManager: java.util.List getPreferredPackages(int)>
<android.app.INotificationManager: void cancelAllNotifications(java.lang.String,int)>
<android.security.IKeystoreService: int generateKey(java.lang.String,android.security.keymaster.KeymasterArguments,byte[],int,int,android.security.keymaster.KeyCharacteristics)>
<android.location.CountryDetector.ListenerTransport: void <init>(android.location.CountryListener,android.os.Looper)>
<android.widget.ExpandableListPosition: void recycle()>
<android.app.INotificationManager: void cancelToast(java.lang.String,android.app.ITransientNotification)>
<android.widget.Editor.SelectionStartHandleView: boolean onTouchEvent(android.view.MotionEvent)>
<android.hardware.location.IFusedLocationHardware: void startBatching(int,android.location.FusedBatchOptions)>
<android.speech.tts.AudioPlaybackQueueItem: void run()>
<android.widget.AccessibilityIterators.PageTextSegmentIterator: int[] following(int)>
<android.app.ApplicationPackageManager: java.lang.String getInstallerPackageName(java.lang.String)>
<android.widget.Editor.HandleView: void dismiss()>
<android.net.DhcpStateMachine.WaitBeforeRenewalState: void enter()>
<android.inputmethodservice.ExtractButton: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.NoPadding: int getAdditionalEntropyAmountForFinish()>
<android.app.LoadedApk.WarningContextClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>
<android.media.MediaPlayer.TimeProvider: void cancelNotifications(android.media.MediaTimeProvider.OnMediaTimeListener)>
<android.os.ParcelFileDescriptor.Status: void <init>(int,java.lang.String)>
<android.app.ActivityThread.ApplicationThread: void unstableProviderDied(android.os.IBinder)>
<android.webkit.JsDialogHelper.CancelListener: void onClick(android.content.DialogInterface,int)>
<android.widget.RelativeLayout.DependencyGraph.Node: android.widget.RelativeLayout.DependencyGraph.Node acquire(android.view.View)>
<android.security.keystore.AndroidKeyStoreECDSASignatureSpi: void initKey(android.security.keystore.AndroidKeyStoreKey)>
<android.content.res.XmlBlock.Parser: void defineEntityReplacementText(java.lang.String,java.lang.String)>
<android.opengl.GLErrorWrapper: void glBufferData(int,int,java.nio.Buffer,int)>
<android.app.INotificationManager: boolean isNotificationPolicyAccessGrantedForPackage(java.lang.String)>
<android.graphics.Path.Op: android.graphics.Path.Op[] values()>
<android.app.ActivityTransitionCoordinator: void setEpicenter()>
<android.drm.DrmStore.Playback: boolean isValid(int)>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi.GCM: void initAlgorithmSpecificParameters(java.security.AlgorithmParameters)>
<android.view.IWindowManager: void setInTouchMode(boolean)>
<android.print.PrintManager.PrintDocumentAdapterDelegate.MyLayoutResultCallback: void destroy()>
<android.app.ContextImpl: android.content.ComponentName startServiceAsUser(android.content.Intent,android.os.UserHandle)>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable loadItemIcon(android.content.pm.PackageItemInfo,android.content.pm.ApplicationInfo)>
<android.widget.DatePicker.DatePickerSpinnerDelegate: java.util.Calendar getMinDate()>
<android.animation.Keyframe.IntKeyframe: java.lang.Object getValue()>
<android.view.ViewRootImpl.WindowInputEventReceiver: void onInputEvent(android.view.InputEvent)>
<android.app.ContextImpl: java.io.File getDatabasePath(java.lang.String)>
<android.media.SubtitleTrack.CueList.EntryIterator: void <init>(android.media.SubtitleTrack.CueList,java.util.SortedMap)>
<android.view.ViewRootImpl.AccessibilityInteractionConnection: void findAccessibilityNodeInfoByAccessibilityId(long,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)>
<android.widget.Gallery.FlingRunnable: void run()>
<android.graphics.BlurMaskFilter.Blur: android.graphics.BlurMaskFilter.Blur valueOf(java.lang.String)>
<android.app.LoadedApk.WarningContextClassLoader: void clearAssertionStatus()>
<android.app.LoadedApk.ReceiverDispatcher: void performReceive(android.content.Intent,int,java.lang.String,android.os.Bundle,boolean,boolean,int)>
<android.app.ContextImpl: int checkCallingPermission(java.lang.String)>
<android.widget.RemoteViewsAdapter.RemoteViewsCacheKey: int hashCode()>
<android.content.pm.IPackageManager: void restoreDefaultApps(byte[],int)>
<android.opengl.GLLogWrapper: void glGetTexEnvxv(int,int,java.nio.IntBuffer)>
<android.opengl.GLLogWrapper: void glNormalPointer(int,int,int)>
<android.opengl.GLErrorWrapper: void glPolygonOffsetx(int,int)>
<android.view.View.ScrollabilityCache: void <init>(android.view.ViewConfiguration,android.view.View)>
<android.webkit.EventLogTags: void writeBrowserSnapCenter()>
<android.hardware.ICameraService: int getLegacyParameters(int,java.lang.String[])>
<android.view.ViewGroup.ChildListForAccessibility: android.view.ViewGroup.ChildListForAccessibility obtain(android.view.ViewGroup,boolean)>
<android.filterfw.core.Scheduler: void reset()>
<android.widget.TimePickerSpinnerDelegate: void setIs24HourView(boolean)>
<android.bluetooth.le.BluetoothLeUtils: java.lang.String toString(android.util.SparseArray)>
<android.widget.HorizontalScrollView.SavedState: java.lang.String toString()>
<android.widget.Spinner.DropDownAdapter: boolean hasStableIds()>
<android.widget.DatePicker.DatePickerSpinnerDelegate: boolean getSpinnersShown()>
<android.widget.Editor.ProcessTextIntentActionsHandler: boolean performMenuItemAction(android.view.MenuItem)>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi.GCM: void initAlgorithmSpecificParameters()>
<android.opengl.GLLogWrapper: void glGetTexGenxv(int,int,java.nio.IntBuffer)>
<android.app.ContextImpl: java.lang.String getOpPackageName()>
<android.content.res.XmlBlock.Parser: int next()>
<android.widget.Editor.HandleView: void positionAtCursorOffset(int,boolean)>
<android.opengl.GLErrorWrapper: void glLightfv(int,int,java.nio.FloatBuffer)>
<android.app.Notification.BuilderRemoteViews: void <init>(android.content.pm.ApplicationInfo,int)>
<android.content.pm.IPackageManager: boolean isProtectedBroadcast(java.lang.String)>
<android.widget.GridLayout.Axis: int[] getDeltas()>
<android.widget.CursorTreeAdapter.MyCursorHelper.MyContentObserver: void onChange(boolean)>
<android.location.LocalListenerHelper: void remove(java.lang.Object)>
<android.app.LoadedApk.ReceiverDispatcher.Args: void run()>
<android.app.ContextImpl: java.lang.String[] databaseList()>
<android.widget.DatePickerCalendarDelegate.SavedState: int getSelectedMonth()>
<android.widget.Editor.SpanController: void onSpanChanged(android.text.Spannable,java.lang.Object,int,int,int,int)>
<android.media.RemoteController.RcDisplay: void setPlaybackState(int,int,long,long,float)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: java.lang.String opmodeToString(int)>
<android.app.ActivityTransitionCoordinator: java.util.ArrayList getMappedNames()>
<android.opengl.GLLogWrapper: void glDrawTexxvOES(java.nio.IntBuffer)>
<android.app.Instrumentation.ActivityWaiter: void <init>(android.content.Intent)>
<android.app.ActivityTransitionState: boolean startExitBackTransition(android.app.Activity)>
<android.app.INotificationManager: void requestHintsFromListener(android.service.notification.INotificationListener,int)>
<android.bluetooth.BluetoothOutputStream: void flush()>
<android.view.ViewDebug.ExportedProperty: java.lang.String category()>
<android.app.ApplicationPackageManager: void deletePackage(java.lang.String,android.content.pm.IPackageDeleteObserver,int)>
<android.app.LoadedApk.ServiceDispatcher: void connected(android.content.ComponentName,android.os.IBinder)>
<android.app.ApplicationPackageManager: boolean isSignedByExactly(java.lang.String,android.content.pm.KeySet)>
<android.view.ViewRootImpl.SyntheticJoystickHandler: void <init>(android.view.ViewRootImpl)>
<android.app.BackStackState: void <init>(android.os.Parcel)>
<android.view.RenderNodeAnimator.DelayedAnimationHelper: void run()>
<android.media.MediaScanner.MyMediaScannerClient: void handleStringTag(java.lang.String,java.lang.String)>
<android.content.pm.IPackageManager: boolean addPermissionAsync(android.content.pm.PermissionInfo)>
<android.transition.TranslationAnimationCreator.TransitionPositionListener: void onAnimationPause(android.animation.Animator)>
<android.widget.AbsListView.PositionScroller: void run()>
<android.print.PrintManager.PrintDocumentAdapterDelegate: void onActivityCreated(android.app.Activity,android.os.Bundle)>
<android.media.RemoteController.EventHandler: void handleMessage(android.os.Message)>
<android.speech.tts.AbstractEventLogger: void onEngineDataReceived()>
<android.widget.DatePicker.DatePickerSpinnerDelegate: android.os.Parcelable onSaveInstanceState(android.os.Parcelable)>
<android.view.AccessibilityIterators.WordTextSegmentIterator: void onLocaleChanged(java.util.Locale)>
<android.net.Uri.AbstractHierarchicalUri: java.lang.String getHost()>
<android.widget.AbsSpinner.RecycleBin: void put(int,android.view.View)>
<android.widget.GridLayout.Alignment: int getAlignmentValue(android.view.View,int,int)>
<android.opengl.GLErrorWrapper: void glGetTexEnviv(int,int,java.nio.IntBuffer)>
<android.widget.DayPickerViewPager: void <init>(android.content.Context,android.util.AttributeSet,int,int)>
<android.widget.GridLayout.Arc: void <init>(android.widget.GridLayout.Interval,android.widget.GridLayout.MutableInt)>
<android.test.InstrumentationTestCase: void tearDown()>
<android.widget.ArrayAdapter.ArrayFilter: android.widget.Filter.FilterResults performFiltering(java.lang.CharSequence)>
<android.content.res.ThemedResourceCache: void onConfigurationChange(int)>
<com.android.server.ResettableTimeout: void on(boolean)>
<android.app.ApplicationPackageManager: int getPreferredActivities(java.util.List,java.util.List,java.lang.String)>
<android.app.EnterTransitionCoordinator: void namedViewsReady(java.util.ArrayList,java.util.ArrayList)>
<android.opengl.GLLogWrapper: void glClearStencil(int)>
<android.app.ActivityTransitionCoordinator: android.transition.Transition configureTransition(android.transition.Transition,boolean)>
<android.widget.RelativeLayout.TopToBottomLeftToRightComparator: int compare(java.lang.Object,java.lang.Object)>
<android.widget.RemoteViews.BitmapCache: android.graphics.Bitmap getBitmapForId(int)>
<android.opengl.GLLogWrapper: void glVertexPointer(int,int,int,java.nio.Buffer)>
<android.widget.DatePickerCalendarDelegate: java.util.Calendar getMaxDate()>
<android.inputmethodservice.IInputMethodWrapper: android.view.inputmethod.InputMethod getInternalInputMethod()>
<android.animation.KeyframeSet: java.lang.Object clone()>
<android.view.IWindowSession: boolean outOfMemory(android.view.IWindow)>
<android.widget.RemoteViewsAdapter.RemoteViewsIndexMetaData: void <init>(android.widget.RemoteViews,long)>
<android.content.ContentProvider.Transport: int update(java.lang.String,android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>
<android.content.ContentProvider.Transport: java.lang.String getType(android.net.Uri)>
<android.widget.Toolbar.ExpandedActionViewMenuPresenter: void onCloseMenu(com.android.internal.view.menu.MenuBuilder,boolean)>
<android.preference.PreferenceInflater: android.preference.GenericInflater cloneInContext(android.content.Context)>
<android.opengl.GLErrorWrapper: void glScalef(float,float,float)>
<android.hardware.usb.IUsbManager: android.hardware.usb.UsbPortStatus getPortStatus(java.lang.String)>
<android.opengl.GLLogWrapper: void glTexGeniv(int,int,java.nio.IntBuffer)>
<android.net.Uri.AbstractHierarchicalUri: java.lang.String getUserInfo()>
<android.test.InstrumentationTestCase: void sendKeys(java.lang.String)>
<android.hardware.input.IInputManager: void setCurrentKeyboardLayoutForInputDevice(android.hardware.input.InputDeviceIdentifier,java.lang.String)>
<android.net.LocalSocketImpl.SocketOutputStream: void write(int)>
<android.opengl.GLLogWrapper: void glFinish()>
<android.opengl.GLSurfaceView.ComponentSizeChooser: void <init>(android.opengl.GLSurfaceView,int,int,int,int,int,int)>
<android.view.ViewOverlay.OverlayViewGroup: void dispatchDraw(android.graphics.Canvas)>
<android.widget.RelativeLayout.TopToBottomLeftToRightComparator: int compare(android.view.View,android.view.View)>
<android.util.MapCollections: boolean containsAllHelper(java.util.Map,java.util.Collection)>
<android.app.ActivityThread.ApplicationThread: void scheduleReceiver(android.content.Intent,android.content.pm.ActivityInfo,android.content.res.CompatibilityInfo,int,java.lang.String,android.os.Bundle,boolean,int,int)>
<android.app.ActivityTransitionCoordinator: void pauseInput()>
<android.opengl.GLErrorWrapper: void glMaterialfv(int,int,float[],int)>
<android.widget.SimpleMonthView.MonthViewTouchHelper: boolean onPerformActionForVirtualView(int,int,android.os.Bundle)>
<android.telecom.ConnectionServiceAdapter: void binderDied()>
<android.telecom.RemoteConnectionService: android.telecom.RemoteConnection createRemoteConnection(android.telecom.PhoneAccountHandle,android.telecom.ConnectionRequest,boolean)>
<android.widget.SimpleMonthView.MonthViewTouchHelper: void onPopulateNodeForVirtualView(int,android.view.accessibility.AccessibilityNodeInfo)>
<android.print.PrintManager.PrintDocumentAdapterDelegate.MyHandler: void <init>(android.print.PrintManager.PrintDocumentAdapterDelegate,android.os.Looper)>
<android.os.IProcessInfoService: void getProcessStatesFromPids(int[],int[])>
<android.widget.StackView.StackSlider: float getXProgress()>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: int engineGetKeySize(java.security.Key)>
<android.widget.CalendarViewLegacyDelegate: void setShownWeekCount(int)>
<android.provider.Settings.NameValueCache: void <init>(java.lang.String,android.net.Uri,java.lang.String,java.lang.String)>
<android.animation.Animator.AnimatorConstantState: void <init>(android.animation.Animator)>
<android.transition.ChangeTransform.PathAnimatorMatrix: android.graphics.Matrix getMatrix()>
<android.view.IWindowManager: void overridePendingAppTransitionClipReveal(int,int,int,int)>
<android.widget.RemoteViewsAdapter.RemoteViewsFrameLayoutRefSet: void <init>(android.widget.RemoteViewsAdapter)>
<android.inputmethodservice.KeyboardView.SwipeTracker: void computeCurrentVelocity(int,float)>
<android.app.Activity.HostCallbacks: boolean onHasView()>
<android.widget.CalendarViewLegacyDelegate.WeeksAdapter: java.util.Calendar getSelectedDay()>
<android.widget.RemoteViews.SetOnClickFillInIntent: void <init>(android.widget.RemoteViews,android.os.Parcel)>
<android.widget.RemoteViewsAdapter.RemoteViewsFrameLayoutRefSet: void removeView(android.widget.RemoteViewsAdapter.RemoteViewsFrameLayout)>
<android.accounts.ChooseAccountActivity.AccountArrayAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.app.ApplicationPackageManager: java.util.List getPackageCandidateVolumes(android.content.pm.ApplicationInfo)>
<android.app.ActivityThread.ApplicationThread: void dumpHeap(boolean,java.lang.String,android.os.ParcelFileDescriptor)>
<android.hardware.SystemSensorManager.TriggerEventQueue: void <init>(android.hardware.TriggerEventListener,android.os.Looper,android.hardware.SystemSensorManager,java.lang.String)>
<android.widget.CalendarViewMaterialDelegate: void setDate(long)>
<android.app.BackStackRecord: int getTransitionStyle()>
<android.opengl.GLErrorWrapper: void glLightx(int,int,int)>
<android.net.DhcpStateMachine.DefaultState: boolean processMessage(android.os.Message)>
<android.app.LoaderManagerImpl.LoaderInfo: void onLoadCanceled(android.content.Loader)>
<android.opengl.EGLLogWrapper: boolean eglMakeCurrent(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLSurface,javax.microedition.khronos.egl.EGLContext)>
<android.view.ViewRootImpl.W: void moved(int,int)>
<android.os.SystemService.State: android.os.SystemService.State[] values()>
<android.print.PrinterDiscoverySession.SessionHandler: void <init>(android.print.PrinterDiscoverySession,android.os.Looper)>
<android.app.ContextImpl: int checkCallingOrSelfPermission(java.lang.String)>
<android.opengl.GLErrorWrapper: void glDeleteFramebuffersOES(int,int[],int)>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: android.security.keystore.KeyStoreCryptoOperationStreamer createMainDataStreamer(android.security.KeyStore,android.os.IBinder)>
<android.widget.TimePickerClockDelegate.SavedState: int getMinute()>
<android.widget.Editor.InsertionPointCursorController: void hide()>
<android.widget.TextView.CharWrapper: float getTextRunAdvances(int,int,int,int,boolean,float[],int,android.graphics.Paint)>
<android.hardware.SystemSensorManager.SensorEventQueue: void dispatchSensorEvent(int,float[],int,long)>
<android.opengl.GLLogWrapper: void glLineWidth(float)>
<android.animation.KeyframeSet: java.lang.String toString()>
<android.widget.SimpleMonthView: void setDayTextAppearance(int)>
<android.widget.GridLayout.Axis: int[] getLocations()>
<android.app.ContextImpl: java.io.File[] getExternalFilesDirs(java.lang.String)>
<android.graphics.Bitmap.CompressFormat: android.graphics.Bitmap.CompressFormat[] values()>
<android.util.ContainerHelpers: int binarySearch(int[],int,int)>
<android.app.BackStackRecord: boolean isAddToBackStackAllowed()>
<android.opengl.GLErrorWrapper: void glTexParameterfv(int,int,float[],int)>
<android.app.ContextImpl: int checkPermission(java.lang.String,int,int)>
<android.app.ActivityThread.ApplicationThread: void scheduleStopActivity(android.os.IBinder,boolean,int)>
<android.widget.CalendarViewLegacyDelegate: long getDate()>
<android.app.ActivityTransitionCoordinator: java.util.ArrayList copyMappedViews()>
<android.widget.GridLayout.Arc: java.lang.String toString()>
<android.opengl.GLErrorWrapper: void glGetTexEnvxv(int,int,int[],int)>
<android.opengl.GLLogWrapper: void glClear(int)>
<android.opengl.GLLogWrapper: void glTexParameterxv(int,int,java.nio.IntBuffer)>
<android.widget.SuggestionsAdapter: int getQueryRefinement()>
<android.animation.AnimatorSet.AnimatorSetListener: void onAnimationStart(android.animation.Animator)>
<android.animation.Keyframe.ObjectKeyframe: android.animation.Keyframe.ObjectKeyframe clone()>
<android.animation.PropertyValuesHolder.IntPropertyValuesHolder: void setIntValues(int[])>
<android.inputmethodservice.IInputMethodWrapper: void changeInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)>
<android.view.ViewOverlay.OverlayViewGroup: void invalidate()>
<android.app.ApplicationPackageManager: java.util.List queryIntentContentProviders(android.content.Intent,int)>
<android.media.MediaScanner.FileEntry: java.lang.String toString()>
<android.widget.Editor.SelectionStartHandleView: int getCurrentCursorOffset()>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.OAEPWithSHA512AndMGF1Padding: void finalize()>
<android.app.LauncherActivity.ActivityAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.widget.CalendarView.AbstractCalendarViewDelegate: boolean getShowWeekNumber()>
<android.app.INotificationManager: void setInterruptionFilter(java.lang.String,int)>
<android.widget.CalendarViewLegacyDelegate: void setSelectedWeekBackgroundColor(int)>
<android.widget.RemoteViews.SetOnClickFillInIntent: void <init>(android.widget.RemoteViews,int,android.content.Intent)>
<android.widget.CalendarViewLegacyDelegate: void setSelectedDateVerticalBar(int)>
<android.app.LoaderManagerImpl.LoaderInfo: void onLoadComplete(android.content.Loader,java.lang.Object)>
<android.opengl.GLErrorWrapper: void glCopyTexImage2D(int,int,int,int,int,int,int,int)>
<android.opengl.GLErrorWrapper: void glCompressedTexSubImage2D(int,int,int,int,int,int,int,int,java.nio.Buffer)>
<android.text.PackedIntVector: int width()>
<android.preference.MultiSelectListPreference.SavedState: void <init>(android.os.Parcelable)>
<android.util.XmlPullAttributes: int getIdAttributeResourceValue(int)>
<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache: void commitTemporaryMetaData()>
<android.opengl.GLSurfaceView.GLThread: void requestReleaseEglContextLocked()>
<android.view.ViewRootImpl.AccessibilityInteractionConnection: void findAccessibilityNodeInfosByText(long,java.lang.String,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)>
<android.app.MediaRouteButton.MediaRouterCallback: void onRouteGrouped(android.media.MediaRouter,android.media.MediaRouter.RouteInfo,android.media.MediaRouter.RouteGroup,int)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.OAEPWithMGF1Padding: void addAlgorithmSpecificParametersToBegin(android.security.keymaster.KeymasterArguments)>
<android.opengl.GLLogWrapper: void glRenderbufferStorageOES(int,int,int,int)>
<android.speech.SpeechRecognizer.InternalListener: void onBeginningOfSpeech()>
<android.widget.Editor.SuggestionsPopupWindow: void hide()>
<android.hardware.location.IFusedLocationHardware: void injectDiagnosticData(java.lang.String)>
<android.webkit.WebSettings.ZoomDensity: android.webkit.WebSettings.ZoomDensity valueOf(java.lang.String)>
<android.telecom.CallbackRecord: android.os.Handler getHandler()>
<android.widget.RtlSpacingHelper: void setRelative(int,int)>
<android.app.ApplicationPackageManager: void clearCrossProfileIntentFilters(int)>
<android.app.ActivityThread.ApplicationThread: void scheduleBindService(android.os.IBinder,android.content.Intent,boolean,int)>
<android.app.INotificationManager: void requestZenModeConditions(android.service.notification.IConditionListener,int)>
<android.appwidget.AppWidgetHost.UpdateHandler: void <init>(android.appwidget.AppWidgetHost,android.os.Looper)>
<android.graphics.Atlas.Policy: android.graphics.Atlas.Entry pack(int,int,android.graphics.Atlas.Entry)>
<android.util.MapCollections.KeySet: boolean containsAll(java.util.Collection)>
<android.widget.NumberPicker.BeginSoftInputOnLongPressCommand: void run()>
<android.animation.PathKeyframes: void invalidateCache()>
<android.accounts.ChooseAccountTypeActivity.AccountArrayAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>
<android.view.IWindowManager: android.view.WindowContentFrameStats getWindowContentFrameStats(android.os.IBinder)>
<android.app.ApplicationPackageManager: android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName)>
<android.widget.AutoCompleteTextView.MyWatcher: void beforeTextChanged(java.lang.CharSequence,int,int,int)>
<android.hardware.camera2.ICameraDeviceUser: int submitRequest(android.hardware.camera2.CaptureRequest,boolean,android.hardware.camera2.utils.LongParcelable)>
<android.widget.PopupWindow.PopupDecorView: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.net.Uri.StringUri: java.lang.String getEncodedFragment()>
<android.opengl.GLLogWrapper: void glGetIntegerv(int,java.nio.IntBuffer)>
<android.view.ViewRootImpl.InputStage: boolean shouldDropInputEvent(android.view.ViewRootImpl.QueuedInputEvent)>
<android.hardware.usb.IUsbManager: void setPortRoles(java.lang.String,int,int)>
<android.app.MediaRouteActionProvider.MediaRouterCallback: void <init>(android.app.MediaRouteActionProvider)>
<android.security.keystore.DelegatingX509Certificate: void checkValidity(java.util.Date)>
<android.opengl.GLErrorWrapper: void glGetMaterialxv(int,int,java.nio.IntBuffer)>
<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: int getAdditionalEntropyAmountForBegin()>
<android.widget.DatePickerCalendarDelegate: android.widget.CalendarView getCalendarView()>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: android.security.keystore.KeyStoreCryptoOperationStreamer createAdditionalAuthenticationDataStreamer(android.security.KeyStore,android.os.IBinder)>
<android.print.PrintManager.PrintDocumentAdapterDelegate.MyWriteResultCallback: void onWriteCancelled()>
<android.view.IWindowManager: void setForcedDisplayDensity(int,int)>
<android.speech.tts.SynthesisPlaybackQueueItem: void run()>
<android.app.ContextImpl: int getThemeResId()>
<android.content.pm.IPackageManager: byte[] getDefaultAppsBackup(int)>
<android.opengl.GLLogWrapper.PointerInfo: void <init>(android.opengl.GLLogWrapper)>
<android.view.IWindowManager: void reenableKeyguard(android.os.IBinder)>
<android.view.AccessibilityIterators.ParagraphTextSegmentIterator: int[] following(int)>
<android.app.ActivityThread.ProviderKey: int hashCode()>
<android.filterfw.core.GenerateProgramPort: java.lang.String variableName()>
<android.security.IKeystoreService: int getState(int)>
<android.widget.GridLayout.Interval: int hashCode()>
<android.widget.CalendarViewLegacyDelegate.WeeksAdapter: void <init>(android.widget.CalendarViewLegacyDelegate,android.content.Context)>
<android.net.DhcpStateMachine.RunningState: boolean processMessage(android.os.Message)>
<android.view.IWindowManager: void setAppVisibility(android.os.IBinder,boolean)>
<android.opengl.GLErrorWrapper: void glGetLightxv(int,int,java.nio.IntBuffer)>
<android.widget.ListPopupWindow.ResizePopupRunnable: void run()>
<android.opengl.GLErrorWrapper: void glNormalPointer(int,int,int)>
<android.text.Layout.Ellipsizer: int length()>
<android.security.keystore.AndroidKeyStoreSignatureSpiBase: void engineUpdate(byte[],int,int)>
<android.util.MapCollections: boolean equalsSetHelper(java.util.Set,java.lang.Object)>
<android.opengl.GLLogWrapper: void glColorPointer(int,int,int,int)>
<android.widget.ActivityChooserView.ActivityChooserViewAdapter: void setDataModel(android.widget.ActivityChooserModel)>
<android.app.LauncherActivity.ActivityAdapter: android.app.LauncherActivity.ListItem itemForPosition(int)>
<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: java.security.AlgorithmParameters engineGetParameters()>
<android.opengl.GLLogWrapper: void glClearDepthx(int)>
<android.widget.DatePicker.AbstractDatePickerDelegate: void onLocaleChanged(java.util.Locale)>
<android.opengl.GLLogWrapper: void glGetRenderbufferParameterivOES(int,int,int[],int)>
<android.media.MediaCodec.BufferMap: void remove(int)>
<android.opengl.GLErrorWrapper: void glTexParameterfv(int,int,java.nio.FloatBuffer)>
<android.view.ViewRootImpl.WindowInputEventReceiver: void onBatchedInputEventPending()>
<android.app.SharedPreferencesImpl: java.util.Map getAll()>
<android.view.IWindowManager: void removeWindowToken(android.os.IBinder)>
<android.opengl.GLErrorWrapper: void glLightModelx(int,int)>
<android.app.ApplicationPackageManager: void verifyIntentFilter(int,int,java.util.List)>
<android.speech.tts.BlockingAudioTrack: boolean init()>
<android.app.BackStackRecord: void run()>
<android.widget.Toast.TN: void handleShow()>
<android.graphics.AvoidXfermode.Mode: android.graphics.AvoidXfermode.Mode[] values()>
<android.widget.DayPickerView: void setDate(long)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.PKCS1Padding: int getAdditionalEntropyAmountForBegin()>
<android.opengl.GLLogWrapper: void glBindFramebufferOES(int,int)>
<android.text.PackedObjectVector: void <init>(int)>
<android.util.MapCollections.ValuesCollection: java.lang.Object[] toArray(java.lang.Object[])>
<android.view.IWindowManager: void dismissKeyguard()>
<android.location.ILocationManager: void clearTestProviderLocation(java.lang.String,java.lang.String)>
<android.widget.CalendarViewLegacyDelegate: android.graphics.drawable.Drawable getSelectedDateVerticalBar()>
<android.hardware.location.IFusedLocationHardware: void stopBatching(int)>
<android.opengl.GLSurfaceView.DefaultWindowSurfaceFactory: javax.microedition.khronos.egl.EGLSurface createWindowSurface(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig,java.lang.Object)>
<android.text.PackedIntVector: void insertAt(int,int[])>
<android.opengl.GLErrorWrapper: void glLightModelf(int,float)>
<android.os.StrictMode.AndroidBlockGuardPolicy: void onReadFromDisk()>
<android.content.pm.IPackageManager: android.content.pm.ResolveInfo resolveService(android.content.Intent,java.lang.String,int,int)>
<android.opengl.GLErrorWrapper: void glDrawElements(int,int,int,java.nio.Buffer)>
<android.transition.Visibility.DisappearListener: void onAnimationResume(android.animation.Animator)>
<android.widget.TimePickerClockDelegate: void onConfigurationChanged(android.content.res.Configuration)>
<android.widget.DatePicker.DatePickerSpinnerDelegate: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.util.MapCollections.KeySet: boolean add(java.lang.Object)>
<android.speech.tts.EventLogTags: void writeTtsSpeakFailure(java.lang.String,int,int,int,java.lang.String,int,int)>
<android.graphics.drawable.RippleForeground: void move(float,float)>
<android.opengl.GLLogWrapper: void glPointParameterx(int,int)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.OAEPWithMGF1Padding: void initAlgorithmSpecificParameters(java.security.spec.AlgorithmParameterSpec)>
<android.transition.Visibility.DisappearListener: void onTransitionResume(android.transition.Transition)>
<android.app.ActivityThread.DropBoxReporter: void addText(java.lang.String,java.lang.String)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi: int getKeymasterPaddingOverride()>
<android.view.AccessibilityInteractionController: void findAccessibilityNodeInfosByViewIdClientThread(long,java.lang.String,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)>
<android.widget.CalendarView.AbstractCalendarViewDelegate: void setSelectedWeekBackgroundColor(int)>
<android.os.CommonTimeUtils: int transactSetLong(int,long)>
<android.view.ViewRootImpl.ViewPostImeInputStage: int onProcess(android.view.ViewRootImpl.QueuedInputEvent)>
<android.opengl.GLErrorWrapper: void glDrawTexxOES(int,int,int,int,int)>
<android.opengl.GLLogWrapper: void glTexParameterxv(int,int,int[],int)>
<android.app.ActivityThread.ApplicationThread: void dumpGfxInfo(java.io.FileDescriptor,java.lang.String[])>
<android.view.FocusFinder.SequentialFocusComparator: int compare(android.view.View,android.view.View)>
<android.widget.Editor.TextActionModeCallback: void onGetContentRect(android.view.ActionMode,android.view.View,android.graphics.Rect)>
<android.net.Uri.StringUri: java.util.List getPathSegments()>
<android.opengl.GLErrorWrapper: java.lang.String glGetString(int)>
<android.animation.KeyframeSet: void setEvaluator(android.animation.TypeEvaluator)>
<android.view.ViewDebug.ExportedProperty: boolean resolveId()>
<android.view.ViewDebug.ExportedProperty: boolean formatToHexString()>
<android.text.DynamicLayout.ChangeWatcher: void <init>(android.text.DynamicLayout)>
<android.widget.SimpleMonthView: java.lang.CharSequence getTitle()>
<android.media.SubtitleTrack.CueList: void remove(android.media.SubtitleTrack.Cue)>
<android.util.XmlPullAttributes: java.lang.String getClassAttribute()>
<android.app.SharedPreferencesImpl: boolean contains(java.lang.String)>
<android.hardware.SystemSensorManager.SensorEventQueue: void addSensorEvent(android.hardware.Sensor)>
<android.app.ActivityTransitionCoordinator: android.view.ViewGroup getDecor()>
<android.media.MediaRecorder.EventHandler: void handleMessage(android.os.Message)>
<android.view.ViewRootImpl.InputStage: int onProcess(android.view.ViewRootImpl.QueuedInputEvent)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.NoPadding: void initAlgorithmSpecificParameters(java.security.AlgorithmParameters)>
<android.app.INotificationManager: void setZenMode(int,android.net.Uri,java.lang.String)>
<android.animation.PathKeyframes.IntKeyframesBase: java.lang.Object getValue(float)>
<android.net.Uri.OpaqueUri: java.lang.String getEncodedSchemeSpecificPart()>
<android.widget.RemoteViewsAdapter.RemoteViewsAdapterServiceConnection: com.android.internal.widget.IRemoteViewsFactory getRemoteViewsFactory()>
<android.hardware.SystemSensorManager.BaseEventQueue: void finalize()>
<android.app.BackStackRecord: void removeTargets(android.transition.Transition,java.util.ArrayList)>
<android.widget.DatePicker.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.media.MediaPlayer.TimeProvider.EventHandler: void <init>(android.media.MediaPlayer.TimeProvider,android.os.Looper)>
<android.net.Uri.HierarchicalUri: java.lang.String getSchemeSpecificPart()>
<android.view.InputQueue.ActiveInputEvent: void recycle()>
<android.opengl.GLErrorWrapper: void glLoadMatrixf(float[],int)>
<android.widget.TimePickerSpinnerDelegate: android.os.Parcelable onSaveInstanceState(android.os.Parcelable)>
<android.widget.PopupWindow.PopupDecorView: void <init>(android.widget.PopupWindow,android.content.Context)>
<android.view.HardwareLayer: void setTransform(android.graphics.Matrix)>
<android.widget.DayPickerViewPager: void <init>(android.content.Context,android.util.AttributeSet)>
<android.media.WebVttRenderingWidget.CueLayout: void prepForPrune()>
<android.widget.CalendarViewLegacyDelegate: void setDate(long)>
<android.text.Layout.SpannedEllipsizer: void <init>(java.lang.CharSequence)>
<android.opengl.GLLogWrapper: void glGetTexParameteriv(int,int,int[],int)>
<android.bluetooth.BluetoothSocket.SocketState: android.bluetooth.BluetoothSocket.SocketState[] values()>
<android.app.ActivityThread.ApplicationThread: void scheduleCancelVisibleBehind(android.os.IBinder)>
<android.net.Uri.StringUri: java.lang.String getEncodedQuery()>
<android.security.keystore.AndroidKeyStoreCipherSpiBase: int engineUpdate(byte[],int,int,byte[],int)>
<android.hardware.SystemSensorManager.InjectEventQueue: void removeSensorEvent(android.hardware.Sensor)>
<android.hardware.camera2.ICameraDeviceUser: int waitUntilIdle()>
<android.view.IWindowManager: void overridePendingAppTransitionScaleUp(int,int,int,int)>
<android.view.accessibility.AccessibilityCache: android.view.accessibility.AccessibilityWindowInfo getWindow(int)>
<android.view.AccessibilityInteractionController: void <init>(android.view.ViewRootImpl)>
<android.opengl.GLLogWrapper: void <init>(javax.microedition.khronos.opengles.GL,java.io.Writer,boolean)>
<android.app.Activity.HostCallbacks: android.app.Activity onGetHost()>
<android.app.PendingIntent.FinishedDispatcher: void run()>
<android.app.SharedPreferencesImpl: void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences.OnSharedPreferenceChangeListener)>
<android.widget.AppSecurityPermissions.PermissionGroupInfoComparator: int compare(java.lang.Object,java.lang.Object)>
<android.widget.ZoomButtonsController.Container: boolean dispatchKeyEvent(android.view.KeyEvent)>
<android.app.IntentReceiverLeaked: void <init>(java.lang.String)>
<android.provider.MediaStore.InternalThumbnails: void cancelThumbnailRequest(android.content.ContentResolver,long,android.net.Uri,long)>
<android.content.res.XmlBlock.Parser: int getStyleAttribute()>
<android.app.ExitTransitionCoordinator: void onReceiveResult(int,android.os.Bundle)>
<android.app.ActivityThread.ApplicationThread: void scheduleWindowVisibility(android.os.IBinder,boolean)>
<android.hardware.LegacySensorManager: void onRotationChanged(int)>
<android.widget.SimpleMonthView: boolean dispatchHoverEvent(android.view.MotionEvent)>
<android.test.AndroidTestCase: void assertWritingContentUriRequiresPermission(android.net.Uri,java.lang.String)>
<android.util.MapCollections.ValuesCollection: int size()>
<android.opengl.GLLogWrapper: void glTexGenxv(int,int,java.nio.IntBuffer)>
<android.app.ContextImpl: java.lang.String getSystemServiceName(java.lang.Class)>
<android.content.ContentProvider.Transport: int bulkInsert(java.lang.String,android.net.Uri,android.content.ContentValues[])>
<android.net.LocalSocketImpl: java.io.FileDescriptor getFileDescriptor()>
<android.app.ApplicationPackageManager: java.util.List getPackagesHoldingPermissions(java.lang.String[],int)>
<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: void resetAll()>
<android.media.ImageWriter.WriterSurfaceImage: void setTimestamp(long)>
<android.print.PrintManager.PrintDocumentAdapterDelegate.MyHandler: void handleMessage(android.os.Message)>
<android.widget.DatePickerCalendarDelegate: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>
<android.widget.SuggestionsAdapter: void close()>
<android.widget.CalendarViewLegacyDelegate: void setCurrentLocale(java.util.Locale)>
<android.view.View.CheckForLongPress: void rememberWindowAttachCount()>
<android.inputmethodservice.IInputMethodWrapper: void hideSoftInput(int,android.os.ResultReceiver)>
<android.test.PerformanceTestCase: int startPerformance(android.test.PerformanceTestCase.Intermediates)>
<android.widget.DatePicker.DatePickerSpinnerDelegate: void setMaxDate(long)>
<android.bluetooth.BluetoothOutputStream: void close()>
<android.widget.CalendarViewLegacyDelegate: void onConfigurationChanged(android.content.res.Configuration)>
<android.view.IWindowManager: void keyguardGoingAway(boolean,boolean)>
<android.app.ContextImpl: void startActivities(android.content.Intent[],android.os.Bundle)>
<android.location.ILocationManager: boolean providerMeetsCriteria(java.lang.String,android.location.Criteria)>
<android.widget.Editor.PositionListener: void removeSubscriber(android.widget.Editor.TextViewPositionListener)>
<android.view.AccessibilityInteractionController: void findAccessibilityNodeInfoByAccessibilityIdClientThread(long,android.graphics.Region,int,android.view.accessibility.IAccessibilityInteractionConnectionCallback,int,int,long,android.view.MagnificationSpec)>
<android.hardware.SystemSensorManager.BaseEventQueue: void dispatchSensorEvent(int,float[],int,long)>
<android.widget.AbsListView.PositionScroller: void start(int)>
<android.widget.SuggestionsAdapter: java.lang.CharSequence convertToString(android.database.Cursor)>
<android.app.Dialog.ListenersHandler: void <init>(android.app.Dialog)>
<android.widget.CalendarViewLegacyDelegate: long getMaxDate()>
<android.net.LocalSocketImpl: void close()>
<android.media.MediaRouter.Static: android.view.Display[] getAllPresentationDisplays()>
<android.widget.RemoteViews.ReflectionActionWithoutParams: int mergeBehavior()>
<android.media.ImageReader.SurfaceImage: int getWidth()>
<android.widget.RemoteViews.SetPendingIntentTemplate: void <init>(android.widget.RemoteViews,android.os.Parcel)>
<android.app.ApplicationPackageManager: boolean setApplicationHiddenSettingAsUser(java.lang.String,boolean,android.os.UserHandle)>
<android.view.IWindowSession: int relayout(android.view.IWindow,int,android.view.WindowManager.LayoutParams,int,int,int,int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect,android.content.res.Configuration,android.view.Surface)>
<android.text.PackedIntVector: void deleteAt(int,int)>
<android.app.ApplicationPackageManager: java.util.List queryIntentServices(android.content.Intent,int)>
<android.opengl.GLErrorWrapper: void glTexGenxv(int,int,int[],int)>
<android.widget.RemoteViews.ViewPaddingAction: void <init>(android.widget.RemoteViews,android.os.Parcel)>
<android.opengl.GLErrorWrapper: void glActiveTexture(int)>
<android.telecom.RemoteConnection.CallbackRecord: android.os.Handler getHandler()>
<android.opengl.GLErrorWrapper: int glGetError()>
<android.widget.ListView.ArrowScrollFocusResult: int getAmountToScroll()>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.PKCS1Padding: boolean adjustConfigForEncryptingWithPrivateKey()>
<android.widget.RemoteViews.MutablePair: int hashCode()>
<android.view.ViewRootImpl.ImeInputStage: void onFinishedInputEvent(java.lang.Object,boolean)>
<android.widget.Toolbar.ExpandedActionViewMenuPresenter: boolean expandItemActionView(com.android.internal.view.menu.MenuBuilder,com.android.internal.view.menu.MenuItemImpl)>
<android.widget.CalendarViewMaterialDelegate: void setDateTextAppearance(int)>
<android.graphics.drawable.RippleBackground: void <init>(android.graphics.drawable.RippleDrawable,android.graphics.Rect)>
<android.view.LayoutInflater.BlinkLayout: void dispatchDraw(android.graphics.Canvas)>
<android.speech.tts.PlaybackQueueItem: android.speech.tts.TextToSpeechService.UtteranceProgressDispatcher getDispatcher()>
<android.app.ApplicationPackageManager: android.content.Intent getLaunchIntentForPackage(java.lang.String)>
<android.graphics.Matrix.ScaleToFit: android.graphics.Matrix.ScaleToFit valueOf(java.lang.String)>
<android.opengl.GLErrorWrapper: void glGetTexParameteriv(int,int,int[],int)>
<android.opengl.GLErrorWrapper: boolean glIsBuffer(int)>
<android.print.PrintFileDocumentAdapter.WriteFileAsyncTask: void onCancelled(java.lang.Void)>
<android.opengl.GLLogWrapper: void glGetMaterialfv(int,int,java.nio.FloatBuffer)>
<android.opengl.EGLLogWrapper: int eglGetError()>
<android.util.MapCollections.MapIterator: int hashCode()>
<android.net.IpConfiguration.ProxySettings: android.net.IpConfiguration.ProxySettings[] values()>
<android.transition.Slide.CalculateSlideVertical: float getGoneX(android.view.ViewGroup,android.view.View)>
<android.view.ViewPropertyAnimator.AnimatorEventListener: void onAnimationUpdate(android.animation.ValueAnimator)>
<android.preference.PreferenceInflater: boolean onCreateCustomFromTag(org.xmlpull.v1.XmlPullParser,android.preference.Preference,android.util.AttributeSet)>
<android.widget.RemoteViews.SetRemoteViewsAdapterIntent: java.lang.String getActionName()>
<android.opengl.GLLogWrapper: void glAlphaFuncx(int,int)>
<android.hardware.LegacySensorManager.LegacyListener: void onSensorChanged(android.hardware.SensorEvent)>
<android.security.keystore.DelegatingX509Certificate: byte[] getTBSCertificate()>
<android.location.LocationManager.GpsStatusListenerTransport: void onFirstFix(int)>
<android.view.IWindowSession: boolean getInTouchMode()>
<android.app.ActivityThread.ApplicationThread: void scheduleSendResult(android.os.IBinder,java.util.List)>
<android.opengl.GLLogWrapper: void glDepthRangef(float,float)>
<android.drm.DrmManagerClient.InfoHandler: void <init>(android.drm.DrmManagerClient,android.os.Looper)>
<android.widget.RadialTimePickerView.IntHolder: void <init>(int)>
<android.hardware.input.IInputManager: void tryPointerSpeed(int)>
<android.content.pm.IPackageManager: void deletePackageAsUser(java.lang.String,android.content.pm.IPackageDeleteObserver,int,int)>
<android.widget.TimePickerClockDelegate: void <init>(android.widget.TimePicker,android.content.Context,android.util.AttributeSet,int,int)>
<android.widget.TabHost.LabelAndIconIndicatorStrategy: android.view.View createIndicatorView()>
<com.android.server.ResettableTimeout: void off()>
<android.content.pm.IPackageManager: boolean isPackageAvailable(java.lang.String,int)>
<android.view.accessibility.AccessibilityCache: void checkIntegrity()>
<android.preference.GenericInflater: void <init>(android.preference.GenericInflater,android.content.Context)>
<android.widget.GridLayout.Axis: android.widget.GridLayout.Arc[] getArcs()>
<android.widget.RemoteViewsAdapter.FixedSizeRemoteViewsCache: int[] getNextIndexToLoad()>
<android.widget.Spinner.DialogPopup: boolean isShowing()>
<android.transition.Visibility.DisappearListener: void <init>(android.view.View,int,boolean)>
<android.os.Handler.MessengerImpl: void send(android.os.Message)>
<android.opengl.GLLogWrapper: void glBufferData(int,int,java.nio.Buffer,int)>
<android.view.FrameInfo: void markInputHandlingStart()>
<android.preference.GenericInflater: java.lang.Object inflate(org.xmlpull.v1.XmlPullParser,android.preference.GenericInflater.Parent,boolean)>
<android.animation.Keyframe.IntKeyframe: android.animation.Keyframe.IntKeyframe clone()>
<android.widget.RemoteViewsService.RemoteViewsFactoryAdapter: void onDataSetChanged()>
<android.appwidget.AppWidgetHostView.ParcelableSparseArray: void writeToParcel(android.os.Parcel,int)>
<android.widget.Editor.InsertionHandleView: void <init>(android.widget.Editor,android.graphics.drawable.Drawable)>
<android.opengl.GLErrorWrapper: void glBindRenderbufferOES(int,int)>
<android.opengl.EGLLogWrapper: javax.microedition.khronos.egl.EGLSurface eglGetCurrentSurface(int)>
<android.text.TextLine: android.text.TextLine recycle(android.text.TextLine)>
<android.telecom.InCallService.InCallServiceBinder: void setInCallAdapter(com.android.internal.telecom.IInCallAdapter)>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi: void resetAll()>
<android.text.PackedObjectVector: void dump()>
<android.widget.AdapterViewAnimator.CheckForTap: void run()>
<android.opengl.GLLogWrapper: void glFrontFace(int)>
<android.opengl.GLErrorWrapper: void glFogfv(int,java.nio.FloatBuffer)>
<android.app.ApplicationPackageManager: int checkSignatures(int,int)>
<android.widget.Editor.EasyEditPopupWindow: int clipVertically(int)>
<android.security.keymaster.KeymasterDateArgument: void <init>(int,android.os.Parcel)>
<android.opengl.GLLogWrapper: void glGetFixedv(int,int[],int)>
<android.opengl.GLSurfaceView.LogWriter: void close()>
<android.opengl.GLLogWrapper: void glGetMaterialxv(int,int,java.nio.IntBuffer)>
<android.animation.AnimatorSet.Node: java.lang.Object clone()>
<android.widget.RemoteViews.SetRemoteViewsAdapterList: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>
<android.app.INotificationManager: int getZenMode()>
<android.view.ViewGroup.ViewLocationHolder: void setComparisonStrategy(int)>
<android.view.ViewRootImpl.ViewPreImeInputStage: int onProcess(android.view.ViewRootImpl.QueuedInputEvent)>
<android.util.MapCollections.KeySet: int size()>
<android.appwidget.AppWidgetHost.Callbacks: void viewDataChanged(int,int)>
<android.print.PrintManager.PrintDocumentAdapterDelegate.MyWriteResultCallback: void onWriteFailed(java.lang.CharSequence)>
<android.widget.YearPickerView.YearAdapter: java.lang.Object getItem(int)>
<android.app.Activity.HostCallbacks: android.view.LayoutInflater onGetLayoutInflater()>
<android.test.PerformanceTestCase.Intermediates: void setInternalIterations(int)>
<android.widget.Editor.InsertionPointCursorController: void onDetached()>
<android.hardware.LegacySensorManager: void <init>(android.hardware.SensorManager)>
<android.opengl.GLSurfaceView.GLThread: void onPause()>
<android.text.AlteredCharSequence.AlteredSpanned: int nextSpanTransition(int,int,java.lang.Class)>
<android.opengl.GLLogWrapper: void glColor4f(float,float,float,float)>
<android.location.LocationManager.GpsStatusListenerTransport: void onNmeaReceived(long,java.lang.String)>
<android.widget.DatePickerCalendarDelegate: java.util.Calendar getMinDate()>
<android.filterfw.core.GenerateProgramPort: java.lang.String name()>
<android.opengl.GLErrorWrapper: void glOrthof(float,float,float,float,float,float)>
<android.app.EnterTransitionCoordinator: void stop()>
<android.widget.Spinner.DropDownAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>
<android.net.NetworkFactory.NetworkRequestInfo: void <init>(android.net.NetworkFactory,android.net.NetworkRequest,int)>
<android.accounts.AccountManager.AmsTask: java.lang.Object getResult(long,java.util.concurrent.TimeUnit)>
<android.net.NetworkInfo.State: android.net.NetworkInfo.State valueOf(java.lang.String)>
<android.graphics.drawable.RippleComponent.RenderNodeAnimatorSet: void clear()>
<android.opengl.GLSurfaceView.ComponentSizeChooser: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[])>
<android.app.BackStackRecord: android.app.FragmentTransaction add(int,android.app.Fragment)>
<android.app.INotificationManager: void setNotificationsShownFromListener(android.service.notification.INotificationListener,java.lang.String[])>
<android.widget.DayPickerView: long getDate()>
<android.opengl.GLLogWrapper: void glLightModelfv(int,java.nio.FloatBuffer)>
<android.location.GpsNavigationMessageListenerTransport.ListenerTransport: void onStatusChanged(int)>
<android.gesture.GestureLibraries.FileGestureLibrary: boolean save()>
<android.widget.RtlSpacingHelper: int getLeft()>
<android.view.ViewRootImpl.InputStage: void onDeliverToNext(android.view.ViewRootImpl.QueuedInputEvent)>
<android.speech.tts.SilencePlaybackQueueItem: void run()>
<android.opengl.GLLogWrapper: void glMatrixMode(int)>
<android.opengl.GLLogWrapper: void glDrawTexfvOES(float[],int)>
<android.content.pm.IPackageManager: boolean setDefaultBrowserPackageName(java.lang.String,int)>
<android.app.ApplicationPackageManager: android.content.pm.KeySet getKeySetByAlias(java.lang.String,java.lang.String)>
<android.view.ViewGroup.ViewLocationHolder: void recycle()>
<android.widget.TimePickerClockDelegate: int getCurrentMinute()>
<android.util.XmlPullAttributes: float getAttributeFloatValue(int,float)>
<android.opengl.GLErrorWrapper: void glStencilOp(int,int,int)>
<android.opengl.GLErrorWrapper: void glGenFramebuffersOES(int,java.nio.IntBuffer)>
<android.widget.NumberPicker.AccessibilityNodeProviderImpl: void sendAccessibilityEventForVirtualView(int,int)>
<android.widget.Editor.CorrectionHighlighter: void draw(android.graphics.Canvas,int)>
<android.print.PrinterDiscoverySession.PrinterDiscoveryObserver: void <init>(android.print.PrinterDiscoverySession)>
<android.widget.DatePicker.DatePickerSpinnerDelegate: java.util.Calendar getMaxDate()>
<android.opengl.GLSurfaceView.EglHelper: java.lang.String formatEglError(java.lang.String,int)>
<android.widget.SuggestionsAdapter: java.lang.String getColumnString(android.database.Cursor,java.lang.String)>
<android.text.HtmlToSpannedConverter.Font: void <init>(java.lang.String,java.lang.String)>
<android.view.ViewRootImpl.WindowInputEventReceiver: void <init>(android.view.ViewRootImpl,android.view.InputChannel,android.os.Looper)>
<android.widget.Spinner.SpinnerPopup: void setBackgroundDrawable(android.graphics.drawable.Drawable)>
<android.inputmethodservice.IInputMethodWrapper: void <init>(android.inputmethodservice.AbstractInputMethodService,android.view.inputmethod.InputMethod)>
<android.util.MapCollections.EntrySet: int hashCode()>
<android.text.format.TimeFormatter: java.lang.String format(java.lang.String,libcore.util.ZoneInfo.WallTime,libcore.util.ZoneInfo)>
<android.webkit.WebSettings.RenderPriority: android.webkit.WebSettings.RenderPriority valueOf(java.lang.String)>
<android.widget.Editor.InsertionHandleView: int getCursorOffset()>
<android.widget.Editor.PositionListener: void onScrollChanged()>
<android.hardware.location.IFusedLocationHardware: void injectDeviceContext(int)>
<android.opengl.GLErrorWrapper: int glQueryMatrixxOES(java.nio.IntBuffer,java.nio.IntBuffer)>
<android.inputmethodservice.IInputMethodWrapper: void attachToken(android.os.IBinder)>
<android.animation.PropertyValuesHolder.FloatPropertyValuesHolder: void <init>(java.lang.String,float[])>
<android.app.DownloadManager.CursorTranslator: long getLong(int)>
<android.opengl.GLLogWrapper: void glWeightPointerOES(int,int,int,java.nio.Buffer)>
<android.opengl.GLErrorWrapper: void glDeleteRenderbuffersOES(int,int[],int)>
<android.telecom.ConnectionServiceAdapterServant: void <init>(com.android.internal.telecom.IConnectionServiceAdapter)>
<android.security.keystore.AndroidKeyStoreUnauthenticatedAESCipherSpi: int engineGetOutputSize(int)>
<android.view.Surface.CompatibleCanvas: void getMatrix(android.graphics.Matrix)>
<android.net.Uri.OpaqueUri: java.lang.String getEncodedUserInfo()>
<android.widget.GridLayout.Interval: boolean equals(java.lang.Object)>
<android.opengl.GLLogWrapper: void glReadPixels(int,int,int,int,int,int,java.nio.Buffer)>
<android.graphics.AvoidXfermode.Mode: android.graphics.AvoidXfermode.Mode valueOf(java.lang.String)>
<android.view.ViewDebug.CapturedViewProperty: boolean retrieveReturn()>
<android.view.ViewRootImpl.W: void dispatchAppVisibility(boolean)>
<android.widget.DatePickerCalendarDelegate: boolean isEnabled()>
<android.widget.RemoteViews.SetRemoteViewsAdapterList: void writeToParcel(android.os.Parcel,int)>
<android.widget.ExpandableListConnector.PositionMetadata: void recycle()>
<android.content.pm.IPackageManager: boolean isUpgrade()>
<android.view.IWindowManager: void overridePendingAppTransition(java.lang.String,int,int,android.os.IRemoteCallback)>
<android.security.keymaster.KeymasterIntArgument: void writeValue(android.os.Parcel)>
<android.animation.PathKeyframes: void <init>(android.graphics.Path,float)>
<android.app.IWallpaperManager: int getWidthHint()>
<android.media.RemoteController.RcDisplay: void setArtwork(int,android.graphics.Bitmap)>
<android.app.ActivityThread.ActivityClientRecord: boolean isPreHoneycomb()>
<android.widget.Editor.SelectionStartHandleView: void <init>(android.widget.Editor,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)>
<android.opengl.EGLLogWrapper: void <init>(javax.microedition.khronos.egl.EGL,int,java.io.Writer)>
<android.widget.RemoteViews.ViewGroupAction: void setBitmapCache(android.widget.RemoteViews.BitmapCache)>
<android.opengl.GLLogWrapper: void glGetFramebufferAttachmentParameterivOES(int,int,int,int[],int)>
<android.media.MediaScanner.WplHandler: void end()>
<android.graphics.drawable.RippleComponent: android.graphics.drawable.RippleComponent.RenderNodeAnimatorSet createHardwareExit(android.graphics.Paint)>
<android.hardware.camera2.ICameraDeviceUser: int endConfigure(boolean)>
<android.app.Activity.HostCallbacks: android.view.View onFindViewById(int)>
<android.net.Uri.HierarchicalUri: java.lang.String getFragment()>
<android.filterfw.core.StopWatch: void <init>(java.lang.String)>
<android.view.ViewRootImpl.InputStage: void <init>(android.view.ViewRootImpl,android.view.ViewRootImpl.InputStage)>
<android.app.ActivityThread.DropBoxReporter: void <init>(android.app.ActivityThread)>
<android.app.ContextImpl: android.content.Context createPackageContext(java.lang.String,int)>
<android.app.ContextImpl: void sendStickyBroadcast(android.content.Intent)>
<android.opengl.GLErrorWrapper: void glTexCoordPointer(int,int,int,java.nio.Buffer)>
<android.media.WebVttRenderingWidget.RegionLayout: android.media.TextTrackRegion getRegion()>
<com.android.server.ResettableTimeout: void cancel()>
<android.widget.RemoteViews.BitmapCache: void assimilate(android.widget.RemoteViews.BitmapCache)>
<android.os.CommonTimeUtils: int transactSetString(int,java.lang.String)>
<android.widget.Editor.ProcessTextIntentActionsHandler: boolean performAccessibilityAction(int)>
<android.animation.Keyframe.FloatKeyframe: java.lang.Object getValue()>
<android.content.pm.IPackageManager: void installPackageAsUser(java.lang.String,android.content.pm.IPackageInstallObserver2,int,java.lang.String,android.content.pm.VerificationParams,java.lang.String,int)>
<android.media.CCParser.StyleCode: java.lang.String toString()>
<android.text.TextUtils.TruncateAt: android.text.TextUtils.TruncateAt[] values()>
<android.view.IWindowSession: void setTransparentRegion(android.view.IWindow,android.graphics.Region)>
<android.util.MapCollections.MapIterator: boolean hasNext()>
<android.opengl.GLErrorWrapper: void glEnableClientState(int)>
<android.widget.SimpleMonthView: void <init>(android.content.Context,android.util.AttributeSet)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.NoPadding: void initAlgorithmSpecificParameters(java.security.spec.AlgorithmParameterSpec)>
<android.opengl.GLLogWrapper: void glMultiTexCoord4f(int,float,float,float,float)>
<android.widget.RemoteViewsAdapter.RemoteViewsAdapterServiceConnection: void bind(android.content.Context,int,android.content.Intent)>
<android.widget.TimePickerSpinnerDelegate: boolean is24HourView()>
<android.widget.Editor.InsertionHandleView: void updatePosition(float,float)>
<android.security.keystore.AndroidKeyStoreSignatureSpiBase: int getAdditionalEntropyAmountForSign()>
<android.opengl.GLLogWrapper: void glMultMatrixf(java.nio.FloatBuffer)>
<android.hardware.input.IInputManager: void vibrate(int,long[],int,android.os.IBinder)>
<android.security.IKeystoreService: long getmtime(java.lang.String)>
<android.opengl.GLSurfaceView.GLThreadManager: boolean shouldTerminateEGLWhenPausing()>
<android.os.RemoteCallback.DeliverResult: void run()>
<android.view.ViewRootImpl.NativePostImeInputStage: void onFinishedInputEvent(java.lang.Object,boolean)>
<android.view.ViewPropertyAnimatorRT: boolean startAnimation(android.view.ViewPropertyAnimator)>
<android.database.ContentObserver.NotificationRunnable: void run()>
<android.widget.Editor.SuggestionsPopupWindow.SuggestionAdapter: java.lang.Object getItem(int)>
<android.widget.CalendarViewMaterialDelegate: int getWeekDayTextAppearance()>
<android.opengl.GLErrorWrapper: void glTexEnviv(int,int,java.nio.IntBuffer)>
<android.media.SoundPool.EventHandler: void handleMessage(android.os.Message)>
<android.opengl.EGLLogWrapper: boolean eglGetConfigs(javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLConfig[],int,int[])>
<android.hardware.input.IInputManager: android.view.InputDevice getInputDevice(int)>
<android.security.IKeystoreService: int lock(int)>
<android.view.ViewOverlay.OverlayViewGroup: void remove(android.view.View)>
<android.opengl.GLErrorWrapper: void glDrawTexsOES(short,short,short,short,short)>
<android.media.CCParser.CCData: java.lang.String toString()>
<android.app.ExitTransitionCoordinator: void notifyComplete()>
<android.preference.MultiCheckPreference.SavedState: void writeToParcel(android.os.Parcel,int)>
<android.app.SystemServiceRegistry.CachedServiceFetcher: java.lang.Object createService(android.app.ContextImpl)>
<android.content.pm.IPackageManager: int getPrivateFlagsForUid(int)>
<android.app.ApplicationPackageManager: android.content.pm.VerifierDeviceIdentity getVerifierDeviceIdentity()>
<android.app.IWallpaperManager: void setDisplayPadding(android.graphics.Rect,java.lang.String)>
<android.view.LayoutInflater.FactoryMerger: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>
<android.security.keymaster.KeymasterBlobArgument: void <init>(int,android.os.Parcel)>
<android.opengl.GLLogWrapper: void glTexEnvxv(int,int,int[],int)>
<android.app.INotificationManager: boolean getPackagePeekable(java.lang.String,int)>
<android.transition.TransitionManager.MultiListener: void onViewAttachedToWindow(android.view.View)>
<android.app.LoadedApk.WarningContextClassLoader: void setDefaultAssertionStatus(boolean)>
<android.app.INotificationManager: void unregisterListener(android.service.notification.INotificationListener,int)>
<android.widget.RemoteViews.TextViewDrawableAction: void writeToParcel(android.os.Parcel,int)>
<android.net.Uri.OpaqueUri: android.net.Uri readFrom(android.os.Parcel)>
<android.widget.NumberPicker.PressedStateHelper: void cancel()>
<android.view.IWindowManager: android.view.IWindowSession openSession(android.view.IWindowSessionCallback,com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext)>
<android.widget.YearPickerView: void setSelectionCentered(int)>
<android.opengl.GLErrorWrapper: boolean glIsEnabled(int)>
<android.graphics.PathDashPathEffect.Style: android.graphics.PathDashPathEffect.Style[] values()>
<android.media.ImageReader.SurfaceImage: int getFormat()>
<android.media.MediaCodec.BufferMap: void clear()>
<android.opengl.GLErrorWrapper: void glFogfv(int,float[],int)>
<android.location.LocalListenerHelper: void unregisterFromServer()>
<android.content.pm.IPackageManager: boolean hasSystemFeature(java.lang.String)>
<android.app.SystemServiceRegistry: java.lang.Object[] createServiceCache()>
<android.security.keystore.AndroidKeyStoreAuthenticatedAESCipherSpi.BufferAllOutputUntilDoFinalStreamer: long getConsumedInputSizeBytes()>
<android.opengl.GLLogWrapper: void glLoadMatrixf(float[],int)>
<android.test.AndroidTestCase: void setContext(android.content.Context)>
<android.animation.KeyframeSet: android.animation.KeyframeSet ofKeyframe(android.animation.Keyframe[])>
<android.app.Instrumentation.Idler: void waitForIdle()>
<android.view.Choreographer.CallbackRecord: void run(long)>
<android.widget.ProgressBar.RefreshData: void recycle()>
<android.opengl.GLLogWrapper: void glStencilFunc(int,int,int)>
<android.widget.AppSecurityPermissions.MyPermissionGroupInfo: android.graphics.drawable.Drawable loadGroupIcon(android.content.Context,android.content.pm.PackageManager)>
<android.util.MapCollections: int colIndexOfKey(java.lang.Object)>
<android.widget.Editor.SelectionEndHandleView: int getHorizontalGravity(boolean)>
<android.widget.TextView.CharWrapper: void getChars(int,int,char[],int)>
<android.opengl.GLErrorWrapper: void glFrustumf(float,float,float,float,float,float)>
<android.view.accessibility.AccessibilityCache: android.view.accessibility.AccessibilityNodeInfo getNode(int,long)>
<android.animation.AnimatorSet.Node: void <init>(android.animation.Animator)>
<android.widget.CursorFilter: android.widget.Filter.FilterResults performFiltering(java.lang.CharSequence)>
<android.widget.TimePickerClockDelegate.SavedState: int getCurrentItemShowing()>
<android.app.ContextImpl: void sendStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>
<android.widget.Editor.HandleView: void updateDrawable()>
<android.speech.SpeechRecognizer.InternalListener: void onEndOfSpeech()>
<android.content.pm.IPackageManager: boolean canForwardTo(android.content.Intent,java.lang.String,int,int)>
<android.util.Xml.Encoding: android.util.Xml.Encoding[] values()>
<android.widget.CursorAdapter.MyDataSetObserver: void onInvalidated()>
<android.media.WebVttRenderingWidget.CueLayout: void measureForParent(int,int)>
<android.speech.SpeechRecognizer.InternalListener: void onReadyForSpeech(android.os.Bundle)>
<android.security.keystore.AndroidKeyStoreRSACipherSpi.OAEPWithMGF1Padding: int getAdditionalEntropyAmountForFinish()>
<android.app.SystemServiceRegistry.StaticOuterContextServiceFetcher: java.lang.Object getService(android.app.ContextImpl)>
<android.content.pm.IPackageManager: void finishPackageInstall(int)>
<android.widget.AbsListView.InputConnectionWrapper: java.lang.CharSequence getTextAfterCursor(int,int)>
<android.app.ActivityTransitionCoordinator: boolean cancelPendingTransitions()>
<android.widget.YearPickerView: void setOnYearSelectedListener(android.widget.YearPickerView.OnYearSelectedListener)>
<android.view.ViewOverlay.OverlayViewGroup: void remove(android.graphics.drawable.Drawable)>
<android.location.ILocationManager: java.lang.String getFromLocationName(java.lang.String,double,double,double,double,int,android.location.GeocoderParams,java.util.List)>
<android.widget.Editor.CorrectionHighlighter: void highlight(android.view.inputmethod.CorrectionInfo)>
<android.view.IWindowManager: float getAnimationScale(int)>
<android.opengl.GLSurfaceView.DefaultContextFactory: void destroyContext(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay,javax.microedition.khronos.egl.EGLContext)>
<android.widget.RadialTimePickerView.RadialPickerTouchHelper: void getVisibleVirtualViews(android.util.IntArray)>
<android.widget.Editor.SelectionModifierCursorController: void enterDrag()>
<android.app.IWallpaperManager: boolean isWallpaperSupported(java.lang.String)>
<android.widget.Editor.SelectionModifierCursorController: int getMinTouchOffset()>
<android.app.ReceiverRestrictedContext: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>
<android.media.SubtitleTrack.CueList: void add(android.media.SubtitleTrack.Cue)>
<android.app.ContextImpl: boolean deleteFile(java.lang.String)>
<android.location.ILocationManager: boolean isProviderEnabled(java.lang.String)>
<android.transition.TranslationAnimationCreator.TransitionPositionListener: void onTransitionResume(android.transition.Transition)>
<android.widget.ListPopupWindow.DropDownListView: boolean hasWindowFocus()>
<android.opengl.GLLogWrapper: int glGetError()>
<android.app.MediaRouteButton.MediaRouterCallback: void onRouteSelected(android.media.MediaRouter,int,android.media.MediaRouter.RouteInfo)>
<android.preference.GenericInflater: java.lang.Object inflate(int,android.preference.GenericInflater.Parent)>
<android.text.SpannableStringInternal: int nextSpanTransition(int,int,java.lang.Class)>
<android.speech.SpeechRecognizer.InternalListener: void onError(int)>
<android.animation.KeyframeSet: android.animation.PathKeyframes ofPath(android.graphics.Path)>
<android.app.ApplicationPackageManager: void handlePackageBroadcast(int,java.lang.String[],boolean)>
<android.security.IKeystoreService: android.security.keymaster.ExportResult exportKey(java.lang.String,int,android.security.keymaster.KeymasterBlob,android.security.keymaster.KeymasterBlob)>
<android.widget.AdapterView.AdapterDataSetObserver: void onInvalidated()>
<android.animation.Keyframe.FloatKeyframe: android.animation.Keyframe clone()>
<android.hardware.input.IInputManager: int[] getInputDeviceIds()>
<android.widget.TextView.CharWrapper: int getTextWidths(int,int,float[],android.graphics.Paint)>
<android.view.IWindowManager: void lockNow(android.os.Bundle)>
<android.animation.BidirectionalTypeConverter.InvertedConverter: java.lang.Object convert(java.lang.Object)>
<android.widget.AbsListView.MultiChoiceModeWrapper: boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu)>
<android.opengl.GLErrorWrapper: void glTexGeniv(int,int,int[],int)>
<android.app.ApplicationPackageManager: void configurationChanged()>
<android.security.keystore.AndroidKeyStoreRSACipherSpi: int getModulusSizeBytes()>
<android.view.IWindowSession: android.os.Bundle sendWallpaperCommand(android.os.IBinder,java.lang.String,int,int,int,android.os.Bundle,boolean)>
<android.widget.Editor.SuggestionsPopupWindow: void onItemClick(android.widget.AdapterView,android.view.View,int,long)>
<android.net.ConnectivityManager.CallbackHandler: void handleMessage(android.os.Message)>
<android.transition.Visibility.DisappearListener: void onAnimationPause(android.animation.Animator)>
<android.net.Uri.HierarchicalUri: java.lang.String getPath()>
<android.widget.Filter.RequestHandler: void handleMessage(android.os.Message)>
<android.database.ContentObserver.Transport: void <init>(android.database.ContentObserver)>
<android.util.MapCollections: void colPut(java.lang.Object,java.lang.Object)>
<android.widget.TimePicker.AbstractTimePickerDelegate: void onValidationChanged(boolean)>
<android.widget.DatePickerCalendarDelegate: int getYear()>
<android.view.MenuInflater.MenuState: void resetGroup()>
<android.nfc.tech.BasicTagTechnology: void connect()>
<android.view.IWindowManager: void setForcedDisplaySize(int,int,int)>
<android.widget.CalendarViewLegacyDelegate: void setWeekNumberColor(int)>
<android.widget.Toolbar.ExpandedActionViewMenuPresenter: boolean collapseItemActionView(com.android.internal.view.menu.MenuBuilder,com.android.internal.view.menu.MenuItemImpl)>
<android.content.pm.IPackageManager: int checkSignatures(java.lang.String,java.lang.String)>
<android.content.res.XmlBlock.Parser: void setInput(java.io.Reader)>
<android.content.pm.IPackageManager: int getApplicationEnabledSetting(java.lang.String,int)>
<android.widget.RemoteViews.SetPendingIntentTemplate: void apply(android.view.View,android.view.ViewGroup,android.widget.RemoteViews.OnClickHandler)>
<android.opengl.GLErrorWrapper: void glWeightPointerOES(int,int,int,java.nio.Buffer)>
<android.view.ViewRootImpl.TakenSurfaceHolder: void setFormat(int)>
<android.app.DownloadManager.CursorTranslator: int getInt(int)>
<android.bluetooth.BluetoothHealth.BluetoothHealthCallbackWrapper: void onHealthAppConfigurationStatusChange(android.bluetooth.BluetoothHealthAppConfiguration,int)>
<android.media.MediaCodec.PersistentSurface: void release()>
<android.view.IWindowManager: void disableKeyguard(android.os.IBinder,java.lang.String)>
<android.view.IWindowManager: void getBaseDisplaySize(int,android.graphics.Point)>
<android.media.MediaPlayer.TimeProvider: void onNewPlayer()>
<android.media.MediaCodec.BufferMap: void put(int,java.nio.ByteBuffer)>
<android.opengl.GLLogWrapper: void glDeleteTextures(int,java.nio.IntBuffer)>
<android.widget.Spinner.DropdownPopup: java.lang.CharSequence getHintText()>
<android.location.ILocationManager: void reportLocation(android.location.Location,boolean)>
<android.test.InstrumentationTestSuite: void <init>(java.lang.Class,android.app.Instrumentation)>
<android.speech.tts.EventLogTags: void writeTtsV2SpeakFailure(java.lang.String,int,int,int,java.lang.String,int)>
<android.app.ActivityTransitionCoordinator: android.transition.Transition mergeTransitions(android.transition.Transition,android.transition.Transition)>
<android.widget.Toolbar.ExpandedActionViewMenuPresenter: boolean onSubMenuSelected(com.android.internal.view.menu.SubMenuBuilder)>
<android.opengl.GLLogWrapper: void glClearColor(float,float,float,float)>
<android.app.LoaderManagerImpl.LoaderInfo: java.lang.String toString()>
<android.app.ContextImpl: void removeStickyBroadcastAsUser(android.content.Intent,android.os.UserHandle)>
<android.media.WebVttRenderingWidget.SpanLayout: void setCaptionStyle(android.view.accessibility.CaptioningManager.CaptionStyle,float)>
<android.util.Xml.Encoding: android.util.Xml.Encoding valueOf(java.lang.String)>
<android.widget.DayPickerPagerAdapter: boolean isViewFromObject(android.view.View,java.lang.Object)>
<android.opengl.GLLogWrapper: void glBlendFuncSeparate(int,int,int,int)>
<android.widget.RemoteViews.SetRemoteViewsAdapterList: java.lang.String getActionName()>
<android.graphics.Picture.RecordingCanvas: void setBitmap(android.graphics.Bitmap)>
<android.view.AccessibilityIterators.ParagraphTextSegmentIterator: int[] preceding(int)>
<android.widget.AbsListView.MultiChoiceModeWrapper: boolean onCreateActionMode(android.view.ActionMode,android.view.Menu)>
<android.app.WallpaperManager.Globals: android.graphics.Bitmap peekWallpaperBitmap(android.content.Context,boolean)>
<android.transition.Fade.FadeAnimatorListener: void onAnimationEnd(android.animation.Animator)>
<android.security.keystore.DelegatingX509Certificate: java.util.Set getCriticalExtensionOIDs()>
<android.os.StrictMode.AndroidBlockGuardPolicy: void setPolicyMask(int)>
<android.inputmethodservice.ExtractButton: void <init>(android.content.Context)>
<android.animation.StateListAnimator.StateListAnimatorConstantState: void <init>(android.animation.StateListAnimator)>
<android.opengl.GLErrorWrapper: void glGetTexParameterxv(int,int,int[],int)>
<android.media.DecoderCapabilities.VideoDecoder: android.media.DecoderCapabilities.VideoDecoder[] values()>
<android.widget.TimePickerClockDelegate: int getCurrentHour()>
<android.widget.CalendarViewMaterialDelegate: void setOnDateChangeListener(android.widget.CalendarView.OnDateChangeListener)>
<android.widget.Spinner.SpinnerPopup: void setHorizontalOffset(int)>
<android.view.ViewDebug.ExportedProperty: android.view.ViewDebug.IntToString[] mapping()>
<android.widget.ExpandableListConnector: void setMaxExpGroupCount(int)>
<android.view.IWindowSession: void dragRecipientExited(android.view.IWindow)>
<android.widget.SlidingDrawer.SlidingHandler: void handleMessage(android.os.Message)>
<android.graphics.Region.Op: android.graphics.Region.Op valueOf(java.lang.String)>
<android.speech.tts.AbstractSynthesisCallback: void stop()>
<android.app.ContextImpl: void sendBroadcast(android.content.Intent,java.lang.String)>
<android.widget.AbsListView.InputConnectionWrapper: boolean endBatchEdit()>
<android.app.INotificationManager: boolean setZenModeConfig(android.service.notification.ZenModeConfig,java.lang.String)>
<android.hardware.LegacySensorManager: boolean registerListener(android.hardware.SensorListener,int,int)>
<android.view.IWindowManager: void setOverscan(int,int,int,int,int)>
<android.animation.KeyframeSet: android.animation.KeyframeSet ofFloat(float[])>
